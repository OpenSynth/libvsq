result.add("a-\tb-\ts", "eI\tb i:\te s");
result.add("a-\tba-\tba", "V\tb Q\tb V");
result.add("a-\tba-\tco", "{\tb V\tk @U");
result.add("a-\tba-\tcus", "{\tb V\tk V s");
result.add("a-\tba-\tlo-\tne", "{\tb V\tl @U\tn i:");
result.add("a-\tba-\tted", "V\tb eI\tt V d");
result.add("a-\tba-\tting", "V\tb eI\tt I N");
result.add("a-\tback", "V\tb { k");
result.add("a-\tbad", "V\tb Q d");
result.add("a-\tban-\tdo-\tning", "V\tb { n\td V\tn I N");
result.add("a-\tban-\tdon", "V\tb { n\td V n");
result.add("a-\tban-\tdon-\tment", "V\tb { n\td V n\tm V n t");
result.add("a-\tban-\tdon-\tments", "V\tb { n\td V n\tm V n t s");
result.add("a-\tban-\tdoned", "V\tb { n\td V n d");
result.add("a-\tban-\tdons", "V\tb { n\td V n z");
result.add("a-\tbash", "V\tb { S");
result.add("a-\tbashed", "V\tb { S t");
result.add("a-\tbate", "V\tb eI t");
result.add("a-\tbate-\tment", "V\tb eI t\tm V n t");
result.add("a-\tbate-\tments", "V\tb eI t\tm V n t s");
result.add("a-\tbates", "V\tb eI t s");
result.add("a-\tbbas", "V\tb Q s");
result.add("a-\tbe-\tlard", "{\tb V\tl @r d");
result.add("a-\tbe-\tyance", "V\tb eI\tV n s");
result.add("a-\tbed", "V\tb e d");
result.add("a-\tbel", "eI\tb V l");
result.add("a-\tbel-\tson", "{\tb V l\ts V n");
result.add("a-\tbele", "V\tb i: l");
result.add("a-\tbeles", "V\tb i: l z");
result.add("a-\tbell", "eI\tb V l");
result.add("a-\tbend", "{\tb e n d");
result.add("a-\tber-\tdeen", "{\tb @r\td i: n");
result.add("a-\tber-\tna-\tthy", "{\tb @r\tn {\tT i:");
result.add("a-\tber-\tne-\tthy", "{\tb @r\tn e\tT i:");
result.add("a-\tber-\tra-\ttio-\tnal", "{\tb @r\teI\tS V\tn V l");
result.add("a-\tber-\tra-\ttion", "{\tb @r\teI\tS V n");
result.add("a-\tber-\tra-\ttions", "{\tb @r\teI\tS V n z");
result.add("a-\tber-\trant", "{\tb e@\tV n t");
result.add("a-\tberc-\trom-\tbie", "{\tb @r k\tr Q m\tb i:");
result.add("a-\tbert", "{\tb @r t");
result.add("a-\tbet", "V\tb e t");
result.add("a-\tbet-\tted", "V\tb e\tt V d");
result.add("a-\tbet-\tting", "V\tb e\tt I N");
result.add("a-\tbhor", "{ b\th O@");
result.add("a-\tbhor-\trence", "V b\th O@\tV n s");
result.add("a-\tbhor-\trent", "{ b\th O@\tV n t");
result.add("a-\tbhorred", "V b\th O@ d");
result.add("a-\tbhors", "V b\th O@ z");
result.add("a-\tbi-\tded", "V\tb aI\td V d");
result.add("a-\tbi-\tding", "V\tb aI\td I N");
result.add("a-\tbi-\tgail", "{\tb I\tg eI l");
result.add("a-\tbi-\tlene", "{\tb I\tl i: n");
result.add("a-\tbi-\tli-\tties", "V\tb I\tl V\tt i: z");
result.add("a-\tbi-\tli-\tty", "V\tb I\tl V\tt i:");
result.add("a-\tbi-\tti-\tbi", "{\tb I\tt i:\tb i:");
result.add("a-\tbid", "eI\tb I d");
result.add("a-\tbide", "V\tb aI d");
result.add("a-\tbides", "V\tb aI d z");
result.add("a-\tbie", "{\tb i:");
result.add("a-\tbing-\tton", "{\tb I N\tt V n");
result.add("a-\tbo", "Q\tb @U");
result.add("a-\tbo-\tli-\tshes", "V\tb Q\tl I\tS V z");
result.add("a-\tbo-\tli-\tshing", "V\tb Q\tl I\tS I N");
result.add("a-\tbo-\tli-\ttio-\tni-\tsm", "{\tb V\tl I\tS V\tn I\tz V m");
result.add("a-\tbo-\tli-\ttio-\tnist", "{\tb V\tl I\tS V\tn V s t");
result.add("a-\tbo-\tli-\ttio-\tnists", "{\tb V\tl I\tS V\tn V s t s");
result.add("a-\tbo-\tli-\ttion", "{\tb V\tl I\tS V n");
result.add("a-\tbo-\tlish", "V\tb Q\tl I S");
result.add("a-\tbo-\tlished", "V\tb Q\tl I S t");
result.add("a-\tbo-\tmi-\tna-\tble", "V\tb Q\tm V\tn V\tb V l");
result.add("a-\tbo-\tmi-\tna-\ttion", "V\tb Q\tm V\tn eI\tS V n");
result.add("a-\tbo-\tri-\tgi-\tnal", "{\tb @r\tI\tdZ I\tn V l");
result.add("a-\tbo-\tri-\tgi-\tne", "{\tb @r\tI\tdZ I\tn i:");
result.add("a-\tbo-\tri-\tgi-\tnes", "{\tb @r\tI\tdZ I\tn i: z");
result.add("a-\tboard", "V\tb O@ d");
result.add("a-\tbode", "V\tb @U d");
result.add("a-\tbor-\tted", "V\tb O@\tt V d");
result.add("a-\tbor-\tti-\tfa-\tcient", "V\tb O@\tt V\tf eI\tS V n t");
result.add("a-\tbor-\tti-\tfa-\tcients", "V\tb O@\tt V\tf eI\tS V n t s");
result.add("a-\tbor-\tting", "V\tb O@\tt I N");
result.add("a-\tbor-\ttio-\tnist", "V\tb O@\tS V\tn V s t");
result.add("a-\tbor-\ttio-\tnists", "V\tb O@\tS V\tn V s t s");
result.add("a-\tbor-\ttion", "V\tb O@\tS V n");
result.add("a-\tbor-\ttions", "V\tb O@\tS V n z");
result.add("a-\tbor-\ttive", "V\tb O@\tt I v");
result.add("a-\tborn", "V\tb O@ n");
result.add("a-\tbort", "V\tb O@ t");
result.add("a-\tbo's", "Q\tb @U z");
result.add("a-\tbott", "V\tb Q t");
result.add("a-\tboun-\tded", "V\tb aU n\td V d");
result.add("a-\tboun-\tding", "V\tb aU n\td I N");
result.add("a-\tbound", "V\tb aU n d");
result.add("a-\tbounds", "V\tb aU n d z");
result.add("a-\tbout", "V\tb aU t");
result.add("a-\tbove", "V\tb V v");
result.add("a-\tbove-\tboard", "V\tb V v\tb O@ d");
result.add("a-\tbu", "{\tb u:");
result.add("a-\tbu-\tser", "V b\tj u:\tz @r");
result.add("a-\tbu-\tsers", "V b\tj u:\tz @r z");
result.add("a-\tbu-\tses", "V b\tj u:\ts V z");
result.add("a-\tbu-\tsing", "V b\tj u:\tz I N");
result.add("a-\tbu-\tsive", "V b\tj u:\ts I v");
result.add("a-\tbun-\tdance", "V\tb V n\td V n s");
result.add("a-\tbun-\tdant", "V\tb V n\td V n t");
result.add("a-\tbun-\tdant-\tly", "V\tb V n\td V n\tt l i:");
result.add("a-\tbuse", "V b\tj u: s");
result.add("a-\tbused", "V b\tj u: z d");
result.add("a-\tbut", "V\tb V t");
result.add("a-\tbut-\tted", "V\tb V\tt V d");
result.add("a-\tbut-\tting", "V\tb V\tt I N");
result.add("a-\tbuts", "V\tb V t s");
result.add("a-\tbuzz", "V\tb V z");
result.add("a-\tbys-\tmal", "V\tb I z\tm V l");
result.add("a-\tbys-\tmal-\tly", "V\tb I z\tm V\tl i:");
result.add("a-\tbyss", "V\tb I s");
result.add("a-\tc", "eI\ts i:");
result.add("a-\tca-\tcia", "V\tk eI\tS V");
result.add("a-\tca-\tde-\tmi-\ta", "{\tk V\td i:\tm i:\tV");
result.add("a-\tca-\tde-\tmi-\tcally", "{\tk V\td e\tm I k\tl i:");
result.add("a-\tca-\tde-\tmi-\tcian", "{\tk V\td V\tm I\tS V n");
result.add("a-\tca-\tde-\tmi-\tcians", "{\tk V\td V\tm I\tS V n z");
result.add("a-\tca-\tde-\tmic", "{\tk V\td e\tm I k");
result.add("a-\tca-\tde-\tmics", "{\tk V\td e\tm I k s");
result.add("a-\tca-\tde-\tmies", "V\tk {\td V\tm i: z");
result.add("a-\tca-\tde-\tmy", "V\tk {\td V\tm i:");
result.add("a-\tca-\tde-\tmy's", "V\tk {\td V\tm i: z");
result.add("a-\tca-\tdeme", "{\tk V\td i: m");
result.add("a-\tca-\tdi-\ta", "V\tk eI\td i:\tV");
result.add("a-\tca-\tpul-\tco", "{\tk V\tp U l\tk @U");
result.add("a-\tcan-\ttha", "Q\tk Q n\tD V");
result.add("a-\tccre-\tdi-\tting", "V k\tr e\td V\tt I N");
result.add("a-\tce-\tta-\tmi-\tno-\tphen", "V\ts i:\tt V\tm I\tn V\tf V n");
result.add("a-\tce-\ttate", "{\ts V\tt eI t");
result.add("a-\tce-\ttic", "V\ts e\tt I k");
result.add("a-\tce-\ttone", "{\ts V\tt @U n");
result.add("a-\tce-\tty-\tlene", "V\ts e\tt V\tl i: n");
result.add("a-\tce-\ttyl-\tcho-\tline", "V\ts e\tt V l\tk @U\tl i: n");
result.add("a-\tce-\tve-\tdo", "{\ts V\tv eI\td @U");
result.add("a-\tcer-\tbic", "V\ts e@\tb I k");
result.add("a-\tcer-\tra", "V\ts e@\tV");
result.add("a-\tces", "eI\ts V z");
result.add("a-\tcey", "eI\ts i:");
result.add("a-\tche-\tbe", "Q\ttS eI\tb i:");
result.add("a-\tche-\tson", "{\ttS V\ts V n");
result.add("a-\tchie-\tva-\tble", "V\ttS i:\tv V\tb V l");
result.add("a-\tchie-\tver", "V\ttS i:\tv @r");
result.add("a-\tchie-\tvers", "V\ttS i:\tv @r z");
result.add("a-\tchie-\tving", "V\ttS i:\tv I N");
result.add("a-\tchieve", "V\ttS i: v");
result.add("a-\tchieve-\tment", "V\ttS i: v\tm V n t");
result.add("a-\tchieve-\tments", "V\ttS i: v\tm V n t s");
result.add("a-\tchieved", "V\ttS i: v d");
result.add("a-\tchieves", "V\ttS i: v z");
result.add("a-\tchil-\tle", "V\tk I\tl i:");
result.add("a-\tchil-\tles", "V\tk I\tl i: z");
result.add("a-\tchil-\tles'", "V\tk I\tl i: z");
result.add("a-\tching", "eI\tk I N");
result.add("a-\tchmed", "Q h\tm e d");
result.add("a-\tchor", "eI\tk @r");
result.add("a-\tchorn", "{\tk @r n");
result.add("a-\tchy", "eI\tk i:");
result.add("a-\tci-\tdi-\tfi-\tca-\ttion", "V\ts I\td V\tf V\tk eI\tS V n");
result.add("a-\tci-\tdi-\tfied", "V\ts I\td V\tf aI d");
result.add("a-\tci-\tdi-\tfies", "V\ts I\td V\tf aI z");
result.add("a-\tci-\tdi-\tfy", "V\ts I\td V\tf aI");
result.add("a-\tci-\tdi-\tty", "V\ts I\td V\tt i:");
result.add("a-\tci-\tdic", "V\ts I\td I k");
result.add("a-\tci-\tdo-\tsis", "{\ts I\td @U\ts I s");
result.add("a-\tci-\tdu-\tri-\ta", "{\ts I\td U@\ti:\tV");
result.add("a-\tcid", "{\ts I d");
result.add("a-\tcid-\tly", "{\ts I d\tl i:");
result.add("a-\tcids", "{\ts I d z");
result.add("a-\tcker", "{\tk @r");
result.add("a-\tcker-\tley", "{\tk @r\tl i:");
result.add("a-\tcker-\tly", "{\tk @r\tl i:");
result.add("a-\tcker-\tman", "{\tk @r\tm V n");
result.add("a-\tcker's", "{\tk @r z");
result.add("a-\tco-\tlyte", "{\tk V\tl aI t");
result.add("a-\tco-\tlytes", "{\tk V\tl aI t s");
result.add("a-\tcorn", "eI\tk O@ n");
result.add("a-\tcorns", "eI\tk O@ n z");
result.add("a-\tcos-\tta", "V\tk O: s\tt V");
result.add("a-\tcous-\tti-\tcal", "V\tk u: s\tt I\tk V l");
result.add("a-\tcous-\tti-\tcally", "V\tk u: s\tt I k\tl i:");
result.add("a-\tcous-\ttic", "V\tk u: s\tt I k");
result.add("a-\tcous-\ttics", "V\tk u: s\tt I k s");
result.add("a-\tcre", "eI\tk @r");
result.add("a-\tcu-\ti-\tty", "V k\tj u:\tV\tt i:");
result.add("a-\tcu-\tmen", "V k\tj u:\tm V n");
result.add("a-\tcu-\tna", "Q\tk u:\tn V");
result.add("a-\tcu-\tpunc-\tture", "{ k\tj u:\tp V N\tk tS @r");
result.add("a-\tcuff", "V\tk V f");
result.add("a-\tcute", "V k\tj u: t");
result.add("a-\tcute-\tly", "V k\tj u: t\tl i:");
result.add("a-\tcute-\tness", "V k\tj u: t\tn V s");
result.add("a-\tcyc-\tlo-\tvir", "V\ts I k\tl @U\tv I@");
result.add("a-\tda", "eI\td V");
result.add("a-\tda-\tbel", "{\td V\tb e l");
result.add("a-\tda-\tbelle", "{\td V\tb V l");
result.add("a-\tda-\tchi", "Q\td Q\tk i:");
result.add("a-\tda-\tgi-\to", "V\td Q\tZ i:\t@U");
result.add("a-\tda-\tli-\ta", "Q\td Q\tl i:\tV");
result.add("a-\tda-\tmant", "{\td V\tm V n t");
result.add("a-\tda-\tmant-\tly", "{\td V\tm V n\tt l i:");
result.add("a-\tda-\tmec", "V\td Q\tm I k");
result.add("a-\tda-\tmek", "V\td Q\tm e k");
result.add("a-\tda-\tmi-\tna", "Q\td Q\tm i:\tn V");
result.add("a-\tda-\tmik", "V\td Q\tm I k");
result.add("a-\tda-\tmo", "Q\td Q\tm @U");
result.add("a-\tdage", "{\td V dZ");
result.add("a-\tdah", "{\td Q");
result.add("a-\tdair", "V\td e@");
result.add("a-\tdam", "{\td V m");
result.add("a-\tdam-\tson", "{\td V m\ts V n");
result.add("a-\tdams", "{\td V m z");
result.add("a-\tdam's", "{\td V m z");
result.add("a-\tdams-\tki", "V\td { m\ts k i:");
result.add("a-\tdams-\ttown", "{\td V m\ts t aU n");
result.add("a-\tdan", "eI\td V n");
result.add("a-\tdap-\tta-\tbi-\tli-\tty", "V\td { p\tt V\tb I\tl I\tt i:");
result.add("a-\tdap-\tta-\tble", "V\td { p\tt V\tb V l");
result.add("a-\tdap-\tta-\tplex", "V\td { p\tt V p\tl e k s");
result.add("a-\tdap-\tta-\ttion", "{\td V p\tt eI\tS V n");
result.add("a-\tdap-\tta-\ttions", "{\td { p\tt eI\tS V n z");
result.add("a-\tdap-\tted", "V\td { p\tt V d");
result.add("a-\tdap-\tter", "V\td { p\tt @r");
result.add("a-\tdap-\tters", "V\td { p\tt @r z");
result.add("a-\tdap-\tting", "V\td { p\tt I N");
result.add("a-\tdap-\ttive", "V\td { p\tt I v");
result.add("a-\tdap-\ttor", "V\td { p\tt @r");
result.add("a-\tdapt", "V\td { p t");
result.add("a-\tdapts", "V\td { p t s");
result.add("a-\tdar", "V\td Q@");
result.add("a-\tde-\tla", "V\td e\tl V");
result.add("a-\tde-\tlaide", "{\td V\tl eI d");
result.add("a-\tde-\tline", "{\td V\tl aI n");
result.add("a-\tde-\tna", "{\td V\tn V");
result.add("a-\tde-\tnauer", "eI\td V\tn aU r");
result.add("a-\tde-\tnine", "{\td V\tn i: n");
result.add("a-\tde-\tnoid", "{\td V\tn OI d");
result.add("a-\tde-\tnoids", "{\td V\tn OI d z");
result.add("a-\tde-\tqua-\tcy", "{\td V k\tw V\ts i:");
result.add("a-\tde-\tquate", "{\td V k\tw V t");
result.add("a-\tde-\tquate-\tly", "{\td V k\tw V t\tl i:");
result.add("a-\tdee", "V\td i:");
result.add("a-\tdel", "V\td e l");
result.add("a-\tdel-\tbert", "V\td e l\tb @r t");
result.add("a-\tdel-\tphi-\ta", "V\td e l\tf i:\tV");
result.add("a-\tdel-\tphi-\ta's", "V\td e l\tf i:\tV z");
result.add("a-\tdele", "V\td e l");
result.add("a-\tdele's", "V\td e l z");
result.add("a-\tdell", "V\td e l");
result.add("a-\tdelle", "V\td e l");
result.add("a-\tdell's", "V\td e l z");
result.add("a-\tden", "eI\td V n");
result.add("a-\tdept", "V\td e p t");
result.add("a-\tder", "eI\td @r");
result.add("a-\tdey", "eI\td i:");
result.add("a-\tdi-\tdas", "V\td i:\td V s");
result.add("a-\tdi-\tna", "Q\td i:\tn V");
result.add("a-\tdi-\tne", "Q\td i:\tn i:");
result.add("a-\tdi-\tos", "Q\td i:\t@U s");
result.add("a-\tdi-\tpose", "{\td I\tp @U s");
result.add("a-\tdi-\tron-\tdack", "{\td @r\tQ n\td { k");
result.add("a-\tdieu", "V\td u:");
result.add("a-\tdin", "V\td I n");
result.add("a-\tdo", "V\td u:");
result.add("a-\tdo-\tbe", "V\td @U\tb i:");
result.add("a-\tdo-\tbe's", "V\td @U\tb i: z");
result.add("a-\tdo-\tles-\tcence", "{\td V\tl e\ts V n s");
result.add("a-\tdo-\tles-\tcent", "{\td V\tl e\ts V n t");
result.add("a-\tdo-\tles-\tcents", "{\td V\tl e\ts V n t s");
result.add("a-\tdo-\tni-\ta", "Q\td @U\tn i:\tV");
result.add("a-\tdo-\tra", "Q\td O@\tV");
result.add("a-\tdo-\tra-\tble", "V\td O@\tV\tb V l");
result.add("a-\tdo-\tra-\ttion", "{\td @r\teI\tS V n");
result.add("a-\tdo-\tree", "{\td @r\ti:");
result.add("a-\tdo-\tring", "V\td O@\tI N");
result.add("a-\tdol-\tfo", "V\td Q l\tf @U");
result.add("a-\tdolf", "eI\td Q l f");
result.add("a-\tdolf's", "eI\td Q l f s");
result.add("a-\tdolph", "eI\td O: l f");
result.add("a-\tdon", "Q\td O: n");
result.add("a-\tdop-\tta-\tble", "V\td Q p\tt V\tb V l");
result.add("a-\tdop-\tted", "V\td Q p\tt V d");
result.add("a-\tdop-\ttee", "V\td Q p\tt i:");
result.add("a-\tdop-\ttees", "V\td Q p\tt i: z");
result.add("a-\tdop-\tting", "V\td Q p\tt I N");
result.add("a-\tdop-\ttion", "V\td Q p\tS V n");
result.add("a-\tdop-\ttions", "V\td Q p\tS V n z");
result.add("a-\tdop-\ttive", "V\td Q p\tt I v");
result.add("a-\tdopt", "V\td Q p t");
result.add("a-\tdopts", "V\td Q p t s");
result.add("a-\tdor", "Q\td O@");
result.add("a-\tdor-\tno", "Q\td O@\tn @U");
result.add("a-\tdore", "V\td O@");
result.add("a-\tdored", "V\td O@ d");
result.add("a-\tdores", "V\td O@ z");
result.add("a-\tdorn", "V\td O@ n");
result.add("a-\tdorn-\tment", "V\td O@ n\tm V n t");
result.add("a-\tdorned", "V\td O@ n d");
result.add("a-\tdorns", "V\td O@ n z");
result.add("a-\tdu-\tla-\ttion", "{\tdZ V\tl eI\tS V n");
result.add("a-\tdu-\tlate", "{\tdZ V\tl eI t");
result.add("a-\tdul-\tte-\tra-\tted", "V\td V l\tt @r\teI\tt V d");
result.add("a-\tdul-\tte-\trate", "V\td V l\tt @r\teI t");
result.add("a-\tdul-\tte-\trer", "V\td V l\tt @r\t@r");
result.add("a-\tdul-\tte-\trers", "V\td V l\tt @r\t@r z");
result.add("a-\tdul-\tte-\trous", "V\td V l\tt @r\tV s");
result.add("a-\tdul-\tte-\try", "V\td V l\tt @r\ti:");
result.add("a-\tdult", "V\td V l t");
result.add("a-\tdult-\thood", "V\td V l\tt h U d");
result.add("a-\tdults", "V\td V l t s");
result.add("a-\tdy", "eI\td i:");
result.add("a-\tfar", "V\tf Q@");
result.add("a-\tffi-\txing", "V\tf I k\ts I N");
result.add("a-\tffir-\tma-\ttion", "{\tf @r\tm eI\tS V n");
result.add("a-\tffir-\tma-\ttions", "{\tf @r\tm eI\tS V n z");
result.add("a-\tffir-\tma-\ttive", "V\tf @r\tm V\tt I v");
result.add("a-\tffir-\tma-\ttive-\tly", "V\tf @r\tm V\tt I v\tl i:");
result.add("a-\tffir-\tming", "V\tf @r\tm I N");
result.add("a-\tffirm", "V\tf @r m");
result.add("a-\tffirmed", "V\tf @r m d");
result.add("a-\tffirms", "V\tf @r m z");
result.add("a-\tffix", "{\tf I k s");
result.add("a-\tffix-\tes", "{\tf I k\ts V z");
result.add("a-\tffixed", "V\tf I k s t");
result.add("a-\tfi-\tcio-\tna-\tdo", "V\tf i: S\tj V\tn Q\td @U");
result.add("a-\tfi-\tcio-\tna-\tdos", "V\tf I\tS V\tn Q\td @U z");
result.add("a-\tfield", "V\tf i: l d");
result.add("a-\tfire", "V\tf aI r");
result.add("a-\tfon-\tso", "V\tf Q n\ts @U");
result.add("a-\tfoot", "V\tf U t");
result.add("a-\tfore-\tmen-\ttioned", "V\tf O@\tm e n\tS V n d");
result.add("a-\tfore-\tsaid", "V\tf O@\ts e d");
result.add("a-\tforet-\thought", "V\tf O@\tT Q t");
result.add("a-\tfoul", "V\tf aU l");
result.add("a-\tga", "Q\tg V");
result.add("a-\tga-\tmem-\tnon", "{\tg V\tm e m\tn Q n");
result.add("a-\tga-\tmem-\tnon's", "{\tg V\tm e m\tn Q n z");
result.add("a-\tga-\ttha", "{\tg V\tT V");
result.add("a-\tgain", "V\tg e n");
result.add("a-\tgainst", "V\tg e n s t");
result.add("a-\tgan", "eI\tg V n");
result.add("a-\tgape", "V\tg eI p");
result.add("a-\tgar", "eI\tg @r");
result.add("a-\tgar-\twal", "Q\tg Q@\tw Q l");
result.add("a-\tgas-\tsi", "{\tg V\ts i:");
result.add("a-\tgas-\tsiz", "V\tg {\ts I z");
result.add("a-\tgate", "{\tg V t");
result.add("a-\tgates", "{\tg V t s");
result.add("a-\tge-\tra-\ttum", "V\tdZ e@\tV\tt V m");
result.add("a-\tge-\tra-\ttums", "V\tdZ e@\tV\tt V m z");
result.add("a-\tgee", "eI\tdZ i:");
result.add("a-\tgee's", "eI\tdZ i: z");
result.add("a-\tgen-\tcies", "eI\tdZ V n\ts i: z");
result.add("a-\tgen-\tcy", "eI\tdZ V n\ts i:");
result.add("a-\tgen-\tcy's", "eI\tdZ V n\ts i: z");
result.add("a-\tgen-\tda", "V\tdZ e n\td V");
result.add("a-\tgen-\tdas", "V\tdZ e n\td V z");
result.add("a-\tgent", "eI\tdZ V n t");
result.add("a-\tgents", "eI\tdZ V n t s");
result.add("a-\tgent's", "eI\tdZ V n t s");
result.add("a-\tger", "eI\tdZ @r");
result.add("a-\tgers", "eI\tdZ @r z");
result.add("a-\tges", "eI\tdZ V z");
result.add("a-\tge's", "eI\tdZ V z");
result.add("a-\tghast", "V\tg { s t");
result.add("a-\tgi-\tli-\tty", "V\tdZ I\tl V\tt i:");
result.add("a-\tgi-\tlis", "V\tdZ I\tl V s");
result.add("a-\tgi-\tta-\tted", "{\tdZ I\tt eI\tt V d");
result.add("a-\tgi-\tta-\tting", "{\tdZ I\tt eI\tt I N");
result.add("a-\tgi-\tta-\ttion", "{\tdZ I\tt eI\tS V n");
result.add("a-\tgi-\tta-\ttor", "{\tdZ I\tt eI\tt @r");
result.add("a-\tgi-\tta-\ttors", "{\tdZ I\tt eI\tt @r z");
result.add("a-\tgi-\ttate", "{\tdZ I\tt eI t");
result.add("a-\tgile", "{\tdZ V l");
result.add("a-\tgin", "Q\tdZ i: n");
result.add("a-\tgin-\tcourt", "{\tdZ V n\tk O@ t");
result.add("a-\tging", "eI\tdZ I N");
result.add("a-\tgo", "V\tg @U");
result.add("a-\tgo-\tni-\tzes", "{\tg V\tn aI\tz V z");
result.add("a-\tgo-\tni-\tzing", "{\tg V\tn aI\tz I N");
result.add("a-\tgo-\tni-\tzing-\tly", "{\tg V\tn aI\tz I N\tl i:");
result.add("a-\tgo-\tnies", "{\tg V\tn i: z");
result.add("a-\tgo-\tnist", "{\tg V\tn V s t");
result.add("a-\tgo-\tnists", "{\tg V\tn V s t s");
result.add("a-\tgo-\tnize", "{\tg V\tn aI z");
result.add("a-\tgo-\tnized", "{\tg V\tn aI z d");
result.add("a-\tgo-\tny", "{\tg V\tn i:");
result.add("a-\tgo-\tra", "{\tg @r\tV");
result.add("a-\tgog", "V\tg Q g");
result.add("a-\tgos-\tti-\tni", "Q\tg @U s\tt i:\tn i:");
result.add("a-\tgos-\tti-\tno", "Q\tg O: s\tt i:\tn @U");
result.add("a-\tgos-\tto", "Q\tg @U s\tt @U");
result.add("a-\tgra", "{ g\tr V");
result.add("a-\tgua", "Q g\tw V");
result.add("a-\tgua-\tcate", "{ g\tw V\tk eI t");
result.add("a-\tgua-\tyo", "Q g\tw eI\t@U");
result.add("a-\tgui-\tla", "Q g\tw i:\tl V");
result.add("a-\tgui-\tlar", "{\tg I\tl Q@");
result.add("a-\tguir-\tre", "Q g\tw I@\teI");
result.add("a-\tguir-\tre's", "Q g\tw I@\teI z");
result.add("a-\tgus-\ttin", "V\tg O: s\tt V n");
result.add("a-\tha", "Q\th Q");
result.add("a-\tha-\tron", "{\th @r\tQ n");
result.add("a-\thab", "eI\th { b");
result.add("a-\thah", "Q\th Q");
result.add("a-\thead", "V\th e d");
result.add("a-\thearn", "V\th @r n");
result.add("a-\thern", "V\th @r n");
result.add("a-\tho", "Q\th @U");
result.add("a-\tho-\tla", "{\th V\tl V");
result.add("a-\thold", "V\th @U l d");
result.add("a-\ti-\tda", "aI\ti:\td V");
result.add("a-\ti-\tdan", "Q\ti:\td Q n");
result.add("a-\ti-\tsa", "aI\ti:\ts V");
result.add("a-\tja", "aI\tV");
result.add("a-\tja-\tx's", "eI\tdZ { k\ts V z");
result.add("a-\tjar", "V\tdZ Q@");
result.add("a-\tjax", "eI\tdZ { k s");
result.add("a-\tka", "Q\tk V");
result.add("a-\tka-\tli", "V\tk Q\tl i:");
result.add("a-\tkel", "V\tk e l");
result.add("a-\tker", "{\tk @r");
result.add("a-\tker-\tley", "V\tk @r\tl i:");
result.add("a-\tkers", "eI\tk @r z");
result.add("a-\tkey", "V\tk i:");
result.add("a-\tki-\tba", "V\tk i:\tb V");
result.add("a-\tki-\th-\tito", "Q\tk i:\th i:\tt @U");
result.add("a-\tki-\tra", "V\tk i:\tr V");
result.add("a-\tki-\tta", "V\tk i:\tt V");
result.add("a-\tki-\tta's", "V\tk i:\tt V z");
result.add("a-\tki-\tva", "V\tk i:\tv V");
result.add("a-\tkim-\tbo", "V\tk I m\tb @U");
result.add("a-\tkin", "V\tk I n");
result.add("a-\tkins", "V\tk I n z");
result.add("a-\tla", "eI\tl V");
result.add("a-\tla-\tba-\tma", "{\tl V\tb {\tm V");
result.add("a-\tla-\tba-\tman", "{\tl V\tb {\tm V n");
result.add("a-\tla-\tba-\tmans", "{\tl V\tb {\tm V n z");
result.add("a-\tla-\tba-\tma's", "{\tl V\tb {\tm V z");
result.add("a-\tla-\tbas-\tter", "{\tl V\tb { s\tt @r");
result.add("a-\tla-\tchu-\ta", "V\tl {\ttS u:\tV");
result.add("a-\tla-\tgoas", "{\tl V\tg @U z");
result.add("a-\tla-\tme-\tda", "{\tl V\tm i:\td V");
result.add("a-\tla-\tmein", "{\tl V\tm aI n");
result.add("a-\tla-\tmi-\ttos", "{\tl V\tm i:\tt @U s");
result.add("a-\tla-\tmo", "{\tl V\tm @U");
result.add("a-\tla-\tmos", "{\tl V\tm @U z");
result.add("a-\tla-\tna", "Q\tl {\tn V");
result.add("a-\tla-\tric", "{\tl @r\tI k");
result.add("a-\tla-\trice", "Q\tl Q@\tI s");
result.add("a-\tlac-\tri-\tty", "V\tl { k\tr V\tt i:");
result.add("a-\tlad-\tdin", "V\tl {\td V n");
result.add("a-\tlai", "V\tl aI");
result.add("a-\tlain", "V\tl eI n");
result.add("a-\tlaine", "V\tl eI n");
result.add("a-\tlair", "V\tl e@");
result.add("a-\tlan", "{\tl V n");
result.add("a-\tlan-\tna", "Q\tl Q\tn V");
result.add("a-\tland", "{\tl V n d");
result.add("a-\tlane", "V\tl eI n");
result.add("a-\tlan's", "{\tl V n z");
result.add("a-\tlar", "eI\tl Q@");
result.add("a-\tlar-\tcon", "V\tl Q@\tk Q n");
result.add("a-\tlar-\tming", "V\tl Q@\tm I N");
result.add("a-\tlar-\tming-\tly", "V\tl Q@\tm I N\tl i:");
result.add("a-\tlar-\tmist", "V\tl Q@\tm V s t");
result.add("a-\tlard", "V\tl Q@ d");
result.add("a-\tlarm", "V\tl Q@ m");
result.add("a-\tlarmed", "V\tl Q@ m d");
result.add("a-\tlarms", "V\tl Q@ m z");
result.add("a-\tlas", "V\tl { s");
result.add("a-\tlas-\tka", "V\tl { s\tk V");
result.add("a-\tlas-\tkan", "V\tl { s\tk V n");
result.add("a-\tlas-\tkans", "V\tl { s\tk V n z");
result.add("a-\tlas-\tka's", "V\tl { s\tk V z");
result.add("a-\tlas-\ttair", "{\tl V s\tt e@");
result.add("a-\tlas-\tter", "{\tl V s\tt @r");
result.add("a-\tlayne", "V\tl eI n");
result.add("a-\tle-\ta-\tto-\try", "eI\tl i:\tV\tt O@\ti:");
result.add("a-\tle-\tda", "Q\tl eI\td V");
result.add("a-\tle-\tgre", "Q\tl e g\tr i:");
result.add("a-\tle-\tjan-\tdro", "Q\tl eI\tj Q n\td r @U");
result.add("a-\tle-\tjo", "Q\tl eI\tj @U");
result.add("a-\tle-\tna", "Q\tl eI\tn V");
result.add("a-\tle-\tron", "Q\tl e@\tO: n");
result.add("a-\tle-\tta", "Q\tl e\tt V");
result.add("a-\tle-\tthe-\ta", "{\tl V\tT i:\tV");
result.add("a-\tle-\txa", "V\tl e k\ts V");
result.add("a-\tle-\txan-\tder", "{\tl V g\tz { n\td @r");
result.add("a-\tle-\txan-\tders", "{\tl I g\tz { n\td @r z");
result.add("a-\tle-\txan-\tder's", "{\tl V g\tz { n\td @r z");
result.add("a-\tle-\txand-\tra", "{\tl e g\tz { n\td r V");
result.add("a-\tle-\txand-\tre", "{\tl I k\ts Q n\td @r");
result.add("a-\tle-\txand-\tri-\ta", "{\tl V g\tz { n\td r i:\tV");
result.add("a-\tle-\txand-\trine", "{\tl V g\tz { n\td r i: n");
result.add("a-\tle-\txand-\trines", "{\tl V g\tz { n\td r i: n z");
result.add("a-\tle-\txei", "V\tl e k\ts eI");
result.add("a-\tle-\txi", "V\tl e k\ts i:");
result.add("a-\tle-\txi-\ta", "V\tl e k\ts i:\tV");
result.add("a-\tle-\txine", "V\tl e k\ts aI n");
result.add("a-\tle-\txis", "V\tl e k\ts I s");
result.add("a-\tle-\txi's", "V\tl e k\ts i: z");
result.add("a-\tle-\tx's", "{\tl V k\ts V z");
result.add("a-\tlec", "{\tl I k");
result.add("a-\tleen", "V\tl i: n");
result.add("a-\tlei-\tchem", "V\tl e\th e m");
result.add("a-\tlek-\tsan-\tdr", "{\tl V g\tz { n\td @r");
result.add("a-\tlene", "V\tl i: n");
result.add("a-\tleph", "Q\tl V f");
result.add("a-\tler-\tted", "V\tl @r\tt V d");
result.add("a-\tler-\tting", "V\tl @r\tt I N");
result.add("a-\tlert", "V\tl @r t");
result.add("a-\tlert-\tness", "V\tl @r t\tn V s");
result.add("a-\tlerts", "V\tl @r t s");
result.add("a-\tles-\tsan-\tdra", "{\tl e\ts { n\td r V");
result.add("a-\tles-\tsan-\tdro", "Q\tl eI\tz Q n\td r @U");
result.add("a-\tleu-\ttian", "V\tl u:\tS V n");
result.add("a-\tleu-\ttians", "V\tl u:\tS V n z");
result.add("a-\tleve", "V\tl i: v");
result.add("a-\tlex", "{\tl V k s");
result.add("a-\tley", "eI\tl i:");
result.add("a-\tli", "Q\tl i:");
result.add("a-\tli-\ta-\tses", "eI\tl i:\tV\ts V z");
result.add("a-\tli-\tas", "eI\tl i:\tV s");
result.add("a-\tli-\tbi", "{\tl I\tb aI");
result.add("a-\tli-\tbis", "{\tl I\tb aI z");
result.add("a-\tli-\tce-\ta", "V\tl I\ts i:\tV");
result.add("a-\tli-\tce's", "{\tl I\ts V z");
result.add("a-\tli-\tcia", "V\tl I\tS V");
result.add("a-\tli-\tcia's", "V\tl I\tS V z");
result.add("a-\tli-\tda", "Q\tl i:\td V");
result.add("a-\tli-\te-\tna-\tted", "eI\tl i:\tV\tn eI\tt I d");
result.add("a-\tli-\te-\tna-\tting", "eI\tl i:\tV\tn eI\tt I N");
result.add("a-\tli-\te-\tna-\ttion", "eI\tl i:\tV\tn eI\tS V n");
result.add("a-\tli-\te-\tnates", "eI\tl i:\tV\tn eI t s");
result.add("a-\tli-\ten", "eI\tl i:\tV n");
result.add("a-\tli-\tens", "eI\tl i:\tV n z");
result.add("a-\tli-\tma", "Q\tl i:\tm V");
result.add("a-\tli-\tmen-\tta-\try", "{\tl I\tm e n\tt @r\ti:");
result.add("a-\tli-\tmo-\tny", "{\tl I\tm @U\tn i:");
result.add("a-\tli-\tna", "V\tl i:\tn V");
result.add("a-\tli-\tquip-\tpa", "{\tl I k\tw I\tp V");
result.add("a-\tli-\tquip-\tpa's", "{\tl I k\tw I\tp V z");
result.add("a-\tli-\tson", "{\tl I\ts V n");
result.add("a-\tli-\tta", "Q\tl i:\tt V");
result.add("a-\tli-\tta-\tli-\ta", "{\tl I\tt eI\tl i:\tV");
result.add("a-\tli-\tta-\tli-\ta's", "{\tl I\tt eI\tl i:\tV z");
result.add("a-\tli-\tthi-\ta", "V\tl I\tT i:\tV");
result.add("a-\tlice", "{\tl I s");
result.add("a-\tlie", "{\tl i:");
result.add("a-\tlie-\tnate", "eI l\tj I\tn eI t");
result.add("a-\tlig-\tning", "V\tl aI\tn I N");
result.add("a-\tlight", "V\tl aI t");
result.add("a-\tlign", "V\tl aI n");
result.add("a-\tlign-\tment", "V\tl aI n\tm V n t");
result.add("a-\tlign-\tments", "V\tl aI n\tm V n t s");
result.add("a-\tligned", "V\tl aI n d");
result.add("a-\tligns", "V\tl aI n z");
result.add("a-\tlike", "V\tl aI k");
result.add("a-\tline", "V\tl aI n");
result.add("a-\tlines", "V\tl aI n z");
result.add("a-\tli's", "Q\tl i: z");
result.add("a-\tlis-\tsa", "V\tl I\ts V");
result.add("a-\tlis-\ttair", "{\tl I s\tt e@");
result.add("a-\tlis-\tter", "{\tl I s\tt @r");
result.add("a-\tlive", "V\tl aI v");
result.add("a-\tlix", "{\tl I k s");
result.add("a-\tlley", "{\tl i:");
result.add("a-\tlley's", "{\tl i: z");
result.add("a-\tlo-\tdie", "V\tl Q\td i:");
result.add("a-\tlo-\tha", "V\tl @U\th Q");
result.add("a-\tloe", "{\tl @U");
result.add("a-\tloft", "V\tl O: f t");
result.add("a-\tloi-\tsi-\ta", "Q\tl OI\ts i:\tV");
result.add("a-\tlois", "Q\tl OI s");
result.add("a-\tlon", "V\tl Q n");
result.add("a-\tlon-\tso", "V\tl Q n\ts @U");
result.add("a-\tlon-\tzo", "V\tl Q n\tz @U");
result.add("a-\tlone", "V\tl @U n");
result.add("a-\tlong", "V\tl O: N");
result.add("a-\tlong-\tside", "V\tl O: N\ts aI d");
result.add("a-\tloof", "V\tl u: f");
result.add("a-\tloof-\tness", "V\tl u: f\tn V s");
result.add("a-\tloud", "V\tl aU d");
result.add("a-\tloy-\tsi-\ta", "Q\tl OI\ts i:\tV");
result.add("a-\tloy-\tsi-\tus", "{\tl @U\tI\tS V s");
result.add("a-\tloys", "V\tl OI z");
result.add("a-\tlu", "Q\tl u:");
result.add("a-\tlu-\tmi-\tna", "V\tl u:\tm V\tn V");
result.add("a-\tlu-\tmi-\tnium", "V\tl u:\tm V\tn V m");
result.add("a-\tlu-\tmi-\tnize", "V\tl u:\tm V\tn aI z");
result.add("a-\tlu-\tmi-\tnized", "V\tl u:\tm V\tn aI z d");
result.add("a-\tlu-\tmi-\tno-\tsi-\tli-\tcate", "V\tl u:\tm V\tn @U\ts I\tl V\tk eI t");
result.add("a-\tlu-\tmi-\tnum", "V\tl u:\tm V\tn V m");
result.add("a-\tlu-\tmi-\tnum's", "V\tl u:\tm V\tn V m z");
result.add("a-\tlum", "{\tl V m");
result.add("a-\tlum-\tni", "V\tl V m\tn aI");
result.add("a-\tlum-\tnus", "V\tl V m\tn V s");
result.add("a-\tlums", "{\tl V m z");
result.add("a-\tly", "eI\tl i:");
result.add("a-\tly-\tes-\tka", "{\tl i:\te s\tk V");
result.add("a-\tly-\tsi-\ta", "V\tl I\ts i:\tV");
result.add("a-\tlyce", "{\tl I s");
result.add("a-\tlyes-\tka's", "{ l\tj e s\tk V z");
result.add("a-\tlys", "{\tl i: z");
result.add("a-\tlys-\tsa", "V\tl I\ts V");
result.add("a-\tma-\tbel", "{\tm V\tb e l");
result.add("a-\tma-\tbelle", "{\tm V\tb V l");
result.add("a-\tma-\tbile", "Q\tm Q\tb I l");
result.add("a-\tma-\tde-\to", "Q\tm Q\td i:\t@U");
result.add("a-\tma-\tde-\tus", "{\tm V\td eI\tV s");
result.add("a-\tma-\tdo", "Q\tm Q\td @U");
result.add("a-\tma-\tdor", "{\tm V\td O@");
result.add("a-\tma-\tdou", "{\tm V\td u:");
result.add("a-\tma-\tle-\ta", "{\tm V\tl i:\tV");
result.add("a-\tma-\tlia", "V\tm Q l\tj V");
result.add("a-\tma-\tlie", "{\tm V\tl i:");
result.add("a-\tma-\tna", "V\tm {\tn V");
result.add("a-\tma-\tra", "Q\tm Q@\tV");
result.add("a-\tma-\tral", "Q\tm Q@\t{ l");
result.add("a-\tma-\tranth", "{\tm @r\t{ n T");
result.add("a-\tma-\tri", "Q\tm Q@\ti:");
result.add("a-\tma-\tril-\tlo", "{\tm @r\tI\tl @U");
result.add("a-\tma-\trin", "{\tm @r\tI n");
result.add("a-\tma-\tris", "{\tm @r\tI s");
result.add("a-\tma-\tryl-\tli-\tses", "{\tm @r\tI\tl I\ts I z");
result.add("a-\tma-\tryl-\tlis", "{\tm @r\tI\tl I s");
result.add("a-\tma-\tsa", "{\tm V\ts V");
result.add("a-\tma-\tteu-\tri-\tsm", "{\tm V\ttS @r\tI\tz V m");
result.add("a-\tma-\tteu-\trish", "{\tm V\ttS @r\tI S");
result.add("a-\tma-\tteur", "{\tm V\tt @r");
result.add("a-\tma-\tteurs", "{\tm V\tt @r z");
result.add("a-\tma-\tto", "Q\tm Q\tt @U");
result.add("a-\tma-\tya", "Q\tm Q\tj V");
result.add("a-\tma-\tzes", "V\tm eI\tz V z");
result.add("a-\tma-\tzing", "V\tm eI\tz I N");
result.add("a-\tma-\tzing-\tly", "V\tm eI\tz I N\tl i:");
result.add("a-\tma-\tzo-\tni-\ta", "{\tm V\tz @U\tn i:\tV");
result.add("a-\tma-\tzo-\tni-\tan", "{\tm V\tz @U\tn i:\tV n");
result.add("a-\tma-\tzon", "{\tm V\tz Q n");
result.add("a-\tma-\tzons", "{\tm V\tz Q n z");
result.add("a-\tma-\tzon's", "{\tm V\tz Q n z");
result.add("a-\tmal", "V\tm Q l");
result.add("a-\tmal-\tga-\tma-\tted", "V\tm { l\tg V\tm eI\tt V d");
result.add("a-\tmal-\tga-\tma-\ttion", "V\tm { l\tg V\tm eI\tS V n");
result.add("a-\tmal-\tga-\tmate", "V\tm { l\tg V\tm eI t");
result.add("a-\tmal-\tgam", "V\tm { l\tg V m");
result.add("a-\tmal-\tgams", "V\tm { l\tg V m z");
result.add("a-\tman", "Q\tm V n");
result.add("a-\tman-\tda", "V\tm { n\td V");
result.add("a-\tman-\tda's", "V\tm { n\td V z");
result.add("a-\tman-\tte", "Q\tm Q n\tt i:");
result.add("a-\tmann", "{\tm V n");
result.add("a-\tmar", "V\tm Q@");
result.add("a-\tmas-\tsing", "V\tm {\ts I N");
result.add("a-\tmass", "V\tm { s");
result.add("a-\tmassed", "V\tm { s t");
result.add("a-\tmaze", "V\tm eI z");
result.add("a-\tmaze-\tment", "V\tm eI z\tm V n t");
result.add("a-\tmazed", "V\tm eI z d");
result.add("a-\tme-\tli-\tne", "Q\tm e\tl i:\tn i:");
result.add("a-\tme-\tli-\tta", "Q\tm e\tl i:\tt V");
result.add("a-\tme-\tlia", "V\tm i: l\tj V");
result.add("a-\tme-\tlio-\tra-\tted", "V\tm i: l\tj @r\teI\tt V d");
result.add("a-\tme-\tlio-\tra-\ttion", "V\tm i: l\tj @r\teI\tS V n");
result.add("a-\tme-\tlio-\trate", "V\tm i: l\tj @r\teI t");
result.add("a-\tme-\tna-\tble", "V\tm e\tn V\tb V l");
result.add("a-\tme-\tni-\tties", "V\tm e\tn V\tt i: z");
result.add("a-\tme-\tni-\tty", "V\tm e\tn V\tt i:");
result.add("a-\tme-\tri-\tca", "V\tm e@\tV\tk V");
result.add("a-\tme-\tri-\tcan", "V\tm e@\tV\tk V n");
result.add("a-\tme-\tri-\tcas", "V\tm e@\tV\tk V z");
result.add("a-\tme-\tri-\tca's", "V\tm e@\tV\tk V z");
result.add("a-\tme-\tri-\tcus", "V\tm e@\tI\tk V s");
result.add("a-\tme-\tri-\tgo", "Q\tm @r\ti:\tg @U");
result.add("a-\tme-\tri-\tka", "V\tm e@\tI\tk V");
result.add("a-\tme-\tri-\ttech", "V\tm e@\tV\tt e k");
result.add("a-\tme-\trin-\tdi-\tan", "{\tm @r\tI n\td i:\tV n");
result.add("a-\tme-\tro", "Q\tm e@\t@U");
result.add("a-\tme-\try", "{\tm @r\ti:");
result.add("a-\tme-\tthyst", "{\tm V\tT V s t");
result.add("a-\tme-\tx's", "{\tm e k\ts V z");
result.add("a-\tmeen", "V\tm i: n");
result.add("a-\tmen", "eI\tm e n");
result.add("a-\tmen-\tda-\tble", "V\tm e n\td V\tb V l");
result.add("a-\tmen-\tded", "V\tm e n\td V d");
result.add("a-\tmen-\tding", "V\tm e n\td I N");
result.add("a-\tmen-\tta", "V\tm e n\tt V");
result.add("a-\tmend", "V\tm e n d");
result.add("a-\tmend-\tment", "V\tm e n\td m V n t");
result.add("a-\tmend-\tments", "V\tm e n\td m V n t s");
result.add("a-\tmend-\tment's", "V\tm e n\td m V n t s");
result.add("a-\tmends", "V\tm e n d z");
result.add("a-\tment", "{\tm e n t");
result.add("a-\tmer-\tsham", "{\tm @r\tS { m");
result.add("a-\tmex", "{\tm e k s");
result.add("a-\tmi", "Q\tm i:");
result.add("a-\tmi-\ta-\tbi-\tli-\tty", "eI\tm i:\tV\tb I\tl V\tt i:");
result.add("a-\tmi-\ta-\tble", "eI\tm i:\tV\tb V l");
result.add("a-\tmi-\ta-\tbly", "eI\tm i:\tV b\tl i:");
result.add("a-\tmi-\tca-\tble", "{\tm I\tk V\tb V l");
result.add("a-\tmi-\tca-\tbly", "{\tm I\tk V b\tl i:");
result.add("a-\tmi-\tcus", "V\tm i:\tk V s");
result.add("a-\tmi-\tdon", "{\tm I\td Q n");
result.add("a-\tmi-\tga", "V\tm i:\tg V");
result.add("a-\tmi-\tgo", "V\tm i:\tg @U");
result.add("a-\tmi-\tgos", "V\tm i:\tg @U z");
result.add("a-\tmi-\tno", "V\tm i:\tn @U");
result.add("a-\tmi-\tty", "{\tm I\tt i:");
result.add("a-\tmi-\ttyvil-\tle", "{\tm I\tt i:\tv I l");
result.add("a-\tmick", "{\tm I k");
result.add("a-\tmid", "V\tm I d");
result.add("a-\tmid-\tships", "V\tm I d\tS V p s");
result.add("a-\tmidst", "V\tm I d s t");
result.add("a-\tmie", "{\tm i:");
result.add("a-\tmin", "Q\tm i: n");
result.add("a-\tmin-\tta", "V\tm I n\tt V");
result.add("a-\tmir", "V\tm I@");
result.add("a-\tmir's", "V\tm I@ z");
result.add("a-\tmis", "{\tm I s");
result.add("a-\tmish", "Q\tm I S");
result.add("a-\tmiss", "V\tm I s");
result.add("a-\tmit", "Q\tm i: t");
result.add("a-\tmo", "Q\tm @U");
result.add("a-\tmo-\tco", "{\tm V\tk @U");
result.add("a-\tmo-\tco's", "{\tm V\tk @U z");
result.add("a-\tmo-\tral", "eI\tm O@\tV l");
result.add("a-\tmo-\trette", "{\tm @r\te t");
result.add("a-\tmo-\tri-\tta", "Q\tm O@\ti:\tt V");
result.add("a-\tmo-\trist", "{\tm @r\tI s t");
result.add("a-\tmo-\tro-\tso", "Q\tm O@\t@U\ts @U");
result.add("a-\tmo-\trous", "{\tm @r\tV s");
result.add("a-\tmo-\try", "eI\tm @r\ti:");
result.add("a-\tmoe-\tba", "V\tm i:\tb V");
result.add("a-\tmoe-\tbas", "V\tm i:\tb V z");
result.add("a-\tmoe-\tbic", "V\tm i:\tb I k");
result.add("a-\tmok", "V\tm V k");
result.add("a-\tmon", "Q\tm O: n");
result.add("a-\tmong", "V\tm Q N");
result.add("a-\tmongst", "V\tm V N s t");
result.add("a-\tmor", "{\tm @r");
result.add("a-\tmor-\tphous", "V\tm O@\tf V s");
result.add("a-\tmor-\tti-\tza-\ttion", "{\tm @r\tt I\tz eI\tS V n");
result.add("a-\tmor-\tti-\tzing", "{\tm @r\tt aI\tz I N");
result.add("a-\tmor-\ttize", "{\tm @r\tt aI z");
result.add("a-\tmor-\ttized", "{\tm @r\tt aI z d");
result.add("a-\tmore", "Q\tm O@");
result.add("a-\tmos", "eI\tm V s");
result.add("a-\tmos-\tkeag", "{\tm V s\tk eI g");
result.add("a-\tmos-\tkeag's", "{\tm V s\tk eI g z");
result.add("a-\tmoun-\tted", "V\tm aU n\tt V d");
result.add("a-\tmoun-\tting", "V\tm aU n\tt I N");
result.add("a-\tmount", "V\tm aU n t");
result.add("a-\tmounts", "V\tm aU n t s");
result.add("a-\tmu-\tlet", "{ m\tj V\tl V t");
result.add("a-\tmu-\tlets", "{ m\tj V\tl V t s");
result.add("a-\tmu-\tses", "V m\tj u:\tz V z");
result.add("a-\tmu-\tsing", "V m\tj u:\tz I N");
result.add("a-\tmu-\tsing-\tly", "V m\tj u:\tz I N\tl i:");
result.add("a-\tmuck", "V\tm V k");
result.add("a-\tmun-\tdsen", "eI\tm V n\td s V n");
result.add("a-\tmuse", "V m\tj u: z");
result.add("a-\tmuse-\tment", "V m\tj u: z\tm V n t");
result.add("a-\tmuse-\tments", "V m\tj u: z\tm V n t s");
result.add("a-\tmused", "V m\tj u: z d");
result.add("a-\tmy", "eI\tm i:");
result.add("a-\tmy-\tlin", "{\tm V\tl I n");
result.add("a-\tmy-\tloid", "{\tm V\tl OI d");
result.add("a-\tmy-\tot-\tro-\tphic", "{\tm aI\tV t\tr @U\tf I k");
result.add("a-\tmy's", "eI\tm i: z");
result.add("a-\tna", "Q\tn V");
result.add("a-\tna-\tbap-\ttist", "{\tn V\tb { p\tt V s t");
result.add("a-\tna-\tbo-\tlic", "{\tn V\tb Q\tl I k");
result.add("a-\tna-\tcin", "{\tn V\ts I n");
result.add("a-\tna-\tcon-\tda", "{\tn V\tk Q n\td V");
result.add("a-\tna-\tcos-\tti-\ta", "{\tn V\tk Q s\tt i:\tV");
result.add("a-\tna-\tcos-\tti-\ta's", "{\tn V\tk Q s\tt i:\tV z");
result.add("a-\tna-\tdar-\tko", "{\tn V\td Q@\tk @U");
result.add("a-\tna-\tdar-\tko's", "{\tn V\td Q@\tk @U z");
result.add("a-\tna-\theim", "{\tn V\th aI m");
result.add("a-\tna-\tly-\tti-\tcal", "{\tn V\tl I\tt I\tk V l");
result.add("a-\tna-\tly-\tti-\tci-\tty", "{\tn V\tl V\tt I\ts V\tt i:");
result.add("a-\tna-\tly-\ttic", "{\tn V\tl I\tt I k");
result.add("a-\tna-\tly-\ttical-\tly", "{\tn V\tl I\tt I k\tl i:");
result.add("a-\tna-\tly-\ttics", "{\tn V\tl I\tt I k s");
result.add("a-\tna-\tly-\tza-\tble", "{\tn V\tl aI\tz V\tb V l");
result.add("a-\tna-\tly-\tzer", "{\tn V\tl aI\tz @r");
result.add("a-\tna-\tly-\tzers", "{\tn V\tl aI\tz @r z");
result.add("a-\tna-\tly-\tzes", "{\tn V\tl aI\tz V z");
result.add("a-\tna-\tly-\tzing", "{\tn V\tl aI\tz I N");
result.add("a-\tna-\tlyst", "{\tn V\tl V s t");
result.add("a-\tna-\tlysts", "{\tn V\tl V s t s");
result.add("a-\tna-\tlyst's", "{\tn V\tl V s t s");
result.add("a-\tna-\tlyze", "{\tn V\tl aI z");
result.add("a-\tna-\tlyzed", "{\tn V\tl aI z d");
result.add("a-\tna-\tpho-\tra", "V\tn {\tf @r\tV");
result.add("a-\tna-\tsa-\tzi", "{\tn V\ts {\tz i:");
result.add("a-\tna-\tthe-\tma", "V\tn {\tT V\tm V");
result.add("a-\tna-\tto-\tla", "Q\tn Q\tt @U\tl V");
result.add("a-\tna-\tto-\tli-\ta", "{\tn V\tt @U\tl i:\tV");
result.add("a-\tna-\tto-\tli-\tan", "{\tn V\tt @U\tl i:\tV n");
result.add("a-\tna-\tto-\tmi-\tcal", "{\tn V\tt Q\tm V\tk V l");
result.add("a-\tna-\tto-\tmical-\tly", "{\tn V\tt Q\tm V k\tl i:");
result.add("a-\tna-\tto-\tmist", "V\tn {\tt V\tm V s t");
result.add("a-\tna-\tto-\tmy", "V\tn {\tt V\tm i:");
result.add("a-\tna-\ttole", "{\tn V\tt @U l");
result.add("a-\tnac", "{\tn { k");
result.add("a-\tnach-\tro-\tni-\tsm", "V\tn { k\tr V\tn I\tz V m");
result.add("a-\tnach-\tro-\tni-\tsms", "V\tn { k\tr V\tn I\tz V m z");
result.add("a-\tnach-\tro-\tnis-\ttic", "V\tn { k\tr V\tn I s\tt I k");
result.add("a-\tnae-\tro-\tbic", "{\tn @r\t@U\tb I k");
result.add("a-\tnae-\trobe", "{\tn @r\t@U b");
result.add("a-\tnae-\trobes", "{\tn @r\t@U b z");
result.add("a-\tnaes-\tthe-\tsia", "{\tn V s\tT i:\tZ V");
result.add("a-\tnaf-\tra-\tnil", "V\tn { f\tr V\tn I l");
result.add("a-\tnag-\tnos", "Q\tn Q g\tn @U z");
result.add("a-\tnag-\tram", "{\tn V g\tr { m");
result.add("a-\tnal", "eI\tn V l");
result.add("a-\tnal-\tge-\tsic", "{\tn V l\tdZ i:\ts I k");
result.add("a-\tnal-\tge-\tsics", "{\tn V l\tdZ i:\tz I k s");
result.add("a-\tnand", "{\tn V n d");
result.add("a-\tnar-\tchi-\tcal", "{\tn Q@\tk I\tk V l");
result.add("a-\tnar-\tchic", "{\tn Q@\tk I k");
result.add("a-\tnar-\tchist", "{\tn @r\tk I s t");
result.add("a-\tnar-\tchists", "{\tn @r\tk I s t s");
result.add("a-\tnar-\tchy", "{\tn @r\tk i:");
result.add("a-\tnas", "{\tn V s");
result.add("a-\tnas-\tta-\tsi-\to", "Q\tn Q s\tt Q\ts i:\t@U");
result.add("a-\tnas-\tta-\tsia", "{\tn V s\tt eI\tZ V");
result.add("a-\tnas-\ttas", "{\tn V s\tt V z");
result.add("a-\tnas-\ttos", "{\tn V s\tt @U z");
result.add("a-\tne-\tmi-\ta", "V\tn i:\tm i:\tV");
result.add("a-\tne-\tmi-\tas", "V\tn i:\tm i:\tV z");
result.add("a-\tne-\tmic", "V\tn i:\tm I k");
result.add("a-\tne-\tmo-\tme-\tter", "{\tn V\tm Q\tm V\tt @r");
result.add("a-\tne-\tmone", "{\tn V\tm @U n");
result.add("a-\tnec-\tdo-\tta-\tlly", "{\tn V k\td @U\tt V\tl i:");
result.add("a-\tnec-\tdo-\ttal", "{\tn V k\td @U\tt V l");
result.add("a-\tnec-\tdote", "{\tn V k\td @U t");
result.add("a-\tnec-\tdotes", "{\tn V k\td @U t s");
result.add("a-\tnen-\tce-\tpha-\tlic", "{\tn e n\ts V\tf {\tl I k");
result.add("a-\tnen-\tce-\tpha-\tly", "{\tn V n\ts e\tf V\tl i:");
result.add("a-\tnes-\tthe-\tsi-\to-\tlo-\tgist", "{\tn V s\tT i:\tz i:\tQ\tl V\tdZ V s t");
result.add("a-\tnes-\tthe-\tsi-\to-\tlo-\tgists", "{\tn V s\tT i:\tz i:\tQ\tl V\tdZ V s t s");
result.add("a-\tnes-\tthe-\tsi-\to-\tlo-\tgy", "{\tn V s\tT i:\tz i:\tQ\tl V\tdZ i:");
result.add("a-\tnes-\tthe-\tsia", "{\tn V s\tT i:\tZ V");
result.add("a-\tnes-\tthe-\ttic", "{\tn V s\tT e\tt I k");
result.add("a-\tnes-\tthe-\ttics", "{\tn V s\tT e\tt I k s");
result.add("a-\tnes-\tthe-\ttist", "V\tn e s\tT V\tt V s t");
result.add("a-\tnette", "V\tn e t");
result.add("a-\tneu-\tri-\tsm", "{ n\tj U@\tI\tz V m");
result.add("a-\tnew", "V\tn u:");
result.add("a-\tni-\tbal", "{\tn I\tb V l");
result.add("a-\tni-\tline", "{\tn I\tl i: n");
result.add("a-\tni-\tma-\tted", "{\tn I\tm eI\tt I d");
result.add("a-\tni-\tma-\ttion", "{\tn I\tm eI\tS V n");
result.add("a-\tni-\tma-\ttions", "{\tn I\tm eI\tS V n z");
result.add("a-\tni-\tma-\ttor", "{\tn I\tm eI\tt @r");
result.add("a-\tni-\tma-\ttors", "{\tn I\tm eI\tt @r z");
result.add("a-\tni-\tmal", "{\tn I\tm V l");
result.add("a-\tni-\tmals", "{\tn I\tm V l z");
result.add("a-\tni-\tmal's", "{\tn I\tm V l z");
result.add("a-\tni-\tmate", "{\tn I\tm eI t");
result.add("a-\tni-\tmates", "{\tn I\tm eI t s");
result.add("a-\tni-\tmi-\tsm", "{\tn I\tm I\tz V m");
result.add("a-\tni-\tmist", "{\tn I\tm I s t");
result.add("a-\tni-\tmists", "{\tn I\tm I s t s");
result.add("a-\tni-\tmo-\tsi-\tties", "{\tn I\tm Q\ts I\tt i: z");
result.add("a-\tni-\tmo-\tsi-\tty", "{\tn I\tm Q\ts I\tt i:");
result.add("a-\tni-\tmous", "{\tn I\tm V s");
result.add("a-\tni-\tmus", "{\tn I\tm V s");
result.add("a-\tni-\tseed", "{\tn I\ts i: d");
result.add("a-\tni-\tsette", "{\tn I\ts e t");
result.add("a-\tni-\tta", "V\tn i:\tt V");
result.add("a-\tnise", "{\tn I s");
result.add("a-\tno-\tma-\tlies", "V\tn Q\tm V\tl i: z");
result.add("a-\tno-\tma-\tlous", "V\tn Q\tm V\tl V s");
result.add("a-\tno-\tma-\tly", "V\tn Q\tm V\tl i:");
result.add("a-\tno-\tmie", "{\tn V\tm i:");
result.add("a-\tno-\tna", "Q\tn @U\tn V");
result.add("a-\tno-\tny-\tmi-\tty", "{\tn V\tn I\tm V\tt i:");
result.add("a-\tno-\tny-\tmous", "V\tn Q\tn V\tm V s");
result.add("a-\tno-\tny-\tmous-\tly", "V\tn Q\tn V\tm V s\tl i:");
result.add("a-\tno-\tra", "Q\tn O@\tV");
result.add("a-\tno-\trak", "{\tn @r\t{ k");
result.add("a-\tno-\tre-\txi-\ta", "{\tn @r\te k\ts i:\tV");
result.add("a-\tno-\tre-\txic", "{\tn @r\te k\ts I k");
result.add("a-\tno-\tre-\txics", "{\tn @r\te k\ts I k s");
result.add("a-\tno-\tther", "V\tn V\tD @r");
result.add("a-\tno-\tther's", "V\tn V\tD @r z");
result.add("a-\tnode", "{\tn @U d");
result.add("a-\tnodes", "{\tn @U d z");
result.add("a-\tnoin-\tted", "V\tn OI\tn V d");
result.add("a-\tnoint", "V\tn OI n t");
result.add("a-\tnor-\tthite", "{\tn O@\tT aI t");
result.add("a-\tny", "e\tn i:");
result.add("a-\tny-\tbo-\tdy", "e\tn i:\tb V\td i:");
result.add("a-\tny-\thow", "e\tn i:\th aU");
result.add("a-\tny-\tmore", "e\tn i:\tm O@");
result.add("a-\tny-\ton", "e\tn i:\tQ n");
result.add("a-\tny-\tone", "e\tn i:\tw V n");
result.add("a-\tny-\tone's", "e\tn i:\tw V n z");
result.add("a-\tny-\tplace", "e\tn i: p\tl eI s");
result.add("a-\tny-\tthing", "e\tn i:\tT I N");
result.add("a-\tny-\ttime", "e\tn i:\tt aI m");
result.add("a-\tny-\tway", "e\tn i:\tw eI");
result.add("a-\tny-\tways", "e\tn i:\tw eI z");
result.add("a-\tny-\twhere", "e\tn i:\tw e@");
result.add("a-\to-\tki", "eI\t@U\tk i:");
result.add("a-\to-\tl", "eI\t@U\te l");
result.add("a-\ton", "eI\t@U n");
result.add("a-\tor-\tta", "eI\tO@\tt V");
result.add("a-\tor-\ttic", "eI\tO@\tt I k");
result.add("a-\tp-\tc", "eI\tp i:\ts i:");
result.add("a-\tpa-\tche", "V\tp {\ttS i:");
result.add("a-\tpa-\tches", "V\tp {\ttS i: z");
result.add("a-\tpa-\tche's", "V\tp {\ttS i: z");
result.add("a-\tpa-\tla-\tchi-\tco-\tla", "{\tp V\tl {\ttS V\tk @U\tl V");
result.add("a-\tpa-\tla-\tchi-\tco-\tla's", "{\tp V\tl {\ttS V\tk @U\tl V z");
result.add("a-\tpa-\tthe-\ttic", "{\tp V\tT e\tt I k");
result.add("a-\tpa-\tthy", "{\tp V\tT i:");
result.add("a-\tpa-\ttite", "{\tp V\tt aI t");
result.add("a-\tpa-\ttites", "{\tp V\tt aI t s");
result.add("a-\tpace", "V\tp eI s");
result.add("a-\tpar-\ttheid", "V\tp Q@\tt aI t");
result.add("a-\tpar-\ttheid's", "V\tp Q@\tt aI t s");
result.add("a-\tpart", "V\tp Q@ t");
result.add("a-\tpart-\tment", "V\tp Q@ t\tm V n t");
result.add("a-\tpart-\tments", "V\tp Q@ t\tm V n t s");
result.add("a-\tpe-\tx's", "eI\tp e k\ts V z");
result.add("a-\tpen-\tnine", "{\tp V\tn i: n");
result.add("a-\tper-\tture", "{\tp @r\ttS @r");
result.add("a-\tpex", "eI\tp e k s");
result.add("a-\tpha-\tsia", "V\tf eI\tZ V");
result.add("a-\tphid", "eI\tf V d");
result.add("a-\tphids", "{\tf V d z");
result.add("a-\tpho-\tri-\tsm", "{\tf @r\tI\tz V m");
result.add("a-\tpho-\tri-\tsms", "{\tf @r\tI\tz V m z");
result.add("a-\tpi-\tcel-\tla", "{\tp I\ts e\tl V");
result.add("a-\tpiece", "V\tp i: s");
result.add("a-\tping", "eI\tp I N");
result.add("a-\tpo-\tca-\tlyp-\ttic", "V\tp Q\tk V\tl I p\tt I k");
result.add("a-\tpo-\tca-\tlypse", "V\tp Q\tk V\tl I p s");
result.add("a-\tpo-\tcry-\tphal", "V\tp Q k\tr V\tf V l");
result.add("a-\tpo-\tgee", "{\tp V\tdZ i:");
result.add("a-\tpo-\tli-\tti-\tcal", "eI\tp V\tl I\tt I\tk V l");
result.add("a-\tpo-\tlo-\tge-\ttic", "V\tp Q\tl V\tdZ e\tt I k");
result.add("a-\tpo-\tlo-\tge-\ttical-\tly", "V\tp Q\tl V\tdZ e\tt I k\tl i:");
result.add("a-\tpo-\tlo-\tgi-\tzes", "V\tp Q\tl V\tdZ aI\tz V z");
result.add("a-\tpo-\tlo-\tgi-\tzing", "V\tp Q\tl V\tdZ aI\tz I N");
result.add("a-\tpo-\tlo-\tgies", "V\tp Q\tl V\tdZ i: z");
result.add("a-\tpo-\tlo-\tgist", "V\tp Q\tl V\tdZ V s t");
result.add("a-\tpo-\tlo-\tgists", "V\tp Q\tl V\tdZ V s t s");
result.add("a-\tpo-\tlo-\tgize", "V\tp Q\tl V\tdZ aI z");
result.add("a-\tpo-\tlo-\tgized", "V\tp Q\tl V\tdZ aI z d");
result.add("a-\tpo-\tlo-\tgy", "V\tp Q\tl V\tdZ i:");
result.add("a-\tpo-\tthe-\tca-\try", "V\tp Q\tT V\tk e@\ti:");
result.add("a-\tpo-\tthe-\to-\tsis", "V\tp Q\tT i:\t@U\ts V s");
result.add("a-\tpol-\tli-\tni-\tan", "{\tp V\tl I\tn i:\tV n");
result.add("a-\tpol-\tline", "{\tp V\tl aI n");
result.add("a-\tpol-\tlo", "V\tp Q\tl @U");
result.add("a-\tpol-\tlo-\tni-\tan", "{\tp V\tl @U\tn i:\tV n");
result.add("a-\tpol-\tlo's", "V\tp Q\tl @U z");
result.add("a-\tpop-\tka", "V\tp O: p\tk V");
result.add("a-\tpop-\tle-\txy", "{\tp V p\tl e k\ts i:");
result.add("a-\tpop-\tlec-\ttic", "{\tp V p\tl e k\tt I k");
result.add("a-\tpos-\ttle", "V\tp Q\ts V l");
result.add("a-\tpos-\ttles", "V\tp Q\ts V l z");
result.add("a-\tpos-\ttro-\tphe", "V\tp Q s\tt r V\tf i:");
result.add("a-\tqa-\tba", "V\tk Q\tb V");
result.add("a-\tqua", "{ k\tw V");
result.add("a-\tqua-\tcul-\tture", "{ k\tw V\tk V l\ttS @r");
result.add("a-\tqua-\tlung", "{ k\tw V\tl V N");
result.add("a-\tqua-\tma-\trine", "Q k\tw V\tm @r\ti: n");
result.add("a-\tqua-\tnaut", "Q k\tw V\tn Q t");
result.add("a-\tqua-\tnauts", "Q k\tw V\tn Q t s");
result.add("a-\tqua-\tri-\tum", "V k\tw e@\ti:\tV m");
result.add("a-\tqua-\tri-\tums", "V k\tw e@\ti:\tV m z");
result.add("a-\tqua-\tri-\tus", "V k\tw e@\ti:\tV s");
result.add("a-\tqua-\trist", "V k\tw e@\tV s t");
result.add("a-\tqua-\trists", "V k\tw e@\tV s t s");
result.add("a-\tqua-\ttic", "V k\tw Q\tt I k");
result.add("a-\tque-\tduct", "{ k\tw V\td V k t");
result.add("a-\tque-\tducts", "{ k\tw V\td V k t s");
result.add("a-\tque-\tous", "eI k\tw i:\tV s");
result.add("a-\tqui-\tfer", "{ k\tw I\tf @r");
result.add("a-\tqui-\tfers", "{ k\tw I\tf @r z");
result.add("a-\tqui-\tla", "{ k\tw I\tl V");
result.add("a-\tqui-\tli-\tno", "Q k\tw i:\tl i:\tn @U");
result.add("a-\tqui-\tnas", "V k\tw aI\tn V s");
result.add("a-\tqui-\tno", "V\tk i:\tn @U");
result.add("a-\tqui-\tno's", "V\tk i:\tn @U z");
result.add("a-\tqui-\ttaine", "{ k\tw I\tt eI n");
result.add("a-\tra", "{\tr V");
result.add("a-\tra-\tbel-\tla", "{\tr V\tb e\tl V");
result.add("a-\tra-\tbi-\ta", "@r\teI\tb i:\tV");
result.add("a-\tra-\tbi-\tan", "@r\teI\tb i:\tV n");
result.add("a-\tra-\tbi-\tans", "@r\teI\tb i:\tV n z");
result.add("a-\tra-\tbi-\ta's", "@r\teI\tb i:\tV z");
result.add("a-\tra-\tbi-\tca", "@r\t{\tb I\tk V");
result.add("a-\tra-\tbic", "{\tr V\tb I k");
result.add("a-\tra-\tble", "e@\tV\tb V l");
result.add("a-\tra-\tchnid", "@r\t{ k\tn I d");
result.add("a-\tra-\tchnids", "@r\t{ k\tn I d z");
result.add("a-\tra-\tfat", "e@\tV\tf { t");
result.add("a-\tra-\tfat's", "Q@\tV\tf Q t s");
result.add("a-\tra-\tgon", "e@\tV\tg Q n");
result.add("a-\tra-\tka-\twa", "Q@\tQ\tk Q\tw V");
result.add("a-\tra-\tmid", "e@\tV\tm V d");
result.add("a-\tra-\tmin-\tta", "{\tr V\tm I n\tt V");
result.add("a-\tra-\tmis", "e@\tV\tm I s");
result.add("a-\tra-\tpa-\tho", "@r\t{\tp V\th @U");
result.add("a-\trab", "{\tr V b");
result.add("a-\trabs", "{\tr V b z");
result.add("a-\trai-\tza", "@r\teI\tz V");
result.add("a-\tral", "Q@\tV l");
result.add("a-\tram-\tco", "@r\t{ m\tk @U");
result.add("a-\tran", "e@\tV n");
result.add("a-\tran-\tda", "@r\t{ n\td V");
result.add("a-\tran-\tgo", "Q@\tQ N\tg @U");
result.add("a-\tran-\tsas", "@r\t{ n\ts V s");
result.add("a-\tre-\ta", "e@\ti:\tV");
result.add("a-\tre-\tas", "e@\ti:\tV z");
result.add("a-\tre-\ta's", "e@\ti:\tV z");
result.add("a-\tre-\tna", "@r\ti:\tn V");
result.add("a-\tre-\tnas", "@r\ti:\tn V z");
result.add("a-\tre-\tna's", "@r\ti:\tn V z");
result.add("a-\tre-\tta", "Q@\te\tt V");
result.add("a-\tre-\ttha", "@r\ti:\tT V");
result.add("a-\tre-\tti-\tna", "Q@\te\tt i:\tn V");
result.add("a-\trel", "Q@\te l");
result.add("a-\tren", "Q@\tV n");
result.add("a-\trend", "@r\te n d");
result.add("a-\trends", "@r\te n d z");
result.add("a-\trendt", "e@\te n t");
result.add("a-\trent", "Q@\tV n t");
result.add("a-\tren't", "Q@\tV n t");
result.add("a-\tret-\tta", "Q@\te\tt V");
result.add("a-\tri", "Q@\ti:");
result.add("a-\tri-\ta", "Q@\ti:\tV");
result.add("a-\tri-\ta-\tna", "Q@\ti:\t{\tn V");
result.add("a-\tri-\ta-\tni-\tsm", "{\tr i:\tV\tn I\tz V m");
result.add("a-\tri-\tad-\tne", "e@\ti:\t{ d\tn i:");
result.add("a-\tri-\tan", "{\tr i:\tV n");
result.add("a-\tri-\tan-\tna", "Q@\ti:\t{\tn V");
result.add("a-\tri-\tan-\tna's", "Q@\ti:\t{\tn V z");
result.add("a-\tri-\tane", "e@\ti:\t{ n");
result.add("a-\tri-\tas", "Q@\ti:\tV z");
result.add("a-\tri-\tel", "e@\ti:\tV l");
result.add("a-\tri-\tel-\tla", "Q@\ti:\te\tl V");
result.add("a-\tri-\tsen", "@r\tI\tz V n");
result.add("a-\tri-\tses", "@r\taI\tz V z");
result.add("a-\tri-\tsing", "@r\taI\tz I N");
result.add("a-\tri-\tspe", "Q@\ti: s\tp i:");
result.add("a-\tri-\tzo-\tna", "e@\tI\tz @U\tn V");
result.add("a-\tri-\tzo-\tnan", "@r\tI\tz @U\tn V n");
result.add("a-\tri-\tzo-\tnans", "@r\tI\tz @U\tn V n z");
result.add("a-\tri-\tzo-\tna's", "e@\tI\tz @U\tn V z");
result.add("a-\tric", "{\tr I k");
result.add("a-\trid", "{\tr I d");
result.add("a-\trie", "e@\ti:");
result.add("a-\tries", "e@\ti: z");
result.add("a-\tris", "@r\ti: s");
result.add("a-\tris-\tta", "@r\tI s\tt V");
result.add("a-\tris-\ttide", "Q@\tI s\tt i: d");
result.add("a-\tris-\ttide's", "Q@\tI s\tt i: d z");
result.add("a-\tris-\tto-\tte-\tli-\tan", "@r\tI s\tt V\tt i:\tl i:\tV n");
result.add("a-\tris-\tto-\ttle", "e@\tI s\tt Q\tt V l");
result.add("a-\tris-\tto-\ttle's", "e@\tI s\tt Q\tt V l z");
result.add("a-\tris-\ttoc-\tra-\tcy", "e@\tI s\tt Q k\tr V\ts i:");
result.add("a-\tris-\ttoc-\tra-\ttic", "@r\tI s\tt V k\tr {\tt I k");
result.add("a-\tris-\ttoc-\trat", "@r\tI s\tt V k\tr { t");
result.add("a-\tris-\ttoc-\trats", "@r\tI s\tt V k\tr { t s");
result.add("a-\trise", "@r\taI z");
result.add("a-\trith-\tmet-\tic", "e@\tI T\tm e\tt I k");
result.add("a-\tro", "Q@\t@U");
result.add("a-\tro-\tma", "@r\t@U\tm V");
result.add("a-\tro-\tma-\ttic", "e@\tV\tm {\tt I k");
result.add("a-\tro-\tmas", "@r\t@U\tm V z");
result.add("a-\tro-\tnoff", "e@\tV\tn O: f");
result.add("a-\tro-\tnow", "@r\t@U\tn @U");
result.add("a-\tron", "e@\tV n");
result.add("a-\tron-\tson", "e@\tV n\ts V n");
result.add("a-\trose", "@r\t@U z");
result.add("a-\trou-\tsal", "@r\taU\tz V l");
result.add("a-\trou-\tses", "@r\taU\tz V z");
result.add("a-\trou-\tsing", "@r\taU\tz I N");
result.add("a-\tround", "@r\taU n d");
result.add("a-\trouse", "@r\taU z");
result.add("a-\troused", "@r\taU z d");
result.add("a-\trrant", "{\tr V n t");
result.add("a-\tru-\tba", "@r\tu:\tb V");
result.add("a-\trum", "e@\tV m");
result.add("a-\trun-\tdel", "e@\tV n\td V l");
result.add("a-\trup", "@r\tu: p");
result.add("a-\try", "e@\ti:");
result.add("a-\tsa", "Q\ts V");
result.add("a-\tsa-\thi", "V\ts Q\th i:");
result.add("a-\tsat", "{\tz { t");
result.add("a-\tsce-\ttic", "V\ts e\tt I k");
result.add("a-\tscent", "V\ts e n t");
result.add("a-\tscer-\ttai-\tning", "{\ts @r\tt eI\tn I N");
result.add("a-\tscer-\ttain", "{\ts @r\tt eI n");
result.add("a-\tscer-\ttained", "{\ts @r\tt eI n d");
result.add("a-\tscher", "{\tS @r");
result.add("a-\tse-\ta", "V\tz i:\tV");
result.add("a-\tse-\tan", "V\tz i:\tV n");
result.add("a-\tshame", "V\tS eI m");
result.add("a-\tshamed", "V\tS eI m d");
result.add("a-\tshen", "{\tS V n");
result.add("a-\tsher", "{\tS @r");
result.add("a-\tshes", "{\tS V z");
result.add("a-\tshe's", "{\tS V z");
result.add("a-\tshok", "{\tS Q k");
result.add("a-\tshore", "V\tS O@");
result.add("a-\tshur", "{\tS @r");
result.add("a-\tshville", "{ S\tv I l");
result.add("a-\tshy", "{\tS i:");
result.add("a-\tsi-\ta-\ttic", "eI\tZ i:\t{\tt I k");
result.add("a-\tsi-\tmov", "{\ts V\tm Q v");
result.add("a-\tsi-\tnine", "{\ts I\tn aI n");
result.add("a-\tsia", "eI\tZ V");
result.add("a-\tsian", "eI\tZ V n");
result.add("a-\tsians", "eI\tZ V n z");
result.add("a-\tsia's", "eI\tZ V z");
result.add("a-\tsic", "{\tz I k");
result.add("a-\tside", "V\ts aI d");
result.add("a-\tsides", "V\ts aI d z");
result.add("a-\tsun-\tcion", "V\ts V n\tS V n");
result.add("a-\tsun-\tder", "V\ts V n\td @r");
result.add("a-\tsy-\tlum", "V\ts aI\tl V m");
result.add("a-\tsym-\tmet-\tri-\tcal", "eI\ts V\tm e t\tr I\tk V l");
result.add("a-\tsym-\tmet-\tries", "eI\ts I\tm V t\tr i: z");
result.add("a-\tsym-\tmet-\try", "eI\ts I\tm V t\tr i:");
result.add("a-\tsymp-\tto-\tma-\ttic", "eI\ts I m\tp t V\tm {\tt I k");
result.add("a-\tsymp-\ttote", "{\ts V m\tt @U t");
result.add("a-\tsymp-\ttotes", "{\ts V m\tt @U t s");
result.add("a-\tsynch-\tro-\tnous", "eI\ts I N\tk r V\tn V s");
result.add("a-\tt-\tp", "eI\tt i:\tp i:");
result.add("a-\tta", "Q\tt V");
result.add("a-\tta-\tla-\tya", "Q\tt Q\tl eI\tV");
result.add("a-\tta-\tlan-\tta", "{\tt V\tl { n\tt V");
result.add("a-\tta-\tlie", "{\tt V\tl i:");
result.add("a-\tta-\tri", "V\tt Q@\ti:");
result.add("a-\tta-\tri's", "V\tt Q@\ti: z");
result.add("a-\tta-\tturk", "{\tt V\tt @r k");
result.add("a-\tta-\tvi-\tsm", "{\tt V\tv I\tz V m");
result.add("a-\tta-\tvis-\ttic", "{\tt V\tv I s\tt I k");
result.add("a-\tta-\txi-\ta", "eI\tt { k\ts i:\tV");
result.add("a-\tta-\txi-\ta's", "eI\tt { k\ts i:\tV z");
result.add("a-\ttche-\tson", "{\ttS V\ts V n");
result.add("a-\ttchi-\tson", "{\ttS I\ts V n");
result.add("a-\tten", "eI\tt V n");
result.add("a-\tter", "eI\tt @r");
result.add("a-\ttha-\tli-\ta", "eI\tT {\tl i:\tV");
result.add("a-\tthe-\ti-\tsm", "eI\tT i:\tI\tz V m");
result.add("a-\tthe-\tis-\ttic", "eI\tT i:\tI s\tt I k");
result.add("a-\tthe-\tist", "eI\tT i:\tI s t");
result.add("a-\tthe-\tists", "eI\tT i:\tI s t s");
result.add("a-\tthe-\tna", "V\tT i:\tn V");
result.add("a-\tthe-\tnae-\tum", "{\tT V\tn i:\tV m");
result.add("a-\tthe-\tneum", "{\tT V\tn u: m");
result.add("a-\tthe-\tni-\tan", "V\tT i:\tn i:\tV n");
result.add("a-\tthe-\tni-\tans", "V\tT i:\tn i:\tV n z");
result.add("a-\tthe-\trosc-\tle-\tro-\tsis", "{\tT @r\t@U s\tk l @r\t@U\ts V s");
result.add("a-\tthens", "{\tT V n z");
result.add("a-\tther-\tton", "{\tT @r\tt V n");
result.add("a-\tthey", "{\tT i:");
result.add("a-\tthie", "eI\tT i:");
result.add("a-\tthle-\tti-\tcism", "{ T\tl e\tt I\ts I z m");
result.add("a-\tthle-\ttic", "{ T\tl e\tt I k");
result.add("a-\tthle-\ttical-\tly", "{ T\tl e\tt I k\tl i:");
result.add("a-\tthle-\ttics", "{ T\tl e\tt I k s");
result.add("a-\tthlete", "{ T\tl i: t");
result.add("a-\tthletes", "{ T\tl i: t s");
result.add("a-\tto-\tcha", "V\tt Q\ttS V");
result.add("a-\tto-\tmi-\tzer", "{\tt V\tm aI\tz @r");
result.add("a-\tto-\tmic", "V\tt Q\tm I k");
result.add("a-\tto-\tnal", "eI\tt @U\tn V l");
result.add("a-\ttoll", "{\tt Q l");
result.add("a-\ttom", "{\tt V m");
result.add("a-\ttoms", "{\tt V m z");
result.add("a-\tton", "V\tt Q n");
result.add("a-\ttone", "V\tt @U n");
result.add("a-\ttone-\tment", "V\tt @U n\tm V n t");
result.add("a-\ttop", "V\tt Q p");
result.add("a-\ttor", "e\tt @r");
result.add("a-\tty-\tpi-\tcal", "eI\tt I\tp I\tk V l");
result.add("a-\tva", "eI\tv V");
result.add("a-\tva-\tlan-\tches", "{\tv V\tl { n\ttS V z");
result.add("a-\tva-\tlanche", "{\tv V\tl { n tS");
result.add("a-\tva-\tlon", "{\tv V\tl Q n");
result.add("a-\tva-\tlon's", "{\tv V\tl Q n z");
result.add("a-\tva-\trice", "{\tv @r\tI s");
result.add("a-\tvai-\tla-\tbi-\tli-\tties", "V\tv eI\tl V\tb I\tl V\tt i: z");
result.add("a-\tvai-\tla-\tbi-\tli-\tty", "V\tv eI\tl V\tb I\tl V\tt i:");
result.add("a-\tvai-\tla-\tble", "V\tv eI\tl V\tb V l");
result.add("a-\tvail", "V\tv eI l");
result.add("a-\tvailed", "V\tv eI l d");
result.add("a-\tvan-\tti", "V\tv Q n\tt i:");
result.add("a-\tvant", "V\tv Q n t");
result.add("a-\tvant-\tgarde", "V\tv Q n\tt g Q@ d");
result.add("a-\tve-\tli-\tne", "Q\tv e\tl i:\tn i:");
result.add("a-\tve-\tna", "Q\tv eI\tn V");
result.add("a-\tve-\tnel", "Q\tv eI\tn e l");
result.add("a-\tve-\trage", "{\tv @r\tI dZ");
result.add("a-\tve-\try", "eI\tv @r\ti:");
result.add("a-\tve-\tryl", "{\tv @r\tV l");
result.add("a-\tve-\try's", "eI\tv @r\ti: z");
result.add("a-\tvel-\tla", "V\tv e\tl V");
result.add("a-\tvel-\tli-\tno", "{\tv V\tl i:\tn @U");
result.add("a-\tvel-\tli-\tno's", "{\tv V\tl i:\tn @U z");
result.add("a-\tven-\tger", "V\tv e n\tdZ @r");
result.add("a-\tvenge", "V\tv e n dZ");
result.add("a-\tvenged", "V\tv e n dZ d");
result.add("a-\tver-\tsion", "V\tv @r\tZ V n");
result.add("a-\tver-\tsive", "V\tv @r\ts I v");
result.add("a-\tver-\tted", "V\tv @r\tt V d");
result.add("a-\tver-\tting", "V\tv @r\tt I N");
result.add("a-\tvers", "eI\tv @r z");
result.add("a-\tverse", "V\tv @r s");
result.add("a-\tvert", "V\tv @r t");
result.add("a-\tverts", "V\tv @r t s");
result.add("a-\tvi", "Q\tv i:");
result.add("a-\tvi-\ta-\tries", "eI\tv i:\te@\ti: z");
result.add("a-\tvi-\ta-\try", "eI\tv i:\te@\ti:");
result.add("a-\tvi-\ta-\ttion", "eI\tv i:\teI\tS V n");
result.add("a-\tvi-\ta-\ttion's", "eI\tv i:\teI\tS V n z");
result.add("a-\tvi-\ta-\ttor", "eI\tv i:\teI\tt @r");
result.add("a-\tvi-\ta-\ttors", "eI\tv i:\teI\tt @r z");
result.add("a-\tvi-\tla", "V\tv I\tl V");
result.add("a-\tvi-\to-\tnic", "eI\tv i:\tQ\tn I k");
result.add("a-\tvi-\to-\tnics", "eI\tv i:\tQ\tn I k s");
result.add("a-\tvi-\tons", "eI\tv i:\tV n z");
result.add("a-\tvi-\ttal", "V\tv i:\tt V l");
result.add("a-\tvice", "Q\tv aI s");
result.add("a-\tvid", "{\tv I d");
result.add("a-\tvid-\tly", "{\tv I d\tl i:");
result.add("a-\tvil-\tla", "V\tv I\tl V");
result.add("a-\tvin-\tger", "eI\tv I\tN @r");
result.add("a-\tvis", "eI\tv I s");
result.add("a-\tviv", "Q\tv i: v");
result.add("a-\tviv's", "Q\tv i: v z");
result.add("a-\tvo-\tca-\tdo", "{\tv V\tk Q\td @U");
result.add("a-\tvo-\tca-\tdos", "{\tv V\tk Q\td @U z");
result.add("a-\tvo-\tca-\ttion", "{\tv V\tk eI\tS V n");
result.add("a-\tvo-\tcet", "{\tv V\ts e t");
result.add("a-\tvo-\twed-\tly", "V\tv aU\tV d\tl i:");
result.add("a-\tvoi-\tda-\tble", "V\tv OI\td V\tb V l");
result.add("a-\tvoi-\tdance", "V\tv OI\td V n s");
result.add("a-\tvoi-\tded", "V\tv OI\td V d");
result.add("a-\tvoi-\tding", "V\tv OI\td I N");
result.add("a-\tvoid", "V\tv OI d");
result.add("a-\tvoids", "V\tv OI d z");
result.add("a-\tvon", "eI\tv Q n");
result.add("a-\tvon-\tdale", "{\tv V n\td eI l");
result.add("a-\tvon's", "{\tv V n z");
result.add("a-\tvow", "V\tv aU");
result.add("a-\tvowed", "V\tv aU d");
result.add("a-\tvun-\tcu-\tlar", "V\tv V N\tk j V\tl @r");
result.add("a-\twa-\tke-\tning", "V\tw eI\tk V\tn I N");
result.add("a-\twa-\tken", "V\tw eI\tk V n");
result.add("a-\twa-\tkened", "V\tw eI\tk V n d");
result.add("a-\twa-\tkens", "V\tw eI\tk V n z");
result.add("a-\twacs", "eI\tw { k s");
result.add("a-\twad", "V\tw Q d");
result.add("a-\twai-\tted", "V\tw eI\tt V d");
result.add("a-\twai-\tting", "V\tw eI\tt I N");
result.add("a-\twait", "V\tw eI t");
result.add("a-\twaits", "V\tw eI t s");
result.add("a-\twake", "V\tw eI k");
result.add("a-\twalt", "Q\tv V l t");
result.add("a-\twan", "eI\tw V n");
result.add("a-\twar-\tded", "V\tw O@\td V d");
result.add("a-\twar-\tding", "V\tw O@\td I N");
result.add("a-\tward", "V\tw O@ d");
result.add("a-\twards", "V\tw O@ d z");
result.add("a-\tware", "V\tw e@");
result.add("a-\tware-\tness", "V\tw e@\tn V s");
result.add("a-\twash", "V\tw Q S");
result.add("a-\tway", "V\tw eI");
result.add("a-\tways", "eI\tw eI z");
result.add("a-\twhile", "V\tw aI l");
result.add("a-\twoke", "V\tw @U k");
result.add("a-\txa", "{ k\ts V");
result.add("a-\txa's", "{ k\ts V z");
result.add("a-\txel", "{ k\ts V l");
result.add("a-\txes", "{ k\ts V z");
result.add("a-\txi-\to-\tma-\ttic", "{ k\ts i:\tV\tm {\tt I k");
result.add("a-\txi-\tom", "{ k\ts i:\tV m");
result.add("a-\txi-\toms", "{ k\ts i:\tV m z");
result.add("a-\txis", "{ k\ts I s");
result.add("a-\txle", "{ k\ts V l");
result.add("a-\txles", "{ k\ts V l z");
result.add("a-\txon", "{ k\ts Q n");
result.add("a-\txons", "{ k\ts Q n z");
result.add("a-\tya-\tcu-\tcho", "aI\tV\tk V\ttS @U");
result.add("a-\tya-\tla", "V\tj Q\tl V");
result.add("a-\tya-\ttol-\tlah", "aI\tV\tt @U\tl V");
result.add("a-\tya-\ttol-\tlahs", "aI\tV\tt Q\tl Q z");
result.add("a-\tyer", "aI\t@r");
result.add("a-\tyers", "aI\t@r z");
result.add("a-\tyo", "eI\t@U");
result.add("a-\tza-\tlea", "V\tz eI l\tj V");
result.add("a-\tza-\tleas", "V\tz eI l\tj V z");
result.add("a-\tza-\tli-\ta", "Q\tz Q\tl i:\tV");
result.add("a-\tzac-\ttam", "V\tz { k\tt { m");
result.add("a-\tzar", "Q\tz Q@");
result.add("a-\tze-\tri", "V\tz e@\ti:");
result.add("a-\tzer-\tbai-\tja-\tni", "Q\tz @r\tb aI\tdZ Q\tn i:");
result.add("a-\tzer-\tbai-\tja-\tnis", "Q\tz @r\tb aI\tdZ Q\tn i: z");
result.add("a-\tzer-\tbai-\tjan", "Q\tz @r\tb aI\tdZ Q n");
result.add("a-\tzer-\tbai-\tjan's", "Q\tz @r\tb aI\tdZ Q n z");
result.add("a-\tzi-\tdo-\tthy-\tmi-\tdine", "V\tz I\td V\tT aI\tm V\td i: n");
result.add("a-\tzides", "{\tz aI d z");
result.add("a-\tzores", "V\tz O@ z");
result.add("a-\tzure", "{\tZ @r");
result.add("a.", "eI");
result.add("aa-\tberg", "Q\tb @r g");
result.add("aa-\tchen", "Q\tk V n");
result.add("aa-\tron", "e@\tV n");
result.add("aa-\tron-\tson", "e@\tV n\ts V n");
result.add("aa-\tron-\tson's", "e@\tV n\ts V n z");
result.add("aa-\tron's", "e@\tV n z");
result.add("aar-\tdvark", "Q@ d\tv Q@ k");
result.add("ab", "{ b");
result.add("ab-\tba", "{\tb V");
result.add("ab-\tba-\tdo", "V\tb Q\td @U");
result.add("ab-\tba-\tsi", "Q\tb Q\ts i:");
result.add("ab-\tbate", "Q\tb eI t");
result.add("ab-\tbe", "{\tb i:");
result.add("ab-\tbey", "{\tb i:");
result.add("ab-\tbey's", "{\tb i: z");
result.add("ab-\tbie", "{\tb i:");
result.add("ab-\tbot", "{\tb V t");
result.add("ab-\tbott", "{\tb V t");
result.add("ab-\tbott's", "{\tb V t s");
result.add("ab-\tboud", "V\tb u: d");
result.add("ab-\tbre-\tvi-\ta-\tting", "V b\tr i:\tv i:\teI\tt I N");
result.add("ab-\tbre-\tvi-\ta-\ttion", "V b\tr i:\tv i:\teI\tS V n");
result.add("ab-\tbre-\tvi-\ta-\ttions", "V b\tr i:\tv i:\teI\tS V n z");
result.add("ab-\tbre-\tvi-\tat-\ted", "V b\tr i:\tv i:\teI\tt V d");
result.add("ab-\tbre-\tvi-\tate", "V b\tr i:\tv i:\teI t");
result.add("ab-\tbre-\tvi-\tates", "V b\tr i:\tv i:\teI t s");
result.add("ab-\tby", "{\tb i:");
result.add("ab-\tde-\tlla", "{ b\td e\tl V");
result.add("ab-\tdel", "{ b\td e l");
result.add("ab-\tdi-\tca-\tted", "{ b\td I\tk eI\tt V d");
result.add("ab-\tdi-\tca-\tting", "{ b\td I\tk eI\tt I N");
result.add("ab-\tdi-\tca-\ttion", "{ b\td I\tk eI\tS V n");
result.add("ab-\tdi-\tcate", "{ b\td I\tk eI t");
result.add("ab-\tdi-\tcates", "{ b\td I\tk eI t s");
result.add("ab-\tdo-\tmen", "{ b\td @U\tm V n");
result.add("ab-\tdo-\tmi-\tnal", "{ b\td Q\tm I\tn V l");
result.add("ab-\tdu-\tlla", "Q b\td u:\tl V");
result.add("ab-\tdu-\tllah", "{ b\td V\tl V");
result.add("ab-\tduc-\tted", "{ b\td V k\tt V d");
result.add("ab-\tduc-\ttee", "{ b\td V k\tt i:");
result.add("ab-\tduc-\ttees", "{ b\td V k\tt i: z");
result.add("ab-\tduc-\tting", "{ b\td V k\tt I N");
result.add("ab-\tduc-\ttion", "{ b\td V k\tS V n");
result.add("ab-\tduc-\ttions", "{ b\td V k\tS V n z");
result.add("ab-\tduc-\ttor", "{ b\td V k\tt @r");
result.add("ab-\tduc-\ttors", "{ b\td V k\tt @r z");
result.add("ab-\tduct", "{ b\td V k t");
result.add("ab-\tducts", "{ b\td V k t s");
result.add("ab-\tdul", "{ b\td u: l");
result.add("ab-\tject", "{ b\tdZ e k t");
result.add("ab-\tnor-\tma-\tlly", "{ b\tn O@\tm V\tl i:");
result.add("ab-\tra", "Q b\tr V");
result.add("ab-\tra-\tca-\tda-\tbra", "{ b\tr V\tk V\td { b\tr V");
result.add("ab-\tra-\tham", "eI b\tr V\th { m");
result.add("ab-\tra-\tham-\tsen", "{ b\tr V\th { m\ts V n");
result.add("ab-\tra-\thams", "eI b\tr V\th { m z");
result.add("ab-\tra-\tmo", "Q b\tr Q\tm @U");
result.add("ab-\tra-\tsion", "V b\tr eI\tZ V n");
result.add("ab-\tra-\tsions", "V b\tr eI\tZ V n z");
result.add("ab-\tra-\tsive", "V b\tr eI\ts I v");
result.add("ab-\tra-\tsives", "V b\tr eI\ts I v z");
result.add("ab-\tram", "V b\tr { m");
result.add("ab-\tram-\tson", "eI b\tr V m\ts V n");
result.add("ab-\trams", "eI b\tr V m z");
result.add("ab-\treast", "V b\tr e s t");
result.add("ab-\tridge", "V b\tr I dZ");
result.add("ab-\tridged", "V b\tr I dZ d");
result.add("ab-\tril", "V b\tr I l");
result.add("ab-\tro-\tga-\tted", "{ b\tr V\tg eI\tt V d");
result.add("ab-\tro-\tga-\tting", "{ b\tr V\tg eI\tt I N");
result.add("ab-\tro-\tga-\ttion", "{ b\tr V\tg eI\tS V n");
result.add("ab-\tro-\tgate", "{ b\tr V\tg eI t");
result.add("ab-\troad", "V b\tr O: d");
result.add("ab-\trupt", "V b\tr V p t");
result.add("ab-\trupt-\tly", "V b\tr V p\tt l i:");
result.add("ab-\trupt-\tness", "V b\tr V p\tt n V s");
result.add("ab-\tsa-\tlom", "{ b\ts V\tl V m");
result.add("ab-\tsen-\tces", "{ b\ts V n\ts V z");
result.add("ab-\tsen-\ttee", "{ b\ts V n\tt i:");
result.add("ab-\tsen-\ttee-\ti-\tsm", "{ b\ts V n\tt i:\tI\tz V m");
result.add("ab-\tsen-\ttees", "{ b\ts V n\tt i: z");
result.add("ab-\tsen-\ttia", "{ b\ts e n\tS V");
result.add("ab-\tsence", "{ b\ts V n s");
result.add("ab-\tsent", "{ b\ts V n t");
result.add("ab-\tshi-\ter", "{ b\tS i:\t@r");
result.add("ab-\tso-\tlu-\tti-\tsm", "{ b\ts V\tl u:\tt I\tz V m");
result.add("ab-\tso-\tlu-\ttion", "{ b\ts V\tl u:\tS V n");
result.add("ab-\tso-\tlu-\ttist", "{ b\ts V\tl u:\tt V s t");
result.add("ab-\tso-\tlute", "{ b\ts V\tl u: t");
result.add("ab-\tso-\tlute-\tly", "{ b\ts V\tl u: t\tl i:");
result.add("ab-\tso-\tlute-\tness", "{ b\ts V\tl u: t\tn V s");
result.add("ab-\tso-\tlutes", "{ b\ts V\tl u: t s");
result.add("ab-\tsol-\tving", "V b\tz Q l\tv I N");
result.add("ab-\tsolve", "V b\tz Q l v");
result.add("ab-\tsolved", "V b\tz Q l v d");
result.add("ab-\tsolves", "V b\tz Q l v z");
result.add("ab-\tsor-\tben-\tcy", "V b\tz O@\tb V n\ts i:");
result.add("ab-\tsor-\tbent", "V b\tz O@\tb V n t");
result.add("ab-\tsor-\tber", "V b\tz O@\tb @r");
result.add("ab-\tsor-\tbers", "V b\tz O@\tb @r z");
result.add("ab-\tsor-\tbing", "V b\tz O@\tb I N");
result.add("ab-\tsorb", "V b\tz O@ b");
result.add("ab-\tsorbed", "V b\tz O@ b d");
result.add("ab-\tsorbs", "V b\tz O@ b z");
result.add("ab-\tsorp-\ttion", "V b\tz O@ p\tS V n");
result.add("ab-\tstai-\tning", "V b\ts t eI\tn I N");
result.add("ab-\tstain", "V b\ts t eI n");
result.add("ab-\tstained", "V b\ts t eI n d");
result.add("ab-\tsten-\ttion", "V b\ts t e n\ttS V n");
result.add("ab-\tsten-\ttions", "V b\ts t e n\ttS V n z");
result.add("ab-\tsti-\tnence", "{ b\ts t I\tn V n s");
result.add("ab-\tsti-\tnent", "{ b\ts t I\tn V n t");
result.add("ab-\tsur-\tdi-\tties", "V b\ts @r\td I\tt i: z");
result.add("ab-\tsur-\tdi-\tty", "V b\ts @r\td I\tt i:");
result.add("ab-\tsur-\tdist", "V b\ts @r\td I s t");
result.add("ab-\tsurd", "V b\ts @r d");
result.add("ab-\tsurd-\tly", "V b\ts @r d\tl i:");
result.add("abbe-\tville", "{ b\tv I l");
result.add("abbs", "{ b z");
result.add("abd-\tel", "{ b\td e l");
result.add("abe", "eI b");
result.add("abs-\tcam", "{ b\ts k { m");
result.add("abs-\tcess", "{ b\ts e s");
result.add("abst-\trac-\tted", "{ b\ts t r { k\tt V d");
result.add("abst-\trac-\ttion", "{ b\ts t r { k\tS V n");
result.add("abst-\trac-\ttions", "{ b\ts t r { k\tS V n z");
result.add("abst-\tract", "{ b\ts t r { k t");
result.add("abst-\tracts", "{ b\ts t r { k t s");
result.add("abst-\truse", "V b\ts t r u: s");
result.add("abt", "{ b t");
result.add("ac-\tce-\tded", "{ k\ts i:\td V d");
result.add("ac-\tce-\tding", "{ k\ts i:\td I N");
result.add("ac-\tce-\tle-\tra-\tted", "{ k\ts e\tl @r\teI\tt V d");
result.add("ac-\tce-\tle-\tra-\tting", "{ k\ts e\tl @r\teI\tt I N");
result.add("ac-\tce-\tle-\tra-\ttion", "{ k\ts e\tl @r\teI\tS V n");
result.add("ac-\tce-\tle-\tra-\ttor", "{ k\ts e\tl @r\teI\tt @r");
result.add("ac-\tce-\tle-\trant", "{ k\ts e\tl @r\tV n t");
result.add("ac-\tce-\tle-\trants", "{ k\ts e\tl @r\tV n t s");
result.add("ac-\tce-\tle-\trate", "{ k\ts e\tl @r\teI t");
result.add("ac-\tce-\tle-\trates", "{ k\ts e\tl @r\teI t s");
result.add("ac-\tce-\tle-\tro-\tme-\tter", "{ k\ts e\tl @r\tQ\tm V\tt @r");
result.add("ac-\tce-\tle-\tro-\tme-\tters", "{ k\ts e\tl @r\tQ\tm V\tt @r z");
result.add("ac-\tcede", "{ k\ts i: d");
result.add("ac-\tcedes", "{ k\ts i: d z");
result.add("ac-\tcel", "V k\ts e l");
result.add("ac-\tcen-\tted", "{ k\ts e n\tt V d");
result.add("ac-\tcen-\tting", "{ k\ts e n\tt I N");
result.add("ac-\tcen-\ttu-\ta-\tted", "{ k\ts e n\ttS V\tw eI\tt V d");
result.add("ac-\tcen-\ttu-\ta-\tting", "{ k\ts e n\ttS V\tw eI\tt I N");
result.add("ac-\tcen-\ttu-\tate", "V k\ts e n\ttS u:\teI t");
result.add("ac-\tcen-\ttu-\tates", "V k\ts e n\ttS u:\teI t s");
result.add("ac-\tcent", "V k\ts e n t");
result.add("ac-\tcents", "{ k\ts e n t s");
result.add("ac-\tcep-\tta-\tbi-\tli-\tty", "V k\ts e p\tt V\tb I\tl V\tt i:");
result.add("ac-\tcep-\tta-\tble", "{ k\ts e p\tt V\tb V l");
result.add("ac-\tcep-\ttan-\tces", "{ k\ts e p\tt V n\ts V z");
result.add("ac-\tcep-\ttance", "{ k\ts e p\tt V n s");
result.add("ac-\tcep-\tted", "{ k\ts e p\tt V d");
result.add("ac-\tcep-\tting", "{ k\ts e p\tt I N");
result.add("ac-\tcept", "{ k\ts e p t");
result.add("ac-\tcepts", "{ k\ts e p t s");
result.add("ac-\tces-\tsi-\tbi-\tli-\tty", "{ k\ts e\ts I\tb I\tl I\tt i:");
result.add("ac-\tces-\tsi-\tble", "{ k\ts e\ts I\tb V l");
result.add("ac-\tces-\tsing", "{ k\ts e\ts I N");
result.add("ac-\tces-\tsion", "V k\ts e\tS V n");
result.add("ac-\tces-\tso-\tries", "{ k\ts e\ts @r\ti: z");
result.add("ac-\tces-\tso-\trize", "{ k\ts e\ts @r\taI z");
result.add("ac-\tces-\tso-\trized", "{ k\ts e\ts @r\taI z d");
result.add("ac-\tces-\tso-\try", "{ k\ts e\ts @r\ti:");
result.add("ac-\tcess", "{ k\ts e s");
result.add("ac-\tcessed", "{ k\ts e s t");
result.add("ac-\tci-\tden-\ttal", "{ k\ts I\td e n\tt V l");
result.add("ac-\tci-\tden-\ttal-\tly", "{ k\ts I\td e n\tt V\tl i:");
result.add("ac-\tci-\tdent", "{ k\ts I\td V n t");
result.add("ac-\tci-\tdent-\tly", "{ k\ts I\td V n\tt l i:");
result.add("ac-\tci-\tdents", "{ k\ts I\td V n t s");
result.add("ac-\tci-\tdent's", "{ k\ts I\td V n t s");
result.add("ac-\tclai-\tming", "V k\tl eI\tm I N");
result.add("ac-\tclaim", "V k\tl eI m");
result.add("ac-\tclaimed", "V k\tl eI m d");
result.add("ac-\tcli-\tma-\tted", "{ k\tl I\tm eI\tt V d");
result.add("ac-\tcli-\tma-\ttion", "{ k\tl I\tm eI\tS V n");
result.add("ac-\tcli-\tmate", "{ k\tl I\tm eI t");
result.add("ac-\tco-\tlade", "{\tk V\tl eI d");
result.add("ac-\tco-\tlades", "{\tk V\tl eI d z");
result.add("ac-\tcom-\tmo-\tda-\tted", "V\tk Q\tm V\td eI\tt V d");
result.add("ac-\tcom-\tmo-\tda-\tting", "V\tk Q\tm V\td eI\tt I N");
result.add("ac-\tcom-\tmo-\tda-\ttion", "V\tk Q\tm V\td eI\tS V n");
result.add("ac-\tcom-\tmo-\tda-\ttions", "V\tk Q\tm V\td eI\tS V n z");
result.add("ac-\tcom-\tmo-\tda-\ttive", "V\tk Q\tm V\td eI\tt I v");
result.add("ac-\tcom-\tmo-\tdate", "V\tk Q\tm V\td eI t");
result.add("ac-\tcom-\tmo-\tdates", "V\tk Q\tm V\td eI t s");
result.add("ac-\tcom-\tpa-\tnied", "V\tk V m\tp V\tn i: d");
result.add("ac-\tcom-\tpa-\tnies", "V\tk V m\tp V\tn i: z");
result.add("ac-\tcom-\tpa-\tnist", "V\tk V m\tp V\tn V s t");
result.add("ac-\tcom-\tpa-\tny", "V\tk V m\tp V\tn i:");
result.add("ac-\tcom-\tpa-\tny-\ting", "V\tk V m\tp V\tn i:\tI N");
result.add("ac-\tcom-\tpli", "Q\tk Q m\tp l i:");
result.add("ac-\tcomp-\tli-\tces", "V\tk Q m\tp l V\ts V z");
result.add("ac-\tcomp-\tli-\tshes", "V\tk Q m\tp l I\tS V z");
result.add("ac-\tcomp-\tli-\tshing", "V\tk Q m\tp l I\tS I N");
result.add("ac-\tcomp-\tlice", "V\tk Q m\tp l V s");
result.add("ac-\tcomp-\tlish", "V\tk Q m\tp l I S");
result.add("ac-\tcomp-\tlish-\tment", "V\tk Q m\tp l I S\tm V n t");
result.add("ac-\tcomp-\tlish-\tments", "V\tk Q m\tp l I S\tm V n t s");
result.add("ac-\tcomp-\tlished", "V\tk Q m\tp l I S t");
result.add("ac-\tcor-\tdance", "V\tk O@\td V n s");
result.add("ac-\tcor-\tded", "V\tk O@\td V d");
result.add("ac-\tcor-\tdi-\ton", "V\tk O@\td i:\tV n");
result.add("ac-\tcor-\tdi-\tons", "V\tk O@\td i:\tV n z");
result.add("ac-\tcor-\tding", "V\tk O@\td I N");
result.add("ac-\tcor-\tding-\tly", "V\tk O@\td I N\tl i:");
result.add("ac-\tcord", "V\tk O@ d");
result.add("ac-\tcords", "V\tk O@ d z");
result.add("ac-\tcord's", "V\tk O@ d z");
result.add("ac-\tcos-\tted", "V\tk Q s\tt V d");
result.add("ac-\tcos-\tting", "V\tk Q s\tt I N");
result.add("ac-\tcost", "V\tk O: s t");
result.add("ac-\tcou-\tter-\tment", "V\tk u:\tt @r\tm V n t");
result.add("ac-\tcou-\tter-\tments", "V\tk u:\tt @r\tm V n t s");
result.add("ac-\tcoun-\tta-\tbi-\tli-\tty", "V\tk aU n\tt V\tb I\tl V\tt i:");
result.add("ac-\tcoun-\tta-\tble", "V\tk aU n\tt V\tb V l");
result.add("ac-\tcoun-\ttan-\tcy", "V\tk aU n\tt V n\ts i:");
result.add("ac-\tcoun-\ttant", "V\tk aU n\tt V n t");
result.add("ac-\tcoun-\ttants", "V\tk aU n\tt V n t s");
result.add("ac-\tcoun-\ttant's", "V\tk aU n\tt V n t s");
result.add("ac-\tcoun-\tted", "V\tk aU n\tt V d");
result.add("ac-\tcoun-\tting", "V\tk aU n\tt I N");
result.add("ac-\tcount", "V\tk aU n t");
result.add("ac-\tcounts", "V\tk aU n t s");
result.add("ac-\tcount's", "V\tk aU n t s");
result.add("ac-\tcre-\tdi-\tta-\ttion", "V k\tr e\td V\tt eI\tS V n");
result.add("ac-\tcre-\tdi-\tta-\ttions", "V k\tr e\td V\td eI\tS V n z");
result.add("ac-\tcre-\tdi-\tted", "V k\tr e\td V\tt V d");
result.add("ac-\tcre-\tdit", "V k\tr e\td V t");
result.add("ac-\tcre-\ttion", "V k\tr i:\tS V n");
result.add("ac-\tcru-\tal", "V k\tr u:\tV l");
result.add("ac-\tcru-\tals", "V k\tr u:\tV l z");
result.add("ac-\tcru-\ting", "V k\tr u:\tI N");
result.add("ac-\tcrue", "V k\tr u:");
result.add("ac-\tcrued", "V k\tr u: d");
result.add("ac-\tcrues", "V k\tr u: z");
result.add("ac-\tcu-\tmu-\tla-\tted", "V k\tj u: m\tj V\tl eI\tt V d");
result.add("ac-\tcu-\tmu-\tla-\tting", "V k\tj u: m\tj V\tl eI\tt I N");
result.add("ac-\tcu-\tmu-\tla-\ttion", "V k\tj u: m\tj V\tl eI\tS V n");
result.add("ac-\tcu-\tmu-\tla-\ttions", "V k\tj u: m\tj V\tl eI\tS V n z");
result.add("ac-\tcu-\tmu-\tla-\ttive", "V k\tj u: m\tj V\tl eI\tt I v");
result.add("ac-\tcu-\tmu-\tla-\ttive-\tly", "V k\tj u: m\tj V\tl eI\tt I v\tl i:");
result.add("ac-\tcu-\tmu-\tla-\ttor", "V k\tj u: m\tj V\tl eI\tt @r");
result.add("ac-\tcu-\tmu-\tla-\ttors", "V k\tj u: m\tj V\tl eI\tt @r z");
result.add("ac-\tcu-\tmu-\tlate", "V k\tj u: m\tj V\tl eI t");
result.add("ac-\tcu-\tmu-\tlates", "V k\tj u: m\tj V\tl eI t s");
result.add("ac-\tcu-\tra-\tcies", "{ k\tj @r\tV\ts i: z");
result.add("ac-\tcu-\tra-\tcy", "{ k\tj @r\tV\ts i:");
result.add("ac-\tcu-\trate", "{ k\tj @r\tV t");
result.add("ac-\tcu-\trate-\tly", "{ k\tj @r\tV t\tl i:");
result.add("ac-\tcu-\tsa-\ttion", "{ k\tj V\tz eI\tS V n");
result.add("ac-\tcu-\tsa-\ttions", "{ k\tj V\tz eI\tS V n z");
result.add("ac-\tcu-\tsa-\ttive", "V k\tj u:\tz V\tt I v");
result.add("ac-\tcu-\tsa-\tto-\try", "V k\tj u:\tz V\tt O@\ti:");
result.add("ac-\tcu-\tser", "V k\tj u:\tz @r");
result.add("ac-\tcu-\tsers", "V k\tj u:\tz @r z");
result.add("ac-\tcu-\tses", "V k\tj u:\tz V z");
result.add("ac-\tcu-\tsing", "V k\tj u:\tz I N");
result.add("ac-\tcu-\tsing-\tly", "V k\tj u:\tz I N\tl i:");
result.add("ac-\tcus-\ttom", "V\tk V s\tt V m");
result.add("ac-\tcus-\ttomed", "V\tk V s\tt V m d");
result.add("ac-\tcuse", "V k\tj u: z");
result.add("ac-\tcused", "V k\tj u: z d");
result.add("ac-\tknow-\tled-\tgea-\tble", "{ k\tn Q\tl I\tdZ V\tb V l");
result.add("ac-\tknow-\tled-\tges", "{ k\tn Q\tl I\tdZ V z");
result.add("ac-\tknow-\tled-\tging", "{ k\tn Q\tl I\tdZ I N");
result.add("ac-\tknow-\tledg-\tment", "{ k\tn Q\tl I dZ\tm V n t");
result.add("ac-\tknow-\tledge-\tment", "{ k\tn Q\tl I dZ\tm V n t");
result.add("ac-\tknow-\tledged", "{ k\tn Q\tl I dZ d");
result.add("ac-\tme", "{ k\tm i:");
result.add("ac-\tme's", "{ k\tm i: z");
result.add("ac-\tne", "{ k\tn i:");
result.add("ac-\tqua-\tvi-\tva", "Q k\tw Q\tv i:\tv V");
result.add("ac-\tquain-\ttan-\tces", "V k\tw eI n\tt V n\ts V z");
result.add("ac-\tquain-\ttance", "V k\tw eI n\tt V n s");
result.add("ac-\tquain-\ttance-\tship", "V k\tw eI n\tt V n\ts S V p");
result.add("ac-\tquain-\tted", "V k\tw eI n\tt V d");
result.add("ac-\tquaint", "V k\tw eI n t");
result.add("ac-\tqui-\te-\tscence", "{ k\tw i:\te\ts V n s");
result.add("ac-\tqui-\te-\tscing", "{ k\tw i:\te\ts I N");
result.add("ac-\tqui-\tesce", "{ k\tw i:\te s");
result.add("ac-\tqui-\tesced", "{ k\tw i:\te s t");
result.add("ac-\tqui-\tr-\ter", "V k\tw aI\t@r\t@r");
result.add("ac-\tqui-\tr-\ters", "V k\tw aI\t@r\t@r z");
result.add("ac-\tqui-\tre", "V k\tw aI\t@r");
result.add("ac-\tqui-\tred", "V k\tw aI\t@r d");
result.add("ac-\tqui-\tres", "V k\tw aI\t@r z");
result.add("ac-\tqui-\tring", "V k\tw aI\tr I N");
result.add("ac-\tqui-\tsi-\ttion", "{ k\tw I\tz I\tS V n");
result.add("ac-\tqui-\tsi-\ttions", "{ k\tw I\tz I\tS V n z");
result.add("ac-\tqui-\tsi-\ttion's", "{ k\tw I\tz I\tS V n z");
result.add("ac-\tqui-\tsi-\ttive", "V k\tw I\tz I\tt I v");
result.add("ac-\tquit", "V k\tw I t");
result.add("ac-\tquit-\ttal", "V k\tw I\tt V l");
result.add("ac-\tquit-\ttals", "V k\tw I\tt V l z");
result.add("ac-\tquit-\tted", "V k\tw I\tt V d");
result.add("ac-\tquit-\tting", "V k\tw I\tt I N");
result.add("ac-\tquits", "V k\tw I t s");
result.add("ac-\treage", "eI k\tr V dZ");
result.add("ac-\tres", "eI\tk @r z");
result.add("ac-\tri-\tmo-\tni-\tous", "{ k\tr I\tm @U\tn i:\tV s");
result.add("ac-\tri-\tmo-\tny", "{ k\tr I\tm @U\tn i:");
result.add("ac-\trid", "{ k\tr I d");
result.add("ac-\tro-\tba-\ttic", "{ k\tr V\tb {\tt I k");
result.add("ac-\tro-\tba-\ttics", "{ k\tr V\tb {\tt I k s");
result.add("ac-\tro-\tbat", "{ k\tr V\tb { t");
result.add("ac-\tro-\tbats", "{ k\tr V\tb { t s");
result.add("ac-\tro-\tnym", "{ k\tr V\tn V m");
result.add("ac-\tro-\tnyms", "{ k\tr V\tn V m z");
result.add("ac-\tro-\tpo-\tlis", "V k\tr Q\tp V\tl V s");
result.add("ac-\tross", "V k\tr O: s");
result.add("ac-\try-\tlic", "V k\tr I\tl I k");
result.add("ac-\try-\tlics", "V k\tr I\tl I k s");
result.add("ac-\tted", "{ k\tt V d");
result.add("ac-\tti-\tni-\tdi-\ta", "{ k\tt I\tn I\td i:\tV");
result.add("ac-\tti-\tnide", "{ k\tt I\tn aI d");
result.add("ac-\tti-\tva-\tted", "{ k\tt I\tv eI\tt V d");
result.add("ac-\tti-\tva-\tting", "{ k\tt I\tv eI\tt I N");
result.add("ac-\tti-\tva-\ttion", "{ k\tt I\tv eI\tS V n");
result.add("ac-\tti-\tva-\ttor", "{ k\tt I\tv eI\tt @r");
result.add("ac-\tti-\tvase", "{ k\tt I\tv eI z");
result.add("ac-\tti-\tvate", "{ k\tt I\tv eI t");
result.add("ac-\tti-\tvates", "{ k\tt I\tv eI t s");
result.add("ac-\tti-\tvi-\tsm", "{ k\tt I\tv I\tz V m");
result.add("ac-\tti-\tvi-\tties", "{ k\tt I\tv I\tt i: z");
result.add("ac-\tti-\tvi-\tty", "{ k\tt I\tv I\tt i:");
result.add("ac-\tti-\tvist", "{ k\tt I\tv I s t");
result.add("ac-\tti-\tvists", "{ k\tt V\tv I s t s");
result.add("ac-\ttin", "{ k\tt I n");
result.add("ac-\tting", "{ k\tt I N");
result.add("ac-\ttio-\tna-\tble", "{ k\tS V\tn V\tb V l");
result.add("ac-\ttion", "{ k\tS V n");
result.add("ac-\ttions", "{ k\tS V n z");
result.add("ac-\ttion's", "{ k\tS V n z");
result.add("ac-\ttive", "{ k\tt I v");
result.add("ac-\ttive-\tly", "{ k\tt I v\tl i:");
result.add("ac-\ttives", "{ k\tt I v z");
result.add("ac-\tton", "{ k\tt V n");
result.add("ac-\ttor", "{ k\tt @r");
result.add("ac-\ttors", "{ k\tt @r z");
result.add("ac-\ttor's", "{ k\tt @r z");
result.add("ac-\ttors'", "{ k\tt @r z");
result.add("ac-\ttu-\ta-\tli-\tty", "{ k\ttS V\tw {\tl V\tt i:");
result.add("ac-\ttu-\ta-\tlize", "{ k\ttS V\tw V\tl aI z");
result.add("ac-\ttu-\ta-\tri-\tal", "{ k\ttS V\tw e@\ti:\tV l");
result.add("ac-\ttu-\ta-\tries", "{ k\ttS V\tw e@\ti: z");
result.add("ac-\ttu-\ta-\try", "{ k\ttS V\tw e@\ti:");
result.add("ac-\ttu-\ta-\ttor", "{ k\tt j u:\teI\tt @r");
result.add("ac-\ttu-\ta-\ttors", "{ k\tt j u:\teI\tt @r z");
result.add("ac-\ttu-\tal", "{ k\ttS V\tw V l");
result.add("ac-\ttu-\tal-\tly", "{ k\ttS V\tw V\tl i:");
result.add("ac-\ttu-\tate", "{ k\ttS V\tw eI t");
result.add("ac-\ttus", "{ k\tt V s");
result.add("ace", "eI s");
result.add("ache", "eI k");
result.add("aches", "eI k s");
result.add("ack", "{ k");
result.add("ack-\tley", "{ k\tl i:");
result.add("ack-\tman", "{ k\tm V n");
result.add("ack-\tnow-\tledge", "{ k\tn Q\tl I dZ");
result.add("act", "{ k t");
result.add("act-\tres-\tses", "{ k\tt r V\ts V z");
result.add("act-\tres-\ts's", "{ k\tt r V\ts V z");
result.add("act-\tress", "{ k\tt r V s");
result.add("acts", "{ k t s");
result.add("act's", "{ k t s");
result.add("ad", "{ d");
result.add("ad-\tdi-\tson's", "{\td I\ts V n z");
result.add("ad-\tdi-\ttio-\tnal", "V\td I\tS V\tn V l");
result.add("ad-\tdi-\ttio-\tnal-\tly", "V\td I\tS V\tn V\tl i:");
result.add("ad-\tdi-\ttion", "V\td I\tS V n");
result.add("ad-\tdi-\ttions", "V\td I\tS V n z");
result.add("ad-\tdi-\ttive", "{\td I\tt I v");
result.add("ad-\tdi-\ttives", "{\td I\tt I v z");
result.add("ad-\tdic-\ttion", "V\td I k\tS V n");
result.add("ad-\tdict", "V\td I k t");
result.add("ad-\tdle", "{\td V l");
result.add("ad-\tdled", "{\td V l d");
result.add("ad-\tdy", "{\td i:");
result.add("ad-\tger", "{\tdZ @r");
result.add("ad-\tham", "{ d\th { m");
result.add("ad-\the-\trence", "V d\th I@\tV n s");
result.add("ad-\the-\trent", "V d\th I@\tV n t");
result.add("ad-\the-\trents", "{ d\th I@\tV n t s");
result.add("ad-\the-\tring", "V d\th I@\tI N");
result.add("ad-\the-\tsive", "{ d\th i:\ts I v");
result.add("ad-\the-\tsives", "{ d\th i:\ts I v z");
result.add("ad-\there", "V d\th I@");
result.add("ad-\thered", "{ d\th I@ d");
result.add("ad-\theres", "V d\th I@ z");
result.add("ad-\thoc", "{ d\th Q k");
result.add("ad-\tja-\tcent", "V\tdZ eI\ts V n t");
result.add("ad-\tjec-\ttive", "{\tdZ I k\tt I v");
result.add("ad-\tjec-\ttives", "{\tdZ I k\tt I v z");
result.add("ad-\tjoi-\tning", "V\tdZ OI\tn I N");
result.add("ad-\tjoin", "V\tdZ OI n");
result.add("ad-\tjoins", "V\tdZ OI n z");
result.add("ad-\tjour-\tning", "V\tdZ @r\tn I N");
result.add("ad-\tjourn", "V\tdZ @r n");
result.add("ad-\tjourn-\tment", "V\tdZ @r n\tm V n t");
result.add("ad-\tjourned", "V\tdZ @r n d");
result.add("ad-\tjourns", "V\tdZ @r n z");
result.add("ad-\tju-\tdi-\tca-\tted", "V\tdZ u:\td V\tk eI\tt V d");
result.add("ad-\tju-\tdi-\tca-\tting", "V\tdZ u:\td I\tk eI\tt I N");
result.add("ad-\tju-\tdi-\tca-\ttion", "V\tdZ u:\td V\tk eI\tS V n");
result.add("ad-\tju-\tdi-\tcate", "V\tdZ u:\td I\tk eI t");
result.add("ad-\tju-\ttant", "{\tdZ V\tt V n t");
result.add("ad-\tjudge", "V\tdZ V dZ");
result.add("ad-\tjudged", "V\tdZ V dZ d");
result.add("ad-\tjunct", "{\tdZ V N k t");
result.add("ad-\tjuncts", "{\tdZ V N k t s");
result.add("ad-\tjus-\tta-\tble", "V\tdZ V s\tt V\tb V l");
result.add("ad-\tjus-\tted", "V\tdZ V s\tt V d");
result.add("ad-\tjus-\tter", "V\tdZ V s\tt @r");
result.add("ad-\tjus-\tters", "V\tdZ V s\tt @r z");
result.add("ad-\tjus-\tting", "V\tdZ V s\tt I N");
result.add("ad-\tjust", "V\tdZ V s t");
result.add("ad-\tjust-\tment", "V\tdZ V s\tt m V n t");
result.add("ad-\tjust-\tments", "V\tdZ V s\tt m V n t s");
result.add("ad-\tjusts", "V\tdZ V s t s");
result.add("ad-\tkins", "{ d\tk I n z");
result.add("ad-\tla-\ti", "Q d\tl Q\ti:");
result.add("ad-\tler", "{ d\tl @r");
result.add("ad-\tley", "{ d\tl i:");
result.add("ad-\tlib", "{ d\tl I b");
result.add("ad-\tman", "{ d\tm V n");
result.add("ad-\tmen", "{ d\tm V n");
result.add("ad-\tmi-\tnis-\tte-\tring", "{ d\tm I\tn I s\tt @r\tI N");
result.add("ad-\tmi-\tnis-\tter", "V d\tm I\tn V s\tt @r");
result.add("ad-\tmi-\tnis-\ttered", "V d\tm I\tn V s\tt @r d");
result.add("ad-\tmi-\tnis-\tters", "{ d\tm I\tn I s\tt @r z");
result.add("ad-\tmi-\tnist-\tra-\tting", "V d\tm I\tn I s\tt r eI\tt I N");
result.add("ad-\tmi-\tnist-\tra-\ttion", "{ d\tm I\tn I s\tt r eI\tS V n");
result.add("ad-\tmi-\tnist-\tra-\ttions", "{ d\tm I\tn I s\tt r eI\tS V n z");
result.add("ad-\tmi-\tnist-\tra-\ttion's", "{ d\tm I\tn I s\tt r eI\tS V n z");
result.add("ad-\tmi-\tnist-\tra-\ttive", "V d\tm I\tn I s\tt r eI\tt I v");
result.add("ad-\tmi-\tnist-\tra-\ttive-\tly", "{ d\tm I\tn I s\tt r eI\tt I v\tl i:");
result.add("ad-\tmi-\tnist-\tra-\ttor", "V d\tm I\tn I s\tt r eI\tt @r");
result.add("ad-\tmi-\tnist-\tra-\ttors", "{ d\tm I\tn I s\tt r eI\tt @r z");
result.add("ad-\tmi-\tnist-\trate", "{ d\tm I\tn I s\tt r eI t");
result.add("ad-\tmi-\tra-\tble", "{ d\tm @r\tV\tb V l");
result.add("ad-\tmi-\tra-\ttion", "{ d\tm @r\teI\tS V n");
result.add("ad-\tmi-\tra-\ttions", "{ d\tm @r\teI\tS V n s");
result.add("ad-\tmi-\trab-\tly", "{ d\tm @r\tV b\tl i:");
result.add("ad-\tmi-\tral", "{ d\tm @r\tV l");
result.add("ad-\tmi-\tral-\tty", "{ d\tm @r\tV l\tt i:");
result.add("ad-\tmi-\trals", "{ d\tm @r\tV l z");
result.add("ad-\tmi-\tral's", "{ d\tm @r\tV l z");
result.add("ad-\tmi-\tred", "V d\tm aI\t@r d");
result.add("ad-\tmi-\trer", "{ d\tm aI\tr @r");
result.add("ad-\tmi-\trers", "V d\tm aI\tr @r z");
result.add("ad-\tmi-\tring", "{ d\tm aI\tr I N");
result.add("ad-\tmi-\tring-\tly", "{ d\tm aI\tr I N\tl i:");
result.add("ad-\tmire", "{ d\tm aI r");
result.add("ad-\tmires", "{ d\tm aI r z");
result.add("ad-\tmis-\tsi-\tbi-\tli-\tty", "V d\tm I\ts V\tb I\tl V\tt i:");
result.add("ad-\tmis-\tsi-\tble", "V d\tm I\ts V\tb V l");
result.add("ad-\tmis-\tsion", "{ d\tm I\tS V n");
result.add("ad-\tmis-\tsions", "{ d\tm I\tS V n z");
result.add("ad-\tmit", "V d\tm I t");
result.add("ad-\tmit-\ttance", "V d\tm I\tt V n s");
result.add("ad-\tmit-\tted", "V d\tm I\tt V d");
result.add("ad-\tmit-\tted-\tly", "{ d\tm I\tt V d\tl i:");
result.add("ad-\tmit-\tting", "{ d\tm I\tt I N");
result.add("ad-\tmits", "V d\tm I t s");
result.add("ad-\tmo-\tni-\tshes", "{ d\tm Q\tn I\tS V z");
result.add("ad-\tmo-\tni-\tshing", "{ d\tm Q\tn I\tS I N");
result.add("ad-\tmo-\tni-\ttion", "{ d\tm V\tn I\tS V n");
result.add("ad-\tmo-\tni-\ttions", "{ d\tm V\tn I\tS V n z");
result.add("ad-\tmo-\tnish", "{ d\tm Q\tn I S");
result.add("ad-\tmo-\tnish-\tment", "{ d\tm Q\tn I S\tm e n t");
result.add("ad-\tmo-\tnished", "V d\tm Q\tn I S t");
result.add("ad-\tnan", "{ d\tn V n");
result.add("ad-\tre-\ta", "Q d\tr i:\tV");
result.add("ad-\tre-\tna-\tlin", "V d\tr e\tn V\tl V n");
result.add("ad-\tre-\tna-\tline", "V d\tr e\tn V\tl V n");
result.add("ad-\tre-\tnal", "V d\tr i:\tn V l");
result.add("ad-\tri-\ta", "Q d\tr i:\tV");
result.add("ad-\tri-\ta-\tna", "eI d\tr i:\t{\tn V");
result.add("ad-\tri-\ta-\tno", "Q d\tr i:\tQ\tn @U");
result.add("ad-\tri-\ta-\ttic", "eI d\tr i:\t{\tt I k");
result.add("ad-\tri-\tan", "eI d\tr i:\tV n");
result.add("ad-\tri-\tenne", "Q d\tr i:\te n");
result.add("ad-\triel", "V d\tr i: l");
result.add("ad-\trift", "V d\tr I f t");
result.add("ad-\troit", "V d\tr OI t");
result.add("ad-\troit-\tly", "V d\tr OI t\tl i:");
result.add("ad-\tvan-\tcer", "V d\tv { n\ts @r");
result.add("ad-\tvan-\tcers", "V d\tv { n\ts @r z");
result.add("ad-\tvan-\tces", "V d\tv { n\ts V z");
result.add("ad-\tvan-\tcing", "V d\tv { n\ts I N");
result.add("ad-\tvan-\tta-\tgeous", "{ d\tv V n\tt eI\tdZ V s");
result.add("ad-\tvan-\tta-\tges", "{ d\tv { n\tt I\tdZ V z");
result.add("ad-\tvan-\ttage", "{ d\tv { n\tt I dZ");
result.add("ad-\tvan-\ttaged", "{ d\tv { n\tt I dZ d");
result.add("ad-\tvance", "V d\tv { n s");
result.add("ad-\tvance-\tment", "V d\tv { n\ts m V n t");
result.add("ad-\tvance-\tments", "V d\tv { n\ts m V n t s");
result.add("ad-\tvanced", "V d\tv { n s t");
result.add("ad-\tvec-\ttion", "{ d\tv e k\tS V n");
result.add("ad-\tven-\ttist", "{ d\tv e n\tt I s t");
result.add("ad-\tven-\ttists", "{ d\tv e n\tt I s t s");
result.add("ad-\tven-\ttu-\trer", "{ d\tv e n\ttS @r\t@r");
result.add("ad-\tven-\ttu-\trers", "{ d\tv e n\ttS @r\t@r z");
result.add("ad-\tven-\ttu-\tri-\tsm", "{ d\tv e n\ttS @r\tI\tz V m");
result.add("ad-\tven-\ttu-\trous", "{ d\tv e n\ttS @r\tV s");
result.add("ad-\tven-\tture", "{ d\tv e n\ttS @r");
result.add("ad-\tven-\tture-\tsome", "{ d\tv e n\ttS @r\ts V m");
result.add("ad-\tven-\ttures", "{ d\tv e n\ttS @r z");
result.add("ad-\tvent", "{ d\tv e n t");
result.add("ad-\tver-\tbi-\tal", "{ d\tv @r\tb i:\tV l");
result.add("ad-\tver-\tsa-\tri-\tal", "{ d\tv @r\ts e@\ti:\tV l");
result.add("ad-\tver-\tsa-\tries", "{ d\tv @r\ts e@\ti: z");
result.add("ad-\tver-\tsa-\try", "{ d\tv @r\ts e@\ti:");
result.add("ad-\tver-\tsi-\tty", "{ d\tv @r\ts I\tt i:");
result.add("ad-\tver-\tti-\tser", "{ d\tv @r\tt aI\tz @r");
result.add("ad-\tver-\tti-\tsers", "{ d\tv @r\tt aI\tz @r z");
result.add("ad-\tver-\tti-\tser's", "{ d\tv @r\tt aI\tz @r z");
result.add("ad-\tver-\tti-\tses", "{ d\tv @r\tt aI\tz V z");
result.add("ad-\tver-\tti-\tsing", "{ d\tv @r\tt aI\tz I N");
result.add("ad-\tver-\tti-\tsing's", "{ d\tv @r\tt aI\tz I N z");
result.add("ad-\tver-\ttise", "{ d\tv @r\tt aI z");
result.add("ad-\tver-\ttise-\tment", "V d\tv @r\tt V z\tm V n t");
result.add("ad-\tver-\ttise-\tments", "{ d\tv @r\tt aI z\tm V n t s");
result.add("ad-\tver-\ttised", "{ d\tv @r\tt aI z d");
result.add("ad-\tver-\tto-\tri-\tal", "{ d\tv @r\tt O@\ti:\tV l");
result.add("ad-\tver-\tto-\tri-\tals", "{ d\tv @r\tt O@\ti:\tV l z");
result.add("ad-\tverb", "{ d\tv @r b");
result.add("ad-\tverbs", "{ d\tv @r b z");
result.add("ad-\tverse", "{ d\tv @r s");
result.add("ad-\tverse-\tly", "{ d\tv @r s\tl i:");
result.add("ad-\tvi-\tsa-\tbi-\tli-\tty", "{ d\tv aI\tz V\tb I\tl V\tt i:");
result.add("ad-\tvi-\tsa-\tble", "V d\tv aI\tz V\tb V l");
result.add("ad-\tvi-\tsed-\tly", "{ d\tv aI\tz V d\tl i:");
result.add("ad-\tvi-\tser", "{ d\tv aI\tz @r");
result.add("ad-\tvi-\tsers", "{ d\tv aI\tz @r z");
result.add("ad-\tvi-\tser's", "V d\tv aI\tz @r z");
result.add("ad-\tvi-\tses", "{ d\tv aI\tz V z");
result.add("ad-\tvi-\tsing", "{ d\tv aI\tz I N");
result.add("ad-\tvi-\tso-\tries", "V d\tv aI\tz @r\ti: z");
result.add("ad-\tvi-\tso-\try", "{ d\tv aI\tz @r\ti:");
result.add("ad-\tvi-\tsor", "{ d\tv aI\tz @r");
result.add("ad-\tvi-\tsors", "{ d\tv aI\tz @r z");
result.add("ad-\tvice", "{ d\tv aI s");
result.add("ad-\tvil", "{ d\tv I l");
result.add("ad-\tvil's", "{ d\tv I l z");
result.add("ad-\tvise", "{ d\tv aI z");
result.add("ad-\tvise-\tment", "V d\tv aI z\tm V n t");
result.add("ad-\tvised", "{ d\tv aI z d");
result.add("ad-\tvo-\tca-\tcy", "{ d\tv V\tk V\ts i:");
result.add("ad-\tvo-\tca-\tted", "{ d\tv V\tk eI\tt V d");
result.add("ad-\tvo-\tca-\tting", "{ d\tv V\tk eI\tt I N");
result.add("ad-\tvo-\tca-\ttion", "{ d\tv V\tk eI\tS V n");
result.add("ad-\tvo-\tcate", "{ d\tv V\tk V t");
result.add("ad-\tvo-\tcates", "{ d\tv V\tk V t s");
result.add("add-\tres-\tsa-\tble", "V d\tr e\ts V\tb V l");
result.add("add-\tres-\tsee", "{ d\tr e\ts i:");
result.add("add-\tres-\tses", "{ d\tr V\ts V z");
result.add("add-\tres-\tsing", "V d\tr e\ts I N");
result.add("add-\tress", "{ d\tr e s");
result.add("add-\tressed", "V d\tr e s t");
result.add("adds", "{ d z");
result.add("ade", "eI d");
result.add("ads", "{ d z");
result.add("ad's", "{ d z");
result.add("adz", "{ d z");
result.add("ae", "eI");
result.add("ae-\tge-\tan", "I\tdZ i:\tV n");
result.add("ae-\tgis", "i:\tdZ I s");
result.add("ae-\tne-\tas", "{\tn i:\tV s");
result.add("ae-\tri-\tal", "e@\ti:\tV l");
result.add("ae-\tro", "e@\t@U");
result.add("ae-\tro-\tba-\ttic", "e@\tV\tb {\tt I k");
result.add("ae-\tro-\tba-\ttics", "e@\tV\tb {\tt I k s");
result.add("ae-\tro-\tbic", "e@\t@U\tb I k");
result.add("ae-\tro-\tbical-\tly", "e@\t@U\tb I k\tl i:");
result.add("ae-\tro-\tbics", "@r\t@U\tb I k s");
result.add("ae-\tro-\tnau-\tti-\tcal", "e@\t@U\tn Q\tt I\tk V l");
result.add("ae-\tro-\tnau-\ttic", "e@\t@U\tn Q\tt I k");
result.add("ae-\tro-\tnau-\ttics", "e@\tV\tn O:\tt I k s");
result.add("ae-\tro-\tsol", "e@\tV\ts Q l");
result.add("ae-\tro-\tsols", "e@\tV\ts Q l z");
result.add("ae-\trod-\trome", "e@\tV d\tr @U m");
result.add("ae-\tros-\tpa-\tce's", "e@\t@U s\tp eI\ts V z");
result.add("ae-\tros-\tpace", "e@\t@U s\tp eI s");
result.add("ae-\tros-\ttat", "e@\t@U s\tt { t");
result.add("ae-\tros-\ttats", "e@\t@U s\tt { t s");
result.add("ae-\tsop", "i:\ts Q p");
result.add("ae-\tsop's", "i:\ts Q p s");
result.add("aer", "e@");
result.add("aes-\tthe-\ttic", "e s\tT e\tt I k");
result.add("aes-\tthe-\ttical-\tly", "e s\tT e\tt I k\tl i:");
result.add("aes-\tthe-\ttics", "e s\tT e\tt I k s");
result.add("aes-\tthete", "e s\tT i: t");
result.add("aet-\tna", "e t\tn V");
result.add("aet-\tna's", "e t\tn V z");
result.add("af-\tfa-\tble", "{\tf V\tb V l");
result.add("af-\tfair", "V\tf e@");
result.add("af-\tfairs", "V\tf e@ z");
result.add("af-\tfe-\trent", "{\tf @r\tV n t");
result.add("af-\tfec-\tta-\ttion", "{\tf e k\tt eI\tS V n");
result.add("af-\tfec-\tted", "V\tf e k\tt V d");
result.add("af-\tfec-\tting", "V\tf e k\tt I N");
result.add("af-\tfec-\ttio-\tnate", "V\tf e k\tS V\tn V t");
result.add("af-\tfec-\ttio-\tnate-\tly", "V\tf e k\tS V\tn V t\tl i:");
result.add("af-\tfec-\ttion", "V\tf e k\tS V n");
result.add("af-\tfec-\ttions", "V\tf e k\tS V n z");
result.add("af-\tfec-\ttive", "V\tf e k\tt I v");
result.add("af-\tfec-\ttive-\tly", "V\tf e k\tt I v\tl i:");
result.add("af-\tfect", "V\tf e k t");
result.add("af-\tfects", "V\tf e k t s");
result.add("af-\tfi-\tant", "{\tf i:\tV n t");
result.add("af-\tfi-\tda-\tvit", "{\tf I\td eI\tv I t");
result.add("af-\tfi-\tda-\tvits", "{\tf I\td eI\tv I t s");
result.add("af-\tfi-\tli-\ta-\tted", "V\tf I\tl i:\teI\tt V d");
result.add("af-\tfi-\tli-\ta-\tting", "V\tf I\tl i:\teI\tt I N");
result.add("af-\tfi-\tli-\ta-\ttion", "V\tf I\tl i:\teI\tS V n");
result.add("af-\tfi-\tli-\ta-\ttions", "V\tf I\tl i:\teI\tS V n z");
result.add("af-\tfi-\tli-\tate", "V\tf I\tl i:\teI t");
result.add("af-\tfi-\tli-\tates", "V\tf I\tl i:\tV t s");
result.add("af-\tfi-\tli-\tate's", "V\tf I\tl i:\teI t s");
result.add("af-\tfi-\tni-\tties", "V\tf I\tn V\tt i: z");
result.add("af-\tfi-\tni-\tty", "V\tf I\tn V\tt i:");
result.add("af-\tfor-\tda-\tbi-\tli-\tty", "V\tf O@\td V\tb I\tl V\tt i:");
result.add("af-\tfor-\tda-\tble", "V\tf O@\td V\tb V l");
result.add("af-\tfor-\tded", "V\tf O@\td V d");
result.add("af-\tfor-\tding", "V\tf O@\td I N");
result.add("af-\tford", "V\tf O@ d");
result.add("af-\tfords", "V\tf O@ d z");
result.add("af-\tgha-\tni", "{ f\tg Q\tn i:");
result.add("af-\tgha-\tnis", "{ f\tg {\tn i: z");
result.add("af-\tgha-\tni's", "{ f\tg {\tn i: z");
result.add("af-\tgha-\tnis-\ttan", "{ f\tg {\tn I s\tt { n");
result.add("af-\tgha-\tnis-\ttan's", "{ f\tg {\tn I s\tt { n z");
result.add("af-\tghan", "{ f\tg { n");
result.add("af-\tghans", "{ f\tg { n z");
result.add("af-\tla-\tto-\txin", "{ f\tl V\tt Q k\ts V n");
result.add("af-\tlame", "V f\tl eI m");
result.add("af-\tloat", "V f\tl @U t");
result.add("af-\tlut-\tter", "V f\tl V\tt @r");
result.add("af-\traid", "V f\tr eI d");
result.add("af-\tresh", "V f\tr e S");
result.add("af-\tri-\tca", "{ f\tr I\tk V");
result.add("af-\tri-\tca-\tnist", "{ f\tr I\tk V\tn I s t");
result.add("af-\tri-\tca-\tnize", "{ f\tr I\tk V\tn aI z");
result.add("af-\tri-\tca-\tnized", "{ f\tr I\tk V\tn aI z d");
result.add("af-\tri-\tcan", "{ f\tr I\tk V n");
result.add("af-\tri-\tcans", "{ f\tr I\tk V n z");
result.add("af-\tri-\tca's", "{ f\tr I\tk V z");
result.add("af-\tri-\tka-\tner", "{ f\tr I\tk Q\tn @r");
result.add("af-\tri-\tka-\tner-\tdom", "{ f\tr I\tk Q\tn @r\td V m");
result.add("af-\tri-\tka-\tners", "{ f\tr I\tk Q\tn @r z");
result.add("af-\tri-\tkaans", "{ f\tr I\tk Q n z");
result.add("af-\tro", "{ f\tr @U");
result.add("af-\tshar", "{ f\tS @r");
result.add("af-\tte-\trall", "{ f\tt @r\tQ l");
result.add("af-\tter", "{ f\tt @r");
result.add("af-\tter-\tbur-\tner", "{ f\tt @r\tb @r\tn @r");
result.add("af-\tter-\tbur-\tners", "{ f\tt @r\tb @r\tn @r z");
result.add("af-\tter-\tef-\tfect", "{ f\tt @r\tV\tf e k t");
result.add("af-\tter-\tef-\tfects", "{ f\tt @r\tV\tf e k t s");
result.add("af-\tter-\tglow", "{ f\tt @r g\tl @U");
result.add("af-\tter-\ti-\tmage", "{ f\tt @r\tI\tm I dZ");
result.add("af-\tter-\tlife", "{ f\tt @r\tl aI f");
result.add("af-\tter-\tmar-\tket", "{ f\tt @r\tm Q@\tk V t");
result.add("af-\tter-\tmath", "{ f\tt @r\tm { T");
result.add("af-\tter-\tnoon", "{ f\tt @r\tn u: n");
result.add("af-\tter-\tnoons", "{ f\tt @r\tn u: n z");
result.add("af-\tter-\tnoon's", "{ f\tt @r\tn u: n z");
result.add("af-\tter-\tshock", "{ f\tt @r\tS Q k");
result.add("af-\tter-\tshocks", "{ f\tt @r\tS Q k s");
result.add("af-\tter-\ttaste", "{ f\tt @r\tt eI s t");
result.add("af-\tter-\ttax", "{ f\tt @r\tt { k s");
result.add("af-\tter-\tthought", "{ f\tt @r\tT Q t");
result.add("af-\tter-\tward", "{ f\tt @r\tw @r d");
result.add("af-\tter-\twards", "{ f\tt @r\tw @r d z");
result.add("aff-\tlic-\tted", "V f\tl I k\tt V d");
result.add("aff-\tlic-\tting", "V f\tl I k\tt I N");
result.add("aff-\tlic-\ttion", "V f\tl I k\tS V n");
result.add("aff-\tlic-\ttions", "V f\tl I k\tS V n z");
result.add("aff-\tlict", "V f\tl I k t");
result.add("aff-\tlicts", "V f\tl I k t s");
result.add("aff-\tlu-\tence", "{ f\tl u:\tV n s");
result.add("aff-\tlu-\tent", "{ f\tl u:\tV n t");
result.add("aff-\tri-\tca-\ttion", "{ f\tr I\tk eI\tS V n");
result.add("aff-\tri-\tcate", "{ f\tr I\tk V t");
result.add("aff-\tri-\tcates", "{ f\tr I\tk V t s");
result.add("aff-\tron-\tted", "V f\tr V n\tt V d");
result.add("aff-\tront", "V f\tr V n t");
result.add("aff-\tronts", "V f\tr V n t s");
result.add("aft", "{ f t");
result.add("ag", "{ g");
result.add("ag-\tgar-\twal", "V\tg Q@\tw V l");
result.add("ag-\tgie", "{\tg i:");
result.add("ag-\tgies", "{\tg i: z");
result.add("ag-\tglo-\tme-\tra-\ttion", "V g\tl Q\tm @r\teI\tS V n");
result.add("ag-\tglo-\tme-\trate", "V g\tl Q\tm @r\teI t");
result.add("ag-\tglu-\tti-\tnate", "V g\tl u:\tt V\tn eI t");
result.add("ag-\tgra-\tva-\tted", "{ g\tr V\tv eI\tt V d");
result.add("ag-\tgra-\tva-\tting", "{ g\tr V\tv eI\tt I N");
result.add("ag-\tgra-\tva-\ttion", "{ g\tr V\tv eI\tS V n");
result.add("ag-\tgra-\tvate", "{ g\tr V\tv eI t");
result.add("ag-\tgra-\tvates", "{ g\tr V\tv eI t s");
result.add("ag-\tgran-\tdi-\tzing", "{ g\tr V n\td aI\tz I N");
result.add("ag-\tgran-\tdize", "V g\tr { n\td aI z");
result.add("ag-\tgran-\tdize-\tment", "{ g\tr V n\td aI z\tm V n t");
result.add("ag-\tgre-\tga-\tted", "{ g\tr V\tg eI\tt V d");
result.add("ag-\tgre-\tgate", "{ g\tr V\tg V t");
result.add("ag-\tgre-\tgates", "{ g\tr V\tg V t s");
result.add("ag-\tgres-\tsi-\tvi-\tty", "V g\tr e\ts I\tv V\tt i:");
result.add("ag-\tgres-\tsion", "V g\tr e\tS V n");
result.add("ag-\tgres-\tsions", "V g\tr e\tS V n z");
result.add("ag-\tgres-\tsive", "V g\tr e\ts I v");
result.add("ag-\tgres-\tsive-\tly", "V g\tr e\ts I v\tl i:");
result.add("ag-\tgres-\tsive-\tness", "V g\tr e\ts I v\tn V s");
result.add("ag-\tgres-\tsor", "V g\tr e\ts @r");
result.add("ag-\tgres-\tsors", "V g\tr e\ts @r z");
result.add("ag-\tgress", "V g\tr e s");
result.add("ag-\tgrieve", "V g\tr i: v");
result.add("ag-\tgrieved", "V g\tr i: v d");
result.add("ag-\tgy", "{\tg i:");
result.add("ag-\tleam", "V g\tl i: m");
result.add("ag-\tler", "{ g\tl @r");
result.add("ag-\tlit-\tter", "V g\tl I\tt @r");
result.add("ag-\tlow", "V g\tl @U");
result.add("ag-\tna", "{ g\tn V");
result.add("ag-\tne-\tta", "Q g\tn e\tt V");
result.add("ag-\tnel-\tla", "{ g\tn e\tl V");
result.add("ag-\tnes", "{ g\tn V s");
result.add("ag-\tnew", "{ g\tn u:");
result.add("ag-\tnos-\ttic", "{ g\tn Q s\tt I k");
result.add("ag-\tra-\tri-\ta-\tni-\tsm", "V g\tr e@\ti:\tV\tn I\tz V m");
result.add("ag-\tra-\tri-\tan", "V g\tr e@\ti:\tV n");
result.add("ag-\tree", "V g\tr i:");
result.add("ag-\tree-\ta-\tble", "V g\tr i:\tV\tb V l");
result.add("ag-\tree-\ting", "V g\tr i:\tI N");
result.add("ag-\tree-\tment", "V g\tr i:\tm V n t");
result.add("ag-\tree-\tments", "V g\tr i:\tm V n t s");
result.add("ag-\tree-\tment's", "V g\tr i:\tm V n t s");
result.add("ag-\treed", "V g\tr i: d");
result.add("ag-\trees", "V g\tr i: z");
result.add("ag-\tri-\tbusi-\tness", "{ g\tr I\tb I z\tn V s");
result.add("ag-\tri-\tco-\tla", "{ g\tr I\tk @U\tl V");
result.add("ag-\tri-\tcole", "{ g\tr I\tk @U l");
result.add("ag-\tri-\tcul-\ttu-\tra-\tlist", "{ g\tr I\tk V l\ttS @r\t@\tl I s t");
result.add("ag-\tri-\tcul-\ttu-\tral", "{ g\tr I\tk V l\ttS @r\t@ l");
result.add("ag-\tri-\tcul-\ttu-\tral-\tly", "{ g\tr I\tk V l\ttS @r\t@\tl i:");
result.add("ag-\tri-\tcul-\tture", "{ g\tr I\tk V l\ttS @r");
result.add("ag-\tri-\tcul-\tture's", "{ g\tr I\tk V l\ttS @r z");
result.add("ag-\tround", "V g\tr aU n d");
result.add("age", "eI dZ");
result.add("age-\tless", "eI dZ\tl V s");
result.add("aged", "eI dZ d");
result.add("ah", "Q");
result.add("ah-\tma-\tdi", "Q\tm Q\td i:");
result.add("ah-\tmad", "Q\tm Q d");
result.add("ah-\tmed", "Q\tm V d");
result.add("ah-\trendt", "Q@\te n t");
result.add("ah-\trens", "Q@\te n z");
result.add("ahh", "Q");
result.add("ahl", "Q l");
result.add("ahlg-\tren", "Q l\tg r e n");
result.add("ahs", "Q z");
result.add("ai", "aI");
result.add("ai-\tded", "eI\td V d");
result.add("ai-\tding", "eI\td I N");
result.add("ai-\tel-\tlo", "aI\te\tl @U");
result.add("ai-\tken", "eI\tk V n");
result.add("ai-\tle-\tron", "eI\tl @r\tQ n");
result.add("ai-\tle-\trons", "eI\tl @r\tQ n z");
result.add("ai-\tlee", "eI\tl i:");
result.add("ai-\tleen", "aI\tl i: n");
result.add("ai-\tley", "eI\tl i:");
result.add("ai-\tling", "eI\tl I N");
result.add("ai-\tmee", "eI\tm i:");
result.add("ai-\tming", "eI\tm I N");
result.add("ai-\tres", "e@\ti: z");
result.add("ai-\tring", "e@\tI N");
result.add("ai-\try", "e@\ti:");
result.add("aid", "eI d");
result.add("aide", "eI d");
result.add("aides", "eI d z");
result.add("aide's", "eI d z");
result.add("aids", "eI d z");
result.add("ail", "eI l");
result.add("ail-\tment", "eI l\tm V n t");
result.add("ail-\tments", "eI l\tm V n t s");
result.add("ail-\tsa", "eI l\ts V");
result.add("ails", "eI l z");
result.add("aim", "eI m");
result.add("aim-\tless", "eI m\tl V s");
result.add("aim-\tless-\tly", "eI m\tl V s\tl i:");
result.add("aime", "eI m");
result.add("aimed", "eI m d");
result.add("aims", "eI m z");
result.add("ains-\tley", "eI n\ts l i:");
result.add("ains-\tlie", "eI n\tz l i:");
result.add("ains-\tworth", "eI n\ts w @r T");
result.add("ains-\tworth's", "eI n\tz w @r T s");
result.add("ain't", "eI n t");
result.add("air", "e@");
result.add("air-\tba-\tses", "e@\tb eI\ts V z");
result.add("air-\tbag", "e@\tb { g");
result.add("air-\tbags", "e@\tb { g z");
result.add("air-\tbase", "e@\tb eI s");
result.add("air-\tboat", "e@\tb @U t");
result.add("air-\tboats", "e@\tb @U t s");
result.add("air-\tborne", "e@\tb O@ n");
result.add("air-\tbu-\ts's", "e@\tb V\ts V z");
result.add("air-\tbus", "e@\tb V s");
result.add("air-\tcraft", "e@ k\tr { f t");
result.add("air-\tcrafts", "e@ k\tr { f t s");
result.add("air-\tcraft's", "e@ k\tr { f t s");
result.add("air-\tcrew", "e@ k\tr u:");
result.add("air-\tdrop", "e@ d\tr Q p");
result.add("air-\tdrops", "e@ d\tr Q p s");
result.add("air-\tfare", "e@\tf e@");
result.add("air-\tfares", "e@\tf e@ z");
result.add("air-\tfield", "e@\tf i: l d");
result.add("air-\tfields", "e@\tf i: l d z");
result.add("air-\tflow", "e@ f\tl @U");
result.add("air-\tfoil", "e@\tf OI l");
result.add("air-\tfoils", "e@\tf OI l z");
result.add("air-\tforce", "e@\tf O@ s");
result.add("air-\tframe", "e@ f\tr eI m");
result.add("air-\tfreight", "e@ f\tr eI t");
result.add("air-\tglow", "e@ g\tl @U");
result.add("air-\thead", "e@\th e d");
result.add("air-\tless", "e@\tl V s");
result.add("air-\tli-\ta", "e@\tl i:\tV");
result.add("air-\tli-\tner", "e@\tl aI\tn @r");
result.add("air-\tli-\tners", "e@\tl aI\tn @r z");
result.add("air-\tli-\tner's", "e@\tl aI\tn @r z");
result.add("air-\tlie", "e@\tl i:");
result.add("air-\tlif-\tted", "e@\tl I f\tt V d");
result.add("air-\tlif-\tting", "e@\tl I f\tt I N");
result.add("air-\tlift", "e@\tl I f t");
result.add("air-\tlifts", "e@\tl I f t s");
result.add("air-\tline", "e@\tl aI n");
result.add("air-\tlines", "e@\tl aI n z");
result.add("air-\tline's", "e@\tl aI n z");
result.add("air-\tlock", "e@\tl O: k");
result.add("air-\tmail", "e@\tm eI l");
result.add("air-\tman", "e@\tm V n");
result.add("air-\tman's", "e@\tm V n z");
result.add("air-\tmen", "e@\tm e n");
result.add("air-\tplane", "e@ p\tl eI n");
result.add("air-\tplanes", "e@ p\tl eI n z");
result.add("air-\tplane's", "e@ p\tl eI n z");
result.add("air-\tpo-\twer", "e@\tp aU\t@r");
result.add("air-\tport", "e@\tp O@ t");
result.add("air-\tports", "e@\tp O@ t s");
result.add("air-\tport's", "e@\tp O@ t s");
result.add("air-\tship", "e@\tS I p");
result.add("air-\tships", "e@\tS I p s");
result.add("air-\tspace", "e@ s\tp eI s");
result.add("air-\tspeed", "e@ s\tp i: d");
result.add("air-\tstrike", "e@ s\tt r aI k");
result.add("air-\tstrikes", "e@ s\tt r aI k s");
result.add("air-\tstrip", "e@ s\tt r I p");
result.add("air-\tstrips", "e@ s\tt r I p s");
result.add("air-\ttight", "e@\tt aI t");
result.add("air-\ttime", "e@\tt aI m");
result.add("air-\twave", "e@\tw eI v");
result.add("air-\twaves", "e@\tw eI v z");
result.add("air-\tway", "e@\tw eI");
result.add("air-\tways", "e@\tw eI z");
result.add("air-\tway's", "e@\tw eI z");
result.add("air-\twor-\tthi-\tness", "e@\tw @r\tD i:\tn V s");
result.add("air-\twor-\tthy", "e@\tw @r\tD i:");
result.add("aire-\tdale", "e@\td eI l");
result.add("aired", "e@ d");
result.add("airs", "e@ z");
result.add("air's", "e@ z");
result.add("ais", "aI z");
result.add("aisle", "aI l");
result.add("aisles", "aI l z");
result.add("ait-\tken", "aI t\tk V n");
result.add("aix-\tla-\tcha-\tpelle", "aI k\ts l V\tS V\tp e l");
result.add("ak-\tbar", "{ k\tb @r");
result.add("ak-\tka-\tdi-\tan", "V\tk eI\td i:\tV n");
result.add("ak-\tker-\tman", "{\tk @r\tm V n");
result.add("ak-\tre", "{\tk @r");
result.add("ak-\tron", "{ k\tr V n");
result.add("akc", "{ k");
result.add("ake", "eI k");
result.add("akst", "{ k s t");
result.add("al", "{ l");
result.add("al-\tba", "{ l\tb V");
result.add("al-\tba-\tcore", "{ l\tb V\tk O@");
result.add("al-\tba-\tne-\tse", "Q l\tb Q\tn eI\tz i:");
result.add("al-\tba-\tni-\ta", "{ l\tb eI\tn i:\tV");
result.add("al-\tba-\tni-\tan", "{ l\tb eI\tn i:\tV n");
result.add("al-\tba-\tni-\tans", "{ l\tb eI\tn i:\tV n z");
result.add("al-\tba-\tni-\ta's", "{ l\tb eI\tn i:\tV z");
result.add("al-\tba-\tny", "O: l\tb V\tn i:");
result.add("al-\tba-\tny's", "O: l\tb V\tn i: z");
result.add("al-\tban", "Q l\tb V n");
result.add("al-\tbans", "{ l\tb { n z");
result.add("al-\tbar-\tran", "{ l\tb {\tr V n");
result.add("al-\tbat-\tros-\tses", "{ l\tb V t\tr Q\ts V z");
result.add("al-\tbat-\tross", "{ l\tb V t\tr Q s");
result.add("al-\tbe-\tit", "O: l\tb i:\tI t");
result.add("al-\tbe-\tmarle", "{ l\tb V\tm Q@ l");
result.add("al-\tbee", "V l\tb i:");
result.add("al-\tben", "O: l\tb V n");
result.add("al-\tber", "{ l\tb @r");
result.add("al-\tber-\tgo", "Q l\tb e@\tg @U");
result.add("al-\tber-\tta", "{ l\tb @r\tt V");
result.add("al-\tber-\tti", "Q l\tb e@\tt i:");
result.add("al-\tber-\tti-\tna", "Q l\tb @r\tt i:\tn V");
result.add("al-\tber-\ttine", "{ l\tb @r\tt i: n");
result.add("al-\tber-\tto", "{ l\tb @r\tt @U");
result.add("al-\tber-\ttus", "{ l\tb @r\tt V s");
result.add("al-\tbers", "O: l\tb @r z");
result.add("al-\tbert", "{ l\tb @r t");
result.add("al-\tbert-\tson", "{ l\tb @r t\ts V n");
result.add("al-\tbert-\tson's", "{ l\tb @r t\ts V n z");
result.add("al-\tbert-\tville", "{ l\tb @r t\tv I l");
result.add("al-\tberts", "{ l\tb @r t s");
result.add("al-\tbi-\tna", "Q l\tb i:\tn V");
result.add("al-\tbi-\tno", "{ l\tb aI\tn @U");
result.add("al-\tbi-\ton", "{ l\tb i:\tV n");
result.add("al-\tbie", "O: l\tb i:");
result.add("al-\tbin", "{ l\tb I n");
result.add("al-\tbo", "{ l\tb @U");
result.add("al-\tbrecht", "O: l\tb r e k t");
result.add("al-\tbright", "O: l\tb r aI t");
result.add("al-\tbu-\tmin", "{ l\tb j u:\tm @ n");
result.add("al-\tbu-\tquer-\tque", "{ l\tb V\tk @r\tk i:");
result.add("al-\tbu-\try", "{ l\tb e@\ti:");
result.add("al-\tbu-\tte-\trol", "{ l\tb j u:\tt @r\tO: l");
result.add("al-\tbum", "{ l\tb V m");
result.add("al-\tbums", "{ l\tb V m z");
result.add("al-\tbum's", "{ l\tb V m z");
result.add("al-\tbus", "{ l\tb V s");
result.add("al-\tcan", "{ l\tk { n");
result.add("al-\tcan-\tta-\tra", "Q l\tk Q n\tt Q@\tV");
result.add("al-\tcat-\traz", "{ l\tk V t\tr { z");
result.add("al-\tche-\tmical-\tly", "{ l\tk e\tm I k\tl i:");
result.add("al-\tche-\tmist", "{ l\ttS V\tm V s t");
result.add("al-\tche-\tmy", "{ l\tk V\tm i:");
result.add("al-\tci-\tna", "Q l\ttS i:\tn V");
result.add("al-\tcide", "{ l\ts aI d");
result.add("al-\tcids", "{ l\ts I d z");
result.add("al-\tco", "{ l\tk @U");
result.add("al-\tco-\ta", "{ l\tk @U\tV");
result.add("al-\tco-\ta's", "{ l\tk @U\tV z");
result.add("al-\tco-\tho-\tli-\tsm", "{ l\tk V\th O:\tl I\tz V m");
result.add("al-\tco-\tho-\tlic", "{ l\tk V\th Q\tl I k");
result.add("al-\tco-\tho-\tlics", "{ l\tk V\th Q\tl I k s");
result.add("al-\tco-\thol", "{ l\tk V\th Q l");
result.add("al-\tcock", "V l\tk Q k");
result.add("al-\tcon", "V l\tk Q n");
result.add("al-\tco's", "{ l\tk @U z");
result.add("al-\tcott", "{ l\tk Q t");
result.add("al-\tcove", "{ l\tk @U v");
result.add("al-\tcoves", "{ l\tk @U v z");
result.add("al-\tder-\tson", "O: l\td @r\ts V n");
result.add("al-\tdi-\tcarb", "O: l\td I\tk Q@ b");
result.add("al-\tdin", "Q l\td i: n");
result.add("al-\tdis", "Q l\td I s");
result.add("al-\tdo", "Q l\td @U");
result.add("al-\tdo-\tra", "Q l\td O@\tV");
result.add("al-\tdus", "Q l\td V s");
result.add("al-\tfa", "{ l\tf V");
result.add("al-\tfal-\tfa", "{ l\tf { l\tf V");
result.add("al-\tfa's", "{ l\tf V z");
result.add("al-\tfie", "{ l\tf i:");
result.add("al-\tfie-\tri", "Q l\tf I@\ti:");
result.add("al-\tfin", "{ l\tf I n");
result.add("al-\tfon-\tsin", "{ l\tf Q n\ts I n");
result.add("al-\tfon-\tso", "{ l\tf Q n\ts @U");
result.add("al-\tfons", "Q l\tf @U n z");
result.add("al-\tfonse", "{ l\tf Q n s");
result.add("al-\tford", "{ l\tf @r d");
result.add("al-\tgae", "{ l\tdZ i:");
result.add("al-\tgal", "{ l\tg V l");
result.add("al-\tgar", "Q l\tg Q@");
result.add("al-\tge-\tri-\ta", "{ l\tdZ I@\ti:\tV");
result.add("al-\tge-\tri-\tan", "{ l\tdZ I@\ti:\tV n");
result.add("al-\tge-\tri-\tans", "{ l\tdZ i:\tr i:\tV n z");
result.add("al-\tge-\tri-\ta's", "{ l\tdZ i:\tr i:\tV z");
result.add("al-\tgeb-\tra", "{ l\tdZ V b\tr V");
result.add("al-\tgeb-\tra-\tic", "{ l\tdZ V b\tr eI\tI k");
result.add("al-\tgeb-\trai-\tcal-\tly", "{ l\tdZ V b\tr eI\tI k\tl i:");
result.add("al-\tger", "{ l\tdZ @r");
result.add("al-\tger-\tnon", "{ l\tdZ @r\tn Q n");
result.add("al-\tgie", "O: l\tg i:");
result.add("al-\tgiers", "{ l\tdZ I@ z");
result.add("al-\tgo-\tma", "{ l\tg @U\tm V");
result.add("al-\tgo-\tri-\tthm", "{ l\tg @r\tI\tD V m");
result.add("al-\tgo-\tri-\tthms", "{ l\tg @r\tI\tD V m z");
result.add("al-\tgol", "{ l\tg Q l");
result.add("al-\tgon-\tqui-\tan", "{ l\tg Q N\tk i:\tV n");
result.add("al-\tgon-\tquin", "{ l\tg Q N\tk w I n");
result.add("al-\tgui-\tre", "Q l\tg w I@\teI");
result.add("al-\tgy", "{ l\tdZ i:");
result.add("al-\tham-\tbra", "{ l\th { m\tb r V");
result.add("al-\tka-\thest", "{ l\tk V\th e s t");
result.add("al-\tka-\tli", "{ l\tk V\tl aI");
result.add("al-\tka-\tli-\tni-\tty", "{ l\tk V\tl I\tn V\tt i:");
result.add("al-\tka-\tlies", "{ l\tk V\tl aI z");
result.add("al-\tka-\tline", "{ l\tk V\tl aI n");
result.add("al-\tka-\tloi-\tdal", "{ l\tk V\tl OI\td V l");
result.add("al-\tka-\tloid", "{ l\tk V\tl OI d");
result.add("al-\tka-\tloids", "{ l\tk V\tl OI d z");
result.add("al-\tkanes", "{ l\tk eI n z");
result.add("al-\tkene", "{ l\tk i: n");
result.add("al-\tkenes", "{ l\tk i: n z");
result.add("al-\tla", "Q\tl V");
result.add("al-\tlah", "Q\tl V");
result.add("al-\tlain", "V\tl eI n");
result.add("al-\tlan", "{\tl V n");
result.add("al-\tlard", "{\tl @r d");
result.add("al-\tlay", "V\tl eI");
result.add("al-\tlay-\ting", "V\tl eI\tI N");
result.add("al-\tlayed", "V\tl eI d");
result.add("al-\tlays", "V\tl eI z");
result.add("al-\tle-\tga-\ttion", "{\tl V\tg eI\tS V n");
result.add("al-\tle-\tga-\ttions", "{\tl V\tg eI\tS V n z");
result.add("al-\tle-\tged-\tly", "V\tl e\tdZ V d\tl i:");
result.add("al-\tle-\tges", "V\tl e\tdZ V z");
result.add("al-\tle-\tgha-\tny", "{\tl V\tg eI\tn i:");
result.add("al-\tle-\tghe-\tny", "{\tl V\tg eI\tn i:");
result.add("al-\tle-\tghe-\tny's", "{\tl V\tg eI\tn i: z");
result.add("al-\tle-\tgi-\tan-\tces", "{\tl i:\tdZ i:\t{ n\ts V z");
result.add("al-\tle-\tging", "V\tl e\tdZ I N");
result.add("al-\tle-\tgo-\tri-\tcal", "{\tl V\tg O@\tV\tk V l");
result.add("al-\tle-\tgo-\tries", "{\tl V\tg O@\ti: z");
result.add("al-\tle-\tgo-\try", "{\tl V\tg O@\ti:");
result.add("al-\tle-\tgra", "Q\tl e g\tr V");
result.add("al-\tle-\tle", "V\tl e\tl i:");
result.add("al-\tle-\tles", "V\tl e\tl i: z");
result.add("al-\tle-\tlic", "V\tl e\tl I k");
result.add("al-\tle-\tmand", "{\tl V\tm V n d");
result.add("al-\tle-\tvi-\ta-\tted", "V\tl i:\tv i:\teI\tt V d");
result.add("al-\tle-\tvi-\ta-\tting", "V\tl i:\tv i:\teI\tt I N");
result.add("al-\tle-\tvi-\ta-\ttion", "V\tl i:\tv i:\teI\tS V n");
result.add("al-\tle-\tvi-\tate", "V\tl i:\tv i:\teI t");
result.add("al-\tle-\tvi-\tates", "V\tl i:\tv i:\teI t s");
result.add("al-\tlee", "V\tl i:");
result.add("al-\tleg-\tro", "V\tl e g\tr @U");
result.add("al-\tlege", "V\tl e dZ");
result.add("al-\tleged", "V\tl e dZ d");
result.add("al-\tlegi-\tance", "V\tl i:\tdZ V n s");
result.add("al-\tlen", "{\tl V n");
result.add("al-\tlen-\tdale", "{\tl V n\td eI l");
result.add("al-\tlen-\tde", "Q\tj e n\td eI");
result.add("al-\tlen-\tdorf", "{\tl V n\td O@ f");
result.add("al-\tlen-\thurst", "{\tl V n\th @r s t");
result.add("al-\tlen-\ttown", "{\tl V n\tt aU n");
result.add("al-\tlen-\twood", "{\tl V n\tw U d");
result.add("al-\tlene", "{\tl i: n");
result.add("al-\tlen's", "{\tl V n z");
result.add("al-\tler", "O:\tl @r");
result.add("al-\tler-\tgen", "{\tl @r\tdZ V n");
result.add("al-\tler-\tgens", "{\tl @r\tdZ V n z");
result.add("al-\tler-\tgic", "V\tl @r\tdZ I k");
result.add("al-\tler-\tgies", "{\tl @r\tdZ i: z");
result.add("al-\tler-\tgist", "{\tl @r\tdZ I s t");
result.add("al-\tler-\tgy", "{\tl @r\tdZ i:");
result.add("al-\tler-\tton", "{\tl @r\tt V n");
result.add("al-\tley-\tway", "{\tl i:\tw eI");
result.add("al-\tley-\tways", "{\tl i:\tw eI z");
result.add("al-\tleyne", "{\tl eI n");
result.add("al-\tleys", "{\tl i: z");
result.add("al-\tli", "{\tl i:");
result.add("al-\tli-\tan-\tces", "V\tl aI\tV n\ts V z");
result.add("al-\tli-\tan-\tce's", "V\tl aI\tV n\ts V z");
result.add("al-\tli-\tance", "V\tl aI\tV n s");
result.add("al-\tli-\tant", "V\tl aI\tV n t");
result.add("al-\tli-\tga-\ttor", "{\tl I\tg eI\tt @r");
result.add("al-\tli-\tga-\ttors", "{\tl I\tg eI\tt @r z");
result.add("al-\tli-\tson", "{\tl I\ts V n");
result.add("al-\tli-\tson's", "{\tl I\ts V n z");
result.add("al-\tli-\tte-\tra-\ttion", "V\tl I\tt @r\teI\tS V n");
result.add("al-\tli-\tte-\tra-\ttive", "V\tl I\tt @r\tV\tt I v");
result.add("al-\tlie", "{\tl i:");
result.add("al-\tlied", "V\tl aI d");
result.add("al-\tlies", "{\tl aI z");
result.add("al-\tlin", "V\tl I n");
result.add("al-\tling-\tham", "O:\tl I N\th { m");
result.add("al-\tlis", "{\tl I s");
result.add("al-\tlis-\tter", "O:\tl I s\tt @r");
result.add("al-\tlo-\tca-\tted", "{\tl V\tk eI\tt V d");
result.add("al-\tlo-\tca-\tting", "{\tl V\tk eI\tt I N");
result.add("al-\tlo-\tca-\ttion", "{\tl V\tk eI\tS V n");
result.add("al-\tlo-\tca-\ttions", "{\tl V\tk eI\tS V n z");
result.add("al-\tlo-\tca-\ttor", "{\tl V\tk eI\tt @r");
result.add("al-\tlo-\tca-\ttors", "{\tl V\tk eI\tt @r z");
result.add("al-\tlo-\tcate", "{\tl V\tk eI t");
result.add("al-\tlo-\tcates", "{\tl V\tk eI t s");
result.add("al-\tlo-\tmorph", "{\tl V\tm O@ f");
result.add("al-\tlo-\tmorphs", "{\tl V\tm O@ f s");
result.add("al-\tlo-\tpho-\tnic", "{\tl V\tf Q\tn I k");
result.add("al-\tlo-\tphone", "{\tl V\tf @U n");
result.add("al-\tlo-\tphones", "{\tl V\tf @U n z");
result.add("al-\tlo-\tted", "V\tl Q\tt V d");
result.add("al-\tlot", "V\tl Q t");
result.add("al-\tlot-\tment", "V\tl Q t\tm V n t");
result.add("al-\tlot-\tments", "V\tl Q t\tm V n t s");
result.add("al-\tlot-\trope", "{\tl V t\tr @U p");
result.add("al-\tlot-\tropes", "{\tl V t\tr @U p s");
result.add("al-\tlot-\tted", "V\tl Q\tt V d");
result.add("al-\tlot-\tting", "V\tl Q\tt I N");
result.add("al-\tlots", "V\tl Q t s");
result.add("al-\tlu-\tsion", "V\tl u:\tZ V n");
result.add("al-\tlu-\tsions", "V\tl u:\tZ V n z");
result.add("al-\tlu-\tsive", "V\tl u:\ts I v");
result.add("al-\tlu-\tvi-\tal", "{\tl u:\tv i:\tV l");
result.add("al-\tlu-\tvi-\tum", "V\tl u:\tv i:\tV m");
result.add("al-\tly", "{\tl aI");
result.add("al-\tly-\ting", "{\tl aI\tI N");
result.add("al-\tly-\tson", "{\tl V\ts V n");
result.add("al-\tlyn", "{\tl I n");
result.add("al-\tlys", "{\tl aI z");
result.add("al-\tly's", "V\tl aI z");
result.add("al-\tma", "{ l\tm V");
result.add("al-\tma-\tda", "Q l\tm Q\td V");
result.add("al-\tma-\tden", "{ l\tm V\td V n");
result.add("al-\tma-\tnac", "O: l\tm V\tn { k");
result.add("al-\tman", "{ l\tm V n");
result.add("al-\tmas", "{ l\tm V z");
result.add("al-\tme-\tda", "Q l\tm eI\td V");
result.add("al-\tmei-\tda", "Q l\tm i:\td V");
result.add("al-\tmi-\tra", "Q l\tm I@\tV");
result.add("al-\tmigh-\tty", "O: l\tm aI\tt i:");
result.add("al-\tmo", "Q l\tm @U");
result.add("al-\tmon", "Q l\tm V n");
result.add("al-\tmond", "Q\tm V n d");
result.add("al-\tmonds", "Q l\tm V n d z");
result.add("al-\tmost", "O: l\tm @U s t");
result.add("al-\tpa-\tca", "{ l\tp {\tk V");
result.add("al-\tpaugh", "V l\tp O:");
result.add("al-\tper", "{ l\tp @r");
result.add("al-\tpers", "{ l\tp @r z");
result.add("al-\tpert", "{ l\tp @r t");
result.add("al-\tpha", "{ l\tf V");
result.add("al-\tpha-\tbe-\tti-\tcal", "{ l\tf V\tb e\tt I\tk V l");
result.add("al-\tpha-\tbe-\tti-\tza-\ttion", "{ l\tf V\tb e\tt V\tz eI\tS V n");
result.add("al-\tpha-\tbe-\ttic", "{ l\tf V\tb e\tt I k");
result.add("al-\tpha-\tbe-\ttical-\tly", "{ l\tf V\tb e\tt I k\tl i:");
result.add("al-\tpha-\tbe-\ttize", "{ l\tf V\tb V\tt aI z");
result.add("al-\tpha-\tbet", "{ l\tf V\tb e t");
result.add("al-\tpha-\tnu-\tme-\tric", "{ l\tf V\tn u:\tm e@\tI k");
result.add("al-\tpha-\tret-\tta", "{ l\tf @r\te\tt V");
result.add("al-\tpha's", "{ l\tf V z");
result.add("al-\tphin", "{ l\tf I n");
result.add("al-\tphon-\tsine", "V l\tf Q n\ts i: n");
result.add("al-\tphon-\tso", "{ l\tf Q n\ts @U");
result.add("al-\tphonse", "{ l\tf Q n z");
result.add("al-\tpine", "{ l\tp aI n");
result.add("al-\tpo", "{ l\tp @U");
result.add("al-\trea-\tdy", "O: l\tr e\td i:");
result.add("al-\tright", "O: l\tr aI t");
result.add("al-\troy", "V l\tr OI");
result.add("al-\tsa-\ttian", "{ l\ts eI\tS V n");
result.add("al-\tsace", "{ l\ts Q s");
result.add("al-\tsip", "{ l\ts V p");
result.add("al-\tso", "O: l\ts @U");
result.add("al-\tsop", "{ l\ts Q p");
result.add("al-\tta", "Q l\tt V");
result.add("al-\tta-\tde-\tna", "Q l\tt V\td i:\tn V");
result.add("al-\tta-\tic", "{ l\tt eI\tI k");
result.add("al-\tta-\tvis-\tta", "O: l\tt V\tv I s\tt V");
result.add("al-\ttai", "{ l\tt aI");
result.add("al-\ttar", "O: l\tt @r");
result.add("al-\ttar-\tpiece", "O: l\tt @r\tp i: s");
result.add("al-\ttars", "O: l\tt @r z");
result.add("al-\ttay", "O: l\tt aI");
result.add("al-\tte-\tra-\ttion", "O: l\tt @r\teI\tS V n");
result.add("al-\tte-\tra-\ttions", "O: l\tt @r\teI\tS V n z");
result.add("al-\tte-\tring", "O: l\tt @r\tI N");
result.add("al-\tten-\tburg", "O: l\tt V n\tb @r g");
result.add("al-\tter", "O: l\tt @r");
result.add("al-\tter-\tca-\ttion", "Q l\tt @r\tk eI\tS V n");
result.add("al-\tter-\tca-\ttions", "Q l\tt @r\tk eI\tS V n z");
result.add("al-\tter-\tman", "O: l\tt @r\tm V n");
result.add("al-\tter-\tna-\tted", "O: l\tt @r\tn eI\tt V d");
result.add("al-\tter-\tna-\tting", "O: l\tt @r\tn eI\tt I N");
result.add("al-\tter-\tna-\ttion", "O: l\tt @r\tn eI\tS V n");
result.add("al-\tter-\tna-\ttive", "O: l\tt @r\tn V\tt I v");
result.add("al-\tter-\tna-\ttive-\tly", "O: l\tt @r\tn V\tt I v\tl i:");
result.add("al-\tter-\tna-\ttives", "O: l\tt @r\tn V\tt I v z");
result.add("al-\tter-\tna-\ttor", "O: l\tt @r\tn eI\tt @r");
result.add("al-\tter-\tnate", "O: l\tt @r\tn V t");
result.add("al-\tter-\tnate-\tly", "O: l\tt @r\tn V t\tl i:");
result.add("al-\tter-\tnates", "O: l\tt @r\tn eI t s");
result.add("al-\ttered", "O: l\tt @r d");
result.add("al-\tters", "O: l\tt @r z");
result.add("al-\tthe-\ta", "{ l\tT i:\tV");
result.add("al-\tthough", "O: l\tD @U");
result.add("al-\tti-\tme-\tter", "{ l\tt I\tm V\tt @r");
result.add("al-\tti-\ttude", "{ l\tt I\tt u: d");
result.add("al-\tti-\ttudes", "{ l\tt I\tt u: d z");
result.add("al-\ttip-\tla-\tno", "{ l\tt I p\tl Q\tn @U");
result.add("al-\tto", "{ l\tt @U");
result.add("al-\tto-\tge-\tther", "O: l\tt V\tg e\tD @r");
result.add("al-\tton", "O: l\tt V n");
result.add("al-\ttoo-\tna", "{ l\tt u:\tn V");
result.add("al-\ttos", "{ l\tt @U z");
result.add("al-\ttu-\tras", "Q l\tt U@\tV s");
result.add("al-\ttus", "{ l\tt V s");
result.add("al-\tva", "{ l\tv V");
result.add("al-\tva-\tra-\tdo", "{ l\tv @r\tQ\td @U");
result.add("al-\tva-\trez", "{ l\tv @r\te z");
result.add("al-\tva-\tro", "V l\tv Q@\t@U");
result.add("al-\tvah", "{ l\tv Q");
result.add("al-\tvan", "{ l\tv V n");
result.add("al-\tve-\to-\tlar", "{ l\tv i:\tV\tl @r");
result.add("al-\tve-\to-\tli", "{ l\tv i:\tV\tl aI");
result.add("al-\tver-\tson", "Q l\tv e@\ts V n");
result.add("al-\tves", "Q l\tv e s");
result.add("al-\tvey", "{ l\tv i:");
result.add("al-\tvi-\tna", "{ l\tv aI\tn V");
result.add("al-\tvi-\tno", "Q l\tv i:\tn @U");
result.add("al-\tvi-\tta", "Q l\tv i:\tt V");
result.add("al-\tvin", "{ l\tv I n");
result.add("al-\tvis", "Q l\tv I s");
result.add("al-\tvite", "{ l\tv aI t");
result.add("al-\tvord", "{ l\tv O@ d");
result.add("al-\tways", "O: l\tw eI z");
result.add("al-\twin", "{ l\tw I n");
result.add("al-\twyn", "{ l\tw I n");
result.add("al-\tzhei-\tmer", "{ l\tz h aI\tm @r");
result.add("al-\tzhei-\tmer's", "{ l\tz h aI\tm @r z");
result.add("al.", "{ l");
result.add("ald-\tred", "{ l\td @r d");
result.add("ald-\tredge", "O: l\td r e dZ");
result.add("ald-\tric", "{ l\td r I k");
result.add("ald-\trich", "O: l\td r I tS");
result.add("ald-\tridge", "O: l\td r I dZ");
result.add("ald-\trin", "O: l\td r I n");
result.add("ald-\trin's", "O: l\td r I n z");
result.add("ald-\twin", "O: l\td w I n");
result.add("aldo-\tus", "Q l\td V s");
result.add("ale", "eI l");
result.add("ale-\thouse", "eI l\th aU s");
result.add("ale-\tman", "eI l\tm V n");
result.add("ale-\twife", "eI l\tw aI f");
result.add("ale-\twives", "eI l\tw aI v z");
result.add("ales", "eI l z");
result.add("alf", "{ l f");
result.add("alf-\tre-\tdo", "{ l\tf r eI\td @U");
result.add("alf-\tred", "{ l\tf r V d");
result.add("all", "O: l");
result.add("all-\tbee", "O: l\tb i:");
result.add("all-\tday", "O: l\td eI");
result.add("all-\tgood", "O: l\tg U d");
result.add("all-\tin", "V\tl I n");
result.add("all-\tmon", "O: l\tm V n");
result.add("alle-\tman", "eI l\tm V n");
result.add("alles", "eI l z");
result.add("alm", "Q m");
result.add("alms", "Q l m z");
result.add("alps", "{ l p s");
result.add("als", "{ l z");
result.add("al's", "{ l z");
result.add("als-\tton", "O: l\ts t V n");
result.add("alt", "Q l t");
result.add("alt-\tman", "O: l\tt m V n");
result.add("alt-\tman's", "O: l\tt m V n z");
result.add("alt-\tru-\tis-\ttic", "O: l\tt r u:\tI s\tt I k");
result.add("alt-\tru-\tism", "{ l\tt r u:\tI z m");
result.add("am", "{ m");
result.add("am-\tb-\tling", "{ m\tb V\tl I N");
result.add("am-\tbas-\tsa-\tdo-\tri-\tal", "{ m\tb {\ts V\td O@\ti:\tV l");
result.add("am-\tbas-\tsa-\tdor", "{ m\tb {\ts V\td @r");
result.add("am-\tbas-\tsa-\tdor-\tship", "{ m\tb {\ts V\td @r\tS I p");
result.add("am-\tbas-\tsa-\tdor-\tships", "{ m\tb {\ts V\td @r\tS I p s");
result.add("am-\tbas-\tsa-\tdors", "{ m\tb {\ts V\td @r z");
result.add("am-\tbas-\tsa-\tdor's", "{ m\tb {\ts V\td @r z");
result.add("am-\tbas-\tsa-\tdress", "{ m\tb {\ts V d\tr V s");
result.add("am-\tber", "{ m\tb @r");
result.add("am-\tber-\tgris", "{ m\tb @r g\tr I s");
result.add("am-\tber-\tson", "{ m\tb @r\ts V n");
result.add("am-\tberg", "{ m\tb @r g");
result.add("am-\tbers", "{ m\tb @r z");
result.add("am-\tber's", "{ m\tb @r");
result.add("am-\tbi-\tance", "{ m\tb i:\tV n s");
result.add("am-\tbi-\tdext-\trous", "{ m\tb I\td e k\ts t r V s");
result.add("am-\tbi-\tence", "{ m\tb i:\tV n s");
result.add("am-\tbi-\tent", "{ m\tb i:\tV n t");
result.add("am-\tbi-\tgu-\ti-\tties", "{ m\tb I g\tj u:\tI\tt i: z");
result.add("am-\tbi-\tgu-\ti-\tty", "{ m\tb I g\tj u:\tI\tt i:");
result.add("am-\tbi-\tgu-\tous", "{ m\tb I g\tj u:\tV s");
result.add("am-\tbi-\ttion", "{ m\tb I\tS V n");
result.add("am-\tbi-\ttions", "{ m\tb I\tS V n z");
result.add("am-\tbi-\ttious", "{ m\tb I\tS V s");
result.add("am-\tbi-\ttious-\tly", "{ m\tb I\tS V s\tl i:");
result.add("am-\tbi-\tva-\tlence", "{ m\tb I\tv V\tl V n s");
result.add("am-\tbi-\tva-\tlent", "{ m\tb I\tv V\tl V n t");
result.add("am-\tble", "{ m\tb V l");
result.add("am-\tbro-\tgi-\to", "{ m\tb r @U\tdZ i:\t@U");
result.add("am-\tbro-\tsi-\tne", "Q m\tb r @U\ts i:\tn i:");
result.add("am-\tbro-\tsi-\to", "{ m\tb r @U\ts i:\t@U");
result.add("am-\tbro-\tsi-\tus", "{ m\tb r V\ts i:\tV s");
result.add("am-\tbro-\tsia", "{ m\tb r @U\tZ @");
result.add("am-\tbro-\tsial", "{ m\tb r @U\tZ @ l");
result.add("am-\tbro-\tsian", "{ m\tb r @U\tz @ n");
result.add("am-\tbrose", "{ m\tb r @U z");
result.add("am-\tbu-\tla-\tto-\try", "{ m\tb j V\tl V\tt O@\ti:");
result.add("am-\tbu-\tlan-\tces", "{ m\tb j V\tl V n\ts V z");
result.add("am-\tbu-\tlance", "{ m\tb j V\tl V n s");
result.add("am-\tbu-\tshes", "{ m\tb U\tS V z");
result.add("am-\tbu-\tshing", "{ m\tb U\tS I N");
result.add("am-\tbur-\tgey", "{ m\tb @r\tg i:");
result.add("am-\tbush", "{ m\tb U S");
result.add("am-\tbushed", "{ m\tb U S t");
result.add("am-\tdahl", "{ m\td Q l");
result.add("am-\therst", "{\tm @r s t");
result.add("am-\tman", "{\tm V n");
result.add("am-\tmann", "{\tm V n");
result.add("am-\tme-\tter", "{\tm i:\tt @r");
result.add("am-\tme-\tters", "{\tm i:\tt @r z");
result.add("am-\tmer-\tman", "{\tm @r\tm V n");
result.add("am-\tmo", "{\tm @U");
result.add("am-\tmo-\tni-\tum", "V\tm @U\tn i:\tV m");
result.add("am-\tmo-\tnia", "V\tm @U n\tj V");
result.add("am-\tmo-\tnite", "{\tm V\tn aI t");
result.add("am-\tmo-\tnites", "{\tm V\tn aI t s");
result.add("am-\tmon", "{\tm V n");
result.add("am-\tmons", "{\tm V n z");
result.add("am-\tmu-\tni-\ttion", "{ m\tj V\tn I\tS V n");
result.add("am-\tmu-\tni-\ttions", "{ m\tj V\tn I\tS V n z");
result.add("am-\tne-\tsi-\tac", "{ m\tn i:\tz i:\t{ k");
result.add("am-\tne-\tsia", "{ m\tn i:\tZ @");
result.add("am-\tnes-\tties", "{ m\tn V s\tt i: z");
result.add("am-\tnes-\tty", "{ m\tn V s\tt i:");
result.add("am-\tni-\to", "{ m\tn i:\t@U");
result.add("am-\tni-\to-\tcen-\tte-\tsis", "{ m\tn i:\t@U\ts e n\tt i:\ts I s");
result.add("am-\tni-\to-\ttic", "{ m\tn i:\tO:\tt I k");
result.add("am-\tpe-\trage", "{ m\tp @r\tI dZ");
result.add("am-\tper-\tsand", "{ m\tp @r\ts { n d");
result.add("am-\tpex", "{ m\tp e k s");
result.add("am-\tphe-\tta-\tmine", "{ m\tf e\tt V\tm i: n");
result.add("am-\tphe-\tta-\tmines", "{ m\tf e\tt V\tm i: n z");
result.add("am-\tphi-\tbi-\tan", "{ m\tf I\tb i:\tV n");
result.add("am-\tphi-\tbi-\tans", "{ m\tf I\tb i:\tV n z");
result.add("am-\tphi-\tbi-\tous", "{ m\tf I\tb i:\tV s");
result.add("am-\tphi-\tbole", "{ m\tf @\tb @U l");
result.add("am-\tphi-\tthe-\ta-\tter", "{ m\tf I\tT i:\tV\tt @r");
result.add("am-\tphi-\tthe-\ta-\tters", "{ m\tf I\tT i:\tV\tt @r z");
result.add("am-\tphi-\tthe-\ta-\ttre", "{ m\tp I\tT i:\tV\tt @r");
result.add("am-\tpho-\tra", "{ m\tf @r\tV");
result.add("am-\tpho-\trae", "{ m\tf @r\ti:");
result.add("am-\tple", "{ m\tp V l");
result.add("am-\tpli-\tcons", "{ m\tp l I\tk O: n z");
result.add("am-\tpli-\tfi-\tca-\ttion", "{ m\tp l I\tf I\tk eI\tS V n");
result.add("am-\tpli-\tfi-\tca-\ttions", "{ m\tp l I\tf I\tk eI\tS V n z");
result.add("am-\tpli-\tfi-\ter", "{ m\tp l I\tf aI\t@r");
result.add("am-\tpli-\tfi-\ters", "{ m\tp l I\tf aI\t@r z");
result.add("am-\tpli-\tfied", "{ m\tp l I\tf aI d");
result.add("am-\tpli-\tfies", "{ m\tp l I\tf aI z");
result.add("am-\tpu-\tta-\tted", "{ m\tp j V\tt eI\tt V d");
result.add("am-\tpu-\tta-\ttion", "{ m\tp j @\tt eI\tS V n");
result.add("am-\tpu-\tta-\ttions", "{ m\tp j u:\tt eI\tS V n z");
result.add("am-\tpu-\ttate", "{ m\tp j V\tt eI t");
result.add("am-\tpu-\ttee", "{ m\tp j V\tt i:");
result.add("am-\tpu-\ttees", "{ m\tp j V\tt i: z");
result.add("am-\tr", "Q\tm @r");
result.add("am-\traam", "{ m\tr Q m");
result.add("am-\trit-\tsar", "{ m\tr I t\ts @r");
result.add("am-\tway", "{ m\tw eI");
result.add("amb-\tled", "{ m\tb V l d");
result.add("amb-\tler", "{ m\tb l @r");
result.add("amb-\tles", "{ m\tb V l z");
result.add("amc", "{ m k");
result.add("ame", "eI m");
result.add("ames", "eI m z");
result.add("amp", "{ m p");
result.add("amp-\tli-\tfy", "{ m\tp l I\tf aI");
result.add("amp-\tli-\tfy-\ting", "{ m\tp l I\tf aI\tI N");
result.add("amp-\tli-\ttude", "{ m\tp l I\tt u: d");
result.add("amp-\tly", "{ m\tp l i:");
result.add("ams", "{ m z");
result.add("am's", "{ m z");
result.add("ams-\tden", "{ m\tz d V n");
result.add("ams-\tter-\tdam", "{ m\ts t @r\td { m");
result.add("ams-\tter-\tdam's", "{ m\ts t @r\td { m z");
result.add("ams-\ttrad", "{ m\ts t r { d");
result.add("amt-\track", "{ m\tt r { k");
result.add("amt-\trak", "{ m\tt r { k");
result.add("amt-\trak's", "{ m\tt r { k s");
result.add("an", "{ n");
result.add("an-\tcel", "V n\ts e l");
result.add("an-\tcell", "Q n\ts eI l");
result.add("an-\tces-\ttor", "{ n\ts e s\tt @r");
result.add("an-\tces-\ttors", "{ n\ts e s\tt @r z");
result.add("an-\tcest-\tral", "{ n\ts e s\tt r V l");
result.add("an-\tcest-\try", "{ n\ts e s\tt r i:");
result.add("an-\tcho", "{ n\ttS @U");
result.add("an-\tcho-\trage", "{ N\tk @r\tV dZ");
result.add("an-\tcho-\tring", "{ N\tk @r\tI N");
result.add("an-\tcho-\tvies", "{ n\ttS @U\tv i: z");
result.add("an-\tcho-\tvy", "{ n\ttS @U\tv i:");
result.add("an-\tchor", "{ N\tk @r");
result.add("an-\tchor-\tman", "{ N\tk @r\tm { n");
result.add("an-\tchor-\tmen", "{ N\tk @r\tm e n");
result.add("an-\tchored", "{ N\tk @r d");
result.add("an-\tchors", "{ N\tk @r z");
result.add("an-\tchor's", "{ N\tk @r z");
result.add("an-\tcient", "eI n\tS V n t");
result.add("an-\tcients", "eI n\tS V n t s");
result.add("an-\tcil-\tla-\try", "{ n\ts I\tl e@\ti:");
result.add("an-\tco-\tna", "Q n\tk @U\tn V");
result.add("an-\tda-\tlu-\tsia", "{ n\td V\tl u:\tZ V");
result.add("an-\tda-\tlu-\tsian", "{ n\td V\tl u:\tS V n");
result.add("an-\tdan-\tte", "Q n\td Q n\tt eI");
result.add("an-\tdan-\tti-\tno", "Q n\td Q n\tt i:\tn @U");
result.add("an-\tde-\tan", "{ n\td i:\tV n");
result.add("an-\tde-\tregg", "{ n\td @r\tI g");
result.add("an-\tde-\tsite", "{ n\td V\ts aI t");
result.add("an-\tdel", "{ n\td V l");
result.add("an-\tder", "{ n\td @r");
result.add("an-\tder-\tsen", "{ n\td @r\ts V n");
result.add("an-\tder-\tsen's", "{ n\td @r\ts V n z");
result.add("an-\tder-\tson", "{ n\td @r\ts V n");
result.add("an-\tder-\tson-\tville", "{ n\td @r\ts V n\tv I l");
result.add("an-\tder-\tson's", "{ n\td @r\ts V n z");
result.add("an-\tders", "{ n\td @r z");
result.add("an-\tdert", "{ n\td @r t");
result.add("an-\tdes", "{ n\td i: z");
result.add("an-\tdi-\tno", "Q n\td i:\tn @U");
result.add("an-\tdi-\tron", "{ n\td aI\t@r n");
result.add("an-\tdie", "{ n\td i:");
result.add("an-\tding", "{ n\td I N");
result.add("an-\tdo", "{ n\td @U");
result.add("an-\tdo-\tver", "{ n\td @U\tv @r");
result.add("an-\tdor-\tra", "{ n\td O@\tV");
result.add("an-\tdy", "{ n\td i:");
result.add("an-\tdy's", "{ n\td i: z");
result.add("an-\tge-\tla", "{ n\tdZ V\tl V");
result.add("an-\tge-\tla's", "{ n\tdZ V\tl V z");
result.add("an-\tge-\tle-\tno", "{ n\tdZ V\tl i:\tn @U");
result.add("an-\tge-\tle-\tnos", "{ n\tdZ V\tl i:\tn @U z");
result.add("an-\tge-\tles", "{ n\tdZ V\tl V s");
result.add("an-\tge-\tli", "Q N\tg e\tl i:");
result.add("an-\tge-\tli-\tca", "{ n\tdZ e\tl I\tk V");
result.add("an-\tge-\tli-\tcas", "{ n\tdZ e\tl I\tk V z");
result.add("an-\tge-\tli-\tco", "Q N\tg e\tl i:\tk @U");
result.add("an-\tge-\tli-\tka", "{ n\tdZ e\tl I\tk V");
result.add("an-\tge-\tli-\tna", "{ n\tdZ e\tl i:\tn V");
result.add("an-\tge-\tli-\tta", "Q N\tg e\tl i:\tt V");
result.add("an-\tge-\tlic", "{ n\tdZ e\tl I k");
result.add("an-\tge-\tlical-\tly", "{ n\tdZ e\tl I k\tl i:");
result.add("an-\tge-\tline", "eI N\tg e\tl aI n");
result.add("an-\tge-\tlo", "{ n\tdZ V\tl @U");
result.add("an-\tge-\tlo's", "{ n\tdZ V\tl @U z");
result.add("an-\tge-\tlou", "{ n\tdZ V\tl u:");
result.add("an-\tge-\tring", "{ N\tg @r\tI N");
result.add("an-\tge-\tvine", "eI N\tg I\tv aI n");
result.add("an-\tgel", "eI n\tdZ V l");
result.add("an-\tgel-\tfish", "eI n\tdZ V l\tf I S");
result.add("an-\tgell", "eI n\tdZ V l");
result.add("an-\tgelle", "eI N\tg e l");
result.add("an-\tgels", "eI n\tdZ V l z");
result.add("an-\tger", "{ N\tg @r");
result.add("an-\tgered", "{ N\tg @r d");
result.add("an-\tgers", "{ N\tg @r z");
result.add("an-\tgi", "{ n\tdZ i:");
result.add("an-\tgi-\ter", "{ n\tdZ i:\t@r");
result.add("an-\tgi-\tna", "{ n\tdZ aI\tn V");
result.add("an-\tgi-\to-\tplas-\tty", "{ n\tdZ i:\tV p\tl { s\tt i:");
result.add("an-\tgi-\to-\tten-\tsin", "{ n\tdZ i:\t@U\tt e n\ts I n");
result.add("an-\tgi-\tog-\tram", "{ n\tdZ i:\t@U g\tr { m");
result.add("an-\tgie", "{ n\tdZ i:");
result.add("an-\tgle", "{ N\tg V l");
result.add("an-\tgled", "{ N\tg V l d");
result.add("an-\tgu-\tla-\tted", "{ N\tg j u:\tl eI\tt V d");
result.add("an-\tgu-\tlar", "{ N\tg j V\tl @r");
result.add("an-\tgu-\tlate", "{ N\tg j u:\tl eI t");
result.add("an-\tgui-\tshing", "{ N\tg w I\tS I N");
result.add("an-\tguil-\tla", "{ N\tw I\tl V");
result.add("an-\tguish", "{ N\tg w I S");
result.add("an-\tguished", "{ N\tg w I S t");
result.add("an-\tgus", "{ N\tg V s");
result.add("an-\tgy", "{ n\tdZ i:");
result.add("an-\thalt", "{ n\th V l t");
result.add("an-\theu-\tser", "{ n\th aI\tz @r");
result.add("an-\theu-\tser's", "{ n\th j u:\tz @r z");
result.add("an-\thyd-\tride", "{ n\th aI d\tr aI d");
result.add("an-\tka-\tra", "{ N\tk @r\tV");
result.add("an-\tka-\tra's", "{ N\tk @r\tV z");
result.add("an-\tke-\tny", "V N\tk i:\tn i:");
result.add("an-\tker", "{ N\tk @r");
result.add("an-\tkle", "{ N\tk V l");
result.add("an-\tkle-\tbone", "{ N\tk V l\tb @U n");
result.add("an-\tkles", "{ N\tk V l z");
result.add("an-\tklet", "{ N\tk l V t");
result.add("an-\tklets", "{ N\tk l V t s");
result.add("an-\tna", "{\tn V");
result.add("an-\tna-\tbel", "{\tn V\tb e l");
result.add("an-\tna-\tbel-\tla", "{\tn V\tb e\tl V");
result.add("an-\tna-\tbelle", "{\tn V\tb V l");
result.add("an-\tna-\tpo-\tli-\ts's", "V\tn {\tp V\tl I\ts V z");
result.add("an-\tna-\tpo-\tlis", "V\tn {\tp V\tl I s");
result.add("an-\tnal", "{\tn V l");
result.add("an-\tnals", "{\tn V l z");
result.add("an-\tnan-\tdale", "{\tn V n\td eI l");
result.add("an-\tnas", "{\tn V z");
result.add("an-\tna's", "{\tn V z");
result.add("an-\tne-\tlid", "{\tn V\tl V d");
result.add("an-\tne-\tlids", "{\tn V\tl V d z");
result.add("an-\tne-\txa-\ttion", "{\tn e k\ts eI\tS V n");
result.add("an-\tnea-\tling", "V\tn i:\tl I N");
result.add("an-\tneal", "V\tn i: l");
result.add("an-\tnen-\tberg", "{\tn V n\tb @r g");
result.add("an-\tnette", "V\tn e t");
result.add("an-\tnex", "{\tn e k s");
result.add("an-\tnex-\tes", "{\tn e k\ts V z");
result.add("an-\tnex-\ting", "V\tn e k\ts I N");
result.add("an-\tnexed", "{\tn e k s t");
result.add("an-\tni-\thi-\tla-\tted", "V\tn aI\tV\tl eI\tt V d");
result.add("an-\tni-\thi-\tla-\ttion", "V\tn aI\tV\tl eI\tS V n");
result.add("an-\tni-\thi-\tlate", "V\tn aI\tV\tl eI t");
result.add("an-\tni-\tver-\tsa-\tries", "{\tn I\tv @r\ts @r\ti: z");
result.add("an-\tni-\tver-\tsa-\try", "{\tn I\tv @r\ts @r\ti:");
result.add("an-\tnie", "{\tn i:");
result.add("an-\tnie's", "{\tn i: z");
result.add("an-\tnis", "{\tn i: z");
result.add("an-\tnis-\tton", "{\tn I s\tt V n");
result.add("an-\tno", "{\tn @U");
result.add("an-\tno-\tta-\tted", "{\tn V\tt eI\tt V d");
result.add("an-\tno-\tta-\tting", "{\tn V\tt eI\tt I N");
result.add("an-\tno-\tta-\ttion", "{\tn V\tt eI\tS V n");
result.add("an-\tno-\tta-\ttions", "{\tn V\tt eI\tS V n z");
result.add("an-\tno-\ttate", "{\tn V\tt eI t");
result.add("an-\tno-\ttates", "{\tn V\tt eI t s");
result.add("an-\tnoun-\tcer", "V\tn aU n\ts @r");
result.add("an-\tnoun-\tcers", "V\tn aU n\ts @r z");
result.add("an-\tnoun-\tces", "V\tn aU n\ts V z");
result.add("an-\tnoun-\tcing", "V\tn aU n\ts I N");
result.add("an-\tnounce", "V\tn aU n s");
result.add("an-\tnounce-\tment", "V\tn aU n\ts m V n t");
result.add("an-\tnounce-\tments", "V\tn aU n\ts m V n t s");
result.add("an-\tnounced", "V\tn aU n s t");
result.add("an-\tnoy", "V\tn OI");
result.add("an-\tnoy-\tan-\tces", "V\tn OI\tV n\ts V z");
result.add("an-\tnoy-\tance", "V\tn OI\tV n s");
result.add("an-\tnoy-\ting", "V\tn OI\tI N");
result.add("an-\tnoyed", "V\tn OI d");
result.add("an-\tnoys", "V\tn OI z");
result.add("an-\tnu-\ta-\tlize", "{ n\tj u:\tw V\tl aI z");
result.add("an-\tnu-\ta-\tlized", "{ n\tj u:\tw V\tl aI z d");
result.add("an-\tnu-\ta-\tlly", "{ n\tj u:\tV\tl i:");
result.add("an-\tnu-\tal", "{ n\tj u:\tV l");
result.add("an-\tnu-\tals", "{\tn u:\tV l z");
result.add("an-\tnu-\ti-\tties", "V\tn u:\tV\tt i: z");
result.add("an-\tnu-\ti-\tty", "V\tn u:\tV\tt i:");
result.add("an-\tnu-\tlar", "{ n\tj V\tl @r");
result.add("an-\tnul", "{\tn V l");
result.add("an-\tnul-\tment", "{\tn V l\tm V n t");
result.add("an-\tnulled", "{\tn V l d");
result.add("an-\tnum", "{\tn V m");
result.add("an-\tnun-\tcia-\tta", "Q\tn u: n\ttS Q\tt V");
result.add("an-\tnun-\tzi-\ta-\tta", "Q\tn u: n\tz i:\tQ\tt V");
result.add("an-\tny", "{\tn i:");
result.add("an-\tsa", "{ n\ts V");
result.add("an-\tsaid", "{ n\ts eI d");
result.add("an-\tsa's", "{ n\ts V z");
result.add("an-\tsel", "V n\ts e l");
result.add("an-\tsel-\tma", "Q n\ts e l\tm V");
result.add("an-\tsel-\tmi", "Q n\ts e l\tm i:");
result.add("an-\tsel-\tmo", "Q n\ts e l\tm @U");
result.add("an-\tsell", "{ n\ts e l");
result.add("an-\tselm", "{ n\ts e l m");
result.add("an-\tso-\tni-\ta", "{ n\ts @U\tn i:\tV");
result.add("an-\tson", "{ n\ts V n");
result.add("an-\tswe-\tring", "{ n\ts @r\tI N");
result.add("an-\tswered", "{ n\ts @r d");
result.add("an-\tswers", "{ n\ts @r z");
result.add("an-\tta-\tcid", "{ n\tt {\ts I d");
result.add("an-\tta-\tcids", "{ n\tt {\ts I d z");
result.add("an-\tta-\tgo-\tni-\tsm", "{ n\tt {\tg V\tn I\tz V m");
result.add("an-\tta-\tgo-\tni-\tsms", "{ n\tt {\tg V\tn I\tz V m z");
result.add("an-\tta-\tgo-\tni-\tzing", "{ n\tt {\tg V\tn aI\tz I N");
result.add("an-\tta-\tgo-\tnis-\ttic", "{ n\tt {\tg V\tn I s\tt I k");
result.add("an-\tta-\tgo-\tnist", "{ n\tt {\tg V\tn V s t");
result.add("an-\tta-\tgo-\tnists", "{ n\tt {\tg V\tn V s t s");
result.add("an-\tta-\tgo-\tnize", "{ n\tt {\tg V\tn aI z");
result.add("an-\tta-\tgo-\tnized", "{ n\tt {\tg V\tn aI z d");
result.add("an-\tta-\tres", "{ n\tt e@\ti: z");
result.add("an-\ttal", "{ n\tt V l");
result.add("an-\ttar", "{ n\tt @r");
result.add("an-\ttarc-\tti-\tca", "{ n\tt Q@ k\tt I\tk V");
result.add("an-\ttarc-\tti-\tca's", "{ n\tt Q@ k\tt I\tk V z");
result.add("an-\ttarc-\ttic", "{ n\tt Q@ k\tt I k");
result.add("an-\ttar's", "{ n\tt @r z");
result.add("an-\tte", "{ n\tt i:");
result.add("an-\tte-\tbel-\tlum", "{ n\tt V\tb e\tl V m");
result.add("an-\tte-\tce-\tdent", "{ n\tt V\ts i:\td V n t");
result.add("an-\tte-\tce-\tdents", "{ n\tt V\ts i:\td V n t s");
result.add("an-\tte-\tlope", "{ n\tt V\tl @U p");
result.add("an-\tte-\tme-\tri-\tdi-\tan", "{ n\tt V\tm e@\tI\td i:\tV n");
result.add("an-\tte-\tmor-\ttem", "{ n\tt V\tm O@\tt V m");
result.add("an-\tte-\tri-\tor", "{ n\tt I@\ti:\t@r");
result.add("an-\ttea-\tter", "{ n\tt i:\tt @r");
result.add("an-\ttea-\tters", "{ n\tt i:\tt @r z");
result.add("an-\tted", "{ n\tt V d");
result.add("an-\tten-\tna", "{ n\tt e\tn V");
result.add("an-\tten-\tnae", "{ n\tt e\tn i:");
result.add("an-\tten-\tnas", "{ n\tt e\tn V z");
result.add("an-\tten-\tna's", "{ n\tt e\tn V z");
result.add("an-\ttes", "{ n\tt i: z");
result.add("an-\tthe-\ta", "{ n\tT i:\tV");
result.add("an-\tthem", "{ n\tT V m");
result.add("an-\tthems", "{ n\tT V m z");
result.add("an-\tthill", "{ n\tt h I l");
result.add("an-\tthills", "{ n\tt h I l z");
result.add("an-\ttho-\tlo-\tgies", "{ n\tT Q\tl V\tdZ i: z");
result.add("an-\ttho-\tlo-\tgy", "{ n\tT Q\tl V\tdZ i:");
result.add("an-\ttho-\tny", "{ n\tT V\tn i:");
result.add("an-\ttho-\tny's", "{ n\tT V\tn i: z");
result.add("an-\tthon", "{ n\tT V n");
result.add("an-\tthra-\tcite", "{ n\tT r V\ts aI t");
result.add("an-\tthro-\tpo-\tcent-\tric", "{ n\tT r V\tp V\ts e n\tt r I k");
result.add("an-\tthro-\tpo-\tlo-\tgi-\tcal", "{ n\tT r V\tp V\tl Q\tdZ V\tk V l");
result.add("an-\tthro-\tpo-\tlo-\tgist", "{ n\tT r V\tp Q\tl V\tdZ V s t");
result.add("an-\tthro-\tpo-\tlo-\tgists", "{ n\tT r V\tp Q\tl V\tdZ V s t s");
result.add("an-\tthro-\tpo-\tlo-\tgy", "{ n\tT r V\tp Q\tl V\tdZ i:");
result.add("an-\tthro-\tpo-\tmor-\tphic", "{ n\tT r V\tp V\tm O@\tf I k");
result.add("an-\tti", "{ n\tt i:");
result.add("an-\tti-\ta-\tbor-\ttion", "{ n\tt i:\tV\tb O@\tS V n");
result.add("an-\tti-\tair-\tcraft", "{ n\tt aI\te@ k\tr { f t");
result.add("an-\tti-\tbac-\tte-\tri-\tal", "{ n\tt i:\tb { k\tt I@\ti:\tV l");
result.add("an-\tti-\tbal-\tlis-\ttic", "{ n\tt i:\tb V\tl I s\tt I k");
result.add("an-\tti-\tbi-\to-\ttic", "{ n\tt i:\tb i:\tQ\tt I k");
result.add("an-\tti-\tbi-\to-\ttics", "{ n\tt i:\tb i:\tQ\tt I k s");
result.add("an-\tti-\tbo-\tdies", "{ n\tt I\tb Q\td i: z");
result.add("an-\tti-\tbo-\tdy", "{ n\tt I\tb Q\td i:");
result.add("an-\tti-\tcan-\tcer", "{ n\tt aI\tk { n\ts @r");
result.add("an-\tti-\tci-\tpa-\tted", "{ n\tt I\ts I\tp eI\tt I d");
result.add("an-\tti-\tci-\tpa-\tting", "{ n\tt I\ts I\tp eI\tt I N");
result.add("an-\tti-\tci-\tpa-\ttion", "{ n\tt I\ts I\tp eI\tS V n");
result.add("an-\tti-\tci-\tpa-\ttions", "{ n\tt I\ts I\tp eI\tS V n z");
result.add("an-\tti-\tci-\tpa-\tto-\try", "{ n\tt I\ts I\tp V\tt O@\ti:");
result.add("an-\tti-\tci-\tpate", "{ n\tt I\ts I\tp eI t");
result.add("an-\tti-\tci-\tpates", "{ n\tt I\ts I\tp eI t s");
result.add("an-\tti-\tcli-\tmac-\ttic", "{ n\tt i: k\tl aI\tm { k\tt I k");
result.add("an-\tti-\tco", "Q n\tt i:\tk @U");
result.add("an-\tti-\tcom-\tmu-\tnist", "{ n\tt i:\tk Q m\tj V\tn V s t");
result.add("an-\tti-\tcom-\tpe-\tti-\ttive", "{ n\tt I\tk V m\tp e\tt V\tt I v");
result.add("an-\tti-\tcor-\trup-\ttion", "{ n\tt aI\tk @r\tV p\tS V n");
result.add("an-\tti-\tdep-\tres-\tsant", "{ n\tt i:\td V p\tr e\ts V n t");
result.add("an-\tti-\tdep-\tres-\tsants", "{ n\tt aI\td V p\tr e\ts V n t s");
result.add("an-\tti-\tdisc-\tri-\tmi-\tna-\ttion", "{ n\tt i:\td I s\tk r I\tm I\tn eI\tS V n");
result.add("an-\tti-\tdote", "{ n\tt I\td @U t");
result.add("an-\tti-\tdrug", "{ n\tt I d\tr V g");
result.add("an-\tti-\tdum-\tping", "{ n\tt i:\td V m\tp I N");
result.add("an-\tti-\tfede-\tra-\tlist", "{ n\tt i:\tf e d\tr V\tl V s t");
result.add("an-\tti-\tfede-\tra-\tlists", "{ n\tt i:\tf e d\tr V\tl V s t s");
result.add("an-\tti-\tfraud", "{ n\tt i: f\tr Q d");
result.add("an-\tti-\tfreeze", "{ n\tt i: f\tr i: z");
result.add("an-\tti-\tfun-\tgal", "{ n\tt aI\tf V N\tg V l");
result.add("an-\tti-\tgay", "{ n\tt aI\tg eI");
result.add("an-\tti-\tgen", "{ n\tt I\tdZ V n");
result.add("an-\tti-\tgens", "{ n\tt I\tdZ V n z");
result.add("an-\tti-\tgo-\tne", "{\tt I\tg V\tn i:");
result.add("an-\tti-\tgo-\tne's", "{ n\tt I\tg V\tn i: z");
result.add("an-\tti-\tgo-\tvern-\tment", "{ n\tt i:\tg V\tv @r\tm V n t");
result.add("an-\tti-\tgua", "{ n\tt i: g\tw V");
result.add("an-\tti-\this-\tta-\tmine", "{ n\tt i:\th I s\tt V\tm V n");
result.add("an-\tti-\this-\tta-\tmines", "{ n\tt i:\th I s\tt V\tm V n z");
result.add("an-\tti-\tknock", "{ n\tt i:\tn Q k");
result.add("an-\tti-\tlock", "{ n\tt i:\tl Q k");
result.add("an-\tti-\tmis-\tsile", "{ n\tt aI\tm I\ts V l");
result.add("an-\tti-\to-\txi-\tdant", "{ n\tt i:\tQ k\ts I\td e n t");
result.add("an-\tti-\to-\txi-\tdants", "{ n\tt i:\tQ k\ts I\td e n t s");
result.add("an-\tti-\toch", "{ n\tt i:\tQ k");
result.add("an-\tti-\tpa-\tthies", "{ n\tt I\tp V\tT i: z");
result.add("an-\tti-\tpa-\tthy", "{ n\tt I\tp V\tT i:");
result.add("an-\tti-\tphon", "{ n\tt I\tf Q n");
result.add("an-\tti-\tphons", "{ n\tt I\tf Q n z");
result.add("an-\tti-\tpo-\tdal", "{ n\tt I\tp V\td V l");
result.add("an-\tti-\tpo-\tver-\tty", "{ n\tt aI\tp Q\tv @r\tt i:");
result.add("an-\tti-\tqua-\tted", "{ n\tt I k\tw eI\tt I d");
result.add("an-\tti-\tquate", "{ n\tt I k\tw eI t");
result.add("an-\tti-\tqui-\tties", "{ n\tt I k\tw I\tt i: z");
result.add("an-\tti-\tqui-\tty", "{ n\tt I k\tw I\tt i:");
result.add("an-\tti-\tre-\tfor-\tmer", "{ n\tt i:\tr V\tf O@\tm @r");
result.add("an-\tti-\tsmo-\tking", "{ n\tt i: s\tm @U\tk I N");
result.add("an-\tti-\tso-\tcial", "{ n\tt aI\ts @U\tS V l");
result.add("an-\tti-\tsub-\tma-\trine", "{ n\tt aI\ts V b\tm @r\ti: n");
result.add("an-\tti-\ttake-\to-\tver", "{ n\tt i:\tt eI\tk @U\tv @r");
result.add("an-\tti-\ttank", "{ n\tt i:\tt { N k");
result.add("an-\tti-\ttax", "{ n\tt aI\tt { k s");
result.add("an-\tti-\tthe-\tsis", "{ n\tt I\tT V\ts V s");
result.add("an-\tti-\tthe-\tti-\tcal", "{ n\tt I\tT e\tt I\tk V l");
result.add("an-\tti-\ttheft", "{ n\tt aI\tT e f t");
result.add("an-\tti-\tto-\txin", "{ n\tt i:\tt Q k\ts V n");
result.add("an-\tti-\tto-\txins", "{ n\tt i:\tt Q k\ts V n z");
result.add("an-\tti-\ttrust", "{ n\tt aI t\tr V s t");
result.add("an-\tti-\tvi-\tral", "{ n\tt i:\tv aI\tr V l");
result.add("an-\tti-\twar", "{ n\tt aI\tw O@");
result.add("an-\ttic", "{ n\tt I k");
result.add("an-\ttic-\tline", "{ n\tt I k\tl aI n");
result.add("an-\ttic-\trime", "{ n\tt i: k\tr aI m");
result.add("an-\ttics", "{ n\tt I k s");
result.add("an-\ttil-\tles", "{ n\tt I\tl i: z");
result.add("an-\ttique", "{ n\tt i: k");
result.add("an-\ttiques", "{ n\tt i: k s");
result.add("an-\ttis", "{ n\tt aI z");
result.add("an-\tto-\tne", "Q n\tt @U\tn i:");
result.add("an-\tto-\tni", "Q n\tt @U\tn i:");
result.add("an-\tto-\tni-\ta", "{ n\tt @U\tn i:\tV");
result.add("an-\tto-\tni-\to", "{ n\tt @U\tn i:\t@U");
result.add("an-\tto-\tni-\to's", "{ n\tt @U\tn i:\t@U z");
result.add("an-\tto-\tni-\tus", "{ n\tt @U\tn i:\tV s");
result.add("an-\tto-\tnin", "{ n\tt V\tn I n");
result.add("an-\tto-\tno-\tvich", "{ n\tt Q\tn V\tv I tS");
result.add("an-\tto-\tny", "{ n\tt V\tn i:");
result.add("an-\ttoi-\tnette", "{ n\tt w V\tn e t");
result.add("an-\ttoine", "Q n\tt w Q n");
result.add("an-\tton", "{ n\tt O: n");
result.add("an-\ttrim", "{ n\tt r I m");
result.add("an-\tvil", "{ n\tv V l");
result.add("an-\txi-\te-\tties", "{ N\tz aI\tV\tt i: z");
result.add("an-\txi-\te-\tty", "{ N\tz aI\tV\tt i:");
result.add("an-\txious", "{ N\tk S V s");
result.add("an-\txious-\tly", "{ N\tk S V s\tl i:");
result.add("an-\tza", "{ n\tz V");
result.add("an-\tzi-\to", "{ n\tz i:\t@U");
result.add("an-\tzus", "{ n\tz V s");
result.add("and", "{ n d");
result.add("and-\tra-\tda", "Q n\td r Q\td V");
result.add("and-\trade", "{ n\td r eI d");
result.add("and-\trae", "Q n\td r aI");
result.add("and-\tras", "Q n\td r V s");
result.add("and-\tre", "Q n\td r eI");
result.add("and-\tre-\ta", "{ n\td r i:\tV");
result.add("and-\tre-\tas", "Q n\td r eI\tV s");
result.add("and-\tre-\ta's", "{ n\td r i:\tV z");
result.add("and-\tre-\tot-\tti", "Q n\td r i:\tQ\tt i:");
result.add("and-\trea-\tna", "{ n\td r i:\tn V");
result.add("and-\tree", "V n\td r i:");
result.add("and-\trei", "{ n\td r eI");
result.add("and-\trej", "Q n\td r eI");
result.add("and-\tres", "Q n\td r eI z");
result.add("and-\tret-\tti", "{ n\td r e\tt i:");
result.add("and-\trew", "{ n\td r u:");
result.add("and-\trews", "{ n\td r u: z");
result.add("and-\trew's", "{ n\td r u: z");
result.add("and-\trey", "{ n\td r i:");
result.add("and-\tri-\ta", "{ n\td r i:\tV");
result.add("and-\tri-\ta-\tna", "Q n\td r i:\t{\tn V");
result.add("and-\tric", "{ n\td r I k");
result.add("and-\tro-\tgy-\tnous", "{ n\td r O:\tdZ V\tn V s");
result.add("and-\tro-\tme-\tda", "{ n\td r Q\tm V\td V");
result.add("and-\tro-\tpov", "{ n\td r Q\tp Q v");
result.add("and-\troid", "{ n\td r OI d");
result.add("and-\tros", "{ n\td r Q s");
result.add("and-\trus", "{ n\td r V s");
result.add("ands", "{ n d z");
result.add("ang", "{ N");
result.add("ang-\tle-\tton", "{ N\tg V l\tt V n");
result.add("ang-\tler", "{ N\tg l @r");
result.add("ang-\tlers", "{ N\tg l @r z");
result.add("ang-\tles", "{ N\tg V l z");
result.add("ang-\tli-\ta", "{ N\tg l i:\tV");
result.add("ang-\tli-\tcan", "{ N\tg l I\tk V n");
result.add("ang-\tli-\tcize", "{ N\tl I\ts aI z");
result.add("ang-\tli-\tcized", "{ N\tl I\ts aI z d");
result.add("ang-\tlim", "{ N\tg l I m");
result.add("ang-\tling", "{ N\tg l I N");
result.add("ang-\tlo", "{ N\tg l @U");
result.add("ang-\tlo-\tca-\ttho-\tli-\tci-\tsm", "{ N\tg l @U\tk V\tT O:\tl V\ts I\tz V m");
result.add("ang-\tlos", "{ N\tg l @U z");
result.add("ang-\to-\tla", "{ N\tg @U\tl V");
result.add("ang-\to-\tlan", "{ N\tg @U\tl V n");
result.add("ang-\to-\tlans", "{ N\tg @U\tl V n z");
result.add("ang-\to-\tla's", "{ N\tg @U\tl V z");
result.add("ang-\to-\tra", "{ N\tg O@\tV");
result.add("ang-\to-\tras", "{ N\tg O@\tV z");
result.add("ang-\tri-\ter", "{ N\tg r i:\t@r");
result.add("ang-\tri-\test", "{ N\tg r i:\tV s t");
result.add("ang-\tri-\tly", "{ N\tg r I\tl i:");
result.add("ang-\try", "{ N\tg r i:");
result.add("ange", "eI n dZ");
result.add("angst", "Q N k s t");
result.add("angst-\trom", "{ N\ts t r V m");
result.add("angst-\troms", "{ N\ts t r V m z");
result.add("ank-\tney", "{ N\tk n i:");
result.add("ann", "{ n");
result.add("anne", "{ n");
result.add("anne's", "{ n z");
result.add("ann's", "{ n z");
result.add("ans-\than", "{ n\tS V n");
result.add("ans-\tley", "{ n\ts l i:");
result.add("ans-\ttice", "Q n\ts t I s");
result.add("ans-\twe-\tra-\tble", "{ n\ts @r\tV\tb V l");
result.add("ans-\twer", "{ n\ts @r");
result.add("ans-\twer's", "{ n\ts @r z");
result.add("ansch-\tluss", "{ n\tS l V s");
result.add("anse", "{ n s");
result.add("ant", "{ n t");
result.add("ant-\tler", "{ n\tt l @r");
result.add("ant-\tlered", "{ n\tt l @r d");
result.add("ant-\tlers", "{ n\tt l @r z");
result.add("ant-\tsy", "{ n\tt s i:");
result.add("ant-\twerp", "{ n\tt w @r p");
result.add("anth-\trax", "{ n\tT r { k s");
result.add("ants", "{ n t s");
result.add("ao-\ti", "aU\ti:");
result.add("ap-\tfel", "{ p\tf V l");
result.add("ap-\tgar", "{ p\tg @r");
result.add("ap-\tlen-\tty", "V p\tl e n\tt i:");
result.add("ap-\tlomb", "V p\tl Q m");
result.add("ap-\tne-\ta", "{ p\tn i:\tV");
result.add("ap-\tp-\tling", "{\tp V\tl I N");
result.add("ap-\tpa-\tla-\tchi-\ta", "{\tp V\tl {\ttS i:\tV");
result.add("ap-\tpa-\tla-\tchian", "{\tp V\tl eI\ttS V n");
result.add("ap-\tpa-\tla-\tchians", "{\tp V\tl eI\ttS V n z");
result.add("ap-\tpa-\tra-\ttchik", "{\tp @r\t{\ttS I k");
result.add("ap-\tpa-\tra-\ttchiks", "{\tp @r\t{\ttS I k s");
result.add("ap-\tpa-\tra-\ttu-\tses", "{\tp @r\t{\tt V\ts V z");
result.add("ap-\tpa-\tra-\ttus", "{\tp @r\t{\tt V s");
result.add("ap-\tpa-\trel", "V\tp e@\tV l");
result.add("ap-\tpa-\trent", "V\tp e@\tV n t");
result.add("ap-\tpa-\trent-\tly", "V\tp e@\tV n\tt l i:");
result.add("ap-\tpa-\tri-\ttion", "{\tp @r\tI\tS V n");
result.add("ap-\tpa-\tri-\ttions", "{\tp @r\tI\tS V n z");
result.add("ap-\tpal-\tling", "V\tp O:\tl I N");
result.add("ap-\tpal-\tling-\tly", "V\tp O:\tl I N\tl i:");
result.add("ap-\tpall", "V\tp O: l");
result.add("ap-\tpalled", "V\tp O: l d");
result.add("ap-\tpalls", "V\tp O: l z");
result.add("ap-\tpe-\tti-\tzer", "{\tp V\tt aI\tz @r");
result.add("ap-\tpe-\tti-\tzers", "{\tp V\tt aI\tz @r z");
result.add("ap-\tpe-\tti-\tzing", "{\tp V\tt aI\tz I N");
result.add("ap-\tpe-\ttite", "{\tp V\tt aI t");
result.add("ap-\tpe-\ttites", "{\tp V\tt aI t s");
result.add("ap-\tpea-\tla-\tble", "V\tp i:\tl V\tb V l");
result.add("ap-\tpea-\tling", "V\tp i:\tl I N");
result.add("ap-\tpea-\tling-\tly", "V\tp i:\tl I N\tl i:");
result.add("ap-\tpea-\tran-\tces", "V\tp I@\tV n\ts V z");
result.add("ap-\tpea-\trance", "V\tp I@\tV n s");
result.add("ap-\tpea-\tring", "V\tp I@\tI N");
result.add("ap-\tpea-\tsing", "V\tp i:\tz I N");
result.add("ap-\tpeal", "V\tp i: l");
result.add("ap-\tpealed", "V\tp i: l d");
result.add("ap-\tpeals", "V\tp i: l z");
result.add("ap-\tpear", "V\tp I@");
result.add("ap-\tpeared", "V\tp I@ d");
result.add("ap-\tpears", "V\tp I@ z");
result.add("ap-\tpease", "V\tp i: z");
result.add("ap-\tpease-\tment", "V\tp i: z\tm V n t");
result.add("ap-\tpeased", "V\tp i: z d");
result.add("ap-\tpel", "{\tp V l");
result.add("ap-\tpel-\tla-\ttion", "{\tp V\tl eI\tS V n");
result.add("ap-\tpel-\tla-\ttions", "{\tp V\tl eI\tS V n z");
result.add("ap-\tpel-\tlate", "V\tp e\tl V t");
result.add("ap-\tpen-\tda-\tges", "V\tp e n\td I\tdZ V z");
result.add("ap-\tpen-\tdage", "V\tp e n\td I dZ");
result.add("ap-\tpen-\tdec-\tto-\tmies", "{\tp V n\td e k\tt V\tm i: z");
result.add("ap-\tpen-\tdec-\tto-\tmy", "{\tp V n\td e k\tt V\tm i:");
result.add("ap-\tpen-\tded", "V\tp e n\td V d");
result.add("ap-\tpen-\tdi-\txes", "V\tp e n\td I k\ts V z");
result.add("ap-\tpen-\tdix", "V\tp e n\td I k s");
result.add("ap-\tpend", "V\tp e n d");
result.add("ap-\tpert", "{\tp @r t");
result.add("ap-\tpi-\ta", "{\tp i:\tV");
result.add("ap-\tpi-\tan", "{\tp i:\tV n");
result.add("ap-\tple", "{\tp V l");
result.add("ap-\tpoin-\tted", "V\tp OI n\tt V d");
result.add("ap-\tpoin-\ttee", "V\tp OI n\tt i:");
result.add("ap-\tpoin-\ttees", "V\tp OI n\tt i: z");
result.add("ap-\tpoin-\tting", "V\tp OI n\tt I N");
result.add("ap-\tpoin-\ttive", "V\tp OI n\tt I v");
result.add("ap-\tpoint", "V\tp OI n t");
result.add("ap-\tpoint-\tment", "V\tp OI n\tt m V n t");
result.add("ap-\tpoint-\tments", "V\tp OI n\tt m V n t s");
result.add("ap-\tpoints", "V\tp OI n t s");
result.add("ap-\tpor-\ttio-\tning", "V\tp O@\tS V\tn I N");
result.add("ap-\tpor-\ttion", "V\tp O@\tS V n");
result.add("ap-\tpor-\ttion-\tment", "V\tp O@\tS V n\tm V n t");
result.add("ap-\tpor-\ttioned", "V\tp O@\tS V n d");
result.add("ap-\tpro-\tpri-\ta-\tting", "V p\tr @U p\tr i:\teI\tt I N");
result.add("ap-\tpro-\tpri-\ta-\ttion", "V p\tr @U p\tr i:\teI\tS V n");
result.add("ap-\tpro-\tpri-\ta-\ttions", "V p\tr @U p\tr i:\teI\tS V n z");
result.add("ap-\tpro-\tpri-\ta-\ttor", "V p\tr @U p\tr i:\teI\tt @r");
result.add("ap-\tpro-\tpri-\ta-\ttors", "V p\tr @U p\tr i:\teI\tt @r z");
result.add("ap-\tpro-\tpri-\tate-\tly", "V p\tr @U p\tr i:\tV t\tl i:");
result.add("ap-\tpro-\tpri-\tate-\tness", "V p\tr @U p\tr i:\tV t\tn V s");
result.add("ap-\tpro-\tpri-\tates", "V p\tr @U p\tr i:\teI t s");
result.add("ap-\tpro-\tva-\tble", "V p\tr u:\tv V\tb V l");
result.add("ap-\tpro-\tval", "V p\tr u:\tv V l");
result.add("ap-\tpro-\tvals", "V p\tr u:\tv V l z");
result.add("ap-\tpro-\tving", "V p\tr u:\tv I N");
result.add("ap-\tpro-\tving-\tly", "V p\tr u:\tv I N\tl i:");
result.add("ap-\tpro-\txi-\tma-\tted", "V p\tr Q k\ts V\tm eI\tt V d");
result.add("ap-\tpro-\txi-\tma-\tting", "V p\tr Q k\ts V\tm eI\tt I N");
result.add("ap-\tpro-\txi-\tma-\ttion", "V p\tr Q k\ts V\tm eI\tS V n");
result.add("ap-\tpro-\txi-\tma-\ttions", "V p\tr Q k\ts V\tm eI\tS V n z");
result.add("ap-\tpro-\txi-\tmate", "V p\tr Q k\ts V\tm V t");
result.add("ap-\tpro-\txi-\tmate-\tly", "V p\tr Q k\ts V\tm V t\tl i:");
result.add("ap-\tpro-\txi-\tmates", "V p\tr Q k\ts V\tm V t s");
result.add("ap-\tprove", "V p\tr u: v");
result.add("ap-\tproved", "V p\tr u: v d");
result.add("ap-\tproves", "V p\tr u: v z");
result.add("ap-\tra", "eI p\tr V");
result.add("ap-\tri-\tcot", "eI p\tr I\tk Q t");
result.add("ap-\tri-\tcots", "{ p\tr I\tk Q t s");
result.add("ap-\tril", "eI p\tr I l");
result.add("ap-\trile", "Q p\tr I l");
result.add("ap-\tril's", "eI p\tr I l z");
result.add("ap-\tro-\tpos", "{ p\tr V\tp @U");
result.add("ap-\tron", "eI p\tr V n");
result.add("ap-\trons", "eI p\tr V n z");
result.add("ap-\tso", "{ p\ts @U");
result.add("ap-\tter", "{ p\tt @r");
result.add("ap-\tti-\ttude", "{ p\tt I\tt u: d");
result.add("ap-\tti-\ttudes", "{ p\tt I\tt u: d z");
result.add("ape", "eI p");
result.add("ape-\tlike", "eI p\tl aI k");
result.add("apes", "eI p s");
result.add("aph-\tro-\tdi-\tsi-\tac", "{ f\tr @U\td i:\tz i:\t{ k");
result.add("aph-\tro-\tdi-\tte", "{ f\tr V\td aI\tt i:");
result.add("aph-\tro-\tdi-\ttes", "{ f\tr V\td aI\tt i: z");
result.add("aph-\tro-\tdi-\tte's", "{ f\tr V\td aI\tt i: z");
result.add("app", "{ p");
result.add("app-\tlau-\tded", "V p\tl O:\td V d");
result.add("app-\tlau-\tding", "V p\tl O:\td I N");
result.add("app-\tlaud", "V p\tl O: d");
result.add("app-\tlauds", "V p\tl O: d z");
result.add("app-\tlause", "V p\tl O: z");
result.add("app-\tlied", "V p\tl aI d");
result.add("app-\tlies", "V p\tl aI z");
result.add("app-\tly", "V p\tl aI");
result.add("app-\tly-\ting", "V p\tl aI\tI N");
result.add("app-\trai-\tsal", "V p\tr eI\tz V l");
result.add("app-\trai-\tsals", "V p\tr eI\tz V l z");
result.add("app-\trai-\tser", "V p\tr eI\tz @r");
result.add("app-\trai-\tsers", "V p\tr eI\tz @r z");
result.add("app-\trai-\tses", "V p\tr eI\tz V z");
result.add("app-\trai-\tsing", "V p\tr eI\tz I N");
result.add("app-\traise", "V p\tr eI z");
result.add("app-\traised", "V p\tr eI z d");
result.add("app-\tre-\tci-\ta-\tted", "V p\tr i:\tS i:\teI\tt V d");
result.add("app-\tre-\tci-\ta-\tting", "V p\tr i:\tS i:\teI\tt I N");
result.add("app-\tre-\tci-\ta-\ttion", "V p\tr i:\tS i:\teI\tS V n");
result.add("app-\tre-\tci-\ta-\ttive", "V p\tr i:\tS i:\teI\tt I v");
result.add("app-\tre-\tci-\ta-\ttive-\tly", "V p\tr i:\tS i:\teI\tt I v\tl i:");
result.add("app-\tre-\tci-\tate", "V p\tr i:\tS i:\teI t");
result.add("app-\tre-\tci-\tates", "V p\tr i:\tS i:\teI t s");
result.add("app-\tre-\tcia-\tble", "V p\tr i:\tS V\tb V l");
result.add("app-\tre-\tciab-\tly", "V p\tr i:\tS V b\tl i:");
result.add("app-\tre-\then-\tded", "{ p\tr V\th e n\td V d");
result.add("app-\tre-\then-\tding", "{ p\tr V\th e n\td I N");
result.add("app-\tre-\then-\tsion", "{ p\tr V\th e n\tS V n");
result.add("app-\tre-\then-\tsions", "{ p\tr V\th e n\tS V n z");
result.add("app-\tre-\then-\tsive", "{ p\tr V\th e n\ts I v");
result.add("app-\tre-\thend", "{ p\tr V\th e n d");
result.add("app-\tren-\tti-\tces", "V p\tr e n\tt V\ts V z");
result.add("app-\tren-\ttice", "V p\tr e n\tt V s");
result.add("app-\tren-\ttice-\tship", "V p\tr e n\tt V s\tS I p");
result.add("app-\tren-\ttice-\tships", "V p\tr e n\tt V s\tS I p s");
result.add("app-\tren-\tticed", "V p\tr e n\tt V s t");
result.add("app-\trise", "V p\tr aI z");
result.add("app-\trised", "V p\tr aI z d");
result.add("app-\tro-\tba-\ttion", "{ p\tr V\tb eI\tS V n");
result.add("app-\tro-\tpri-\ta-\tted", "V p\tr @U p\tr i:\teI\tt V d");
result.add("app-\tro-\tpri-\tate", "V p\tr @U p\tr i:\tV t");
result.add("app-\troa-\tcha-\tble", "V p\tr @U\ttS V\tb V l");
result.add("app-\troa-\tches", "V p\tr @U\ttS V z");
result.add("app-\troa-\tching", "V p\tr @U\ttS I N");
result.add("app-\troach", "V p\tr @U tS");
result.add("app-\troached", "V p\tr @U tS t");
result.add("apps", "{ p s");
result.add("apt", "{ p t");
result.add("apt-\tly", "{ p\tt l i:");
result.add("ar", "Q@");
result.add("ar-\tba", "Q@\tb V");
result.add("ar-\tbi-\tter", "Q@\tb I\tt @r");
result.add("ar-\tbi-\tters", "Q@\tb I\tt @r z");
result.add("ar-\tbit-\tra-\tger", "Q@\tb I t\tr Q\tZ @r");
result.add("ar-\tbit-\tra-\tgers", "Q@\tb I t\tr Q\tZ @r z");
result.add("ar-\tbit-\tra-\tgeur", "Q@\tb I t\tr Q\tZ @r");
result.add("ar-\tbit-\tra-\tgeurs", "Q@\tb I t\tr Q\tZ @r z");
result.add("ar-\tbit-\tra-\tging", "Q@\tb I t\tr Q\tdZ I N");
result.add("ar-\tbit-\tra-\tri-\tly", "Q@\tb I t\tr e@\tV\tl i:");
result.add("ar-\tbit-\tra-\tri-\tness", "Q@\tb I t\tr e@\ti:\tn V s");
result.add("ar-\tbit-\tra-\try", "Q@\tb I t\tr e@\ti:");
result.add("ar-\tbit-\tra-\tted", "Q@\tb I t\tr eI\tt V d");
result.add("ar-\tbit-\tra-\tting", "Q@\tb I t\tr eI\tt I N");
result.add("ar-\tbit-\tra-\ttion", "Q@\tb I t\tr eI\tS V n");
result.add("ar-\tbit-\tra-\ttions", "Q@\tb I t\tr eI\tS V n z");
result.add("ar-\tbit-\tra-\ttor", "Q@\tb I t\tr eI\tt @r");
result.add("ar-\tbit-\tra-\ttors", "Q@\tb I t\tr eI\tt @r z");
result.add("ar-\tbit-\tra-\ttor's", "Q@\tb I t\tr eI\tt @r z");
result.add("ar-\tbit-\trage", "Q@\tb I t\tr Q Z");
result.add("ar-\tbit-\trate", "Q@\tb I t\tr eI t");
result.add("ar-\tbit-\trates", "Q@\tb I t\tr eI t s");
result.add("ar-\tbit-\tron", "Q@\tb I t\tr Q n");
result.add("ar-\tbo-\tre-\tal", "Q@\tb O@\ti:\tV l");
result.add("ar-\tbo-\tre-\ttum", "Q@\tb @r\ti:\tt V m");
result.add("ar-\tbor", "Q@\tb @r");
result.add("ar-\tbour", "Q@\tb @r");
result.add("ar-\tbu-\tckle", "Q@\tb V\tk V l");
result.add("ar-\tbuth-\tnot", "Q@\tb V T\tn V t");
result.add("ar-\tca-\tdi-\ta", "Q@\tk eI\td i:\tV");
result.add("ar-\tca-\tdi-\tan", "Q@\tk eI\td i:\tV n");
result.add("ar-\tca-\tdi-\tans", "Q@\tk eI\td i:\tV n z");
result.add("ar-\tca-\tna", "Q@\tk {\tn V");
result.add("ar-\tca-\tnum", "Q@\tk V\tn V m");
result.add("ar-\tca-\tnum's", "Q@\tk V\tn V m z");
result.add("ar-\tca-\tro", "Q@\tk Q@\t@U");
result.add("ar-\tca-\tta", "Q@\tk Q\tt V");
result.add("ar-\tcade", "Q@\tk eI d");
result.add("ar-\tcades", "Q@\tk eI d z");
result.add("ar-\tcane", "Q@\tk eI n");
result.add("ar-\tcha-\tic", "Q@\tk eI\tI k");
result.add("ar-\tchae-\to-\tlo-\tgi-\tcal", "Q@\tk i:\tV\tl Q\tdZ I\tk V l");
result.add("ar-\tchae-\to-\tlo-\tgist", "Q@\tk i:\tQ\tl V\tdZ V s t");
result.add("ar-\tchae-\to-\tlo-\tgists", "Q@\tk i:\tQ\tl V\tdZ V s t s");
result.add("ar-\tchae-\to-\tlo-\tgy", "Q@\tk i:\tQ\tl V\tdZ i:");
result.add("ar-\tcham-\tbault", "Q@\tS V m\tb @U");
result.add("ar-\tchan-\tgel", "Q@\tk eI n\tdZ V l");
result.add("ar-\tchan-\tgels", "Q@\tk eI n\tdZ V l z");
result.add("ar-\tche-\tne-\tmy", "Q@\ttS e\tn V\tm i:");
result.add("ar-\tche-\to-\tlo-\tgi-\tcal", "Q@\tk i:\tV\tl Q\tdZ I\tk V l");
result.add("ar-\tche-\to-\tlo-\tgy", "Q@\tk i:\tQ\tl V\tdZ i:");
result.add("ar-\tche-\try", "Q@\ttS @r\ti:");
result.add("ar-\tche-\ttype", "Q@\tk V\tt aI p");
result.add("ar-\tche-\ttypes", "Q@\tk V\tt aI p s");
result.add("ar-\tcher", "Q@\ttS @r");
result.add("ar-\tcher's", "Q@\ttS @r z");
result.add("ar-\tches", "Q@\ttS V z");
result.add("ar-\tchi-\tbald", "Q@\ttS I\tb O: l d");
result.add("ar-\tchi-\tme-\tdes", "Q@\tk I\tm i:\td i: z");
result.add("ar-\tchi-\tpe-\tla-\tgo", "Q@\tk I\tp e\tl V\tg @U");
result.add("ar-\tchi-\ttec-\ttu-\tral", "Q@\tk I\tt e k\ttS @r\tV l");
result.add("ar-\tchi-\ttec-\ttu-\tral-\tly", "Q@\tk I\tt e k\ttS @r\tV\tl i:");
result.add("ar-\tchi-\ttec-\tture", "Q@\tk I\tt e k\ttS @r");
result.add("ar-\tchi-\ttec-\ttures", "Q@\tk I\tt e k\ttS @r z");
result.add("ar-\tchi-\ttect", "Q@\tk I\tt e k t");
result.add("ar-\tchi-\ttects", "Q@\tk I\tt e k t s");
result.add("ar-\tchi-\ttect's", "Q@\tk I\tt e k t s");
result.add("ar-\tchi-\ttrave", "Q@\tk I t\tr eI v");
result.add("ar-\tchi-\ttraves", "Q@\tk I t\tr eI v z");
result.add("ar-\tchi-\tval", "Q@\tk aI\tv V l");
result.add("ar-\tchi-\tvist", "Q@\tk I\tv I s t");
result.add("ar-\tchi-\tvists", "Q@\tk I\tv I s t s");
result.add("ar-\tchie", "Q@\ttS i:");
result.add("ar-\tching", "Q@\ttS I N");
result.add("ar-\tchive", "Q@\tk aI v");
result.add("ar-\tchives", "Q@\tk aI v z");
result.add("ar-\tco", "Q@\tk @U");
result.add("ar-\tco-\tla", "Q@\tk @U\tl V");
result.add("ar-\tcos", "Q@\tk @U z");
result.add("ar-\tco's", "Q@\tk @U z");
result.add("ar-\tda", "Q@\td V");
result.add("ar-\tdath", "Q@\td V T");
result.add("ar-\tde-\tli-\ta", "Q@\td e\tl i:\tV");
result.add("ar-\tdeen", "Q@\td i: n");
result.add("ar-\tdel-\tla", "Q@\td e\tl V");
result.add("ar-\tdelle", "Q@\td e l");
result.add("ar-\tden", "Q@\td V n");
result.add("ar-\tdene", "Q@\td i: n");
result.add("ar-\tden's", "Q@\td V n z");
result.add("ar-\tdent", "Q@\td V n t");
result.add("ar-\tdent-\tly", "Q@\td V n\tt l i:");
result.add("ar-\tdi-\tne", "Q@\td i:\tn i:");
result.add("ar-\tdi-\tto", "Q@\td i:\tt @U");
result.add("ar-\tdin", "Q@\td I n");
result.add("ar-\tdis", "Q@\td I s");
result.add("ar-\tdith", "Q@\td I T");
result.add("ar-\tdo-\tli-\tno", "Q@\td @U\tl i:\tn @U");
result.add("ar-\tdor", "Q@\td @r");
result.add("ar-\tdu-\tous", "Q@\tdZ u:\tV s");
result.add("ar-\tgall", "Q@\tg V l");
result.add("ar-\tgen-\tta", "Q@\tdZ e n\tt V");
result.add("ar-\tgen-\tti-\tna", "Q@\tdZ V n\tt i:\tn V");
result.add("ar-\tgen-\tti-\tna's", "Q@\tdZ V n\tt i:\tn V z");
result.add("ar-\tgen-\tti-\tni-\tan", "Q@\tdZ V n\tt I\tn i:\tV n");
result.add("ar-\tgen-\tti-\tni-\tans", "Q@\tdZ V n\tt I\tn i:\tV n z");
result.add("ar-\tgen-\ttine", "Q@\tdZ V n\tt i: n");
result.add("ar-\tgen-\ttines", "Q@\tdZ V n\tt i: n z");
result.add("ar-\tgent", "Q@\tdZ V n t");
result.add("ar-\tgo", "Q@\tg @U");
result.add("ar-\tgo-\tnaut", "Q@\tg V\tn O: t");
result.add("ar-\tgo-\tnauts", "Q@\tg V\tn O: t s");
result.add("ar-\tgo-\tnaut's", "Q@\tg V\tn O: t s");
result.add("ar-\tgo-\tsy", "Q@\tg V\ts i:");
result.add("ar-\tgon", "Q@\tg Q n");
result.add("ar-\tgonne", "Q@\tg Q n");
result.add("ar-\tgo's", "Q@\tg @U z");
result.add("ar-\tgot", "Q@\tg V t");
result.add("ar-\tgu-\ta-\tble", "Q@ g\tj u:\tV\tb V l");
result.add("ar-\tgu-\tab-\tly", "Q@ g\tj u:\tV b\tl i:");
result.add("ar-\tgu-\ting", "Q@ g\tj u:\tI N");
result.add("ar-\tgu-\tmen-\tta-\ttion", "Q@ g\tj V\tm e n\tt eI\tS V n");
result.add("ar-\tgu-\tmen-\tta-\ttive", "Q@ g\tj V\tm e n\tt V\tt I v");
result.add("ar-\tgu-\tment", "Q@ g\tj V\tm V n t");
result.add("ar-\tgu-\tments", "Q@ g\tj V\tm V n t s");
result.add("ar-\tgu-\tment's", "Q@ g\tj V\tm V n t s");
result.add("ar-\tgue", "Q@ g\tj u:");
result.add("ar-\tgued", "Q@ g\tj u: d");
result.add("ar-\tgues", "Q@ g\tj u: z");
result.add("ar-\tgus", "Q@\tg V s");
result.add("ar-\tgyle", "Q@\tg aI l");
result.add("ar-\tgyll", "Q@\tg aI l");
result.add("ar-\tka-\tdel-\tphi-\ta", "Q@\tk V\td e l\tf i:\tV");
result.add("ar-\tkan-\tsan", "Q@\tk { n\tz V n");
result.add("ar-\tkan-\tsans", "Q@\tk { n\tz V n z");
result.add("ar-\tkan-\tsas", "Q@\tk V n\ts Q");
result.add("ar-\tkan-\tsas's", "Q@\tk V n\ts Q z");
result.add("ar-\tkose", "Q@\tk @U s");
result.add("ar-\tla-\tna", "Q@\tl {\tn V");
result.add("ar-\tle-\tna", "Q@\tl e\tn V");
result.add("ar-\tle-\tta", "Q@\tl e\tt V");
result.add("ar-\tleen", "Q@\tl i: n");
result.add("ar-\tlen", "Q@\tl V n");
result.add("ar-\tlene", "Q@\tl i: n");
result.add("ar-\tlene's", "Q@\tl i: n z");
result.add("ar-\tlette", "Q@\tl e t");
result.add("ar-\tley", "Q@\tl i:");
result.add("ar-\tlie", "Q@\tl i:");
result.add("ar-\tlin", "Q@\tl I n");
result.add("ar-\tlin-\tda", "Q@\tl I n\td V");
result.add("ar-\tline", "Q@\tl aI n");
result.add("ar-\tling-\tton", "Q@\tl I N\tt V n");
result.add("ar-\tling-\tton's", "Q@\tl I N\tt V n z");
result.add("ar-\tlyne", "Q@\tl aI n");
result.add("ar-\tma-\tda", "Q@\tm Q\td V");
result.add("ar-\tma-\tdil-\tlo", "Q@\tm V\td I\tl @U");
result.add("ar-\tma-\tdil-\tlos", "Q@\tm V\td I\tl @U z");
result.add("ar-\tma-\tged-\tdon", "Q@\tm V\tg e\td V n");
result.add("ar-\tma-\tment", "Q@\tm V\tm V n t");
result.add("ar-\tma-\tments", "Q@\tm V\tm V n t s");
result.add("ar-\tma-\tni", "Q@\tm Q\tn i:");
result.add("ar-\tman", "Q@\tm V n");
result.add("ar-\tman-\tdo", "Q@\tm Q n\td @U");
result.add("ar-\tmand", "Q@\tm V n d");
result.add("ar-\tme-\tni-\ta", "Q@\tm i:\tn i:\tV");
result.add("ar-\tme-\tni-\tan", "Q@\tm i:\tn i:\tV n");
result.add("ar-\tme-\tni-\tans", "Q@\tm i:\tn i:\tV n z");
result.add("ar-\tme-\tni-\ta's", "Q@\tm i:\tn i:\tV z");
result.add("ar-\tmen", "Q@\tm V n");
result.add("ar-\tmer", "Q@\tm @r");
result.add("ar-\tmi-\tda", "Q@\tm i:\td V");
result.add("ar-\tmi-\tger", "Q@\tm I\tg @r");
result.add("ar-\tmi-\tna", "Q@\tm i:\tn V");
result.add("ar-\tmi-\tne", "Q@\tm i:\tn i:");
result.add("ar-\tmi-\ttage", "Q@\tm I\tt I dZ");
result.add("ar-\tmies", "Q@\tm i: z");
result.add("ar-\tmil-\tla", "Q@\tm I\tl V");
result.add("ar-\tmin", "Q@\tm I n");
result.add("ar-\tming", "Q@\tm I N");
result.add("ar-\tming-\tton", "Q@\tm I N\tt V n");
result.add("ar-\tmis-\ttice", "Q@\tm I s\tt I s");
result.add("ar-\tmo-\tries", "Q@\tm @r\ti: z");
result.add("ar-\tmo-\try", "Q@\tm @r\ti:");
result.add("ar-\tmond", "Q@\tm V n d");
result.add("ar-\tmonk", "Q@\tm V N k");
result.add("ar-\tmor", "Q@\tm @r");
result.add("ar-\tmored", "Q@\tm @r d");
result.add("ar-\tmour", "Q@\tm @r");
result.add("ar-\tmy", "Q@\tm i:");
result.add("ar-\tmy's", "Q@\tm i: z");
result.add("ar-\tnal-\tdo", "Q@\tn Q l\td @U");
result.add("ar-\tnaud", "Q@\tn @U");
result.add("ar-\tnelle", "Q@\tn e l");
result.add("ar-\tnelle's", "Q@\tn e l z");
result.add("ar-\tnett", "Q@\tn e t");
result.add("ar-\tney", "Q@\tn i:");
result.add("ar-\tnie", "Q@\tn i:");
result.add("ar-\tno", "Q@\tn @U");
result.add("ar-\tnold", "Q@\tn V l d");
result.add("ar-\tnold's", "Q@\tn V l d z");
result.add("ar-\tnot", "Q@\tn V t");
result.add("ar-\tnul-\tfo", "Q@\tn V l\tf @U");
result.add("ar-\tpa", "Q@\tp V");
result.add("ar-\tpa-\tnet", "Q@\tp V\tn e t");
result.add("ar-\tpin", "Q@\tp I n");
result.add("ar-\traign", "@r\teI n");
result.add("ar-\traign-\tment", "@r\teI n\tm V n t");
result.add("ar-\traign-\tments", "@r\teI n\tm V n t s");
result.add("ar-\traigned", "@r\teI n d");
result.add("ar-\tran-\tger", "@r\teI n\tdZ @r");
result.add("ar-\tran-\tges", "@r\teI n\tdZ V z");
result.add("ar-\tran-\tging", "@r\teI n\tdZ I N");
result.add("ar-\trange", "@r\teI n dZ");
result.add("ar-\trange-\tment", "@r\teI n\tdZ m V n t");
result.add("ar-\trange-\tments", "@r\teI n\tdZ m V n t s");
result.add("ar-\tranged", "@r\teI n dZ d");
result.add("ar-\tray", "@r\teI");
result.add("ar-\trayed", "@r\teI d");
result.add("ar-\trays", "@r\teI z");
result.add("ar-\trea-\tra-\tges", "@r\tI@\tI\tdZ V z");
result.add("ar-\trea-\trage", "@r\ti:\tr I dZ");
result.add("ar-\trears", "@r\tI@ z");
result.add("ar-\tres-\tted", "@r\te s\tt V d");
result.add("ar-\tres-\tting", "@r\te s\tt I N");
result.add("ar-\trest", "@r\te s t");
result.add("ar-\trests", "@r\te s t s");
result.add("ar-\trhyth-\tmi-\ta", "@r\tI D\tm i:\tV");
result.add("ar-\trhyth-\tmi-\tas", "@r\tI D\tm i:\tV z");
result.add("ar-\tri-\tgo", "Q@\ti:\tg @U");
result.add("ar-\tri-\tval", "@r\taI\tv V l");
result.add("ar-\tri-\tvals", "@r\taI\tv V l z");
result.add("ar-\tri-\tving", "@r\taI\tv I N");
result.add("ar-\tring-\tton", "e@\tI N\tt V n");
result.add("ar-\tris", "{\tr I s");
result.add("ar-\trive", "@r\taI v");
result.add("ar-\trived", "@r\taI v d");
result.add("ar-\trives", "@r\taI v z");
result.add("ar-\tro-\tgance", "e@\tV\tg V n s");
result.add("ar-\tro-\tgant", "e@\tV\tg V n t");
result.add("ar-\tro-\tgant-\tly", "e@\tV\tg V n\tt l i:");
result.add("ar-\tro-\tgate", "{\tr @U\tg eI t");
result.add("ar-\tro-\tyo", "@r\tOI\t@U");
result.add("ar-\tro-\tyo's", "@r\tOI\t@U z");
result.add("ar-\trow", "{\tr @U");
result.add("ar-\trow-\thead", "{\tr @U\th e d");
result.add("ar-\trow-\theads", "{\tr @U\th e d z");
result.add("ar-\trow-\troot", "{\tr @U\tr u: t");
result.add("ar-\trows", "{\tr @U z");
result.add("ar-\trow's", "{\tr @U z");
result.add("ar-\trows-\tmith", "{\tr @U s\tm I T");
result.add("ar-\trows-\tmith's", "{\tr @U s\tm I T s");
result.add("ar-\tse-\tnal", "Q@\ts V\tn V l");
result.add("ar-\tse-\tnals", "Q@\ts V\tn V l z");
result.add("ar-\tse-\tnic", "Q@\ts V\tn I k");
result.add("ar-\tse-\tnide", "Q@\ts V\tn aI d");
result.add("ar-\tso-\tnist", "Q@\ts V\tn V s t");
result.add("ar-\tso-\tnists", "Q@\ts V\tn V s t s");
result.add("ar-\tson", "Q@\ts V n");
result.add("ar-\tsons", "Q@\ts V n z");
result.add("ar-\tte-\tmas", "Q@\tt V\tm V z");
result.add("ar-\tte-\tmus", "Q@\tt V\tm V s");
result.add("ar-\tte-\tri-\tal", "Q@\tt I@\ti:\tV l");
result.add("ar-\tte-\tri-\tosc-\tle-\tro-\tsis", "Q@\tt I@\ti:\t@U s\tk l @r\t@U\ts I s");
result.add("ar-\tte-\tries", "Q@\tt @r\ti: z");
result.add("ar-\tte-\try", "Q@\tt @r\ti:");
result.add("ar-\tte-\tsian", "Q@\tt i:\tZ V n");
result.add("ar-\tter", "Q@\tt @r");
result.add("ar-\tthu-\tri-\tan", "Q@\tT U@\ti:\tV n");
result.add("ar-\tthur", "Q@\tT @r");
result.add("ar-\tthur's", "Q@\tT @r z");
result.add("ar-\tti-\tchoke", "Q@\tt I\ttS @U k");
result.add("ar-\tti-\tchokes", "Q@\tt I\ttS @U k s");
result.add("ar-\tti-\tcle", "Q@\tt I\tk V l");
result.add("ar-\tti-\tcles", "Q@\tt I\tk V l z");
result.add("ar-\tti-\tcle's", "Q@\tt I\tk V l z");
result.add("ar-\tti-\tcu-\tla-\tted", "Q@\tt I k\tj V\tl eI\tt V d");
result.add("ar-\tti-\tcu-\tla-\tting", "Q@\tt I k\tj V\tl eI\tt I N");
result.add("ar-\tti-\tcu-\tla-\ttion", "Q@\tt I k\tj V\tl eI\tS V n");
result.add("ar-\tti-\tcu-\tla-\tto-\try", "Q@\tt I k\tj V\tl V\tt O@\ti:");
result.add("ar-\tti-\tcu-\tlate", "Q@\tt I k\tj V\tl eI t");
result.add("ar-\tti-\tcu-\tlates", "Q@\tt I k\tj V\tl V t s");
result.add("ar-\tti-\tfact", "Q@\tt I\tf { k t");
result.add("ar-\tti-\tfacts", "Q@\tt I\tf { k t s");
result.add("ar-\tti-\tfi-\tcial", "Q@\tt I\tf I\tS V l");
result.add("ar-\tti-\tfi-\tcial-\tly", "Q@\tt I\tf I\tS V\tl i:");
result.add("ar-\tti-\tfice", "Q@\tt I\tf I s");
result.add("ar-\tti-\to-\tdac-\ttyl", "Q@\tt i:\t@U\td { k\tt V l");
result.add("ar-\tti-\to-\tdac-\ttyls", "Q@\tt i:\t@U\td { k\tt V l z");
result.add("ar-\tti-\tsan", "Q@\tt I\tz V n");
result.add("ar-\tti-\tsans", "Q@\tt I\tz V n z");
result.add("ar-\ttie", "Q@\tt i:");
result.add("ar-\ttil-\tle-\try", "Q@\tt I\tl @r\ti:");
result.add("ar-\ttis", "Q@\tt I s");
result.add("ar-\ttis-\ttic", "Q@\tt I s\tt I k");
result.add("ar-\ttis-\ttical-\tly", "Q@\tt I s\tt I k\tl i:");
result.add("ar-\ttist", "Q@\tt I s t");
result.add("ar-\ttist-\try", "Q@\tt I s\tt r i:");
result.add("ar-\ttists", "Q@\tt I s t s");
result.add("ar-\ttist's", "Q@\tt I s t s");
result.add("ar-\ttois", "Q@ t\tw Q");
result.add("ar-\ttsy", "Q@ t\ts i:");
result.add("ar-\ttu-\tro", "Q@\tt U@\t@U");
result.add("ar-\ttur", "Q@\tt U@");
result.add("ar-\ttus", "Q@\tt V s");
result.add("ar-\tty", "Q@\tt i:");
result.add("ar-\tty's", "Q@\tt i: z");
result.add("ar-\tva", "Q@\tv V");
result.add("ar-\tvad", "Q@\tv { d");
result.add("ar-\tval", "Q@\tv V l");
result.add("ar-\tvel", "Q@\tv e l");
result.add("ar-\tvi-\tda", "Q@\tv i:\td V");
result.add("ar-\tvi-\tda's", "Q@\tv i:\td V z");
result.add("ar-\tvid", "Q@\tv I d");
result.add("ar-\tvin", "Q@\tv I n");
result.add("ar-\tvind", "Q@\tv I n d");
result.add("ar-\tvin's", "Q@\tv I n z");
result.add("ar-\ty-\tan", "Q@\ti:\tV n");
result.add("arb", "Q@ b");
result.add("arbs", "Q@ b z");
result.add("arc", "Q@ k");
result.add("arc-\ttu-\trus", "Q@ k\tt U@\tV s");
result.add("arce", "Q@ s");
result.add("arch", "Q@ tS");
result.add("arch-\tbi-\tshop", "Q@ tS\tb I\tS V p");
result.add("arch-\tbold", "Q@ tS\tb @U l d");
result.add("arch-\tdi-\to-\tcese", "Q@ tS\td aI\tV\ts V s");
result.add("arch-\tduke", "Q@ tS\td u: k");
result.add("arch-\tly", "Q@ tS\tl i:");
result.add("arch-\tri-\tval", "Q@ tS\tr aI\tv V l");
result.add("arch-\tri-\tvals", "Q@ tS\tr aI\tv V l z");
result.add("arch-\tway", "Q@ tS\tw eI");
result.add("arche-\tty-\tpal", "Q@ k\tt aI\tp V l");
result.add("arched", "Q@ tS t");
result.add("ard", "Q@ d");
result.add("ard-\tmore", "Q@ d\tm O@");
result.add("ard-\tra", "Q@ d\tr V");
result.add("ard-\trey", "Q@ d\tr i:");
result.add("ards-\tley", "Q@ d\tz l i:");
result.add("are", "Q@");
result.add("ares", "Q@ z");
result.add("ark", "Q@ k");
result.add("ark-\twright", "Q@ k\tr aI t");
result.add("arm", "Q@ m");
result.add("arm-\tband", "Q@ m\tb { n d");
result.add("arm-\tbands", "Q@ m\tb { n d z");
result.add("arm-\tbrus-\tter", "Q@ m\tb r V s\tt @r");
result.add("arm-\tbrust", "Q@ m\tb r V s t");
result.add("arm-\tchair", "Q@ m\ttS e@");
result.add("arm-\tchairs", "Q@ m\ttS e@ z");
result.add("arm-\tco", "Q@ m\tk @U");
result.add("arm-\tco's", "Q@ m\tk @U z");
result.add("arm-\tpit", "Q@ m\tp I t");
result.add("arm-\tpits", "Q@ m\tp I t s");
result.add("arm-\trest", "Q@ m\tr e s t");
result.add("arm-\trests", "Q@ m\tr e s t s");
result.add("arm-\tstrong", "Q@ m\ts t r Q N");
result.add("armed", "Q@ m d");
result.add("armes", "Q@ m z");
result.add("arms", "Q@ m z");
result.add("arm's", "Q@ m z");
result.add("arn", "Q@ n");
result.add("arndt", "Q@ n t");
result.add("arne", "Q@ n");
result.add("arnst", "Q@ n s t");
result.add("arp", "Q@ p");
result.add("art", "Q@ t");
result.add("art-\tful", "Q@ t\tf V l");
result.add("art-\tful-\tly", "Q@ t\tf V\tl i:");
result.add("art-\twork", "Q@ t\tw @r k");
result.add("art-\tworks", "Q@ t\tw @r k s");
result.add("arth-\tri-\ttic", "Q@ T\tr I\tt I k");
result.add("arth-\tro-\tpods", "Q@ T\tr V\tp Q d z");
result.add("arts", "Q@ t s");
result.add("art's", "Q@ t s");
result.add("arx", "Q@ k s");
result.add("as", "{ z");
result.add("a's", "eI z");
result.add("as-\tbes-\tto-\tsis", "{ s\tb e s\tt @U\ts I s");
result.add("as-\tbes-\ttos", "{ s\tb e s\tt V s");
result.add("as-\tbu-\try", "{ z\tb e@\ti:");
result.add("as-\tcap", "{ s\tk { p");
result.add("as-\tcen-\tdan-\tcy", "V\ts e n\td V n\ts i:");
result.add("as-\tcen-\tdance", "V\ts e n\td V n s");
result.add("as-\tcen-\tdant", "V\ts e n\td V n t");
result.add("as-\tcen-\tded", "V\ts e n\td V d");
result.add("as-\tcen-\tden-\tcy", "V\ts e n\td V n\ts i:");
result.add("as-\tcen-\tding", "V\ts e n\td I N");
result.add("as-\tcen-\tsion", "V\ts e n\tS V n");
result.add("as-\tcend", "V\ts e n d");
result.add("as-\tcends", "V\ts e n d z");
result.add("as-\tcii", "{ s\tk i:");
result.add("as-\tcor-\tbic", "V s\tk O@\tb I k");
result.add("as-\tcot", "{ s\tk Q t");
result.add("as-\tcribe", "V s\tk r aI b");
result.add("as-\tcribed", "V s\tk r aI b d");
result.add("as-\tcribes", "V s\tk r aI b z");
result.add("as-\tkance", "V s\tk { n s");
result.add("as-\tker", "{ s\tk @r");
result.add("as-\tkers", "{ s\tk @r z");
result.add("as-\tker's", "{ s\tk @r z");
result.add("as-\tkew", "V s\tk j u:");
result.add("as-\tkey", "V s\tk i:");
result.add("as-\tking", "{ s\tk I N");
result.add("as-\tleep", "V s\tl i: p");
result.add("as-\tma-\tra", "{ z\tm Q@\tV");
result.add("as-\tpa-\tra-\tgus", "V s\tp e@\tV\tg V s");
result.add("as-\tpar-\ttame", "{ s\tp @r\tt eI m");
result.add("as-\tpect", "{ s\tp e k t");
result.add("as-\tpects", "{ s\tp e k t s");
result.add("as-\tpen", "{ s\tp V n");
result.add("as-\tpens", "{ s\tp V n z");
result.add("as-\tpen's", "{ s\tp V n z");
result.add("as-\tper", "{ s\tp @r");
result.add("as-\tper-\tsion", "V s\tp @r\tZ V n");
result.add("as-\tper-\tsions", "V s\tp @r\tZ V n z");
result.add("as-\tphalt", "{ s\tf O: l t");
result.add("as-\tpi-\tra-\tted", "{ s\tp I\tr eI\tt I d");
result.add("as-\tpi-\tra-\ttion", "{ s\tp @r\teI\tS V n");
result.add("as-\tpi-\tra-\ttions", "{ s\tp @r\teI\tS V n z");
result.add("as-\tpi-\trant", "{ s\tp @r\tV n t");
result.add("as-\tpi-\trants", "{ s\tp @r\tV n t s");
result.add("as-\tpi-\trate", "{ s\tp I\tr eI t");
result.add("as-\tpi-\trates", "{ s\tp I\tr eI t s");
result.add("as-\tpi-\tres", "V s\tp aI\t@r z");
result.add("as-\tpi-\tring", "V s\tp aI\tr I N");
result.add("as-\tpin-\twall", "{ s\tp I n\tw O: l");
result.add("as-\tpire", "V s\tp aI r");
result.add("as-\tpired", "V s\tp aI r d");
result.add("as-\tquith", "{ s\tk w I T");
result.add("as-\tsad", "V\ts Q d");
result.add("as-\tsad's", "V\ts Q d z");
result.add("as-\tsai-\tlant", "V\ts eI\tl V n t");
result.add("as-\tsai-\tlants", "V\ts eI\tl V n t s");
result.add("as-\tsai-\tlant's", "V\ts eI\tl V n t s");
result.add("as-\tsai-\tling", "V\ts eI\tl I N");
result.add("as-\tsail", "V\ts eI l");
result.add("as-\tsailed", "V\ts eI l d");
result.add("as-\tsails", "V\ts eI l z");
result.add("as-\tsas-\tsi-\tna-\tted", "V\ts {\ts V\tn eI\tt V d");
result.add("as-\tsas-\tsi-\tna-\tting", "V\ts {\ts V\tn eI\tt I N");
result.add("as-\tsas-\tsi-\tna-\ttion", "V\ts {\ts V\tn eI\tS V n");
result.add("as-\tsas-\tsi-\tna-\ttions", "V\ts {\ts V\tn eI\tS V n z");
result.add("as-\tsas-\tsi-\tnate", "V\ts {\ts V\tn eI t");
result.add("as-\tsas-\tsin", "V\ts {\ts V n");
result.add("as-\tsas-\tsins", "V\ts {\ts V n z");
result.add("as-\tsas-\tsin's", "V\ts {\ts V n z");
result.add("as-\tsaul-\tted", "V\ts O: l\tt V d");
result.add("as-\tsaul-\tting", "V\ts O: l\tt I N");
result.add("as-\tsaul-\ttive", "V\ts O: l\tt I v");
result.add("as-\tsault", "V\ts O: l t");
result.add("as-\tsaults", "V\ts O: l t s");
result.add("as-\tsay", "{\ts i:");
result.add("as-\tsay-\ter", "{\ts eI\t@r");
result.add("as-\tsem-\tb-\tling", "V\ts e m\tb V\tl I N");
result.add("as-\tsem-\tble", "V\ts e m\tb V l");
result.add("as-\tsem-\tbled", "V\ts e m\tb V l d");
result.add("as-\tsem-\tbles", "V\ts e m\tb V l z");
result.add("as-\tsemb-\tlage", "V\ts e m\tb l V dZ");
result.add("as-\tsemb-\tler", "V\ts e m\tb l @r");
result.add("as-\tsemb-\tlers", "V\ts e m\tb l @r z");
result.add("as-\tsemb-\tlies", "V\ts e m\tb l i: z");
result.add("as-\tsemb-\tly", "V\ts e m\tb l i:");
result.add("as-\tsemb-\tly-\tman", "V\ts e m\tb l i:\tm { n");
result.add("as-\tsemb-\tly-\tmen", "V\ts e m\tb l i:\tm e n");
result.add("as-\tsemb-\tly-\two-\tman", "V\ts e m\tb l i:\tw U\tm V n");
result.add("as-\tsemb-\tly's", "V\ts e m\tb l i: z");
result.add("as-\tsent", "V\ts e n t");
result.add("as-\tser-\tted", "V\ts @r\tt V d");
result.add("as-\tser-\tted-\tly", "V\ts @r\tt V d\tl i:");
result.add("as-\tser-\tting", "V\ts @r\tt I N");
result.add("as-\tser-\ttion", "V\ts @r\tS V n");
result.add("as-\tser-\ttions", "V\ts @r\tS V n z");
result.add("as-\tser-\ttive", "V\ts @r\tt I v");
result.add("as-\tser-\ttive-\tly", "V\ts @r\tt I v\tl i:");
result.add("as-\tser-\ttive-\tness", "V\ts @r\tt I v\tn V s");
result.add("as-\tsert", "V\ts @r t");
result.add("as-\tserts", "V\ts @r t s");
result.add("as-\tses", "{\ts V z");
result.add("as-\tses-\tses", "V\ts e\ts V z");
result.add("as-\tses-\tsing", "V\ts e\ts I N");
result.add("as-\tses-\tsor", "V\ts e\ts @r");
result.add("as-\tses-\tsors", "V\ts e\ts @r z");
result.add("as-\tsess", "V\ts e s");
result.add("as-\tsess-\tment", "V\ts e s\tm V n t");
result.add("as-\tsess-\tments", "V\ts e s\tm V n t s");
result.add("as-\tsessed", "V\ts e s t");
result.add("as-\tset", "{\ts e t");
result.add("as-\tsets", "{\ts e t s");
result.add("as-\tsi-\tduous", "V\ts I d\tw V s");
result.add("as-\tsi-\tduous-\tly", "V\ts I d\tw V s\tl i:");
result.add("as-\tsi-\tmi-\tla-\tted", "V\ts I\tm V\tl eI\tt V d");
result.add("as-\tsi-\tmi-\tla-\tting", "V\ts I\tm V\tl eI\tt I N");
result.add("as-\tsi-\tmi-\tla-\ttion", "V\ts I\tm V\tl eI\tS V n");
result.add("as-\tsi-\tmi-\tlate", "V\ts I\tm V\tl eI t");
result.add("as-\tsi-\tsi", "V\ts i:\ts i:");
result.add("as-\tsig-\tning", "V\ts aI\tn I N");
result.add("as-\tsign", "V\ts aI n");
result.add("as-\tsign-\tment", "V\ts aI n\tm V n t");
result.add("as-\tsign-\tments", "V\ts aI n\tm V n t s");
result.add("as-\tsign-\tment's", "V\ts aI n\tm V n t s");
result.add("as-\tsigned", "V\ts aI n d");
result.add("as-\tsigns", "V\ts aI n z");
result.add("as-\tsis-\ttance", "V\ts I s\tt V n s");
result.add("as-\tsis-\ttant", "V\ts I s\tt V n t");
result.add("as-\tsis-\ttants", "V\ts I s\tt V n t s");
result.add("as-\tsis-\tted", "V\ts I s\tt V d");
result.add("as-\tsis-\tting", "V\ts I s\tt I N");
result.add("as-\tsist", "V\ts I s t");
result.add("as-\tsists", "V\ts I s t s");
result.add("as-\tso-\tci-\ta-\tted", "V\ts @U\ts i:\teI\tt V d");
result.add("as-\tso-\tci-\ta-\tting", "V\ts @U\ts i:\teI\tt I N");
result.add("as-\tso-\tci-\ta-\ttion", "V\ts @U\ts i:\teI\tS V n");
result.add("as-\tso-\tci-\ta-\ttions", "V\ts @U\ts i:\teI\tS V n z");
result.add("as-\tso-\tci-\ta-\ttion's", "V\ts @U\tS i:\teI\tS V n z");
result.add("as-\tso-\tci-\tate", "V\ts @U\ts i:\tV t");
result.add("as-\tso-\tci-\tates", "V\ts @U\ts i:\tV t s");
result.add("as-\tso-\tci-\tate's", "V\ts @U\ts i:\tV t s");
result.add("as-\tsor-\tted", "V\ts O@\tt V d");
result.add("as-\tsort", "V\ts O@ t");
result.add("as-\tsort-\tment", "V\ts O@ t\tm V n t");
result.add("as-\tsuage", "V s\tw eI dZ");
result.add("as-\tsuaged", "V s\tw eI dZ d");
result.add("as-\tta", "Q s\tt V");
result.add("as-\ttaire", "V s\tt e@");
result.add("as-\tte-\trisk", "{ s\tt @r\tI s k");
result.add("as-\tte-\troid", "{ s\tt @r\tOI d");
result.add("as-\tte-\troids", "{ s\tt @r\tOI d z");
result.add("as-\tte-\troid's", "{ s\tt @r\tOI d z");
result.add("as-\tter", "{ s\tt @r");
result.add("as-\tters", "{ s\tt @r z");
result.add("as-\ttig-\tma-\tti-\tsm", "V s\tt I g\tm V\tt I\tz V m");
result.add("as-\tto-\tni-\tshing", "V s\tt Q\tn I\tS I N");
result.add("as-\tto-\tni-\tshing-\tly", "V s\tt Q\tn I\tS I N\tl i:");
result.add("as-\tto-\tnish", "V s\tt Q\tn I S");
result.add("as-\tto-\tnish-\tment", "V s\tt Q\tn I S\tm V n t");
result.add("as-\tto-\tnished", "V s\tt Q\tn I S t");
result.add("as-\tto-\tri-\ta", "{ s\tt O@\ti:\tV");
result.add("as-\tton", "{ s\tt V n");
result.add("as-\ttor", "{ s\tt @r");
result.add("as-\ttor's", "{ s\tt @r z");
result.add("as-\ttoun-\tded", "V s\tt aU n\td V d");
result.add("as-\ttoun-\tding", "V s\tt aU n\td I N");
result.add("as-\ttoun-\tding-\tly", "V s\tt aU n\td I N\tl i:");
result.add("as-\ttound", "V s\tt aU n d");
result.add("as-\ttounds", "V s\tt aU n d z");
result.add("as-\ttute", "V s\tt u: t");
result.add("as-\ttute-\tly", "V s\tt u: t\tl i:");
result.add("as-\ttute-\tness", "V s\tt u: t\tn V s");
result.add("asc-\thoff", "{ s\tk h O: f");
result.add("asch", "{ S");
result.add("ash", "{ S");
result.add("ash-\tbaugh", "{ S\tb O:");
result.add("ash-\tbu-\try", "{ S\tb e@\ti:");
result.add("ash-\tburn", "{ S\tb @r n");
result.add("ash-\tby", "{ S\tb i:");
result.add("ash-\tcroft", "{ S\tk r O: f t");
result.add("ash-\tdown", "{ S\td aU n");
result.add("ash-\tford", "{ S\tf @r d");
result.add("ash-\tland", "{ S\tl V n d");
result.add("ash-\tland's", "{ S\tl V n d z");
result.add("ash-\tley", "{ S\tl i:");
result.add("ash-\tley's", "{ S\tl i: z");
result.add("ash-\tlin", "{ S\tl I n");
result.add("ash-\tman", "{ S\tm V n");
result.add("ash-\tmead", "{ S\tm i: d");
result.add("ash-\tmore", "{ S\tm O@");
result.add("ash-\tton", "{ S\tt V n");
result.add("ash-\tton's", "{ S\tt V n z");
result.add("ash-\ttray", "{ S\tt r eI");
result.add("ash-\ttrays", "{ S\tt r eI z");
result.add("ash-\twell", "{ S\tw e l");
result.add("ash-\twood", "{ S\tw U d");
result.add("ashe", "{ S");
result.add("ashe-\tville", "{ S\tv I l");
result.add("ask", "{ s k");
result.add("asked", "{ s k t");
result.add("asks", "{ s k s");
result.add("asp", "{ s p");
result.add("aspi-\trin", "{ s\tp r I n");
result.add("aspi-\trin's", "{ s\tp r I n z");
result.add("ass", "{ s");
result.add("assed", "{ s t");
result.add("ast", "{ s t");
result.add("ast-\tra", "{ s\tt r V");
result.add("ast-\trad-\tdle", "V s\tt r {\td V l");
result.add("ast-\trak-\than", "{ s\tt r V\tk Q n");
result.add("ast-\tral", "{ s\tt r V l");
result.add("ast-\tra's", "{ s\tt r V z");
result.add("ast-\tray", "V s\tt r eI");
result.add("ast-\tred", "{ s\tt @r d");
result.add("ast-\trid", "{ s\tt r I d");
result.add("ast-\tride", "V s\tt r aI d");
result.add("ast-\trin-\tgent", "V s\tt r I n\tdZ V n t");
result.add("ast-\trin-\tgents", "V s\tt r I n\tdZ V n t s");
result.add("ast-\tro", "{ s\tt r @U");
result.add("ast-\tro-\tdome", "{ s\tt r V\td @U m");
result.add("ast-\tro-\tge-\to-\tlo-\tgy", "{ s\tt r V\tdZ i:\tQ\tl V\tdZ i:");
result.add("ast-\tro-\tlo-\tger", "V s\tt r Q\tl V\tdZ @r");
result.add("ast-\tro-\tlo-\tgers", "V s\tt r Q\tl V\tdZ @r z");
result.add("ast-\tro-\tlo-\tgi-\tcal", "{ s\tt r V\tl Q\tdZ I\tk V l");
result.add("ast-\tro-\tlo-\tgy", "V s\tt r Q\tl V\tdZ i:");
result.add("ast-\tro-\tnau-\tti-\tcal", "{ s\tt r V\tn Q\tt I\tk V l");
result.add("ast-\tro-\tnau-\ttic", "{ s\tt r V\tn Q\tt I k");
result.add("ast-\tro-\tnau-\ttics", "{ s\tt r V\tn Q\tt I k s");
result.add("ast-\tro-\tnaut", "{ s\tt r V\tn Q t");
result.add("ast-\tro-\tnauts", "{ s\tt r V\tn O: t s");
result.add("ast-\tro-\tnaut's", "{ s\tt r V\tn Q t s");
result.add("ast-\tro-\tno-\tmer", "V s\tt r Q\tn V\tm @r");
result.add("ast-\tro-\tno-\tmers", "V s\tt r Q\tn V\tm @r z");
result.add("ast-\tro-\tno-\tmi-\tcal", "{ s\tt r V\tn Q\tm I\tk V l");
result.add("ast-\tro-\tno-\tmical-\tly", "{ s\tt r V\tn Q\tm I k\tl i:");
result.add("ast-\tro-\tno-\tmy", "V s\tt r Q\tn V\tm i:");
result.add("ast-\tro-\tpho-\ttog-\tra-\tphy", "{ s\tt r @U\tf V\tt Q g\tr V\tf i:");
result.add("ast-\tro-\tphy-\tsi-\tcist", "{ s\tt r @U\tf I\tz I\ts I s t");
result.add("ast-\tro-\tphy-\tsics", "{ s\tt r @U\tf I\tz I k s");
result.add("ast-\tro-\tturf", "{ s\tt r @U\tt @r f");
result.add("asth-\tma", "{ z\tm V");
result.add("asth-\tma-\ttic", "{ z\tm {\tt I k");
result.add("asth-\tma-\ttics", "e s\tT m e\tt I k s");
result.add("at", "{ t");
result.add("at-\tbat", "{ t\tb { t");
result.add("at-\tco", "{ t\tk @U");
result.add("at-\tkin-\tson", "{ t\tk I n\ts V n");
result.add("at-\tkin-\tson's", "{ t\tk I n\ts V n z");
result.add("at-\tkin-\ts's", "{ t\tk I n\tz V z");
result.add("at-\tkins", "{ t\tk I n z");
result.add("at-\tla-\tses", "{ t\tl eI\ts V z");
result.add("at-\tla-\ts's", "{ t\tl V\ts V z");
result.add("at-\tlan-\tta", "{ t\tl { n\tt V");
result.add("at-\tlan-\ttan", "{ t\tl { n\tt V n");
result.add("at-\tlan-\ttans", "{ t\tl { n\tt V n z");
result.add("at-\tlan-\tta's", "{ t\tl { n\tt V z");
result.add("at-\tlan-\tti-\tca", "{ t\tl { n\tt I\tk V");
result.add("at-\tlan-\tti-\ts's", "{ t\tl { n\tt I\ts V z");
result.add("at-\tlan-\ttic", "V t\tl { n\tt I k");
result.add("at-\tlan-\ttic's", "V t\tl { n\tt I k s");
result.add("at-\tlan-\ttis", "{ t\tl { n\tt I s");
result.add("at-\tlas", "{ t\tl V s");
result.add("at-\tmos-\tphe-\tric", "{ t\tm V s\tf e@\tI k");
result.add("at-\tmos-\tphe-\trics", "{ t\tm V s\tf e@\tI k s");
result.add("at-\tmos-\tphere", "{ t\tm V s\tf I@");
result.add("at-\tra", "eI t\tr V");
result.add("at-\tri-\ta", "eI t\tr i:\tV");
result.add("at-\tri-\tum", "eI t\tr i:\tV m");
result.add("at-\tro-\tci-\tties", "V t\tr Q\ts V\tt i: z");
result.add("at-\tro-\tci-\tty", "V t\tr Q\ts V\tt i:");
result.add("at-\tro-\tcious", "V t\tr @U\tS V s");
result.add("at-\tro-\tphied", "{ t\tr V\tf i: d");
result.add("at-\tro-\tphy", "{ t\tr V\tf i:");
result.add("at-\tta", "{\tt V");
result.add("at-\tta-\tboy", "{\tt V\tb OI");
result.add("at-\tta-\tboys", "{\tt V\tb OI z");
result.add("at-\tta-\tche", "{\tt V\tS eI");
result.add("at-\tta-\tches", "V\tt {\ttS V z");
result.add("at-\tta-\tching", "V\tt {\ttS I N");
result.add("at-\ttac-\tker", "V\tt {\tk @r");
result.add("at-\ttac-\tkers", "V\tt {\tk @r z");
result.add("at-\ttac-\tking", "V\tt {\tk I N");
result.add("at-\ttach", "V\tt { tS");
result.add("at-\ttach-\tment", "V\tt { tS\tm V n t");
result.add("at-\ttach-\tments", "V\tt { tS\tm V n t s");
result.add("at-\ttached", "V\tt { tS t");
result.add("at-\ttack", "V\tt { k");
result.add("at-\ttacked", "V\tt { k t");
result.add("at-\ttacks", "V\tt { k s");
result.add("at-\ttai-\tna-\tble", "V\tt eI\tn V\tb V l");
result.add("at-\ttai-\tning", "V\tt eI\tn I N");
result.add("at-\ttain", "V\tt eI n");
result.add("at-\ttain-\tder", "V\tt eI n\td @r");
result.add("at-\ttain-\tment", "V\tt eI n\tm V n t");
result.add("at-\ttained", "V\tt eI n d");
result.add("at-\ttains", "V\tt eI n z");
result.add("at-\ttal-\tla", "V\tt {\tl V");
result.add("at-\ttar", "{\tt @r");
result.add("at-\tte-\tnu-\ta-\tted", "V\tt e n\tj u:\teI\tt V d");
result.add("at-\tte-\tnu-\tate", "V\tt e n\tj u:\teI t");
result.add("at-\tte-\tnu-\tates", "V\tt e n\tj u:\teI t s");
result.add("at-\ttemp-\tted", "V\tt e m\tp t V d");
result.add("at-\ttemp-\tting", "V\tt e m\tp t I N");
result.add("at-\ttempt", "V\tt e m p t");
result.add("at-\ttempts", "V\tt e m p t s");
result.add("at-\tten-\tbo-\trough", "{\tt V n\tb @r\t@U");
result.add("at-\tten-\tdance", "V\tt e n\td V n s");
result.add("at-\tten-\tdant", "V\tt e n\td V n t");
result.add("at-\tten-\tdants", "V\tt e n\td V n t s");
result.add("at-\tten-\tded", "V\tt e n\td V d");
result.add("at-\tten-\tdee", "V\tt e n\td i:");
result.add("at-\tten-\tdees", "V\tt e n\td i: z");
result.add("at-\tten-\tding", "V\tt e n\td I N");
result.add("at-\tten-\ttion", "V\tt e n\tS V n");
result.add("at-\tten-\ttions", "V\tt e n\tS V n z");
result.add("at-\tten-\ttive", "V\tt e n\tt I v");
result.add("at-\tten-\ttive-\tly", "V\tt e n\tt I v\tl i:");
result.add("at-\tten-\ttive-\tness", "V\tt e n\tt I v\tn V s");
result.add("at-\ttend", "V\tt e n d");
result.add("at-\ttends", "V\tt e n d z");
result.add("at-\tter-\tbu-\try", "{\tt @r\tb e@\ti:");
result.add("at-\ttes-\tted", "V\tt e s\tt V d");
result.add("at-\ttes-\tting", "V\tt e s\tt I N");
result.add("at-\ttest", "V\tt e s t");
result.add("at-\ttests", "V\tt e s t s");
result.add("at-\tti-\tca", "{\tt I\tk V");
result.add("at-\tti-\tcus", "{\tt I\tk V s");
result.add("at-\tti-\tla", "V\tt I\tl V");
result.add("at-\tti-\tla's", "V\tt I\tl V z");
result.add("at-\tti-\tre", "V\tt aI\t@r");
result.add("at-\tti-\ttu-\tdi-\tnal", "{\tt I\tt u:\td I\tn V l");
result.add("at-\tti-\ttude", "{\tt I\tt u: d");
result.add("at-\tti-\ttudes", "{\tt I\tt u: d z");
result.add("at-\ttic", "{\tt I k");
result.add("at-\ttics", "{\tt I k s");
result.add("at-\ttired", "V\tt aI r d");
result.add("at-\ttor-\tney", "V\tt @r\tn i:");
result.add("at-\ttor-\tneys", "V\tt @r\tn i: z");
result.add("at-\ttor-\tney's", "V\tt @r\tn i: z");
result.add("at-\ttune", "V\tt u: n");
result.add("at-\ttuned", "V\tt u: n d");
result.add("at-\twa-\tter", "{ t\tw O:\tt @r");
result.add("at-\twood", "{ t\tw U d");
result.add("at-\tworth", "{ t\tw @r T");
result.add("ate", "eI t");
result.add("ates", "eI t s");
result.add("ath-\tlone", "{ T\tl @U n");
result.add("ath-\twart", "V T\tw O@ t");
result.add("att-\tle-\tbo-\tro", "{\tt V l\tb @r\t@U");
result.add("att-\tlee", "{ t\tl i:");
result.add("att-\trac-\tted", "V t\tr { k\tt V d");
result.add("att-\trac-\tting", "V t\tr { k\tt I N");
result.add("att-\trac-\ttion", "V t\tr { k\tS V n");
result.add("att-\trac-\ttions", "V t\tr { k\tS V n z");
result.add("att-\trac-\ttive", "V t\tr { k\tt I v");
result.add("att-\trac-\ttive-\tly", "V t\tr { k\tt I v\tl i:");
result.add("att-\trac-\ttive-\tness", "V t\tr { k\tt I v\tn V s");
result.add("att-\tract", "V t\tr { k t");
result.add("att-\tracts", "V t\tr { k t s");
result.add("att-\tri-\tbu-\tta-\tble", "V t\tr I b\tj V\tt V\tb V l");
result.add("att-\tri-\tbu-\tted", "V t\tr I b\tj V\tt V d");
result.add("att-\tri-\tbu-\tting", "V t\tr I b\tj V\tt I N");
result.add("att-\tri-\tbu-\ttion", "{ t\tr I b\tj u:\tS V n");
result.add("att-\tri-\tbute", "{ t\tr I b\tj u: t");
result.add("att-\tri-\tbutes", "{ t\tr I b\tj u: t s");
result.add("att-\tri-\ttion", "V t\tr I\tS V n");
result.add("att-\twood", "{ t\tw U d");
result.add("au", "@U");
result.add("au-\tber", "O:\tb @r");
result.add("au-\tber-\try", "O:\tb e@\ti:");
result.add("au-\tbert", "O:\tb @r t");
result.add("au-\tbin", "O:\tb I n");
result.add("au-\tburn", "Q\tb @r n");
result.add("au-\td-\trie", "O:\td @r\ti:");
result.add("au-\tdi-\to-\tphiles", "O:\td i:\t@U\tf i: l z");
result.add("au-\tdi-\to-\ttape", "O:\td i:\t@U\tt eI p");
result.add("au-\tdi-\to-\ttapes", "O:\td i:\t@U\tt eI p s");
result.add("au-\tdi-\to-\tvi-\tsu-\tal", "O:\td i:\t@U\tv I\tZ u:\tV l");
result.add("au-\tdi-\tted", "O:\td I\tt V d");
result.add("au-\tdi-\tting", "Q\td I\tt I N");
result.add("au-\tdi-\ttio-\tning", "Q\td I\tS V\tn I N");
result.add("au-\tdi-\ttion", "Q\td I\tS V n");
result.add("au-\tdi-\ttioned", "O:\td I\tS V n d");
result.add("au-\tdi-\ttions", "O:\td I\tS V n z");
result.add("au-\tdi-\tto-\tri-\tum", "O:\td I\tt O@\ti:\tV m");
result.add("au-\tdi-\tto-\tri-\tums", "O:\td I\tt O@\ti:\tV m z");
result.add("au-\tdi-\tto-\try", "O:\td I\tt O@\ti:");
result.add("au-\tdi-\ttor", "O:\td I\tt @r");
result.add("au-\tdi-\ttors", "Q\td I\tt @r z");
result.add("au-\tdi-\ttor's", "O:\td I\tt @r z");
result.add("au-\tdi's", "O:\td i: z");
result.add("au-\tdit", "O:\td I t");
result.add("au-\tdits", "Q\td I t s");
result.add("au-\tdu-\tbon", "O:\td V\tb Q n");
result.add("au-\ter", "aU\t@r");
result.add("au-\ter-\tbach", "aU\t@r\tb Q k");
result.add("au-\tger", "O:\tg @r");
result.add("au-\tgers", "O:\tg @r z");
result.add("au-\tgu-\tring", "O:\tg @r\tI N");
result.add("au-\tgur", "O:\tg @r");
result.add("au-\tgurs", "O:\tg @r z");
result.add("au-\tgus-\tta", "V\tg V s\tt V");
result.add("au-\tgus-\tta's", "V\tg V s\tt V z");
result.add("au-\tgus-\tti-\tni-\tan", "Q\tg V s\tt I\tn i:\tV n");
result.add("au-\tgus-\tti-\tni-\tans", "Q\tg V s\tt I\tn i:\tV n z");
result.add("au-\tgus-\ttin", "aU\tg u: s\tt i: n");
result.add("au-\tgus-\ttine", "Q\tg V s\tt i: n");
result.add("au-\tgus-\tto", "O:\tg V s\tt @U");
result.add("au-\tgus-\ttus", "Q\tg V s\tt V s");
result.add("au-\tgust", "Q\tg V s t");
result.add("au-\tguste", "O:\tg V s t");
result.add("au-\tgust's", "O:\tg V s t s");
result.add("au-\tra", "O@\tV");
result.add("au-\tral", "O@\tV l");
result.add("au-\tre-\ta", "aU\tr eI\tQ");
result.add("au-\tre-\tli-\to", "aU\tr eI\tl i:\t@U");
result.add("au-\tri-\ta", "O@\ti:\tV");
result.add("au-\tro-\tra", "@r\tO@\tV");
result.add("au-\tro-\tral", "@r\tO@\tV l");
result.add("au-\trum", "O@\tV m");
result.add("au-\tthen-\tti-\tca-\tted", "O:\tT e n\tt I\tk eI\tt V d");
result.add("au-\tthen-\tti-\tca-\tting", "O:\tT e n\tt I\tk eI\tt I N");
result.add("au-\tthen-\tti-\tca-\ttion", "O:\tT e n\tt I\tk eI\tS V n");
result.add("au-\tthen-\tti-\tca-\ttions", "O:\tT e n\tt I\tk eI\tS V n z");
result.add("au-\tthen-\tti-\tcate", "O:\tT e n\tt I\tk eI t");
result.add("au-\tthen-\tti-\tci-\tty", "O:\tT V n\tt I\ts V\tt i:");
result.add("au-\tthen-\ttic", "V\tT e n\tt I k");
result.add("au-\tthen-\ttical-\tly", "O:\tT e n\tt I k\tl i:");
result.add("au-\ttho-\tri-\tta-\tri-\ta-\tni-\tsm", "V\tT O@\tV\tt e@\ti:\tV\tn I\tz V m");
result.add("au-\ttho-\tri-\tta-\tri-\tan", "V\tT O@\tV\tt e@\ti:\tV n");
result.add("au-\ttho-\tri-\tta-\ttive", "V\tT O@\tV\tt eI\tt I v");
result.add("au-\ttho-\tri-\tta-\ttive-\tly", "V\tT O@\tV\tt eI\tt I v\tl i:");
result.add("au-\ttho-\tri-\tties", "V\tT O@\tV\tt i: z");
result.add("au-\ttho-\tri-\tty", "V\tT O@\tV\tt i:");
result.add("au-\ttho-\tri-\tty's", "V\tT O@\tV\tt i: z");
result.add("au-\ttho-\tri-\tza-\ttion", "O:\tT @r\tV\tz eI\tS V n");
result.add("au-\ttho-\tri-\tza-\ttions", "O:\tT @r\tV\tz eI\tS V n z");
result.add("au-\ttho-\tri-\tzes", "O:\tT @r\taI\tz V z");
result.add("au-\ttho-\tri-\tzing", "O:\tT @r\taI\tz I N");
result.add("au-\ttho-\trize", "O:\tT @r\taI z");
result.add("au-\ttho-\trized", "O:\tT @r\taI z d");
result.add("au-\tthor", "O:\tT @r");
result.add("au-\tthor-\tship", "O:\tT @r\tS I p");
result.add("au-\tthored", "O:\tT @r d");
result.add("au-\tthors", "O:\tT @r z");
result.add("au-\tthor's", "O:\tT @r z");
result.add("au-\tti-\tsm", "O:\tt I\tz V m");
result.add("au-\ttis-\ttic", "O:\tt I s\tt I k");
result.add("au-\tto", "O:\tt @U");
result.add("au-\tto-\tbahn", "O:\tt @U\tb Q n");
result.add("au-\tto-\tbi-\to-\tgra-\tpher", "O:\tt V\tb aI\tQ g\tr V\tf @r");
result.add("au-\tto-\tbi-\to-\tgra-\tphi-\tcal", "O:\tt V\tb aI\tV g\tr {\tf I\tk V l");
result.add("au-\tto-\tbi-\to-\tgra-\tphies", "O:\tt V\tb aI\tQ g\tr V\tf i: z");
result.add("au-\tto-\tbi-\to-\tgra-\tphy", "O:\tt V\tb aI\tQ g\tr V\tf i:");
result.add("au-\tto-\tgraph", "O:\tt V g\tr { f");
result.add("au-\tto-\tgraphed", "O:\tt V g\tr { f t");
result.add("au-\tto-\tgraphs", "O:\tt V g\tr { f s");
result.add("au-\tto-\tma-\tker", "O:\tt @U\tm eI\tk @r");
result.add("au-\tto-\tma-\tkers", "O:\tt @U\tm eI\tk @r z");
result.add("au-\tto-\tma-\tta", "O:\tt Q\tm V\tt V");
result.add("au-\tto-\tma-\tted", "O:\tt V\tm eI\tt V d");
result.add("au-\tto-\tma-\ttic", "O:\tt V\tm {\tt I k");
result.add("au-\tto-\tma-\ttical-\tly", "O:\tt V\tm {\tt I k\tl i:");
result.add("au-\tto-\tma-\ttics", "O:\tt V\tm {\tt I k s");
result.add("au-\tto-\tma-\tting", "O:\tt V\tm eI\tt I N");
result.add("au-\tto-\tma-\ttion", "O:\tt V\tm eI\tS V n");
result.add("au-\tto-\tma-\tton", "O:\tt Q\tm V\tt Q n");
result.add("au-\tto-\tmate", "O:\tt V\tm eI t");
result.add("au-\tto-\tmates", "O:\tt V\tm eI t s");
result.add("au-\tto-\tmo-\tbile", "O:\tt V\tm @U\tb i: l");
result.add("au-\tto-\tmo-\tbiles", "O:\tt V\tm @U\tb i: l z");
result.add("au-\tto-\tmo-\ttive", "O:\tt V\tm @U\tt I v");
result.add("au-\tto-\tno-\tmic", "O:\tt V\tn Q\tm I k");
result.add("au-\tto-\tno-\tmous", "O:\tt Q\tn V\tm V s");
result.add("au-\tto-\tno-\tmous-\tly", "O:\tt Q\tn @U\tm V s\tl i:");
result.add("au-\tto-\tno-\tmy", "O:\tt Q\tn V\tm i:");
result.add("au-\tto-\tpi-\tlot", "O:\tt @U\tp aI\tl V t");
result.add("au-\tto-\tra-\tdi-\to-\tgraph", "Q\tt @U\tr eI\td i:\t@U g\tr { f");
result.add("au-\tto-\ttro-\tphic", "O:\tt V t\tr @U\tf I k");
result.add("au-\tto-\twor-\tker", "O:\tt @U\tw @r\tk @r");
result.add("au-\tto-\twor-\tkers", "O:\tt @U\tw @r\tk @r z");
result.add("au-\ttoc-\tlave", "O:\tt @U k\tl eI v");
result.add("au-\ttoc-\tra-\tcy", "O:\tt Q k\tr V\ts i:");
result.add("au-\ttoc-\tra-\ttic", "O:\tt V k\tr {\tt I k");
result.add("au-\ttoc-\trat", "O:\tt V k\tr { t");
result.add("au-\ttoi-\tmmune", "O:\tt OI m\tj u: n");
result.add("au-\ttop-\tsied", "O:\tt Q p\ts i: d");
result.add("au-\ttop-\tsies", "O:\tt Q p\ts i: z");
result.add("au-\ttop-\tsy", "O:\tt Q p\ts i:");
result.add("au-\ttos", "O:\tt @U z");
result.add("au-\tto's", "O:\tt @U z");
result.add("au-\ttum-\tnal", "O:\tt V m\tn V l");
result.add("au-\ttumn", "O:\tt V m");
result.add("au-\ttumn's", "O:\tt V m z");
result.add("au-\tvil", "@U\tv I l");
result.add("au-\txi-\ter", "O: k\ts i:\t@r");
result.add("au-\txi-\tlia-\try", "Q g\tz I l\tj @r\ti:");
result.add("aub-\trey", "O: b\tr i:");
result.add("aub-\try", "O: b\tr i:");
result.add("aube", "O: b");
result.add("auc-\ttio-\tnee-\tring", "O: k\tS V\tn I@\tI N");
result.add("auc-\ttio-\tneer", "Q k\tS V\tn I@");
result.add("auc-\ttio-\tneers", "O: k\tS V\tn I@ z");
result.add("auc-\ttio-\tning", "O: k\tS V\tn I N");
result.add("auc-\ttion", "Q k\tS V n");
result.add("auc-\ttioned", "O: k\tS V n d");
result.add("auc-\ttions", "Q k\tS V n z");
result.add("auc-\ttion's", "O: k\tS V n z");
result.add("auck-\tland", "Q k\tl V n d");
result.add("aud-\trey", "O: d\tr i:");
result.add("aud-\tris", "@U d\tr i: s");
result.add("aud-\try", "O: d\tr i:");
result.add("aud-\twin", "O: d\tw I n");
result.add("aug-\tmen-\tta-\tble", "Q g\tm e n\tt V\tb V l");
result.add("aug-\tmen-\tta-\ttion", "Q g\tm e n\tt eI\tS V n");
result.add("aug-\tmen-\tted", "Q g\tm e n\tt V d");
result.add("aug-\tmen-\tting", "O: g\tm e n\tt I N");
result.add("aug-\tment", "O: g\tm e n t");
result.add("auge", "O: dZ");
result.add("augs-\tburg", "O: g\tz b @r g");
result.add("aul", "O: l");
result.add("auld", "O: l d");
result.add("ault", "O: l t");
result.add("ault-\tman", "O: l\tt m V n");
result.add("aun-\ttie", "{ n\tt i:");
result.add("aune", "O: n");
result.add("aunt", "{ n t");
result.add("aunts", "{ n t s");
result.add("aunt's", "{ n t s");
result.add("aus", "aU z");
result.add("aus-\tlan-\tder", "aU s\tl V n\td @r");
result.add("aus-\tpi-\tces", "O: s\tp I\ts V z");
result.add("aus-\tpi-\tcious", "Q s\tp I\tS V s");
result.add("aus-\tpice", "O: s\tp I s");
result.add("aus-\tsie", "O:\ts i:");
result.add("aus-\tte-\tri-\tty", "O: s\tt e@\tI\tt i:");
result.add("aus-\ttell", "aU s\tt V l");
result.add("aus-\tten", "O: s\tt V n");
result.add("aus-\tten's", "O: s\tt V n z");
result.add("aus-\tter", "O: s\tt @r");
result.add("aus-\ttere", "O: s\tt I@");
result.add("aus-\ttere-\tly", "O: s\tt I@\tl i:");
result.add("aus-\ttin", "O: s\tt I n");
result.add("aus-\ttine", "O: s\tt i: n");
result.add("aus-\ttin's", "O: s\tt I n z");
result.add("aus-\tton", "O: s\tt V n");
result.add("ausch-\twitz", "O: S\tw I t s");
result.add("aust", "O: s t");
result.add("aust-\tra-\tla-\tsia", "O: s\tt r V\tl eI\tZ V");
result.add("aust-\tra-\tlia", "O: s\tt r eI l\tj V");
result.add("aust-\tra-\tlian", "O: s\tt r eI l\tj V n");
result.add("aust-\tra-\tlians", "O: s\tt r eI l\tj V n z");
result.add("aust-\tra-\tlia's", "O: s\tt r eI l\tj V z");
result.add("aust-\tra-\tlo-\tpi-\tthe-\tcine", "O: s\tt r eI\tl @U\tp I\tT V\ts aI n");
result.add("aust-\tra-\tlo-\tpi-\tthe-\tcus", "O: s\tt r eI\tl @U\tp I\tT V\tk V s");
result.add("aust-\tra-\tsia", "O: s\tt r eI\tZ V");
result.add("aust-\tral", "O: s\tt r V l");
result.add("aust-\trals", "O: s\tt r V l z");
result.add("aust-\tri-\ta", "O: s\tt r i:\tV");
result.add("aust-\tri-\tan", "O: s\tt r i:\tV n");
result.add("aust-\tri-\tans", "O: s\tt r i:\tV n z");
result.add("aust-\tri-\ta's", "O: s\tt r i:\tV z");
result.add("aust-\tro-\ta-\tsi-\ta-\ttic", "O: s\tt r @U\teI\tZ i:\t{\tt I k");
result.add("aut-\trey", "O: t\tr i:");
result.add("aut-\try", "O: t\tr i:");
result.add("auth", "O: T");
result.add("aux", "@U");
result.add("av-\tner", "{ v\tn @r");
result.add("av-\tra-\tham", "eI v\tr V\th { m");
result.add("av-\tram", "eI v\tr V m");
result.add("av-\tril", "{ v\tr I l");
result.add("aw", "O:");
result.add("aw-\tful", "Q\tf V l");
result.add("aw-\tful-\tness", "O:\tf V l\tn V s");
result.add("aw-\tning", "Q\tn I N");
result.add("aw-\try", "@r\taI");
result.add("awb", "Q w b");
result.add("awe", "Q");
result.add("awe-\tsome", "Q\ts V m");
result.add("awe-\tsome-\tly", "Q\ts V m\tl i:");
result.add("awe-\tstruck", "Q s\tt r V k");
result.add("awed", "O: d");
result.add("awest-\truck", "Q s\tt r V k");
result.add("awful-\tly", "Q f\tl i:");
result.add("awk-\tward", "Q k\tw @r d");
result.add("awk-\tward-\tly", "Q k\tw @r d\tl i:");
result.add("awk-\tward-\tness", "Q k\tw @r d\tn V s");
result.add("ax", "{ k s");
result.add("ax-\ttell", "{ k\ts t e l");
result.add("ax-\tton", "{ k\ts t V n");
result.add("axe", "{ k s");
result.add("axed", "{ k s t");
result.add("ay", "eI");
result.add("ay-\tde-\tlotte", "eI\td V\tl Q t");
result.add("ay-\tdin", "eI\td I n");
result.add("aye", "aI");
result.add("ayer's", "e@ z");
result.add("ayes", "aI z");
result.add("ayk-\troyd", "eI k\tr OI d");
result.add("ayl-\tmer", "eI l\tm @r");
result.add("ayl-\tward", "eI l\tw @r d");
result.add("ayls-\tworth", "eI l\ts w @r T");
result.add("ayn", "eI n");
result.add("ayr", "eI r");
result.add("ayre", "e@");
result.add("ayres", "e@ z");
result.add("az-\tpur-\tu-\ta", "{ z\tp j U@\tu:\tV");
result.add("az-\tte-\tca", "{ z\tt e\tk V");
result.add("az-\ttec", "{ z\tt e k");
result.add("az-\ttecs", "{ z\tt e k s");
result.add("b", "bh i:");
result.add("b-\tb-\tc", "bh i:\tb i:\ts i:");
result.add("b-\tb-\tq", "bh i:\tb i: k\tj u:");
result.add("b-\tt", "bh i:\tt i:");
result.add("b-\ty-\tu", "bh i:\tw aI\tj u:");
result.add("b-\tyam", "bh aI\tV m");
result.add("b.", "bh i:");
result.add("ba-\tba", "bh Q\tb V");
result.add("ba-\tbel", "bh {\tb V l");
result.add("ba-\tber", "bh eI\tb @r");
result.add("ba-\tbette", "bh V\tb e t");
result.add("ba-\tbi-\tta", "bh Q\tb i:\tt V");
result.add("ba-\tbies", "bh eI\tb i: z");
result.add("ba-\tbies'", "bh eI\tb i: z");
result.add("ba-\tbins-\tki", "bh V\tb I n\ts k i:");
result.add("ba-\tbish", "bh {\tb I S");
result.add("ba-\tboon", "bh V\tb u: n");
result.add("ba-\tboons", "bh {\tb u: n z");
result.add("ba-\tboon's", "bh {\tb u: n z");
result.add("ba-\tbu", "bh Q\tb u:");
result.add("ba-\tbush-\tka", "bh V\tb U S\tk V");
result.add("ba-\tbush-\tkas", "bh V\tb U S\tk V z");
result.add("ba-\tby", "bh eI\tb i:");
result.add("ba-\tby-\thood", "bh eI\tb i:\th U d");
result.add("ba-\tby-\tish", "bh eI\tb i:\tI S");
result.add("ba-\tby-\tlo-\tni-\tan", "bh {\tb V\tl @U\tn i:\tV n");
result.add("ba-\tby-\tlo-\tni-\tans", "bh {\tb V\tl @U\tn i:\tV n z");
result.add("ba-\tby-\tlon", "bh {\tb V\tl Q n");
result.add("ba-\tby-\tsat", "bh eI\tb i:\ts { t");
result.add("ba-\tby-\tsit", "bh eI\tb i:\ts I t");
result.add("ba-\tby-\tsit-\tter", "bh eI\tb i:\ts I\tt @r");
result.add("ba-\tby-\tsit-\tters", "bh eI\tb i:\ts I\tt @r z");
result.add("ba-\tby-\tsit-\tting", "bh eI\tb i:\ts I\tt I N");
result.add("ba-\tby's", "bh eI\tb i: z");
result.add("ba-\tcall", "bh V\tk O: l");
result.add("ba-\tcar-\tdi", "bh V\tk Q@\td i:");
result.add("ba-\tcha-\trach", "bh {\tk @r\t{ k");
result.add("ba-\tche-\tlor", "bh {\ttS V\tl @r");
result.add("ba-\tche-\tlor's", "bh {\ttS V\tl @r z");
result.add("ba-\tchel-\tler", "bh Q\tk V\tl @r");
result.add("ba-\tche's", "bh {\ttS V z");
result.add("ba-\tcil-\tlus", "bh V\ts I\tl V s");
result.add("ba-\tckache", "bh {\tk eI k");
result.add("ba-\tckaches", "bh {\tk eI k s");
result.add("ba-\tcon", "bh eI\tk V n");
result.add("ba-\tcon's", "bh eI\tk V n z");
result.add("ba-\tden", "bh eI\td V n");
result.add("ba-\tden's", "bh Q\td V n z");
result.add("ba-\tder", "bh {\td @r");
result.add("ba-\tez", "bh aI\te z");
result.add("ba-\tgel", "bh eI\tg V l");
result.add("ba-\tgels", "bh eI\tg V l z");
result.add("ba-\tha-\tma", "bh V\th Q\tm V");
result.add("ba-\tha-\tmas", "bh V\th Q\tm V z");
result.add("ba-\tha-\tmi-\tan", "bh V\th eI\tm i:\tV n");
result.add("ba-\tham", "bh Q\tV m");
result.add("ba-\than", "bh {\th V n");
result.add("ba-\thi-\ta", "bh Q\th i:\tV");
result.add("ba-\tja", "bh Q\th Q");
result.add("ba-\tka", "bh Q\tk V");
result.add("ba-\tke-\tries", "bh eI\tk @r\ti: z");
result.add("ba-\tke-\try", "bh eI\tk @r\ti:");
result.add("ba-\tker", "bh eI\tk @r");
result.add("ba-\tkers", "bh eI\tk @r z");
result.add("ba-\tker's", "bh eI\tk @r z");
result.add("ba-\tkers-\tfield", "bh eI\tk @r z\tf i: l d");
result.add("ba-\tking", "bh eI\tk I N");
result.add("ba-\tku", "bh Q\tk u:");
result.add("ba-\tku-\tla", "bh V\tk u:\tl V");
result.add("ba-\tla", "bh Q\tl V");
result.add("ba-\tla-\tta", "bh {\tl V\tt V");
result.add("ba-\tlan", "bh eI\tl V n");
result.add("ba-\tlan-\tcer", "bh {\tl V n\ts @r");
result.add("ba-\tlan-\tces", "bh {\tl V n\ts V z");
result.add("ba-\tlan-\tchine", "bh {\tl V n\ttS i: n");
result.add("ba-\tlan-\tchine's", "bh {\tl V n\ttS i: n z");
result.add("ba-\tlan-\tcing", "bh {\tl V n\ts I N");
result.add("ba-\tlance", "bh {\tl V n s");
result.add("ba-\tlanced", "bh {\tl V n s t");
result.add("ba-\tlas", "bh {\tl V s");
result.add("ba-\tleen", "bh V\tl i: n");
result.add("ba-\tles-\ttra", "bh V\tl e s\tt r V");
result.add("ba-\tli", "bh Q\tl i:");
result.add("ba-\tli-\tan", "bh eI\tl i:\tV n");
result.add("ba-\tli-\tnese", "bh {\tl I\tn i: z");
result.add("ba-\tling", "bh eI\tl I N");
result.add("ba-\tlo-\tney", "bh V\tl @U\tn i:");
result.add("ba-\tlon", "bh Q\tl O: n");
result.add("ba-\tlow", "bh {\tl @U");
result.add("ba-\tlu-\tchi", "bh V\tl u:\ttS i:");
result.add("ba-\tna-\tli-\tties", "bh V\tn {\tl V\tt i: z");
result.add("ba-\tna-\tli-\tty", "bh V\tn {\tl V\tt i:");
result.add("ba-\tna-\tna", "bh V\tn {\tn V");
result.add("ba-\tna-\tnas", "bh V\tn {\tn V z");
result.add("ba-\tnach", "bh {\tn V k");
result.add("ba-\tnal", "bh V\tn Q l");
result.add("ba-\tner-\tjee", "bh V\tn @r\tdZ i:");
result.add("ba-\tni-\ta", "bh Q\tn i:\tV");
result.add("ba-\tni-\tshing", "bh {\tn I\tS I N");
result.add("ba-\tnis-\tter", "bh {\tn I s\tt @r");
result.add("ba-\tnish", "bh {\tn I S");
result.add("ba-\tnish-\tment", "bh {\tn I S\tm V n t");
result.add("ba-\tnished", "bh {\tn I S t");
result.add("ba-\tnos", "bh Q\tn @U z");
result.add("ba-\tra", "bh Q@\tV");
result.add("ba-\tra-\tho-\tna", "bh {\tr V\th @U\tn V");
result.add("ba-\tra-\tjas", "bh Q@\tQ\tj Q z");
result.add("ba-\tra-\tny", "bh @r\tO:\tn i:");
result.add("ba-\trak", "bh Q@\tV k");
result.add("ba-\tram", "bh e@\t{ m");
result.add("ba-\tren-\tboim", "bh e@\tV n\tb OI m");
result.add("ba-\trents", "bh e@\tV n t s");
result.add("ba-\trest", "bh e@\tV s t");
result.add("ba-\tri", "bh Q@\ti:");
result.add("ba-\tri-\ttone", "bh e@\tI\tt @U n");
result.add("ba-\tri-\tum", "bh e@\ti:\tV m");
result.add("ba-\trile", "bh Q@\tI l");
result.add("ba-\tring", "bh e@\tI N");
result.add("ba-\tring's", "bh e@\tI N z");
result.add("ba-\tris", "bh Q@\ti: z");
result.add("ba-\tri's", "bh Q@\ti: z");
result.add("ba-\trish", "bh e@\tI S");
result.add("ba-\trite", "bh e@\taI t");
result.add("ba-\trites", "bh e@\taI t s");
result.add("ba-\tro-\tme-\tter", "bh @r\tQ\tm V\tt @r");
result.add("ba-\tro-\tme-\tters", "bh @r\tQ\tm V\tt @r z");
result.add("ba-\tro-\tmet-\tric", "bh {\tr V\tm e t\tr I k");
result.add("ba-\tro-\tness", "bh e@\tV\tn e s");
result.add("ba-\tro-\tnet", "bh e@\tV\tn V t");
result.add("ba-\tro-\tnets", "bh e@\tV\tn V t s");
result.add("ba-\tro-\tni", "bh Q@\t@U\tn i:");
result.add("ba-\tron", "bh {\tr V n");
result.add("ba-\trons", "bh {\tr V n z");
result.add("ba-\tron's", "bh {\tr V n z");
result.add("ba-\troque", "bh @r\t@U k");
result.add("ba-\truch", "bh Q@\tu: k");
result.add("ba-\try-\tshni-\tkov", "bh @r\tI S\tn I\tk Q v");
result.add("ba-\ts-\tler", "bh eI\tz V\tl @r");
result.add("ba-\tsal", "bh eI\ts V l");
result.add("ba-\tsalt", "bh V\ts O: l t");
result.add("ba-\tsalts", "bh V\ts O: l t s");
result.add("ba-\tsel", "bh Q\tz V l");
result.add("ba-\tsen-\tji", "bh V\ts e n\tdZ i:");
result.add("ba-\tses", "bh eI\ts V z");
result.add("ba-\tse's", "bh eI\ts V z");
result.add("ba-\tsham", "bh {\tS V m");
result.add("ba-\tshaw", "bh I\tS O:");
result.add("ba-\tsher", "bh {\tS @r");
result.add("ba-\tshers", "bh {\tS @r z");
result.add("ba-\tshes", "bh {\tS V z");
result.add("ba-\tshing", "bh {\tS I N");
result.add("ba-\tsic", "bh eI\ts I k");
result.add("ba-\tsical-\tly", "bh eI\ts I k\tl i:");
result.add("ba-\tsics", "bh eI\ts I k s");
result.add("ba-\tsic's", "bh eI\ts I k s");
result.add("ba-\tsin", "bh eI\ts I n");
result.add("ba-\tsin-\tger", "bh eI\ts I\tN @r");
result.add("ba-\tsing", "bh eI\ts I N");
result.add("ba-\tsins", "bh eI\ts V n z");
result.add("ba-\tsis", "bh eI\ts I s");
result.add("ba-\tsle", "bh {\ts V l");
result.add("ba-\tson", "bh {\ts V n");
result.add("ba-\tsye", "bh {\ts aI");
result.add("ba-\tta-\tvi-\ta", "bh V\tt eI\tv i:\tV");
result.add("ba-\ttaan", "bh V\tt Q n");
result.add("ba-\ttan", "bh eI\tt V n");
result.add("ba-\tted", "bh eI\tt V d");
result.add("ba-\tther", "bh {\tD @r");
result.add("ba-\tthers", "bh {\tD @r z");
result.add("ba-\tthing", "bh eI\tD I N");
result.add("ba-\ttho-\tlith", "bh {\tT V\tl I T");
result.add("ba-\ttho-\tliths", "bh {\tT V\tl I T s");
result.add("ba-\ttik", "bh V\tt i: k");
result.add("ba-\ttiks", "bh {\tt I k s");
result.add("ba-\ttis-\tta", "bh V\tt I s\tt V");
result.add("ba-\tton", "bh V\tt Q n");
result.add("ba-\ttons", "bh {\tt Q n z");
result.add("ba-\ttor", "bh Q\tt O@");
result.add("ba-\tva-\tri-\ta", "bh V\tv e@\ti:\tV");
result.add("ba-\tva-\tri-\tan", "bh V\tv e@\ti:\tV n");
result.add("ba-\tva-\tri-\ta's", "bh V\tv e@\ti:\tV z");
result.add("ba-\tyar", "bh eI\t@r");
result.add("ba-\tyard", "bh eI\t@r d");
result.add("ba-\tyer", "bh eI\t@r");
result.add("ba-\tyer's", "bh eI\t@r z");
result.add("ba-\tying", "bh eI\tI N");
result.add("ba-\tyo-\tnet", "bh eI\tV\tn e t");
result.add("ba-\tyo-\tnets", "bh eI\tV\tn e t s");
result.add("ba-\tyonne", "bh eI\tj @U n");
result.add("ba-\tyou", "bh aI\tu:");
result.add("ba-\tyous", "bh aI\tu: z");
result.add("ba-\tzaar", "bh V\tz Q@");
result.add("ba-\tzaars", "bh V\tz Q@ z");
result.add("ba-\tzar", "bh V\tz Q@");
result.add("ba-\tzoo-\tka", "bh V\tz u:\tk V");
result.add("ba-\tzoo-\tkas", "bh V\tz u:\tk V z");
result.add("baal-\tbek", "bh Q l\tb e k");
result.add("baar", "bh Q@");
result.add("baas", "bh Q z");
result.add("bab", "bh { b");
result.add("bab-\tb-\tling", "bh {\tb V\tl I N");
result.add("bab-\tba-\tge's", "bh {\tb I\tdZ V z");
result.add("bab-\tbage", "bh {\tb I dZ");
result.add("bab-\tbit", "bh {\tb I t");
result.add("bab-\tbitt", "bh {\tb I t");
result.add("bab-\tbitts", "bh {\tb I t s");
result.add("bab-\tbitt's", "bh {\tb I t s");
result.add("bab-\tble", "bh {\tb V l");
result.add("bab-\tbled", "bh {\tb V l d");
result.add("bab-\tbler", "bh { b\tl @r");
result.add("bab-\tblers", "bh { b\tl @r z");
result.add("bab-\tcock", "bh { b\tk O: k");
result.add("bab-\tka", "bh { b\tk V");
result.add("bab-\tson", "bh { b\ts V n");
result.add("babb", "bh { b");
result.add("babe", "bh eI b");
result.add("babes", "bh eI b z");
result.add("babs", "bh { b z");
result.add("bac-\tca-\tlau-\tre-\tate", "bh {\tk V\tl O@\ti:\tV t");
result.add("bac-\tca-\trat", "bh Q\tk @r\tQ");
result.add("bac-\tcha-\tna-\tlia", "bh {\tk V\tn eI l\tj V");
result.add("bac-\tchus", "bh {\tk V s");
result.add("bac-\tker", "bh {\tk @r");
result.add("bac-\tkers", "bh {\tk @r z");
result.add("bac-\tker's", "bh {\tk @r z");
result.add("bac-\tte-\tri-\ta", "bh { k\tt I@\ti:\tV");
result.add("bac-\tte-\tri-\tal", "bh { k\tt I@\ti:\tV l");
result.add("bac-\tte-\tri-\to-\tlo-\tgy", "bh { k\tt I@\ti:\tQ\tl V\tdZ i:");
result.add("bac-\tte-\tri-\tum", "bh { k\tt I@\ti:\tV m");
result.add("bach", "bh Q k");
result.add("bach-\tman", "bh Q k\tm V n");
result.add("bache", "bh { tS");
result.add("bache-\tlors", "bh { tS\tl @r z");
result.add("back", "bh { k");
result.add("back-\tbi-\tting", "bh { k\tb aI\tt I N");
result.add("back-\tbite", "bh { k\tb aI t");
result.add("back-\tboard", "bh { k\tb O: d");
result.add("back-\tbone", "bh { k\tb @U n");
result.add("back-\tda-\tted", "bh { k\td eI\tt V d");
result.add("back-\tdate", "bh { k\td eI t");
result.add("back-\tdoor", "bh { k\td O@");
result.add("back-\tdrop", "bh { k\td r Q p");
result.add("back-\tdrops", "bh { k\td r Q p s");
result.add("back-\tfi-\tr-\ting", "bh { k\tf aI\t@r\tI N");
result.add("back-\tfi-\tred", "bh { k\tf aI\t@r d");
result.add("back-\tfi-\tres", "bh { k\tf aI\t@r z");
result.add("back-\tfield", "bh { k\tf i: l d");
result.add("back-\tfire", "bh { k\tf aI r");
result.add("back-\tgam-\tmon", "bh { k\tg {\tm V n");
result.add("back-\tground", "bh { k\tg r aU n d");
result.add("back-\tgrounds", "bh { k\tg r aU n d z");
result.add("back-\than-\tded", "bh { k\th { n\td V d");
result.add("back-\thand", "bh { k\th { n d");
result.add("back-\thaus", "bh { k\th aU s");
result.add("back-\thoe", "bh { k\th @U");
result.add("back-\ting", "bh {\tk I N");
result.add("back-\tlash", "bh { k\tl { S");
result.add("back-\tless", "bh { k\tl V s");
result.add("back-\tlight", "bh { k\tl aI t");
result.add("back-\tlights", "bh { k\tl aI t s");
result.add("back-\tlist", "bh { k\tl I s t");
result.add("back-\tlog", "bh { k\tl Q g");
result.add("back-\tlogged", "bh { k\tl Q g d");
result.add("back-\tlogs", "bh { k\tl O: g z");
result.add("back-\tpack", "bh { k\tp { k");
result.add("back-\tpacks", "bh { k\tp { k s");
result.add("back-\tpe-\tda-\tling", "bh { k\tp e\td V\tl I N");
result.add("back-\tpe-\tdal", "bh { k\tp e\td V l");
result.add("back-\tpe-\tdaled", "bh { k\tp e\td V l d");
result.add("back-\trest", "bh { k\tr e s t");
result.add("back-\troom", "bh { k\tr u: m");
result.add("back-\tsaw", "bh { k\ts Q");
result.add("back-\tseat", "bh { k\ts i: t");
result.add("back-\tset", "bh { k\ts e t");
result.add("back-\tside", "bh { k\ts aI d");
result.add("back-\tslap-\tping", "bh { k\ts l {\tp I N");
result.add("back-\twoods-\tman", "bh { k\tw U d\tz m V n");
result.add("back-\tyard", "bh { k\tj Q@ d");
result.add("back-\tyards", "bh { k\tj Q@ d z");
result.add("backed", "bh { k t");
result.add("backs", "bh { k s");
result.add("backs-\tlap", "bh { k\ts l { p");
result.add("backs-\tlap-\tping", "bh { k\ts l {\tp I N");
result.add("backs-\tlash", "bh { k\ts l { S");
result.add("backs-\tli-\tding", "bh { k\ts l aI\td I N");
result.add("backs-\tlide", "bh { k\ts l aI d");
result.add("backs-\tpin", "bh { k\ts p I n");
result.add("backs-\ttage", "bh { k\ts t eI dZ");
result.add("backs-\ttairs", "bh { k\ts t e@ z");
result.add("backs-\ttitch", "bh { k\ts t I tS");
result.add("backs-\ttop", "bh { k\ts t Q p");
result.add("bad", "bh { d");
result.add("bad-\tge-\tring", "bh {\tdZ @r\tI N");
result.add("bad-\tger", "bh {\tdZ @r");
result.add("bad-\tgered", "bh {\tdZ @r d");
result.add("bad-\tgers", "bh {\tdZ @r z");
result.add("bad-\tger's", "bh {\tdZ @r z");
result.add("bad-\tges", "bh {\tdZ V z");
result.add("bad-\tland", "bh { d\tl { n d");
result.add("bad-\tlands", "bh { d\tl { n d z");
result.add("bad-\tly", "bh { d\tl i:");
result.add("bad-\tman", "bh { d\tm V n");
result.add("bad-\tmin-\tton", "bh { d\tm I n\tt V n");
result.add("bad-\tmin-\ttons", "bh { d\tm I n\tt V n z");
result.add("bad-\tness", "bh { d\tn V s");
result.add("bade", "bh eI d");
result.add("badge", "bh { dZ");
result.add("bae", "bh aI");
result.add("bae-\tde-\tker", "bh eI\td V\tk @r");
result.add("bae-\tde-\tker's", "bh eI\td V\tk @r z");
result.add("baer", "bh e@");
result.add("baf-\tf-\tling", "bh {\tf V\tl I N");
result.add("baf-\tfle", "bh {\tf V l");
result.add("baf-\tfled", "bh {\tf V l d");
result.add("baf-\tfles", "bh {\tf V l z");
result.add("bag", "bh { g");
result.add("bag-\tdad", "bh { g\td { d");
result.add("bag-\tful", "bh { g\tf U l");
result.add("bag-\tgage", "bh {\tg V dZ");
result.add("bag-\tgett", "bh {\tg I t");
result.add("bag-\tgi-\tness", "bh {\tg i:\tn V s");
result.add("bag-\tgie", "bh {\tg i:");
result.add("bag-\tging", "bh {\tg I N");
result.add("bag-\tgott", "bh {\tg V t");
result.add("bag-\tgy", "bh {\tg i:");
result.add("bag-\tley", "bh { g\tl i:");
result.add("bag-\tman", "bh { g\tm V n");
result.add("bag-\tpi-\tper", "bh { g\tp aI\tp @r");
result.add("bag-\tpipe", "bh { g\tp aI p");
result.add("bag-\tpipes", "bh { g\tp aI p s");
result.add("bag-\twell", "bh { g\tw e l");
result.add("bagge", "bh { g");
result.add("bagged", "bh { g d");
result.add("baggs", "bh { g z");
result.add("bagh-\tdad", "bh { g\td { d");
result.add("bagh-\tdad's", "bh { g\td { d z");
result.add("bags", "bh { g z");
result.add("bah", "bh Q");
result.add("bah-\tner", "bh Q\tn @r");
result.add("bah-\trai-\tni", "bh @r\teI\tn i:");
result.add("bah-\trai-\tni-\tan", "bh @r\teI\tn i:\tV n");
result.add("bah-\trai-\tnis", "bh @r\teI\tn i: z");
result.add("bah-\train", "bh Q@\teI n");
result.add("bah-\train's", "bh Q@\teI n z");
result.add("bahr", "bh e@");
result.add("baht", "bh Q t");
result.add("bai-\tler", "bh eI\tl @r");
result.add("bai-\tley", "bh eI\tl i:");
result.add("bai-\tleys", "bh eI\tl i: z");
result.add("bai-\tley's", "bh eI\tl i: z");
result.add("bai-\tli-\twick", "bh eI\tl I\tw I k");
result.add("bai-\tlie", "bh eI\tl i:");
result.add("bai-\tliff", "bh eI\tl I f");
result.add("bai-\tliffs", "bh eI\tl I f s");
result.add("bai-\tling", "bh eI\tl I N");
result.add("bai-\tlor", "bh eI\tl @r");
result.add("bai-\tlout", "bh eI\tl aU t");
result.add("bai-\tlouts", "bh eI\tl aU t s");
result.add("bai-\tly", "bh eI\tl i:");
result.add("bai-\tted", "bh eI\tt V d");
result.add("bai-\tting", "bh eI\tt I N");
result.add("bail", "bh eI l");
result.add("bail-\tlie", "bh eI\tl i:");
result.add("bail-\tly", "bh eI\tl i:");
result.add("baile", "bh eI l");
result.add("bailed", "bh eI l d");
result.add("bails", "bh eI l z");
result.add("bain", "bh eI n");
result.add("bain-\tbrid-\tge's", "bh eI n\tb r I\tdZ V z");
result.add("bain-\tbridge", "bh eI n\tb r I dZ");
result.add("bain-\tter", "bh eI n\tt @r");
result.add("baines", "bh eI n z");
result.add("bains", "bh eI n z");
result.add("bain's", "bh eI n z");
result.add("baird", "bh e@ d");
result.add("baird's", "bh e@ d z");
result.add("bais-\tden", "bh eI s\td V n");
result.add("bait", "bh eI t");
result.add("baits", "bh eI t s");
result.add("baize", "bh eI z");
result.add("bak", "bh { k");
result.add("bak-\tshi", "bh { k\tS i:");
result.add("bake", "bh eI k");
result.add("bake-\tman", "bh eI k\tm V n");
result.add("bake-\toff", "bh eI\tk O: f");
result.add("bake-\tware", "bh eI k\tw e@");
result.add("bake-\twell", "bh eI k\tw e l");
result.add("baked", "bh eI k t");
result.add("bakes", "bh eI k s");
result.add("bakke", "bh { k");
result.add("bakst", "bh { k s t");
result.add("bal", "bh { l");
result.add("bal-\tbo", "bh { l\tb @U");
result.add("bal-\tbo-\ta", "bh Q l\tb @U\tV");
result.add("bal-\tbrig-\tgan", "bh { l\tb r I\tg V n");
result.add("bal-\tbrig-\tgans", "bh { l\tb r I\tg V n z");
result.add("bal-\tcer", "bh eI l\ts @r");
result.add("bal-\tco-\tnies", "bh { l\tk V\tn i: z");
result.add("bal-\tco-\tny", "bh { l\tk V\tn i:");
result.add("bal-\tdas-\tsa-\tre", "bh Q l\td Q\ts Q@\ti:");
result.add("bal-\tder", "bh O: l\td @r");
result.add("bal-\tder-\tdash", "bh O: l\td @r\td { S");
result.add("bal-\tding", "bh O: l\td I N");
result.add("bal-\tdric", "bh { l\td r I k");
result.add("bal-\tdridge", "bh { l\td r I dZ");
result.add("bal-\tdur", "bh Q l\td U@");
result.add("bal-\tfour", "bh { l\tf O@");
result.add("bal-\tka-\tni-\tza-\ttion", "bh O: l\tk V\tn V\tz eI\tS V n");
result.add("bal-\tka-\tnize", "bh O: l\tk V\tn aI z");
result.add("bal-\tka-\tnized", "bh O: l\tk V\tn aI z d");
result.add("bal-\tkan", "bh O: l\tk V n");
result.add("bal-\tkans", "bh O: l\tk V n z");
result.add("bal-\tkin", "bh { l\tk I n");
result.add("bal-\tking", "bh O:\tk I N");
result.add("bal-\tko", "bh { l\tk @U");
result.add("bal-\tky", "bh O:\tk i:");
result.add("bal-\tla", "bh {\tl V");
result.add("bal-\tlad", "bh {\tl V d");
result.add("bal-\tlade", "bh V\tl Q d");
result.add("bal-\tlads", "bh {\tl V d z");
result.add("bal-\tlan-\ttine", "bh {\tl V n\tt aI n");
result.add("bal-\tlan-\ttyne", "bh V\tl { n\tt aI n");
result.add("bal-\tlance", "bh Q\tl V n s");
result.add("bal-\tlard", "bh {\tl @r d");
result.add("bal-\tlard's", "bh {\tl @r d z");
result.add("bal-\tlas", "bh {\tl V z");
result.add("bal-\tlast", "bh {\tl V s t");
result.add("bal-\tlasts", "bh {\tl V s t s");
result.add("bal-\tle-\tri-\tna", "bh {\tl @r\ti:\tn V");
result.add("bal-\tle-\tri-\tnas", "bh {\tl @r\ti:\tn V z");
result.add("bal-\tlen-\tgee", "bh V\tl e N\tg i:");
result.add("bal-\tlen-\tti-\tne", "bh Q\tl e n\tt i:\tn i:");
result.add("bal-\tler", "bh O:\tl @r");
result.add("bal-\tles-\tte-\tros", "bh {\tl V s\tt @r\t@U z");
result.add("bal-\tlet", "bh {\tl eI");
result.add("bal-\tlets", "bh {\tl eI z");
result.add("bal-\tlet's", "bh {\tl eI z");
result.add("bal-\tli", "bh {\tl i:");
result.add("bal-\tliett", "bh {\tl i: t");
result.add("bal-\tlin-\tger", "bh O:\tl I n\tdZ @r");
result.add("bal-\tling", "bh O:\tl I N");
result.add("bal-\tlis-\ttic", "bh V\tl I s\tt I k");
result.add("bal-\tlis-\ttics", "bh V\tl I s\tt I k s");
result.add("bal-\tlo", "bh {\tl @U");
result.add("bal-\tlo-\tting", "bh {\tl V\tt I N");
result.add("bal-\tlon", "bh {\tl V n");
result.add("bal-\tloo-\tning", "bh V\tl u:\tn I N");
result.add("bal-\tloo-\tnist", "bh V\tl u:\tn V s t");
result.add("bal-\tloo-\tnists", "bh V\tl u:\tn V s t s");
result.add("bal-\tloon", "bh V\tl u: n");
result.add("bal-\tlooned", "bh V\tl u: n d");
result.add("bal-\tloons", "bh V\tl u: n z");
result.add("bal-\tlot", "bh {\tl V t");
result.add("bal-\tlots", "bh {\tl V t s");
result.add("bal-\tlou", "bh V\tl u:");
result.add("bal-\tlow", "bh {\tl @U");
result.add("bal-\tly", "bh {\tl i:");
result.add("bal-\tly-\thoo", "bh {\tl i:\th u:");
result.add("bal-\tly-\thooed", "bh {\tl i:\th u: d");
result.add("bal-\tly's", "bh {\tl i: z");
result.add("bal-\tmer", "bh Q\tm @r");
result.add("bal-\tmo-\tral", "bh { l\tm O@\tV l");
result.add("bal-\tmo-\trals", "bh { l\tm O@\tV l z");
result.add("bal-\tmy", "bh Q\tm i:");
result.add("bal-\tsa", "bh O: l\ts V");
result.add("bal-\tsa-\tmo", "bh Q l\ts Q\tm @U");
result.add("bal-\tsam", "bh O: l\ts V m");
result.add("bal-\tter", "bh O: l\tt @r");
result.add("bal-\ttha-\tsar", "bh { l\tT V\ts @r");
result.add("bal-\ttha-\tzar", "bh { l\tT V\tz @r");
result.add("bal-\tti-\tmore", "bh O: l\tt I\tm O@");
result.add("bal-\tti-\tmore's", "bh O: l\tt I\tm O@ z");
result.add("bal-\ttic", "bh O: l\tt I k");
result.add("balch", "bh { l tS");
result.add("bald", "bh O: l d");
result.add("bald-\tly", "bh O: l\td l i:");
result.add("bald-\tness", "bh O: l\td n V s");
result.add("bald-\twin", "bh O: l\td w I n");
result.add("bald-\twin's", "bh O: l\td w I n z");
result.add("bale", "bh eI l");
result.add("bale-\tful", "bh eI l\tf V l");
result.add("bales", "bh eI l z");
result.add("balk", "bh O: k");
result.add("balked", "bh O: k t");
result.add("balks", "bh O: k s");
result.add("ball", "bh O: l");
result.add("ball-\tcock", "bh O: l\tk Q k");
result.add("ball-\tcocks", "bh O: l\tk Q k s");
result.add("ball-\tgame", "bh O: l\tg eI m");
result.add("ball-\tman", "bh O: l\tm V n");
result.add("ball-\tpark", "bh O: l\tp Q@ k");
result.add("ball-\tparks", "bh O: l\tp Q@ k s");
result.add("ball-\tpla-\tyer", "bh O: l\tp l eI\t@r");
result.add("ball-\tpla-\tyers", "bh O: l\tp l eI\t@r z");
result.add("ball-\tpoint", "bh O: l\tp OI n t");
result.add("ball-\tpoints", "bh O: l\tp OI n t s");
result.add("ball-\troom", "bh O: l\tr u: m");
result.add("ball-\trooms", "bh O: l\tr u: m z");
result.add("balled", "bh O: l d");
result.add("balls", "bh O: l z");
result.add("ball's", "bh O: l z");
result.add("balm", "bh Q m");
result.add("balms", "bh Q m z");
result.add("balt-\tsa", "bh O: l\tt s V");
result.add("balt's", "bh O: l t s");
result.add("bam", "bh { m");
result.add("bam-\tber-\tger", "bh { m\tb @r\tg @r");
result.add("bam-\tberg", "bh { m\tb @r g");
result.add("bam-\tbi", "bh { m\tb i:");
result.add("bam-\tbi-\tno", "bh { m\tb i:\tn @U");
result.add("bam-\tbi-\tnos", "bh { m\tb i:\tn @U z");
result.add("bam-\tboo", "bh { m\tb u:");
result.add("bam-\tford", "bh { m\tf @r d");
result.add("ban", "bh { n");
result.add("ban-\tbu-\try", "bh { n\tb e@\ti:");
result.add("ban-\tca", "bh { N\tk V");
result.add("ban-\tco", "bh { N\tk @U");
result.add("ban-\tda", "bh { n\td V");
result.add("ban-\tda-\tges", "bh { n\td I\tdZ V z");
result.add("ban-\tda-\tna", "bh { n\td {\tn V");
result.add("ban-\tda-\tnas", "bh { n\td {\tn V z");
result.add("ban-\tdage", "bh { n\td I dZ");
result.add("ban-\tdaged", "bh { n\td I dZ d");
result.add("ban-\tdaid", "bh { n\td eI d");
result.add("ban-\tdar", "bh { n\td Q@");
result.add("ban-\tded", "bh { n\td V d");
result.add("ban-\tdel", "bh { n\td V l");
result.add("ban-\tder", "bh { n\td @r");
result.add("ban-\tdi-\tcoots", "bh { n\td I\tk u: t s");
result.add("ban-\tdied", "bh { n\td i: d");
result.add("ban-\tding", "bh { n\td I N");
result.add("ban-\tdit", "bh { n\td I t");
result.add("ban-\tdit-\try", "bh { n\td I t\tr i:");
result.add("ban-\tdits", "bh { n\td I t s");
result.add("ban-\tdy", "bh { n\td i:");
result.add("ban-\tga-\tlore", "bh { N\tg V\tl O@");
result.add("ban-\tga-\tlore's", "bh { N\tg V\tl O@ z");
result.add("ban-\tger", "bh {\tN @r");
result.add("ban-\tgers", "bh {\tN @r z");
result.add("ban-\tging", "bh {\tN I N");
result.add("ban-\tgish", "bh {\tN I S");
result.add("ban-\tgle", "bh { N\tg V l");
result.add("ban-\tgor", "bh { N\tg @r");
result.add("ban-\tja", "bh Q n\tj V");
result.add("ban-\tjo", "bh { n\tdZ @U");
result.add("ban-\tka-\tble", "bh { N\tk V\tb V l");
result.add("ban-\tker", "bh { N\tk @r");
result.add("ban-\tkers", "bh { N\tk @r z");
result.add("ban-\tker's", "bh { N\tk @r z");
result.add("ban-\tking", "bh { N\tk I N");
result.add("ban-\tking's", "bh { N\tk I N z");
result.add("ban-\tknote", "bh { N\tk n @U t");
result.add("ban-\tner", "bh {\tn @r");
result.add("ban-\tner-\tman", "bh {\tn @r\tm V n");
result.add("ban-\tners", "bh {\tn @r z");
result.add("ban-\tner's", "bh {\tn @r z");
result.add("ban-\tning", "bh {\tn I N");
result.add("ban-\tnis-\tter", "bh {\tn V s\tt @r");
result.add("ban-\tnon", "bh {\tn V n");
result.add("ban-\tquet", "bh { N\tk w V t");
result.add("ban-\tquets", "bh { N\tk w V t s");
result.add("ban-\tquo's", "bh { N\tk w @U z");
result.add("ban-\tshee", "bh { n\tS i:");
result.add("ban-\ttam", "bh { n\tt V m");
result.add("ban-\ttams", "bh { n\tt V m z");
result.add("ban-\ttam's", "bh { n\tt V m z");
result.add("ban-\tte-\tring", "bh { n\tt @r\tI N");
result.add("ban-\tter", "bh { n\tt @r");
result.add("ban-\ttered", "bh { n\tt @r d");
result.add("ban-\ttu", "bh { n\tt u:");
result.add("ban-\tville", "bh Q n\tv I l");
result.add("ban-\tya", "bh Q n\tj V");
result.add("ban-\tyan", "bh { n\tj V n");
result.add("banc", "bh { N k");
result.add("banc-\troft", "bh { N\tk r O: f t");
result.add("banc-\troft's", "bh { n\tk r O: f t s");
result.add("band", "bh { n d");
result.add("band-\taid", "bh { n\td eI d");
result.add("band-\twa-\tgon", "bh { n\td w {\tg V n");
result.add("band-\twidth", "bh { n\td w I d T");
result.add("bane", "bh eI n");
result.add("banes", "bh eI n z");
result.add("banff", "bh { n f");
result.add("bang", "bh { N");
result.add("bang-\tkok", "bh { N\tk Q k");
result.add("bang-\tkok's", "bh { N\tk Q k s");
result.add("bang-\tla-\tde-\tshi", "bh { N\tl V\td e\tS i:");
result.add("bang-\tla-\tde-\tshis", "bh { N\tl V\td e\tS i: z");
result.add("bang-\tla-\tde-\tsh's", "bh { N\tl V\td e\tS V z");
result.add("bang-\tla-\tdesh", "bh { N\tl V\td e S");
result.add("bange", "bh { n dZ");
result.add("banged", "bh { N d");
result.add("bangs", "bh { N z");
result.add("bank", "bh { N k");
result.add("bank-\tcard", "bh { N\tk Q@ d");
result.add("bank-\thead", "bh { N\tk h e d");
result.add("bank-\tnotes", "bh { N\tk n @U t s");
result.add("bank-\trol-\tling", "bh { N\tk r @U\tl I N");
result.add("bank-\troll", "bh { N\tk r @U l");
result.add("bank-\trolled", "bh { N\tk r @U l d");
result.add("bank-\trolls", "bh { N\tk r @U l z");
result.add("bank-\trup-\tted", "bh { N\tk r V p\tt V d");
result.add("bank-\trup-\tting", "bh { N\tk r V p\tt I N");
result.add("bank-\trupt", "bh { N\tk r V p t");
result.add("bank-\trupt-\tcies", "bh { N\tk r V p\tt s i: z");
result.add("bank-\trupt-\tcy", "bh { N\tk r V p\ts i:");
result.add("bank-\trupt-\tcy's", "bh { N\tk r V p\ts i: z");
result.add("banked", "bh { N k t");
result.add("banks", "bh { N k s");
result.add("bank's", "bh { N k s");
result.add("banks'", "bh { N k s");
result.add("banks-\tton", "bh { N\tk s t V n");
result.add("bann", "bh { n");
result.add("banned", "bh { n d");
result.add("banque", "bh { N k");
result.add("bans", "bh { n z");
result.add("bao", "bh aU");
result.add("bap-\tti-\tsm", "bh { p\tt I\tz V m");
result.add("bap-\tti-\tsms", "bh { p\tt I\tz V m z");
result.add("bap-\ttis-\tmal", "bh { p\tt I z\tm V l");
result.add("bap-\ttis-\tta", "bh { p\tt I s\tt V");
result.add("bap-\ttist", "bh { p\tt I s t");
result.add("bap-\ttiste", "bh V p\tt I s t");
result.add("bap-\ttiste-\try", "bh { p\tt I s\tt r i:");
result.add("bap-\ttists", "bh { p\tt I s t s");
result.add("bap-\ttize", "bh { p\tt aI z");
result.add("bap-\ttized", "bh { p\tt aI z d");
result.add("bar", "bh Q@");
result.add("bar-\tba", "bh Q@\tb V");
result.add("bar-\tba-\tdos", "bh Q@\tb eI\td @U s");
result.add("bar-\tba-\tra", "bh Q@\tb @r\tV");
result.add("bar-\tba-\tra's", "bh Q@\tb @r\tV z");
result.add("bar-\tba-\tri-\tan", "bh Q@\tb e@\ti:\tV n");
result.add("bar-\tba-\tri-\tans", "bh Q@\tb e@\ti:\tV n z");
result.add("bar-\tba-\tri-\tsm", "bh Q@\tb @r\tI\tz V m");
result.add("bar-\tba-\tri-\tty", "bh Q@\tb {\tr I\tt i:");
result.add("bar-\tba-\tric", "bh Q@\tb {\tr I k");
result.add("bar-\tba-\trous", "bh Q@\tb @r\tV s");
result.add("bar-\tba-\try", "bh Q@\tb @r\ti:");
result.add("bar-\tbe-\tcue", "bh Q@\tb I k\tj u:");
result.add("bar-\tbe-\tcue-\ting", "bh Q@\tb I k\tj u:\tI N");
result.add("bar-\tbe-\tcued", "bh Q@\tb I k\tj u: d");
result.add("bar-\tbe-\tcues", "bh Q@\tb I k\tj u: z");
result.add("bar-\tbe-\tcue's", "bh Q@\tb I k\tj u: z");
result.add("bar-\tbe-\tque", "bh Q@\tb I k\tj u:");
result.add("bar-\tbe-\tqued", "bh Q@\tb I k\tj u: d");
result.add("bar-\tbe-\tques", "bh Q@\tb I k\tj u: z");
result.add("bar-\tbe-\tra", "bh Q@\tb e@\tV");
result.add("bar-\tbe-\tro", "bh Q@\tb e@\t@U");
result.add("bar-\tbeau", "bh Q@\tb @U");
result.add("bar-\tbee", "bh Q@\tb i:");
result.add("bar-\tbell", "bh Q@\tb e l");
result.add("bar-\tbells", "bh Q@\tb e l z");
result.add("bar-\tbels", "bh Q@\tb V l z");
result.add("bar-\tber", "bh Q@\tb @r");
result.add("bar-\tber-\tshop", "bh Q@\tb @r\tS Q p");
result.add("bar-\tbers", "bh Q@\tb @r z");
result.add("bar-\tber's", "bh Q@\tb @r z");
result.add("bar-\tbette", "bh Q@\tb e t");
result.add("bar-\tbi-\ttu-\trate", "bh Q@\tb I\ttS @r\tV t");
result.add("bar-\tbi-\ttu-\trates", "bh Q@\tb I\ttS @r\tV t s");
result.add("bar-\tbie", "bh Q@\tb i:");
result.add("bar-\tbies", "bh Q@\tb i: z");
result.add("bar-\tbie's", "bh Q@\tb i: z");
result.add("bar-\tbo-\tza", "bh Q@\tb @U\tz V");
result.add("bar-\tbone", "bh Q@\tb @U n");
result.add("bar-\tbour", "bh Q@\tb @r");
result.add("bar-\tbour's", "bh Q@\tb @r z");
result.add("bar-\tbra", "bh Q@ b\tr V");
result.add("bar-\tbre", "bh Q@\tb @r");
result.add("bar-\tby", "bh Q@\tb i:");
result.add("bar-\tca", "bh Q@\tk V");
result.add("bar-\tce-\tlo-\tna", "bh Q@\ts V\tl @U\tn V");
result.add("bar-\tcel-\tla", "bh Q@\ts e\tl V");
result.add("bar-\tco", "bh Q@\tk @U");
result.add("bar-\tco's", "bh Q@\tk @U z");
result.add("bar-\tcus", "bh Q@\tk V s");
result.add("bar-\tden", "bh Q@\td V n");
result.add("bar-\tdo", "bh Q@\td @U");
result.add("bar-\tdolph", "bh Q@\td Q l f");
result.add("bar-\tdulph", "bh Q@\td V l f");
result.add("bar-\ten-\tboim's", "bh e@\tV n\tb OI m z");
result.add("bar-\tfuss", "bh Q@\tf V s");
result.add("bar-\tgai-\tner", "bh Q@\tg @\tn @r");
result.add("bar-\tgai-\tners", "bh Q@\tg @\tn @r z");
result.add("bar-\tgai-\tning", "bh Q@\tg @\tn I N");
result.add("bar-\tgain", "bh Q@\tg @ n");
result.add("bar-\tgained", "bh Q@\tg @ n d");
result.add("bar-\tgains", "bh Q@\tg @ n z");
result.add("bar-\tger", "bh Q@\tdZ @r");
result.add("bar-\tges", "bh Q@\tdZ V z");
result.add("bar-\tkan", "bh Q@\tk V n");
result.add("bar-\tker", "bh Q@\tk @r");
result.add("bar-\tkers", "bh Q@\tk @r z");
result.add("bar-\tkey", "bh Q@\tk i:");
result.add("bar-\tking", "bh Q@\tk I N");
result.add("bar-\tlet-\tta", "bh Q@\tl e\tt V");
result.add("bar-\tley", "bh Q@\tl i:");
result.add("bar-\tlow", "bh Q@\tl @U");
result.add("bar-\tman", "bh Q@\tm V n");
result.add("bar-\tmitz-\tvah", "bh Q@\tm I t\ts v V");
result.add("bar-\tna", "bh Q@\tn V");
result.add("bar-\tna-\tbas", "bh Q@\tn V\tb V s");
result.add("bar-\tna-\tby", "bh Q@\tn V\tb i:");
result.add("bar-\tna-\tby's", "bh Q@\tn V\tb i: z");
result.add("bar-\tna-\tcle", "bh Q@\tn V\tk V l");
result.add("bar-\tna-\tcles", "bh Q@\tn V\tk V l z");
result.add("bar-\tnard", "bh Q@\tn @r r d");
result.add("bar-\tnard's", "bh Q@\tn @r d z");
result.add("bar-\tnet", "bh Q@\tn e t");
result.add("bar-\tnett", "bh Q@\tn e t");
result.add("bar-\tnett's", "bh Q@\tn e t s");
result.add("bar-\tney", "bh Q@\tn i:");
result.add("bar-\tneys", "bh Q@\tn i: z");
result.add("bar-\tney's", "bh Q@\tn i: z");
result.add("bar-\tnum", "bh Q@\tn V m");
result.add("bar-\tny", "bh Q@\tn i:");
result.add("bar-\tra", "bh Q@\tV");
result.add("bar-\tra-\tcu-\tda", "bh e@\tV\tk u:\td V");
result.add("bar-\tra-\tgan", "bh e@\tV\tg V n");
result.add("bar-\tra-\tges", "bh @r\tQ\tZ V z");
result.add("bar-\tra-\tza", "bh Q@\tQ\tz V");
result.add("bar-\track", "bh {\tr V k");
result.add("bar-\tracks", "bh {\tr V k s");
result.add("bar-\trage", "bh @r\tQ Z");
result.add("bar-\traged", "bh @r\tQ Z d");
result.add("bar-\tran-\tco", "bh Q@\tQ n\tk @U");
result.add("bar-\tras", "bh {\tr V z");
result.add("bar-\tre", "bh e@\ti:");
result.add("bar-\tre-\tling", "bh {\tr V\tl I N");
result.add("bar-\tre-\tra", "bh Q@\te@\tV");
result.add("bar-\trel", "bh {\tr V l");
result.add("bar-\treled", "bh {\tr V l d");
result.add("bar-\trels", "bh {\tr V l z");
result.add("bar-\tren", "bh {\tr V n");
result.add("bar-\trens", "bh {\tr V n z");
result.add("bar-\tret", "bh {\tr I t");
result.add("bar-\trett", "bh {\tr I t");
result.add("bar-\trette", "bh @r\te t");
result.add("bar-\tri-\tca-\tded", "bh {\tr I\tk eI\td I d");
result.add("bar-\tri-\tcade", "bh {\tr I\tk eI d");
result.add("bar-\tri-\tcades", "bh {\tr I\tk eI d z");
result.add("bar-\tri-\ter", "bh {\tr i:\t@r");
result.add("bar-\tri-\ters", "bh {\tr i:\t@r z");
result.add("bar-\tri-\to", "bh Q@\ti:\t@U");
result.add("bar-\tri-\tos", "bh Q@\ti:\t@U z");
result.add("bar-\trie", "bh {\tr i:");
result.add("bar-\trien-\ttos", "bh Q@\ti: n\tt @U z");
result.add("bar-\trin-\tger", "bh {\tr I\tN @r");
result.add("bar-\tring", "bh Q@\tI N");
result.add("bar-\tring-\tton", "bh {\tr I N\tt V n");
result.add("bar-\trings", "bh Q@\tI N z");
result.add("bar-\tris", "bh {\tr I s");
result.add("bar-\tris-\tter", "bh {\tr I s\tt @r");
result.add("bar-\tris-\tters", "bh {\tr I s\tt @r z");
result.add("bar-\tron", "bh {\tr V n");
result.add("bar-\tron's", "bh {\tr V n z");
result.add("bar-\troom", "bh Q@\tr u: m");
result.add("bar-\tros", "bh Q@\t@U z");
result.add("bar-\trow", "bh {\tr @U");
result.add("bar-\trow-\tman", "bh {\tr @U\tm V n");
result.add("bar-\trows", "bh {\tr @U z");
result.add("bar-\trus", "bh {\tr V s");
result.add("bar-\try", "bh {\tr i:");
result.add("bar-\try-\tmore", "bh {\tr i:\tm O@");
result.add("bar-\try's", "bh {\tr i: z");
result.add("bar-\tsky", "bh Q@ s\tk i:");
result.add("bar-\tta", "bh Q@\tt V");
result.add("bar-\tte-\tring", "bh Q@\tt @r\tI N");
result.add("bar-\ttel", "bh Q@\tt V l");
result.add("bar-\tten-\tder", "bh Q@\tt e n\td @r");
result.add("bar-\tten-\tders", "bh Q@\tt e n\td @r z");
result.add("bar-\tter", "bh Q@\tt @r");
result.add("bar-\ttered", "bh Q@\tt @r d");
result.add("bar-\tthe-\tle-\tmy", "bh Q@\tT e\tl V\tm i:");
result.add("bar-\tthel", "bh Q@\tT V l");
result.add("bar-\ttho-\tlo-\tmew", "bh Q@\tT Q\tl V m\tj u:");
result.add("bar-\tthold", "bh Q@\tT @U l d");
result.add("bar-\ttle", "bh Q@\tt V l");
result.add("bar-\tto", "bh Q@\tt @U");
result.add("bar-\tto-\tlet-\tti", "bh Q@\tt @U\tl e\tt i:");
result.add("bar-\tto-\tlo-\tme-\to", "bh Q@\tt O:\tl V\tm eI\t@U");
result.add("bar-\ttok", "bh Q@\tt V k");
result.add("bar-\tton", "bh Q@\tt V n");
result.add("bar-\tton's", "bh Q@\tt V n z");
result.add("bar-\ttosch", "bh Q@\tt O: S");
result.add("bar-\ttow", "bh Q@\tt @U");
result.add("bar-\twick", "bh Q@\tw I k");
result.add("barb", "bh Q@ b");
result.add("barbe", "bh Q@ b");
result.add("barbed", "bh Q@ b d");
result.add("barbs", "bh Q@ b z");
result.add("barb's", "bh Q@ b z");
result.add("barc-\tlay", "bh Q@ k\tl eI");
result.add("barc-\tlay's", "bh Q@ k\tl i: z");
result.add("barc-\troft", "bh Q@ k\tr O: f t");
result.add("barch", "bh Q@ k");
result.add("bard", "bh Q@ d");
result.add("bard-\twell", "bh Q@ d\tw e l");
result.add("bard's", "bh Q@ d z");
result.add("bare", "bh e@");
result.add("bare-\tfoot", "bh e@\tf U t");
result.add("bare-\tly", "bh e@\tl i:");
result.add("bared", "bh e@ d");
result.add("bares", "bh e@ z");
result.add("barge", "bh Q@ dZ");
result.add("barged", "bh Q@ dZ d");
result.add("bark", "bh Q@ k");
result.add("bark-\tley", "bh Q@ k\tl i:");
result.add("barked", "bh Q@ k t");
result.add("barks", "bh Q@ k s");
result.add("barks-\tdale", "bh Q@ k\ts d eI l");
result.add("barn", "bh Q@ n");
result.add("barn-\thard", "bh Q@ n\th Q@ d");
result.add("barn-\thart", "bh Q@ n\th Q@ t");
result.add("barn-\twell", "bh Q@ n\tw e l");
result.add("barn-\tyard", "bh Q@ n\tj Q@ d");
result.add("barnes", "bh Q@ n z");
result.add("barns", "bh Q@ n z");
result.add("barns-\ttor-\tming", "bh Q@ n\ts t O@\tm I N");
result.add("barns-\ttorm", "bh Q@ n\ts t O@ m");
result.add("barr", "bh Q@");
result.add("barred", "bh Q@ d");
result.add("barres", "bh Q@ z");
result.add("barr's", "bh Q@ z");
result.add("bars", "bh Q@ z");
result.add("bar's", "bh Q@ z");
result.add("bars-\ttow", "bh Q@ s\tt @U");
result.add("bart", "bh Q@ t");
result.add("bart-\tko", "bh Q@ t\tk @U");
result.add("bart-\tles-\tville", "bh Q@\tt V l\tz v I l");
result.add("bart-\tlett", "bh Q@ t\tl V t");
result.add("bart-\tlett's", "bh Q@ t\tl V t s");
result.add("bart-\tley", "bh Q@ t\tl i:");
result.add("bart-\tram", "bh Q@ t\tr { m");
result.add("barth", "bh Q@ T");
result.add("barthes", "bh Q@ T s");
result.add("bas-\tco", "bh Q s\tk @U");
result.add("bas-\tcom", "bh { s\tk V m");
result.add("bas-\tker-\tville", "bh { s\tk @r\tv I l");
result.add("bas-\tket", "bh { s\tk V t");
result.add("bas-\tket-\tball", "bh { s\tk V t\tb O: l");
result.add("bas-\tket-\tballs", "bh { s\tk V t\tb O: l z");
result.add("bas-\tket-\tball's", "bh { s\tk V t\tb O: l z");
result.add("bas-\tket-\tma-\tker", "bh { s\tk V t\tm eI\tk @r");
result.add("bas-\tket-\tma-\tking", "bh { s\tk V t\tm eI\tk I N");
result.add("bas-\tket-\try", "bh { s\tk V t\tr i:");
result.add("bas-\tkets", "bh { s\tk V t s");
result.add("bas-\tkett", "bh { s\tk e t");
result.add("bas-\tkin", "bh { s\tk I n");
result.add("bas-\tking", "bh { s\tk I N");
result.add("bas-\tra", "bh Q s\tr Q");
result.add("bas-\tre-\tlief", "bh Q@\ti:\tl i: f");
result.add("bas-\tre-\tliefs", "bh Q@\ti:\tl i: f s");
result.add("bas-\tsa", "bh {\ts V");
result.add("bas-\tses", "bh {\ts V z");
result.add("bas-\tset", "bh {\ts V t");
result.add("bas-\tset-\tti", "bh Q\ts e\tt i:");
result.add("bas-\tsett", "bh {\ts e t");
result.add("bas-\tsette", "bh V\ts e t");
result.add("bas-\tsi", "bh {\ts i:");
result.add("bas-\tsist", "bh eI\ts I s t");
result.add("bas-\tsists", "bh eI\ts I s t s");
result.add("bas-\tso", "bh {\ts @U");
result.add("bas-\tsoon", "bh V\ts u: n");
result.add("bas-\ts's", "bh eI\ts V z");
result.add("bas-\tta", "bh { s\tt V");
result.add("bas-\ttard", "bh { s\tt @r d");
result.add("bas-\ttards", "bh { s\tt @r d z");
result.add("bas-\tten", "bh eI s\tt V n");
result.add("bas-\ttian", "bh { s\ttS V n");
result.add("bas-\ttien", "bh { s\tt V n");
result.add("bas-\ttille", "bh { s\tt I l");
result.add("bas-\ttion", "bh { s\ttS V n");
result.add("bas-\ttions", "bh { s\ttS V n z");
result.add("bas-\ttogne", "bh { s\tt @U n");
result.add("bas-\ttogne's", "bh { s\tt @U n z");
result.add("bas-\tton", "bh { s\tt V n");
result.add("base", "bh eI s");
result.add("base-\tball", "bh eI s\tb O: l");
result.add("base-\tballs", "bh eI s\tb O: l z");
result.add("base-\tball's", "bh eI s\tb O: l z");
result.add("base-\tboard", "bh eI s\tb O@ d");
result.add("base-\tboards", "bh eI s\tb O@ d z");
result.add("base-\tless", "bh eI s\tl V s");
result.add("base-\tline", "bh eI s\tl aI n");
result.add("base-\tman", "bh eI s\tm V n");
result.add("base-\tment", "bh eI s\tm V n t");
result.add("base-\tments", "bh eI s\tm V n t s");
result.add("based", "bh eI s t");
result.add("bash", "bh { S");
result.add("bash-\tful", "bh { S\tf V l");
result.add("bashed", "bh { S t");
result.add("bask", "bh { s k");
result.add("basked", "bh { s k t");
result.add("basks", "bh { s k s");
result.add("basque", "bh { s k");
result.add("basques", "bh { s k s");
result.add("bass", "bh { s");
result.add("basse", "bh { s");
result.add("bast", "bh { s t");
result.add("bat", "bh { t");
result.add("bat-\tche-\tlor", "bh {\ttS V\tl @r");
result.add("bat-\tchel-\tder", "bh {\ttS e l\td @r");
result.add("bat-\tches", "bh {\ttS V z");
result.add("bat-\tley", "bh { t\tl i:");
result.add("bat-\tman", "bh { t\tm { n");
result.add("bat-\tson", "bh { t\ts V n");
result.add("bat-\tson's", "bh { t\ts V n z");
result.add("bat-\tt-\tling", "bh {\tt V\tl I N");
result.add("bat-\tta-\tlion", "bh V\tt { l\tj V n");
result.add("bat-\tta-\tlions", "bh V\tt { l\tj V n z");
result.add("bat-\tte-\tning", "bh {\tt V\tn I N");
result.add("bat-\tte-\trer", "bh {\tt @r\t@r");
result.add("bat-\tte-\trers", "bh {\tt @r\t@r z");
result.add("bat-\tte-\tries", "bh {\tt @r\ti: z");
result.add("bat-\tte-\tring", "bh {\tt @r\tI N");
result.add("bat-\tte-\try", "bh {\tt @r\ti:");
result.add("bat-\tted", "bh {\tt V d");
result.add("bat-\ttelle", "bh V\tt e l");
result.add("bat-\ttelle's", "bh V\tt e l z");
result.add("bat-\tten", "bh {\tt V n");
result.add("bat-\tten-\tberg", "bh {\tt V n\tb @r g");
result.add("bat-\tter", "bh {\tt @r");
result.add("bat-\tter-\tman", "bh {\tt @r\tm V n");
result.add("bat-\ttered", "bh {\tt @r d");
result.add("bat-\tters", "bh {\tt @r z");
result.add("bat-\tti-\tca-\tlo-\ta", "bh {\tt I\tk V\tl @U\tV");
result.add("bat-\tti-\tpag-\tli-\ta", "bh {\tt I\tp { g\tl i:\tV");
result.add("bat-\tting", "bh {\tt I N");
result.add("bat-\ttis-\tta", "bh V\tt i: s\tt V");
result.add("bat-\ttis-\tte", "bh Q\tt i: s\tt i:");
result.add("bat-\ttle", "bh {\tt V l");
result.add("bat-\ttle-\tfield", "bh {\tt V l\tf i: l d");
result.add("bat-\ttle-\tfields", "bh {\tt V l\tf i: l d z");
result.add("bat-\ttle-\tfront", "bh {\tt V l\tf r V n t");
result.add("bat-\ttle-\tground", "bh {\tt V l\tg r aU n d");
result.add("bat-\ttle-\tgrounds", "bh {\tt V l\tg r aU n d z");
result.add("bat-\ttle-\tment", "bh {\tt V l\tm V n t");
result.add("bat-\ttle-\tments", "bh {\tt V l\tm V n t s");
result.add("bat-\ttle-\tship", "bh {\tt V l\tS I p");
result.add("bat-\ttle-\tships", "bh {\tt V l\tS I p s");
result.add("bat-\ttled", "bh {\tt V l d");
result.add("bat-\ttles", "bh {\tt V l z");
result.add("bat-\ttle's", "bh {\tt V l z");
result.add("bat-\tton", "bh {\tt V n");
result.add("bat-\tty", "bh {\tt i:");
result.add("batch", "bh { tS");
result.add("bate", "bh eI t");
result.add("bate-\tman", "bh eI t\tm V n");
result.add("bates", "bh eI t s");
result.add("bates-\tville", "bh eI t\ts v I l");
result.add("bath", "bh { T");
result.add("bath-\trobe", "bh { T\tr @U b");
result.add("bath-\trobes", "bh { T\tr @U b z");
result.add("bath-\troom", "bh { T\tr u: m");
result.add("bath-\trooms", "bh { T\tr u: m z");
result.add("bath-\tshe-\tba", "bh { T\tS i:\tb V");
result.add("bath-\ttub", "bh { T\tt V b");
result.add("bath-\ttubs", "bh { T\tt V b z");
result.add("bath-\turst", "bh {\tT @r s t");
result.add("bath-\turst's", "bh {\tT @r s t s");
result.add("bathe", "bh eI D");
result.add("bathed", "bh eI D d");
result.add("bathes", "bh eI D z");
result.add("baths", "bh { T s");
result.add("bats", "bh { t s");
result.add("batt", "bh { t");
result.add("batts", "bh { t s");
result.add("batz", "bh { t s");
result.add("bau-\tble", "bh O:\tb V l");
result.add("bau-\tbles", "bh O:\tb V l z");
result.add("bau-\tdo-\tin", "bh @U d\tw Q\teI n");
result.add("bau-\tdou-\tin", "bh O:\td u:\tI n");
result.add("bau-\ter", "bh aU\t@r");
result.add("bau-\tmann", "bh aU\tm V n");
result.add("bau-\tmeis-\tter", "bh aU\tm aI s\tt @r");
result.add("bau-\ttis-\tta", "bh O:\tt i: s\tt V");
result.add("bau-\txite", "bh O: k\ts aI t");
result.add("bauch", "bh O: tS");
result.add("baud", "bh O: d");
result.add("baugh", "bh O:");
result.add("baugh-\tman", "bh O:\tm V n");
result.add("baum", "bh O: m");
result.add("baun", "bh O: n");
result.add("baur", "bh O@");
result.add("baus-\tman", "bh aU s\tm V n");
result.add("bausch", "bh aU S");
result.add("baw-\tden", "bh O:\td V n");
result.add("baw-\tdy", "bh O:\td i:");
result.add("bawd", "bh O: d");
result.add("bawl", "bh O: l");
result.add("bawled", "bh O: l d");
result.add("bax", "bh { k s");
result.add("bax-\tley", "bh { k\ts l i:");
result.add("bax-\tter", "bh { k\ts t @r");
result.add("bax-\tter's", "bh { k\ts t @r z");
result.add("bay", "bh eI");
result.add("bay-\tless", "bh eI\tl I s");
result.add("bay-\tley", "bh eI\tl i:");
result.add("bay-\tlis", "bh eI\tl I s");
result.add("bay-\tlor", "bh eI\tl @r");
result.add("bay-\tly", "bh eI\tl i:");
result.add("bay-\tman", "bh eI\tm V n");
result.add("bay-\treuth", "bh eI\tr OI T");
result.add("bay-\tside", "bh eI\ts aI d");
result.add("bay-\ttown", "bh eI\tt aU n");
result.add("bay-\twatch", "bh eI\tw Q tS");
result.add("baye", "bh eI");
result.add("bayed", "bh eI d");
result.add("bayes", "bh eI z");
result.add("bayh", "bh eI");
result.add("bayle", "bh eI l");
result.add("bayles", "bh eI l z");
result.add("bays", "bh eI z");
result.add("bay's", "bh eI z");
result.add("baze", "bh eI z");
result.add("be", "bh i:");
result.add("be-\ta-\tta", "bh i:\t{\tt V");
result.add("be-\tbe", "bh i:\tb i:");
result.add("be-\tbe's", "bh i:\tb i: z");
result.add("be-\tbop", "bh i:\tb Q p");
result.add("be-\tcalm", "bh I\tk Q m");
result.add("be-\tcalmed", "bh I\tk Q m d");
result.add("be-\tcame", "bh I\tk eI m");
result.add("be-\tcause", "bh I\tk O: z");
result.add("be-\tcher", "bh e\tk @r");
result.add("be-\tco-\tming", "bh I\tk V\tm I N");
result.add("be-\tcome", "bh I\tk V m");
result.add("be-\tcomes", "bh I\tk V m z");
result.add("be-\tde-\tvil", "bh V\td e\tv V l");
result.add("be-\tde-\tviled", "bh V\td e\tv V l d");
result.add("be-\tdeck", "bh V\td e k");
result.add("be-\tdecked", "bh V\td e k t");
result.add("be-\tdel", "bh V\td e l");
result.add("be-\tdell", "bh e\td V l");
result.add("be-\tdou-\tin", "bh e\td @U\tI n");
result.add("be-\tdou-\tins", "bh e\td @U\tI n z");
result.add("be-\tfal-\tlen", "bh V\tf {\tl V n");
result.add("be-\tfall", "bh V\tf O: l");
result.add("be-\tfalls", "bh V\tf O: l z");
result.add("be-\tfell", "bh V\tf e l");
result.add("be-\tfit", "bh V\tf I t");
result.add("be-\tfit-\tting", "bh V\tf I\tt I N");
result.add("be-\tfits", "bh V\tf I t s");
result.add("be-\tfore", "bh I\tf O@");
result.add("be-\tfore-\thand", "bh V\tf O@\th { n d");
result.add("be-\tfrien-\tded", "bh V f\tr e n\td V d");
result.add("be-\tfriend", "bh V f\tr e n d");
result.add("be-\tfriends", "bh V f\tr e n d z");
result.add("be-\tfud-\tdle", "bh V\tf V\td V l");
result.add("be-\tfud-\tdled", "bh V\tf V\td V l d");
result.add("be-\tfud-\tdles", "bh V\tf V\td V l z");
result.add("be-\tgan", "bh I\tg { n");
result.add("be-\tgat", "bh I\tg { t");
result.add("be-\tgay", "bh e\tg eI");
result.add("be-\tget", "bh I\tg e t");
result.add("be-\tget-\tting", "bh I\tg e\tt I N");
result.add("be-\tgets", "bh I\tg e t s");
result.add("be-\tgin", "bh I\tg I n");
result.add("be-\tgin-\tner", "bh I\tg I\tn @r");
result.add("be-\tgin-\tners", "bh I\tg I\tn @r z");
result.add("be-\tgin-\tner's", "bh I\tg I\tn @r z");
result.add("be-\tgin-\tning", "bh I\tg I\tn I N");
result.add("be-\tgin-\tnings", "bh I\tg I\tn I N z");
result.add("be-\tgins", "bh I\tg I n z");
result.add("be-\tgin's", "bh I\tg I n z");
result.add("be-\tgo-\tnia", "bh I\tg @U n\tj V");
result.add("be-\tgo-\tnias", "bh I\tg @U n\tj V z");
result.add("be-\tgot", "bh i:\tg O: t");
result.add("be-\tgot-\tten", "bh i:\tg O:\tt V n");
result.add("be-\tgui-\tling", "bh I\tg aI\tl I N");
result.add("be-\tguile", "bh I\tg aI l");
result.add("be-\tguiled", "bh I\tg aI l d");
result.add("be-\tgun", "bh I\tg V n");
result.add("be-\tha-\tving", "bh V\th eI\tv I N");
result.add("be-\tha-\tvio-\tral", "bh V\th eI v\tj @r\tV l");
result.add("be-\tha-\tvio-\trist", "bh V\th eI v\tj @r\tV s t");
result.add("be-\tha-\tvio-\trists", "bh V\th eI v\tj @r\tV s t s");
result.add("be-\tha-\tvior", "bh V\th eI v\tj @r");
result.add("be-\tha-\tviors", "bh V\th eI v\tj @r z");
result.add("be-\thalf", "bh V\th { f");
result.add("be-\than", "bh e\th V n");
result.add("be-\thar", "bh e\th @r");
result.add("be-\thave", "bh V\th eI v");
result.add("be-\thaved", "bh V\th eI v d");
result.add("be-\thaves", "bh V\th eI v z");
result.add("be-\the-\tmoth", "bh V\th i:\tm V T");
result.add("be-\the-\tmoths", "bh V\th i:\tm V T s");
result.add("be-\thea-\tded", "bh V\th e\td V d");
result.add("be-\thea-\tding", "bh V\th e\td I N");
result.add("be-\thea-\tdings", "bh V\th e\td I N z");
result.add("be-\thead", "bh V\th e d");
result.add("be-\thest", "bh I\th e s t");
result.add("be-\thind", "bh V\th aI n d");
result.add("be-\thinds", "bh V\th aI n d z");
result.add("be-\thol-\tden", "bh V\th @U l\td V n");
result.add("be-\thol-\tder", "bh i:\th @U l\td @r");
result.add("be-\thol-\tding", "bh V\th @U l\td I N");
result.add("be-\thold", "bh V\th @U l d");
result.add("be-\thoove", "bh V\th u: v");
result.add("be-\thooves", "bh V\th u: v z");
result.add("be-\ting", "bh i:\tI N");
result.add("be-\tings", "bh i:\tI N z");
result.add("be-\ting's", "bh i:\tI N z");
result.add("be-\tkaa", "bh e\tk Q");
result.add("be-\tker", "bh e\tk @r");
result.add("be-\tker's", "bh e\tk @r z");
result.add("be-\tla", "bh e\tl V");
result.add("be-\tla-\tbo-\tring", "bh V\tl eI\tb @r\tI N");
result.add("be-\tla-\tbor", "bh V\tl eI\tb @r");
result.add("be-\tla-\tbored", "bh V\tl eI\tb @r d");
result.add("be-\tla-\tbors", "bh V\tl eI\tb @r z");
result.add("be-\tla-\tfon-\tte", "bh e\tl V\tf Q n\tt i:");
result.add("be-\tla-\trus", "bh e\tl Q@\tV s");
result.add("be-\tla-\tted", "bh V\tl eI\tt V d");
result.add("be-\tla-\tted-\tly", "bh V\tl eI\tt V d\tl i:");
result.add("be-\tlair", "bh e\tl e@");
result.add("be-\tlak", "bh e\tl V k");
result.add("be-\tlan-\tger", "bh e\tl V\tN @r");
result.add("be-\tlas-\tco", "bh e\tl Q s\tk @U");
result.add("be-\tlate", "bh V\tl eI t");
result.add("be-\tlea-\tgue-\tring", "bh V\tl i:\tg @r\tI N");
result.add("be-\tlea-\tguer", "bh V\tl i:\tg @r");
result.add("be-\tlea-\tguered", "bh V\tl i:\tg @r d");
result.add("be-\tlen", "bh e\tl V n");
result.add("be-\tlie", "bh V\tl aI");
result.add("be-\tlie-\tva-\tbi-\tli-\tty", "bh I\tl i:\tv V\tb I\tl V\tt i:");
result.add("be-\tlie-\tva-\tble", "bh I\tl i:\tv V\tb V l");
result.add("be-\tlie-\tver", "bh I\tl i:\tv @r");
result.add("be-\tlie-\tvers", "bh I\tl i:\tv @r z");
result.add("be-\tlie-\tving", "bh I\tl i:\tv I N");
result.add("be-\tlied", "bh V\tl aI d");
result.add("be-\tlief", "bh V\tl i: f");
result.add("be-\tliefs", "bh V\tl i: f s");
result.add("be-\tlier", "bh e l\tj @r");
result.add("be-\tlies", "bh V\tl aI z");
result.add("be-\tlieve", "bh I\tl i: v");
result.add("be-\tlieved", "bh I\tl i: v d");
result.add("be-\tlieves", "bh I\tl i: v z");
result.add("be-\tlin-\tda", "bh V\tl I n\td V");
result.add("be-\tlit-\tt-\tling", "bh V\tl I\tt V\tl I N");
result.add("be-\tlit-\ttle", "bh V\tl I\tt V l");
result.add("be-\tlit-\ttled", "bh V\tl I\tt V l d");
result.add("be-\tlit-\ttles", "bh V\tl I\tt V l z");
result.add("be-\tlize", "bh e\tl i: z");
result.add("be-\tlo", "bh e\tl @U");
result.add("be-\tloit", "bh V\tl OI t");
result.add("be-\tlon-\tging", "bh I\tl O:\tN I N");
result.add("be-\tlon-\tgings", "bh I\tl O:\tN I N z");
result.add("be-\tlong", "bh I\tl O: N");
result.add("be-\tlonged", "bh I\tl O: N d");
result.add("be-\tlongs", "bh I\tl O: N z");
result.add("be-\tlove", "bh V\tl V v");
result.add("be-\tloved", "bh V\tl V v d");
result.add("be-\tlow", "bh V\tl @U");
result.add("be-\tlu-\tga", "bh V\tl u:\tg V");
result.add("be-\tlu-\tshi", "bh e\tl u:\tS i:");
result.add("be-\tlue", "bh e l\tj u:");
result.add("be-\tly", "bh V\tl aI");
result.add("be-\tly-\ting", "bh V\tl aI\tI N");
result.add("be-\tman", "bh i:\tm V n");
result.add("be-\tna", "bh e\tn V");
result.add("be-\tna-\tmi", "bh e\tn V\tm i:");
result.add("be-\tna-\tven-\tte", "bh e\tn Q\tv e n\tt i:");
result.add("be-\tna-\tvi-\tdes", "bh eI\tn Q\tv i:\td e s");
result.add("be-\tnac-\tko-\tva", "bh e\tn V\tk @U\tv V");
result.add("be-\tne", "bh e\tn V");
result.add("be-\tne-\tdet-\tto", "bh e\tn V\td e\tt @U");
result.add("be-\tne-\tdic-\tta", "bh e\tn V\td i: k\tt V");
result.add("be-\tne-\tdic-\ttine", "bh e\tn V\td I k\tt i: n");
result.add("be-\tne-\tdic-\ttines", "bh e\tn V\td I k\tt i: n z");
result.add("be-\tne-\tdic-\ttine's", "bh e\tn V\td I k\tt i: n z");
result.add("be-\tne-\tdic-\ttion", "bh e\tn V\td I k\tS V n");
result.add("be-\tne-\tdick", "bh e\tn V\td I k");
result.add("be-\tne-\tdict", "bh e\tn V\td I k t");
result.add("be-\tne-\tdikt", "bh e\tn V\td I k t");
result.add("be-\tne-\tdix", "bh e\tn V\td I k s");
result.add("be-\tne-\tfac-\ttor", "bh e\tn V\tf { k\tt @r");
result.add("be-\tne-\tfac-\ttors", "bh e\tn V\tf { k\tt @r z");
result.add("be-\tne-\tfac-\ttor's", "bh e\tn V\tf { k\tt @r z");
result.add("be-\tne-\tfi-\tcence", "bh V\tn e\tf V\ts V n s");
result.add("be-\tne-\tfi-\tcent", "bh e\tn V\tf I\tS V n t");
result.add("be-\tne-\tfi-\tci-\ta-\tries", "bh e\tn V\tf I\tS i:\te@\ti: z");
result.add("be-\tne-\tfi-\tci-\ta-\try", "bh e\tn V\tf I\tS i:\te@\ti:");
result.add("be-\tne-\tfi-\tci-\ta-\try's", "bh e\tn V\tf I\tS i:\te@\ti: z");
result.add("be-\tne-\tfi-\tcial", "bh e\tn V\tf I\tS V l");
result.add("be-\tne-\tfi-\tcial-\tly", "bh e\tn V\tf I\tS V\tl i:");
result.add("be-\tne-\tfi-\tted", "bh e\tn V\tf I\tt V d");
result.add("be-\tne-\tfi-\tting", "bh e\tn V\tf I\tt I N");
result.add("be-\tne-\tfit", "bh e\tn V\tf I t");
result.add("be-\tne-\tfit-\tted", "bh e\tn V\tf I\tt V d");
result.add("be-\tne-\tfit-\tting", "bh e\tn V\tf I\tt I N");
result.add("be-\tne-\tfits", "bh e\tn V\tf I t s");
result.add("be-\tne-\tlux", "bh e\tn V\tl V k s");
result.add("be-\tne-\tven-\tto", "bh e\tn V\tv eI n\tt @U");
result.add("be-\tne-\tvo-\tlence", "bh V\tn e\tv V\tl V n s");
result.add("be-\tne-\tvo-\tlent", "bh V\tn e\tv V\tl V n t");
result.add("be-\tneath", "bh V\tn i: T");
result.add("be-\tnes", "bh e\tn i: s");
result.add("be-\tnesh", "bh e\tn I S");
result.add("be-\tnet-\tton", "bh e\tn V\tt V n");
result.add("be-\tnet-\tton's", "bh e\tn V\tt V n z");
result.add("be-\tni", "bh e\tn i:");
result.add("be-\tni-\tta", "bh V\tn i:\tt V");
result.add("be-\tni-\tto", "bh e\tn i:\tt @U");
result.add("be-\tnigh-\tted", "bh V\tn aI\tt V d");
result.add("be-\tnign", "bh V\tn aI n");
result.add("be-\tnign-\tly", "bh V\tn aI n\tl i:");
result.add("be-\tnin", "bh i:\tn I n");
result.add("be-\tnin-\tca-\tsa", "bh e\tn i: n\tk Q\ts V");
result.add("be-\tno", "bh eI\tn @U");
result.add("be-\tno-\tni", "bh e\tn @U\tn i:");
result.add("be-\tnoit", "bh V\tn OI t");
result.add("be-\to-\twulf", "bh eI\tV\tw U l f");
result.add("be-\tqueath", "bh I k\tw i: T");
result.add("be-\tquest", "bh I k\tw e s t");
result.add("be-\tquests", "bh I k\tw e s t s");
result.add("be-\tra-\tted", "bh I@\teI\tt V d");
result.add("be-\tra-\tting", "bh I@\teI\tt I N");
result.add("be-\trar-\tdo", "bh @r\tQ@\td @U");
result.add("be-\trard", "bh @r\tQ@ d");
result.add("be-\trate", "bh I@\teI t");
result.add("be-\tre-\ta", "bh @r\ti:\tV");
result.add("be-\treave", "bh @r\ti: v");
result.add("be-\treave-\tment", "bh @r\ti: v\tm V n t");
result.add("be-\treaved", "bh @r\ti: v d");
result.add("be-\treft", "bh @r\te f t");
result.add("be-\tren-\tson", "bh e@\tV n\ts V n");
result.add("be-\trend", "bh e@\te n d");
result.add("be-\tret", "bh e@\tV t");
result.add("be-\tret-\tta", "bh @r\te\tt V");
result.add("be-\tret-\ttas", "bh @r\te\tt V s");
result.add("be-\trets", "bh e@\tV t s");
result.add("be-\tri-\ta", "bh e@\ti:\tV");
result.add("be-\trin-\tger", "bh e@\tI\tN @r");
result.add("be-\tring", "bh e@\tI N");
result.add("be-\tryl", "bh e@\tV l");
result.add("be-\tryl-\tli-\tum", "bh @r\tI\tl i:\tV m");
result.add("be-\tsan-\tcon", "bh V\ts { n\tk V n");
result.add("be-\tsant", "bh e\tz V n t");
result.add("be-\tsaw", "bh i:\ts O:");
result.add("be-\tset", "bh V\ts e t");
result.add("be-\tset-\tting", "bh V\ts e\tt I N");
result.add("be-\tside", "bh V\ts aI d");
result.add("be-\tsides", "bh V\ts aI d z");
result.add("be-\tsie-\tging", "bh V\ts i:\tdZ I N");
result.add("be-\tsiege", "bh V\ts i: dZ");
result.add("be-\tsieged", "bh V\ts i: dZ d");
result.add("be-\tta", "bh eI\tt V");
result.add("be-\ttide", "bh I\tt aI d");
result.add("be-\tvan", "bh e\tv V n");
result.add("be-\tve-\trage", "bh e\tv @r\tI dZ");
result.add("be-\tve-\tridge", "bh e\tv @r\tI dZ");
result.add("be-\tvel", "bh e\tv V l");
result.add("be-\tvelled", "bh e\tv V l d");
result.add("be-\tver", "bh e\tv @r");
result.add("be-\tver-\tley", "bh e\tv @r\tl i:");
result.add("be-\tver-\tly", "bh e\tv @r\tl i:");
result.add("be-\tver-\tly's", "bh e\tv @r\tl i: z");
result.add("be-\tvers", "bh e\tv @r z");
result.add("be-\tvi-\ter", "bh e\tv i:\t@r");
result.add("be-\tvil", "bh e\tv I l");
result.add("be-\tvin", "bh e\tv I n");
result.add("be-\tving-\tton", "bh e\tv I N\tt V n");
result.add("be-\tvis", "bh e\tv I s");
result.add("be-\tvy", "bh e\tv i:");
result.add("be-\tware", "bh V\tw e@");
result.add("be-\twil-\tde-\tring", "bh V\tw I l\td @r\tI N");
result.add("be-\twil-\tder", "bh V\tw I l\td @r");
result.add("be-\twil-\tder-\tment", "bh V\tw I l\td @r\tm V n t");
result.add("be-\twil-\tdered", "bh V\tw I l\td @r d");
result.add("be-\twil-\tders", "bh V\tw I l\td @r z");
result.add("be-\twitch", "bh V\tw I tS");
result.add("be-\twitched", "bh V\tw I tS t");
result.add("be-\tyer", "bh eI\t@r");
result.add("be-\tyond", "bh I\tQ n d");
result.add("be-\tzan-\tson", "bh e\tz V n\ts V n");
result.add("bea", "bh i:");
result.add("bea-\tcham", "bh i:\ttS V m");
result.add("bea-\tcher", "bh i:\ttS @r");
result.add("bea-\tches", "bh i:\ttS V z");
result.add("bea-\tching", "bh i:\ttS I N");
result.add("bea-\tch's", "bh i:\ttS V z");
result.add("bea-\tchy", "bh i:\ttS i:");
result.add("bea-\tcon", "bh i:\tk V n");
result.add("bea-\tcons", "bh i:\tk V n z");
result.add("bea-\tded", "bh i:\td V d");
result.add("bea-\tdle", "bh i:\td V l");
result.add("bea-\tdles", "bh i:\td V l z");
result.add("bea-\tdy", "bh i:\td i:");
result.add("bea-\tgle", "bh i:\tg V l");
result.add("bea-\tgles", "bh i:\tg V l z");
result.add("bea-\tker", "bh i:\tk @r");
result.add("bea-\tman", "bh i:\tm V n");
result.add("bea-\tmer", "bh i:\tm @r");
result.add("bea-\tming", "bh i:\tm I N");
result.add("bea-\tmish", "bh i:\tm I S");
result.add("bea-\tra-\tble", "bh e@\tV\tb V l");
result.add("bea-\trer", "bh e@\t@r");
result.add("bea-\trers", "bh e@\t@r z");
result.add("bea-\tring", "bh e@\tI N");
result.add("bea-\trings", "bh e@\tI N z");
result.add("bea-\trish", "bh e@\tI S");
result.add("bea-\trish-\tly", "bh e@\tI S\tl i:");
result.add("bea-\trish-\tness", "bh e@\tI S\tn V s");
result.add("bea-\tson", "bh i:\tz V n");
result.add("bea-\tt-\tri-\tce's", "bh i:\tV t\tr I\ts V z");
result.add("bea-\tt-\trice", "bh i:\tV t\tr I s");
result.add("bea-\tten", "bh i:\tt V n");
result.add("bea-\tter", "bh i:\tt @r");
result.add("bea-\tters", "bh i:\tt @r z");
result.add("bea-\ttie", "bh i:\tt i:");
result.add("bea-\tting", "bh i:\tt I N");
result.add("bea-\ttings", "bh i:\tt I N z");
result.add("bea-\ttles", "bh i:\tt V l z");
result.add("bea-\tton", "bh i:\tt V n");
result.add("bea-\tver", "bh i:\tv @r");
result.add("bea-\tver-\tton", "bh i:\tv @r\tt V n");
result.add("bea-\tvers", "bh i:\tv @r z");
result.add("beach", "bh i: tS");
result.add("beach-\tcom-\tber", "bh i: tS\tk @U\tm @r");
result.add("beach-\tfront", "bh i: tS\tf r Q n t");
result.add("beach-\thead", "bh i: tS\th e d");
result.add("beach-\theads", "bh i: tS\th e d z");
result.add("beached", "bh i: tS t");
result.add("bead", "bh i: d");
result.add("bead-\twork", "bh i: d\tw @r k");
result.add("beads", "bh i: d z");
result.add("beak", "bh i: k");
result.add("beak-\tlike", "bh i: k\tl aI k");
result.add("beal", "bh i: l");
result.add("beale", "bh i: l");
result.add("beall", "bh i: l");
result.add("beals", "bh i: l z");
result.add("beam", "bh i: m");
result.add("beamed", "bh i: m d");
result.add("beams", "bh i: m z");
result.add("beam's", "bh i: m z");
result.add("bean", "bh i: n");
result.add("bean-\ttown", "bh i: n\tt aU n");
result.add("beane", "bh i: n");
result.add("beans", "bh i: n z");
result.add("bean's", "bh i: n z");
result.add("bear", "bh e@");
result.add("bear-\tded", "bh I@\td V d");
result.add("bear-\tden", "bh I@\td V n");
result.add("bearce", "bh @r s");
result.add("beard", "bh I@ d");
result.add("beard-\tmore", "bh I@ d\tm O@");
result.add("beards", "bh I@ d z");
result.add("beards-\tley", "bh I@ d\tz l i:");
result.add("beards-\ttown", "bh I@ d\ts t aU n");
result.add("beare", "bh I@");
result.add("bears", "bh e@ z");
result.add("bear's", "bh e@ z");
result.add("beas", "bh i: z");
result.add("beas-\tley", "bh i: z\tl i:");
result.add("beas-\ttie", "bh i: s\tt i:");
result.add("beas-\tton", "bh i: s\tt V n");
result.add("beast", "bh i: s t");
result.add("beasts", "bh i: s t s");
result.add("beat", "bh i: t");
result.add("beat-\tnik", "bh i: t\tn I k");
result.add("beat-\tniks", "bh i: t\tn I k s");
result.add("beat-\trix", "bh i: t\tr I k s");
result.add("beat-\ttie", "bh i:\tt i:");
result.add("beat-\tty", "bh i:\tt i:");
result.add("beats", "bh i: t s");
result.add("beau", "bh @U");
result.add("beau-\tchamp", "bh @U\tS Q m p");
result.add("beau-\tdoin", "bh @U\td OI n");
result.add("beau-\tford", "bh @U\tf O@ d");
result.add("beau-\tfort", "bh @U\tf @r t");
result.add("beau-\tjo-\tlais", "bh @U\tdZ @U\tl eI");
result.add("beau-\tmont", "bh @U\tm O: n t");
result.add("beau-\tre-\tgard", "bh @U\tr I\tg Q@ d");
result.add("beau-\tti-\tcian", "bh @U\tt I\tS V n");
result.add("beau-\tti-\tful", "bh j u:\tt I\tf V l");
result.add("beau-\tti-\tfy", "bh j u:\tt I\tf aI");
result.add("beau-\tties", "bh j u:\tt i: z");
result.add("beau-\ttiful-\tly", "bh j u:\tt I f\tl i:");
result.add("beau-\tty", "bh j u:\tt i:");
result.add("beau-\tvais", "bh @U\tv eI");
result.add("beaux", "bh @U");
result.add("bec", "bh e k");
result.add("bec-\tka", "bh e s\tk V");
result.add("bec-\tker", "bh e\tk @r");
result.add("bec-\tker-\tman", "bh e\tk @r\tm V n");
result.add("bec-\tker's", "bh e\tk @r z");
result.add("bec-\tket", "bh e\tk V t");
result.add("bec-\tkett", "bh e\tk e t");
result.add("bec-\tki", "bh e\tk i:");
result.add("bec-\tkie", "bh e\tk i:");
result.add("bec-\tko-\tning", "bh e\tk V\tn I N");
result.add("bec-\tkon", "bh e\tk V n");
result.add("bec-\tkoned", "bh e\tk V n d");
result.add("bec-\tkons", "bh e\tk V n z");
result.add("bec-\tky", "bh e\tk i:");
result.add("bech-\tler", "bh e k\tl @r");
result.add("bech-\ttel", "bh e k\tt e l");
result.add("becht", "bh e k t");
result.add("beck", "bh e k");
result.add("beck-\tford", "bh e k\tf O@ d");
result.add("beck-\tley", "bh e k\tl i:");
result.add("beck-\tman", "bh e k\tm V n");
result.add("beck-\tmann", "bh e k\tm V n");
result.add("beck-\twith", "bh e k\tw I T");
result.add("beck-\twith's", "bh e k\tw I T s");
result.add("becks", "bh e k s");
result.add("beck's", "bh e k s");
result.add("bed", "bh e d");
result.add("bed-\tded", "bh e\td V d");
result.add("bed-\tding", "bh e\td I N");
result.add("bed-\tfel-\tlow", "bh e d\tf e\tl @U");
result.add("bed-\tfel-\tlows", "bh e d\tf e\tl @U z");
result.add("bed-\tford", "bh e d\tf @r d");
result.add("bed-\tlam", "bh e d\tl V m");
result.add("bed-\tling-\tton", "bh e d\tl I N\tt V n");
result.add("bed-\tmins-\tter", "bh e d\tm I n\ts t @r");
result.add("bed-\tpan", "bh e d\tp { n");
result.add("bed-\tpans", "bh e d\tp { n z");
result.add("bed-\trag-\tgle", "bh V d\tr {\tg V l");
result.add("bed-\trag-\tgled", "bh V d\tr {\tg V l d");
result.add("bed-\trid-\tden", "bh e d\tr I\td V n");
result.add("bed-\trock", "bh e d\tr Q k");
result.add("bed-\troom", "bh e d\tr u: m");
result.add("bed-\trooms", "bh e d\tr u: m z");
result.add("bed-\tside", "bh e d\ts aI d");
result.add("bed-\tspread", "bh e d\ts p r e d");
result.add("bed-\tstraw", "bh e d\ts t r O:");
result.add("bed-\ttime", "bh e d\tt aI m");
result.add("bed-\twell", "bh e d\tw e l");
result.add("bede", "bh i: d");
result.add("beds", "bh e d z");
result.add("bee", "bh i:");
result.add("bee-\tbe", "bh i:\tb i:");
result.add("bee-\tbe's", "bh i:\tb i: z");
result.add("bee-\tcham", "bh i:\ttS V m");
result.add("bee-\tcham's", "bh i:\ttS V m z");
result.add("bee-\tcher", "bh i:\ttS @r");
result.add("bee-\tchy", "bh i:\ttS i:");
result.add("bee-\tfing", "bh i:\tf I N");
result.add("bee-\tfy", "bh i:\tf i:");
result.add("bee-\thive", "bh i:\th aI v");
result.add("bee-\tkee-\tper", "bh i:\tk i:\tp @r");
result.add("bee-\tkee-\tpers", "bh i:\tk i:\tp @r z");
result.add("bee-\tler", "bh i:\tl @r");
result.add("bee-\tman", "bh i:\tm V n");
result.add("bee-\tmer", "bh i:\tm @r");
result.add("bee-\tper", "bh i:\tp @r");
result.add("bee-\tpers", "bh i:\tp @r z");
result.add("bee-\tping", "bh i:\tp I N");
result.add("bee-\try", "bh I@\ti:");
result.add("bee-\tson", "bh i:\tz V n");
result.add("bee-\ttho-\tve-\tni-\tan", "bh eI\tt @U\tv i:\tn i:\tV n");
result.add("bee-\ttho-\tven", "bh eI\tt @U\tv V n");
result.add("bee-\ttho-\tven's", "bh eI\tt @U\tv V n z");
result.add("bee-\ttle", "bh i:\tt V l");
result.add("bee-\ttles", "bh i:\tt V l z");
result.add("bee-\tton", "bh i:\tt V n");
result.add("beech", "bh i: tS");
result.add("beech-\twood", "bh i: tS\tw U d");
result.add("beeck", "bh i: k");
result.add("beef", "bh i: f");
result.add("beef-\tea-\tter", "bh i:\tf i:\tt @r");
result.add("beef-\tsteak", "bh i: f\ts t eI k");
result.add("beefed", "bh i: f t");
result.add("beefs", "bh i: f s");
result.add("beek", "bh i: k");
result.add("beek-\tman", "bh i: k\tm V n");
result.add("been", "bh I n");
result.add("beens", "bh I n z");
result.add("beep", "bh i: p");
result.add("beeps", "bh i: p s");
result.add("beer", "bh I@");
result.add("beers", "bh I@ z");
result.add("beer's", "bh I@ z");
result.add("bees", "bh i: z");
result.add("bee's", "bh i: z");
result.add("bees-\tley", "bh i: z\tl i:");
result.add("beet", "bh i: t");
result.add("beets", "bh i: t s");
result.add("beg", "bh e g");
result.add("beg-\tgar", "bh e\tg @r");
result.add("beg-\tgars", "bh e\tg @r z");
result.add("beg-\tging", "bh e\tg I N");
result.add("beg-\trudge", "bh I g\tr V dZ");
result.add("begged", "bh e g d");
result.add("beggs", "bh e g z");
result.add("begs", "bh e g z");
result.add("beh-\trens", "bh e@\tV n z");
result.add("beh-\tring", "bh e@\tI N");
result.add("behl", "bh e l");
result.add("behlke", "bh e l k");
result.add("behm", "bh e m");
result.add("behn", "bh e n");
result.add("behn-\tken", "bh e N\tk V n");
result.add("behr-\tman", "bh e@\tm V n");
result.add("bei-\tgel", "bh aI\tg V l");
result.add("bei-\tges", "bh eI\tZ V z");
result.add("bei-\tge's", "bh eI\tZ V z");
result.add("bei-\tjing", "bh eI\tZ I N");
result.add("bei-\tra", "bh eI\tr V");
result.add("bei-\trut", "bh eI\tr u: t");
result.add("bei-\trut's", "bh eI\tr u: t s");
result.add("bei-\tsel", "bh aI\ts V l");
result.add("beige", "bh eI Z");
result.add("bein", "bh i: n");
result.add("beirne", "bh I@ n");
result.add("beitz", "bh i: t s");
result.add("bek-\tki", "bh e\tk i:");
result.add("bel", "bh e l");
result.add("bel-\tcher", "bh e l\ttS @r");
result.add("bel-\tching", "bh e l\ttS I N");
result.add("bel-\tcourt", "bh e l\tk O@ t");
result.add("bel-\tden", "bh e l\td V n");
result.add("bel-\tding", "bh e l\td I N");
result.add("bel-\tfast", "bh e l\tf { s t");
result.add("bel-\tfield", "bh e l\tf i: l d");
result.add("bel-\tford", "bh e l\tf @r d");
result.add("bel-\tgard", "bh e l\tg Q@ d");
result.add("bel-\tge", "bh e l\tdZ i:");
result.add("bel-\tgian", "bh e l\tdZ V n");
result.add("bel-\tgians", "bh e l\tdZ V n z");
result.add("bel-\tgique", "bh e l\tZ i: k");
result.add("bel-\tgique's", "bh e l\tdZ i: k s");
result.add("bel-\tgium", "bh e l\tdZ V m");
result.add("bel-\tgium's", "bh e l\tdZ V m z");
result.add("bel-\tgrade", "bh e l\tg r eI d");
result.add("bel-\tgrade's", "bh e l\tg r eI d z");
result.add("bel-\tla", "bh e\tl V");
result.add("bel-\tla-\tmy", "bh e\tl V\tm i:");
result.add("bel-\tlan-\tca", "bh e\tl Q n\tk V");
result.add("bel-\tle-\trose", "bh e\tl @r\tV z");
result.add("bel-\tleau", "bh e\tl @U");
result.add("bel-\tler", "bh e\tl @r");
result.add("bel-\tlew", "bh e\tl u:");
result.add("bel-\tli", "bh e\tl i:");
result.add("bel-\tli-\tcose", "bh e\tl I\tk @U s");
result.add("bel-\tli-\tge-\trence", "bh V\tl I\tdZ @r\tV n s");
result.add("bel-\tli-\tge-\trent", "bh V\tl I\tdZ @r\tV n t");
result.add("bel-\tli-\tge-\trents", "bh V\tl I\tdZ @r\tV n t s");
result.add("bel-\tli-\tna", "bh e\tl i:\tn V");
result.add("bel-\tli-\tni", "bh e\tl i:\tn i:");
result.add("bel-\tli-\tni's", "bh e\tl i:\tn i: z");
result.add("bel-\tlied", "bh e\tl i: d");
result.add("bel-\tlies", "bh e\tl i: z");
result.add("bel-\tlin-\tgham", "bh e\tl I N\th { m");
result.add("bel-\tling", "bh e\tl I N");
result.add("bel-\tlis", "bh e\tl I s");
result.add("bel-\tlo", "bh e\tl @U");
result.add("bel-\tlo-\twing", "bh e\tl @U\tI N");
result.add("bel-\tlon", "bh e\tl V n");
result.add("bel-\tlow", "bh e\tl @U");
result.add("bel-\tlowed", "bh e\tl @U d");
result.add("bel-\tlows", "bh e\tl @U z");
result.add("bel-\tlow's", "bh e\tl @U z");
result.add("bel-\tly", "bh e\tl i:");
result.add("bel-\tly-\tache", "bh e\tl i:\teI k");
result.add("bel-\tmon-\tte", "bh e l\tm Q n\tt i:");
result.add("bel-\tmont", "bh e l\tm Q n t");
result.add("bel-\tted", "bh e l\tt V d");
result.add("bel-\tter", "bh e l\tt @r");
result.add("bel-\tting", "bh e l\tt I N");
result.add("bel-\tton", "bh e l\tt V n");
result.add("bel-\tva", "bh eI l\tv V");
result.add("bel-\tve-\tdere", "bh e l\tv I\td I@");
result.add("bel-\tvi-\ta", "bh e l\tv i:\tV");
result.add("bel-\tvi-\tdere", "bh e l\tv V\td I@");
result.add("belch", "bh e l tS");
result.add("belched", "bh e l tS t");
result.add("belf-\try", "bh e l\tf r i:");
result.add("belk", "bh e l k");
result.add("belk-\tnap", "bh e l\tn { p");
result.add("bell", "bh e l");
result.add("bell-\tcore", "bh e l\tk O@");
result.add("bell-\tflo-\twer", "bh e l\tf l aU\t@r");
result.add("bell-\tflo-\twers", "bh e l\tf l aU\t@r z");
result.add("bell-\thop", "bh e l\th Q p");
result.add("bell-\thops", "bh e l\th Q p s");
result.add("bell-\tman", "bh e l\tm V n");
result.add("bell-\tmore", "bh e l\tm O@");
result.add("bell-\tville", "bh e l\tv I l");
result.add("bell-\twe-\tther", "bh e l\tw e\tD @r");
result.add("bell-\twe-\tthers", "bh e l\tw e\tD @r z");
result.add("bell-\twood", "bh e l\tw U d");
result.add("belle", "bh e l");
result.add("belle-\tville", "bh V l\tv I l");
result.add("belle-\tvue", "bh e l\tv j u:");
result.add("belles", "bh e l z");
result.add("bells", "bh e l z");
result.add("bell's", "bh e l z");
result.add("bels", "bh e l z");
result.add("bels-\tky", "bh e l\ts k i:");
result.add("belt", "bh e l t");
result.add("belt-\tran", "bh e l\tt r V n");
result.add("belt-\tway", "bh e l\tt w eI");
result.add("belts", "bh e l t s");
result.add("belt's", "bh e l t s");
result.add("belts-\tville", "bh e l\tt s v I l");
result.add("bem", "bh e m");
result.add("ben", "bh e n");
result.add("ben-\tbow", "bh e n\tb @U");
result.add("ben-\tbrook", "bh e n\tb r U k");
result.add("ben-\tcher", "bh e n\ttS @r");
result.add("ben-\tchers", "bh e n\ttS @r z");
result.add("ben-\tches", "bh e n\ttS V z");
result.add("ben-\tda", "bh e n\td V");
result.add("ben-\tded", "bh e n\td V d");
result.add("ben-\tdel", "bh e n\td V l");
result.add("ben-\tder", "bh e n\td @r");
result.add("ben-\tders", "bh e n\td @r z");
result.add("ben-\tder's", "bh e n\td @r z");
result.add("ben-\tdick", "bh e n\td I k");
result.add("ben-\tding", "bh e n\td I N");
result.add("ben-\tdix", "bh e n\td I k s");
result.add("ben-\tga-\tli", "bh e N\tg Q\tl i:");
result.add("ben-\tga-\tlis", "bh e N\tg Q\tl i: z");
result.add("ben-\tgal", "bh e N\tg V l");
result.add("ben-\tgals", "bh e N\tg V l z");
result.add("ben-\tham", "bh e n\th V m");
result.add("ben-\tja-\tmin", "bh e n\tdZ V\tm V n");
result.add("ben-\tja-\tmin's", "bh e n\tdZ V\tm V n z");
result.add("ben-\tjy", "bh e n\tdZ i:");
result.add("ben-\tnet", "bh e\tn V t");
result.add("ben-\tnett", "bh e\tn V t");
result.add("ben-\tnett's", "bh e\tn V t s");
result.add("ben-\tnie", "bh e\tn i:");
result.add("ben-\tning-\tton", "bh e\tn I N\tt V n");
result.add("ben-\tnink", "bh e\tn I N k");
result.add("ben-\tnion", "bh e n\tj V n");
result.add("ben-\tnis", "bh e\tn I s");
result.add("ben-\tny", "bh e\tn i:");
result.add("ben-\tsa-\tlem", "bh e n\ts eI\tl V m");
result.add("ben-\tsel", "bh e n\ts V l");
result.add("ben-\tsen", "bh e n\ts V n");
result.add("ben-\tson", "bh e n\ts V n");
result.add("ben-\tson's", "bh e n\ts V n z");
result.add("ben-\tto", "bh e n\tt @U");
result.add("ben-\tto-\tnite", "bh e n\tt V\tn aI t");
result.add("ben-\tton", "bh e n\tt V n");
result.add("ben-\tton-\tville", "bh e n\tt V n\tv I l");
result.add("ben-\tve-\tnu-\tto", "bh e n\tv e\tn u:\tt @U");
result.add("ben-\tya-\tmin", "bh e n\tj V\tm i: n");
result.add("ben-\tzel", "bh e n\tz V l");
result.add("ben-\tzene", "bh e n\tz i: n");
result.add("ben-\tzine", "bh e n\tz i: n");
result.add("bench", "bh e n tS");
result.add("bench-\tley", "bh e n\ttS l i:");
result.add("bench-\tmark", "bh e n\ttS m Q@ k");
result.add("bench-\tmarks", "bh e n\ttS m Q@ k s");
result.add("bench-\tmark's", "bh e n\ttS m Q@ k s");
result.add("bend", "bh e n d");
result.add("bends", "bh e n d z");
result.add("benge", "bh e n dZ");
result.add("bengt", "bh e N k t");
result.add("benn", "bh e n");
result.add("benne", "bh e n");
result.add("bens", "bh e n z");
result.add("ben's", "bh e n z");
result.add("bent", "bh e n t");
result.add("bent-\tley", "bh e n\tt l i:");
result.add("bent-\tley's", "bh e n\tt l i: z");
result.add("bent-\tly", "bh e n\tt l i:");
result.add("benz", "bh e n z");
result.add("ber-\tbe-\tri-\tan", "bh @r\tb I@\ti:\tV n");
result.add("ber-\tber", "bh @r\tb @r");
result.add("ber-\tga-\tmo", "bh @r\tg Q\tm @U");
result.add("ber-\tge-\tron", "bh @r\tg @r\tO: n");
result.add("ber-\tgen", "bh @r\tg V n");
result.add("ber-\tgen-\tfield", "bh @r\tg V n\tf i: l d");
result.add("ber-\tger", "bh @r\tg @r");
result.add("ber-\tger's", "bh @r\tg @r z");
result.add("ber-\tget", "bh @r\tg e t");
result.add("ber-\tgin", "bh @r\tg I n");
result.add("ber-\tkey", "bh @r\tk i:");
result.add("ber-\tko-\twitz", "bh @r\tk V\tw I t s");
result.add("ber-\tkoff", "bh @r\tk O: f");
result.add("ber-\tli-\tner", "bh @r\tl I\tn @r");
result.add("ber-\tli-\tners", "bh @r\tl I\tn @r z");
result.add("ber-\tlin", "bh @r\tl I n");
result.add("ber-\tlin's", "bh @r\tl I n z");
result.add("ber-\tlitz", "bh @r\tl I t s");
result.add("ber-\tman", "bh @r\tm V n");
result.add("ber-\tman's", "bh @r\tm V n z");
result.add("ber-\tmu-\tda", "bh @r m\tj u:\td V");
result.add("ber-\tmu-\tdas", "bh @r m\tj u:\td V z");
result.add("ber-\tna", "bh e@\tn V");
result.add("ber-\tna-\tdene", "bh @r\tn V\td i: n");
result.add("ber-\tna-\tdette", "bh @r\tn V\td e t");
result.add("ber-\tna-\tdine", "bh @r\tn V\td i: n");
result.add("ber-\tnal", "bh @r\tn V l");
result.add("ber-\tnar-\tdi", "bh @r\tn Q@\td i:");
result.add("ber-\tnar-\tdi-\tno", "bh @r\tn V\td i:\tn @U");
result.add("ber-\tnar-\tdin", "bh @r\tn Q@\td i: n");
result.add("ber-\tnar-\tdo", "bh @r\tn Q@\td @U");
result.add("ber-\tnar-\tdo's", "bh @r\tn Q@\td @U z");
result.add("ber-\tnard", "bh @r\tn Q@ d");
result.add("ber-\tnard's", "bh @r\tn Q@ d z");
result.add("ber-\tnat", "bh @r\tn V t");
result.add("ber-\tner", "bh @r\tn @r");
result.add("ber-\tnet", "bh @r\tn e t");
result.add("ber-\tni", "bh e@\tn i:");
result.add("ber-\tni-\tta", "bh @r\tn i:\tt V");
result.add("ber-\tnice", "bh @r\tn i: s");
result.add("ber-\tnie", "bh @r\tn i:");
result.add("ber-\tnie's", "bh @r\tn i: z");
result.add("ber-\tnoul-\tli", "bh @r\tn u:\tl i:");
result.add("ber-\tny", "bh @r\tn i:");
result.add("ber-\tra", "bh e@\tV");
result.add("ber-\tra's", "bh e@\tV z");
result.add("ber-\tri", "bh e@\ti:");
result.add("ber-\tri-\ter", "bh e@\ti:\t@r");
result.add("ber-\tri-\tgan", "bh e@\tI\tg V n");
result.add("ber-\trie", "bh e@\ti:");
result.add("ber-\tries", "bh e@\ti: z");
result.add("ber-\try", "bh e@\ti:");
result.add("ber-\try-\tlike", "bh e@\ti:\tl aI k");
result.add("ber-\try-\tman", "bh e@\ti:\tm V n");
result.add("ber-\try's", "bh e@\ti: z");
result.add("ber-\tserk", "bh @r\ts @r k");
result.add("ber-\tta", "bh @r\tt V");
result.add("ber-\ttel-\tli", "bh @r\tt e\tl i:");
result.add("ber-\ttels-\tmann", "bh @r\tt V l\tz m V n");
result.add("ber-\ttels-\tmann's", "bh @r\tt V l\tz m V n z");
result.add("ber-\ttha", "bh @r\tT V");
result.add("ber-\tti", "bh e@\tt i:");
result.add("ber-\ttie", "bh @r\tt i:");
result.add("ber-\ttin", "bh @r\tt I n");
result.add("ber-\tto-\tluc-\tci", "bh @r\tt @U\tl u:\ttS i:");
result.add("ber-\ttold", "bh @r\tt @U l d");
result.add("ber-\tton", "bh @r\tt V n");
result.add("ber-\tty", "bh @r\tt i:");
result.add("ber-\twick", "bh @r\tw I k");
result.add("ber-\twyn", "bh @r\tw I n");
result.add("bere", "bh I@");
result.add("beres", "bh i: r z");
result.add("beres-\tford", "bh I@ z\tf @r d");
result.add("berg", "bh @r g");
result.add("berg-\thoff", "bh @r g\th O: f");
result.add("berg-\tland", "bh @r g\tl { n d");
result.add("berg-\tlund", "bh @r g\tl V n d");
result.add("berg-\tman", "bh @r g\tm V n");
result.add("berg-\tmann", "bh @r g\tm V n");
result.add("berg-\tquist", "bh @r g\tk w I s t");
result.add("berg-\tren", "bh @r g\tr e n");
result.add("berge-\tman", "bh @r g\tm V n");
result.add("bergh", "bh @r g");
result.add("bergs", "bh @r g z");
result.add("berg's", "bh @r g z");
result.add("bergs-\tma", "bh e@ g\tz m V");
result.add("bergs-\ttein", "bh @r g\ts t aI n");
result.add("bergs-\tten", "bh @r g\ts V n");
result.add("bergs-\ttrom", "bh @r g\ts t r Q m");
result.add("berk", "bh @r k");
result.add("berk-\tley", "bh @r k\tl i:");
result.add("berk-\tman", "bh @r k\tm V n");
result.add("berk-\tshire", "bh @r k\tS @r");
result.add("berk-\tshires", "bh @r k\tS I@ z");
result.add("berke", "bh @r k");
result.add("berke-\tley", "bh @r k\tl i:");
result.add("berke-\tley's", "bh @r k\tl i: z");
result.add("berle", "bh @r l");
result.add("berm", "bh @r m");
result.add("bern", "bh @r n");
result.add("bern-\tbach", "bh @r n\tb Q k");
result.add("bern-\thard", "bh @r n\th Q@ d");
result.add("bern-\thardt", "bh @r n\th Q@ t");
result.add("berne", "bh @r n");
result.add("berns", "bh @r n z");
result.add("berns-\ttein", "bh @r n\ts t aI n");
result.add("berns-\ttein's", "bh @r n\ts t i: n z");
result.add("bernt", "bh @r n t");
result.add("bert", "bh @r t");
result.add("bert-\thold", "bh @r\tT @U l d");
result.add("bert-\tram", "bh @r t\tr V m");
result.add("bert-\trand", "bh @r t\tr V n d");
result.add("berte", "bh @r t");
result.add("berth", "bh @r T");
result.add("berths", "bh @r T s");
result.add("bertsche", "bh @r tS");
result.add("bes", "bh i: z");
result.add("bes-\thore", "bh e\tS @r");
result.add("bes-\tpeak", "bh V s\tp i: k");
result.add("bes-\tpeaks", "bh V s\tp i: k s");
result.add("bes-\tpec-\tta-\tcled", "bh V s\tp e k\tt V\tk V l d");
result.add("bes-\tse-\tmer", "bh e\ts V\tm @r");
result.add("bes-\tsie", "bh e\ts i:");
result.add("bes-\tsy", "bh e\ts i:");
result.add("bes-\tted", "bh e s\tt V d");
result.add("bes-\tter", "bh e s\tt @r");
result.add("bes-\ttia-\tli-\tty", "bh e s\ttS I@\tl I\tt i:");
result.add("bes-\ttial", "bh e s\ttS V l");
result.add("bes-\tting", "bh e s\tt I N");
result.add("bes-\ttow", "bh V s\tt @U");
result.add("bes-\ttow-\ting", "bh V s\tt @U\tI N");
result.add("bes-\ttowed", "bh V s\tt @U d");
result.add("bes-\ttows", "bh V s\tt @U z");
result.add("bess", "bh e s");
result.add("besse", "bh e s");
result.add("best", "bh e s t");
result.add("best-\trode", "bh V s\tt r @U d");
result.add("best-\tsel-\tler", "bh e s\tt s e\tl @r");
result.add("best-\tsel-\tlers", "bh e s\tt s e\tl @r z");
result.add("best-\tsel-\tling", "bh e s\tt s e\tl I N");
result.add("best's", "bh e s t s");
result.add("bet", "bh e t");
result.add("bet-\thune", "bh V T\tj u: n");
result.add("bet-\tra-\tyal", "bh V t\tr eI\tV l");
result.add("bet-\tra-\tyals", "bh V t\tr eI\tV l z");
result.add("bet-\tra-\tying", "bh V t\tr eI\tI N");
result.add("bet-\tray", "bh V t\tr eI");
result.add("bet-\trayed", "bh V t\tr eI d");
result.add("bet-\trays", "bh V t\tr eI z");
result.add("bet-\tsey", "bh e t\ts i:");
result.add("bet-\tsy", "bh e t\ts i:");
result.add("bet-\tsy's", "bh e t\ts i: z");
result.add("bet-\tta", "bh e\tt V");
result.add("bet-\tte", "bh e\tt i:");
result.add("bet-\tte-\tring", "bh e\tt @r\tI N");
result.add("bet-\tten-\tcourt", "bh e\tt V n\tk O@ t");
result.add("bet-\tten-\tdorf", "bh e\tt V n\td O@ f");
result.add("bet-\tter", "bh e\tt @r");
result.add("bet-\tter-\tment", "bh e\tt @r\tm V n t");
result.add("bet-\tter-\tton", "bh e\tt @r\tt V n");
result.add("bet-\ttered", "bh e\tt @r d");
result.add("bet-\tters", "bh e\tt @r z");
result.add("bet-\tti", "bh e\tt i:");
result.add("bet-\tti-\tna", "bh V\tt i:\tn V");
result.add("bet-\tting", "bh e\tt I N");
result.add("bet-\ttor", "bh e\tt @r");
result.add("bet-\ttors", "bh e\tt @r z");
result.add("bet-\tty", "bh e\tt i:");
result.add("bet-\tty's", "bh e\tt i: z");
result.add("bet-\tween", "bh I t\tw i: n");
result.add("bet-\tweens", "bh I t\tw i: n z");
result.add("beth-\tle-\them's", "bh e T\tl V\th e m z");
result.add("beth-\tpage", "bh e T\tp eI dZ");
result.add("bets", "bh e t s");
result.add("bet's", "bh e t s");
result.add("bett", "bh e t");
result.add("betz", "bh e t s");
result.add("beu-\tlah", "bh j u:\tl V");
result.add("beu-\tt-\tler", "bh OI\tt V\tl @r");
result.add("bev", "bh e v");
result.add("beve-\tra-\tges", "bh e v\tr I\tdZ V z");
result.add("bex-\tley", "bh e k\ts l i:");
result.add("bey", "bh eI");
result.add("bha-\tra-\tta", "bh Q@\tQ\tt V");
result.add("bhak-\tta", "bh Q k\tt V");
result.add("bhan-\tgra", "bh Q N\tg r V");
result.add("bhatt", "bh { t");
result.add("bho-\tpal", "bh @U\tp Q l");
result.add("bhu-\ttan", "bh u:\tt { n");
result.add("bhut-\tto", "bh u:\tt @U");
result.add("bhut-\tto's", "bh u:\tt @U z");
result.add("bi", "bh aI");
result.add("bi-\ta-\tgi", "bh i:\tQ\tdZ i:");
result.add("bi-\ta-\tlik", "bh i:\tQ\tl I k");
result.add("bi-\ta-\tly", "bh i:\tQ\tl i:");
result.add("bi-\ta-\tmon-\tte", "bh i:\tV\tm O: n\tt i:");
result.add("bi-\ta-\tses", "bh aI\tV\ts V z");
result.add("bi-\tan-\tca", "bh i:\tQ N\tk V");
result.add("bi-\tan-\tchi", "bh i:\tQ n\ttS i:");
result.add("bi-\tan-\tchi-\tni", "bh i:\tQ n\ttS i:\tn i:");
result.add("bi-\tan-\tco", "bh i:\tQ N\tk @U");
result.add("bi-\tan-\tnu-\tal", "bh aI\t{\tn u:\tV l");
result.add("bi-\tas", "bh aI\tV s");
result.add("bi-\tased", "bh aI\tV s t");
result.add("bi-\tax-\ti-\tal", "bh aI\t{ k\ts i:\tV l");
result.add("bi-\tbeau", "bh I\tb @U");
result.add("bi-\tbi", "bh I\tb i:");
result.add("bi-\tbi's", "bh I\tb i: z");
result.add("bi-\tble", "bh aI\tb V l");
result.add("bi-\tbles", "bh aI\tb V l z");
result.add("bi-\tble's", "bh aI\tb V l z");
result.add("bi-\tcar-\tbo-\tnate", "bh aI\tk Q@\tb V\tn V t");
result.add("bi-\tcen-\tte-\tna-\try", "bh aI\ts e n\tt V\tn e@\ti:");
result.add("bi-\tcen-\tten-\tni-\tal", "bh aI\ts e n\tt e\tn i:\tV l");
result.add("bi-\tceps", "bh aI\ts e p s");
result.add("bi-\tcoas-\ttal", "bh I\tk @U s\tt V l");
result.add("bi-\tcus-\tpid", "bh aI\tk V s\tp I d");
result.add("bi-\tcus-\tpids", "bh aI\tk V s\tp I d z");
result.add("bi-\tcy-\tc-\tling", "bh aI\ts I\tk V\tl I N");
result.add("bi-\tcy-\tcle", "bh aI\ts I\tk V l");
result.add("bi-\tcy-\tcled", "bh aI\ts I\tk V l d");
result.add("bi-\tcy-\tcles", "bh aI\ts I\tk V l z");
result.add("bi-\tcyc-\tlist", "bh aI\ts I k\tl I s t");
result.add("bi-\tcyc-\tlists", "bh aI\ts I k\tl I s t s");
result.add("bi-\tden", "bh aI\td V n");
result.add("bi-\tding", "bh aI\td I N");
result.add("bi-\ten-\tni-\tal", "bh aI\te\tn i:\tV l");
result.add("bi-\tfi-\tda", "bh I\tf I\td V");
result.add("bi-\tfo-\tcal", "bh aI\tf @U\tk V l");
result.add("bi-\tfo-\tcals", "bh aI\tf @U\tk V l z");
result.add("bi-\tfur-\tca-\tted", "bh I\tf @r\tk eI\tt V d");
result.add("bi-\tfur-\tca-\ttion", "bh I\tf @r\tk eI\tS V n");
result.add("bi-\tfur-\tcate", "bh I\tf @r\tk eI t");
result.add("bi-\tg-\tler", "bh aI\tg V\tl @r");
result.add("bi-\tge-\tlow", "bh I\tg V\tl @U");
result.add("bi-\tge-\tlow's", "bh I\tg V\tl @U z");
result.add("bi-\tgeyes", "bh I\tg aI z");
result.add("bi-\tgo-\tted", "bh I\tg V\tt V d");
result.add("bi-\tgos", "bh i:\tg @U z");
result.add("bi-\tgot", "bh I\tg V t");
result.add("bi-\tgot-\try", "bh I\tg V t\tr i:");
result.add("bi-\tgots", "bh I\tg V t s");
result.add("bi-\tha-\tri", "bh I\th Q@\ti:");
result.add("bi-\tker", "bh aI\tk @r");
result.add("bi-\tkers", "bh aI\tk @r z");
result.add("bi-\tki-\tni", "bh I\tk i:\tn i:");
result.add("bi-\tki-\tnis", "bh V\tk i:\tn i: z");
result.add("bi-\tking", "bh aI\tk I N");
result.add("bi-\tko", "bh i:\tk @U");
result.add("bi-\tla-\tte-\tral", "bh aI\tl {\tt @r\tV l");
result.add("bi-\tla-\tte-\tral-\tly", "bh aI\tl {\tt @r\tV\tl i:");
result.add("bi-\tlek", "bh I\tl e k");
result.add("bi-\tli-\tous", "bh I\tl i:\tV s");
result.add("bi-\tlic-\tki", "bh V\tl I t\ts k i:");
result.add("bi-\tlin-\tgua-\tli-\tsm", "bh aI\tl I N\tg w V\tl I\tz V m");
result.add("bi-\tlin-\tgual", "bh aI\tl I N\tg w V l");
result.add("bi-\tlo-\txi", "bh V\tl V k\ts i:");
result.add("bi-\tlo-\txi's", "bh V\tl V k\ts i: z");
result.add("bi-\tlow", "bh I\tl @U");
result.add("bi-\tna-\try", "bh aI\tn @r\ti:");
result.add("bi-\tna-\ttio-\tnal", "bh aI\tn {\tS V\tn V l");
result.add("bi-\tnette", "bh I\tn e t");
result.add("bi-\tno-\tcu-\tlar", "bh V\tn Q k\tj V\tl @r");
result.add("bi-\tno-\tcu-\tlars", "bh V\tn Q k\tj V\tl @r z");
result.add("bi-\tno-\tmi-\tal", "bh aI\tn @U\tm i:\tV l");
result.add("bi-\to", "bh aI\t@U");
result.add("bi-\to-\tche-\tmi-\tcal", "bh aI\t@U\tk e\tm I\tk V l");
result.add("bi-\to-\tche-\tmist", "bh aI\t@U\tk e\tm I s t");
result.add("bi-\to-\tche-\tmist-\try", "bh aI\t@U\tk e\tm I s\tt r i:");
result.add("bi-\to-\tcont-\trol", "bh aI\tV\tk Q n\tt r Q l");
result.add("bi-\to-\tdeg-\tra-\tda-\tble", "bh aI\t@U\td V g\tr eI\td V\tb V l");
result.add("bi-\to-\tdi-\tver-\tsi-\tty", "bh aI\t@U\td aI\tv @r\ts I\tt i:");
result.add("bi-\to-\te-\tthics", "bh aI\t@U\te\tT I k s");
result.add("bi-\to-\ten-\tgi-\tneer", "bh aI\t@U\te n\tdZ I\tn I@");
result.add("bi-\to-\ten-\tgi-\tneered", "bh aI\t@U\te n\tdZ I\tn I@ d");
result.add("bi-\to-\ten-\tgin-\tee-\tring", "bh aI\t@U\te n\tdZ I\tn I@\tI N");
result.add("bi-\to-\tfeed-\tback", "bh aI\t@U\tf i: d\tb { k");
result.add("bi-\to-\tgen", "bh aI\t@U\tdZ e n");
result.add("bi-\to-\tgen's", "bh aI\t@U\tdZ e n z");
result.add("bi-\to-\tgra-\tpher", "bh aI\tQ g\tr V\tf @r");
result.add("bi-\to-\tgra-\tphers", "bh aI\tQ g\tr V\tf @r z");
result.add("bi-\to-\tgra-\tphi-\tcal", "bh aI\tV g\tr {\tf I\tk V l");
result.add("bi-\to-\tgra-\tphies", "bh aI\tQ g\tr V\tf i: z");
result.add("bi-\to-\tgra-\tphy", "bh aI\tQ g\tr V\tf i:");
result.add("bi-\to-\tha-\tzard", "bh aI\t@U\th {\tz @r d");
result.add("bi-\to-\tha-\tzards", "bh aI\t@U\th {\tz @r d z");
result.add("bi-\to-\tlo-\tgi-\tcal", "bh aI\tV\tl Q\tdZ I\tk V l");
result.add("bi-\to-\tlo-\tgi-\tcals", "bh aI\tV\tl Q\tdZ I\tk V l z");
result.add("bi-\to-\tlo-\tgic", "bh aI\tV\tl Q\tdZ I k");
result.add("bi-\to-\tlo-\tgical-\tly", "bh aI\tV\tl Q\tdZ I k\tl i:");
result.add("bi-\to-\tlo-\tgics", "bh aI\tV\tl Q\tdZ I k s");
result.add("bi-\to-\tlo-\tgist", "bh aI\tQ\tl V\tdZ V s t");
result.add("bi-\to-\tlo-\tgists", "bh aI\tQ\tl V\tdZ V s t s");
result.add("bi-\to-\tlo-\tgy", "bh aI\tQ\tl V\tdZ i:");
result.add("bi-\to-\tlo-\tgy's", "bh aI\tQ\tl V\tdZ i: z");
result.add("bi-\to-\tma-\tte-\tri-\tal", "bh aI\t@U\tm V\tt I@\ti:\tV l");
result.add("bi-\to-\tma-\tte-\tri-\tals", "bh aI\t@U\tm V\tt I@\ti:\tV l z");
result.add("bi-\to-\tmass", "bh aI\tV\tm { s");
result.add("bi-\to-\tme-\tdi-\tcal", "bh aI\t@U\tm e\td I\tk V l");
result.add("bi-\to-\tphy-\tsics", "bh aI\t@U\tf I\ts I k s");
result.add("bi-\to-\tsafe-\tty", "bh aI\t@U\ts eI f\tt i:");
result.add("bi-\to-\tsci-\ten-\tces", "bh aI\tO:\ts i:\te n\ts V z");
result.add("bi-\to-\tsci-\tence", "bh aI\t@U\ts i:\tV n s");
result.add("bi-\to-\tsen-\tsor", "bh aI\t@U\ts e n\ts @r");
result.add("bi-\to-\tsen-\tsors", "bh aI\t@U\ts e n\ts @r z");
result.add("bi-\to-\tsis", "bh i:\t@U\tz I s");
result.add("bi-\to-\ttech", "bh aI\t@U\tt e k");
result.add("bi-\to-\ttech-\tno-\tlo-\tgi-\tcal", "bh aI\t@U\tt e k\tn V\tl Q\tdZ I\tk V l");
result.add("bi-\to-\ttech-\tno-\tlo-\tgies", "bh aI\t@U\tt e k\tn Q\tl V\tdZ i: z");
result.add("bi-\to-\ttech-\tno-\tlo-\tgy", "bh aI\t@U\tt e k\tn Q\tl V\tdZ i:");
result.add("bi-\to-\ttech-\tno-\tlo-\tgy's", "bh aI\t@U\tt e k\tn Q\tl V\tdZ i: z");
result.add("bi-\to-\ttechs", "bh aI\t@U\tt e k s");
result.add("bi-\to-\ttin", "bh aI\tV\tt V n");
result.add("bi-\to-\ttite", "bh aI\tV\tt aI t");
result.add("bi-\tome", "bh aI\t@U m");
result.add("bi-\tomes", "bh aI\t@U m z");
result.add("bi-\ton-\tdo", "bh i:\t@U n\td @U");
result.add("bi-\top-\tsies", "bh aI\tQ p\ts i: z");
result.add("bi-\top-\tsy", "bh aI\tQ p\ts i:");
result.add("bi-\tos", "bh aI\t@U s");
result.add("bi-\tos-\tphere", "bh aI\t@U s\tf I@");
result.add("bi-\tos-\tpheres", "bh aI\t@U s\tf I@ z");
result.add("bi-\tos-\tphere's", "bh aI\t@U s\tf I@ z");
result.add("bi-\tpar-\tti-\tsan", "bh aI\tp Q@\tt I\tz V n");
result.add("bi-\tpar-\tti-\tsan-\tship", "bh aI\tp Q@\tt I\tz V n\tS I p");
result.add("bi-\tphe-\tnyl", "bh I\tf V\tn V l");
result.add("bi-\tphe-\tnyls", "bh I\tf V\tn V l z");
result.add("bi-\tpo-\tlar", "bh aI\tp @U\tl @r");
result.add("bi-\tra-\tcial", "bh aI\tr eI\tS V l");
result.add("bi-\treme", "bh aI\tr i: m");
result.add("bi-\tremes", "bh aI\tr i: m z");
result.add("bi-\tro", "bh I@\t@U");
result.add("bi-\tron", "bh aI\tr V n");
result.add("bi-\tros", "bh aI\tr @U z");
result.add("bi-\tse-\txu-\ta-\tli-\tty", "bh aI\ts e k\tS u:\t{\tl I\tt i:");
result.add("bi-\tse-\txu-\tal", "bh aI\ts e k\tS u:\tV l");
result.add("bi-\tse-\txu-\tals", "bh aI\ts e k\tS u:\tV l z");
result.add("bi-\tshop", "bh I\tS V p");
result.add("bi-\tshop-\trics", "bh I\tS V p\tr I k s");
result.add("bi-\tshops", "bh I\tS V p s");
result.add("bi-\tshop's", "bh I\tS V p s");
result.add("bi-\tson", "bh aI\ts V n");
result.add("bi-\tter", "bh aI\tt @r");
result.add("bi-\tting", "bh aI\tt I N");
result.add("bi-\ttu-\tmen", "bh I\tt u:\tm V n");
result.add("bi-\ttu-\tmi-\tnous", "bh V\tt u:\tm V\tn V s");
result.add("bi-\tvalve", "bh aI\tv { l v");
result.add("bi-\tvalves", "bh aI\tv { l v z");
result.add("bi-\tvins", "bh I\tv I n z");
result.add("bi-\tvouac", "bh I v\tw { k");
result.add("bi-\tweek-\tly", "bh aI\tw i: k\tl i:");
result.add("bi-\tzarre", "bh V\tz Q@");
result.add("bib", "bh I b");
result.add("bib-\tby", "bh I\tb i:");
result.add("bib-\tli-\tcal", "bh I b\tl I\tk V l");
result.add("bib-\tli-\to-\tgra-\tphies", "bh I b\tl i:\tQ g\tr V\tf i: z");
result.add("bib-\tli-\to-\tgra-\tphy", "bh I b\tl i:\tQ g\tr V\tf i:");
result.add("bibb", "bh I b");
result.add("bibbs", "bh I b z");
result.add("bibs", "bh I b z");
result.add("bic", "bh I k");
result.add("bic-\tke-\tring", "bh I\tk @r\tI N");
result.add("bic-\tker", "bh I\tk @r");
result.add("bic-\tkered", "bh I\tk @r d");
result.add("bic-\tkers", "bh I\tk @r z");
result.add("bice", "bh aI s");
result.add("bick", "bh I k");
result.add("bick-\tmore", "bh I k\tm O@");
result.add("bick-\tnell", "bh I k\tn V l");
result.add("bid", "bh I d");
result.add("bid-\tder", "bh I\td @r");
result.add("bid-\tders", "bh I\td @r z");
result.add("bid-\tder's", "bh I\td @r z");
result.add("bid-\tdie", "bh I\td i:");
result.add("bid-\tding", "bh I\td I N");
result.add("bid-\tdy", "bh I\td i:");
result.add("bid-\twell", "bh I d\tw e l");
result.add("bidd-\tle", "bh I\td V l");
result.add("bidd-\tle's", "bh I\td V l z");
result.add("bide", "bh aI d");
result.add("bids", "bh I d z");
result.add("bid's", "bh I d z");
result.add("bie-\tbel", "bh i:\tb V l");
result.add("bie-\tber", "bh i:\tb @r");
result.add("bie-\tder-\tmann", "bh aI\td @r\tm V n");
result.add("bie-\tder-\tmeier", "bh i:\td @r\tm aI r");
result.add("bie-\tgel", "bh i:\tg V l");
result.add("bie-\tla", "bh i:\tl V");
result.add("bie-\tle-\tfeld", "bh i:\tl V\tf e l d");
result.add("biel", "bh i: l");
result.add("biel-\tby", "bh i: l\tb i:");
result.add("bien", "bh i: n");
result.add("bien-\tna-\tle", "bh i:\te\tn eI l");
result.add("bien-\tve-\tnu", "bh V n\tv e\tn u:");
result.add("bien-\tve-\tnue", "bh V n\tv eI n\tw e");
result.add("bier", "bh i: r");
result.add("bier-\tman", "bh I@\tm V n");
result.add("bier-\tnat", "bh I@\tn { t");
result.add("bierce", "bh I@ s");
result.add("biers", "bh i: r z");
result.add("biff", "bh I f");
result.add("big", "bh I g");
result.add("big-\tfoot", "bh I g\tf U t");
result.add("big-\tford", "bh I g\tf @r d");
result.add("big-\tger", "bh I\tg @r");
result.add("big-\tgest", "bh I\tg V s t");
result.add("big-\tgie", "bh I\tg i:");
result.add("big-\tgies", "bh I\tg i: z");
result.add("big-\tgins", "bh I\tg I n z");
result.add("big-\thorn", "bh I g\th O@ n");
result.add("big-\thorns", "bh I g\th O@ n z");
result.add("big-\tlow", "bh I g\tl @U");
result.add("big-\tness", "bh I g\tn V s");
result.add("big-\ttime", "bh I g\tt aI m");
result.add("big-\twig", "bh I g\tw I g");
result.add("big-\twigs", "bh I g\tw I g z");
result.add("biggs", "bh I g z");
result.add("bigs", "bh I g z");
result.add("bike", "bh aI k");
result.add("biked", "bh aI k t");
result.add("bikes", "bh aI k s");
result.add("bil", "bh I l");
result.add("bil-\tbao", "bh I l\tb aU");
result.add("bil-\tbo", "bh I l\tb @U");
result.add("bil-\tby", "bh I l\tb i:");
result.add("bil-\tking", "bh I l\tk I N");
result.add("bil-\tla-\tble", "bh I\tl V\tb V l");
result.add("bil-\tlan-\tcourt", "bh I\tl V n\tk O@ t");
result.add("bil-\tlard", "bh V\tl Q@ d");
result.add("bil-\tle-\tri-\tca", "bh I\tl @r\ti:\tk V");
result.add("bil-\tle-\tter", "bh I\tl i:\tt @r");
result.add("bil-\tler", "bh I\tl @r");
result.add("bil-\tlet", "bh I\tl V t");
result.add("bil-\tlets", "bh I\tl V t s");
result.add("bil-\tli-\tton", "bh I\tl I\tt V n");
result.add("bil-\tliard", "bh I l\tj @r d");
result.add("bil-\tliards", "bh I l\tj @r d z");
result.add("bil-\tlie", "bh I\tl i:");
result.add("bil-\tlin-\tgham", "bh I\tl I N\th { m");
result.add("bil-\tling", "bh I\tl I N");
result.add("bil-\tlings", "bh I\tl I N z");
result.add("bil-\tlings-\tley", "bh I\tl I N\tz l i:");
result.add("bil-\tlio-\tnaire", "bh I l\tj V\tn e@");
result.add("bil-\tlio-\tnaires", "bh I l\tj V\tn e@ z");
result.add("bil-\tlion", "bh I l\tj V n");
result.add("bil-\tlions", "bh I l\tj V n z");
result.add("bil-\tlionth", "bh I l\tj V n T");
result.add("bil-\tlionths", "bh I l\tj V n T s");
result.add("bil-\tlon", "bh I\tl V n");
result.add("bil-\tlow", "bh I\tl @U");
result.add("bil-\tlow-\ting", "bh I\tl @U\tI N");
result.add("bil-\tlowed", "bh I\tl @U d");
result.add("bil-\tlows", "bh I\tl @U z");
result.add("bil-\tly", "bh I\tl i:");
result.add("bil-\tly's", "bh I\tl i: z");
result.add("bile", "bh aI l");
result.add("biles", "bh aI l z");
result.add("bilk", "bh I l k");
result.add("bilked", "bh I l k t");
result.add("bill", "bh I l");
result.add("bill-\tboard", "bh I l\tb O@ d");
result.add("bill-\tboards", "bh I l\tb O@ d z");
result.add("bill-\tboard's", "bh I l\tb O@ d z");
result.add("bill-\tfold", "bh I l\tf @U l d");
result.add("bill-\tman", "bh I l\tm V n");
result.add("bille", "bh aI l");
result.add("billed", "bh I l d");
result.add("bills", "bh I l z");
result.add("bill's", "bh I l z");
result.add("bils-\tki", "bh I l\ts k i:");
result.add("bilt-\tmore", "bh I l\tt m O@");
result.add("bin-\tder", "bh aI n\td @r");
result.add("bin-\tders", "bh aI n\td @r z");
result.add("bin-\tding", "bh aI n\td I N");
result.add("bin-\tdle", "bh I n\td V l");
result.add("bin-\tdles", "bh I n\td V l z");
result.add("bin-\tford", "bh I n\tf @r d");
result.add("bin-\tger", "bh I\tN @r");
result.add("bin-\tges", "bh I n\tdZ V z");
result.add("bin-\tging", "bh I N\tg I N");
result.add("bin-\tgo", "bh I N\tg @U");
result.add("bin-\tnie", "bh I\tn i:");
result.add("bin-\tning", "bh I\tn I N");
result.add("bind", "bh aI n d");
result.add("binds", "bh aI n d z");
result.add("bines", "bh aI n z");
result.add("bing", "bh I N");
result.add("bing-\tham", "bh I\tN V m");
result.add("bing-\tham-\tton", "bh I\tN V m\tt V n");
result.add("bing-\tle", "bh I N\tg V l");
result.add("binge", "bh I n dZ");
result.add("bink", "bh I N k");
result.add("bins", "bh I n z");
result.add("bip-\tlane", "bh aI p\tl eI n");
result.add("bip-\tpus", "bh I\tp V s");
result.add("bir-\tchard", "bh @r\tk @r d");
result.add("bir-\tcher", "bh @r\ttS @r");
result.add("bir-\tch's", "bh @r\ttS V z");
result.add("bir-\tder", "bh @r\td @r");
result.add("bir-\tders", "bh @r\td @r z");
result.add("bir-\tdie", "bh @r\td i:");
result.add("bir-\tdied", "bh @r\td i: d");
result.add("bir-\tdy", "bh @r\td i:");
result.add("bir-\tkett", "bh @r\tk V t");
result.add("bir-\tkhead", "bh @r k\th e d");
result.add("bir-\tky", "bh @r\tk i:");
result.add("bir-\tman", "bh @r\tm V n");
result.add("bir-\tming-\tham", "bh @r\tm I N\th { m");
result.add("bir-\tney", "bh @r\tn i:");
result.add("bir-\tthing", "bh @r\tT I N");
result.add("birch", "bh @r tS");
result.add("bird", "bh @r d");
result.add("bird-\tcage", "bh @r d\tk eI dZ");
result.add("bird-\tlife", "bh @r d\tl aI f");
result.add("bird-\tman", "bh @r d\tm { n");
result.add("bird-\tsall", "bh @r d\tz O: l");
result.add("bird-\tsong", "bh @r d\ts O: N");
result.add("birds", "bh @r d z");
result.add("bird's", "bh @r d z");
result.add("birk", "bh @r k");
result.add("birk-\tner", "bh @r k\tn @r");
result.add("birks", "bh @r k s");
result.add("birle", "bh @r l");
result.add("birr", "bh @r");
result.add("birt", "bh @r t");
result.add("birth", "bh @r T");
result.add("birth-\tday", "bh @r T\td eI");
result.add("birth-\tdays", "bh @r T\td eI z");
result.add("birth-\tmark", "bh @r T\tm Q@ k");
result.add("birth-\tmarks", "bh @r T\tm Q@ k s");
result.add("birth-\tplace", "bh @r T\tp l eI s");
result.add("birth-\trate", "bh @r T\tr eI t");
result.add("birth-\trates", "bh @r T\tr eI t s");
result.add("birth-\tright", "bh @r T\tr aI t");
result.add("births", "bh @r T s");
result.add("bis", "bh I s");
result.add("bis-\tbee", "bh I s\tb i:");
result.add("bis-\tcayne", "bh I s\tk eI n");
result.add("bis-\tcoe", "bh I s\tk @U");
result.add("bis-\tcuit", "bh I s\tk I t");
result.add("bis-\tcuits", "bh I s\tk I t s");
result.add("bis-\tmarck", "bh I z\tm Q@ k");
result.add("bis-\tmarck's", "bh I z\tm Q@ k s");
result.add("bis-\tmark", "bh I z\tm Q@ k");
result.add("bis-\tmuth", "bh I z\tm V T");
result.add("bis-\tsell", "bh I\ts V l");
result.add("bis-\tset", "bh I\ts I t");
result.add("bis-\tso", "bh i:\ts @U");
result.add("bis-\tson", "bh I\ts V n");
result.add("bise", "bh aI z");
result.add("bish", "bh I S");
result.add("bisque", "bh I s k");
result.add("bist-\tro", "bh I s\tt r @U");
result.add("bit", "bh I t");
result.add("bit-\tches", "bh I\ttS V z");
result.add("bit-\tchy", "bh I\ttS i:");
result.add("bit-\tsy", "bh I t\ts i:");
result.add("bit-\tte-\trest", "bh I\tt @r\tV s t");
result.add("bit-\tten", "bh I\tt V n");
result.add("bit-\tter", "bh I\tt @r");
result.add("bit-\tter-\tly", "bh I\tt @r\tl i:");
result.add("bit-\tter-\tness", "bh I\tt @r\tn V s");
result.add("bit-\tter-\troot", "bh I\tt @r\tr u: t");
result.add("bit-\tters", "bh I\tt @r z");
result.add("bit-\tters-\tweet", "bh I\tt @r s\tw i: t");
result.add("bit-\ttin-\tger", "bh I\tt I\tN @r");
result.add("bit-\tting", "bh I\tt I N");
result.add("bit-\tty", "bh I\tt i:");
result.add("bitch", "bh I tS");
result.add("bite", "bh aI t");
result.add("bite-\tsize", "bh I t\ts aI z");
result.add("bites", "bh aI t s");
result.add("bits", "bh I t s");
result.add("bitt-\tner", "bh I t\tn @r");
result.add("bix", "bh I k s");
result.add("bix-\tby", "bh I k\ts b i:");
result.add("bix-\tler", "bh I k\ts l @r");
result.add("biz", "bh I z");
result.add("bjork", "bh j O@ k");
result.add("bjorn", "bh j O@ n");
result.add("bla-\tded", "bh l eI\td V d");
result.add("bla-\tden", "bh l eI\td V n");
result.add("bla-\tding", "bh l eI\td I N");
result.add("bla-\tkey", "bh l eI\tk i:");
result.add("bla-\tlock", "bh l {\tl Q k");
result.add("bla-\tming", "bh l eI\tm I N");
result.add("bla-\tsi-\ta", "bh l Q\ts i:\tV");
result.add("bla-\tsi-\tus", "bh l eI\ts i:\tV s");
result.add("bla-\tsin-\tga-\tme", "bh l Q\ts I N\tg Q\tm i:");
result.add("bla-\ttant", "bh l eI\tt V n t");
result.add("bla-\ttant-\tly", "bh l eI\tt V n\tt l i:");
result.add("bla-\tther", "bh l {\tD @r");
result.add("bla-\tzer", "bh l eI\tz @r");
result.add("bla-\tzers", "bh l eI\tz @r z");
result.add("bla-\tzes", "bh l eI\tz V z");
result.add("bla-\tzing", "bh l eI\tz I N");
result.add("blac-\tke-\tning", "bh l {\tk V\tn I N");
result.add("blac-\tken", "bh l {\tk V n");
result.add("blac-\tkened", "bh l {\tk V n d");
result.add("blac-\tkens", "bh l {\tk V n z");
result.add("blac-\tker", "bh l {\tk @r");
result.add("blac-\tkest", "bh l {\tk V s t");
result.add("blac-\tkett", "bh l {\tk I t");
result.add("blach-\tly", "bh l Q tS\tl i:");
result.add("black", "bh l { k");
result.add("black-\tball", "bh l { k\tb O: l");
result.add("black-\tber-\tries", "bh l { k\tb e@\ti: z");
result.add("black-\tber-\try", "bh l { k\tb e@\ti:");
result.add("black-\tbird", "bh l { k\tb @r d");
result.add("black-\tbirds", "bh l { k\tb @r d z");
result.add("black-\tboard", "bh l { k\tb O@ d");
result.add("black-\tboards", "bh l { k\tb O@ d z");
result.add("black-\tburn", "bh l { k\tb @r n");
result.add("black-\tfoot", "bh l { k\tf U t");
result.add("black-\tford", "bh l { k\tf @r d");
result.add("black-\thawk", "bh l { k\th O: k");
result.add("black-\thawk's", "bh l { k\th O: k s");
result.add("black-\theath", "bh l { k\th i: T");
result.add("black-\tjack", "bh l { k\tdZ { k");
result.add("black-\tlis-\tted", "bh l { k\tl I s\tt V d");
result.add("black-\tlis-\tting", "bh l { k\tl I s\tt I N");
result.add("black-\tlist", "bh l { k\tl I s t");
result.add("black-\tmail", "bh l { k\tm eI l");
result.add("black-\tmailed", "bh l { k\tm eI l d");
result.add("black-\twell", "bh l { k\tw e l");
result.add("black-\twood", "bh l { k\tw U d");
result.add("blacked", "bh l { k t");
result.add("blad-\tder", "bh l {\td @r");
result.add("blad-\tders", "bh l {\td @r z");
result.add("blade", "bh l eI d");
result.add("blades", "bh l eI d z");
result.add("blagg", "bh l { g");
result.add("blah", "bh l Q");
result.add("blain", "bh l eI n");
result.add("blaine", "bh l eI n");
result.add("blair", "bh l e@");
result.add("blair's", "bh l e@ z");
result.add("blais-\tdell", "bh l eI s\td V l");
result.add("blaise", "bh l eI z");
result.add("blaize", "bh l eI z");
result.add("blake", "bh l eI k");
result.add("blake-\tley", "bh l eI k\tl i:");
result.add("blake-\tley's", "bh l eI k\tl i: z");
result.add("blake-\tly", "bh l eI k\tl i:");
result.add("blake-\tly's", "bh l eI k\tl i: z");
result.add("blake-\tmore", "bh l eI k\tm O@");
result.add("blake's", "bh l eI k s");
result.add("blakes-\tlee", "bh l eI k\ts l i:");
result.add("blame", "bh l eI m");
result.add("blame-\tless", "bh l eI m\tl V s");
result.add("blamed", "bh l eI m d");
result.add("blames", "bh l eI m z");
result.add("blan", "bh l { n");
result.add("blan-\tca", "bh l Q N\tk V");
result.add("blan-\tchard", "bh l { n\ttS @r d");
result.add("blan-\tchard's", "bh l { n\ttS @r d z");
result.add("blan-\tchette", "bh l V n\tS e t");
result.add("blan-\tco", "bh l { N\tk @U");
result.add("blan-\tda", "bh l { n\td V");
result.add("blan-\tder", "bh l { n\td @r");
result.add("blan-\tding", "bh l { n\td I N");
result.add("blan-\tdish-\tment", "bh l { n\td I S\tm V n t");
result.add("blan-\tdish-\tments", "bh l { n\td I S\tm V n t s");
result.add("blan-\tdon", "bh l { n\td V n");
result.add("blan-\tford", "bh l { n\tf @r d");
result.add("blan-\tke-\tted", "bh l { N\tk V\tt V d");
result.add("blan-\tke-\tting", "bh l { N\tk V\tt I N");
result.add("blan-\tken-\tship", "bh l { N\tk V n\tS I p");
result.add("blan-\tket", "bh l { N\tk V t");
result.add("blan-\tkets", "bh l { N\tk V t s");
result.add("blan-\tking", "bh l { N\tk I N");
result.add("blan-\tton", "bh l { n\tt V n");
result.add("blanc", "bh l { N k");
result.add("blanch", "bh l { n tS");
result.add("blanche", "bh l { n tS");
result.add("bland", "bh l { n d");
result.add("bland-\tford", "bh l { n\td f O@ d");
result.add("bland-\tly", "bh l { n\td l i:");
result.add("bland-\tness", "bh l { n\td n V s");
result.add("blane", "bh l eI n");
result.add("blank", "bh l { N k");
result.add("blank-\tly", "bh l { N\tk l i:");
result.add("blanked", "bh l { N k t");
result.add("blanks", "bh l { N k s");
result.add("blar-\ting", "bh l e@\tI N");
result.add("blare", "bh l e@");
result.add("blared", "bh l e@ d");
result.add("blares", "bh l e@ z");
result.add("blas", "bh l Q s");
result.add("blas-\tco", "bh l Q s\tk @U");
result.add("blas-\tdell", "bh l { s\td V l");
result.add("blas-\tphe-\tmous", "bh l { s\tf V\tm V s");
result.add("blas-\tphe-\tmy", "bh l { s\tf V\tm i:");
result.add("blas-\tted", "bh l { s\tt V d");
result.add("blas-\tter", "bh l { s\tt @r");
result.add("blas-\tting", "bh l { s\tt I N");
result.add("blas-\ttoff", "bh l { s\tt O: f");
result.add("blase", "bh l eI z");
result.add("blast", "bh l { s t");
result.add("blast-\toff", "bh l { s\tt O: f");
result.add("blasts", "bh l { s t s");
result.add("blat-\tter", "bh l {\tt @r");
result.add("blatt", "bh l { t");
result.add("blatz", "bh l { t s");
result.add("blau", "bh l aU");
result.add("blau-\tvelt", "bh l aU\tv e l t");
result.add("blay", "bh l eI");
result.add("blay-\tdon", "bh l eI\td V n");
result.add("blayne", "bh l eI n");
result.add("blayze", "bh l eI z");
result.add("blaze", "bh l eI z");
result.add("blazed", "bh l eI z d");
result.add("ble-\tgen", "bh l e\tg V n");
result.add("ble-\tmi-\tshes", "bh l e\tm I\tS V z");
result.add("ble-\tmish", "bh l e\tm I S");
result.add("ble-\tmished", "bh l e\tm I S t");
result.add("ble-\tvins", "bh l e\tv I n z");
result.add("blea", "bh l i:");
result.add("blea-\tcher", "bh l i:\ttS @r");
result.add("blea-\tchers", "bh l i:\ttS @r z");
result.add("blea-\tching", "bh l i:\ttS I N");
result.add("blea-\tker", "bh l i:\tk @r");
result.add("blea-\tkest", "bh l i:\tk V s t");
result.add("blea-\try", "bh l I@\ti:");
result.add("bleach", "bh l i: tS");
result.add("bleached", "bh l i: tS t");
result.add("bleak", "bh l i: k");
result.add("bleak-\tness", "bh l i: k\tn V s");
result.add("blech", "bh l e k");
result.add("bleck", "bh l e k");
result.add("bled", "bh l e d");
result.add("bled-\tsoe", "bh l e d\ts @U");
result.add("blee-\tding", "bh l i:\td I N");
result.add("blee-\tker", "bh l i:\tk @r");
result.add("blee-\tping", "bh l i:\tp I N");
result.add("bleed", "bh l i: d");
result.add("bleeds", "bh l i: d z");
result.add("bleep", "bh l i: p");
result.add("blei-\ter", "bh l aI\t@r");
result.add("blen-\tda", "bh l e n\td V");
result.add("blen-\tded", "bh l e n\td V d");
result.add("blen-\tder", "bh l e n\td @r");
result.add("blen-\tders", "bh l e n\td @r z");
result.add("blen-\tding", "bh l e n\td I N");
result.add("blen-\theim", "bh l e n\th aI m");
result.add("blend", "bh l e n d");
result.add("blends", "bh l e n d z");
result.add("bles-\tses", "bh l e\ts V z");
result.add("bles-\tsing", "bh l e\ts I N");
result.add("bles-\tsing-\tton", "bh l e\ts I N\tt V n");
result.add("bles-\tsings", "bh l e\ts I N z");
result.add("bless", "bh l e s");
result.add("blessed", "bh l e s t");
result.add("blest", "bh l e s t");
result.add("bleu", "bh l u:");
result.add("blew", "bh l u:");
result.add("bley", "bh l eI");
result.add("blick", "bh l I k");
result.add("bligh", "bh l aI");
result.add("bligh-\tted", "bh l aI\tt V d");
result.add("blight", "bh l aI t");
result.add("blimp", "bh l I m p");
result.add("blimps", "bh l I m p s");
result.add("blin-\tded", "bh l aI n\td V d");
result.add("blin-\tder", "bh l aI n\td @r");
result.add("blin-\tders", "bh l aI n\td @r z");
result.add("blin-\tder's", "bh l aI n\td @r z");
result.add("blin-\tding", "bh l aI n\td I N");
result.add("blin-\tking", "bh l I N\tk I N");
result.add("blind", "bh l aI n d");
result.add("blind-\tfol-\tded", "bh l aI n\td f @U l\td V d");
result.add("blind-\tfold", "bh l aI n\td f @U l d");
result.add("blind-\tly", "bh l aI n\td l i:");
result.add("blind-\tness", "bh l aI n\td n V s");
result.add("blind-\tsi-\tded", "bh l aI n\td s aI\td V d");
result.add("blind-\tside", "bh l aI n\td s aI d");
result.add("blinds", "bh l aI n d z");
result.add("blink", "bh l I N k");
result.add("blinked", "bh l I N k t");
result.add("blinks", "bh l I N k s");
result.add("blinn", "bh l I n");
result.add("blip", "bh l I p");
result.add("blips", "bh l I p s");
result.add("blis-\tte-\tring", "bh l I s\tt @r\tI N");
result.add("blis-\tter", "bh l I s\tt @r");
result.add("blis-\ttered", "bh l I s\tt @r d");
result.add("blis-\tters", "bh l I s\tt @r z");
result.add("bliss", "bh l I s");
result.add("bliss-\tful", "bh l I s\tf V l");
result.add("bliss-\tful-\tly", "bh l I s\tf V\tl i:");
result.add("blit-\tzer", "bh l I t\tz @r");
result.add("blit-\tzes", "bh l I t\ts V z");
result.add("blithe", "bh l aI D");
result.add("blithe-\tly", "bh l aI T\tl i:");
result.add("blitz", "bh l I t s");
result.add("blitzed", "bh l I t s t");
result.add("blitzk-\trieg", "bh l I t\ts k r i: g");
result.add("bliz-\tzard", "bh l I\tz @r d");
result.add("bliz-\tzards", "bh l I\tz @r d z");
result.add("blo-\twer", "bh l @U\t@r");
result.add("blo-\twers", "bh l @U\t@r z");
result.add("blo-\twy", "bh l @U\ti:");
result.add("bloa-\tted", "bh l @U\tt V d");
result.add("bloa-\tting", "bh l @U\tt I N");
result.add("bloat", "bh l @U t");
result.add("blob", "bh l Q b");
result.add("blob-\tby", "bh l Q\tb i:");
result.add("blobs", "bh l Q b z");
result.add("bloc", "bh l Q k");
result.add("bloc-\tka-\tded", "bh l Q\tk eI\td V d");
result.add("bloc-\tka-\tding", "bh l Q\tk eI\td I N");
result.add("bloc-\tka-\tges", "bh l Q\tk I\tdZ V z");
result.add("bloc-\tkade", "bh l Q\tk eI d");
result.add("bloc-\tkades", "bh l Q\tk eI d z");
result.add("bloc-\tkage", "bh l Q\tk I dZ");
result.add("bloc-\tker", "bh l Q\tk @r");
result.add("bloc-\tkers", "bh l Q\tk @r z");
result.add("bloc-\tking", "bh l Q\tk I N");
result.add("bloch", "bh l Q k");
result.add("bloch's", "bh l Q k s");
result.add("block", "bh l Q k");
result.add("block-\tbus-\tter", "bh l Q k\tb V s\tt @r");
result.add("block-\tbus-\tters", "bh l Q k\tb V s\tt @r z");
result.add("block-\tbus-\tter's", "bh l Q k\tb V s\tt @r z");
result.add("blocked", "bh l Q k t");
result.add("blocks", "bh l Q k s");
result.add("block's", "bh l Q k s");
result.add("blocs", "bh l Q k s");
result.add("bloc's", "bh l Q k s");
result.add("blod-\tgett", "bh l Q\tdZ V t");
result.add("bloem", "bh l @U m");
result.add("blok", "bh l Q k");
result.add("bloke", "bh l @U k");
result.add("blokes", "bh l @U k s");
result.add("blom-\tberg", "bh l Q m\tb @r g");
result.add("blom-\tquist", "bh l Q m\tk w I s t");
result.add("blon-\tdell", "bh l Q n\td V l");
result.add("blon-\tder", "bh l Q n\td @r");
result.add("blon-\tdie", "bh l Q n\td i:");
result.add("blon-\tdin", "bh l Q n\td I n");
result.add("blond", "bh l Q n d");
result.add("blonde", "bh l Q n d");
result.add("blondes", "bh l Q n d z");
result.add("blonde's", "bh l Q n d z");
result.add("blonds", "bh l Q n d z");
result.add("bloo-\tded", "bh l V\td V d");
result.add("bloo-\tdi-\ter", "bh l V\td i:\t@r");
result.add("bloo-\tdi-\test", "bh l V\td i:\tV s t");
result.add("bloo-\tdied", "bh l V\td i: d");
result.add("bloo-\tdy", "bh l V\td i:");
result.add("bloo-\tmer", "bh l u:\tm @r");
result.add("bloo-\tmers", "bh l u:\tm @r z");
result.add("bloo-\tming", "bh l u:\tm I N");
result.add("bloo-\tming-\tdale", "bh l u:\tm I N\td eI l");
result.add("bloo-\tming-\tdale's", "bh l u:\tm I N\td eI l z");
result.add("bloo-\tming-\tton", "bh l u:\tm I N\tt V n");
result.add("bloo-\tper", "bh l u:\tp @r");
result.add("bloo-\tpers", "bh l u:\tp @r z");
result.add("blood", "bh l V d");
result.add("blood-\tbath", "bh l V d\tb { T");
result.add("blood-\thound", "bh l V d\th aU n d");
result.add("blood-\thounds", "bh l V d\th aU n d z");
result.add("blood-\tless", "bh l V d\tl V s");
result.add("blood-\tlet-\tting", "bh l V d\tl e\tt I N");
result.add("blood-\tline", "bh l V d\tl aI n");
result.add("blood-\tlines", "bh l V d\tl aI n z");
result.add("blood-\tshed", "bh l V d\tS e d");
result.add("blood-\tstain", "bh l V d\ts t eI n");
result.add("blood-\tstained", "bh l V d\ts t eI n d");
result.add("blood-\tstains", "bh l V d\ts t eI n z");
result.add("blood-\tstone", "bh l V d\ts t @U n");
result.add("blood-\tstream", "bh l V d\ts t r i: m");
result.add("blood-\tsuc-\tker", "bh l V d\ts V\tk @r");
result.add("blood-\tsuc-\tkers", "bh l V d\ts V\tk @r z");
result.add("blood-\tsuc-\tking", "bh l V d\ts V\tk I N");
result.add("blood-\tthirs-\tty", "bh l V d\tT @r s\tt i:");
result.add("bloods", "bh l V d z");
result.add("blood's", "bh l V d z");
result.add("bloom", "bh l u: m");
result.add("bloom-\tfield", "bh l u: m\tf i: l d");
result.add("bloomed", "bh l u: m d");
result.add("blooms", "bh l u: m z");
result.add("bloom's", "bh l u: m z");
result.add("blos-\tso-\tming", "bh l Q\ts V\tm I N");
result.add("blos-\tsom", "bh l Q\ts V m");
result.add("blos-\tsomed", "bh l Q\ts V m d");
result.add("blos-\tsoms", "bh l Q\ts V m z");
result.add("blot", "bh l Q t");
result.add("blot-\tter", "bh l Q\tt @r");
result.add("blots", "bh l Q t s");
result.add("blou-\tses", "bh l aU\ts V z");
result.add("blount", "bh l aU n t");
result.add("blouse", "bh l aU s");
result.add("blow", "bh l @U");
result.add("blow-\tfish", "bh l @U\tf I S");
result.add("blow-\ting", "bh l @U\tI N");
result.add("blow-\tout", "bh l @U\taU t");
result.add("blow-\touts", "bh l @U\taU t s");
result.add("blow-\ttorch", "bh l @U\tt O@ tS");
result.add("blow-\tup", "bh l @U\tV p");
result.add("blowed", "bh l @U d");
result.add("blown", "bh l @U n");
result.add("blows", "bh l @U z");
result.add("blox-\tom", "bh l Q k\ts V m");
result.add("blu-\ter", "bh l u:\t@r");
result.add("blu-\test", "bh l u:\tV s t");
result.add("blu-\tey", "bh l u:\ti:");
result.add("blu-\tford", "bh l u:\tf @r d");
result.add("blu-\ting", "bh l u:\tI N");
result.add("blu-\tish", "bh l u:\tI S");
result.add("blu-\tmen-\tfeld", "bh l V\tm V n\tf e l d");
result.add("blu-\tmen-\tthal", "bh l u:\tm V n\tT O: l");
result.add("blu-\tshes", "bh l V\tS V z");
result.add("blu-\tshing", "bh l V\tS I N");
result.add("blub-\tber", "bh l V\tb @r");
result.add("blud-\tgeo-\tning", "bh l V\tdZ V\tn I N");
result.add("blud-\tgeon", "bh l V\tdZ V n");
result.add("blud-\tgeoned", "bh l V\tdZ V n d");
result.add("blue", "bh l u:");
result.add("blue-\tber-\tries", "bh l u:\tb e@\ti: z");
result.add("blue-\tber-\try", "bh l u:\tb e@\ti:");
result.add("blue-\tbird", "bh l u:\tb @r d");
result.add("blue-\tbon-\tnet", "bh l u:\tb Q\tn V t");
result.add("blue-\tbon-\tnets", "bh l u:\tb Q\tn V t s");
result.add("blue-\tchip", "bh l u:\ttS I p");
result.add("blue-\tfield", "bh l u:\tf i: l d");
result.add("blue-\tgrass", "bh l u: g\tr { s");
result.add("blue-\tjay", "bh l u:\tdZ eI");
result.add("blue-\tprint", "bh l u: p\tr I n t");
result.add("blue-\tprints", "bh l u: p\tr I n t s");
result.add("blue-\tstone", "bh l u: s\tt @U n");
result.add("blues", "bh l u: z");
result.add("blue's", "bh l u: z");
result.add("bluf-\tfing", "bh l V\tf I N");
result.add("bluff", "bh l V f");
result.add("bluffed", "bh l V f t");
result.add("bluffs", "bh l V f s");
result.add("bluhm", "bh l V m");
result.add("blum", "bh l u: m");
result.add("blume", "bh l u: m");
result.add("blun-\tde-\tring", "bh l V n\td @r\tI N");
result.add("blun-\tdell", "bh l V n\td V l");
result.add("blun-\tder", "bh l V n\td @r");
result.add("blun-\tdered", "bh l V n\td @r d");
result.add("blun-\tders", "bh l V n\td @r z");
result.add("blun-\tted", "bh l V n\tt V d");
result.add("blun-\tter", "bh l V n\tt @r");
result.add("blun-\ttest", "bh l V n\tt V s t");
result.add("blun-\tting", "bh l V n\tt I N");
result.add("blunk", "bh l V N k");
result.add("blunt", "bh l V n t");
result.add("blunt-\tly", "bh l V n\tt l i:");
result.add("blunt-\tness", "bh l V n\tt n V s");
result.add("blunts", "bh l V n t s");
result.add("blur", "bh l @r");
result.add("blur-\tring", "bh l @r\tI N");
result.add("blur-\try", "bh l @r\ti:");
result.add("blur-\tted", "bh l @r\tt V d");
result.add("blurb", "bh l @r b");
result.add("blurbs", "bh l @r b z");
result.add("blurred", "bh l @r d");
result.add("blurs", "bh l @r z");
result.add("blurt", "bh l @r t");
result.add("blurts", "bh l @r t s");
result.add("blus-\tte-\try", "bh l V s\tt @r\ti:");
result.add("blus-\tter", "bh l V s\tt @r");
result.add("blus-\tter-\ting", "bh l V s\tt @r\tI N");
result.add("blush", "bh l V S");
result.add("blushed", "bh l V S t");
result.add("bly", "bh l aI");
result.add("bo", "bh @U");
result.add("bo-\tas", "bh @U\tV z");
result.add("bo-\taz", "bh @U\t{ z");
result.add("bo-\tba-\tdil-\tla", "bh @U\tb Q\td I\tl V");
result.add("bo-\tbak", "bh @U\tb V k");
result.add("bo-\tbo", "bh @U\tb @U");
result.add("bo-\tca", "bh @U\tk V");
result.add("bo-\tches", "bh Q\ttS V z");
result.add("bo-\tcock", "bh Q\tk V k");
result.add("bo-\tde-\tgas", "bh @U\td eI\tg V s");
result.add("bo-\tden", "bh @U\td V n");
result.add("bo-\tdi", "bh @U\td i:");
result.add("bo-\tdi-\tly", "bh Q\td I\tl i:");
result.add("bo-\tdi-\tne", "bh @U\td i:\tn i:");
result.add("bo-\tdied", "bh Q\td i: d");
result.add("bo-\tdies", "bh Q\td i: z");
result.add("bo-\tdo", "bh @U\td @U");
result.add("bo-\tdy", "bh Q\td i:");
result.add("bo-\tdy-\tguard", "bh Q\td i:\tg Q@ d");
result.add("bo-\tdy-\tguards", "bh Q\td i:\tg Q@ d z");
result.add("bo-\tdy's", "bh Q\td i: z");
result.add("bo-\tfor-\ts's", "bh @U\tf @r\tz V z");
result.add("bo-\tfors", "bh @U\tf @r z");
result.add("bo-\tgan", "bh @U\tg V n");
result.add("bo-\tgard", "bh Q\tg @r d");
result.add("bo-\tgart", "bh @U\tg Q@ t");
result.add("bo-\tgey", "bh @U\tg i:");
result.add("bo-\tgey-\tman", "bh @U\tg i:\tm { n");
result.add("bo-\tgey-\tmen", "bh @U\tg i:\tm I n");
result.add("bo-\tgeyed", "bh @U\tg i: d");
result.add("bo-\tgie", "bh U\tg i:");
result.add("bo-\tgo-\tsian", "bh V\tg Q\tZ V n");
result.add("bo-\tgo-\tta", "bh @U\tg V\tt Q");
result.add("bo-\tgor", "bh @U\tg O@");
result.add("bo-\tgus", "bh @U\tg V s");
result.add("bo-\tgusz", "bh Q\tg I S");
result.add("bo-\than-\tnon", "bh Q\th V\tn Q n");
result.add("bo-\the-\tme", "bh @U\th eI\tm eI");
result.add("bo-\the-\tmi-\ta", "bh @U\th i:\tm i:\tV");
result.add("bo-\the-\tmi-\tan", "bh @U\th i:\tm i:\tV n");
result.add("bo-\thon", "bh @U\th V n");
result.add("bo-\tkas-\tsa", "bh V\tk Q\ts V");
result.add("bo-\tla", "bh @U\tl V");
result.add("bo-\tlan", "bh @U\tl V n");
result.add("bo-\tlan-\tger", "bh @U\tl V n\tdZ @r");
result.add("bo-\tland", "bh @U\tl V n d");
result.add("bo-\tlar", "bh @U\tl @r");
result.add("bo-\tle-\tro", "bh @U\tl e@\t@U");
result.add("bo-\tlen", "bh @U\tl V n");
result.add("bo-\tley", "bh @U\tl i:");
result.add("bo-\tli-\ttho", "bh @U\tl I\tT V");
result.add("bo-\tli-\tvar", "bh Q\tl I\tv @r");
result.add("bo-\tli-\tvars", "bh Q\tl I\tv @r z");
result.add("bo-\tli-\tvi-\ta", "bh V\tl I\tv i:\tV");
result.add("bo-\tli-\tvi-\tan", "bh @U\tl I\tv i:\tV n");
result.add("bo-\tli-\tvi-\ta's", "bh V\tl I\tv i:\tV z");
result.add("bo-\tlin-\tger", "bh @U\tl I\tN @r");
result.add("bo-\tling", "bh @U\tl I N");
result.add("bo-\tlog-\tna", "bh V\tl @U\tn i:");
result.add("bo-\tlog-\tne-\tse", "bh @U\tl @U g\tn eI\tz i:");
result.add("bo-\tlus", "bh @U\tl V s");
result.add("bo-\tna", "bh @U\tn V");
result.add("bo-\tna-\tfide", "bh Q\tn V\tf aI d");
result.add("bo-\tna-\tparte", "bh @U\tn V\tp Q@ t");
result.add("bo-\tna-\tparte's", "bh @U\tn V\tp Q@ t s");
result.add("bo-\tna-\tven-\ttu-\tra", "bh @U\tn Q\tv e n\tt U@\tV");
result.add("bo-\tna-\tven-\tture", "bh Q\tn V\tv e n\ttS @r");
result.add("bo-\tnac-\tci", "bh @U\tn Q\ttS i:");
result.add("bo-\tnan-\tza", "bh V\tn { n\tz V");
result.add("bo-\tnar", "bh @U\tn @r");
result.add("bo-\tner", "bh @U\tn @r");
result.add("bo-\tney", "bh @U\tn i:");
result.add("bo-\tni", "bh @U\tn i:");
result.add("bo-\tni-\tfay", "bh Q\tn I\tf eI");
result.add("bo-\tni-\tne", "bh @U\tn i:\tn i:");
result.add("bo-\tni-\tta", "bh @U\tn i:\tt V");
result.add("bo-\tni-\tto", "bh V\tn i:\tt @U");
result.add("bo-\tnier", "bh Q n\tj @r");
result.add("bo-\tnil-\tla", "bh V\tn I\tl V");
result.add("bo-\tnin", "bh @U\tn I n");
result.add("bo-\tning", "bh @U\tn I N");
result.add("bo-\tno", "bh @U\tn @U");
result.add("bo-\tno-\tbos", "bh Q\tn Q\tb @U z");
result.add("bo-\tnu-\tses", "bh @U\tn V\ts V z");
result.add("bo-\tnum", "bh Q\tn V m");
result.add("bo-\tnus", "bh @U\tn V s");
result.add("bo-\tny", "bh @U\tn i:");
result.add("bo-\tpeep", "bh @U\tp i: p");
result.add("bo-\tphu-\tthats-\twa-\tna", "bh @U\tf u:\tT Q t\ts w Q\tn V");
result.add("bo-\tra", "bh O@\tV");
result.add("bo-\trah", "bh O@\tV");
result.add("bo-\trak", "bh O@\tV k");
result.add("bo-\tral", "bh O@\tV l");
result.add("bo-\trax", "bh O@\t{ k s");
result.add("bo-\tre-\ta-\tlis", "bh O@\ti:\t{\tl I s");
result.add("bo-\trek", "bh O@\tI k");
result.add("bo-\trel", "bh O@\tV l");
result.add("bo-\trer", "bh O@\t@r");
result.add("bo-\tric", "bh O@\tI k");
result.add("bo-\tring", "bh O@\tI N");
result.add("bo-\tris", "bh O@\tI s");
result.add("bo-\tro", "bh @r\t@U");
result.add("bo-\tron", "bh O@\tQ n");
result.add("bo-\trough", "bh @r\t@U");
result.add("bo-\troughs", "bh @r\t@U z");
result.add("bo-\trough's", "bh @r\t@U z");
result.add("bo-\trup", "bh O@\tV p");
result.add("bo-\ts-\tler", "bh Q\ts V\tl @r");
result.add("bo-\tser", "bh @U\tz @r");
result.add("bo-\tsher", "bh Q\tS @r");
result.add("bo-\tsom", "bh U\tz V m");
result.add("bo-\tta-\tni-\tcal", "bh V\tt {\tn I\tk V l");
result.add("bo-\tta-\tni-\tcal-\tly", "bh V\tt {\tn V\tk V\tl i:");
result.add("bo-\tta-\tnic", "bh V\tt {\tn I k");
result.add("bo-\tta-\tnist", "bh Q\tt V\tn V s t");
result.add("bo-\tta-\tnists", "bh Q\tt V\tn V s t s");
result.add("bo-\tta-\tny", "bh Q\tt V\tn i:");
result.add("bo-\tte-\tler", "bh Q\tt V\tl @r");
result.add("bo-\ttha", "bh Q\tT V");
result.add("bo-\ttham", "bh Q\tT V m");
result.add("bo-\ttham's", "bh Q\tT V m z");
result.add("bo-\ttha's", "bh Q\tT V z");
result.add("bo-\tthe-\tring", "bh Q\tD @r\tI N");
result.add("bo-\tthell", "bh Q\tT V l");
result.add("bo-\tther", "bh Q\tD @r");
result.add("bo-\tther-\tsome", "bh Q\tD @r\ts V m");
result.add("bo-\tthered", "bh Q\tD @r d");
result.add("bo-\tthers", "bh Q\tD @r z");
result.add("bo-\ttos", "bh @U\tt @U z");
result.add("bo-\ttu-\tli-\tsm", "bh Q\ttS u:\tl I\tz V m");
result.add("bo-\tuil-\tlon", "bh u:\tw I\tl V n");
result.add("bo-\tvard", "bh V\tv Q@ d");
result.add("bo-\tvey", "bh @U\tv i:");
result.add("bo-\tvine", "bh @U\tv aI n");
result.add("bo-\twe-\try", "bh aU\t@r\ti:");
result.add("bo-\twe-\try's", "bh aU\t@r\ti: z");
result.add("bo-\twel", "bh aU\tV l");
result.add("bo-\twell", "bh Q\tw e l");
result.add("bo-\twels", "bh aU\tV l z");
result.add("bo-\twen", "bh @U\tV n");
result.add("bo-\twer", "bh aU\t@r");
result.add("bo-\twer-\tman", "bh @U\t@r\tm V n");
result.add("bo-\twers", "bh aU\t@r z");
result.add("bo-\twie", "bh @U\ti:");
result.add("bo-\twing", "bh @U\tI N");
result.add("bo-\txer", "bh Q k\ts @r");
result.add("bo-\txers", "bh Q k\ts @r z");
result.add("bo-\txer's", "bh Q k\ts @r z");
result.add("bo-\txes", "bh Q k\ts V z");
result.add("bo-\txing", "bh Q k\ts I N");
result.add("bo-\txing's", "bh Q k\ts I N z");
result.add("bo-\txy", "bh Q k\ts i:");
result.add("bo-\tyar", "bh @U\tj Q@");
result.add("bo-\tyer", "bh OI\t@r");
result.add("bo-\tyers", "bh OI\t@r z");
result.add("bo-\tyish", "bh OI\tI S");
result.add("bo-\tza", "bh @U\tz V");
result.add("bo-\tzo", "bh @U\tz @U");
result.add("bo-\tzos", "bh @U\tz @U z");
result.add("boa-\tted", "bh @U\tt V d");
result.add("boa-\tters", "bh @U\tt @r z");
result.add("boa-\tting", "bh @U\tt I N");
result.add("board", "bh O@ d");
result.add("board-\twalk", "bh O@ d\tw O: k");
result.add("boart", "bh O@ t");
result.add("boas-\tted", "bh @U s\tt V d");
result.add("boas-\tting", "bh @U s\tt I N");
result.add("boast", "bh @U s t");
result.add("boast-\tful", "bh @U s\tt f V l");
result.add("boasts", "bh @U s t s");
result.add("boat", "bh @U t");
result.add("boat-\thouse", "bh @U t\th aU s");
result.add("boat-\tlift", "bh @U t\tl I f t");
result.add("boat-\tlifts", "bh @U t\tl I f t s");
result.add("boat-\tload", "bh @U t\tl @U d");
result.add("boat-\tloads", "bh @U t\tl @U d z");
result.add("boat-\tman", "bh @U t\tm V n");
result.add("boat-\twright", "bh @U t\tr aI t");
result.add("boat-\tyard", "bh @U t\tj Q@ d");
result.add("boats", "bh @U t s");
result.add("boat's", "bh @U t s");
result.add("bob", "bh Q b");
result.add("bob-\tber", "bh Q\tb @r");
result.add("bob-\tbette", "bh Q\tb V t");
result.add("bob-\tbi", "bh Q\tb i:");
result.add("bob-\tbie", "bh Q\tb i:");
result.add("bob-\tbin", "bh Q\tb I n");
result.add("bob-\tbing", "bh Q\tb I N");
result.add("bob-\tbitt", "bh Q\tb I t");
result.add("bob-\tbitts", "bh Q\tb I t s");
result.add("bob-\tbitt's", "bh Q\tb I t s");
result.add("bob-\tby", "bh Q\tb i:");
result.add("bob-\tby's", "bh Q\tb i: z");
result.add("bob-\tcat", "bh Q b\tk { t");
result.add("bob-\tcats", "bh Q b\tk { t z");
result.add("bob-\trow", "bh Q b\tr @U");
result.add("bob's", "bh Q b z");
result.add("bobs-\tled", "bh Q b\ts l e d");
result.add("boc-\tce", "bh @U\ttS i:");
result.add("boc-\tcia", "bh @U\ttS V");
result.add("boche", "bh Q tS");
result.add("bock", "bh Q k");
result.add("bod-\tkin", "bh Q d\tk I n");
result.add("bod-\tkins", "bh Q d\tk I n z");
result.add("bod-\tle", "bh @U\td V l");
result.add("bod-\tley", "bh Q d\tl i:");
result.add("bod-\tnar", "bh V d\tn Q@");
result.add("bod-\twell", "bh Q d\tw e l");
result.add("bode", "bh @U d");
result.add("bodes", "bh @U d z");
result.add("boe", "bh @U");
result.add("boe-\ting", "bh @U\tI N");
result.add("boe-\ting's", "bh @U\tI N z");
result.add("boeh-\tmer", "bh @U\tm @r");
result.add("boehm", "bh @U m");
result.add("boehme", "bh @U m");
result.add("boeke", "bh @U k");
result.add("boel-\tter", "bh @U l\tt @r");
result.add("boer", "bh O@");
result.add("boers", "bh O@ z");
result.add("boesch", "bh @U S");
result.add("boett-\tner", "bh @U t\tn @r");
result.add("bof-\tfa", "bh Q\tf V");
result.add("bof-\tfo", "bh O:\tf @U");
result.add("boff", "bh O: f");
result.add("bog", "bh Q g");
result.add("bog-\tg-\tling", "bh Q\tg V\tl I N");
result.add("bog-\tging", "bh O:\tg I N");
result.add("bog-\tgle", "bh Q\tg V l");
result.add("bog-\tgled", "bh Q\tg V l d");
result.add("bog-\tgles", "bh Q\tg V l z");
result.add("bog-\tle", "bh @U\tg V l");
result.add("bogged", "bh Q g d");
result.add("boggs", "bh O: g z");
result.add("bogs", "bh Q g z");
result.add("bogue", "bh @U g");
result.add("boh-\tlen", "bh @U\tl V n");
result.add("boh-\tlin", "bh @U\tl I n");
result.add("boh-\tman", "bh @U\tm V n");
result.add("boh-\tner", "bh @U\tn @r");
result.add("boh-\trer", "bh O@\t@r");
result.add("bohm", "bh Q m");
result.add("bohr", "bh O@");
result.add("boi-\tleau", "bh OI\tl @U");
result.add("boi-\tler", "bh OI\tl @r");
result.add("boi-\tler-\tma-\tker", "bh OI\tl @r\tm eI\tk @r");
result.add("boi-\tler-\tplate", "bh OI\tl @r p\tl eI t");
result.add("boi-\tlers", "bh OI\tl @r z");
result.add("boi-\tling", "bh OI\tl I N");
result.add("boi-\tse", "bh OI\tz i:");
result.add("boi-\tse's", "bh OI\tz i: z");
result.add("boice", "bh OI s");
result.add("boies", "bh OI z");
result.add("boil", "bh OI l");
result.add("boiled", "bh OI l d");
result.add("boils", "bh OI l z");
result.add("bois", "bh w Q");
result.add("bois-\tseau", "bh w Q\ts @U");
result.add("bois-\tte-\trous", "bh OI s\tt @r\tV s");
result.add("bok", "bh Q k");
result.add("bol", "bh Q l");
result.add("bol-\tden", "bh @U l\td V n");
result.add("bol-\tder", "bh @U l\td @r");
result.add("bol-\tdest", "bh @U l\td V s t");
result.add("bol-\tdin", "bh @U l\td I n");
result.add("bol-\tding", "bh @U l\td I N");
result.add("bol-\tger", "bh @U l\tdZ @r");
result.add("bol-\tger's", "bh @U l\tdZ @r z");
result.add("bol-\tland", "bh Q\tl V n d");
result.add("bol-\tlard", "bh Q\tl @r d");
result.add("bol-\tlen", "bh Q\tl V n");
result.add("bol-\tler", "bh Q\tl @r");
result.add("bol-\tlin-\tger", "bh Q\tl I\tN @r");
result.add("bol-\tling", "bh @U\tl I N");
result.add("bol-\tshe-\tvi-\tsm", "bh @U l\tS V\tv I\tz V m");
result.add("bol-\tshe-\tvik", "bh @U l\tS V\tv I k");
result.add("bol-\tshe-\tviks", "bh @U l\tS V\tv I k s");
result.add("bol-\tshe-\tvist", "bh @U l\tS I\tv I s t");
result.add("bol-\tshoi", "bh @U l\tS OI");
result.add("bol-\tshoi's", "bh @U l\tS OI z");
result.add("bol-\tson", "bh @U l\ts V n");
result.add("bol-\tted", "bh @U l\tt V d");
result.add("bol-\tten", "bh @U l\tt V n");
result.add("bol-\tter", "bh @U l\tt @r");
result.add("bol-\tting", "bh @U l\tt I N");
result.add("bol-\tton", "bh @U l\tt V n");
result.add("bold", "bh @U l d");
result.add("bold-\tface", "bh @U l\td f eI s");
result.add("bold-\tly", "bh @U l\td l i:");
result.add("bold-\tness", "bh @U l\td n V s");
result.add("bolds", "bh @U l d z");
result.add("bole", "bh @U l");
result.add("boles", "bh @U l z");
result.add("boll", "bh @U l");
result.add("bolls", "bh @U l z");
result.add("bols-\tte-\tring", "bh @U l\ts t @r\tI N");
result.add("bols-\tter", "bh @U l\ts t @r");
result.add("bols-\ttered", "bh @U l\ts t @r d");
result.add("bols-\tters", "bh @U l\ts t @r z");
result.add("bolt", "bh @U l t");
result.add("bolte", "bh @U l t");
result.add("bolts", "bh @U l t s");
result.add("boltz-\tmann's", "bh @U l\tt s m V n z");
result.add("bom", "bh Q m");
result.add("bom-\tba", "bh Q m\tb V");
result.add("bom-\tbar-\tded", "bh Q m\tb Q@\td V d");
result.add("bom-\tbar-\tdier", "bh Q m\tb @r\td I@");
result.add("bom-\tbar-\tding", "bh Q m\tb Q@\td I N");
result.add("bom-\tbard", "bh Q m\tb Q@ d");
result.add("bom-\tbard-\tment", "bh Q m\tb Q@ d\tm V n t");
result.add("bom-\tbard-\tments", "bh Q m\tb Q@ d\tm V n t s");
result.add("bom-\tbas-\ttic", "bh Q m\tb { s\tt I k");
result.add("bom-\tbast", "bh Q m\tb { s t");
result.add("bom-\tbay", "bh Q m\tb eI");
result.add("bom-\tbay's", "bh Q m\tb eI z");
result.add("bom-\tber", "bh Q\tm @r");
result.add("bom-\tbers", "bh Q\tm @r z");
result.add("bom-\tber's", "bh Q\tm @r z");
result.add("bom-\tbing", "bh Q\tm I N");
result.add("bom-\tbings", "bh Q\tm I N z");
result.add("bomb", "bh Q m");
result.add("bomb-\tshell", "bh Q m\tS e l");
result.add("bomb-\tshells", "bh Q m\tS e l z");
result.add("bombed", "bh Q m d");
result.add("bombs", "bh Q m z");
result.add("bon", "bh Q n");
result.add("bon-\tdage", "bh Q n\td I dZ");
result.add("bon-\tdar", "bh V n\td Q@");
result.add("bon-\tded", "bh Q n\td V d");
result.add("bon-\tder-\tman", "bh Q n\td @r\tm V n");
result.add("bon-\tding", "bh Q n\td I N");
result.add("bon-\tdu-\trant", "bh @U n\td U@\tV n t");
result.add("bon-\tdy", "bh Q n\td i:");
result.add("bon-\tfi-\tre", "bh Q n\tf aI\t@r");
result.add("bon-\tfi-\tres", "bh Q n\tf aI\t@r z");
result.add("bon-\tfield", "bh Q n\tf i: l d");
result.add("bon-\tfig-\tli-\to", "bh Q n\tf I g\tl i:\t@U");
result.add("bon-\tgo", "bh Q N\tg @U");
result.add("bon-\tgos", "bh Q N\tg @U z");
result.add("bon-\tham", "bh Q n\th V m");
result.add("bon-\tjour", "bh V n\tZ U@");
result.add("bon-\tkers", "bh Q N\tk @r z");
result.add("bon-\tne-\tville", "bh Q\tn V\tv I l");
result.add("bon-\tneau", "bh V\tn @U");
result.add("bon-\tnell", "bh Q\tn V l");
result.add("bon-\tner", "bh O:\tn @r");
result.add("bon-\tnet", "bh Q\tn V t");
result.add("bon-\tnette", "bh V\tn e t");
result.add("bon-\tney", "bh Q\tn i:");
result.add("bon-\tni-\tbel", "bh Q\tn I\tb V l");
result.add("bon-\tni-\tbelle", "bh Q\tn I\tb e l");
result.add("bon-\tnie", "bh Q\tn i:");
result.add("bon-\tnie's", "bh Q\tn i: z");
result.add("bon-\tnor", "bh Q\tn @r");
result.add("bon-\tny", "bh Q\tn i:");
result.add("bon-\tsai", "bh Q n\ts aI");
result.add("bon-\tsall", "bh @U n\ts Q l");
result.add("bon-\tser", "bh Q n\ts @r");
result.add("bon-\ttem-\tpo", "bh Q n\tt e m\tp @U");
result.add("bond", "bh Q n d");
result.add("bond-\thol-\tder", "bh Q n\td h @U l\td @r");
result.add("bond-\thol-\tders", "bh Q n\td h @U l\td @r z");
result.add("bonds", "bh Q n d z");
result.add("bond's", "bh Q n d z");
result.add("bone", "bh @U n");
result.add("bone-\tless", "bh @U n\tl V s");
result.add("boned", "bh @U n d");
result.add("bones", "bh @U n z");
result.add("bones-\tteel", "bh @U n\ts t i: l");
result.add("bong", "bh Q N");
result.add("bonk", "bh Q N k");
result.add("bonn", "bh Q n");
result.add("bonne", "bh Q n");
result.add("bonnes", "bh O: n z");
result.add("bonn's", "bh Q n z");
result.add("boo", "bh u:");
result.add("boo-\tby", "bh u:\tb i:");
result.add("boo-\tdle", "bh u:\td V l");
result.add("boo-\tdles", "bh u:\td V l z");
result.add("boo-\tdy", "bh u:\td i:");
result.add("boo-\tgie", "bh u:\tg i:");
result.add("boo-\tgie-\twoo-\tgie", "bh u:\tg i:\tw u:\tg i:");
result.add("boo-\ting", "bh u:\tI N");
result.add("boo-\tker", "bh U\tk @r");
result.add("boo-\tkers", "bh U\tk @r z");
result.add("boo-\tkie", "bh U\tk i:");
result.add("boo-\tkies", "bh U\tk i: z");
result.add("boo-\tking", "bh U\tk I N");
result.add("boo-\tkings", "bh U\tk I N z");
result.add("boo-\tkish", "bh U\tk I S");
result.add("boo-\tme-\trang", "bh u:\tm @r\t{ N");
result.add("boo-\tme-\tranged", "bh u:\tm @r\t{ N d");
result.add("boo-\tmer", "bh u:\tm @r");
result.add("boo-\tmers", "bh u:\tm @r z");
result.add("boo-\tming", "bh u:\tm I N");
result.add("boo-\tty", "bh u:\tt i:");
result.add("boo-\tzer", "bh u:\tz @r");
result.add("boo-\tzi-\ter", "bh u:\tz i:\t@r");
result.add("boo-\tzing", "bh u:\tz I N");
result.add("boo-\tzy", "bh u:\tz i:");
result.add("boob", "bh u: b");
result.add("boobs", "bh u: b z");
result.add("booed", "bh u: d");
result.add("book", "bh U k");
result.add("book-\tbin-\tder", "bh U k\tb aI n\td @r");
result.add("book-\tca-\tses", "bh U k\tk eI\ts V z");
result.add("book-\tcase", "bh U k\tk eI s");
result.add("book-\tend", "bh U\tk e n d");
result.add("book-\tends", "bh U\tk e n d z");
result.add("book-\tkee-\tper", "bh U k\tk i:\tp @r");
result.add("book-\tkee-\tpers", "bh U k\tk i:\tp @r z");
result.add("book-\tkee-\tping", "bh U k\tk i:\tp I N");
result.add("book-\tlet", "bh U k\tl V t");
result.add("book-\tlets", "bh U k\tl V t s");
result.add("book-\tma-\tking", "bh U k\tm eI\tk I N");
result.add("book-\tman", "bh U k\tm V n");
result.add("book-\tmo-\tbile", "bh U k\tm @U\tb i: l");
result.add("book-\tsel-\tler", "bh U k\ts e\tl @r");
result.add("book-\tsel-\tlers", "bh U k\ts e\tl @r z");
result.add("book-\tshelf", "bh U k\tS e l f");
result.add("book-\tshelves", "bh U k\tS e l v z");
result.add("book-\tshop", "bh U k\tS Q p");
result.add("book-\tshops", "bh U k\tS Q p s");
result.add("book-\tstore", "bh U k\ts t O@");
result.add("book-\tstores", "bh U k\ts t O@ z");
result.add("book-\tworm", "bh U k\tw @r m");
result.add("booked", "bh U k t");
result.add("books", "bh U k s");
result.add("book's", "bh U k s");
result.add("boole", "bh u: l");
result.add("boom", "bh u: m");
result.add("boom-\tbox", "bh U m\tb Q k s");
result.add("boom-\tlet", "bh u: m\tl V t");
result.add("boom-\ttown", "bh u: m\tt aU n");
result.add("boomed", "bh u: m d");
result.add("booms", "bh u: m z");
result.add("boon", "bh u: n");
result.add("boon-\tdocks", "bh u: n\td Q k s");
result.add("boon-\tdog-\tgle", "bh u: n\td Q\tg V l");
result.add("boon-\tdog-\tgles", "bh u: n\td Q\tg V l z");
result.add("boon-\tton", "bh u: n\tt V n");
result.add("boon-\tville", "bh u: n\tv I l");
result.add("boone", "bh u: n");
result.add("boor", "bh U@");
result.add("boord", "bh U@ d");
result.add("booth", "bh u: T");
result.add("boots", "bh u: t s");
result.add("boots-\ttrap", "bh u: t\ts t r { p");
result.add("boots-\ttraps", "bh u: t\ts t r { p s");
result.add("booz", "bh u: z");
result.add("booze", "bh u: z");
result.add("bop", "bh Q p");
result.add("bop-\tper", "bh Q\tp @r");
result.add("bop-\tpers", "bh Q\tp @r z");
result.add("bopp", "bh Q p");
result.add("bor-\tchers", "bh O@\tk @r z");
result.add("bor-\tchert", "bh O@\tk @r t");
result.add("bor-\tda", "bh O@\td V");
result.add("bor-\tda's", "bh O@\td V z");
result.add("bor-\tde-\tring", "bh O@\td @r\tI N");
result.add("bor-\tdeaux", "bh O@\td @U");
result.add("bor-\tdel-\tlo", "bh O@\td e\tl @U");
result.add("bor-\tden", "bh O@\td V n");
result.add("bor-\tden's", "bh O@\td V n z");
result.add("bor-\tder", "bh O@\td @r");
result.add("bor-\tder-\tline", "bh O@\td @r\tl aI n");
result.add("bor-\tdered", "bh O@\td @r d");
result.add("bor-\tders", "bh O@\td @r z");
result.add("bor-\tder's", "bh O@\td @r z");
result.add("bor-\tge-\tson", "bh O@\tg V\ts V n");
result.add("bor-\tger", "bh O@\tg @r");
result.add("bor-\tges", "bh O@\tg eI s");
result.add("bor-\tghi", "bh O@\tg i:");
result.add("bor-\tgia", "bh O@\tdZ V");
result.add("bor-\tland", "bh O@\tl V n d");
result.add("bor-\tman", "bh O@\tm V n");
result.add("bor-\tman's", "bh O@\tm V n z");
result.add("bor-\tne-\to", "bh O@\tn i:\t@U");
result.add("bor-\tras", "bh O@\tV z");
result.add("bor-\trell", "bh O@\teI l");
result.add("bor-\tro-\twer", "bh Q@\t@U\t@r");
result.add("bor-\tro-\twers", "bh Q@\t@U\t@r z");
result.add("bor-\tro-\twer's", "bh Q@\t@U\t@r z");
result.add("bor-\tro-\twing", "bh Q@\t@U\tI N");
result.add("bor-\tro-\twings", "bh Q@\t@U\tI N z");
result.add("bor-\troff", "bh O@\tO: f");
result.add("bor-\trow", "bh Q@\t@U");
result.add("bor-\trowed", "bh Q@\t@U d");
result.add("bor-\trows", "bh Q@\t@U z");
result.add("bord-\tman", "bh O@ d\tm V n");
result.add("bordes", "bh O@ d z");
result.add("bore", "bh O@");
result.add("bore-\tdom", "bh O@\td V m");
result.add("bored", "bh O@ d");
result.add("bores", "bh O@ z");
result.add("borg", "bh O@ g");
result.add("bork", "bh O@ k");
result.add("bork's", "bh O@ k s");
result.add("born", "bh O@ n");
result.add("borne", "bh O@ n");
result.add("borns-\ttein", "bh O@ n\ts t aI n");
result.add("bors", "bh O@ z");
result.add("borsch", "bh O@ S");
result.add("borscht", "bh O@ S t");
result.add("bort", "bh O@ t");
result.add("bortz", "bh O@ t s");
result.add("bos", "bh Q s");
result.add("bos-\tni-\ta", "bh Q z\tn i:\tV");
result.add("bos-\tni-\tan", "bh Q z\tn i:\tV n");
result.add("bos-\tni-\tans", "bh Q z\tn i:\tV n z");
result.add("bos-\tni-\ta's", "bh Q z\tn i:\tV z");
result.add("bos-\tses", "bh O:\ts V z");
result.add("bos-\tsi-\ter", "bh O:\ts i:\t@r");
result.add("bos-\ts's", "bh O:\ts V z");
result.add("bos-\tsy", "bh O:\ts i:");
result.add("bos-\ttic", "bh Q s\tt I k");
result.add("bos-\tto-\tni-\tan", "bh Q s\tt @U\tn i:\tV n");
result.add("bos-\tto-\tni-\tans", "bh Q s\tt @U\tn i:\tV n z");
result.add("bos-\tton", "bh Q s\tt V n");
result.add("bos-\tton's", "bh Q s\tt V n z");
result.add("bos-\twell", "bh Q z\tw e l");
result.add("bos-\tworth", "bh O: z\tw @r T");
result.add("bosch", "bh O: S");
result.add("bose", "bh @U z");
result.add("bosh", "bh Q S");
result.add("boss", "bh O: s");
result.add("bossed", "bh Q s t");
result.add("bost-\twick", "bh Q s\tt w I k");
result.add("bot-\tfly", "bh Q t\tf l aI");
result.add("bot-\tkin", "bh Q t\tk I n");
result.add("bot-\tkins", "bh Q t\tk I n z");
result.add("bot-\try-\ttis", "bh V t\tr I\tt I s");
result.add("bot-\tt-\tling", "bh Q\tt V\tl I N");
result.add("bot-\tting", "bh Q\tt I N");
result.add("bot-\ttle", "bh Q\tt V l");
result.add("bot-\ttle-\tneck", "bh Q\tt V l\tn e k");
result.add("bot-\ttle-\tnecks", "bh Q\tt V l\tn e k s");
result.add("bot-\ttled", "bh Q\tt V l d");
result.add("bot-\ttles", "bh Q\tt V l z");
result.add("bot-\tto-\tming", "bh Q\tt V\tm I N");
result.add("bot-\ttom", "bh Q\tt V m");
result.add("bot-\ttom-\tless", "bh Q\tt V m\tl V s");
result.add("bot-\ttomed", "bh Q\tt V m d");
result.add("bot-\ttoms", "bh Q\tt V m z");
result.add("bot-\ttom's", "bh Q\tt V m z");
result.add("botch", "bh Q tS");
result.add("botched", "bh Q tS t");
result.add("both", "bh @U T");
result.add("both-\twell", "bh Q T\tw e l");
result.add("bothe", "bh @U D");
result.add("bots-\tford", "bh Q t\ts f @r d");
result.add("bots-\twa-\tna", "bh Q t\ts w Q\tn V");
result.add("bott", "bh Q t");
result.add("bott-\tger", "bh Q t\tg @r");
result.add("bott-\tler", "bh Q t\tl @r");
result.add("bott-\tlers", "bh Q t\tl @r z");
result.add("botts", "bh Q t s");
result.add("bou-\tchard", "bh u:\tS Q@ d");
result.add("bou-\tcher", "bh u:\tS V");
result.add("bou-\tdin", "bh u:\td I n");
result.add("bou-\tdoir", "bh u:\td OI r");
result.add("bou-\tdreaux", "bh u: d\tr @U");
result.add("bou-\tgain-\tvil-\tle-\ta", "bh u:\tg eI n\tv I\tl i:\tV");
result.add("bou-\tgain-\tville", "bh u:\tg V n\tv I l");
result.add("bou-\tgie", "bh u:\tZ i:");
result.add("bou-\tlan-\tger", "bh aU\tl V\tN @r");
result.add("bou-\tle-\tvard", "bh U\tl V\tv Q@ d");
result.add("bou-\tle-\tvards", "bh U\tl V\tv Q@ d z");
result.add("bou-\tley", "bh u:\tl i:");
result.add("bou-\tlez", "bh u:\tl e z");
result.add("bou-\tquet", "bh u:\tk eI");
result.add("bou-\tquets", "bh @U\tk eI z");
result.add("bou-\ttell", "bh u:\tt e l");
result.add("bou-\ttique", "bh u:\tt i: k");
result.add("bou-\ttiques", "bh u:\tt i: k s");
result.add("bou-\tton", "bh aU\tt V n");
result.add("bou-\tvi-\ter", "bh u:\tv i:\teI");
result.add("bouch", "bh aU tS");
result.add("bouche", "bh aU tS");
result.add("bough", "bh aU");
result.add("bough-\tten", "bh O:\tt V n");
result.add("bough-\tton", "bh aU\tt V n");
result.add("boughs", "bh aU z");
result.add("bought", "bh Q t");
result.add("boul-\tder", "bh @U l\td @r");
result.add("boul-\tders", "bh @U l\td @r z");
result.add("boul-\tter", "bh @U l\tt @r");
result.add("boule", "bh u: l");
result.add("boun-\tcer", "bh aU n\ts @r");
result.add("boun-\tcers", "bh aU n\ts @r z");
result.add("boun-\tces", "bh aU n\ts V z");
result.add("boun-\tci-\tness", "bh aU n\ts i:\tn V s");
result.add("boun-\tcing", "bh aU n\ts I N");
result.add("boun-\tcy", "bh aU n\ts i:");
result.add("boun-\tda-\tries", "bh aU n\td @r\ti: z");
result.add("boun-\tda-\try", "bh aU n\td @r\ti:");
result.add("boun-\tded", "bh aU n\td V d");
result.add("boun-\tder", "bh aU n\td @r");
result.add("boun-\tding", "bh aU n\td I N");
result.add("boun-\tti-\tful", "bh aU n\tt I\tf V l");
result.add("boun-\tties", "bh aU n\tt i: z");
result.add("boun-\tty", "bh aU n\tt i:");
result.add("bounce", "bh aU n s");
result.add("bounced", "bh aU n s t");
result.add("bound", "bh aU n d");
result.add("bound-\tless", "bh aU n\td l V s");
result.add("bounds", "bh aU n d z");
result.add("bour", "bh aU r");
result.add("bour-\tbon", "bh @r\tb V n");
result.add("bour-\tbons", "bh @r\tb V n z");
result.add("bour-\tgeoi-\tsie", "bh U@ Z\tw Q\tz i:");
result.add("bour-\tgeois", "bh U@ Z\tw Q");
result.add("bour-\tget", "bh U@\tZ e t");
result.add("bour-\tgui-\tba", "bh O@ g\tw i:\tb V");
result.add("bour-\tguig-\tnon", "bh U@\tg i: n\tj @U n");
result.add("bour-\tses", "bh O@\ts V z");
result.add("bour-\tse's", "bh O@\ts V z");
result.add("bourg", "bh O@ g");
result.add("bourke", "bh @r k");
result.add("bourn", "bh O@ n");
result.add("bourne", "bh O@ n");
result.add("bourque", "bh U@ k");
result.add("bourse", "bh O@ s");
result.add("bouse", "bh aU s");
result.add("bout", "bh aU t");
result.add("bout-\twell", "bh aU t\tw e l");
result.add("bouts", "bh aU t s");
result.add("boutte", "bh u: t");
result.add("bove", "bh @U v");
result.add("bow", "bh aU");
result.add("bow-\tden", "bh @U\td V n");
result.add("bow-\tditch", "bh @U\td I tS");
result.add("bow-\tdle", "bh @U\td V l");
result.add("bow-\tdoin", "bh @U\td OI n");
result.add("bow-\tker", "bh @U\tk @r");
result.add("bow-\tler", "bh @U\tl @r");
result.add("bow-\tlers", "bh @U\tl @r z");
result.add("bow-\tlin", "bh @U\tl I n");
result.add("bow-\tling", "bh @U\tl I N");
result.add("bow-\tling's", "bh @U\tl I N z");
result.add("bow-\tlus", "bh @U\tl V s");
result.add("bow-\tman", "bh @U\tm V n");
result.add("bow-\tman's", "bh @U\tm V n z");
result.add("bow-\tmen", "bh @U\tm V n");
result.add("bow-\tring", "bh @U\tr I N");
result.add("bow-\tser", "bh @U\tz @r");
result.add("bow-\tses", "bh aU\tz V z");
result.add("bow-\tsing", "bh aU\tz I N");
result.add("bow-\tyer", "bh @U\tj @r");
result.add("bowe", "bh @U");
result.add("bowed", "bh aU d");
result.add("bowes", "bh @U z");
result.add("bowl", "bh @U l");
result.add("bowlds", "bh @U l d z");
result.add("bowled", "bh @U l d");
result.add("bowles", "bh @U l z");
result.add("bowls", "bh @U l z");
result.add("bown", "bh @U n");
result.add("bowne", "bh @U n");
result.add("bows", "bh aU z");
result.add("bowse", "bh @U s");
result.add("bowsed", "bh aU z d");
result.add("box", "bh Q k s");
result.add("box-\tcar", "bh Q k\ts k Q@");
result.add("box-\tcars", "bh Q k\ts k Q@ z");
result.add("box-\twood", "bh Q k\ts w U d");
result.add("boxed", "bh Q k s t");
result.add("boy", "bh OI");
result.add("boy-\tcot-\tted", "bh OI\tk Q\tt V d");
result.add("boy-\tcot-\tting", "bh OI\tk Q\tt I N");
result.add("boy-\tcott", "bh OI\tk Q t");
result.add("boy-\tcotts", "bh OI\tk Q t s");
result.add("boy-\tden", "bh OI\td V n");
result.add("boy-\tfriend", "bh OI f\tr e n d");
result.add("boy-\tfriends", "bh OI f\tr e n d z");
result.add("boy-\thood", "bh OI\th U d");
result.add("boy-\tkin", "bh OI\tk I n");
result.add("boy-\tkins", "bh OI\tk I n z");
result.add("boy-\tlan", "bh OI\tl V n");
result.add("boyce", "bh OI s");
result.add("boyd", "bh OI d");
result.add("boyd's", "bh OI d z");
result.add("boyes", "bh OI z");
result.add("boyl-\tston", "bh OI l\ts t V n");
result.add("boyl-\tston's", "bh OI l\ts t V n z");
result.add("boyle", "bh OI l");
result.add("boyn-\tton", "bh OI n\tt V n");
result.add("boyne", "bh OI n");
result.add("boys", "bh OI z");
result.add("boy's", "bh OI z");
result.add("boys'", "bh OI z");
result.add("boyt", "bh OI t");
result.add("boz-\tman", "bh Q z\tm V n");
result.add("boze-\tman", "bh @U z\tm V n");
result.add("br-\tca", "bh r I\tk V");
result.add("br-\tyan", "bh r aI\tV n");
result.add("br-\tyan's", "bh r aI\tV n z");
result.add("br-\tyant", "bh r aI\tV n t");
result.add("bra", "bh r Q");
result.add("bra-\tbant", "bh r Q\tb V n t");
result.add("bra-\tce-\tro", "bh r Q\ttS e@\t@U");
result.add("bra-\tcer", "bh r eI\ts @r");
result.add("bra-\tces", "bh r eI\ts V z");
result.add("bra-\tce's", "bh r eI\ts V z");
result.add("bra-\tcey", "bh r eI\ts i:");
result.add("bra-\tchi-\to-\tpod", "bh r eI\tk i:\tV\tp Q d");
result.add("bra-\tchi-\to-\tpods", "bh r eI\tk i:\tV\tp Q d z");
result.add("bra-\tcing", "bh r eI\ts I N");
result.add("bra-\tcing-\tly", "bh r eI\ts I N\tg l i:");
result.add("bra-\tcken", "bh r {\tk V n");
result.add("bra-\tckens", "bh r {\tk V n z");
result.add("bra-\tckets", "bh r {\tk V t s");
result.add("bra-\tckett", "bh r {\tk I t");
result.add("bra-\tckish", "bh r {\tk I S");
result.add("bra-\tden", "bh r eI\td V n");
result.add("bra-\tden-\tton", "bh r {\td V n\tt V n");
result.add("bra-\tder", "bh r {\td @r");
result.add("bra-\tdy", "bh r eI\td i:");
result.add("bra-\tdy-\tcar-\tdi-\ta", "bh r {\td V\tk Q@\td i:\tV");
result.add("bra-\tdy-\tki-\tnin", "bh r V\td I\tk V\tn I n");
result.add("bra-\tdy's", "bh r eI\td i: z");
result.add("bra-\tga", "bh r Q\tg V");
result.add("bra-\tger", "bh r eI\tg @r");
result.add("bra-\tham", "bh r {\th V m");
result.add("bra-\tker", "bh r eI\tk @r");
result.add("bra-\tking", "bh r eI\tk I N");
result.add("bra-\tmah", "bh r Q\tm V");
result.add("bra-\tman", "bh r eI\tm V n");
result.add("bra-\tnagh", "bh r {\tn V g");
result.add("bra-\tniff", "bh r {\tn I f");
result.add("bra-\tniff's", "bh r {\tn I f s");
result.add("bra-\tnum", "bh r {\tn V m");
result.add("bra-\tsel-\tton", "bh r V\ts e l\tt V n");
result.add("bra-\tshear", "bh r {\tS I@");
result.add("bra-\tsher", "bh r {\tS @r");
result.add("bra-\tshi-\ter", "bh r {\tS i:\t@r");
result.add("bra-\tsi-\tlia", "bh r V\tz I l\tj V");
result.add("bra-\tsil", "bh r {\ts I l");
result.add("bra-\tva-\tdo", "bh r V\tv Q\td @U");
result.add("bra-\tve-\try", "bh r eI\tv @r\ti:");
result.add("bra-\tver", "bh r eI\tv @r");
result.add("bra-\tvest", "bh r eI\tv V s t");
result.add("bra-\tving", "bh r eI\tv I N");
result.add("bra-\tvo", "bh r Q\tv @U");
result.add("bra-\tvu-\tra", "bh r V v\tj U@\tV");
result.add("bra-\twer", "bh r O:\t@r");
result.add("bra-\tyer", "bh r eI\t@r");
result.add("bra-\tzeau", "bh r V\tz @U");
result.add("bra-\tzee", "bh r {\tz i:");
result.add("bra-\tzen", "bh r eI\tz V n");
result.add("bra-\tzen-\tly", "bh r eI\tz V n\tl i:");
result.add("bra-\tzi-\ter", "bh r eI\tz i:\t@r");
result.add("bra-\tzi-\tlian", "bh r V\tz I l\tj V n");
result.add("bra-\tzi-\tlians", "bh r V\tz I l\tj V n z");
result.add("bra-\tziers", "bh r eI\tZ @r z");
result.add("bra-\tzil", "bh r V\tz I l");
result.add("bra-\tzil's", "bh r V\tz I l z");
result.add("bra-\tzos", "bh r Q\tz @U s");
result.add("braasch", "bh r Q S");
result.add("brab-\tham", "bh r { b\th V m");
result.add("brac-\tci", "bh r Q\ttS i:");
result.add("brace", "bh r eI s");
result.add("brace-\tlet", "bh r eI s\tl V t");
result.add("brace-\tlets", "bh r eI s\tl V t s");
result.add("braced", "bh r eI s t");
result.add("brach", "bh r { tS");
result.add("brack", "bh r { k");
result.add("brack-\tnell", "bh r { k\tn e l");
result.add("brack-\tney", "bh r { k\tn i:");
result.add("brad", "bh r { d");
result.add("brad-\tbu-\try", "bh r { d\tb e@\ti:");
result.add("brad-\tdock", "bh r {\td V k");
result.add("brad-\tford", "bh r { d\tf @r d");
result.add("brad-\tford's", "bh r { d\tf @r d z");
result.add("brad-\tlee", "bh r { d\tl i:");
result.add("brad-\tley", "bh r { d\tl i:");
result.add("brad-\tley's", "bh r { d\tl i: z");
result.add("brad-\tner", "bh r { d\tn @r");
result.add("brad-\tney", "bh r { d\tn i:");
result.add("brad-\tshaw", "bh r { d\tS O:");
result.add("brad-\tstreet", "bh r { d\ts t r i: t");
result.add("brad-\tway", "bh r { d\tw eI");
result.add("brad-\twell", "bh r { d\tw e l");
result.add("brad's", "bh r { d z");
result.add("brae", "bh r eI");
result.add("brag", "bh r { g");
result.add("brag-\tdon", "bh r { g\td V n");
result.add("brag-\tga-\tdo-\tci-\to", "bh r {\tg V\td @U\tS i:\t@U");
result.add("brag-\tger", "bh r {\tg @r");
result.add("brag-\tgers", "bh r {\tg @r z");
result.add("brag-\tging", "bh r {\tg I N");
result.add("bragg", "bh r { g");
result.add("bragged", "bh r { g d");
result.add("braggs", "bh r { g z");
result.add("brags", "bh r { g z");
result.add("brah-\tmin", "bh r Q\tm I n");
result.add("brahm", "bh r Q m");
result.add("brahms", "bh r Q m z");
result.add("brai-\tded", "bh r eI\td V d");
result.add("brai-\tding", "bh r eI\td I N");
result.add("brai-\tnard", "bh r eI\tn @r d");
result.add("brai-\tner", "bh r eI\tn @r");
result.add("brai-\tnerd", "bh r eI\tn @r d");
result.add("brai-\tny", "bh r eI\tn i:");
result.add("braid", "bh r eI d");
result.add("braid-\twood", "bh r eI d\tw U d");
result.add("braids", "bh r eI d z");
result.add("braille", "bh r eI l");
result.add("brailles", "bh r eI l z");
result.add("brain", "bh r eI n");
result.add("brain-\tchild", "bh r eI n\ttS aI l d");
result.add("brain-\tless", "bh r eI n\tl V s");
result.add("brain-\tpo-\twer", "bh r eI n\tp aU\t@r");
result.add("brain-\tstor-\tming", "bh r eI n\ts t O@\tm I N");
result.add("brain-\tstorm", "bh r eI n\ts t O@ m");
result.add("brain-\ttree", "bh r eI n\tt r i:");
result.add("brain-\twa-\tshing", "bh r eI n\tw Q\tS I N");
result.add("brain-\twash", "bh r eI n\tw Q S");
result.add("brain-\twashed", "bh r eI n\tw Q S t");
result.add("brained", "bh r eI n d");
result.add("brains", "bh r eI n z");
result.add("brain's", "bh r eI n z");
result.add("braise", "bh r eI z");
result.add("braised", "bh r eI z d");
result.add("braith-\twaite", "bh r eI T\tw eI t");
result.add("brake", "bh r eI k");
result.add("brake-\tman", "bh r eI k\tm V n");
result.add("brake-\tmen", "bh r eI k\tm e n");
result.add("braked", "bh r eI k t");
result.add("brakes", "bh r eI k s");
result.add("bram", "bh r { m");
result.add("bram-\tble", "bh r { m\tb V l");
result.add("bram-\tbles", "bh r { m\tb V l z");
result.add("bram-\tley", "bh r { m\tl i:");
result.add("bram-\twell", "bh r { m\tw e l");
result.add("brame", "bh r eI m");
result.add("bramp-\tton", "bh r { m\tp t V n");
result.add("bran", "bh r { n");
result.add("bran-\tca", "bh r { N\tk V");
result.add("bran-\tches", "bh r { n\ttS V z");
result.add("bran-\tching", "bh r { n\ttS I N");
result.add("bran-\tch's", "bh r { n\ttS V z");
result.add("bran-\tco", "bh r { N\tk @U");
result.add("bran-\tded", "bh r { n\td V d");
result.add("bran-\tdeis", "bh r { n\td aI s");
result.add("bran-\tdel", "bh r { n\td V l");
result.add("bran-\tden", "bh r { n\td V n");
result.add("bran-\tden-\tbur-\tger", "bh r { n\td V n\tb @r\tg @r");
result.add("bran-\tden-\tburg", "bh r { n\td V n\tb @r g");
result.add("bran-\tder", "bh r { n\td @r");
result.add("bran-\tdi", "bh r { n\td i:");
result.add("bran-\tdi-\tshes", "bh r { n\td I\tS V z");
result.add("bran-\tdi-\tshing", "bh r { n\td I\tS I N");
result.add("bran-\tding", "bh r { n\td I N");
result.add("bran-\tdish", "bh r { n\td I S");
result.add("bran-\tdished", "bh r { n\td I S t");
result.add("bran-\tdle", "bh r { n\td V l");
result.add("bran-\tdo", "bh r { n\td @U");
result.add("bran-\tdon", "bh r { n\td V n");
result.add("bran-\tdon's", "bh r { n\td V n z");
result.add("bran-\tdo's", "bh r { n\td @U z");
result.add("bran-\tdy", "bh r { n\td i:");
result.add("bran-\tdy-\twine", "bh r { n\td i:\tw aI n");
result.add("bran-\tford", "bh r { n\tf @r d");
result.add("bran-\tham", "bh r { n\th V m");
result.add("bran-\tner", "bh r {\tn @r");
result.add("bran-\tni-\tgan", "bh r {\tn I\tg V n");
result.add("bran-\tning", "bh r {\tn I N");
result.add("bran-\tnon", "bh r {\tn V n");
result.add("bran-\tson", "bh r { n\ts V n");
result.add("bran-\tson's", "bh r { n\ts V n z");
result.add("branch", "bh r { n tS");
result.add("branch-\tlet", "bh r { n\ttS l V t");
result.add("branch-\tlets", "bh r { n\ttS l V t s");
result.add("branched", "bh r { n tS t");
result.add("brand", "bh r { n d");
result.add("brand-\tname", "bh r { n\td n eI m");
result.add("brand-\twein", "bh r { n\td w aI n");
result.add("brande", "bh r { n d");
result.add("brandes", "bh r { n d z");
result.add("brands", "bh r { n d z");
result.add("brand's", "bh r { n d z");
result.add("brandt", "bh r { n t");
result.add("brank", "bh r { N k");
result.add("brans-\tcum", "bh r { n\ts k V m");
result.add("brans-\tford", "bh r { n\ts f @r d");
result.add("brant", "bh r { n t");
result.add("brant-\tley", "bh r { n\tt l i:");
result.add("braque", "bh r { k");
result.add("bras", "bh r { s");
result.add("bras-\tsard", "bh r {\ts @r d");
result.add("bras-\tse-\trie", "bh r {\ts @r\ti:");
result.add("bras-\tso", "bh r {\ts @U");
result.add("bras-\tso's", "bh r {\ts @U z");
result.add("bras-\tsy", "bh r {\ts i:");
result.add("bras-\twell", "bh r { s\tw e l");
result.add("brash", "bh r { S");
result.add("brash-\tness", "bh r { S\tn V s");
result.add("brass", "bh r { s");
result.add("brat", "bh r { t");
result.add("brat-\ttain", "bh r V\tt eI n");
result.add("brat-\ttle", "bh r {\tt V l");
result.add("brat-\tton", "bh r {\tt V n");
result.add("brat-\twurst", "bh r { t\tw @r s t");
result.add("brats", "bh r { t s");
result.add("brau", "bh r aU");
result.add("braun", "bh r O: n");
result.add("braun-\tschweig", "bh r aU n\tS w aI g");
result.add("braun's", "bh r O: n z");
result.add("brauns-\ttein", "bh r O: n\ts t i: n");
result.add("brause", "bh r O: z");
result.add("brave", "bh r eI v");
result.add("brave-\theart", "bh r eI v\th Q@ t");
result.add("brave-\tly", "bh r eI v\tl i:");
result.add("braved", "bh r eI v d");
result.add("braves", "bh r eI v z");
result.add("braw-\tley", "bh r O:\tl i:");
result.add("braw-\tling", "bh r O:\tl I N");
result.add("braw-\tner", "bh r O:\tn @r");
result.add("braw-\tny", "bh r O:\tn i:");
result.add("brawl", "bh r O: l");
result.add("brawls", "bh r O: l z");
result.add("brawn", "bh r O: n");
result.add("brax-\tton", "bh r { k\ts t V n");
result.add("bray", "bh r eI");
result.add("bray-\tton", "bh r eI\tt V n");
result.add("braz", "bh r { z");
result.add("braz-\tza-\tville", "bh r {\tz V\tv I l");
result.add("bre-\tcher", "bh r e\tk @r");
result.add("bre-\tcken-\tridge", "bh r e\tk V n\tr I dZ");
result.add("bre-\tda", "bh r eI\td V");
result.add("bre-\tger", "bh r i:\tg @r");
result.add("bre-\tmen", "bh r e\tm V n");
result.add("bre-\tmer", "bh r i:\tm @r");
result.add("bre-\tsee", "bh r V\ts i:");
result.add("bre-\tton", "bh r e\tt V n");
result.add("bre-\tvard", "bh r e\tv @r d");
result.add("bre-\tvets", "bh r V\tv e t s");
result.add("bre-\tvi-\tty", "bh r e\tv I\tt i:");
result.add("bre-\twe-\tries", "bh r u:\t@r\ti: z");
result.add("bre-\twe-\try", "bh r u:\t@r\ti:");
result.add("bre-\twer", "bh r u:\t@r");
result.add("bre-\twers", "bh r u:\t@r z");
result.add("bre-\twer's", "bh r u:\t@r z");
result.add("bre-\twing", "bh r u:\tI N");
result.add("bre-\tyer", "bh r eI\t@r");
result.add("bre-\tyer's", "bh r eI\t@r z");
result.add("brea", "bh r i:");
result.add("brea-\tches", "bh r i:\ttS V z");
result.add("brea-\tching", "bh r i:\ttS I N");
result.add("brea-\tded", "bh r e\td V d");
result.add("brea-\tding", "bh r e\td I N");
result.add("brea-\tdy", "bh r e\td i:");
result.add("brea-\tka-\tble", "bh r eI\tk V\tb V l");
result.add("brea-\tka-\tway", "bh r eI\tk V\tw eI");
result.add("brea-\tkage", "bh r eI\tk I dZ");
result.add("brea-\tke-\tven", "bh r eI\tk i:\tv V n");
result.add("brea-\tker", "bh r eI\tk @r");
result.add("brea-\tkers", "bh r eI\tk @r z");
result.add("brea-\tking", "bh r eI\tk I N");
result.add("brea-\tther", "bh r i:\tD @r");
result.add("brea-\tthing", "bh r i:\tD I N");
result.add("brea-\tthy", "bh r e\tT i:");
result.add("breach", "bh r i: tS");
result.add("breached", "bh r i: tS t");
result.add("bread", "bh r e d");
result.add("bread-\tbas-\tket", "bh r e d\tb { s\tk V t");
result.add("bread-\tbox", "bh r e d\tb Q k s");
result.add("bread-\tfruit", "bh r e d\tf r u: t");
result.add("bread-\twin-\tner", "bh r e d\tw I\tn @r");
result.add("bread-\twin-\tners", "bh r e d\tw I\tn @r z");
result.add("breads", "bh r e d z");
result.add("breadth", "bh r e d T");
result.add("break", "bh r eI k");
result.add("break-\tdown", "bh r eI k\td aU n");
result.add("break-\tdowns", "bh r eI k\td aU n z");
result.add("break-\te-\tven", "bh r eI\tk i:\tv V n");
result.add("break-\tfast", "bh r e k\tf V s t");
result.add("break-\tfasts", "bh r e k\tf V s t s");
result.add("break-\tneck", "bh r eI k\tn e k");
result.add("break-\tout", "bh r eI\tk aU t");
result.add("break-\touts", "bh r eI\tk aU t s");
result.add("break-\tup", "bh r eI\tk V p");
result.add("break-\tups", "bh r eI\tk V p s");
result.add("break-\twa-\tter", "bh r eI k\tw O:\tt @r");
result.add("breaks", "bh r eI k s");
result.add("breakth-\trough", "bh r eI k\tT r u:");
result.add("breakth-\troughs", "bh r eI k\tT r u: z");
result.add("bream", "bh r i: m");
result.add("breas-\tted", "bh r e s\tt V d");
result.add("breas-\tting", "bh r e s\tt I N");
result.add("breast", "bh r e s t");
result.add("breast-\tfed", "bh r e s\tt f e d");
result.add("breast-\tfee-\tding", "bh r e s\tt f i:\td I N");
result.add("breast-\tfeed", "bh r e s\tt f i: d");
result.add("breast-\tfeeds", "bh r e s\tt f i: d z");
result.add("breast-\tplate", "bh r e s\tt p l eI t");
result.add("breasts", "bh r e s t s");
result.add("breath", "bh r e T");
result.add("breath-\tless", "bh r e T\tl V s");
result.add("breath-\tless-\tly", "bh r e T\tl V s\tl i:");
result.add("breath-\tta-\tking", "bh r e T\tt eI\tk I N");
result.add("breath-\tta-\tking-\tly", "bh r e T\tt eI\tk I N\tl i:");
result.add("breathe", "bh r i: D");
result.add("breathed", "bh r i: D d");
result.add("breathes", "bh r i: D z");
result.add("breaths", "bh r e T s");
result.add("breaux", "bh r @U");
result.add("brech-\ttel", "bh r e k\tt V l");
result.add("brecht", "bh r e k t");
result.add("breck", "bh r e k");
result.add("bred", "bh r e d");
result.add("brede", "bh r i: d");
result.add("bree", "bh r i:");
result.add("bree-\tden", "bh r i:\td V n");
result.add("bree-\tden's", "bh r i:\td V n z");
result.add("bree-\tder", "bh r i:\td @r");
result.add("bree-\tders", "bh r i:\td @r z");
result.add("bree-\tding", "bh r i:\td I N");
result.add("bree-\tzes", "bh r i:\tz V z");
result.add("bree-\tzy", "bh r i:\tz i:");
result.add("breech", "bh r i: tS");
result.add("breed", "bh r i: d");
result.add("breeds", "bh r i: d z");
result.add("breed's", "bh r i: d z");
result.add("breen", "bh r i: n");
result.add("brees", "bh r i: z");
result.add("breese", "bh r i: z");
result.add("breeze", "bh r i: z");
result.add("breeze-\tway", "bh r i: z\tw eI");
result.add("breezed", "bh r i: z d");
result.add("brem-\tner", "bh r e m\tn @r");
result.add("bren", "bh r e n");
result.add("bren-\tda", "bh r e n\td V");
result.add("bren-\tdan", "bh r e n\td V n");
result.add("bren-\tda's", "bh r e n\td V z");
result.add("bren-\tdel", "bh r e n\td V l");
result.add("bren-\tden", "bh r e n\td V n");
result.add("bren-\tna", "bh r e\tn V");
result.add("bren-\tnan", "bh r e\tn V n");
result.add("bren-\tnan's", "bh r e\tn V n z");
result.add("bren-\tnen", "bh r e\tn V n");
result.add("bren-\tner", "bh r e\tn @r");
result.add("bren-\tning", "bh r e\tn I N");
result.add("bren-\tta-\tno", "bh r e n\tt Q\tn @U");
result.add("bren-\tton", "bh r e n\tt V n");
result.add("brenn", "bh r e n");
result.add("brent", "bh r e n t");
result.add("brent-\twood", "bh r e n\tt w U d");
result.add("brents", "bh r e n t s");
result.add("bres-\tcia", "bh r e s\ttS V");
result.add("bres-\tson", "bh r e\ts V n");
result.add("bress", "bh r e s");
result.add("brest", "bh r e s t");
result.add("bret", "bh r e t");
result.add("bret-\tton", "bh r e\tt V n");
result.add("breth", "bh r e T");
result.add("breth-\tren", "bh r e D\tr V n");
result.add("brett", "bh r e t");
result.add("bretz", "bh r e t s");
result.add("breu-\ter", "bh r u:\t@r");
result.add("brew", "bh r u:");
result.add("brew-\tton", "bh r u:\tt V n");
result.add("brewed", "bh r u: d");
result.add("brews", "bh r u: z");
result.add("brews-\tter", "bh r u: s\tt @r");
result.add("brey", "bh r eI");
result.add("brezh-\tnev", "bh r e z\tn V v");
result.add("brezh-\tnev's", "bh r e z\tn V v z");
result.add("bri-\ta", "bh r i:\tV");
result.add("bri-\ta-\tna", "bh r i:\t{\tn V");
result.add("bri-\ta-\tna's", "bh r i:\t{\tn V z");
result.add("bri-\tan", "bh r aI\tV n");
result.add("bri-\tan-\tna", "bh r i:\t{\tn V");
result.add("bri-\tan-\tna's", "bh r i:\t{\tn V z");
result.add("bri-\tand", "bh r aI\tV n d");
result.add("bri-\tan's", "bh r aI\tV n z");
result.add("bri-\tant", "bh r aI\tV n t");
result.add("bri-\tar", "bh r aI\t@r");
result.add("bri-\tbe-\try", "bh r aI\tb @r\ti:");
result.add("bri-\tbing", "bh r aI\tb I N");
result.add("bri-\tdal", "bh r aI\td V l");
result.add("bri-\ten", "bh r aI\tV n");
result.add("bri-\ter", "bh r aI\t@r");
result.add("bri-\tga-\tdier", "bh r I\tg V\td I@");
result.add("bri-\tgade", "bh r V\tg eI d");
result.add("bri-\tgades", "bh r I\tg eI d z");
result.add("bri-\tgham", "bh r I\tg V m");
result.add("bri-\tgham's", "bh r I\tg V m z");
result.add("bri-\tgitte", "bh r I\tdZ I t");
result.add("bri-\tner", "bh r aI\tn @r");
result.add("bri-\tney", "bh r I\tn i:");
result.add("bri-\tning", "bh r aI\tn I N");
result.add("bri-\to", "bh r aI\t@U");
result.add("bri-\toche", "bh r i:\t@U S");
result.add("bri-\ton", "bh r aI\tV n");
result.add("bri-\tst-\tling", "bh r I\ts V\tl I N");
result.add("bri-\tstle", "bh r I\ts V l");
result.add("bri-\tstled", "bh r I\ts V l d");
result.add("bri-\tstles", "bh r I\ts V l z");
result.add("bri-\tta", "bh r i:\tt V");
result.add("bri-\ttain", "bh r I\tt @ n");
result.add("bri-\ttain's", "bh r I\tt @ n z");
result.add("bri-\ttan-\tni-\ta", "bh r V\tt {\tn i:\tV");
result.add("bri-\ttan-\tni-\tca", "bh r V\tt {\tn I\tk V");
result.add("bri-\ttish", "bh r I\tt I S");
result.add("bri-\tton", "bh r I\tt V n");
result.add("bri-\ttons", "bh r I\tt V n z");
result.add("bri-\txey", "bh r I k\ts i:");
result.add("briar-\tcliff", "bh r aI r\tk l I f");
result.add("bribe", "bh r aI b");
result.add("bribed", "bh r aI b d");
result.add("bribes", "bh r aI b z");
result.add("bric-\tkel", "bh r I\tk V l");
result.add("bric-\tker", "bh r I\tk @r");
result.add("bric-\tkle", "bh r I\tk V l");
result.add("brice", "bh r aI s");
result.add("brick", "bh r I k");
result.add("brick-\tbat", "bh r I k\tb { t");
result.add("brick-\tbats", "bh r I k\tb { t s");
result.add("brick-\tla-\tyer", "bh r I k\tl eI\t@r");
result.add("brick-\tla-\tyers", "bh r I k\tl eI\t@r z");
result.add("brick-\tyard", "bh r I k\tj Q@ d");
result.add("bricks", "bh r I k s");
result.add("brid-\twell", "bh r I d\tw e l");
result.add("bride", "bh r aI d");
result.add("bride-\tgroom", "bh r aI d\tg r u: m");
result.add("bride-\tgroom's", "bh r aI d\tg r u: m z");
result.add("brides", "bh r aI d z");
result.add("bride's", "bh r aI d z");
result.add("brides-\tmaid", "bh r aI d\tz m eI d");
result.add("brides-\tmaids", "bh r aI d\tz m eI d z");
result.add("brides-\tmaid's", "bh r aI d\tz m eI d z");
result.add("brie", "bh r i:");
result.add("brie-\tfer", "bh r i:\tf @r");
result.add("brie-\tfers", "bh r i:\tf @r z");
result.add("brie-\tfest", "bh r i:\tf V s t");
result.add("brie-\tfing", "bh r i:\tf I N");
result.add("brie-\tfings", "bh r i:\tf I N z");
result.add("brief", "bh r i: f");
result.add("brief-\tca-\tses", "bh r i: f\tk eI\ts V z");
result.add("brief-\tcase", "bh r i: f\tk eI s");
result.add("brief-\tly", "bh r i: f\tl i:");
result.add("briefed", "bh r i: f t");
result.add("briefs", "bh r i: f s");
result.add("brig", "bh r I g");
result.add("briggs", "bh r I g z");
result.add("brigh-\tte-\tning", "bh r aI\tt V\tn I N");
result.add("brigh-\tten", "bh r aI\tt V n");
result.add("brigh-\ttened", "bh r aI\tt V n d");
result.add("brigh-\ttens", "bh r aI\tt V n z");
result.add("brigh-\tter", "bh r aI\tt @r");
result.add("brigh-\ttest", "bh r aI\tt V s t");
result.add("brigh-\tton", "bh r aI\tt V n");
result.add("bright", "bh r aI t");
result.add("bright-\tly", "bh r aI t\tl i:");
result.add("bright-\tman", "bh r aI t\tm V n");
result.add("bright-\tness", "bh r aI t\tn V s");
result.add("bright's", "bh r aI t s");
result.add("bril-\tliance", "bh r I l\tj V n s");
result.add("bril-\tliant", "bh r I l\tj V n t");
result.add("bril-\tliant-\tly", "bh r I l\tj V n\tt l i:");
result.add("brill", "bh r I l");
result.add("brim", "bh r I m");
result.add("brim-\thall", "bh r I m\th O: l");
result.add("brim-\tmer", "bh r I\tm @r");
result.add("brim-\tming", "bh r I\tm I N");
result.add("brim-\tstone", "bh r I m\ts t @U n");
result.add("brimmed", "bh r I m d");
result.add("brin", "bh r I n");
result.add("brin-\tdle", "bh r I n\td V l");
result.add("brin-\tghurst", "bh r I N\th @r s t");
result.add("brin-\tging", "bh r I\tN I N");
result.add("brin-\tson", "bh r I n\ts V n");
result.add("brine", "bh r aI n");
result.add("brines", "bh r aI n z");
result.add("bring", "bh r I N");
result.add("brings", "bh r I N z");
result.add("brink", "bh r I N k");
result.add("brink-\tley", "bh r I N\tk l i:");
result.add("brink-\tman", "bh r I N\tk m V n");
result.add("brink-\tman-\tship", "bh r I N\tk m V n\tS I p");
result.add("brinks", "bh r I N k s");
result.add("brink's", "bh r I N k s");
result.add("brinks-\tman-\tship", "bh r I N\tk s m V n\tS I p");
result.add("brinn", "bh r I n");
result.add("bris-\tbane", "bh r I z\tb eI n");
result.add("bris-\tbin", "bh r I z\tb I n");
result.add("bris-\tcoe", "bh r I s\tk @U");
result.add("bris-\tker", "bh r I s\tk @r");
result.add("bris-\tket", "bh r I s\tk V t");
result.add("bris-\tky", "bh r I s\tk i:");
result.add("bris-\ttol", "bh r I s\tt V l");
result.add("bris-\ttow", "bh r I s\tt @U");
result.add("brisk", "bh r I s k");
result.add("brisk-\tly", "bh r I s\tk l i:");
result.add("brit", "bh r I t");
result.add("brit-\tches", "bh r I\ttS V z");
result.add("brit-\tta-\tny", "bh r I\tt V\tn i:");
result.add("brit-\ttain", "bh r I\tt V n");
result.add("brit-\ttan", "bh r I\tt V n");
result.add("brit-\tten", "bh r I\tt V n");
result.add("brit-\ttle", "bh r I\tt V l");
result.add("brit-\tton", "bh r I\tt V n");
result.add("brite", "bh r aI t");
result.add("b'rith", "bh r I T");
result.add("brits", "bh r I t s");
result.add("britt", "bh r I t");
result.add("britts", "bh r I t s");
result.add("brix", "bh r I k s");
result.add("bro", "bh r @U");
result.add("bro-\tcade", "bh r @U\tk eI d");
result.add("bro-\tcades", "bh r @U\tk eI d z");
result.add("bro-\tchure", "bh r @U\tS U@");
result.add("bro-\tchures", "bh r @U\tS U@ z");
result.add("bro-\tde-\trick", "bh r Q\td @r\tI k");
result.add("bro-\tde-\trick's", "bh r Q\td @r\tI k z");
result.add("bro-\tder", "bh r @U\td @r");
result.add("bro-\tder's", "bh r @U\td @r z");
result.add("bro-\tdeur", "bh r Q\td @r");
result.add("bro-\tdie", "bh r @U\tt i:");
result.add("bro-\tdy", "bh r @U\td i:");
result.add("bro-\tdy's", "bh r @U\td i: z");
result.add("bro-\tgan", "bh r @U\tg V n");
result.add("bro-\tkaw", "bh r @U\tk O:");
result.add("bro-\tke-\tra-\tges", "bh r @U\tk @r\tI\tdZ V z");
result.add("bro-\tke-\tra-\tge's", "bh r @U\tk @r\tI\tdZ V z");
result.add("bro-\tke-\trage", "bh r @U\tk @r\tI dZ");
result.add("bro-\tken", "bh r @U\tk V n");
result.add("bro-\tker", "bh r @U\tk @r");
result.add("bro-\tker-\ting", "bh r @U\tk @r\tI N");
result.add("bro-\tkers", "bh r @U\tk @r z");
result.add("bro-\tker's", "bh r @U\tk @r z");
result.add("bro-\tking", "bh r @U\tk I N");
result.add("bro-\tmide", "bh r @U\tm aI d");
result.add("bro-\tmides", "bh r @U\tm aI d z");
result.add("bro-\tmine", "bh r @U\tm i: n");
result.add("bro-\tnaugh", "bh r Q\tn O:");
result.add("bro-\tthel", "bh r Q\tT V l");
result.add("bro-\tthels", "bh r Q\tT V l z");
result.add("bro-\tther", "bh r V\tD @r");
result.add("bro-\tther-\thood", "bh r V\tD @r\th U d");
result.add("bro-\tther-\tly", "bh r V\tD @r\tl i:");
result.add("bro-\tther-\tson", "bh r V\tD @r\ts V n");
result.add("bro-\tther-\ts's", "bh r V\tD @r\tz V z");
result.add("bro-\tther-\tton", "bh r V\tD @r\tt V n");
result.add("bro-\tthers", "bh r V\tD @r z");
result.add("bro-\tther's", "bh r V\tD @r z");
result.add("bro-\twer", "bh r aU\t@r");
result.add("broa-\tches", "bh r @U\ttS V z");
result.add("broa-\tching", "bh r @U\ttS I N");
result.add("broa-\tde-\tning", "bh r O:\td V\tn I N");
result.add("broa-\tden", "bh r O:\td V n");
result.add("broa-\tdened", "bh r O:\td V n d");
result.add("broa-\tdens", "bh r O:\td V n z");
result.add("broa-\tder", "bh r O:\td @r");
result.add("broa-\tdest", "bh r O:\td V s t");
result.add("broa-\tdus", "bh r @U\td V s");
result.add("broach", "bh r @U tS");
result.add("broached", "bh r @U tS t");
result.add("broad", "bh r O: d");
result.add("broad-\tband", "bh r O: d\tb { n d");
result.add("broad-\tbent", "bh r O: d\tb e n t");
result.add("broad-\tcas-\tter", "bh r O: d\tk { s\tt @r");
result.add("broad-\tcas-\tters", "bh r O: d\tk { s\tt @r z");
result.add("broad-\tcas-\tter's", "bh r O: d\tk { s\tt @r z");
result.add("broad-\tcas-\tting", "bh r O: d\tk { s\tt I N");
result.add("broad-\tcast", "bh r O: d\tk { s t");
result.add("broad-\tcasts", "bh r O: d\tk { s t s");
result.add("broad-\tdus", "bh r O:\td V s");
result.add("broad-\thead", "bh r O: d\th e d");
result.add("broad-\tly", "bh r O: d\tl i:");
result.add("broad-\tsi-\tded", "bh r O: d\ts aI\td V d");
result.add("broad-\tside", "bh r O: d\ts aI d");
result.add("broad-\tsword", "bh r O: d\ts O@ d");
result.add("broad-\tview", "bh r O: d\tv j u:");
result.add("broad-\tway", "bh r O: d\tw eI");
result.add("broad-\tway's", "bh r O: d\tw eI z");
result.add("broad-\twell", "bh r O: d\tw e l");
result.add("broad's", "bh r O: d z");
result.add("brob-\tding-\tna-\tgi-\tan", "bh r O: b\td I g\tn {\tg i:\tV n");
result.add("brob-\tding-\tna-\tgi-\tans", "bh r O: b\td I g\tn {\tg i:\tV n z");
result.add("broc-\tco-\tli", "bh r Q\tk V\tl i:");
result.add("broc-\tkie", "bh r Q\tk i:");
result.add("brock", "bh r Q k");
result.add("brock-\tlin", "bh r Q k\tl I n");
result.add("brock-\tlin's", "bh r Q k\tl I n z");
result.add("brock-\tton", "bh r Q k\tt V n");
result.add("brock-\tway", "bh r Q k\tw eI");
result.add("brock-\tway's", "bh r Q k\tw eI z");
result.add("brock-\twell", "bh r Q k\tw e l");
result.add("brock's", "bh r Q k s");
result.add("brod", "bh r Q d");
result.add("brod-\thead", "bh r Q d\th e d");
result.add("brod-\tkin", "bh r Q d\tk I n");
result.add("brod-\tnax", "bh r Q d\tn { k s");
result.add("brod-\tsky", "bh r Q d\ts k i:");
result.add("broe-\tker", "bh r @U\tk @r");
result.add("broi-\tler", "bh r OI\tl @r");
result.add("broi-\tlers", "bh r OI\tl @r z");
result.add("broi-\tling", "bh r OI\tl I N");
result.add("broil", "bh r OI l");
result.add("broiled", "bh r OI l d");
result.add("brok", "bh r Q k");
result.add("broke", "bh r @U k");
result.add("broke-\tred", "bh r @U\tk @r d");
result.add("brol-\tly", "bh r Q\tl i:");
result.add("brom", "bh r Q m");
result.add("brom-\tberg", "bh r Q m\tb @r g");
result.add("brom-\tfield", "bh r Q m\tf i: l d");
result.add("brom-\tfield's", "bh r Q m\tf i: l d z");
result.add("brom-\tley", "bh r Q m\tl i:");
result.add("brom-\tmer", "bh r Q\tm @r");
result.add("brom-\twich", "bh r Q m\tw I tS");
result.add("bron-\tchi-\tal", "bh r Q n\ttS i:\tV l");
result.add("bron-\tchi-\ttis", "bh r Q N\tk aI\tt I s");
result.add("bron-\tco", "bh r Q N\tk @U");
result.add("bron-\tcos", "bh r Q N\tk @U z");
result.add("bron-\tder", "bh r Q n\td @r");
result.add("bron-\tson", "bh r Q n\ts V n");
result.add("bron-\tte", "bh r Q n\tt i:");
result.add("bron-\tto-\tsau-\trus", "bh r O: n\tt V\ts O@\tV s");
result.add("bron-\twen", "bh r O: n\tw e n");
result.add("bron-\tzen", "bh r Q n\tz V n");
result.add("bron-\tzes", "bh r Q n\tz V z");
result.add("bronc", "bh r Q N k");
result.add("bronk", "bh r Q N k");
result.add("brons-\tton", "bh r Q n\ts t V n");
result.add("bronx", "bh r Q N k s");
result.add("bronze", "bh r Q n z");
result.add("bronzed", "bh r Q n z d");
result.add("broo-\tded", "bh r u:\td V d");
result.add("broo-\tding", "bh r u:\td I N");
result.add("broo-\tdy", "bh r u:\td i:");
result.add("broo-\tker", "bh r U\tk @r");
result.add("broo-\tking", "bh r U\tk I N");
result.add("broo-\tkings", "bh r U\tk I N z");
result.add("broo-\tmall", "bh r u:\tm V l");
result.add("brooch", "bh r @U tS");
result.add("brood", "bh r u: d");
result.add("brook", "bh r U k");
result.add("brook-\tfield", "bh r U k\tf i: l d");
result.add("brook-\tha-\tven", "bh r U k\th eI\tv V n");
result.add("brook-\tline", "bh r U k\tl aI n");
result.add("brook-\tlyn", "bh r U k\tl V n");
result.add("brook-\tlyn's", "bh r U k\tl V n z");
result.add("brook-\tner", "bh r U k\tn @r");
result.add("brook-\tner's", "bh r U k\tn @r z");
result.add("brook-\tshire", "bh r u: k\tS aI r");
result.add("brook-\tside", "bh r U k\ts aI d");
result.add("brooke", "bh r U k");
result.add("brookes", "bh r U k s");
result.add("brooke's", "bh r U k s");
result.add("brooks", "bh r U k s");
result.add("brook's", "bh r U k s");
result.add("brooks-\tville", "bh r U k\ts v I l");
result.add("brooks-\tville's", "bh r U k\ts v I l z");
result.add("broom", "bh r u: m");
result.add("broom-\tfield", "bh r u: m\tf i: l d");
result.add("broom-\tstick", "bh r u: m\ts t I k");
result.add("broom-\tsticks", "bh r u: m\ts t I k s");
result.add("broome", "bh r u: m");
result.add("brooms", "bh r u: m z");
result.add("bro's", "bh r @U z");
result.add("bros-\tnan", "bh r Q s\tn V n");
result.add("brose", "bh r @U z");
result.add("brost", "bh r Q s t");
result.add("broth", "bh r O: T");
result.add("broths", "bh r O: T s");
result.add("brott", "bh r Q t");
result.add("brou-\tcek", "bh r u:\ttS e k");
result.add("brou-\tha-\tha", "bh r u:\th Q\th Q");
result.add("brou-\twer", "bh r aU\tw @r");
result.add("broug-\tham", "bh r u:\tg V m");
result.add("brough", "bh r aU");
result.add("brough-\tton", "bh r O:\tt V n");
result.add("brought", "bh r O: t");
result.add("broun", "bh r u: n");
result.add("brous-\tsard", "bh r u:\ts Q@ d");
result.add("brow", "bh r aU");
result.add("brow-\tbeat", "bh r aU\tb i: t");
result.add("brow-\tder", "bh r aU\td @r");
result.add("brow-\tnell", "bh r aU\tn e l");
result.add("brow-\tner", "bh r aU\tn @r");
result.add("brow-\tnest", "bh r aU\tn e s t");
result.add("brow-\tnie", "bh r aU\tn i:");
result.add("brow-\tnies", "bh r aU\tn i: z");
result.add("brow-\tning", "bh r aU\tn I N");
result.add("brow-\tning's", "bh r aU\tn I N z");
result.add("brow-\tnish", "bh r aU\tn I S");
result.add("brow-\tnout", "bh r aU\tn aU t");
result.add("brow-\tnouts", "bh r aU\tn aU t s");
result.add("brow-\tser", "bh r aU\tz @r");
result.add("brow-\tsers", "bh r aU\tz @r z");
result.add("brow-\tsing", "bh r aU\tz I N");
result.add("browed", "bh r aU d");
result.add("brown", "bh r aU n");
result.add("brown-\tback", "bh r aU n\tb { k");
result.add("brown-\tfield", "bh r aU n\tf i: l d");
result.add("brown-\tfields", "bh r aU n\tf i: l d z");
result.add("brown-\tlee", "bh r aU n\tl i:");
result.add("brown-\tley", "bh r aU n\tl i:");
result.add("brown-\tlow", "bh r aU n\tl @U");
result.add("brown-\tson", "bh r aU n\ts V n");
result.add("brown-\tstone", "bh r aU n\ts t @U n");
result.add("browne", "bh r aU n");
result.add("browned", "bh r aU n d");
result.add("browns", "bh r aU n z");
result.add("brown's", "bh r aU n z");
result.add("browns-\tville", "bh r aU n\tz v I l");
result.add("brows", "bh r aU z");
result.add("browse", "bh r aU z");
result.add("browsed", "bh r aU z d");
result.add("brox-\tton", "bh r Q k\ts t V n");
result.add("broz", "bh r Q z");
result.add("bru-\tba-\tker", "bh r V\tb V\tk @r");
result.add("bru-\tbeck", "bh r u:\tb e k");
result.add("bru-\tce's", "bh r u:\ts V z");
result.add("bru-\tcie", "bh r V\tk i:");
result.add("bru-\tcite", "bh r u:\ts aI t");
result.add("bru-\tges", "bh r u:\tdZ V z");
result.add("bru-\tin", "bh r u:\tI n");
result.add("bru-\ting-\tton", "bh r u:\tI N\tt V n");
result.add("bru-\tins", "bh r u:\tI n z");
result.add("bru-\tneau", "bh r V\tn @U");
result.add("bru-\tnei", "bh r u:\tn aI");
result.add("bru-\tnel-\tla", "bh r u:\tn e\tl V");
result.add("bru-\tnell", "bh r V\tn V l");
result.add("bru-\tnelle", "bh r V\tn e l");
result.add("bru-\tner", "bh r u:\tn @r");
result.add("bru-\tnet", "bh r u:\tn e t");
result.add("bru-\tnette", "bh r u:\tn e t");
result.add("bru-\tnettes", "bh r u:\tn e t s");
result.add("bru-\tni", "bh r u:\tn i:");
result.add("bru-\tning", "bh r u:\tn I N");
result.add("bru-\tno", "bh r u:\tn @U");
result.add("bru-\tno's", "bh r u:\tn @U z");
result.add("bru-\tsett", "bh r U\ts e t");
result.add("bru-\tshes", "bh r V\tS V z");
result.add("bru-\tshing", "bh r V\tS I N");
result.add("bru-\tshy", "bh r V\tS i:");
result.add("bru-\tta-\tli-\tties", "bh r u:\tt {\tl I\tt i: z");
result.add("bru-\tta-\tli-\tty", "bh r u:\tt {\tl I\tt i:");
result.add("bru-\tta-\tli-\tza-\ttion", "bh r u:\tt V\tl V\tz eI\tS V n");
result.add("bru-\tta-\tli-\tzes", "bh r u:\tt V\tl aI\tz V z");
result.add("bru-\tta-\tli-\tzing", "bh r u:\tt V\tl aI\tz I N");
result.add("bru-\tta-\tlize", "bh r u:\tt V\tl aI z");
result.add("bru-\tta-\tlized", "bh r u:\tt V\tl aI z d");
result.add("bru-\ttal", "bh r u:\tt V l");
result.add("bru-\ttal-\tly", "bh r u:\tt V\tl i:");
result.add("bru-\ttish", "bh r u:\tt I S");
result.add("bru-\ttus", "bh r u:\tt V s");
result.add("bru-\txel-\tles", "bh r V k\ts e\tl V s");
result.add("bruce", "bh r u: s");
result.add("bruch", "bh r V tS");
result.add("bruck-\tner", "bh r V k\tn @r");
result.add("brugh", "bh r V");
result.add("bruhn", "bh r V n");
result.add("brui-\tses", "bh r u:\tz V z");
result.add("brui-\tsing", "bh r u:\tz I N");
result.add("bruise", "bh r u: z");
result.add("bruised", "bh r u: z d");
result.add("brule", "bh r u: l");
result.add("brum", "bh r V m");
result.add("brum-\tley", "bh r V m\tl i:");
result.add("brum-\tmel", "bh r V\tm V l");
result.add("brum-\tmell", "bh r V\tm V l");
result.add("brum-\tmer", "bh r V\tm @r");
result.add("brun-\tches", "bh r V n\ttS V z");
result.add("brun-\tdidge", "bh r V n\td I dZ");
result.add("brun-\thil-\tda", "bh r u: n\th i: l\td V");
result.add("brun-\tner", "bh r V\tn @r");
result.add("brun-\tson", "bh r V n\ts V n");
result.add("brunch", "bh r V n tS");
result.add("brune", "bh r u: n");
result.add("brunk", "bh r V N k");
result.add("brunn", "bh r V n");
result.add("brunn-\thilde", "bh r V n\th I l d");
result.add("bruns", "bh r V n z");
result.add("bruns-\twick", "bh r V n\tz w I k");
result.add("bruns-\twick's", "bh r V n\tz w I k s");
result.add("brunt", "bh r V n t");
result.add("brus-\tsel", "bh r V\ts V l");
result.add("brus-\tsels", "bh r V\ts V l z");
result.add("brush", "bh r V S");
result.add("brush-\tfire", "bh r V S\tf aI r");
result.add("brush-\tfires", "bh r V S\tf aI r z");
result.add("brush-\twork", "bh r V S\tw @r k");
result.add("brushed", "bh r V S t");
result.add("brusque", "bh r V s k");
result.add("brusque-\tly", "bh r V s\tk l i:");
result.add("brust", "bh r V s t");
result.add("brut", "bh r u: t");
result.add("brute", "bh r u: t");
result.add("bry-\tna", "bh r I\tn V");
result.add("bryce", "bh r aI s");
result.add("bryn", "bh r I n");
result.add("bu-\tbo-\tnic", "bh j u:\tb Q\tn I k");
result.add("bu-\tcha-\tnan", "bh j u:\tk {\tn V n");
result.add("bu-\tcha-\tnan's", "bh j u:\tk {\tn V n z");
result.add("bu-\tcha-\trest", "bh j u:\tk @r\te s t");
result.add("bu-\tchal-\tter", "bh V\tk V l\tt @r");
result.add("bu-\tchan", "bh V\tk V n");
result.add("bu-\tchen-\twald", "bh j u:\tk e n\tw Q l d");
result.add("bu-\tcher", "bh V\tk @r");
result.add("bu-\tco-\tlic", "bh j u:\tk Q\tl I k");
result.add("bu-\tda-\tpest", "bh u:\td V\tp e s t");
result.add("bu-\tda-\tpest's", "bh u:\td V\tp e s t s");
result.add("bu-\tell", "bh j u:\tV l");
result.add("bu-\tford", "bh j u:\tf @r d");
result.add("bu-\tg-\tling", "bh j u:\tg V\tl I N");
result.add("bu-\tga-\tboo", "bh V\tg V\tb u:");
result.add("bu-\tgeye", "bh V\tg aI");
result.add("bu-\tgeyed", "bh V\tg aI d");
result.add("bu-\tgle", "bh j u:\tg V l");
result.add("bu-\tgles", "bh j u:\tg V l z");
result.add("bu-\tick", "bh j u:\tI k");
result.add("bu-\ticks", "bh j u:\tI k s");
result.add("bu-\tick's", "bh j u:\tI k s");
result.add("bu-\tist", "bh u:\tI s t");
result.add("bu-\tjum-\tbu-\tra", "bh u:\tdZ V m\tb U@\tV");
result.add("bu-\tka-\tvu", "bh u:\tk Q\tv u:");
result.add("bu-\tka-\tvu's", "bh u:\tk Q\tv u: z");
result.add("bu-\tkha-\trin", "bh V k\th @r\tI n");
result.add("bu-\tla", "bh j u:\tl V");
result.add("bu-\tli-\tmi-\ta", "bh j u:\tl I\tm i:\tV");
result.add("bu-\tli-\tmic", "bh j u:\tl I\tm I k");
result.add("bu-\tlow", "bh j u:\tl @U");
result.add("bu-\track", "bh j u:\tr V k");
result.add("bu-\tran", "bh j u:\tr V n");
result.add("bu-\tras", "bh j u:\tr V z");
result.add("bu-\treau", "bh j U@\t@U");
result.add("bu-\treau-\tcra-\tcies", "bh j U@\tQ k\tr V\ts i: z");
result.add("bu-\treau-\tcra-\tcy", "bh j U@\tQ k\tr V\ts i:");
result.add("bu-\treau-\tcra-\tcy's", "bh j U@\tQ k\tr V\ts i: z");
result.add("bu-\treau-\tcra-\ttese", "bh j U@\tV k\tr {\tt i: z");
result.add("bu-\treau-\tcra-\ttic", "bh j U@\tV k\tr {\tt I k");
result.add("bu-\treau-\tcrat", "bh j U@\tV k\tr { t");
result.add("bu-\treau-\tcrats", "bh j U@\tV k\tr { t s");
result.add("bu-\treaus", "bh j U@\t@U z");
result.add("bu-\treau's", "bh j U@\t@U z");
result.add("bu-\trel", "bh e@\tV l");
result.add("bu-\tren", "bh j U@\tV n");
result.add("bu-\tro-\tker", "bh j u:\tr V\tk @r");
result.add("bu-\trun-\tdi", "bh @r\tV n\td i:");
result.add("bu-\trun-\tdi's", "bh @r\tV n\td i: z");
result.add("bu-\try", "bh e@\ti:");
result.add("bu-\try-\ting", "bh e@\ti:\tI N");
result.add("bu-\try's", "bh e@\ti: z");
result.add("bu-\tses", "bh V\ts V z");
result.add("bu-\tsey", "bh j u:\tz i:");
result.add("bu-\tshel", "bh U\tS V l");
result.add("bu-\tshels", "bh U\tS V l z");
result.add("bu-\tsher", "bh U\tS @r");
result.add("bu-\tshes", "bh U\tS V z");
result.add("bu-\tshey", "bh U\tS i:");
result.add("bu-\tshings", "bh U\tS I N z");
result.add("bu-\tsh's", "bh U\tS V z");
result.add("bu-\tshy", "bh U\tS i:");
result.add("bu-\tsi-\ter", "bh I\tz i:\t@r");
result.add("bu-\tsi-\test", "bh I\tz i:\tV s t");
result.add("bu-\tsi-\tly", "bh I\tz I\tl i:");
result.add("bu-\tsied", "bh I\tz i: d");
result.add("bu-\tsing", "bh V\ts I N");
result.add("bu-\tsy", "bh I\tz i:");
result.add("bu-\ttane", "bh j u:\tt eI n");
result.add("bu-\ttyl", "bh j u:\tt V l");
result.add("bu-\txom", "bh V k\ts V m");
result.add("bu-\tyer", "bh aI\t@r");
result.add("bu-\tyers", "bh aI\t@r z");
result.add("bu-\tyer's", "bh aI\t@r z");
result.add("bu-\tyers'", "bh aI\t@r z");
result.add("bub", "bh V b");
result.add("bub-\tb-\tling", "bh V\tb V\tl I N");
result.add("bub-\tba", "bh V\tb V");
result.add("bub-\tble", "bh V\tb V l");
result.add("bub-\tbled", "bh V\tb V l d");
result.add("bub-\tbles", "bh V\tb V l z");
result.add("bubb", "bh V b");
result.add("bubb-\tly", "bh V b\tl i:");
result.add("buc-\tca-\tneer", "bh V\tk V\tn i: r");
result.add("buc-\tcan-\teers", "bh V\tk V\tn i: r z");
result.add("buc-\tk-\tler", "bh V\tk V\tl @r");
result.add("buc-\tkels", "bh V\tk V l z");
result.add("buc-\tket", "bh V\tk V t");
result.add("buc-\tkets", "bh V\tk V t s");
result.add("buc-\tkeye", "bh V\tk aI");
result.add("buc-\tking", "bh V\tk I N");
result.add("buc-\tking-\tham", "bh V\tk I N\th { m");
result.add("buc-\tkled", "bh V\tk V l d");
result.add("buc-\tkles", "bh V\tk V l z");
result.add("buc-\tko", "bh V\tk @U");
result.add("buc-\tky", "bh V\tk i:");
result.add("buch", "bh V tS");
result.add("buch-\tbin-\tder", "bh V k\tb I n\td @r");
result.add("buch-\tman", "bh V k\tm V n");
result.add("buch-\tner", "bh V k\tn @r");
result.add("buch-\twald", "bh V k\tw O: l d");
result.add("buck", "bh V k");
result.add("buck-\thorn", "bh V k\th O@ n");
result.add("buck-\tland", "bh V k\tl V n d");
result.add("buck-\tle", "bh V\tk V l");
result.add("buck-\tley", "bh V k\tl i:");
result.add("buck-\tlin", "bh V k\tl I n");
result.add("buck-\tling", "bh V k\tl I N");
result.add("buck-\tman", "bh V k\tm V n");
result.add("buck-\tnell", "bh V k\tn e l");
result.add("buck-\tner", "bh V k\tn @r");
result.add("buck-\tshot", "bh V k\tS Q t");
result.add("buck-\tskin", "bh V k\ts k I n");
result.add("buck-\tthorn", "bh V k\tT O@ n");
result.add("buck-\twheat", "bh V k\tw i: t");
result.add("bucked", "bh V k t");
result.add("bucks", "bh V k s");
result.add("buck's", "bh V k s");
result.add("bud", "bh V d");
result.add("bud-\tden-\tbrooks", "bh V\td V n\tb r U k s");
result.add("bud-\tdha", "bh u:\td V");
result.add("bud-\tdha's", "bh u:\td V z");
result.add("bud-\tdhi-\tsm", "bh u:\td I\tz V m");
result.add("bud-\tdhist", "bh u:\td I s t");
result.add("bud-\tdhists", "bh u:\td I s t s");
result.add("bud-\tdi-\ter", "bh V\td i:\t@r");
result.add("bud-\tdie", "bh V\td i:");
result.add("bud-\tdies", "bh V\td i: z");
result.add("bud-\tding", "bh V\td I N");
result.add("bud-\tdy", "bh V\td i:");
result.add("bud-\tdy's", "bh V\td i: z");
result.add("bud-\tge-\tta-\try", "bh V\tdZ V\tt e@\ti:");
result.add("bud-\tge-\tted", "bh V\tdZ V\tt V d");
result.add("bud-\tge-\tteer", "bh V\tdZ V\tt I@");
result.add("bud-\tge-\tteers", "bh V\tdZ V\tt I@ z");
result.add("bud-\tge-\tting", "bh V\tdZ V\tt I N");
result.add("bud-\tget", "bh V\tdZ V t");
result.add("bud-\tgets", "bh V\tdZ V t s");
result.add("bud-\tget's", "bh V\tdZ V t s");
result.add("bud-\tging", "bh V\tdZ I N");
result.add("bud-\tlong", "bh V d\tl O: N");
result.add("bud-\twei-\tser", "bh V d\tw aI\tz @r");
result.add("budd", "bh V d");
result.add("budde", "bh V d");
result.add("budge", "bh V dZ");
result.add("budged", "bh V dZ d");
result.add("buds", "bh V d z");
result.add("bud's", "bh V d z");
result.add("bue-\tna", "bh u:\tn V");
result.add("bue-\tno", "bh w eI\tn @U");
result.add("bue-\tnos", "bh w eI\tn @U s");
result.add("bueche", "bh u: tS");
result.add("bueh-\tler", "bh j u:\tl @r");
result.add("bueh-\trer", "bh j u:\th @r");
result.add("bueh-\tring", "bh j u:\tr I N");
result.add("buer-\tger", "bh j u: r\tg @r");
result.add("buf-\tfa", "bh V\tf V");
result.add("buf-\tfa-\tlo", "bh V\tf V\tl @U");
result.add("buf-\tfa-\tlos", "bh V\tf V\tl @U z");
result.add("buf-\tfa-\tlo's", "bh V\tf V\tl @U z");
result.add("buf-\tfe-\trin", "bh V\tf @r\tI n");
result.add("buf-\tfe-\tting", "bh V\tf eI\tI N");
result.add("buf-\tfer", "bh V\tf @r");
result.add("buf-\tfered", "bh V\tf @r d");
result.add("buf-\tfers", "bh V\tf @r z");
result.add("buf-\tfet", "bh V\tf eI");
result.add("buf-\tfeted", "bh V\tf eI d");
result.add("buf-\tfets", "bh V\tf V t s");
result.add("buf-\tfin", "bh V\tf I n");
result.add("buf-\tfo", "bh u:\tf @U");
result.add("buf-\tfo-\tne", "bh u:\tf @U\tn i:");
result.add("buf-\tfoon", "bh V\tf u: n");
result.add("buf-\tfum", "bh V\tf V m");
result.add("buf-\tfy", "bh V\tf i:");
result.add("buff", "bh V f");
result.add("buffs", "bh V f s");
result.add("buff's", "bh V f s");
result.add("bug", "bh V g");
result.add("bug-\tbee", "bh V g\tb i:");
result.add("bug-\teyed", "bh V\tg aI d");
result.add("bug-\tger", "bh V\tg @r");
result.add("bug-\tgers", "bh V\tg @r z");
result.add("bug-\tgies", "bh V\tg i: z");
result.add("bug-\tging", "bh V\tg I N");
result.add("bug-\tgy", "bh V\tg i:");
result.add("bugged", "bh V g d");
result.add("bugs", "bh V g z");
result.add("buh-\tler", "bh u:\tl @r");
result.add("buhl", "bh j u: l");
result.add("buhr", "bh j U@");
result.add("bui", "bh I");
result.add("buil-\tda-\tble", "bh I l\td V\tb V l");
result.add("buil-\tder", "bh I l\td @r");
result.add("buil-\tders", "bh I l\td @r z");
result.add("buil-\tder's", "bh I l\td @r z");
result.add("buil-\tding", "bh I l\td I N");
result.add("buil-\tdings", "bh I l\td I N z");
result.add("buil-\tding's", "bh I l\td I N z");
result.add("buil-\tdup", "bh I l\td V p");
result.add("buil-\tdups", "bh I l\td V p s");
result.add("build", "bh I l d");
result.add("build-\tup", "bh I l\td V p");
result.add("builds", "bh I l d z");
result.add("built", "bh I l t");
result.add("buis-\tson", "bh w i:\ts Q n");
result.add("bul-\tbous", "bh V l\tb V s");
result.add("bul-\tfin-\tch's", "bh U l\tf I n\ttS V z");
result.add("bul-\tfinch", "bh U l\tf I n tS");
result.add("bul-\tga-\tri-\ta", "bh V l\tg e@\ti:\tV");
result.add("bul-\tga-\tri-\tan", "bh V l\tg e@\ti:\tV n");
result.add("bul-\tga-\tri-\tans", "bh V l\tg e@\ti:\tV n z");
result.add("bul-\tga-\tri-\ta's", "bh V l\tg e@\ti:\tV z");
result.add("bul-\tger", "bh V l\tg @r");
result.add("bul-\tges", "bh V l\tdZ V z");
result.add("bul-\tging", "bh V l\tdZ I N");
result.add("bul-\tki-\ter", "bh V l\tk i:\t@r");
result.add("bul-\tky", "bh V l\tk i:");
result.add("bul-\tla", "bh U\tl V");
result.add("bul-\tlard", "bh U\tl @r d");
result.add("bul-\tle-\ttin", "bh U\tl V\tt V n");
result.add("bul-\tle-\ttins", "bh U\tl V\tt V n z");
result.add("bul-\tlen", "bh U\tl V n");
result.add("bul-\tler", "bh U\tl @r");
result.add("bul-\tlet", "bh U\tl V t");
result.add("bul-\tlet-\tproof", "bh U\tl V t\tp r u: f");
result.add("bul-\tlets", "bh U\tl V t s");
result.add("bul-\tlied", "bh U\tl i: d");
result.add("bul-\tlies", "bh U\tl i: z");
result.add("bul-\tlion", "bh U l\tj V n");
result.add("bul-\tlis", "bh U\tl I s");
result.add("bul-\tlish", "bh U\tl I S");
result.add("bul-\tlish-\tly", "bh U\tl I S\tl i:");
result.add("bul-\tlish-\tness", "bh U\tl I S\tn V s");
result.add("bul-\tlitt", "bh u:\tl I t");
result.add("bul-\tloch", "bh U\tl V k");
result.add("bul-\tlock", "bh U\tl V k");
result.add("bul-\tlocks", "bh U\tl V k s");
result.add("bul-\tlock's", "bh U\tl V k s");
result.add("bul-\tly", "bh U\tl i:");
result.add("bul-\tly-\ting", "bh U\tl i:\tI N");
result.add("bul-\tmer", "bh V l\tm @r");
result.add("bul-\trush", "bh U l\tr V S");
result.add("bul-\twark", "bh U l\tw @r k");
result.add("bulb", "bh V l b");
result.add("bulbs", "bh V l b z");
result.add("bulge", "bh V l dZ");
result.add("bulged", "bh V l dZ d");
result.add("bulk", "bh V l k");
result.add("bulk-\thead", "bh V l\tk h e d");
result.add("bulk-\theads", "bh V l\tk h e d z");
result.add("bull", "bh U l");
result.add("bull-\tdo-\tzer", "bh U l\td @U\tz @r");
result.add("bull-\tdo-\tzers", "bh U l\td @U\tz @r z");
result.add("bull-\tdo-\tzing", "bh U l\td @U\tz I N");
result.add("bull-\tdog", "bh U l\td O: g");
result.add("bull-\tdogs", "bh U l\td O: g z");
result.add("bull-\tdoze", "bh U l\td @U z");
result.add("bull-\tdozed", "bh U l\td @U z d");
result.add("bull-\tfigh-\tter", "bh U l\tf aI\tt @r");
result.add("bull-\tfigh-\tting", "bh U l\tf aI\tt I N");
result.add("bull-\tfight", "bh U l\tf aI t");
result.add("bull-\tfights", "bh U l\tf aI t z");
result.add("bull-\tfrog", "bh U l\tf r O: g");
result.add("bull-\tfrogs", "bh U l\tf r O: g z");
result.add("bull-\thead", "bh U l\th e d");
result.add("bull-\theads", "bh U l\th e d z");
result.add("bull-\thorn", "bh U l\th O@ n");
result.add("bull-\thorns", "bh U l\th O@ n z");
result.add("bull-\tpen", "bh U l\tp e n");
result.add("bull-\tseye", "bh u: l\tz aI");
result.add("bull-\tshit", "bh U l\tS I t");
result.add("bull-\twin-\tkle", "bh U l\tw I N\tk V l");
result.add("bulls", "bh U l z");
result.add("bull's", "bh U l z");
result.add("bult", "bh V l t");
result.add("bult-\tman", "bh U l\tt m V n");
result.add("bum", "bh V m");
result.add("bum-\tb-\tling", "bh V m\tb V\tl I N");
result.add("bum-\tble", "bh V m\tb V l");
result.add("bum-\tgard-\tner", "bh V m\tg Q@ d\tn @r");
result.add("bum-\tmer", "bh V\tm @r");
result.add("bum-\tper", "bh V m\tp @r");
result.add("bum-\tpers", "bh V m\tp @r z");
result.add("bum-\tpers-\tti-\tcker", "bh V m\tp @r s\tt I\tk @r");
result.add("bum-\tping", "bh V m\tp I N");
result.add("bum-\tpings", "bh V m\tp I N z");
result.add("bum-\tpy", "bh V m\tp i:");
result.add("bummed", "bh V m d");
result.add("bump", "bh V m p");
result.add("bump-\tkin", "bh V m\tp k I n");
result.add("bumped", "bh V m p t");
result.add("bumps", "bh V m p s");
result.add("bums", "bh V m z");
result.add("bun", "bh V n");
result.add("bun-\tches", "bh V n\ttS V z");
result.add("bun-\tching", "bh V n\ttS I N");
result.add("bun-\tchy", "bh V n\ttS i:");
result.add("bun-\td-\tling", "bh V n\td V\tl I N");
result.add("bun-\tda", "bh V n\td V");
result.add("bun-\tdes-\tbank", "bh U n\td V s\tb { N k");
result.add("bun-\tdes-\trat", "bh U n\td V s\tr { t");
result.add("bun-\tdes-\ttag", "bh V n\td V s\tt { g");
result.add("bun-\tdle", "bh V n\td V l");
result.add("bun-\tdled", "bh V n\td V l d");
result.add("bun-\tdles", "bh V n\td V l z");
result.add("bun-\tdy", "bh V n\td i:");
result.add("bun-\tdy's", "bh V n\td i: z");
result.add("bun-\tg-\tling", "bh V N\tg V\tl I N");
result.add("bun-\tga-\tlow", "bh V N\tg V\tl @U");
result.add("bun-\tga-\tlows", "bh V N\tg V\tl @U z");
result.add("bun-\tgee", "bh V n\tdZ i:");
result.add("bun-\tger", "bh V\tN @r");
result.add("bun-\tgey", "bh V n\tdZ i:");
result.add("bun-\tgled", "bh V N\tg V l d");
result.add("bun-\tker", "bh V N\tk @r");
result.add("bun-\tkers", "bh V N\tk @r z");
result.add("bun-\tnell", "bh V\tn V l");
result.add("bun-\tni", "bh u:\tn i:");
result.add("bun-\tnie", "bh V\tn i:");
result.add("bun-\tnies", "bh V\tn i: z");
result.add("bun-\tning", "bh V\tn I N");
result.add("bun-\tny", "bh V\tn i:");
result.add("bun-\tting", "bh V n\tt I N");
result.add("bun-\tton", "bh V n\tt V n");
result.add("bun-\tyan", "bh V n\tj V n");
result.add("bunce", "bh V n s");
result.add("bunch", "bh V n tS");
result.add("bunche", "bh V n tS");
result.add("bunched", "bh V n tS t");
result.add("bund", "bh V n d");
result.add("bunde", "bh V n d");
result.add("bunds", "bh V n d z");
result.add("bung", "bh V N");
result.add("bung-\tler", "bh V N\tg l @r");
result.add("bung-\tlers", "bh V N\tg l @r z");
result.add("bunk", "bh V N k");
result.add("bunks", "bh V N k s");
result.add("bunn", "bh V n");
result.add("buns", "bh V n z");
result.add("bunt", "bh V n");
result.add("buo-\tno-\tmo", "bh w @U\tn @U\tm @U");
result.add("buo-\ty", "bh u:\ti:");
result.add("buo-\tyan-\tcy", "bh OI\tV n\ts i:");
result.add("buo-\tyant", "bh OI\tV n t");
result.add("buo-\tyed", "bh u:\ti: d");
result.add("buo-\tying", "bh OI\tI N");
result.add("buo-\tys", "bh u:\ti: z");
result.add("bur", "bh @r");
result.add("bur-\tbage", "bh @r\tb I dZ");
result.add("bur-\tbank", "bh @r\tb { N k");
result.add("bur-\tbank's", "bh @r\tb { N k s");
result.add("bur-\tchard", "bh @r\tS Q@ d");
result.add("bur-\tchett", "bh @r\ttS e t");
result.add("bur-\tde-\tning", "bh @r\td V\tn I N");
result.add("bur-\tden", "bh @r\td V n");
result.add("bur-\tden-\tsome", "bh @r\td V n\ts V m");
result.add("bur-\tdened", "bh @r\td V n d");
result.add("bur-\tdens", "bh @r\td V n z");
result.add("bur-\tdett", "bh @r\td I t");
result.add("bur-\tdette", "bh @r\td e t");
result.add("bur-\tdick", "bh @r\td I k");
result.add("bur-\tdine", "bh @r\td i: n");
result.add("bur-\tdine's", "bh @r\td i: n z");
result.add("bur-\tdon", "bh @r\td V n");
result.add("bur-\tford", "bh @r\tf @r d");
result.add("bur-\tge-\tner", "bh @r\tg i:\tn @r");
result.add("bur-\tgee", "bh @r\tg i:");
result.add("bur-\tger", "bh @r\tg @r");
result.add("bur-\tgers", "bh @r\tg @r z");
result.add("bur-\tger's", "bh @r\tg @r z");
result.add("bur-\tgess", "bh @r\tdZ V s");
result.add("bur-\tget", "bh @r\tg e t");
result.add("bur-\tgher", "bh @r\tg @r");
result.add("bur-\tgin", "bh @r\tg I n");
result.add("bur-\tkle", "bh @r\tk V l");
result.add("bur-\tlap", "bh @r\tl { p");
result.add("bur-\tle-\tson", "bh @r\tl V\ts V n");
result.add("bur-\tleigh", "bh @r\tl I");
result.add("bur-\tlesque", "bh @r\tl e s k");
result.add("bur-\tley", "bh @r\tl i:");
result.add("bur-\tli-\tson", "bh @r\tl I\ts V n");
result.add("bur-\tlin-\tgame", "bh @r\tl I N\tg eI m");
result.add("bur-\tlin-\tgham", "bh @r\tl I N\th { m");
result.add("bur-\tling", "bh @r\tl I N");
result.add("bur-\tling-\tton", "bh @r\tl I N\tt V n");
result.add("bur-\tling-\tton's", "bh @r\tl I N\tt V n z");
result.add("bur-\tly", "bh @r\tl i:");
result.add("bur-\tma", "bh @r\tm V");
result.add("bur-\tman", "bh @r\tm V n");
result.add("bur-\tmans", "bh @r\tm V n z");
result.add("bur-\tma's", "bh @r\tm V z");
result.add("bur-\tmese", "bh @r\tm i: z");
result.add("bur-\tna-\tble", "bh @r\tn V\tb V l");
result.add("bur-\tna-\tby", "bh @r\tn V\tb i:");
result.add("bur-\tnard", "bh @r\tn Q@ d");
result.add("bur-\tner", "bh @r\tn @r");
result.add("bur-\tners", "bh @r\tn @r z");
result.add("bur-\tnet", "bh @r\tn e t");
result.add("bur-\tnett", "bh @r\tn e t");
result.add("bur-\tnett's", "bh @r\tn e t s");
result.add("bur-\tney", "bh @r\tn i:");
result.add("bur-\tnham", "bh @r\tn V m");
result.add("bur-\tnham's", "bh @r\tn V m z");
result.add("bur-\tning", "bh @r\tn I N");
result.add("bur-\tnings", "bh @r\tn I N z");
result.add("bur-\tnish", "bh @r\tn I S");
result.add("bur-\tnished", "bh @r\tn I S t");
result.add("bur-\tnout", "bh @r\tn aU t");
result.add("bur-\tnup", "bh @r\tn V p");
result.add("bur-\tping", "bh @r\tp I N");
result.add("bur-\trell", "bh @r\te l");
result.add("bur-\trer", "bh @r\t@r");
result.add("bur-\tri-\ter", "bh @r\ti:\t@r");
result.add("bur-\tri-\tto", "bh @r\ti:\tt @U");
result.add("bur-\tri-\ttos", "bh @r\ti:\tt @U s");
result.add("bur-\trill", "bh O@\tI l");
result.add("bur-\tris", "bh @r\tI s");
result.add("bur-\tro", "bh @r\t@U");
result.add("bur-\tro-\twer", "bh @r\t@U\t@r");
result.add("bur-\tro-\twers", "bh @r\t@U\t@r z");
result.add("bur-\tro-\twing", "bh @r\t@U\tI N");
result.add("bur-\tros", "bh @r\t@U z");
result.add("bur-\troughs", "bh V\tr @U z");
result.add("bur-\trow", "bh @r\t@U");
result.add("bur-\trows", "bh @r\t@U z");
result.add("bur-\trus", "bh U@\tV s");
result.add("bur-\try", "bh @r\ti:");
result.add("bur-\tson", "bh @r\ts V n");
result.add("bur-\tsting", "bh @r s\tt I N");
result.add("bur-\ttis", "bh @r\tt I s");
result.add("bur-\tton", "bh @r\tt V n");
result.add("bur-\tton's", "bh @r\tt V n z");
result.add("bur-\twell", "bh @r\tw e l");
result.add("burch", "bh @r tS");
result.add("burch-\tfield", "bh @r tS\tf i: l d");
result.add("burck", "bh @r k");
result.add("burck-\thardt", "bh @r k\th Q@ t");
result.add("burd", "bh @r d");
result.add("burg", "bh @r g");
result.add("burg-\tla-\tries", "bh @r g\tl @r\ti: z");
result.add("burg-\tla-\trize", "bh @r g\tl @r\taI z");
result.add("burg-\tla-\trized", "bh @r g\tl @r\taI z d");
result.add("burg-\tlar", "bh @r g\tl @r");
result.add("burge", "bh @r g");
result.add("burge-\to-\tning", "bh @r\tdZ V\tn I N");
result.add("burge-\ton", "bh @r\tdZ V n");
result.add("burge-\toned", "bh @r\tdZ V n d");
result.add("burgh-\tley", "bh @r g\tl i:");
result.add("burk-\tley", "bh @r k\tl i:");
result.add("burks", "bh @r k s");
result.add("burl", "bh @r l");
result.add("burn", "bh @r n");
result.add("burn-\tley", "bh @r n\tl i:");
result.add("burn-\tley's", "bh @r n\tl i: z");
result.add("burn-\tside", "bh @r n\ts aI d");
result.add("burn-\tside's", "bh @r n\ts aI d z");
result.add("burn-\tup", "bh @r\tn V p");
result.add("burne", "bh @r n");
result.add("burned", "bh @r n d");
result.add("burnes", "bh @r n z");
result.add("burns", "bh @r n z");
result.add("burnsed", "bh @r n z d");
result.add("burnt", "bh @r n t");
result.add("burp", "bh @r p");
result.add("burr", "bh @r");
result.add("bursch", "bh @r S");
result.add("burse", "bh @r s");
result.add("burst", "bh @r s t");
result.add("bursts", "bh @r s t s");
result.add("burt", "bh @r t");
result.add("burtt", "bh @r t");
result.add("bus", "bh V s");
result.add("bus-\tboy", "bh V s\tb OI");
result.add("bus-\tboys", "bh V s\tb OI z");
result.add("bus-\tby", "bh V z\tb i:");
result.add("bus-\tch's", "bh U\tS V z");
result.add("bus-\tker", "bh V s\tk @r");
result.add("bus-\tkirk", "bh V s\tk @r k");
result.add("bus-\tload", "bh V s\tl @U d");
result.add("bus-\tloads", "bh V s\tl @U d z");
result.add("bus-\tser", "bh V\ts @r");
result.add("bus-\tses", "bh V\ts V z");
result.add("bus-\tsey", "bh V\ts i:");
result.add("bus-\tsing", "bh V\ts I N");
result.add("bus-\tt-\tling", "bh V\ts V\tl I N");
result.add("bus-\ttard", "bh V s\tt @r d");
result.add("bus-\tted", "bh V s\tt V d");
result.add("bus-\tter", "bh V s\tt @r");
result.add("bus-\tters", "bh V s\tt @r z");
result.add("bus-\tti", "bh V s\tt i:");
result.add("bus-\ttier", "bh V s\tt j @r");
result.add("bus-\tting", "bh V s\tt I N");
result.add("bus-\ttle", "bh V\ts V l");
result.add("bus-\tto", "bh V s\tt @U");
result.add("busch", "bh U S");
result.add("bused", "bh V s t");
result.add("bush", "bh U S");
result.add("bush-\tman", "bh U S\tm V n");
result.add("bush-\tmen", "bh U S\tm e n");
result.add("bush-\tnell", "bh U S\tn V l");
result.add("busi-\tnes-\tses", "bh I z\tn V\ts V z");
result.add("busi-\tnes-\ts's", "bh I z\tn V\ts V z");
result.add("busi-\tness", "bh I z\tn V s");
result.add("busi-\tness-\tlike", "bh I z\tn V s\tl aI k");
result.add("busi-\tness-\tman", "bh I z\tn V s\tm { n");
result.add("busi-\tness-\tman's", "bh I z\tn V s\tm { n z");
result.add("busi-\tness-\tmen", "bh I z\tn V s\tm e n");
result.add("busi-\tness-\tpeo-\tple", "bh I z\tn V s\tp i:\tp V l");
result.add("busi-\tness-\tper-\tson", "bh I z\tn V s\tp @r\ts V n");
result.add("busi-\tness-\two-\tman", "bh I z\tn V s\tw U\tm V n");
result.add("busi-\tness-\two-\tmen", "bh I z\tn V s\tw I\tm e n");
result.add("busk", "bh V s k");
result.add("buss", "bh V s");
result.add("bussed", "bh V s t");
result.add("bust", "bh V s t");
result.add("busts", "bh V s t s");
result.add("but", "bh V t");
result.add("but-\tche-\tring", "bh U\ttS @r\tI N");
result.add("but-\tche-\try", "bh U\ttS @r\ti:");
result.add("but-\tcher", "bh U\ttS @r");
result.add("but-\tchered", "bh U\ttS @r d");
result.add("but-\tchers", "bh U\ttS @r z");
result.add("but-\tcher's", "bh U\ttS @r z");
result.add("but-\tler", "bh V t\tl @r");
result.add("but-\tlers", "bh V t\tl @r z");
result.add("but-\tler's", "bh V t\tl @r z");
result.add("but-\tner", "bh V t\tn @r");
result.add("but-\tte-\try", "bh V\tt @r\ti:");
result.add("but-\tter", "bh V\tt @r");
result.add("but-\tter-\tball", "bh V\tt @r\tb O: l");
result.add("but-\tter-\tcup", "bh V\tt @r\tk V p");
result.add("but-\tter-\tcups", "bh V\tt @r\tk V p s");
result.add("but-\tter-\tfat", "bh V\tt @r\tf { t");
result.add("but-\tter-\tfield", "bh V\tt @r\tf i: l d");
result.add("but-\tter-\tflies", "bh V\tt @r f\tl aI z");
result.add("but-\tter-\tfly", "bh V\tt @r f\tl aI");
result.add("but-\tter-\tfly's", "bh V\tt @r f\tl aI z");
result.add("but-\tter-\tmilk", "bh V\tt @r\tm I l k");
result.add("but-\tter-\tscotch", "bh V\tt @r s\tk Q tS");
result.add("but-\tter-\tworth", "bh V\tt @r\tw @r T");
result.add("but-\ttered", "bh V\tt @r d");
result.add("but-\tters", "bh V\tt @r z");
result.add("but-\tting", "bh V\tt I N");
result.add("but-\ttock", "bh V\tt V k");
result.add("but-\ttocks", "bh V\tt V k s");
result.add("but-\tton", "bh V\tt V n");
result.add("but-\tton-\thole", "bh V\tt V n\th @U l");
result.add("but-\tton-\tholed", "bh V\tt V n\th @U l d");
result.add("but-\tton-\tholes", "bh V\tt V n\th @U l z");
result.add("but-\ttoned", "bh V\tt V n d");
result.add("but-\ttons", "bh V\tt V n z");
result.add("butch", "bh U tS");
result.add("bute", "bh j u: t");
result.add("buts", "bh V t s");
result.add("butt", "bh V t");
result.add("butt-\thead", "bh V t\th e d");
result.add("butt-\tres-\tses", "bh V t\tr V\ts V z");
result.add("butt-\tres-\tsing", "bh V t\tr V\ts I N");
result.add("butt-\tress", "bh V t\tr V s");
result.add("butt-\tressed", "bh V t\tr V s t");
result.add("butt-\trick", "bh V t\tr I k");
result.add("butte", "bh j u: t");
result.add("butts", "bh V t s");
result.add("bux-\tton", "bh V k\ts t V n");
result.add("buy", "bh aI");
result.add("buy-\tback", "bh aI\tb { k");
result.add("buy-\tbacks", "bh aI\tb { k s");
result.add("buy-\ting", "bh aI\tI N");
result.add("buy-\tout", "bh aI\taU t");
result.add("buy-\touts", "bh aI\taU t s");
result.add("buys", "bh aI z");
result.add("buz-\tzard", "bh V\tz @r d");
result.add("buz-\tzards", "bh V\tz @r d z");
result.add("buz-\tzard's", "bh V\tz @r d z");
result.add("buz-\tzell", "bh V\tz e l");
result.add("buz-\tzer", "bh V\tz @r");
result.add("buz-\tzes", "bh V\tz V z");
result.add("buz-\tzing", "bh V\tz I N");
result.add("buz-\tzy", "bh V\tz i:");
result.add("buzz", "bh V z");
result.add("buzz-\tword", "bh V z\tw @r d");
result.add("buzz-\twords", "bh V z\tw @r d z");
result.add("buzzed", "bh V z d");
result.add("by", "bh aI");
result.add("by-\tars", "bh aI\t@r z");
result.add("by-\tbee", "bh aI\tb i:");
result.add("by-\ters", "bh aI\t@r z");
result.add("by-\tfield", "bh aI\tf i: l d");
result.add("by-\tgone", "bh aI\tg O: n");
result.add("by-\tgones", "bh aI\tg O: n z");
result.add("by-\tland", "bh aI\tl V n d");
result.add("by-\tlaw", "bh aI\tl O:");
result.add("by-\tlaws", "bh aI\tl O: z");
result.add("by-\tler", "bh aI\tl @r");
result.add("by-\tline", "bh aI\tl aI n");
result.add("by-\tlines", "bh aI\tl i: n z");
result.add("by-\tnum", "bh I\tn V m");
result.add("by-\tpas-\tses", "bh aI\tp {\ts V z");
result.add("by-\tpas-\tsing", "bh aI\tp {\ts I N");
result.add("by-\tpass", "bh aI\tp { s");
result.add("by-\tpassed", "bh aI\tp { s t");
result.add("by-\tpro-\tduct", "bh aI p\tr Q\td V k t");
result.add("by-\tpro-\tducts", "bh aI p\tr O:\td V k t s");
result.add("by-\tram", "bh I@\tV m");
result.add("by-\trle", "bh aI\tr V l");
result.add("by-\trom", "bh aI\tr V m");
result.add("by-\tron", "bh aI\tr V n");
result.add("by-\tron's", "bh aI\tr V n z");
result.add("by-\tstan-\tder", "bh aI s\tt { n\td @r");
result.add("by-\tstan-\tders", "bh aI s\tt { n\td @r z");
result.add("by-\tway", "bh aI\tw eI");
result.add("by-\tways", "bh aI\tw eI z");
result.add("by-\tword", "bh aI\tw @r d");
result.add("by-\tzan-\tti-\tum", "bh V\tz { n\tt i:\tV m");
result.add("by-\tzan-\ttine", "bh I\tz V n\tt aI n");
result.add("byard", "bh j Q@ d");
result.add("bye", "bh aI");
result.add("bye-\tbye", "bh aI\tb aI");
result.add("bye-\tlo-\trus-\tsia", "bh e\tl @U\tr V\tS V");
result.add("byrd", "bh @r d");
result.add("byrd's", "bh @r d z");
result.add("byrn", "bh I@ n");
result.add("byrne", "bh @r n");
result.add("byrnes", "bh @r n z");
result.add("byrne's", "bh @r n z");
result.add("byte", "bh aI t");
result.add("bytes", "bh aI t s");
result.add("c", "s i:");
result.add("c-\t3", "s i: T\tr i:");
result.add("c-\tc", "s i:\ts i:");
result.add("c-\tc-\ts", "s i:\ts i:\te s");
result.add("c-\td", "s i:\td i:");
result.add("c-\td-\trom", "s i:\td i:\tr Q m");
result.add("c-\tds", "s i:\td i: z");
result.add("c-\te-\ta", "s i:\ti:\teI");
result.add("c-\tmos", "s i:\tm @U s");
result.add("c-\tn-\tn", "s i:\te\tn e n");
result.add("c.", "s i:");
result.add("ca", "kh V");
result.add("ca-\tb-\tler", "kh eI\tb V\tl @r");
result.add("ca-\tba", "kh Q\tb V");
result.add("ca-\tba-\tna", "kh V\tb {\tn V");
result.add("ca-\tba-\tnas", "kh V\tb {\tn V z");
result.add("ca-\tba-\tret", "kh {\tb @r\teI");
result.add("ca-\tbal", "kh V\tb Q l");
result.add("ca-\tbal-\tle-\tro", "kh {\tb V\tj e@\t@U");
result.add("ca-\tban", "kh eI\tb V n");
result.add("ca-\tbell", "kh Q\tb e l");
result.add("ca-\tber-\tnet", "kh {\tb @r\tn eI");
result.add("ca-\tber-\tnets", "kh {\tb @r\tn e t s");
result.add("ca-\tbi-\tnet", "kh {\tb I\tn V t");
result.add("ca-\tbi-\tnets", "kh {\tb I\tn V t s");
result.add("ca-\tbin", "kh {\tb I n");
result.add("ca-\tbin-\tda", "kh V\tb I n\td V");
result.add("ca-\tbins", "kh {\tb I n z");
result.add("ca-\tble", "kh eI\tb V l");
result.add("ca-\tble-\tgram", "kh eI\tb V l\tg r { m");
result.add("ca-\tble-\tvi-\tsion", "kh eI\tb V l\tv I\tZ V n");
result.add("ca-\tbled", "kh eI\tb V l d");
result.add("ca-\tbles", "kh eI\tb V l z");
result.add("ca-\tble's", "kh eI\tb V l z");
result.add("ca-\tbo-\ttage", "kh {\tb V\tt I dZ");
result.add("ca-\tboo-\tdle", "kh V\tb u:\td V l");
result.add("ca-\tboo-\tses", "kh V\tb u:\ts V z");
result.add("ca-\tboose", "kh V\tb u: s");
result.add("ca-\tbot", "kh {\tb V t");
result.add("ca-\tbot's", "kh {\tb V t s");
result.add("ca-\tca-\to", "kh V\tk eI\t@U");
result.add("ca-\tches", "kh {\tS V z");
result.add("ca-\tchet", "kh {\tS eI");
result.add("ca-\tcique", "kh V\ts i: k");
result.add("ca-\tco-\tpho-\tny", "kh {\tk Q\tf V\tn i:");
result.add("ca-\tda-\tver", "kh V\td {\tv @r");
result.add("ca-\tda-\tvers", "kh V\td {\tv @r z");
result.add("ca-\tdet", "kh V\td e t");
result.add("ca-\tdy", "kh eI\td i:");
result.add("ca-\tfe", "kh V\tf eI");
result.add("ca-\tfe-\tte-\tri-\ta", "kh {\tf V\tt I@\ti:\tV");
result.add("ca-\tfe-\tte-\tri-\tas", "kh {\tf V\tt I@\ti:\tV z");
result.add("ca-\tfes", "kh {\tf eI z");
result.add("ca-\tfi-\te-\tro", "kh {\tf i:\te@\t@U");
result.add("ca-\tges", "kh eI\tdZ V z");
result.add("ca-\tge's", "kh eI\tdZ V z");
result.add("ca-\tgey", "kh eI\tdZ i:");
result.add("ca-\tgle", "kh eI\tg V l");
result.add("ca-\than", "kh {\th V n");
result.add("ca-\thill", "kh eI\th I l");
result.add("ca-\thoot", "kh V\th u: t");
result.add("ca-\thoots", "kh V\th u: t s");
result.add("ca-\tjo-\tling", "kh V\tdZ @U\tl I N");
result.add("ca-\tjole", "kh V\tdZ @U l");
result.add("ca-\tjoled", "kh V\tdZ @U l d");
result.add("ca-\tjun", "kh eI\tdZ V n");
result.add("ca-\tjuns", "kh eI\tdZ V n z");
result.add("ca-\tla-\tba-\tsas", "kh {\tl V\tb Q\ts V s");
result.add("ca-\tla-\tbre-\tse", "kh Q\tl Q b\tr eI\tz i:");
result.add("ca-\tla-\tdi-\tums", "kh V\tl eI\td i:\tV m z");
result.add("ca-\tla-\than", "kh {\tl V\th { n");
result.add("ca-\tla-\tma-\tri", "kh Q\tl Q\tm Q@\ti:");
result.add("ca-\tla-\tman-\tder", "kh {\tl V\tm { n\td @r");
result.add("ca-\tla-\tmi-\tties", "kh V\tl {\tm V\tt i: z");
result.add("ca-\tla-\tmi-\ttous", "kh V\tl {\tm V\tt V s");
result.add("ca-\tla-\tmi-\tty", "kh V\tl {\tm V\tt i:");
result.add("ca-\tla-\tmine", "kh {\tl V\tm aI n");
result.add("ca-\tla-\tmine's", "kh {\tl V\tm aI n z");
result.add("ca-\tlab-\tri-\ta", "kh V\tl { b\tr i:\tV");
result.add("ca-\tlais", "kh V\tl eI");
result.add("ca-\tlan", "kh eI\tl V n");
result.add("ca-\tlan-\tdra", "kh V\tl { n\td r V");
result.add("ca-\tlan-\ttha", "kh V\tl { n\tT V");
result.add("ca-\tle-\tdo-\tni-\ta", "kh {\tl V\td @U\tn i:\tV");
result.add("ca-\tle-\tdo-\tni-\tan", "kh {\tl V\td @U\tn i:\tV n");
result.add("ca-\tleb", "kh eI\tl V b");
result.add("ca-\tlef", "kh {\tl I f");
result.add("ca-\tlen-\tdar", "kh {\tl V n\td @r");
result.add("ca-\tlen-\tdars", "kh {\tl V n\td @r z");
result.add("ca-\tley", "kh eI\tl i:");
result.add("ca-\tli", "kh Q\tl i:");
result.add("ca-\tli-\ta", "kh Q\tl i:\tV");
result.add("ca-\tli-\tber", "kh {\tl I\tb @r");
result.add("ca-\tli-\tbra-\tted", "kh {\tl I b\tr eI\tt I d");
result.add("ca-\tli-\tbra-\ttion", "kh {\tl I b\tr eI\tS V n");
result.add("ca-\tli-\tbrate", "kh {\tl I b\tr eI t");
result.add("ca-\tli-\tco", "kh {\tl I\tk @U");
result.add("ca-\tli-\tda", "kh Q\tl i:\td V");
result.add("ca-\tli-\tfor-\tnia", "kh {\tl I\tf O@ n\tj V");
result.add("ca-\tli-\tfor-\tnian", "kh {\tl I\tf O@ n\tj V n");
result.add("ca-\tli-\tfor-\tnians", "kh {\tl I\tf O@ n\tj V n z");
result.add("ca-\tli-\tfor-\tnian's", "kh {\tl I\tf O@ n\tj V n z");
result.add("ca-\tli-\tfor-\tnia's", "kh {\tl I\tf O@ n\tj V z");
result.add("ca-\tli-\tper", "kh {\tl I\tp @r");
result.add("ca-\tli-\tpers", "kh {\tl I\tp @r z");
result.add("ca-\tliph", "kh {\tl I f");
result.add("ca-\tlis-\tta", "kh V\tl I s\tt V");
result.add("ca-\tlis-\tthe-\tnic", "kh {\tl I s\tT e\tn I k");
result.add("ca-\tlis-\tthe-\tnics", "kh {\tl I s\tT e\tn I k s");
result.add("ca-\tlise", "kh Q\tl aI z");
result.add("ca-\tlite", "kh {\tl aI t");
result.add("ca-\tlix", "kh {\tl I k s");
result.add("ca-\tlo", "kh Q\tl @U");
result.add("ca-\tlo-\tric", "kh V\tl O@\tI k");
result.add("ca-\tlo-\trie", "kh {\tl @r\ti:");
result.add("ca-\tlo-\tries", "kh {\tl @r\ti: z");
result.add("ca-\tlor", "kh {\tl @r");
result.add("ca-\tlu-\tmet", "kh { l\tj V\tm e t");
result.add("ca-\tlum-\tny", "kh {\tl V m\tn i:");
result.add("ca-\tlyp-\tso", "kh V\tl I p\ts @U");
result.add("ca-\tlyp-\tsos", "kh V\tl I p\ts @U z");
result.add("ca-\tlyx", "kh {\tl I k s");
result.add("ca-\tma-\tcho", "kh V\tm Q\ttS @U");
result.add("ca-\tma-\tra", "kh Q\tm Q@\tV");
result.add("ca-\tma-\tra-\tde-\trie", "kh Q\tm @r\tQ\td @r\ti:");
result.add("ca-\tma-\tra-\tta", "kh Q\tm Q@\tQ\tt V");
result.add("ca-\tma-\tril-\tlo", "kh Q\tm Q@\tI\tl @U");
result.add("ca-\tman", "kh eI\tm V n");
result.add("ca-\tmar-\tgo", "kh Q\tm Q@\tg @U");
result.add("ca-\tme-\tlot", "kh {\tm V\tl Q t");
result.add("ca-\tme-\to", "kh {\tm i:\t@U");
result.add("ca-\tme-\tos", "kh {\tm i:\t@U z");
result.add("ca-\tme-\tra", "kh {\tm @r\tV");
result.add("ca-\tme-\tra-\tman", "kh {\tm @r\tV\tm V n");
result.add("ca-\tme-\tra-\tmen", "kh {\tm @r\tV\tm e n");
result.add("ca-\tme-\tras", "kh {\tm @r\tV z");
result.add("ca-\tme-\tron", "kh {\tm @r\tV n");
result.add("ca-\tme-\tron's", "kh {\tm @r\tV n z");
result.add("ca-\tme-\troon", "kh {\tm @r\tu: n");
result.add("ca-\tmels", "kh {\tm V l z");
result.add("ca-\tmel's", "kh {\tm V l z");
result.add("ca-\tmi-\tno", "kh V\tm i:\tn @U");
result.add("ca-\tmil-\tla", "kh V\tm I\tl V");
result.add("ca-\tmil-\tlo", "kh V\tm I\tl @U");
result.add("ca-\tmille", "kh V\tm i: l");
result.add("ca-\tmor-\tra", "kh V\tm O@\tV");
result.add("ca-\tmou-\tfla-\tging", "kh {\tm V f\tl Q\tZ I N");
result.add("ca-\tmou-\tflage", "kh {\tm V f\tl Q Z");
result.add("ca-\tmou-\tflaged", "kh {\tm V f\tl Q Z d");
result.add("ca-\tmus", "kh {\tm V s");
result.add("ca-\tna", "kh {\tn V");
result.add("ca-\tna-\tce", "kh Q\tn Q\ttS i:");
result.add("ca-\tna-\tda", "kh {\tn V\td V");
result.add("ca-\tna-\tda's", "kh {\tn V\td V z");
result.add("ca-\tna-\tdi-\tan", "kh V\tn eI\td i:\tV n");
result.add("ca-\tna-\tdi-\tans", "kh V\tn eI\td i:\tV n z");
result.add("ca-\tna-\tle", "kh Q\tn Q\tl i:");
result.add("ca-\tna-\tne-\ta", "kh {\tn V\tn i:\tV");
result.add("ca-\tna-\tries", "kh V\tn e@\ti: z");
result.add("ca-\tna-\try", "kh V\tn e@\ti:");
result.add("ca-\tna-\tve-\tral", "kh V\tn {\tv @r\tV l");
result.add("ca-\tnaa-\tnite", "kh eI\tn V\tn aI t");
result.add("ca-\tnaan", "kh eI\tn V n");
result.add("ca-\tnal", "kh V\tn { l");
result.add("ca-\tnales", "kh {\tn V l z");
result.add("ca-\tnals", "kh V\tn { l z");
result.add("ca-\tnal's", "kh V\tn { l z");
result.add("ca-\tnan-\tdai-\tgua", "kh {\tn V n\td eI g\tw V");
result.add("ca-\tnard", "kh V\tn Q@ d");
result.add("ca-\tnas-\tta", "kh V\tn { s\tt V");
result.add("ca-\tne-\tlo", "kh V\tn e\tl @U");
result.add("ca-\tne-\tva-\tri", "kh Q\tn e\tv Q@\ti:");
result.add("ca-\tni-\tster", "kh {\tn I s\tt @r");
result.add("ca-\tni-\tsters", "kh {\tn I s\tt @r z");
result.add("ca-\tnine", "kh eI\tn aI n");
result.add("ca-\tnines", "kh eI\tn aI n z");
result.add("ca-\tning", "kh eI\tn I N");
result.add("ca-\tnings", "kh eI\tn I N z");
result.add("ca-\tnion", "kh { n\tj V n");
result.add("ca-\tno-\tga", "kh V\tn @U\tg V");
result.add("ca-\tno-\tla", "kh V\tn @U\tl V");
result.add("ca-\tno-\tpy", "kh {\tn V\tp i:");
result.add("ca-\tno-\tva", "kh Q\tn @U\tv V");
result.add("ca-\tnoe", "kh V\tn u:");
result.add("ca-\tnoe-\ting", "kh V\tn u:\tI N");
result.add("ca-\tnoe-\tist", "kh V\tn u:\tV s t");
result.add("ca-\tnoed", "kh V\tn u: d");
result.add("ca-\tnoes", "kh V\tn u: z");
result.add("ca-\tnon", "kh {\tn V n");
result.add("ca-\tnons", "kh {\tn V n z");
result.add("ca-\tnon's", "kh {\tn V n z");
result.add("ca-\tpa-\tbi-\tli-\tties", "kh eI\tp V\tb I\tl V\tt i: z");
result.add("ca-\tpa-\tbi-\tli-\tty", "kh eI\tp V\tb I\tl V\tt i:");
result.add("ca-\tpa-\tble", "kh eI\tp V\tb V l");
result.add("ca-\tpa-\tci-\ttance", "kh V\tp {\ts V\tt V n s");
result.add("ca-\tpa-\tci-\tties", "kh V\tp {\ts V\tt i: z");
result.add("ca-\tpa-\tci-\ttor", "kh V\tp {\ts V\tt @r");
result.add("ca-\tpa-\tci-\ttors", "kh V\tp {\ts V\tt @r z");
result.add("ca-\tpa-\tci-\tty", "kh V\tp {\ts V\tt i:");
result.add("ca-\tpa-\tcious", "kh V\tp eI\tS V s");
result.add("ca-\tpek", "kh {\tp I k");
result.add("ca-\tpel", "kh eI\tp V l");
result.add("ca-\tpel-\tla", "kh V\tp e\tl V");
result.add("ca-\tpel-\tlo", "kh V\tp e\tl @U");
result.add("ca-\tper", "kh eI\tp @r");
result.add("ca-\tpers", "kh eI\tp @r z");
result.add("ca-\tpi-\tta", "kh {\tp I\tt V");
result.add("ca-\tpi-\tta-\tli-\tsm", "kh {\tp I\tt V\tl I\tz V m");
result.add("ca-\tpi-\tta-\tli-\tsm's", "kh {\tp I\tt V\tl I\tz V m z");
result.add("ca-\tpi-\tta-\tli-\tza-\ttion", "kh {\tp I\tt V\tl I\tz eI\tS V n");
result.add("ca-\tpi-\tta-\tli-\tza-\ttions", "kh {\tp I\tt V\tl I\tz eI\tS V n z");
result.add("ca-\tpi-\tta-\tli-\tzes", "kh {\tp I\tt V\tl aI\tz V z");
result.add("ca-\tpi-\tta-\tli-\tzing", "kh {\tp I\tt V\tl aI\tz I N");
result.add("ca-\tpi-\tta-\tlis-\ttic", "kh {\tp I\tt V\tl I s\tt I k");
result.add("ca-\tpi-\tta-\tlist", "kh {\tp I\tt V\tl I s t");
result.add("ca-\tpi-\tta-\tlists", "kh {\tp I\tt V\tl I s t s");
result.add("ca-\tpi-\tta-\tlize", "kh {\tp I\tt V\tl aI z");
result.add("ca-\tpi-\tta-\tlized", "kh {\tp I\tt V\tl aI z d");
result.add("ca-\tpi-\tta-\tno", "kh Q\tp i:\tt Q\tn @U");
result.add("ca-\tpi-\ttal", "kh {\tp I\tt V l");
result.add("ca-\tpi-\ttals", "kh {\tp I\tt V l z");
result.add("ca-\tpi-\ttal's", "kh {\tp I\tt V l z");
result.add("ca-\tpi-\ttan", "kh {\tp I\tt V n");
result.add("ca-\tpil-\tla-\tries", "kh {\tp I\tl e@\ti: z");
result.add("ca-\tpil-\tla-\try", "kh {\tp I\tl e@\ti:");
result.add("ca-\tpis-\ttra-\tno", "kh {\tp I s\tt r Q\tn @U");
result.add("ca-\tpo-\tten", "kh V\tp @U\tt V n");
result.add("ca-\tpote", "kh V\tp @U t");
result.add("ca-\tpote's", "kh V\tp @U t s");
result.add("ca-\tpu-\ta", "kh { p\tj u:\tV");
result.add("ca-\tpu-\tto", "kh Q\tp u:\tt @U");
result.add("ca-\tra", "kh e@\tV");
result.add("ca-\tra-\tca-\tra", "kh Q@\tV\tk Q@\tV");
result.add("ca-\tra-\tcas", "kh @r\tQ\tk V s");
result.add("ca-\tra-\tfate", "kh e@\tV\tf eI t");
result.add("ca-\tra-\tme-\tlize", "kh e@\tV\tm V\tl aI z");
result.add("ca-\tra-\tme-\tlized", "kh e@\tV\tm V\tl aI z d");
result.add("ca-\tra-\tmel", "kh e@\tV\tm V l");
result.add("ca-\tra-\tvan", "kh {\tr V\tv { n");
result.add("ca-\tra-\tvans", "kh {\tr V\tv { n z");
result.add("ca-\tra-\tvel", "kh e@\tV\tv e l");
result.add("ca-\tra-\tvelle", "kh e@\tV\tv e l");
result.add("ca-\tra-\tway", "kh {\tr V\tw eI");
result.add("ca-\tras", "kh Q@\tV z");
result.add("ca-\tra's", "kh e@\tV z");
result.add("ca-\trat", "kh e@\tV t");
result.add("ca-\trats", "kh e@\tV t s");
result.add("ca-\tre-\tna", "kh e@\ti:\tn V");
result.add("ca-\tree-\tning", "kh @r\ti:\tn I N");
result.add("ca-\tree-\tri-\tsm", "kh V\tr i:\tr V\tz V m");
result.add("ca-\tree-\trist", "kh @r\tI@\tI s t");
result.add("ca-\tree-\trists", "kh @r\tI@\tI s t s");
result.add("ca-\treen", "kh @r\ti: n");
result.add("ca-\treened", "kh @r\ti: n d");
result.add("ca-\treens", "kh @r\ti: n z");
result.add("ca-\treer", "kh @r\tI@");
result.add("ca-\treers", "kh @r\tI@ z");
result.add("ca-\trel", "kh Q@\te l");
result.add("ca-\trer", "kh e@\t@r");
result.add("ca-\tres-\tsing", "kh @r\te\ts I N");
result.add("ca-\tress", "kh @r\te s");
result.add("ca-\tresse", "kh Q@\te s");
result.add("ca-\trew", "kh {\tr u:");
result.add("ca-\trey", "kh e@\ti:");
result.add("ca-\trey's", "kh e@\ti: z");
result.add("ca-\tri-\tbou", "kh e@\tI\tb u:");
result.add("ca-\tri-\tca-\ttu-\trist", "kh e@\tI\tk V\ttS @r\tI s t");
result.add("ca-\tri-\tca-\tture", "kh e@\tI\tk V\ttS @r");
result.add("ca-\tri-\tca-\ttured", "kh @r\tI\tk V\ttS @r d");
result.add("ca-\tri-\tca-\ttures", "kh @r\tI\tk V\ttS @r z");
result.add("ca-\tri-\tne", "kh Q@\ti:\tn i:");
result.add("ca-\tri-\tnii", "kh e@\ti:\tn i:");
result.add("ca-\tri-\to-\tca", "kh e@\ti:\t@U\tk V");
result.add("ca-\tri-\tta", "kh Q@\ti:\tt V");
result.add("ca-\trib-\tbe-\tan", "kh @r\tI\tb i:\tV n");
result.add("ca-\tribe", "kh e@\ti: b");
result.add("ca-\trie", "kh e@\ti:");
result.add("ca-\trig-\tnan", "kh {\tr I g\tn V n");
result.add("ca-\tril-\tla", "kh Q@\tI\tl V");
result.add("ca-\tril-\tlon", "kh e@\tI\tl Q n");
result.add("ca-\trin", "kh {\tr I n");
result.add("ca-\tring", "kh e@\tI N");
result.add("ca-\tris-\tsa", "kh Q@\ti:\ts V");
result.add("ca-\tro", "kh Q@\t@U");
result.add("ca-\tro-\tlan", "kh e@\tV\tl { n");
result.add("ca-\tro-\tli-\tna", "kh e@\tV\tl aI\tn V");
result.add("ca-\tro-\tli-\tnas", "kh e@\tV\tl aI\tn V z");
result.add("ca-\tro-\tli-\tna's", "kh e@\tV\tl aI\tn V z");
result.add("ca-\tro-\tli-\tni-\tan", "kh e@\t@U\tl I\tn i:\tV n");
result.add("ca-\tro-\tli-\tni-\tans", "kh e@\tV\tl I\tn i:\tV n z");
result.add("ca-\tro-\tlin-\tgi-\tan", "kh e@\tV\tl I n\tdZ i:\tV n");
result.add("ca-\tro-\tline", "kh e@\tV\tl aI n");
result.add("ca-\tro-\tline's", "kh e@\tV\tl aI n z");
result.add("ca-\tro-\tlus", "kh e@\tV\tl V s");
result.add("ca-\tro-\tlyn", "kh e@\tV\tl V n");
result.add("ca-\tro-\tlyne", "kh e@\tV\tl aI n");
result.add("ca-\tro-\tsel-\tla", "kh Q@\t@U\ts e\tl V");
result.add("ca-\tro-\tta", "kh @r\t@U\tt V");
result.add("ca-\tro-\ttene", "kh e@\tV\tt i: n");
result.add("ca-\tro-\tthers", "kh {\tr V\tD @r z");
result.add("ca-\tro-\ttid", "kh @r\tQ\tt I d");
result.add("ca-\trob", "kh e@\tV b");
result.add("ca-\troche", "kh @r\t@U tS");
result.add("ca-\trol", "kh {\tr V l");
result.add("ca-\trole", "kh {\tr V l");
result.add("ca-\trols", "kh e@\tV l z");
result.add("ca-\trol's", "kh {\tr V l z");
result.add("ca-\tron", "kh Q@\tO: n");
result.add("ca-\trone", "kh @r\t@U n");
result.add("ca-\trou-\tsel", "kh e@\tV\ts e l");
result.add("ca-\trou-\tsing", "kh @r\taU\tz I N");
result.add("ca-\trouse", "kh @r\taU z");
result.add("ca-\tru-\tso", "kh @r\tu:\ts @U");
result.add("ca-\tru-\tthers", "kh @r\tV\tD @r z");
result.add("ca-\try", "kh e@\ti:");
result.add("ca-\tryl", "kh e@\tV l");
result.add("ca-\tryn", "kh Q@\tI n");
result.add("ca-\tsa", "kh Q\ts V");
result.add("ca-\tsa-\tdy", "kh V\ts Q\td i:");
result.add("ca-\tsa-\tno-\tva", "kh {\ts V\tn @U\tv V");
result.add("ca-\tsa-\tvant", "kh {\ts V\tv V n t");
result.add("ca-\tsab-\tlan-\tca", "kh {\ts V b\tl { N\tk V");
result.add("ca-\tsal", "kh Q\ts Q l");
result.add("ca-\tsals", "kh Q\ts Q l z");
result.add("ca-\tsas", "kh Q\ts V z");
result.add("ca-\tse-\tloads", "kh {\ts V\tl @U d z");
result.add("ca-\tsein", "kh eI\ts i: n");
result.add("ca-\tser-\tta", "kh Q\ts e@\tt V");
result.add("ca-\tses", "kh eI\ts V z");
result.add("ca-\tse's", "kh eI\ts V z");
result.add("ca-\tsey", "kh eI\ts i:");
result.add("ca-\tsey's", "kh eI\ts i: z");
result.add("ca-\tsher", "kh {\tS @r");
result.add("ca-\tshes", "kh {\tS V z");
result.add("ca-\tshew", "kh {\tS u:");
result.add("ca-\tshews", "kh {\tS u: z");
result.add("ca-\tshier", "kh {\tS I@");
result.add("ca-\tshiered", "kh {\tS I@ d");
result.add("ca-\tshiers", "kh {\tS I@ z");
result.add("ca-\tshier's", "kh {\tS I@ z");
result.add("ca-\tshing", "kh {\tS I N");
result.add("ca-\tshion", "kh Q\tS i: n");
result.add("ca-\tsi-\tmir", "kh {\ts I\tm i: r");
result.add("ca-\tsi-\tno", "kh V\ts i:\tn @U");
result.add("ca-\tsi-\tnos", "kh V\ts i:\tn @U z");
result.add("ca-\tsi-\tno's", "kh V\ts i:\tn @U z");
result.add("ca-\tsi-\to", "kh {\ts i:\t@U");
result.add("ca-\tsing", "kh eI\ts I N");
result.add("ca-\tsings", "kh eI\ts I N z");
result.add("ca-\tson", "kh {\ts V n");
result.add("ca-\tsu-\tal", "kh {\tZ V\tw V l");
result.add("ca-\tsu-\tal-\tly", "kh {\tZ V\tw V\tl i:");
result.add("ca-\tsu-\tal-\tness", "kh {\tZ V\tw V l\tn V s");
result.add("ca-\tsu-\tal-\tties", "kh {\tZ V\tw V l\tt i: z");
result.add("ca-\tsu-\tal-\tty", "kh {\tZ V\tw V l\tt i:");
result.add("ca-\tsu-\tals", "kh {\tZ V\tw V l z");
result.add("ca-\tta-\tcomb", "kh {\tt V\tk @U m");
result.add("ca-\tta-\tcombs", "kh {\tt V\tk @U m z");
result.add("ca-\tta-\tlan", "kh {\tt V\tl V n");
result.add("ca-\tta-\tli-\tna", "kh {\tt V\tl i:\tn V");
result.add("ca-\tta-\tlo-\tger", "kh {\tt V\tl O:\tg @r");
result.add("ca-\tta-\tlo-\tgers", "kh {\tt V\tl O:\tg @r z");
result.add("ca-\tta-\tlo-\tging", "kh {\tt V\tl Q\tg I N");
result.add("ca-\tta-\tlo-\tguing", "kh {\tt V\tl O:\tg I N");
result.add("ca-\tta-\tlo-\tnia", "kh {\tt V\tl @U n\tj V");
result.add("ca-\tta-\tlog", "kh {\tt V\tl O: g");
result.add("ca-\tta-\tloged", "kh {\tt V\tl O: g d");
result.add("ca-\tta-\tlogs", "kh {\tt V\tl Q g z");
result.add("ca-\tta-\tlogue", "kh {\tt V\tl O: g");
result.add("ca-\tta-\tlogued", "kh {\tt V\tl O: g d");
result.add("ca-\tta-\tlogues", "kh {\tt V\tl O: g z");
result.add("ca-\tta-\tly-\ttic", "kh {\tt V\tl I\tt I k");
result.add("ca-\tta-\tlyst", "kh {\tt V\tl V s t");
result.add("ca-\tta-\tlysts", "kh {\tt V\tl V s t s");
result.add("ca-\tta-\tlyst's", "kh {\tt V\tl V s t s");
result.add("ca-\tta-\tlyze", "kh {\tt V\tl aI z");
result.add("ca-\tta-\tlyzed", "kh {\tt V\tl aI z d");
result.add("ca-\tta-\tma-\tran", "kh {\tt V\tm @r\t{ n");
result.add("ca-\tta-\tma-\trans", "kh V\tt {\tm @r\tV n z");
result.add("ca-\tta-\tmount", "kh {\tt V\tm aU n t");
result.add("ca-\tta-\tnia", "kh V\tt eI n\tj V");
result.add("ca-\tta-\tno", "kh Q\tt Q\tn @U");
result.add("ca-\tta-\tpul-\tted", "kh {\tt V\tp V l\tt V d");
result.add("ca-\tta-\tpul-\tting", "kh {\tt V\tp V l\tt I N");
result.add("ca-\tta-\tpult", "kh {\tt V\tp V l t");
result.add("ca-\tta-\tpults", "kh {\tt V\tp V l t s");
result.add("ca-\tta-\tract", "kh {\tt @r\t{ k t s");
result.add("ca-\tta-\tracts", "kh {\tt @r\t{ k t s");
result.add("ca-\tta-\tto-\tnic", "kh {\tt V\tt Q\tn I k");
result.add("ca-\ttac-\tly-\tsm", "kh {\tt V k\tl I\ts V m");
result.add("ca-\ttac-\tlys-\tmic", "kh {\tt V k\tl I z\tm I k");
result.add("ca-\ttal-\tdo", "kh Q\tt Q l\td @U");
result.add("ca-\ttan-\tza-\tro", "kh Q\tt Q n\tz Q@\t@U");
result.add("ca-\ttas-\ttro-\tphe", "kh V\tt { s\tt r V\tf i:");
result.add("ca-\ttas-\ttro-\tphes", "kh V\tt { s\tt r V\tf i: z");
result.add("ca-\ttas-\ttro-\tphic", "kh {\tt V s\tt r Q\tf I k");
result.add("ca-\ttaw-\tba", "kh V\tt O:\tb V");
result.add("ca-\tte-\tchi-\tsm", "kh {\tt V\tk I\tz V m");
result.add("ca-\tte-\tgo-\tri-\tcal", "kh {\tt V\tg Q@\tI\tk V l");
result.add("ca-\tte-\tgo-\tri-\tza-\ttion", "kh {\tt V\tg @r\tV\tz eI\tS V n");
result.add("ca-\tte-\tgo-\tri-\tzes", "kh {\tt V\tg @r\taI\tz V z");
result.add("ca-\tte-\tgo-\tri-\tzing", "kh {\tt V\tg @r\taI\tz I N");
result.add("ca-\tte-\tgo-\trical-\tly", "kh {\tt V\tg Q@\tI k\tl i:");
result.add("ca-\tte-\tgo-\tries", "kh {\tt V\tg O@\ti: z");
result.add("ca-\tte-\tgo-\trize", "kh {\tt V\tg @r\taI z");
result.add("ca-\tte-\tgo-\trized", "kh {\tt V\tg @r\taI z d");
result.add("ca-\tte-\tgo-\try", "kh {\tt V\tg O@\ti:");
result.add("ca-\tte-\tna", "kh V\tt i:\tn V");
result.add("ca-\tte-\trer", "kh eI\tt @r\t@r");
result.add("ca-\tte-\trers", "kh eI\tt @r\t@r z");
result.add("ca-\tte-\tring", "kh eI\tt @r\tI N");
result.add("ca-\tter", "kh eI\tt @r");
result.add("ca-\tter-\tpil-\tlar", "kh {\tt V\tp I\tl @r");
result.add("ca-\tter-\tpil-\tlars", "kh {\tt V\tp I\tl @r z");
result.add("ca-\tter-\tpil-\tlar's", "kh {\tt @r\tp I\tl @r z");
result.add("ca-\ttered", "kh eI\tt @r d");
result.add("ca-\tters", "kh eI\tt @r z");
result.add("ca-\tthay", "kh {\tT eI");
result.add("ca-\tthe-\tdral", "kh V\tT i: d\tr V l");
result.add("ca-\tthe-\tdrals", "kh V\tT i: d\tr V l z");
result.add("ca-\tthe-\tri-\tna", "kh Q\tT @r\ti:\tn V");
result.add("ca-\tthe-\trine", "kh {\tT @r\tI n");
result.add("ca-\tthe-\tter", "kh {\tT V\tt @r");
result.add("ca-\tthe-\tters", "kh {\tT V\tt @r z");
result.add("ca-\tther", "kh {\tD @r");
result.add("ca-\tther-\twood", "kh {\tD @r\tw U d");
result.add("ca-\tther's", "kh {\tD @r z");
result.add("ca-\tthey", "kh {\tD i:");
result.add("ca-\tthie", "kh {\tT i:");
result.add("ca-\ttho-\tli-\tci-\tsm", "kh V\tT O:\tl V\ts I\tz V m");
result.add("ca-\tthode", "kh {\tT @U d");
result.add("ca-\tthodes", "kh {\tT @U d z");
result.add("ca-\tthy", "kh {\tT i:");
result.add("ca-\tthy's", "kh {\tT i: z");
result.add("ca-\tto", "kh eI\tt @U");
result.add("ca-\tton", "kh {\tt V n");
result.add("ca-\tva", "kh Q\tv V");
result.add("ca-\tva-\tlie-\tre", "kh Q\tv Q\tl I@\ti:");
result.add("ca-\tva-\tlie-\tri", "kh Q\tv Q\tl I@\ti:");
result.add("ca-\tva-\tlie-\trly", "kh {\tv V\tl I@\tl i:");
result.add("ca-\tva-\tlier", "kh {\tv V\tl I@");
result.add("ca-\tva-\tliers", "kh {\tv V\tl I@ z");
result.add("ca-\tva-\tnagh", "kh {\tv V\tn { g");
result.add("ca-\tva-\tnaugh", "kh {\tv V\tn O:");
result.add("ca-\tval-\tcade", "kh {\tv V l\tk eI d");
result.add("ca-\tval-\tla-\tro", "kh Q\tv Q\tl Q@\t@U");
result.add("ca-\tval-\try", "kh {\tv V l\tr i:");
result.add("ca-\tvan", "kh eI\tv V n");
result.add("ca-\tve-\tat", "kh eI\tv i:\t{ t");
result.add("ca-\tve-\tats", "kh eI\tv i:\t{ t s");
result.add("ca-\tvell", "kh V\tv e l");
result.add("ca-\tven-\tdish", "kh {\tv V n\td I S");
result.add("ca-\tver", "kh eI\tv @r");
result.add("ca-\tver-\tnous", "kh {\tv @r\tn V s");
result.add("ca-\tvern", "kh {\tv @r n");
result.add("ca-\tverns", "kh {\tv @r n z");
result.add("ca-\tvers", "kh eI\tv @r z");
result.add("ca-\tvey", "kh eI\tv i:");
result.add("ca-\tvi-\tar", "kh {\tv i:\tQ@");
result.add("ca-\tvi-\tness", "kh eI\tv i:\tn V s");
result.add("ca-\tvi-\tties", "kh {\tv I\tt i: z");
result.add("ca-\tvi-\tty", "kh {\tv I\tt i:");
result.add("ca-\tvin", "kh {\tv I n");
result.add("ca-\tving", "kh eI\tv I N");
result.add("ca-\tvor-\tting", "kh V\tv O@\tt I N");
result.add("ca-\tvort", "kh V\tv O@ t");
result.add("ca-\twood", "kh Q\tw U d");
result.add("ca-\tyu-\tses", "kh aI\tu:\ts V z");
result.add("cab", "kh { b");
result.add("cab-\tba-\tges", "kh {\tb V\tdZ V z");
result.add("cab-\tbage", "kh {\tb V dZ");
result.add("cab-\tbie", "kh {\tb i:");
result.add("cab-\tbies", "kh {\tb i: z");
result.add("cab-\tby", "kh {\tb i:");
result.add("cab-\tdri-\tver", "kh { b\td r aI\tv @r");
result.add("cab-\tdri-\tvers", "kh { b\td r aI\tv @r z");
result.add("cab-\tral", "kh { b\tr V l");
result.add("cab-\tre-\tra", "kh Q b\tr e@\tV");
result.add("cab-\tri-\tni", "kh V b\tr i:\tn i:");
result.add("cab-\tri-\tni's", "kh V b\tr i:\tn i: z");
result.add("cab-\tri-\to-\tlet", "kh { b\tr i:\t@U\tl eI");
result.add("cabe", "kh eI b");
result.add("cabi-\tnet-\try", "kh { b\tn V t\tr i:");
result.add("cabi-\tnet's", "kh { b\tn V t s");
result.add("cabs", "kh { b z");
result.add("cab's", "kh { b z");
result.add("cac", "kh { k");
result.add("cac-\tcia", "kh Q\ttS V");
result.add("cac-\tcia-\tto-\tre", "kh Q\ttS V\tt O@\ti:");
result.add("cac-\tk-\tling", "kh {\tk V\tl I N");
result.add("cac-\tkle", "kh {\tk V l");
result.add("cac-\tti", "kh { k\tt aI");
result.add("cac-\ttus", "kh { k\tt V s");
result.add("cache", "kh { S");
result.add("cad", "kh { d");
result.add("cad-\tbu-\try", "kh { d\tb e@\ti:");
result.add("cad-\tbu-\try's", "kh { d\tb e@\ti: z");
result.add("cad-\tdies", "kh {\td i: z");
result.add("cad-\twa-\tla-\tder", "kh { d\tw O:\tl V\td @r");
result.add("cad-\twa-\tla-\tder's", "kh { d\tw O:\tl V\td @r z");
result.add("cad-\twal-\tla-\tder", "kh { d\tw O:\tl V\td @r");
result.add("cad-\twell", "kh { d\tw e l");
result.add("cae-\tsa-\tre-\ta", "kh eI\ts @r\ti:\tV");
result.add("cae-\tsa-\trean", "kh eI\ts @r\ti: n");
result.add("cae-\tsa-\treans", "kh eI\ts @r\ti: n z");
result.add("cae-\tsar", "s i:\tz @r");
result.add("cae-\tsars", "s i:\tz @r z");
result.add("cae-\tsar's", "s i:\tz @r z");
result.add("cae-\tta-\tno", "kh V\tt Q\tn @U");
result.add("caen", "kh { n");
result.add("caen's", "kh { n z");
result.add("caf-\tfei-\tna-\tted", "kh {\tf V\tn eI\tt V d");
result.add("caf-\tfeine", "kh {\tf i: n");
result.add("caff-\trey", "kh { f\tr i:");
result.add("cag-\tli-\ta-\tri", "kh { g\tl i:\tQ@\ti:");
result.add("cag-\tney", "kh { g\tn i:");
result.add("cag-\tuas", "kh Q g\tw Q s");
result.add("cage", "kh eI dZ");
result.add("caged", "kh eI dZ d");
result.add("cahn", "kh { n");
result.add("cai", "kh aI");
result.add("cai-\tro", "kh aI\tr @U");
result.add("cai-\tro's", "kh aI\tr @U z");
result.add("cain", "kh eI n");
result.add("caine", "kh eI n");
result.add("caines", "kh eI n z");
result.add("cain's", "kh eI n z");
result.add("cairns", "kh e@ n z");
result.add("caisse", "kh eI s");
result.add("cait-\tlin", "kh eI t\tl I n");
result.add("cake", "kh eI k");
result.add("caked", "kh eI k t");
result.add("cakes", "kh eI k s");
result.add("cake's", "kh eI k s");
result.add("cal", "kh { l");
result.add("cal-\tbert", "kh { l\tb @r t");
result.add("cal-\tci-\tfied", "kh { l\ts I\tf aI d");
result.add("cal-\tci-\tfy", "kh { l\ts I\tf aI");
result.add("cal-\tci-\tum", "kh { l\ts i:\tV m");
result.add("cal-\tcite", "kh { l\ts aI t");
result.add("cal-\tcomp", "kh O: l\tk Q m p");
result.add("cal-\tcu-\tla-\tted", "kh { l\tk j V\tl eI\tt V d");
result.add("cal-\tcu-\tla-\tting", "kh { l\tk j V\tl eI\tt I N");
result.add("cal-\tcu-\tla-\ttion", "kh { l\tk j V\tl eI\tS V n");
result.add("cal-\tcu-\tla-\ttions", "kh { l\tk j V\tl eI\tS V n z");
result.add("cal-\tcu-\tla-\ttor", "kh { l\tk j V\tl eI\tt @r");
result.add("cal-\tcu-\tla-\ttors", "kh { l\tk j V\tl eI\tt @r z");
result.add("cal-\tcu-\tlate", "kh { l\tk j V\tl eI t");
result.add("cal-\tcu-\tlates", "kh { l\tk j V\tl eI t s");
result.add("cal-\tcu-\tlus", "kh { l\tk j V\tl V s");
result.add("cal-\tcut-\tta", "kh { l\tk V\tt V");
result.add("cal-\tde-\tra", "kh { l\td e@\tV");
result.add("cal-\tde-\tron", "kh O: l\td @r\tQ n");
result.add("cal-\tdei-\tra", "kh Q l\td e@\tV");
result.add("cal-\tder", "kh O: l\td @r");
result.add("cal-\tga-\try", "kh { l\tg @r\ti:");
result.add("cal-\tgon", "kh { l\tg O: n");
result.add("cal-\thoun", "kh { l\th u: n");
result.add("cal-\tkin", "kh { l\tk I n");
result.add("cal-\tkins", "kh { l\tk I n z");
result.add("cal-\tla", "kh {\tl V");
result.add("cal-\tla-\tble", "kh O:\tl V\tb V l");
result.add("cal-\tla-\tghan", "kh {\tl V\th { n");
result.add("cal-\tla-\than", "kh {\tl V\th { n");
result.add("cal-\tla-\than's", "kh {\tl V\th { n z");
result.add("cal-\tla-\tway", "kh {\tl V\tw eI");
result.add("cal-\tla-\tway's", "kh O:\tl V\tw eI z");
result.add("cal-\tlais", "kh V\tl eI");
result.add("cal-\tlan", "kh {\tl V n");
result.add("cal-\tlas", "kh {\tl V z");
result.add("cal-\tle-\try", "kh {\tl @r\ti:");
result.add("cal-\tlen-\tder", "kh V\tl e n\td @r");
result.add("cal-\tler", "kh O:\tl @r");
result.add("cal-\tlers", "kh O:\tl @r z");
result.add("cal-\tler's", "kh O:\tl @r z");
result.add("cal-\tley", "kh {\tl i:");
result.add("cal-\tli-\tgra-\tphic", "kh {\tl I g\tr {\tf I k");
result.add("cal-\tli-\tgra-\tphy", "kh V\tl I g\tr V\tf i:");
result.add("cal-\tli-\to-\tpe", "kh V\tl aI\tV\tp i:");
result.add("cal-\tli-\to-\tpes", "kh V\tl aI\tV\tp i: z");
result.add("cal-\tlie", "kh O:\tl i:");
result.add("cal-\tling", "kh O:\tl I N");
result.add("cal-\tlo-\tway", "kh {\tl @U\tw eI");
result.add("cal-\tlous", "kh {\tl V s");
result.add("cal-\tlous-\tly", "kh {\tl V s\tl i:");
result.add("cal-\tlous-\tness", "kh {\tl V s\tn V s");
result.add("cal-\tloused", "kh {\tl V s t");
result.add("cal-\tlow", "kh {\tl @U");
result.add("cal-\tlum", "kh {\tl V m");
result.add("cal-\tlus", "kh {\tl V s");
result.add("cal-\tly", "kh {\tl i:");
result.add("cal-\tmar", "kh { l\tm Q@");
result.add("cal-\tmer", "kh Q\tm @r");
result.add("cal-\tming", "kh Q\tm I N");
result.add("cal-\ttha", "kh { l\tD V");
result.add("cal-\tva-\tno", "kh Q l\tv Q\tn @U");
result.add("cal-\tva-\tries", "kh { l\tv @r\ti: z");
result.add("cal-\tva-\try", "kh { l\tv @r\ti:");
result.add("cal-\tvert", "kh { l\tv @r t");
result.add("cal-\tvi-\tna", "kh Q l\tv i:\tn V");
result.add("cal-\tvi-\tnist", "kh { l\tv I\tn I s t");
result.add("cal-\tvin", "kh { l\tv I n");
result.add("cal-\tving", "kh {\tv I N");
result.add("cal-\tvin's", "kh { l\tv I n z");
result.add("cal-\tvo", "kh Q l\tv @U");
result.add("cal-\tza-\tda", "kh Q l\tz Q\td V");
result.add("cald-\twell", "kh O: l\td w e l");
result.add("cald-\twell's", "kh O: l\td w e l z");
result.add("cale", "kh eI l");
result.add("calf", "kh { f");
result.add("calf's", "kh { f s");
result.add("calk", "kh O: k");
result.add("call", "kh O: l");
result.add("calle", "kh eI l");
result.add("called", "kh O: l d");
result.add("calles", "kh eI l z");
result.add("calls", "kh O: l z");
result.add("call's", "kh Q l z");
result.add("calm", "kh Q m");
result.add("calm-\tly", "kh Q m\tl i:");
result.add("calm-\tness", "kh Q m\tn V s");
result.add("calmed", "kh Q m d");
result.add("calms", "kh Q m z");
result.add("calves", "kh { v z");
result.add("cam", "kh { m");
result.add("cam-\tber", "kh { m\tb @r");
result.add("cam-\tmie", "kh {\tm i:");
result.add("cam-\tmy", "kh {\tm i:");
result.add("cam-\tpa", "kh { m\tp V");
result.add("cam-\tpa-\tna", "kh Q m\tp {\tn V");
result.add("cam-\tpa-\tnel-\tla", "kh { m\tp V\tn e\tl V");
result.add("cam-\tpaig-\tner", "kh { m\tp eI\tn @r");
result.add("cam-\tpaig-\tners", "kh { m\tp eI\tn @r z");
result.add("cam-\tpaig-\tning", "kh { m\tp eI\tn I N");
result.add("cam-\tpaign", "kh { m\tp eI n");
result.add("cam-\tpaigned", "kh { m\tp eI n d");
result.add("cam-\tpaigns", "kh { m\tp eI n z");
result.add("cam-\tpaign's", "kh { m\tp eI n z");
result.add("cam-\tpe-\tsi-\tnos", "kh { m\tp e\ts i:\tn @U s");
result.add("cam-\tper", "kh { m\tp @r");
result.add("cam-\tpers", "kh { m\tp @r z");
result.add("cam-\tpi", "kh { m\tp i:");
result.add("cam-\tpi-\ton", "kh { m\tp i:\tV n");
result.add("cam-\tping", "kh { m\tp I N");
result.add("cam-\tpo", "kh { m\tp @U");
result.add("cam-\tpos", "kh { m\tp @U z");
result.add("cam-\tpu-\tses", "kh { m\tp V\ts V z");
result.add("cam-\tpus", "kh { m\tp V s");
result.add("cam-\tpy", "kh { m\tp i:");
result.add("cam-\try", "kh { m\tr i:");
result.add("cam-\tshaft", "kh { m\tS { f t");
result.add("cam-\tshafts", "kh { m\tS { f t s");
result.add("came-\tra's", "kh { m\tr V z");
result.add("camm", "kh { m");
result.add("camp", "kh { m p");
result.add("camp-\tbell", "kh { m\tb V l");
result.add("camp-\tbell's", "kh { m\tb V l z");
result.add("camp-\tfi-\tre", "kh { m\tp f aI\t@r");
result.add("camp-\tfi-\tres", "kh { m\tp f aI\t@r z");
result.add("camp-\tground", "kh { m\tp g r aU n d");
result.add("camp-\tgrounds", "kh { m\tp g r aU n d z");
result.add("camp-\tsite", "kh { m\tp s aI t s");
result.add("camp-\tsites", "kh { m\tp s aI t s");
result.add("camp-\tton", "kh { m\tp t V n");
result.add("camped", "kh { m p t");
result.add("camps", "kh { m p s");
result.add("camp's", "kh { m p s");
result.add("cam's", "kh { m z");
result.add("can", "kh { n");
result.add("can-\tber-\tra", "kh { n\tb e@\tV");
result.add("can-\tby", "kh { n\tb i:");
result.add("can-\tcan", "kh { n\tk { n");
result.add("can-\tce-\tling", "kh { n\ts V\tl I N");
result.add("can-\tce-\trous", "kh { n\ts @r\tV s");
result.add("can-\tcel", "kh { n\ts V l");
result.add("can-\tcel-\tla-\ttion", "kh { n\ts V\tl eI\tS V n");
result.add("can-\tcel-\tla-\ttions", "kh { n\ts V\tl eI\tS V n z");
result.add("can-\tcel-\tling", "kh { n\ts V\tl I N");
result.add("can-\tceled", "kh { n\ts V l d");
result.add("can-\tcelled", "kh { n\ts V l d");
result.add("can-\tcels", "kh { n\ts V l z");
result.add("can-\tcer", "kh { n\ts @r");
result.add("can-\tcer-\tpho-\tbi-\ta", "kh { n\ts @r\tf @U\tb i:\tV");
result.add("can-\tcers", "kh { n\ts @r z");
result.add("can-\tcer's", "kh { n\ts @r z");
result.add("can-\tcun", "kh { N\tk V n");
result.add("can-\td-\tler", "kh { n\td V\tl @r");
result.add("can-\tdace", "kh { n\td V s");
result.add("can-\tde-\tla", "kh { n\td e\tl V");
result.add("can-\tde-\tlab-\tra", "kh { n\td V\tl Q b\tr V");
result.add("can-\tdee", "kh { n\td i:");
result.add("can-\tdi-\ta", "kh { n\td i:\tV");
result.add("can-\tdi-\tce's", "kh { n\td I\ts V z");
result.add("can-\tdi-\tda", "kh { n\td I\td V");
result.add("can-\tdi-\tda-\tcies", "kh { n\td I\td V\ts i: z");
result.add("can-\tdi-\tda-\tcy", "kh { n\td I\td V\ts i:");
result.add("can-\tdi-\tdate", "kh { n\td I\td eI t");
result.add("can-\tdi-\tdates", "kh { n\td I\td eI t s");
result.add("can-\tdi-\tdate's", "kh { n\td I\td eI t s");
result.add("can-\tdi-\tdly", "kh { n\td I d\tl i:");
result.add("can-\tdice", "kh { n\td I s");
result.add("can-\tdid", "kh { n\td I d");
result.add("can-\tdie", "kh { n\td i:");
result.add("can-\tdied", "kh { n\td i: d");
result.add("can-\tdies", "kh { n\td i: z");
result.add("can-\tdle", "kh { n\td V l");
result.add("can-\tdle-\tlight", "kh { n\td V l\tl aI t");
result.add("can-\tdle-\tma-\tker", "kh { n\td V l\tm eI\tk @r");
result.add("can-\tdle-\tstick", "kh { n\td V l\ts t I k");
result.add("can-\tdle-\tsticks", "kh { n\td V l\ts t I k s");
result.add("can-\tdles", "kh { n\td V l z");
result.add("can-\tdor", "kh { n\td @r");
result.add("can-\tdy", "kh { n\td i:");
result.add("can-\tdy's", "kh { n\td i: z");
result.add("can-\tfield", "kh { n\tf i: l d");
result.add("can-\tham", "kh { n\th V m");
result.add("can-\tker", "kh { N\tk @r");
result.add("can-\tkers", "kh { N\tk @r z");
result.add("can-\tna-\tbis", "kh {\tn V\tb V s");
result.add("can-\tne-\tries", "kh {\tn @r\ti: z");
result.add("can-\tne-\try", "kh {\tn @r\ti:");
result.add("can-\tnel-\tton", "kh {\tn V l\tt V n");
result.add("can-\tnell", "kh {\tn V l");
result.add("can-\tner", "kh {\tn @r");
result.add("can-\tni-\tba-\tli-\tsm", "kh {\tn I\tb V\tl I\tz V m");
result.add("can-\tni-\tba-\tli-\tza-\ttion", "kh {\tn I\tb V\tl I\tz eI\tS V n");
result.add("can-\tni-\tba-\tli-\tzing", "kh {\tn I\tb V\tl aI\tz I N");
result.add("can-\tni-\tba-\tlize", "kh {\tn I\tb V\tl aI z");
result.add("can-\tni-\tbal", "kh {\tn I\tb V l");
result.add("can-\tni-\tbals", "kh {\tn I\tb V l z");
result.add("can-\tning", "kh {\tn I N");
result.add("can-\tnis-\tter", "kh {\tn I s\tt @r");
result.add("can-\tnis-\tters", "kh {\tn I s\tt @r z");
result.add("can-\tniz-\tza-\tro", "kh Q\tn i: t\ts Q@\t@U");
result.add("can-\tnon", "kh {\tn V n");
result.add("can-\tnon-\tball", "kh {\tn V n\tb O: l");
result.add("can-\tnons", "kh {\tn V n z");
result.add("can-\tnon's", "kh {\tn V n z");
result.add("can-\tnons-\tburg", "kh {\tn V n\tz b @r g");
result.add("can-\tnot", "kh {\tn Q t");
result.add("can-\tny", "kh {\tn i:");
result.add("can-\tso", "kh { n\ts @U");
result.add("can-\tta-\tloupe", "kh { n\tt V\tl @U p");
result.add("can-\tta-\tloupes", "kh { n\tt V\tl @U p s");
result.add("can-\tta-\tra", "kh Q n\tt Q@\tV");
result.add("can-\tta-\tta", "kh { n\tt Q\tt V");
result.add("can-\ttan-\tke-\trous", "kh { n\tt { N\tk @r\tV s");
result.add("can-\tteen", "kh { n\tt i: n");
result.add("can-\tteens", "kh { n\tt i: n z");
result.add("can-\ttel", "kh { n\tt e l");
result.add("can-\tter", "kh { n\tt @r");
result.add("can-\tter-\tbu-\try", "kh { n\tt @r\tb e@\ti:");
result.add("can-\tter-\tbu-\try's", "kh { n\tt @r\tb e@\ti: z");
result.add("can-\tti-\tna", "kh { n\tt i:\tn V");
result.add("can-\ttle", "kh { n\tt V l");
result.add("can-\tto", "kh { n\tt @U");
result.add("can-\tto-\tnal", "kh { n\tt V\tn V l");
result.add("can-\tto-\tne", "kh Q n\tt @U\tn i:");
result.add("can-\tto-\tnese", "kh { n\tt V\tn i: z");
result.add("can-\tton", "kh { n\tt V n");
result.add("can-\ttons", "kh { n\tt V n z");
result.add("can-\ttor", "kh { n\tt @r");
result.add("can-\ttor's", "kh { n\tt @r z");
result.add("can-\ttu", "kh { n\tt u:");
result.add("can-\tty", "kh { n\tt i:");
result.add("can-\tva-\tses", "kh { n\tv V\ts V z");
result.add("can-\tvas", "kh { n\tv V s");
result.add("can-\tvas-\tsers", "kh { n\tv V\ts @r z");
result.add("can-\tvas-\tses", "kh { n\tv V\ts V z");
result.add("can-\tvas-\tsing", "kh { n\tv V\ts I N");
result.add("can-\tvass", "kh { n\tv V s");
result.add("can-\tvassed", "kh { n\tv V s t");
result.add("can-\tyon", "kh { n\tj V n");
result.add("can-\tyons", "kh { n\tj V n z");
result.add("can-\tyon's", "kh { n\tj V n z");
result.add("cane", "kh eI n");
result.add("caned", "kh eI n d");
result.add("canes", "kh eI n z");
result.add("cann", "kh { n");
result.add("canned", "kh { n d");
result.add("cannes", "kh { n z");
result.add("cans", "kh { n z");
result.add("can's", "kh { n z");
result.add("cant", "kh { n t");
result.add("can't", "kh { n t");
result.add("cant-\tlon", "kh { n\tt l V n");
result.add("cant-\trall", "kh { n\tt r V l");
result.add("cant-\trell", "kh { n\tt r e l");
result.add("cap", "kh { p");
result.add("cap-\tpa", "kh {\tp V");
result.add("cap-\tpel-\tla", "kh Q\tp e\tl V");
result.add("cap-\tpel-\tlet-\tti", "kh Q\tp e\tl e\tt i:");
result.add("cap-\tpel-\tlo", "kh Q\tp e\tl @U");
result.add("cap-\tper", "kh {\tp @r");
result.add("cap-\tping", "kh {\tp I N");
result.add("cap-\tpuc-\tci-\tno", "kh {\tp u:\ttS i:\tn @U");
result.add("cap-\tpy", "kh {\tp i:");
result.add("cap-\tra", "kh { p\tr V");
result.add("cap-\tri", "kh { p\tr i:");
result.add("cap-\tri-\tcious", "kh V p\tr I\tS V s");
result.add("cap-\tri-\tcious-\tly", "kh V p\tr I\tS V s\tl i:");
result.add("cap-\tri-\tcorn", "kh { p\tr I\tk O@ n");
result.add("cap-\trice", "kh V p\tr i: s");
result.add("cap-\tri's", "kh { p\tr i: z");
result.add("cap-\tron", "kh { p\tr V n");
result.add("cap-\tsai-\tcin", "kh { p\ts eI\ts I n");
result.add("cap-\tshaw", "kh { p\tS O:");
result.add("cap-\tsize", "kh { p\ts aI z");
result.add("cap-\tsized", "kh { p\ts aI z d");
result.add("cap-\tsule", "kh { p\ts V l");
result.add("cap-\tsules", "kh { p\ts V l z");
result.add("cap-\ttain", "kh { p\tt @ n");
result.add("cap-\ttains", "kh { p\tt @ n z");
result.add("cap-\ttain's", "kh { p\tt @ n z");
result.add("cap-\tti-\tva-\tted", "kh { p\tt I\tv eI\tt I d");
result.add("cap-\tti-\tva-\tting", "kh { p\tt I\tv eI\tt I N");
result.add("cap-\tti-\tvate", "kh { p\tt I\tv eI t");
result.add("cap-\tti-\tvi-\tty", "kh { p\tt I\tv V\tt i:");
result.add("cap-\ttion", "kh { p\tS V n");
result.add("cap-\ttion-\ting", "kh { p\tS V\tn I N");
result.add("cap-\ttioned", "kh { p\tS V n d");
result.add("cap-\ttions", "kh { p\tS V n z");
result.add("cap-\ttive", "kh { p\tt I v");
result.add("cap-\ttives", "kh { p\tt I v z");
result.add("cap-\ttor", "kh { p\tt @r");
result.add("cap-\ttors", "kh { p\tt @r z");
result.add("cap-\ttur-\ting", "kh { p\ttS @r\tI N");
result.add("cap-\tture", "kh { p\ttS @r");
result.add("cap-\ttured", "kh { p\ttS @r d");
result.add("cap-\ttures", "kh { p\ttS @r z");
result.add("cap-\twell", "kh { p\tw e l");
result.add("cape", "kh eI p");
result.add("cape-\ttown", "kh eI p\tt aU n");
result.add("caped", "kh eI p t");
result.add("capes", "kh eI p s");
result.add("capp", "kh { p");
result.add("capped", "kh { p t");
result.add("capps", "kh { p s");
result.add("caps", "kh { p s");
result.add("cap's", "kh { p s");
result.add("caps-\ttan", "kh { p\ts t V n");
result.add("caps-\ttone", "kh { p\ts t @U n");
result.add("car", "kh Q@");
result.add("car-\tber-\try", "kh Q@\tb e@\ti:");
result.add("car-\tber-\try's", "kh Q@\tb e@\ti: z");
result.add("car-\tbide", "kh Q@\tb aI d");
result.add("car-\tbide's", "kh Q@\tb aI d z");
result.add("car-\tbin", "kh Q@\tb I n");
result.add("car-\tbine", "kh Q@\tb aI n");
result.add("car-\tbo", "kh Q@\tb @U");
result.add("car-\tbo-\thyd-\trate", "kh Q@\tb @U\th aI d\tr eI t");
result.add("car-\tbo-\thyd-\trates", "kh Q@\tb @U\th aI d\tr eI t s");
result.add("car-\tbo-\tna-\tra", "kh Q@\tb @U\tn Q@\tV");
result.add("car-\tbo-\tna-\tro", "kh Q@\tb @U\tn Q@\t@U");
result.add("car-\tbo-\tna-\tted", "kh Q@\tb V\tn eI\tt V d");
result.add("car-\tbo-\tnate", "kh Q@\tb V\tn eI t");
result.add("car-\tbo-\tnates", "kh Q@\tb V\tn eI t s");
result.add("car-\tbo-\tni", "kh Q@\tb @U\tn i:");
result.add("car-\tbo-\tni-\tfe-\trous", "kh Q@\tb V\tn I\tf @r\tV s");
result.add("car-\tbo-\tnize", "kh Q@\tb V\tn aI z");
result.add("car-\tbo-\tnized", "kh Q@\tb V\tn aI z d");
result.add("car-\tbo-\trun-\tdum", "kh Q@\tb @r\tV n\td V m");
result.add("car-\tbon", "kh Q@\tb V n");
result.add("car-\tbon-\tdale", "kh Q@\tb V n\td eI l");
result.add("car-\tbone", "kh Q@\tb @U n");
result.add("car-\tbons", "kh Q@\tb V n z");
result.add("car-\tboy", "kh Q@\tb OI");
result.add("car-\tbu-\tre-\tted", "kh Q@ b\tj @r\te\tt V d");
result.add("car-\tbu-\tre-\ttion", "kh Q@ b\tj @r\ti:\tS V n");
result.add("car-\tbu-\tre-\ttor", "kh Q@\tb @r\teI\tt @r");
result.add("car-\tbu-\tre-\ttors", "kh Q@\tb @r\teI\tt @r z");
result.add("car-\tby", "kh Q@\tb i:");
result.add("car-\tcas-\tses", "kh Q@\tk V\ts V z");
result.add("car-\tcass", "kh Q@\tk V s");
result.add("car-\tci-\tno-\tge-\tnic", "kh Q@\ts I\tn @U\tdZ e\tn I k");
result.add("car-\tci-\tno-\tgen", "kh Q@\ts I\tn V\tdZ V n");
result.add("car-\tci-\tno-\tgens", "kh Q@\ts I\tn V\tdZ V n z");
result.add("car-\tci-\tno-\tma", "kh Q@\ts I\tn @U\tm V");
result.add("car-\tde-\tna-\ts's", "kh Q@\td i:\tn V\ts V z");
result.add("car-\tde-\tnas", "kh Q@\td i:\tn V s");
result.add("car-\tded", "kh Q@\td V d");
result.add("car-\tder", "kh Q@\td @r");
result.add("car-\tdi-\ta", "kh Q@\td i:\tV");
result.add("car-\tdi-\tac", "kh Q@\td i:\t{ k");
result.add("car-\tdi-\tgan", "kh Q@\td I\tg V n");
result.add("car-\tdi-\tgans", "kh Q@\td I\tg V n z");
result.add("car-\tdi-\tnal", "kh Q@\td I\tn V l");
result.add("car-\tdi-\tnals", "kh Q@\td I\tn V l z");
result.add("car-\tdi-\tnal's", "kh Q@\td I\tn V l z");
result.add("car-\tdi-\to-\tlo-\tgist", "kh Q@\td i:\tQ\tl V\tdZ V s t");
result.add("car-\tdi-\to-\tlo-\tgists", "kh Q@\td i:\tQ\tl V\tdZ V s t s");
result.add("car-\tdi-\to-\tlo-\tgy", "kh Q@\td i:\tQ\tl V\tdZ i:");
result.add("car-\tdi-\to-\tpul-\tmo-\tna-\try", "kh Q@\td i:\t@U\tp U l\tm V\tn e@\ti:");
result.add("car-\tdi-\to-\tvas-\tcu-\tlar", "kh Q@\td i:\t@U\tv { s\tk j V\tl @r");
result.add("car-\tdi-\tzem", "kh Q@\td I\tz e m");
result.add("car-\tdiff", "kh Q@\td I f");
result.add("car-\tdin", "kh Q@\td I n");
result.add("car-\tdis", "kh Q@\td I s");
result.add("car-\tdo-\tna", "kh Q@\td @U\tn V");
result.add("car-\tdo-\tzo", "kh Q@\td @U\tz @U");
result.add("car-\tdon", "kh Q@\td O: n");
result.add("car-\tdoon", "kh Q@\td u: n");
result.add("car-\tduc-\tci", "kh Q@\td u:\ttS i:");
result.add("car-\tdy", "kh Q@\td i:");
result.add("car-\tgill", "kh Q@\tg I l");
result.add("car-\tgo", "kh Q@\tg @U");
result.add("car-\tgoes", "kh Q@\tg @U z");
result.add("car-\tgos", "kh Q@\tg @U z");
result.add("car-\tgo's", "kh Q@\tg @U z");
result.add("car-\thart", "kh Q@\th Q@ t");
result.add("car-\tjac-\tker", "kh Q@\tdZ {\tk @r");
result.add("car-\tjac-\tkers", "kh Q@\tdZ {\tk @r z");
result.add("car-\tjac-\tking", "kh Q@\tdZ {\tk I N");
result.add("car-\tjac-\tkings", "kh Q@\tdZ {\tk I N z");
result.add("car-\tjack", "kh Q@\tdZ { k");
result.add("car-\tjacked", "kh Q@\tdZ { k t");
result.add("car-\tjacks", "kh Q@\tdZ { k s");
result.add("car-\tla", "kh Q@\tl V");
result.add("car-\tland", "kh Q@\tl V n d");
result.add("car-\tla's", "kh Q@\tl V z");
result.add("car-\tle", "kh Q@\tV l");
result.add("car-\tleen", "kh Q@\tl i: n");
result.add("car-\tlen", "kh Q@\tl V n");
result.add("car-\tlene", "kh Q@\tl i: n");
result.add("car-\tley", "kh Q@\tl i:");
result.add("car-\tli", "kh Q@\tl i:");
result.add("car-\tli-\tni", "kh Q@\tl i:\tn i:");
result.add("car-\tli-\tno", "kh Q@\tl i:\tn @U");
result.add("car-\tli-\tta", "kh Q@\tl i:\tt V");
result.add("car-\tlile", "kh Q@\tl aI l");
result.add("car-\tlin", "kh Q@\tl I n");
result.add("car-\tling", "kh Q@\tl I N");
result.add("car-\tling's", "kh Q@\tl I N z");
result.add("car-\tlin's", "kh Q@\tl I n z");
result.add("car-\tlisle", "kh Q@\tl aI l");
result.add("car-\tlo", "kh Q@\tl @U");
result.add("car-\tloa-\tding", "kh Q@\tl @U\td I N");
result.add("car-\tloa-\tdings", "kh Q@\tl @U\td I N z");
result.add("car-\tload", "kh Q@\tl @U d");
result.add("car-\tloads", "kh Q@\tl @U d z");
result.add("car-\tlock", "kh Q@\tl Q k");
result.add("car-\tlos", "kh Q@\tl @U s");
result.add("car-\tlot-\tta", "kh Q@\tl O:\tt V");
result.add("car-\tlow", "kh Q@\tl @U");
result.add("car-\tly", "kh Q@\tl i:");
result.add("car-\tlyle", "kh Q@\tl aI l");
result.add("car-\tlyle's", "kh Q@\tl aI l z");
result.add("car-\tma", "kh Q@\tm V");
result.add("car-\tma-\tker", "kh Q@\tm eI\tk @r");
result.add("car-\tma-\tkers", "kh Q@\tm eI\tk @r z");
result.add("car-\tman", "kh Q@\tm V n");
result.add("car-\tme-\tla", "kh Q@\tm e\tl V");
result.add("car-\tme-\tli-\tta", "kh Q@\tm V\tl i:\tt V");
result.add("car-\tme-\tlite", "kh Q@\tm V\tl aI t");
result.add("car-\tme-\tlo", "kh Q@\tm e\tl @U");
result.add("car-\tmel", "kh Q@\tm e l");
result.add("car-\tmen", "kh Q@\tm V n");
result.add("car-\tmi-\tchael", "kh Q@\tm aI\tk V l");
result.add("car-\tmi-\tta", "kh Q@\tm i:\tt V");
result.add("car-\tmine", "kh Q@\tm aI n");
result.add("car-\tmon", "kh Q@\tm V n");
result.add("car-\tna-\than", "kh Q@\tn V\th { n");
result.add("car-\tna-\ttion", "kh Q@\tn eI\tS V n");
result.add("car-\tna-\ttions", "kh Q@\tn eI\tS V n z");
result.add("car-\tnage", "kh Q@\tn I dZ");
result.add("car-\tnal", "kh Q@\tn V l");
result.add("car-\tnau-\tba", "kh Q@\tn O:\tb V");
result.add("car-\tne-\tgie", "kh Q@\tn V\tg i:");
result.add("car-\tne-\tgie's", "kh Q@\tn V\tg i: z");
result.add("car-\tney", "kh Q@\tn i:");
result.add("car-\tni-\tval", "kh Q@\tn I\tv V l");
result.add("car-\tni-\tvals", "kh Q@\tn I\tv V l z");
result.add("car-\tni-\tval's", "kh Q@\tn I\tv V l z");
result.add("car-\tni-\tvo-\trous", "kh Q@\tn I\tv @r\tV s");
result.add("car-\tni-\tvore", "kh Q@\tn I\tv O@");
result.add("car-\tni-\tvores", "kh Q@\tn I\tv O@ z");
result.add("car-\tpal", "kh Q@\tp V l");
result.add("car-\tpet", "kh Q@\tp V t");
result.add("car-\tpool", "kh Q@\tp u: l");
result.add("car-\tport", "kh Q@\tp O@ t");
result.add("car-\tports", "kh Q@\tp O@ t s");
result.add("car-\tra", "kh Q@\tV");
result.add("car-\tra-\tra", "kh Q@\tQ@\tV");
result.add("car-\tra-\tway", "kh {\tr V\tw eI");
result.add("car-\tran-\tza", "kh Q@\tQ n\tz V");
result.add("car-\tre-\tras", "kh Q@\te@\tQ z");
result.add("car-\tre-\tre", "kh Q@\te@\teI");
result.add("car-\trel", "kh {\tr V l");
result.add("car-\trell", "kh Q@\teI l");
result.add("car-\tret-\tta", "kh Q@\te\tt V");
result.add("car-\tri-\ter", "kh {\tr i:\t@r");
result.add("car-\tri-\ters", "kh {\tr i:\t@r z");
result.add("car-\tri-\ter's", "kh {\tr i:\t@r z");
result.add("car-\tri-\ton", "kh e@\ti:\tV n");
result.add("car-\tria-\tges", "kh {\tr I\tdZ V z");
result.add("car-\triage", "kh {\tr I dZ");
result.add("car-\trick", "kh e@\tI k");
result.add("car-\trie", "kh e@\ti:");
result.add("car-\trie-\tre", "kh Q@\tI@\ti:");
result.add("car-\tried", "kh {\tr i: d");
result.add("car-\tries", "kh {\tr i: z");
result.add("car-\tril-\tlo", "kh @r\tI\tl @U");
result.add("car-\tring-\tton", "kh e@\tI N\tt V n");
result.add("car-\tring-\tton's", "kh e@\tI N\tt V n z");
result.add("car-\tro-\tthers", "kh {\tr V\tD @r z");
result.add("car-\trol", "kh {\tr V l");
result.add("car-\troll", "kh {\tr V l");
result.add("car-\troll-\tton", "kh e@\tV l\tt V n");
result.add("car-\troll's", "kh {\tr V l z");
result.add("car-\tron", "kh {\tr V n");
result.add("car-\trot", "kh {\tr V t");
result.add("car-\trots", "kh {\tr V t s");
result.add("car-\trou-\tsel", "kh e@\tV\ts e l");
result.add("car-\trow", "kh {\tr @U");
result.add("car-\troz-\tza", "kh Q@\t@U\tz V");
result.add("car-\tru-\tthers", "kh @r\tV\tD @r z");
result.add("car-\try", "kh {\tr i:");
result.add("car-\try-\tfor-\tward", "kh e@\ti:\tf O@\tw @r d");
result.add("car-\try-\tfor-\twards", "kh e@\ti:\tf O@\tw @r d z");
result.add("car-\try-\ting", "kh {\tr i:\tI N");
result.add("car-\tryo-\tver", "kh e@\tj @U\tv @r");
result.add("car-\tsey", "kh Q@\ts i:");
result.add("car-\tsick", "kh Q@\ts I k");
result.add("car-\tson", "kh Q@\ts V n");
result.add("car-\tson's", "kh Q@\ts V n z");
result.add("car-\tta", "kh Q@\tt V");
result.add("car-\tta-\tge-\tna", "kh Q@\tt V\tdZ i:\tn V");
result.add("car-\tte-\tret", "kh Q@\tt @r\te t");
result.add("car-\tte-\tret's", "kh Q@\tt @r\te t s");
result.add("car-\tted", "kh Q@\tt V d");
result.add("car-\ttel", "kh Q@\tt e l");
result.add("car-\ttels", "kh Q@\tt e l z");
result.add("car-\ttel's", "kh Q@\tt e l z");
result.add("car-\tter", "kh Q@\tt @r");
result.add("car-\tters", "kh Q@\tt @r z");
result.add("car-\tter's", "kh Q@\tt @r z");
result.add("car-\tters-\tville", "kh Q@\tt @r z\tv I l");
result.add("car-\ttha-\tgi-\tni-\tan", "kh Q@\tT V\tdZ I\tn i:\tV n");
result.add("car-\tthage", "kh Q@\tT V dZ");
result.add("car-\tti-\ter", "kh Q@\tt i:\t@r");
result.add("car-\tti-\tlage", "kh Q@\tt I\tl V dZ");
result.add("car-\tting", "kh Q@\tt I N");
result.add("car-\tton", "kh Q@\tt V n");
result.add("car-\ttons", "kh Q@\tt V n z");
result.add("car-\ttoo-\tning", "kh Q@\tt u:\tn I N");
result.add("car-\ttoo-\tnist", "kh Q@\tt u:\tn I s t");
result.add("car-\ttoo-\tnists", "kh Q@\tt u:\tn I s t s");
result.add("car-\ttoon", "kh Q@\tt u: n");
result.add("car-\ttoons", "kh Q@\tt u: n z");
result.add("car-\tty", "kh Q@\tt i:");
result.add("car-\tvel", "kh Q@\tv e l");
result.add("car-\tver", "kh Q@\tv @r");
result.add("car-\tvers", "kh Q@\tv @r z");
result.add("car-\tver's", "kh Q@\tv @r z");
result.add("car-\tvey", "kh Q@\tv i:");
result.add("car-\tville", "kh Q@\tv I l");
result.add("car-\tville's", "kh Q@\tv I l z");
result.add("car-\tving", "kh Q@\tv I N");
result.add("car-\tvings", "kh Q@\tv I N z");
result.add("card", "kh Q@ d");
result.add("card-\tboard", "kh Q@ d\tb O@ d");
result.add("card-\tboards", "kh Q@ d\tb O@ d z");
result.add("card-\thol-\tder", "kh Q@ d\th @U l\td @r");
result.add("card-\thol-\tders", "kh Q@ d\th @U l\td @r z");
result.add("card-\twell", "kh Q@ d\tw e l");
result.add("cards", "kh Q@ d z");
result.add("card's", "kh Q@ d z");
result.add("care", "kh e@");
result.add("care-\tfree", "kh e@ f\tr i:");
result.add("care-\tful", "kh e@\tf V l");
result.add("care-\tful-\tly", "kh e@\tf V\tl i:");
result.add("care-\tgi-\tver", "kh e@\tg I\tv @r");
result.add("care-\tgi-\tvers", "kh e@\tg I\tv @r z");
result.add("care-\tgi-\tving", "kh e@\tg I\tv I N");
result.add("care-\tless", "kh e@\tl V s");
result.add("care-\tless-\tly", "kh e@\tl V s\tl i:");
result.add("care-\tless-\tness", "kh e@\tl V s\tn V s");
result.add("care-\tta-\tker", "kh e@\tt eI\tk @r");
result.add("care-\tta-\tkers", "kh e@\tt eI\tk @r z");
result.add("cared", "kh e@ d");
result.add("cares", "kh e@ z");
result.add("care's", "kh e@ z");
result.add("carl", "kh Q@ l");
result.add("carl-\tson", "kh Q@ l\ts V n");
result.add("carl-\tson's", "kh Q@ l\ts V n z");
result.add("carl-\tton", "kh Q@ l\tt V n");
result.add("carl-\tton's", "kh Q@ l\tt V n z");
result.add("carle-\tton", "kh Q@ l\tt V n");
result.add("carles", "kh Q@ l z");
result.add("carls", "kh Q@ l z");
result.add("carl's", "kh Q@ l z");
result.add("carls-\tbad", "kh Q@ l\ts b { d");
result.add("carls-\ttadt", "kh Q@ l\ts t { t");
result.add("carls-\ttrom", "kh Q@ l\ts t r V m");
result.add("carn", "kh Q@ n");
result.add("carne", "kh Q@ n");
result.add("carnes", "kh Q@ n z");
result.add("carns", "kh Q@ n z");
result.add("carp", "kh Q@ p");
result.add("carr", "kh Q@");
result.add("carr's", "kh Q@ z");
result.add("carry-\to-\tver", "kh e@\tj @U\tv @r");
result.add("cars", "kh Q@ z");
result.add("car's", "kh Q@ z");
result.add("carse", "kh Q@ s");
result.add("cart", "kh Q@ t");
result.add("cart-\tland", "kh Q@ t\tl V n d");
result.add("cart-\trid-\tges", "kh Q@ t\tr I\tdZ V z");
result.add("cart-\tridge", "kh Q@ t\tr I dZ");
result.add("cart-\twheel", "kh Q@ t\tw i: l");
result.add("cart-\twheels", "kh Q@ t\tw i: l z");
result.add("cart-\twright", "kh Q@ t\tr aI t");
result.add("carte", "kh Q@ t");
result.add("carts", "kh Q@ t s");
result.add("carve", "kh Q@ v");
result.add("carved", "kh Q@ v d");
result.add("carves", "kh Q@ v z");
result.add("cas", "kh { s");
result.add("cas-\tbah", "kh { s\tb V");
result.add("cas-\tca-\tded", "kh { s\tk eI\td V d");
result.add("cas-\tca-\tding", "kh { s\tk eI\td I N");
result.add("cas-\tcade", "kh { s\tk eI d");
result.add("cas-\tcades", "kh { s\tk eI d z");
result.add("cas-\tcade's", "kh { s\tk eI d z");
result.add("cas-\tco", "kh { s\tk @U");
result.add("cas-\tket", "kh { s\tk V t");
result.add("cas-\tkets", "kh { s\tk V t s");
result.add("cas-\tpar", "kh { s\tp @r");
result.add("cas-\tper", "kh { s\tp @r");
result.add("cas-\tpi-\tan", "kh { s\tp i:\tV n");
result.add("cas-\tsa-\tda", "kh Q\ts Q\td V");
result.add("cas-\tsa-\tdy", "kh {\ts V\td i:");
result.add("cas-\tsa-\tta", "kh Q\ts Q\tt V");
result.add("cas-\tsand-\tra", "kh V\ts { n\td r V");
result.add("cas-\tsand-\tras", "kh V\ts { n\td r V s");
result.add("cas-\tsatt", "kh {\ts V t");
result.add("cas-\tse-\trole", "kh {\ts @r\t@U l");
result.add("cas-\tsel", "kh {\ts V l");
result.add("cas-\tsel-\tber-\try", "kh {\ts V l\tb e@\ti:");
result.add("cas-\tsel-\tla", "kh Q\ts e\tl V");
result.add("cas-\tsell", "kh {\ts V l");
result.add("cas-\tsette", "kh V\ts e t");
result.add("cas-\tsettes", "kh V\ts e t s");
result.add("cas-\tsi-\ta", "kh {\tS i:\tV");
result.add("cas-\tsi-\tdy", "kh {\ts I\td i:");
result.add("cas-\tsi-\tdy's", "kh {\ts I\td i: z");
result.add("cas-\tsi-\tni", "kh V\ts i:\tn i:");
result.add("cas-\tsi-\tno", "kh V\ts i:\tn @U");
result.add("cas-\tsie", "kh {\ts i:");
result.add("cas-\tsis", "kh {\ts I s");
result.add("cas-\tso-\tne", "kh Q\ts @U\tn i:");
result.add("cas-\tso-\tni", "kh V\ts @U\tn i:");
result.add("cas-\tso-\twa-\try", "kh {\ts V\tw e@\ti:");
result.add("cas-\tsock", "kh {\ts V k");
result.add("cas-\tson", "kh {\ts V n");
result.add("cas-\tta", "kh { s\tt V");
result.add("cas-\tta-\tne-\tda", "kh Q s\tt Q\tn e\td V");
result.add("cas-\tta-\tno", "kh Q s\tt Q\tn @U");
result.add("cas-\tta-\tway", "kh { s\tt V\tw eI");
result.add("cas-\tta-\tways", "kh { s\tt V\tw eI z");
result.add("cas-\tte-\tlo", "kh Q s\tt e\tl @U");
result.add("cas-\tteel", "kh eI s\tt i: l");
result.add("cas-\ttel", "kh eI s\tt V l");
result.add("cas-\ttel-\tla-\tno", "kh Q s\tt e\tl Q\tn @U");
result.add("cas-\ttel-\tla-\tnos", "kh Q s\tt eI\tl Q\tn @U z");
result.add("cas-\ttel-\tli", "kh Q s\tt e\tl i:");
result.add("cas-\ttell", "kh eI s\tt V l");
result.add("cas-\tten", "kh { s\tt V n");
result.add("cas-\tter", "kh { s\tt @r");
result.add("cas-\tters", "kh { s\tt @r z");
result.add("cas-\tti-\tga-\tted", "kh { s\tt I\tg eI\tt I d");
result.add("cas-\tti-\tga-\tting", "kh { s\tt I\tg eI\tt I N");
result.add("cas-\tti-\tgate", "kh { s\tt I\tg eI t");
result.add("cas-\tti-\tne", "kh Q s\tt i:\tn i:");
result.add("cas-\ttig-\tli-\to-\tne", "kh Q s\tt i: g\tl i:\t@U\tn i:");
result.add("cas-\ttil-\tla", "kh Q s\tt I\tl V");
result.add("cas-\ttil-\tle-\tja", "kh Q s\tt i:\tl eI\tj V");
result.add("cas-\ttil-\tlo", "kh { s\tt i:\t@U");
result.add("cas-\tting", "kh { s\tt I N");
result.add("cas-\ttings", "kh { s\tt I N z");
result.add("cas-\ttle", "kh {\ts V l");
result.add("cas-\ttle-\tber-\try", "kh {\ts V l\tb e@\ti:");
result.add("cas-\ttles", "kh {\ts V l z");
result.add("cas-\ttle's", "kh {\ts V l z");
result.add("cas-\ttoff", "kh { s\tt O: f");
result.add("cas-\ttoffs", "kh { s\tt O: f s");
result.add("cas-\ttor", "kh { s\tt @r");
result.add("cas-\twell", "kh { z\tw e l");
result.add("case", "kh eI s");
result.add("case-\tload", "kh eI s\tl @U d");
result.add("case-\twor-\tker", "kh eI s\tw @r\tk @r");
result.add("case-\twor-\tkers", "kh eI s\tw @r\tk @r z");
result.add("case-\twork", "kh eI s\tw @r k");
result.add("cash", "kh { S");
result.add("cash-\tflow", "kh { S\tf l @U");
result.add("cash-\tless", "kh { S\tl V s");
result.add("cash-\tmere", "kh { Z\tm I@");
result.add("cashed", "kh { S t");
result.add("cask", "kh { s k");
result.add("casks", "kh { s k s");
result.add("cass", "kh { s");
result.add("cast", "kh { s t");
result.add("cast-\toff", "kh { s\tt O: f");
result.add("cast-\tra-\tted", "kh { s\tt r eI\tt V d");
result.add("cast-\tra-\tting", "kh { s\tt r eI\tt I N");
result.add("cast-\tra-\ttion", "kh { s\tt r eI\tS V n");
result.add("cast-\tra-\ttions", "kh { s\tt r eI\tS V n z");
result.add("cast-\trate", "kh { s\tt r eI t");
result.add("cast-\trates", "kh { s\tt r eI t s");
result.add("cast-\tro", "kh { s\tt r @U");
result.add("cast-\tro's", "kh { s\tt r @U z");
result.add("caste", "kh { s t");
result.add("castes", "kh { s t s");
result.add("casts", "kh { s t s");
result.add("cat", "kh { t");
result.add("cat-\tbird", "kh { t\tb @r d");
result.add("cat-\tcall", "kh { t\tk O: l");
result.add("cat-\tcalls", "kh { t\tk O: l z");
result.add("cat-\tchall", "kh {\ttS O: l");
result.add("cat-\tcher", "kh {\ttS @r");
result.add("cat-\tchers", "kh {\ttS @r z");
result.add("cat-\tcher's", "kh {\ttS @r z");
result.add("cat-\tches", "kh {\ttS V z");
result.add("cat-\tching", "kh {\ttS I N");
result.add("cat-\tchings", "kh {\ttS I N z");
result.add("cat-\tchup", "kh {\ttS V p");
result.add("cat-\tchy", "kh {\ttS i:");
result.add("cat-\tkins", "kh { t\tk I n z");
result.add("cat-\tlett", "kh { t\tl e t");
result.add("cat-\tlike", "kh { t\tl aI k");
result.add("cat-\tlin", "kh { t\tl I n");
result.add("cat-\tnap", "kh { t\tn { p");
result.add("cat-\tnip", "kh { t\tn I p");
result.add("cat-\tron", "kh { t\tr V n");
result.add("cat-\tskill", "kh { t\ts k I l");
result.add("cat-\tskills", "kh { t\ts k I l z");
result.add("cat-\tsup", "kh e\ttS V p");
result.add("cat-\ttell", "kh V\tt e l");
result.add("cat-\ttle", "kh {\tt V l");
result.add("cat-\ttle-\tmen", "kh {\tt V l\tm V n");
result.add("cat-\tto", "kh {\tt @U");
result.add("cat-\tton", "kh {\tt V n");
result.add("cat-\tty", "kh {\tt i:");
result.add("cat-\twalk", "kh { t\tw Q k");
result.add("catch", "kh { tS");
result.add("catch-\tall", "kh {\ttS O: l");
result.add("catch-\tup", "kh {\ttS V p");
result.add("catch-\tword", "kh { tS\tw @r d");
result.add("cate", "kh eI t");
result.add("cath-\tleen", "kh { T\tl i: n");
result.add("cathe-\trine's", "kh { T\tr I n z");
result.add("catho-\tlic", "kh { T\tl I k");
result.add("catho-\tlics", "kh { T\tl I k s");
result.add("cats", "kh { t s");
result.add("cat's", "kh { t s");
result.add("catt", "kh { t");
result.add("cau-\tca-\tsian", "kh O:\tk eI\tZ V n");
result.add("cau-\tca-\tsians", "kh O:\tk eI\tZ V n z");
result.add("cau-\tca-\tsus", "kh O:\tk V\ts V s");
result.add("cau-\tcu-\tses", "kh O:\tk V\ts V z");
result.add("cau-\tcu-\ts's", "kh O:\tk V\ts V z");
result.add("cau-\tcus", "kh Q\tk V s");
result.add("cau-\tdal", "kh Q\td V l");
result.add("cau-\tdil-\tlo", "kh O:\td I\tl @U");
result.add("cau-\tdle", "kh O:\td V l");
result.add("cau-\tghey", "kh O:\ti:");
result.add("cau-\tli-\tflo-\twer", "kh Q\tl I f\tl aU\t@r");
result.add("cau-\tsa-\tli-\tties", "kh O:\tz {\tl I\tt i: z");
result.add("cau-\tsa-\tli-\tty", "kh O:\tz {\tl I\tt i:");
result.add("cau-\tsa-\ttion", "kh O:\tz eI\tS V n");
result.add("cau-\tsa-\ttive", "kh Q\tz V\tt I v");
result.add("cau-\tsal", "kh O:\tz V l");
result.add("cau-\tser", "kh O:\tz @r");
result.add("cau-\tses", "kh Q\tz V z");
result.add("cau-\tsey", "kh O:\tz i:");
result.add("cau-\tsing", "kh Q\tz I N");
result.add("cau-\ttio-\tna-\try", "kh O:\tS V\tn e@\ti:");
result.add("cau-\ttio-\tning", "kh O:\tS V\tn I N");
result.add("cau-\ttion", "kh Q\tS V n");
result.add("cau-\ttioned", "kh Q\tS V n d");
result.add("cau-\ttions", "kh O:\tS V n z");
result.add("cau-\ttious", "kh O:\tS V s");
result.add("cau-\ttious-\tly", "kh O:\tS V s\tl i:");
result.add("cau-\ttious-\tness", "kh O:\tS V s\tn V s");
result.add("caught", "kh Q t");
result.add("caul", "kh Q l");
result.add("caul-\tder", "kh O: l\td @r");
result.add("caul-\tfield", "kh O: l\tf i: l d");
result.add("caul-\tking", "kh O:\tk I N");
result.add("cauld-\tron", "kh Q l\td r V n");
result.add("caulk", "kh Q k");
result.add("caus-\ttic", "kh Q s\tt I k");
result.add("cause", "kh Q z");
result.add("cause-\tway", "kh Q z\tw eI");
result.add("cause-\tways", "kh O: z\tw eI z");
result.add("caused", "kh Q z d");
result.add("cave", "kh eI v");
result.add("cave-\tman", "kh eI v\tm { n");
result.add("caved", "kh eI v d");
result.add("caves", "kh eI v z");
result.add("cave's", "kh eI v z");
result.add("caw", "kh O:");
result.add("caw-\tley", "kh O:\tl i:");
result.add("cax-\tton", "kh { k\ts t V n");
result.add("cay", "kh eI");
result.add("cay-\tenne", "kh aI\te n");
result.add("cay-\tlor", "kh eI\tl @r");
result.add("cay-\tman", "kh eI\tm V n");
result.add("cay-\tmans", "kh eI\tm V n z");
result.add("cayce", "kh eI s");
result.add("cayes", "kh eI z");
result.add("ce-\tbu", "s i:\tb u:");
result.add("ce-\tbu's", "s i:\tb u: z");
result.add("ce-\tce-\tlia", "s V\ts i: l\tj V");
result.add("ce-\tci-\tlia", "s V\ts i: l\tj V");
result.add("ce-\tcil", "s i:\ts I l");
result.add("ce-\tcile", "s V\ts i: l");
result.add("ce-\tcil's", "s i:\ts I l z");
result.add("ce-\tdar", "s i:\td @r");
result.add("ce-\tdars", "s i:\td @r z");
result.add("ce-\tded", "s i:\td V d");
result.add("ce-\tder", "s i:\td @r");
result.add("ce-\tding", "s i:\td I N");
result.add("ce-\tja", "s eI\tj V");
result.add("ce-\tla", "s e\tl V");
result.add("ce-\tla-\tdon", "s e\tl V\td Q n");
result.add("ce-\tla-\tnese", "s e\tl V\tn i: z");
result.add("ce-\tla-\tya", "s eI\tl eI\tV");
result.add("ce-\tlan-\tdine", "s e\tl V n\td aI n");
result.add("ce-\tle-\try", "s e\tl @r\ti:");
result.add("ce-\tleb-\tra-\tted", "s e\tl V b\tr eI\tt V d");
result.add("ce-\tleb-\tra-\tting", "s e\tl V b\tr eI\tt I N");
result.add("ce-\tleb-\tra-\ttion", "s e\tl V b\tr eI\tS V n");
result.add("ce-\tleb-\tra-\ttions", "s e\tl V b\tr eI\tS V n z");
result.add("ce-\tleb-\tra-\tto-\try", "s V\tl e b\tr V\tt O@\ti:");
result.add("ce-\tleb-\trant", "s e\tl V b\tr V n t");
result.add("ce-\tleb-\trants", "s e\tl V b\tr V n t s");
result.add("ce-\tleb-\trate", "s e\tl V b\tr eI t");
result.add("ce-\tleb-\trates", "s e\tl V b\tr eI t s");
result.add("ce-\tleb-\tre", "s e\tl V b\tr V");
result.add("ce-\tleb-\tri-\tties", "s V\tl e b\tr V\tt i: z");
result.add("ce-\tleb-\tri-\tty", "s V\tl e b\tr V\tt i:");
result.add("ce-\tlene", "tS e\tl i: n");
result.add("ce-\tles-\tta", "s V\tl e s\tt V");
result.add("ce-\tles-\tti-\tna", "tS e\tl e s\tt i:\tn V");
result.add("ce-\tles-\tti-\tne", "tS e\tl e s\tt i:\tn i:");
result.add("ce-\tles-\ttial", "s V\tl e s\ttS V l");
result.add("ce-\tleste", "s V\tl e s t");
result.add("ce-\tli-\tba-\tcy", "s e\tl I\tb V\ts i:");
result.add("ce-\tli-\tbate", "s e\tl I\tb V t");
result.add("ce-\tli-\tna", "s V\tl i:\tn V");
result.add("ce-\tli-\to", "s i:\tl i:\t@U");
result.add("ce-\tlia", "s i: l\tj V");
result.add("ce-\tlie", "s e\tl i:");
result.add("ce-\tlin-\tda", "tS e\tl i: n\td V");
result.add("ce-\tline", "s V\tl i: n");
result.add("ce-\tlo-\tsi-\ta", "tS e\tl @U\ts i:\tV");
result.add("ce-\tme-\tte-\tries", "s e\tm V\tt e@\ti: z");
result.add("ce-\tme-\tte-\try", "s e\tm V\tt e@\ti:");
result.add("ce-\tmen-\tted", "s V\tm e n\tt V d");
result.add("ce-\tmen-\tting", "s V\tm e n\tt I N");
result.add("ce-\tment", "s V\tm e n t");
result.add("ce-\tno-\tzo-\tic", "s i:\tn V\tz @U\tI k");
result.add("ce-\tpha-\tlo-\tpod", "s e\tf V\tl V\tp Q d");
result.add("ce-\tpha-\tlon", "s e\tf V\tl Q n");
result.add("ce-\tpha-\tlos-\tpo-\trin", "s e\tf V\tl O: s\tp @r\tV n");
result.add("ce-\tphas", "s e\tf V z");
result.add("ce-\tphus", "s e\tf V s");
result.add("ce-\tra", "s e@\tV");
result.add("ce-\tra-\tceous", "s @r\teI\tS V s");
result.add("ce-\tra-\tmic", "s @r\t{\tm I k");
result.add("ce-\tra-\tmics", "s @r\t{\tm I k s");
result.add("ce-\tre-\tal", "s I@\ti:\tV l");
result.add("ce-\tre-\tals", "s I@\ti:\tV l z");
result.add("ce-\tre-\tli-\ta", "tS @r\te\tl i:\tV");
result.add("ce-\tre-\tmo-\tni-\tal", "s e@\tV\tm @U\tn i:\tV l");
result.add("ce-\tre-\tmo-\tnies", "s e@\tV\tm @U\tn i: z");
result.add("ce-\tre-\tmo-\tny", "s e@\tV\tm @U\tn i:");
result.add("ce-\tre-\tno", "s @r\teI\tn @U");
result.add("ce-\treb-\tral", "s e@\tV b\tr V l");
result.add("ce-\treb-\tral-\tly", "s @r\ti: b\tr V\tl i:");
result.add("ce-\tres", "s I@\ti: z");
result.add("ce-\tryl", "s e@\tV l");
result.add("ce-\tsa-\tre", "tS eI\tz Q@\teI");
result.add("ce-\tsa-\tro", "tS e\ts Q@\t@U");
result.add("ce-\tsar", "s i:\tz @r");
result.add("ce-\tse-\tna", "tS e\ts e\tn V");
result.add("ce-\tsi-\tum", "s i:\tz i:\tV m");
result.add("ce-\tta", "s e\tt V");
result.add("ce-\tta-\tcean", "s V\tt eI\tS V n");
result.add("ce-\tte-\tra", "s e\tt @r\tV");
result.add("ce-\ttu-\ts's", "s i:\tt V\ts V z");
result.add("ce-\ttus", "s i:\tt V s");
result.add("ce-\tzanne", "s e\tz { n");
result.add("cea-\tra", "s i:\tr V");
result.add("cea-\tses", "s i:\ts V z");
result.add("cea-\tsing", "s i:\ts I N");
result.add("cease", "s i: s");
result.add("cease-\tfi-\tre", "s i: s\tf aI\t@r");
result.add("cease-\tfi-\tres", "s i: s\tf aI\t@r z");
result.add("cease-\tless", "s i: s\tl V s");
result.add("cease-\tless-\tly", "s i: z\tl V s\tl i:");
result.add("ceased", "s i: s t");
result.add("ceau-\tses-\tcu", "tS aU\ttS e s\tk j u:");
result.add("ceau-\tses-\tcu's", "tS aU\ttS e s\tk j u: z");
result.add("cece", "s i: s");
result.add("ced-\tric", "s e d\tr I k");
result.add("cede", "s i: d");
result.add("cedes", "s i: d z");
result.add("cees", "s i: z");
result.add("cei-\tling", "s i:\tl I N");
result.add("cei-\tlings", "s i:\tl I N z");
result.add("cel", "s e l");
result.add("cel-\tla", "s e\tl V");
result.add("cel-\tlar", "s e\tl @r");
result.add("cel-\tlars", "s e\tl @r z");
result.add("cel-\tli", "tS e\tl i:");
result.add("cel-\tli-\tni", "tS e\tl i:\tn i:");
result.add("cel-\tlist", "tS e\tl I s t");
result.add("cel-\tlo", "tS e\tl @U");
result.add("cel-\tlo-\tphane", "s e\tl V\tf eI n");
result.add("cel-\tlu-\tlar", "s e l\tj V\tl @r");
result.add("cel-\tlu-\tlar's", "s e l\tj V\tl @r z");
result.add("cel-\tlu-\tloid", "s e\tl V\tl OI d");
result.add("cel-\tlu-\tlose", "s e l\tj V\tl @U s");
result.add("cel-\tsi-\tus", "s e l\ts i:\tV s");
result.add("cel-\ttic", "s e l\tt I k");
result.add("cel-\ttics", "s e l\tt I k s");
result.add("cele", "s i: l");
result.add("cell", "s e l");
result.add("cell-\tnet", "s e l\tn e t");
result.add("cell-\tphone", "s e l\tf @U n");
result.add("celled", "s e l d");
result.add("cells", "s e l z");
result.add("cell's", "s e l z");
result.add("cels", "s e l z");
result.add("celt", "s e l t");
result.add("celts", "s e l t s");
result.add("cen-\tci", "tS e n\ttS i:");
result.add("cen-\tser", "s e n\ts @r");
result.add("cen-\tso-\tring", "s e n\ts @r\tI N");
result.add("cen-\tsor", "s e n\ts @r");
result.add("cen-\tsor-\tship", "s e n\ts @r\tS I p");
result.add("cen-\tsored", "s e n\ts @r d");
result.add("cen-\tsors", "s e n\ts @r z");
result.add("cen-\tsu-\tses", "s e n\ts V\ts V z");
result.add("cen-\tsure", "s e n\tS @r");
result.add("cen-\tsured", "s e n\tS @r d");
result.add("cen-\tsus", "s e n\ts V s");
result.add("cen-\tta-\tvos", "s e n\tt Q\tv @U s");
result.add("cen-\ttaur", "s e n\tt O@");
result.add("cen-\ttaurs", "s e n\tt O@ z");
result.add("cen-\ttaur's", "s e n\tt O@ z");
result.add("cen-\tte-\tna-\tri-\tan", "s e n\tt V\tn e@\ti:\tV n");
result.add("cen-\tte-\tna-\tri-\tans", "s e n\tt V\tn e@\ti:\tV n z");
result.add("cen-\tte-\tna-\try", "s e n\tt V\tn e@\ti:");
result.add("cen-\tte-\tno", "tS e n\tt e\tn @U");
result.add("cen-\tten-\tni-\tal", "s e n\tt e\tn i:\tV l");
result.add("cen-\tter", "s e n\tt @r");
result.add("cen-\tter-\tfold", "s e n\tt @r\tf @U l d");
result.add("cen-\tter-\ting", "s e n\tt @r\tI N");
result.add("cen-\tter-\tpiece", "s e n\tt @r\tp i: s");
result.add("cen-\tter-\tville", "s e n\tt @r\tv I l");
result.add("cen-\ttered", "s e n\tt @r d");
result.add("cen-\tters", "s e n\tt @r z");
result.add("cen-\tter's", "s e n\tt @r z");
result.add("cen-\tti-\tme-\tter", "s e n\tt I\tm i:\tt @r");
result.add("cen-\tti-\tme-\tters", "s e n\tt I\tm i:\tt @r z");
result.add("cen-\tti-\tpede", "s e n\tt I\tp i: d");
result.add("cen-\ttig-\trade", "s e n\tt I g\tr eI d");
result.add("cen-\ttig-\tram", "s e n\tt I g\tr { m");
result.add("cen-\ttime", "s e n\tt aI m");
result.add("cen-\ttimes", "s e n\tt aI m z");
result.add("cen-\ttre", "s e n\tt @r");
result.add("cen-\ttri-\tfu-\tgal", "s e n\tt r I f\tj I\tg V l");
result.add("cen-\ttri-\tfu-\tges", "s e n\tt r I f\tj u:\tdZ V z");
result.add("cen-\ttri-\tfuge", "s e n\tt r I f\tj u: dZ");
result.add("cen-\ttrist", "s e n\tt r I s t");
result.add("cen-\ttrists", "s e n\tt r I s t s");
result.add("cen-\ttu-\tri-\ton", "s e n\tt U@\ti:\tV n");
result.add("cen-\ttu-\tries", "s e n\ttS @r\ti: z");
result.add("cen-\ttu-\try", "s e n\ttS @r\ti:");
result.add("cen-\ttu-\try's", "s e n\ttS @r\ti: z");
result.add("cen-\ttum", "kh e n\tt V m");
result.add("cent", "s e n t");
result.add("cent-\tner", "s e n\tt n @r");
result.add("cent-\tra-\tli-\ta", "s e n\tt r eI\tl i:\tV");
result.add("cent-\tral", "s e n\tt r V l");
result.add("cent-\trale", "s e n\tt r Q l");
result.add("cent-\tro", "s e n\tt r @U");
result.add("cents", "s e n t s");
result.add("cep", "s e p");
result.add("cer-\tise", "s @r\ti: s");
result.add("cer-\tnu-\tda", "s @r\tn u:\td V");
result.add("cer-\tnu-\tda's", "s @r\tn u:\td V z");
result.add("cer-\tri-\tto", "tS @r\ti:\tt @U");
result.add("cer-\tri-\ttos", "s e@\ti:\tt @U s");
result.add("cer-\tro", "s e@\t@U");
result.add("cer-\ttain", "s @r\tt @ n");
result.add("cer-\ttain-\tly", "s @r\tt @ n\tl i:");
result.add("cer-\ttain-\tties", "s @r\tt @ n\tt i: z");
result.add("cer-\ttain-\tty", "s @r\tt @ n\tt i:");
result.add("cer-\tti-\tfi-\tca-\ttion", "s @r\tt I\tf V\tk eI\tS V n");
result.add("cer-\tti-\tfi-\tca-\ttions", "s @r\tt I\tf V\tk eI\tS V n z");
result.add("cer-\tti-\tfi-\tcate", "s @r\tt I\tf I\tk V t");
result.add("cer-\tti-\tfi-\tcates", "s @r\tt I\tf I\tk V t s");
result.add("cer-\tti-\tfied", "s @r\tt I\tf aI d");
result.add("cer-\tti-\tfies", "s @r\tt I\tf aI z");
result.add("cer-\tti-\tfy", "s @r\tt I\tf aI");
result.add("cer-\tti-\tfy-\ting", "s @r\tt I\tf aI\tI N");
result.add("cer-\tti-\ttude", "s @r\tt I\tt u: d");
result.add("cer-\tve-\tny", "tS @r\tv i:\tn i:");
result.add("cer-\tve-\tra", "tS @r\tv e@\tV");
result.add("cer-\tvi-\tcal", "s @r\tv I\tk V l");
result.add("cer-\tvix", "s @r\tv I k s");
result.add("cerf", "s @r f");
result.add("cern", "s @r n");
result.add("ces-\tsa-\ttion", "s e\ts eI\tS V n");
result.add("cess-\tna", "s e s\tn V");
result.add("cess-\tna's", "s e s\tn V z");
result.add("cess-\tpool", "s e s\tp u: l");
result.add("c'est", "s e s t");
result.add("cey-\tlon", "s V\tl Q n");
result.add("ch-\tmie-\tlew-\tski", "tS V\tm V\tl e f\ts k i:");
result.add("cha", "tS Q");
result.add("cha-\tbot", "S V\tb @U");
result.add("cha-\tchas", "tS Q\ttS Q z");
result.add("cha-\tcon", "tS {\tk V n");
result.add("cha-\tdi-\tan", "tS eI\td i:\tV n");
result.add("cha-\tfee", "tS {\tf i:");
result.add("cha-\tfee's", "tS eI\tf i: z");
result.add("cha-\tfing", "tS eI\tf I N");
result.add("cha-\tgall", "tS V\tg Q l");
result.add("cha-\tim", "h aI\tI m");
result.add("cha-\tlet", "S {\tl eI");
result.add("cha-\tlets", "S V\tl eI z");
result.add("cha-\tme-\tle-\ton", "tS V\tm e\tl i:\tV n");
result.add("cha-\tna", "tS {\tn V");
result.add("cha-\tnel", "S V\tn e l");
result.add("cha-\tney", "tS eI\tn i:");
result.add("cha-\tnu-\tkah", "h Q\tn V\tk V");
result.add("cha-\tny", "tS eI\tn i:");
result.add("cha-\to-\ttic", "kh eI\tQ\tt I k");
result.add("cha-\tos", "kh eI\tQ s");
result.add("cha-\tpa", "tS Q\tp V");
result.add("cha-\tpar-\tral", "S {\tp @r\t{ l");
result.add("cha-\tpar-\tro", "kh Q\tp Q@\t@U");
result.add("cha-\tpe-\tro-\tning", "S {\tp @r\t@U\tn I N");
result.add("cha-\tpe-\trone", "S {\tp @r\t@U n");
result.add("cha-\tpel", "tS {\tp V l");
result.add("cha-\tpell", "S V\tp e l");
result.add("cha-\tpel's", "tS {\tp V l z");
result.add("cha-\tpin", "S V\tp { n");
result.add("cha-\trac-\tte-\tri-\tza-\ttion", "kh e@\tV k\tt @r\tV\tz eI\tS V n");
result.add("cha-\trac-\tte-\tri-\tza-\ttions", "tS e@\tV k\tt @r\tV\tz eI\tS V n z");
result.add("cha-\trac-\tte-\tri-\tzes", "kh e@\tV k\tt @r\taI\tz V z");
result.add("cha-\trac-\tte-\tri-\tzing", "kh e@\tI k\tt @r\taI\tz I N");
result.add("cha-\trac-\tte-\tris-\ttic", "kh e@\tV k\tt @r\tI s\tt I k");
result.add("cha-\trac-\tte-\tris-\ttical-\tly", "kh e@\tV k\tt @r\tI s\tt I k\tl i:");
result.add("cha-\trac-\tte-\tris-\ttics", "kh e@\tV k\tt @r\tI s\tt I k s");
result.add("cha-\trac-\tte-\trize", "kh e@\tV k\tt @r\taI z");
result.add("cha-\trac-\tte-\trized", "kh e@\tV k\tt @r\taI z d");
result.add("cha-\trac-\tter", "kh e@\tI k\tt @r");
result.add("cha-\trac-\tters", "kh {\tr I k\tt @r z");
result.add("cha-\trac-\tter's", "kh e@\tI k\tt @r z");
result.add("cha-\trade", "S @r\teI d");
result.add("cha-\trades", "S @r\teI d z");
result.add("cha-\trette", "S @r\te t");
result.add("cha-\tri-\tot", "tS e@\ti:\tV t");
result.add("cha-\tri-\tots", "tS e@\ti:\tV t s");
result.add("cha-\tri-\tta", "kh Q@\ti:\tt V");
result.add("cha-\tri-\tta-\tble", "tS e@\tI\tt V\tb V l");
result.add("cha-\tri-\ttab-\tly", "tS e@\tI\tt V b\tl i:");
result.add("cha-\tri-\tties", "tS e@\tI\tt i: z");
result.add("cha-\tri-\tty", "tS e@\tI\tt i:");
result.add("cha-\tri-\tty's", "tS e@\tI\tt i: z");
result.add("cha-\tris-\tma", "kh @r\tI z\tm V");
result.add("cha-\tris-\tma-\ttic", "kh e@\tI z\tm {\tt I k");
result.add("cha-\tris-\tma-\ttics", "kh e@\tI z\tm {\tt I k s");
result.add("cha-\tris-\tsa", "kh Q@\ti:\ts V");
result.add("cha-\tron", "kh e@\tV n");
result.add("cha-\try", "tS Q@\ti:");
result.add("cha-\tryl", "tS {\tr V l");
result.add("cha-\tser", "tS eI\ts @r");
result.add("cha-\tsers", "tS eI\ts @r z");
result.add("cha-\tses", "tS eI\ts V z");
result.add("cha-\tse's", "tS eI\ts V z");
result.add("cha-\tsing", "tS eI\ts I N");
result.add("cha-\tsm", "kh {\tz V m");
result.add("cha-\tteau", "S {\tt @U");
result.add("cha-\tteaux", "S V\tt @U");
result.add("cha-\ttham", "tS {\tt V m");
result.add("cha-\tvez", "S Q\tv e z");
result.add("cha-\tvin", "tS eI\tv I n");
result.add("chab-\tlis", "S V b\tl i:");
result.add("chace", "tS eI s");
result.add("chad", "tS { d");
result.add("chad-\tbourne", "S V d\tb U@ n");
result.add("chad-\tron", "tS { d\tr V n");
result.add("chad-\twick", "tS { d\tw I k");
result.add("chad-\twick's", "tS { d\tw I k s");
result.add("chadd", "tS { d");
result.add("chad's", "tS { d z");
result.add("chae", "tS aI");
result.add("chae-\tbol", "tS eI\tb V l");
result.add("chaf-\tfee", "tS {\tf i:");
result.add("chaf-\tfin", "tS {\tf I n");
result.add("chaf-\tfy", "tS {\tf i:");
result.add("chafe", "tS eI f");
result.add("chafed", "tS eI f t");
result.add("chafes", "tS eI f s");
result.add("chaff", "tS { f");
result.add("chag-\trin", "S V g\tr I n");
result.add("chag-\trined", "S V g\tr I n d");
result.add("chai", "tS aI");
result.add("chai-\tken", "tS eI\tk V n");
result.add("chai-\tning", "tS eI\tn I N");
result.add("chai-\tring", "tS e@\tI N");
result.add("chain", "tS eI n");
result.add("chain-\tsaw", "tS eI n\ts O:");
result.add("chain-\tsaws", "tS eI n\ts O: z");
result.add("chained", "tS eI n d");
result.add("chains", "tS eI n z");
result.add("chain's", "tS eI n z");
result.add("chair", "tS e@");
result.add("chair-\tman", "tS e@\tm V n");
result.add("chair-\tman-\tship", "tS e@\tm V n\tS I p");
result.add("chair-\tman-\tships", "tS e@\tm V n\tS I p s");
result.add("chair-\tman's", "tS e@\tm V n z");
result.add("chair-\tmen", "tS e@\tm e n");
result.add("chair-\tper-\tson", "tS e@\tp @r\ts V n");
result.add("chair-\two-\tman", "tS e@\tw U\tm V n");
result.add("chair-\two-\tmen", "tS e@\tw I\tm e n");
result.add("chaired", "tS e@ d");
result.add("chairs", "tS e@ z");
result.add("chaise", "S eI z");
result.add("chait", "tS eI t");
result.add("chal-\tker", "tS O:\tk @r");
result.add("chal-\tking", "tS O:\tk I N");
result.add("chal-\tlen-\tger", "tS {\tl V n\tdZ @r");
result.add("chal-\tlen-\tgers", "tS {\tl V n\tdZ @r z");
result.add("chal-\tlen-\tger's", "tS {\tl V n\tdZ @r z");
result.add("chal-\tlen-\tges", "tS {\tl V n\tdZ V z");
result.add("chal-\tlen-\tging", "tS {\tl V n\tdZ I N");
result.add("chal-\tlenge", "tS {\tl V n dZ");
result.add("chal-\tlenged", "tS {\tl V dZ d");
result.add("chal-\tlis", "tS {\tl I s");
result.add("chal-\tmers", "tS Q\tm @r z");
result.add("chal-\tmette", "S { l\tm e t");
result.add("chalk", "tS Q k");
result.add("chalked", "tS O: k t");
result.add("chalks", "tS O: k s");
result.add("cham", "tS { m");
result.add("cham-\tber", "tS eI m\tb @r");
result.add("cham-\tber-\tlain", "tS eI m\tb @r\tl I n");
result.add("cham-\tber-\tlain's", "tS eI m\tb @r\tl I n z");
result.add("cham-\tber-\tlin", "tS eI m\tb @r\tl I n");
result.add("cham-\tber-\ts's", "tS eI m\tb @r\tz V z");
result.add("cham-\tbered", "tS eI m\tb @r d");
result.add("cham-\tbers", "tS eI m\tb @r z");
result.add("cham-\tber's", "tS eI m\tb @r z");
result.add("cham-\tpi-\ton-\tship", "tS { m\tp i:\tV n\tS I p");
result.add("cham-\tpi-\ton-\tships", "tS { m\tp i:\tV n\tS I p s");
result.add("cham-\tpi-\tons", "tS { m\tp i:\tV n z");
result.add("cham-\tpi-\ton's", "tS { m\tp i:\tV n z");
result.add("chamb-\tlee", "tS { m\tb l i:");
result.add("champ-\tlain", "S { m\tp l eI n");
result.add("champ-\tlin", "tS { m\tp l I n");
result.add("champs", "tS { m p s");
result.add("chan", "tS { n");
result.add("chan-\tce-\try", "tS { n\ts @r\ti:");
result.add("chan-\tcel-\tlor", "tS { n\ts V\tl @r");
result.add("chan-\tcel-\tlors", "tS { n\ts V\tl @r z");
result.add("chan-\tcel-\tlor's", "tS { n\ts V\tl @r z");
result.add("chan-\tces", "tS { n\ts V z");
result.add("chan-\tcey", "tS { n\ts i:");
result.add("chan-\tcy", "tS { n\ts i:");
result.add("chan-\tda", "tS { n\td V");
result.add("chan-\tde-\tlier", "S { n\td V\tl I@");
result.add("chan-\tde-\tliers", "S { n\td V\tl I z");
result.add("chan-\tdon", "tS { n\td V n");
result.add("chan-\tgea-\tble", "tS eI n\tdZ V\tb V l");
result.add("chan-\tgeo-\tver", "tS eI n\tdZ @U\tv @r");
result.add("chan-\tgeo-\tvers", "tS eI n\tdZ @U\tv @r z");
result.add("chan-\tger", "tS eI n\tdZ @r");
result.add("chan-\tgers", "tS eI n\tdZ @r z");
result.add("chan-\tges", "tS eI n\tdZ V z");
result.add("chan-\tging", "tS eI n\tdZ I N");
result.add("chan-\tne-\tling", "tS {\tn V\tl I N");
result.add("chan-\tnel", "tS {\tn V l");
result.add("chan-\tneled", "tS {\tn V l d");
result.add("chan-\tnels", "tS {\tn V l z");
result.add("chan-\tnel's", "tS {\tn V l z");
result.add("chan-\tning", "tS {\tn I N");
result.add("chan-\ttal", "tS { n\tt V l");
result.add("chan-\tted", "tS { n\tt V d");
result.add("chan-\ttil-\tly", "S { n\tt I\tl i:");
result.add("chan-\tting", "tS { n\tt I N");
result.add("chance", "tS { n s");
result.add("chand-\tler", "tS { n\td l @r");
result.add("chand-\tler's", "tS { n\td l @r z");
result.add("chand-\tra", "tS { n\td r V");
result.add("chang", "tS { N");
result.add("chang-\tchun", "tS Q N\ttS U n");
result.add("change", "tS eI n dZ");
result.add("changed", "tS eI n dZ d");
result.add("chan's", "tS { n z");
result.add("chant", "tS { n t");
result.add("chants", "tS { n t s");
result.add("chao", "tS aU");
result.add("chap", "tS { p");
result.add("chap-\tlain", "tS { p\tl I n");
result.add("chap-\tlains", "tS { p\tl I n z");
result.add("chap-\tlin", "tS { p\tl I n");
result.add("chap-\tlin's", "tS { p\tl I n z");
result.add("chap-\tman", "tS { p\tm V n");
result.add("chap-\tman's", "tS { p\tm V n z");
result.add("chap-\tnick", "tS { p\tn I k");
result.add("chap-\tpa-\tquid-\tdick", "tS {\tp V k\tw I\td I k");
result.add("chap-\tpel", "tS {\tp V l");
result.add("chap-\tpell", "tS {\tp V l");
result.add("chap-\tpie", "tS {\tp i:");
result.add("chap-\tter", "tS { p\tt @r");
result.add("chap-\tters", "tS { p\tt @r z");
result.add("chapp", "tS { p");
result.add("chaps", "tS { p s");
result.add("char", "tS Q@");
result.add("char-\tbon-\tneau", "S Q@\tb V\tn @U");
result.add("char-\tcoal", "tS Q@\tk @U l");
result.add("char-\tcoals", "tS Q@\tk @U l z");
result.add("char-\tdon-\tnay", "tS Q@\td Q\tn eI");
result.add("char-\tdon-\tnays", "tS Q@\td Q\tn eI z");
result.add("char-\tgea-\tble", "tS Q@\tdZ V\tb V l");
result.add("char-\tger", "tS Q@\tdZ @r");
result.add("char-\tgers", "tS Q@\tdZ @r z");
result.add("char-\tges", "tS Q@\tdZ V z");
result.add("char-\tging", "tS Q@\tdZ I N");
result.add("char-\tla", "tS Q@\tl V");
result.add("char-\tla-\ttan", "S Q@\tl V\tt V n");
result.add("char-\tla-\ttans", "S Q@\tl V\tt V n z");
result.add("char-\tle-\tmagne", "S Q@\tl V\tm eI n");
result.add("char-\tleen", "tS Q@\tl i: n");
result.add("char-\tlene", "S Q@\tl i: n");
result.add("char-\tles-\tworth", "tS Q@\tV l\ts w @r T");
result.add("char-\tlet", "tS Q@\tl V t");
result.add("char-\tley", "tS Q@\tl i:");
result.add("char-\tley's", "tS Q@\tl i: z");
result.add("char-\tlie", "tS Q@\tl i:");
result.add("char-\tlie's", "tS Q@\tl i: z");
result.add("char-\tline", "S Q@\tl i: n");
result.add("char-\tlot", "tS Q@\tl V t");
result.add("char-\tlotte", "S Q@\tl V t");
result.add("char-\tlotte-\ttown", "S Q@\tl V t\tt aU n");
result.add("char-\tlotte-\tville", "S Q@\tl V t\tv I l");
result.add("char-\tlotte's", "S Q@\tl V t s");
result.add("char-\tlottes-\tville", "S Q@\tl V t\ts v I l");
result.add("char-\tmain", "S Q@\tm eI n");
result.add("char-\tmaine", "S Q@\tm eI n");
result.add("char-\tmer", "tS Q@\tm @r");
result.add("char-\tmers", "tS Q@\tm @r z");
result.add("char-\tmi-\tan", "tS Q@\tm i:\tV n");
result.add("char-\tmi-\ton", "tS Q@\tm i:\tV n");
result.add("char-\tming", "tS Q@\tm I N");
result.add("char-\tming-\tly", "tS Q@\tm I N\tl i:");
result.add("char-\tnock", "tS Q@\tn V k");
result.add("char-\tpen-\ttier", "S Q@\tp V n\tt I@");
result.add("char-\tpie", "tS Q@\tp i:");
result.add("char-\tri-\ter", "tS {\tr i:\t@r");
result.add("char-\tring", "tS Q@\tI N");
result.add("char-\tron", "tS e@\tV n");
result.add("char-\try", "tS {\tr i:");
result.add("char-\tted", "tS Q@\tt V d");
result.add("char-\tter", "tS Q@\tt @r");
result.add("char-\tter-\thouse", "tS Q@\tt @r\th aU s");
result.add("char-\tter-\ting", "tS Q@\tt @r\tI N");
result.add("char-\ttered", "tS Q@\tt @r d");
result.add("char-\tters", "tS Q@\tt @r z");
result.add("char-\tter's", "tS Q@\tt @r z");
result.add("char-\tting", "tS Q@\tt I N");
result.add("char-\ttist", "tS Q@\tt I s t");
result.add("char-\ttists", "tS Q@\tt I s t s");
result.add("chard", "tS Q@ d");
result.add("charge", "tS Q@ dZ");
result.add("charged", "tS Q@ dZ d");
result.add("charl-\tton", "tS Q@ l\tt V n");
result.add("charle-\ts's", "tS Q@ l\tz V z");
result.add("charles", "tS Q@ l z");
result.add("charles'", "tS Q@ l z");
result.add("charles-\tton", "tS Q@ l\ts t V n");
result.add("charles-\tton's", "tS Q@ l\ts t V n z");
result.add("charles-\ttown", "tS Q@ l\tz t aU n");
result.add("charm", "tS Q@ m");
result.add("charmed", "tS Q@ m d");
result.add("charms", "tS Q@ m z");
result.add("charred", "tS Q@ d");
result.add("chart", "tS Q@ t");
result.add("chart-\tres", "tS Q@ t\tr i: z");
result.add("chart-\twell", "tS Q@ t\tw e l");
result.add("charts", "tS Q@ t s");
result.add("chas", "tS Q@ l z");
result.add("chas-\tka", "tS { s\tk V");
result.add("chas-\tsis", "tS {\ts i:");
result.add("chas-\ttain", "S V s\tt eI n");
result.add("chas-\tten", "tS eI\ts V n");
result.add("chas-\ttened", "tS eI\ts V n d");
result.add("chas-\tti-\tses", "tS { s\tt aI\tz V z");
result.add("chas-\tti-\tsing", "tS { s\tt aI\tz I N");
result.add("chas-\tti-\tty", "tS { s\tt V\tt i:");
result.add("chas-\ttise", "tS { s\tt aI z");
result.add("chas-\ttised", "tS { s\tt aI z d");
result.add("chase", "tS eI s");
result.add("chased", "tS eI s t");
result.add("chasse", "tS { s");
result.add("chaste", "tS eI s t");
result.add("chat", "tS { t");
result.add("chat-\tfield", "tS { t\tf i: l d");
result.add("chat-\tta-\thoo-\tchee", "tS {\tt V\th u:\ttS i:");
result.add("chat-\tta-\thoo-\tchee's", "tS {\tt V\th u:\ttS i: z");
result.add("chat-\tta-\tnoo-\tga", "tS {\tt V\tn u:\tg V");
result.add("chat-\tta-\tnoo-\tga's", "tS {\tt V\tn u:\tg V z");
result.add("chat-\tte-\tring", "tS {\tt @r\tI N");
result.add("chat-\tted", "tS {\tt V d");
result.add("chat-\ttel", "tS {\tt V l");
result.add("chat-\tter", "tS {\tt @r");
result.add("chat-\tter-\tjee", "tS V\tt @r\tdZ i:");
result.add("chat-\tter-\tton", "tS {\tt @r\tt V n");
result.add("chat-\tter-\tton's", "tS {\tt @r\tt V n z");
result.add("chat-\tting", "tS {\tt I N");
result.add("chat-\tty", "tS {\tt i:");
result.add("chat-\twin", "tS { t\tw I n");
result.add("chats", "tS { t s");
result.add("chats-\tworth", "tS { t\ts w @r T");
result.add("chau-\tcer", "tS O:\ts @r");
result.add("chau-\tcer's", "tS O:\ts @r z");
result.add("chau-\ttau-\tqua", "S V\tt O: k\tw V");
result.add("chau-\ttau-\tquan", "S V\tt O: k\tw V n");
result.add("chau-\ttau-\tquans", "S V\tt O: k\tw V n z");
result.add("chau-\tvi-\tni-\tsm", "S @U\tv I\tn I\tz V m");
result.add("chau-\tvi-\tnis-\ttic", "tS @U\tv I\tn I s\tt I k");
result.add("chau-\tvi-\tnist", "S @U\tv I\tn I s t");
result.add("chau-\tvin", "S @U\tv { n");
result.add("chaudo-\tin", "S @U\td OI n");
result.add("chauf-\tfeur", "S @U\tf @r");
result.add("chauf-\tfeured", "S @U\tf @r d");
result.add("chauf-\tfeurs", "S @U\tf @r z");
result.add("chauf-\tfeur's", "S @U\tf @r z");
result.add("chaun-\tcey", "tS O: n\ts i:");
result.add("chaunce", "tS O: n s");
result.add("chaus", "tS aU s");
result.add("chaus-\tsee", "tS aU\ts i:");
result.add("chausse", "tS aU s");
result.add("chaves", "tS eI v z");
result.add("chaw", "tS O:");
result.add("che", "tS eI");
result.add("che-\tchen", "tS e\ttS V n");
result.add("che-\tchens", "tS e\ttS V n z");
result.add("che-\tchen's", "tS e\ttS V n z");
result.add("che-\tkhov", "tS e\tk Q v");
result.add("che-\tkhov's", "tS e\tk Q v z");
result.add("che-\tlan", "tS e\tl V n");
result.add("che-\tmins", "tS e\tm I n z");
result.add("che-\tmise", "S V\tm i: z");
result.add("che-\tmist", "kh e\tm I s t");
result.add("che-\tmist-\try", "kh e\tm I s\tt r i:");
result.add("che-\tmists", "kh e\tm I s t s");
result.add("che-\tmo", "kh i:\tm @U");
result.add("che-\tmo-\tthe-\tra-\tpy", "kh i:\tm @U\tT e@\tV\tp i:");
result.add("che-\tney", "tS eI\tn i:");
result.add("che-\tney's", "tS eI\tn i: z");
result.add("che-\tni-\ter", "tS i:\tn i:\t@r");
result.add("che-\tno-\tweth", "tS e\tn V\tw e T");
result.add("che-\tri", "S e@\ti:");
result.add("che-\tri-\tshes", "tS e@\tI\tS V z");
result.add("che-\trie", "tS I@\ti:");
result.add("che-\trish", "tS e@\tI S");
result.add("che-\trished", "tS e@\tI S t");
result.add("che-\tro-\tkee", "tS e@\tV\tk i:");
result.add("che-\tro-\tkees", "tS e@\tV\tk i: z");
result.add("che-\tro-\tkee's", "tS e@\tV\tk i: z");
result.add("che-\tru-\tbi-\tni", "kh @r\tu:\tb i:\tn i:");
result.add("che-\tru-\tbic", "tS @r\tu:\tb I k");
result.add("che-\trub", "tS e@\tV b");
result.add("che-\trubs", "tS e@\tV b z");
result.add("che-\try", "tS e@\ti:");
result.add("che-\tryl", "S e@\tV l");
result.add("che-\tsa-\tpeake", "tS e\ts V\tp i: k");
result.add("che-\tshire", "tS e\tS @r");
result.add("che-\tv-\tri-\ter", "tS e\tv @r\ti:\t@r");
result.add("che-\tva-\tlier", "S e\tv V\tl I@");
result.add("che-\tver-\tly", "tS e\tv @r\tl i:");
result.add("che-\tvi-\tot", "S e\tv i:\tV t");
result.add("che-\tvi-\tots", "tS i:\tv i:\tV t s");
result.add("che-\tvies", "tS e\tv i: z");
result.add("che-\tvro-\tlet", "S e v\tr V\tl eI");
result.add("che-\tvro-\tlets", "S e v\tr V\tl eI z");
result.add("che-\tvro-\tlet's", "S e v\tr V\tl eI z");
result.add("che-\tvy", "tS e\tv i:");
result.add("che-\tvy's", "tS e\tv i: z");
result.add("che-\twer", "tS u:\t@r");
result.add("che-\twers", "tS u:\t@r z");
result.add("che-\twy", "tS u:\ti:");
result.add("chea-\tdle", "tS i:\td V l");
result.add("chea-\tpe-\tning", "tS i:\tp V\tn I N");
result.add("chea-\tpen", "tS i:\tp V n");
result.add("chea-\tpened", "tS i:\tp V n d");
result.add("chea-\tper", "tS i:\tp @r");
result.add("chea-\tpest", "tS i:\tp V s t");
result.add("chea-\tpo", "tS i:\tp @U");
result.add("chea-\tted", "tS i:\tt V d");
result.add("chea-\tter", "tS i:\tt @r");
result.add("chea-\tters", "tS i:\tt @r z");
result.add("chea-\ttham", "tS i:\tt V m");
result.add("chea-\tting", "tS i:\tt I N");
result.add("cheap", "tS i: p");
result.add("cheap-\tly", "tS i: p\tl i:");
result.add("cheap-\tness", "tS i: p\tn V s");
result.add("cheaps-\tkate", "tS i: p\ts k eI t");
result.add("cheat", "tS i: t");
result.add("cheats", "tS i: t s");
result.add("chec-\tker", "tS e\tk @r");
result.add("chec-\tker-\tboar-\tding", "tS e\tk @r\tb O@\td I N");
result.add("chec-\tker-\tboard", "tS e\tk @r\tb O@ d");
result.add("chec-\tker-\tboards", "tS e\tk @r\tb O@ d z");
result.add("chec-\tkered", "tS e\tk @r d");
result.add("chec-\tkers", "tS e\tk @r z");
result.add("chec-\tkers-\tpot", "tS e\tk @r s\tp Q t");
result.add("chec-\tking", "tS e\tk I N");
result.add("chec-\tkup", "tS e\tk V p");
result.add("chec-\tkups", "tS e\tk V p s");
result.add("chech-\tn-\tya", "tS e tS\tn i:\tV");
result.add("chech-\tn-\tyan", "tS e tS\tn i:\tV n");
result.add("chech-\tn-\tyans", "tS e tS\tn i:\tV n z");
result.add("chech-\tn-\tya's", "tS e tS\tn i:\tV z");
result.add("check", "tS e k");
result.add("check-\tbook", "tS e k\tb U k");
result.add("check-\tbooks", "tS e k\tb U k s");
result.add("check-\tlist", "tS e k\tl I s t");
result.add("check-\tmate", "tS e k\tm eI t");
result.add("check-\toff", "tS e\tk O: f");
result.add("check-\tout", "tS e\tk aU t");
result.add("check-\touts", "tS e\tk aU t s");
result.add("check-\tpoint", "tS e k\tp OI n t");
result.add("check-\tpoints", "tS e k\tp OI n t s");
result.add("check-\tup", "tS e\tk V p");
result.add("checked", "tS e k t");
result.add("checks", "tS e k s");
result.add("ched-\tdar", "tS e\td @r");
result.add("ched-\tdars", "tS e\td @r z");
result.add("chee", "tS i:");
result.add("chee-\tky", "tS i:\tk i:");
result.add("chee-\tri-\to", "tS I@\ti:\t@U");
result.add("chee-\tri-\tos", "tS I@\ti:\t@U s");
result.add("chee-\tring", "tS I@\tI N");
result.add("chee-\try", "tS I@\ti:");
result.add("chee-\tser", "tS i:\tz @r");
result.add("chee-\tses", "tS i:\tz V z");
result.add("chee-\tsi-\ter", "tS i:\tz i:\t@r");
result.add("chee-\tsi-\test", "tS i:\tz i:\tI s t");
result.add("chee-\tsy", "tS i:\tz i:");
result.add("chee-\ttah", "tS i:\tt V");
result.add("chee-\ttahs", "tS i:\tt V z");
result.add("chee-\ttal", "tS i:\tt V l");
result.add("chee-\tver", "tS i:\tv @r");
result.add("cheek", "tS i: k");
result.add("cheek-\tbone", "tS i: k\tb @U n");
result.add("cheek-\tbones", "tS i: k\tb @U n z");
result.add("cheek-\tto-\twa-\tga", "tS i: k\tt V\tw Q\tg V");
result.add("cheeked", "tS i: k t");
result.add("cheeks", "tS i: k s");
result.add("cheer", "tS I@");
result.add("cheer-\tful", "tS I@\tf V l");
result.add("cheer-\tful-\tly", "tS I@\tf V\tl i:");
result.add("cheer-\tlea-\tder", "tS I@\tl i:\td @r");
result.add("cheer-\tlea-\tders", "tS I@\tl i:\td @r z");
result.add("cheer-\tlea-\tding", "tS I@\tl i:\td I N");
result.add("cheered", "tS I@ d");
result.add("cheers", "tS I@ z");
result.add("cheese", "tS i: z");
result.add("cheese-\tbur-\tger", "tS i: z\tb @r\tg @r");
result.add("cheese-\tbur-\tgers", "tS i: z\tb @r\tg @r z");
result.add("cheese-\tcake", "tS i: z\tk eI k");
result.add("chef", "S e f");
result.add("chefs", "S e f s");
result.add("chef's", "S e f s");
result.add("chel-\tsea", "tS e l\ts i:");
result.add("chel-\tsea's", "tS e l\ts i: z");
result.add("chelms-\tford", "tS e l\tm s f @r d");
result.add("chen", "tS e n");
result.add("chen-\tnault", "tS e\tn O: l t");
result.add("cheng", "tS e N");
result.add("cheng-\tdu", "tS e N\td u:");
result.add("chen's", "tS e n z");
result.add("cher", "S e@");
result.add("cher-\tbourg", "S e@\tb V r g");
result.add("cher-\tnen-\tko", "tS @r\tn e N\tk @U");
result.add("cher-\tno-\tbyl", "tS @r\tn @U\tb V l");
result.add("cher-\tno-\tbyl's", "tS @r\tn @U\tb V l z");
result.add("cher-\tno-\tmyr-\tdin", "tS e@\tn @U\tm I@\td I n");
result.add("cher-\tno-\tmyr-\tdin's", "tS e@\tn @U\tm I@\td I n z");
result.add("cher-\tnow", "tS @r\tn @U");
result.add("cher-\tri-\ter", "tS e@\ti:\t@r");
result.add("cher-\tries", "tS e@\ti: z");
result.add("cher-\try", "tS e@\ti:");
result.add("cher-\trys-\ttone", "tS e@\ti: s\tt @U n");
result.add("cher-\trys-\ttones", "tS e@\ti: s\tt @U n z");
result.add("chert", "tS @r t");
result.add("cherts", "tS @r t s");
result.add("ches", "tS e s");
result.add("ches-\tney", "tS e s\tn i:");
result.add("ches-\tnut", "tS e s\tn V t");
result.add("ches-\tser", "tS e\ts @r");
result.add("ches-\tted", "tS e s\tt V d");
result.add("ches-\tter", "tS e s\tt @r");
result.add("ches-\tter-\tfield", "tS e s\tt @r\tf i: l d");
result.add("ches-\tter-\tton", "tS e s\tt @r\tt V n");
result.add("ches-\tton", "tS e s\tt V n");
result.add("chess", "tS e s");
result.add("chess-\tboard", "tS e s\tb O@ d");
result.add("chess-\tman", "tS e s\tm V n");
result.add("chest", "tS e s t");
result.add("chest-\tnut", "tS e s\tn V t");
result.add("chest-\tnuts", "tS e s\tn V t s");
result.add("chests", "tS e s t s");
result.add("chet", "tS e t");
result.add("chet-\tniks", "tS e t\tn I k s");
result.add("cheung", "tS j u: N");
result.add("chev-\trette", "S I v\tr e t");
result.add("chev-\tron", "S e v\tr V n");
result.add("chev-\tron's", "S e v\tr V n z");
result.add("cheves", "tS i: v z");
result.add("chew", "tS u:");
result.add("chew-\ting", "tS u:\tI N");
result.add("chewed", "tS u: d");
result.add("chews", "tS u: z");
result.add("chey-\tenne", "S aI\t{ n");
result.add("chey-\tennes", "S aI\t{ n z");
result.add("chey-\tenne's", "S aI\t{ n z");
result.add("chey-\tney", "tS eI\tn i:");
result.add("cheyne", "tS eI n");
result.add("chez", "tS e z");
result.add("chi", "kh aI");
result.add("chi-\ta", "tS i:\tV");
result.add("chi-\ta-\tpas", "tS i:\tQ\tp V s");
result.add("chi-\ta-\tvet-\tta", "kh i:\tQ\tv e\tt V");
result.add("chi-\tan-\tti", "tS i:\t{ n\tt i:");
result.add("chi-\tat", "tS i:\t{ t");
result.add("chi-\tba", "tS i:\tb V");
result.add("chi-\tca-\tgo", "S V\tk Q\tg @U");
result.add("chi-\tca-\tgo-\tans", "S V\tk Q\tg @U\tV n z");
result.add("chi-\tca-\tgoan", "tS I\tk V\tg @U n");
result.add("chi-\tca-\tgo's", "S V\tk Q\tg @U z");
result.add("chi-\tca-\tne-\try", "S I\tk eI\tn @r\ti:");
result.add("chi-\tca-\tno", "tS I\tk Q\tn @U");
result.add("chi-\tca-\tnos", "tS I\tk Q\tn @U z");
result.add("chi-\tches-\tter", "tS I\ttS e s\tt @r");
result.add("chi-\tchi", "tS i:\ttS i:");
result.add("chi-\tco", "tS i:\tk @U");
result.add("chi-\tcoine", "tS I\tk OI n");
result.add("chi-\tco's", "tS i:\tk @U z");
result.add("chi-\tded", "tS aI\td V d");
result.add("chi-\tdes-\tter", "tS I\td V s\tt @r");
result.add("chi-\tding", "tS aI\td I N");
result.add("chi-\thua-\thua", "tS V\tw Q\tw Q");
result.add("chi-\tle", "tS I\tl i:");
result.add("chi-\tle-\tan", "tS I\tl i:\tV n");
result.add("chi-\tle-\tans", "tS I\tl i:\tV n z");
result.add("chi-\tle's", "tS I\tl i: z");
result.add("chi-\tli", "tS I\tl i:");
result.add("chi-\tlies", "tS I\tl i: z");
result.add("chi-\tlis", "tS I\tl i: z");
result.add("chi-\tli's", "tS I\tl i: z");
result.add("chi-\tma-\tyo", "tS I\tm aI\t@U");
result.add("chi-\tme-\tra", "tS I\tm e@\tV");
result.add("chi-\tna", "tS aI\tn V");
result.add("chi-\tna-\ttown", "tS aI\tn V\tt aU n");
result.add("chi-\tna's", "tS aI\tn V z");
result.add("chi-\tnese", "tS aI\tn i: z");
result.add("chi-\tno", "tS i:\tn @U");
result.add("chi-\tnook", "S I\tn U k");
result.add("chi-\tnooks", "tS I\tn U k s");
result.add("chi-\tqui-\tta", "kh I k\tw i:\tt V");
result.add("chi-\trac", "S I@\t{ k");
result.add("chi-\trac's", "S I@\t{ k s");
result.add("chi-\tri-\tco", "kh I@\ti:\tk @U");
result.add("chi-\tron", "tS aI\tr V n");
result.add("chi-\tron's", "tS aI\tr V n z");
result.add("chi-\trop-\trac-\ttic", "kh aI\tr @U p\tr { k\tt I k");
result.add("chi-\trop-\trac-\ttor", "kh aI\tr V p\tr { k\tt @r");
result.add("chi-\trop-\trac-\ttors", "kh aI\tr V p\tr { k\tt @r z");
result.add("chi-\trop-\trac-\ttor's", "kh aI\tr @U p\tr { k\tt @r z");
result.add("chi-\tsel", "tS I\tz V l");
result.add("chi-\tseled", "tS I\tz V l d");
result.add("chi-\tsels", "tS I\tz V l z");
result.add("chi-\tsholm", "tS I\tz V m");
result.add("chi-\tta", "tS i:\tt V");
result.add("chi-\tti-\tnous", "kh aI\tt I\tn V s");
result.add("chiang", "tS { N");
result.add("chiang's", "tS { N z");
result.add("chic", "S i: k");
result.add("chic-\tka-\tsaw", "tS I\tk V\ts O:");
result.add("chic-\tka-\tsaws", "tS I\tk V\ts O: z");
result.add("chic-\tken", "tS I\tk V n");
result.add("chic-\tkened", "tS I\tk V n d");
result.add("chic-\tkens", "tS I\tk V n z");
result.add("chic-\tken's", "tS I\tk V n z");
result.add("chick", "tS I k");
result.add("chicks", "tS I k s");
result.add("chide", "tS aI d");
result.add("chides", "tS aI d z");
result.add("chief", "tS i: f");
result.add("chief-\tdom", "tS i: f\td V m");
result.add("chief-\tly", "tS i: f\tl i:");
result.add("chief-\ttain", "tS i: f\tt V n");
result.add("chief-\ttains", "tS i: f\tt V n z");
result.add("chief-\ttain's", "tS i: f\tt V n z");
result.add("chiefs", "tS i: f s");
result.add("chief's", "tS i: f s");
result.add("chien", "tS e n");
result.add("chieng-\tmai", "tS e N\tm aI");
result.add("chif-\tfon", "S I\tf Q n");
result.add("chig-\tgers", "tS I\tg @r z");
result.add("chil-\tcote", "tS I l\tk @U t");
result.add("chil-\tders", "tS I l\td @r z");
result.add("chil-\tdish", "tS aI l\td I S");
result.add("chil-\tler", "tS I\tl @r");
result.add("chil-\tli-\tcothe", "tS I\tl I\tk O: T");
result.add("chil-\tli-\ter", "tS I\tl i:\t@r");
result.add("chil-\tlies", "tS I\tl i: z");
result.add("chil-\tling", "tS I\tl I N");
result.add("chil-\tling-\tly", "tS I\tl I N\tl i:");
result.add("chil-\tly", "tS I\tl i:");
result.add("chil-\tmark", "tS I l\tm Q@ k");
result.add("chil-\tson", "tS I l\ts V n");
result.add("chil-\tton", "tS I l\tt V n");
result.add("child", "tS aI l d");
result.add("child-\tbea-\tring", "tS aI l\td b e@\tI N");
result.add("child-\tbirth", "tS aI l\td b @r T");
result.add("child-\tcare", "tS aI l\td k e@");
result.add("child-\thood", "tS aI l\td h U d");
result.add("child-\thoods", "tS aI l\td h U d z");
result.add("child-\tless", "tS aI l\td l V s");
result.add("child-\tlike", "tS aI l\td l aI k");
result.add("child-\tren", "tS I l\td r V n");
result.add("child-\tren's", "tS I l\td r V n z");
result.add("child-\tress", "tS I l\td r V s");
result.add("childe", "tS I l d");
result.add("childs", "tS aI l d z");
result.add("child's", "tS aI l d z");
result.add("chiles", "tS aI l z");
result.add("chill", "tS I l");
result.add("chilled", "tS I l d");
result.add("chills", "tS I l z");
result.add("chim-\tney", "tS I m\tn i:");
result.add("chim-\tneys", "tS I m\tn i: z");
result.add("chim-\tpan-\tzee", "tS I m\tp { n\tz i:");
result.add("chim-\tpan-\tzees", "tS I m\tp { n\tz i: z");
result.add("chime", "tS aI m");
result.add("chimed", "tS aI m d");
result.add("chimes", "tS aI m z");
result.add("chimp", "tS I m p");
result.add("chimps", "tS I m p s");
result.add("chin", "tS I n");
result.add("chin-\tchil-\tla", "tS I n\ttS I\tl V");
result.add("ching", "tS I N");
result.add("chink", "tS I N k");
result.add("chinks", "tS I N k s");
result.add("chint-\tzy", "tS I n\tt s i:");
result.add("chip", "tS I p");
result.add("chip-\tboard", "tS I p\tb O@ d");
result.add("chip-\tley", "tS I p\tl i:");
result.add("chip-\tman", "tS I p\tm V n");
result.add("chip-\tpe-\twa", "tS I\tp V\tw Q");
result.add("chip-\tper", "tS I\tp @r");
result.add("chip-\tping", "tS I\tp I N");
result.add("chip-\tpy", "tS I\tp i:");
result.add("chipped", "tS I p t");
result.add("chips", "tS I p s");
result.add("chip's", "tS I p s");
result.add("chir-\tping", "tS @r\tp I N");
result.add("chir-\tpy", "tS @r\tp i:");
result.add("chirp", "tS @r p");
result.add("chirps", "tS @r p s");
result.add("chi's", "kh aI z");
result.add("chit", "tS I t");
result.add("chit-\tchat", "tS I t\ttS { t");
result.add("chit-\tra", "tS I t\tr V");
result.add("chit-\tten-\tden", "tS I\tt V n\td V n");
result.add("chit-\tty", "tS I\tt i:");
result.add("chits", "tS I t s");
result.add("chlo-\te", "kh l @U\ti:");
result.add("chlo-\trate", "kh l O@\teI t");
result.add("chlo-\tri-\tna-\tted", "kh l O@\tI\tn eI\tt I d");
result.add("chlo-\tri-\tna-\tting", "kh l O@\tI\tn eI\tt I N");
result.add("chlo-\tri-\tnate", "kh l O@\tI\tn eI t");
result.add("chlo-\tride", "kh l O@\taI d");
result.add("chlo-\trine", "kh l O@\ti: n");
result.add("chlo-\tris", "kh l O@\tI s");
result.add("chlo-\tro-\tfluo-\tro-\tcar-\tbon", "kh l O@\t@U f\tl O@\t@U\tk Q@\tb Q n");
result.add("chlo-\tro-\tfluo-\tro-\tcar-\tbons", "kh l O@\t@U f\tl O@\t@U\tk Q@\tb Q n z");
result.add("chlo-\tro-\tform", "kh l O@\tV\tf O@ m");
result.add("chlo-\tro-\tphyll", "kh l O@\tV\tf I l");
result.add("chlo-\trop-\tlast", "kh l O@\tV p\tl { s t");
result.add("chlo-\trop-\tlasts", "kh l O@\tV p\tl { s t s");
result.add("chlo-\trop-\trene", "kh l O@\tV p\tr i: n");
result.add("chlor-\tdane", "kh l O@\td eI n");
result.add("cho", "tS @U");
result.add("cho-\tir", "kh w aI\t@r");
result.add("cho-\tking", "tS @U\tk I N");
result.add("cho-\tle-\tra", "kh Q\tl @r\tV");
result.add("cho-\tle-\tric", "kh Q\tl @r\tI k");
result.add("cho-\tles-\tte-\trol", "kh V\tl e s\tt @r\tO: l");
result.add("cho-\tles-\tty-\tra-\tmine", "tS @U\tl e s\tt I@\tV\tm aI n");
result.add("cho-\tpin", "S @U\tp { n");
result.add("cho-\tral", "kh O@\tV l");
result.add("cho-\trals", "kh O@\tV l z");
result.add("cho-\tre-\to-\tgra-\tpher", "kh O@\ti:\tQ g\tr V\tf @r");
result.add("cho-\tre-\to-\tgra-\tphers", "kh O@\ti:\tQ g\tr V\tf @r z");
result.add("cho-\tre-\to-\tgra-\tpher's", "kh O@\ti:\tQ g\tr V\tf @r z");
result.add("cho-\tre-\to-\tgra-\tphic", "kh O@\ti:\tV g\tr {\tf I k");
result.add("cho-\tre-\to-\tgra-\tphing", "kh O@\ti:\tQ g\tr V\tf I N");
result.add("cho-\tre-\to-\tgra-\tphy", "kh O@\ti:\tQ g\tr V\tf i:");
result.add("cho-\tre-\to-\tgraph", "kh O@\ti:\tV g\tr { f");
result.add("cho-\tre-\to-\tgraphed", "kh O@\ti:\tV g\tr { f t");
result.add("cho-\tric", "kh O@\tI k");
result.add("cho-\tru-\tses", "kh O@\tV\ts V z");
result.add("cho-\trus", "kh O@\tV s");
result.add("cho-\tsen", "tS @U\tz V n");
result.add("choate", "tS @U t");
result.add("chock", "tS Q k");
result.add("choco-\tlate", "tS O: k\tl V t");
result.add("choco-\tlates", "tS O: k\tl V t s");
result.add("choi", "tS OI");
result.add("choi-\tcer", "tS OI\ts @r");
result.add("choi-\tces", "tS OI\ts V z");
result.add("choi-\tcest", "tS OI\ts V s t");
result.add("choice", "tS OI s");
result.add("choirs", "kh w aI r z");
result.add("chok", "tS Q k");
result.add("choke", "tS @U k");
result.add("choke-\thold", "tS @U k\th @U l d");
result.add("choked", "tS @U k t");
result.add("chokes", "tS @U k s");
result.add("chol-\tla", "tS Q\tl V");
result.add("chom-\tping", "tS Q m\tp I N");
result.add("chomp", "tS Q m p");
result.add("chon", "tS Q n");
result.add("chong", "tS O: N");
result.add("chong-\tqing", "tS O: N\tk I N");
result.add("choo", "tS u:");
result.add("choo-\tses", "tS u:\tz V z");
result.add("choo-\tsing", "tS u:\tz I N");
result.add("choo-\tsy", "tS u:\tz i:");
result.add("choong", "tS u: N");
result.add("choose", "tS u: z");
result.add("chop", "tS Q p");
result.add("chop-\tper", "tS Q\tp @r");
result.add("chop-\tpers", "tS Q\tp @r z");
result.add("chop-\tper's", "tS Q\tp @r z");
result.add("chop-\tping", "tS Q\tp I N");
result.add("chop-\tpy", "tS Q\tp i:");
result.add("chop-\tra", "tS Q p\tr V");
result.add("chop-\tstick", "tS Q p\ts t I k");
result.add("chop-\tsticks", "tS Q p\ts t I k s");
result.add("chop-\tsu-\tey", "tS Q p\ts u:\ti:");
result.add("chopped", "tS Q p t");
result.add("chops", "tS Q p s");
result.add("chor-\tdates", "kh O@\td eI t s");
result.add("chor-\tt-\tling", "tS O@\tt V\tl I N");
result.add("chor-\ttle", "tS O@\tt V l");
result.add("chor-\ttled", "tS O@\tt V l d");
result.add("chor-\ttles", "tS O@\tt V l z");
result.add("chord", "kh O@ d");
result.add("chords", "kh O@ d z");
result.add("chore", "tS O@");
result.add("chores", "tS O@ z");
result.add("chose", "tS @U z");
result.add("chou", "tS u:");
result.add("chow", "tS aU");
result.add("chow-\tder", "tS aU\td @r");
result.add("chows", "tS aU z");
result.add("choy", "tS OI");
result.add("chre-\ttien", "S r I\tt i: n");
result.add("chri-\tsta", "kh r I s\tt V");
result.add("chri-\tsta-\tbelle", "S r I s\tt V\tb V l");
result.add("chris", "kh r I s");
result.add("chris-\tman", "kh r I s\tm V n");
result.add("chris-\tmon", "kh r I z\tm V n");
result.add("chris-\tsie", "kh r I\ts i:");
result.add("chris-\tsy", "kh r I\ts i:");
result.add("chris-\ttal", "kh r I s\tt V l");
result.add("chris-\tte-\tning", "kh r I\ts V\tn I N");
result.add("chris-\ttel", "kh r I s\tt V l");
result.add("chris-\tten", "kh r I\ts V n");
result.add("chris-\tten-\tdom", "kh r I\ts V n\td V m");
result.add("chris-\tten-\tsen", "kh r I s\tt V n\ts V n");
result.add("chris-\tten-\tson", "kh r I s\tt V n\ts V n");
result.add("chris-\ttened", "kh r I\ts V n d");
result.add("chris-\tti", "kh r I s\tt i:");
result.add("chris-\tti-\ta-\tna", "kh r I s\tt i:\t{\tn V");
result.add("chris-\tti-\ta-\tni-\tty", "kh r I s\ttS i:\t{\tn V\tt i:");
result.add("chris-\tti-\ta-\tno", "kh r i: s\tt i:\tQ\tn @U");
result.add("chris-\tti-\tan-\tna", "kh r I s\tt i:\t{\tn V");
result.add("chris-\tti-\tane", "kh r I s\tt i:\tQ n");
result.add("chris-\tti-\tna", "kh r I s\tt i:\tn V");
result.add("chris-\ttia-\tan", "kh r I s\tt i:\tQ n");
result.add("chris-\ttia-\tni-\tza-\ttion", "kh r I s\ttS V\tn V\tz eI\tS V n");
result.add("chris-\ttia-\tnize", "kh r I s\ttS V\tn aI z");
result.add("chris-\ttia-\tnized", "kh r I s\ttS V\tn aI z d");
result.add("chris-\ttian", "kh r I s\ttS V n");
result.add("chris-\ttian-\tsen", "kh r I s\ttS V n\ts V n");
result.add("chris-\ttian-\tson", "kh r I s\ttS V n\ts V n");
result.add("chris-\ttians", "kh r I s\ttS V n z");
result.add("chris-\ttie", "kh r I s\tt i:");
result.add("chris-\tties", "kh r I s\tt i: z");
result.add("chris-\ttie's", "kh r I s\tt i: z");
result.add("chris-\ttine", "kh r I s\tt i: n");
result.add("chris-\ttine's", "kh r I s\tt i: n z");
result.add("chris-\tto-\tpher", "kh r I s\tt V\tf @r");
result.add("chris-\tto-\tpher's", "kh r I s\tt V\tf @r z");
result.add("chris-\ttof-\tfel", "kh r I s\tt V\tf e l");
result.add("chris-\ttoff", "kh r I s\tt O: f");
result.add("chris-\ttoph", "kh r I s\tt O: f");
result.add("chris-\ttophe", "kh r I s\tt r O: f");
result.add("chris-\tty", "kh r I s\tt i:");
result.add("chris-\tty's", "kh r I s\tt i: z");
result.add("christ", "kh r aI s t");
result.add("christ-\tchurch", "kh r aI s\tt tS @r tS");
result.add("christ-\tma-\tses", "kh r I s\tm V\ts V z");
result.add("christ-\tmann", "kh r I s\tt m V n");
result.add("christ-\tmas", "kh r I s\tm V s");
result.add("christ-\tmas-\ttime", "kh r I s\tt m V s\tt aI m");
result.add("christ's", "kh r aI s t s");
result.add("chro-\tma-\tto-\tgra-\tphy", "kh r @U\tm V\tt Q g\tr V\tf i:");
result.add("chro-\tma-\tto-\tgram", "kh r @U\tm {\tt V g\tr { m");
result.add("chro-\tma-\tto-\tgrams", "kh r @U\tm {\tt V g\tr { m z");
result.add("chro-\tmi-\tnance", "kh r @U\tm I\tn V n s");
result.add("chro-\tmi-\tum", "kh r @U\tm i:\tV m");
result.add("chro-\tmo-\tsome", "kh r @U\tm V\ts @U m");
result.add("chro-\tmo-\tsomes", "kh r @U\tm V\tz @U m z");
result.add("chro-\tni-\tcal-\tly", "kh r Q\tn I\tk V\tl i:");
result.add("chro-\tni-\tcle", "kh r Q\tn I\tk V l");
result.add("chro-\tni-\tcled", "kh r Q\tn I\tk V l d");
result.add("chro-\tni-\tcler", "kh r Q\tn I k\tl @r");
result.add("chro-\tni-\tclers", "kh r Q\tn I k\tl @r z");
result.add("chro-\tni-\tcles", "kh r Q\tn I\tk V l z");
result.add("chro-\tni-\tcle's", "kh r Q\tn I\tk V l z");
result.add("chro-\tnic", "kh r Q\tn I k");
result.add("chro-\tnic-\tling", "kh r Q\tn I k\tl I N");
result.add("chro-\tno-\tlo-\tgy", "kh r V\tn Q\tl V\tdZ i:");
result.add("chrome", "kh r @U m");
result.add("chry-\tsan-\tthe-\tmum", "kh r V\ts { n\tT V\tm V m");
result.add("chry-\tsan-\tthe-\tmums", "kh r V\ts { n\tT V\tm V m z");
result.add("chry-\tseis", "kh r I\ts V z");
result.add("chrys-\tler", "kh r aI s\tl @r");
result.add("chrys-\tlers", "kh r aI s\tl @r z");
result.add("chrys-\tler's", "kh r aI s\tl @r z");
result.add("chrys-\ttal", "kh r I s\tt V l");
result.add("chu", "tS u:");
result.add("chu-\tah", "tS u:\tQ");
result.add("chu-\ti", "kh u:\tI");
result.add("chu-\tla", "tS u:\tl V");
result.add("chu-\tra", "tS U@\tV");
result.add("chub-\tby", "tS V\tb i:");
result.add("chubb", "tS V b");
result.add("chubb's", "tS V b z");
result.add("chuc-\tkie", "tS V\tk i:");
result.add("chuc-\tking", "tS V\tk I N");
result.add("chuc-\tkle", "tS V\tk V l");
result.add("chuc-\tkled", "tS V\tk V l d");
result.add("chuc-\tkles", "tS V\tk V l z");
result.add("chuck", "tS V k");
result.add("chuck-\ta-\tluck", "tS V\tk V\tl V k");
result.add("chuck-\tling", "tS V k\tl I N");
result.add("chucked", "tS V k t");
result.add("chuck's", "tS V k s");
result.add("chug", "tS V g");
result.add("chug-\tging", "tS V\tg I N");
result.add("chugged", "tS V g d");
result.add("chuk-\tchi", "tS u: k\ttS i:");
result.add("chum", "tS V m");
result.add("chum-\tley", "tS V m\tl i:");
result.add("chum-\tmy", "tS V\tm i:");
result.add("chump", "tS V m p");
result.add("chums", "tS V m z");
result.add("chun", "tS V n");
result.add("chun-\tky", "tS V N\tk i:");
result.add("chun-\tnel", "tS V\tn V l");
result.add("chung", "tS V N");
result.add("chung's", "tS V N z");
result.add("chunk", "tS V N k");
result.add("chunks", "tS V N k s");
result.add("chun's", "tS V n z");
result.add("chur-\tches", "tS @r\ttS V z");
result.add("chur-\tchill", "tS @r\ttS I l");
result.add("chur-\tchill's", "tS @r\ttS I l z");
result.add("chur-\tch's", "tS @r\ttS V z");
result.add("chur-\tlish", "tS @r\tl I S");
result.add("chur-\tning", "tS @r\tn I N");
result.add("church", "tS @r tS");
result.add("church-\tgo-\ter", "tS @r tS\tg @U\t@r");
result.add("church-\tgo-\ters", "tS @r tS\tg @U\t@r z");
result.add("church-\tgo-\ting", "tS @r tS\tg @U\tI N");
result.add("church-\tman", "tS @r tS\tm V n");
result.add("church-\tmen", "tS @r tS\tm V n");
result.add("church-\tyard", "tS @r tS\tj Q@ d");
result.add("churn", "tS @r n");
result.add("churned", "tS @r n d");
result.add("churns", "tS @r n z");
result.add("chuse", "tS j u: z");
result.add("chut-\tney", "tS V t\tn i:");
result.add("chute", "S u: t");
result.add("chutes", "S u: t s");
result.add("chutz-\tpah", "tS V t\ts p Q");
result.add("ci-\ta", "s i:\tV");
result.add("ci-\ta-\tno", "tS i:\tQ\tn @U");
result.add("ci-\tca-\tda", "s V\tk eI\td V");
result.add("ci-\tca-\tdas", "s I\tk eI\td V z");
result.add("ci-\tca-\tla", "s I\tk Q\tl V");
result.add("ci-\tce-\tly", "s I\ts V\tl i:");
result.add("ci-\tce-\tro", "s I\ts @r\t@U");
result.add("ci-\tce-\trone", "s I\ts @r\t@U n");
result.add("ci-\tcho-\tcki", "s I\ttS Q\tk i:");
result.add("ci-\tci-\tly", "tS I\ttS I\tl i:");
result.add("ci-\tder", "s aI\td @r");
result.add("ci-\tga-\trette", "s I\tg @r\te t");
result.add("ci-\tga-\trettes", "s I\tg @r\te t s");
result.add("ci-\tga-\trette's", "s I\tg @r\te t s");
result.add("ci-\tgar", "s I\tg Q@");
result.add("ci-\tgars", "s I\tg Q@ z");
result.add("ci-\tlan-\ttro", "s V\tl { n\tt r @U");
result.add("ci-\tli-\tates", "s I\tl i:\tV t s");
result.add("ci-\tli-\tcia", "s V\tl I\tS V");
result.add("ci-\tma", "tS i:\tm V");
result.add("ci-\tmar-\tron", "s I\tm @r\tQ n");
result.add("ci-\tne-\tma", "s I\tn V\tm V");
result.add("ci-\tne-\tma-\ttic", "s I\tn V\tm {\tt I k");
result.add("ci-\tne-\tma-\tto-\tgra-\tpher", "s I\tn V\tm V\tt Q g\tr V\tf @r");
result.add("ci-\tne-\tma-\tto-\tgra-\tphy", "s I\tn V\tm V\tt Q g\tr V\tf i:");
result.add("ci-\tne-\tmas", "s I\tn V\tm V z");
result.add("ci-\tne-\tma's", "s I\tn V\tm V z");
result.add("ci-\tne-\tplex", "s I\tn V p\tl e k s");
result.add("ci-\tnel-\tli", "s V\tn e\tl i:");
result.add("ci-\tni", "tS i:\tn i:");
result.add("ci-\tpher", "s aI\tf @r");
result.add("ci-\tra", "s @r\tV");
result.add("ci-\tril-\tlo", "s I@\tI\tl @U");
result.add("ci-\trone", "s I@\t@U n");
result.add("ci-\tti-\tbank", "s I\tt i:\tb { N k");
result.add("ci-\tti-\tbank's", "s I\tt i:\tb { N k s");
result.add("ci-\tti-\tcorp", "s I\tt i:\tk O@ p");
result.add("ci-\tti-\tzen", "s I\tt I\tz V n");
result.add("ci-\tti-\tzen-\try", "s I\tt I\tz V n\tr i:");
result.add("ci-\tti-\tzen-\tship", "s I\tt I\tz V n\tS I p");
result.add("ci-\tti-\tzens", "s I\tt I\tz V n z");
result.add("ci-\tti-\tzen's", "s I\tt I\tz V n z");
result.add("ci-\tti-\tzens'", "s I\tt I\tz V n z");
result.add("ci-\tties", "s I\tt i: z");
result.add("ci-\tting", "s aI\tt I N");
result.add("ci-\tty", "s I\tt i:");
result.add("ci-\tty-\twide", "s I\tt i:\tw aI d");
result.add("ci-\tty's", "s I\tt i: z");
result.add("ci-\tu-\tdad", "s i:\tu:\td { d");
result.add("ci-\tvet", "s I\tv V t");
result.add("ci-\tvi-\tli-\tty", "s V\tv I\tl V\tt i:");
result.add("ci-\tvi-\tli-\tza-\ttion", "s I\tv I\tl V\tz eI\tS V n");
result.add("ci-\tvi-\tli-\tza-\ttions", "s I\tv I\tl V\tz eI\tS V n z");
result.add("ci-\tvi-\tlian", "s V\tv I l\tj V n");
result.add("ci-\tvi-\tlians", "s V\tv I l\tj V n z");
result.add("ci-\tvi-\tlize", "s I\tv I\tl aI z");
result.add("ci-\tvi-\tlized", "s I\tv I\tl aI z d");
result.add("ci-\tvic", "s I\tv I k");
result.add("ci-\tvics", "s I\tv I k s");
result.add("ci-\tvil", "s I\tv I l");
result.add("ci-\tvil-\tly", "s I\tv I\tl i:");
result.add("ciar-\tdi", "tS @r\td i:");
result.add("cid", "s I d");
result.add("cie", "s i:");
result.add("ciel", "s i: l");
result.add("cin-\tcin-\tna-\tti", "s I n\ts I\tn {\tt i:");
result.add("cin-\tcin-\tna-\tti's", "s I n\ts I\tn {\tt i: z");
result.add("cin-\tde-\trel-\tla", "s I n\td @r\te\tl V");
result.add("cin-\tder", "s I n\td @r");
result.add("cin-\tders", "s I n\td @r z");
result.add("cin-\tdie", "s aI n\td i:");
result.add("cin-\tdy", "s I n\td i:");
result.add("cin-\tdy's", "s I n\td i: z");
result.add("cin-\tna-\tbar", "s I\tn V\tb Q@");
result.add("cin-\tna-\tmon", "s I\tn V\tm V n");
result.add("cinch", "s I n tS");
result.add("cinched", "s I n tS t");
result.add("cinque", "s I N k");
result.add("cir-\tc-\tling", "s @r\tk V\tl I N");
result.add("cir-\tca", "s @r\tk V");
result.add("cir-\tca-\tdi-\tan", "s @r\tk eI\td i:\tV n");
result.add("cir-\tcle", "s @r\tk V l");
result.add("cir-\tcled", "s @r\tk V l d");
result.add("cir-\tcles", "s @r\tk V l z");
result.add("cir-\tcle's", "s @r\tk V l z");
result.add("cir-\tcu-\ti-\ttous", "s @r k\tj u:\tI\tt V s");
result.add("cir-\tcu-\tla-\tted", "s @r k\tj V\tl eI\tt V d");
result.add("cir-\tcu-\tla-\tting", "s @r k\tj V\tl eI\tt I N");
result.add("cir-\tcu-\tla-\ttion", "s @r k\tj V\tl eI\tS V n");
result.add("cir-\tcu-\tla-\ttions", "s @r k\tj V\tl eI\tS V n z");
result.add("cir-\tcu-\tla-\tto-\try", "s @r k\tj V\tl V\tt O@\ti:");
result.add("cir-\tcu-\tlar", "s @r k\tj V\tl @r");
result.add("cir-\tcu-\tlar-\tly", "s @r k\tj V\tl @r\tl i:");
result.add("cir-\tcu-\tlars", "s @r k\tj V\tl @r z");
result.add("cir-\tcu-\tlate", "s @r k\tj V\tl eI t");
result.add("cir-\tcu-\tlates", "s @r k\tj V\tl eI t s");
result.add("cir-\tcu-\tses", "s @r\tk V\ts V z");
result.add("cir-\tcu-\ts's", "s @r\tk V\ts V z");
result.add("cir-\tcui-\tted", "s @r\tk I\tt V d");
result.add("cir-\tcuit", "s @r\tk I t");
result.add("cir-\tcuit-\try", "s @r\tk I t\tr i:");
result.add("cir-\tcuits", "s @r\tk I t s");
result.add("cir-\tcuit's", "s @r\tk I t s");
result.add("cir-\tcum-\tci-\tsion", "s @r\tk V m\ts I\tZ V n");
result.add("cir-\tcum-\tcise", "s @r\tk V m\ts aI z");
result.add("cir-\tcum-\tcised", "s @r\tk V m\ts aI z d");
result.add("cir-\tcum-\tscribe", "s @r\tk V m\ts k r aI b");
result.add("cir-\tcum-\tscribed", "s @r\tk V m\ts k r aI b d");
result.add("cir-\tcum-\tstan-\tces", "s @r\tk V m\ts t { n\ts V z");
result.add("cir-\tcum-\tstan-\ttial", "s @r\tk V m\ts t { n\ttS V l");
result.add("cir-\tcum-\tstan-\ttial-\tly", "s @r\tk V m\ts t { n\ttS V\tl i:");
result.add("cir-\tcum-\tstance", "s @r\tk V m\ts t { n s");
result.add("cir-\tcum-\tven-\tted", "s @r\tk V m\tv e n\tt V d");
result.add("cir-\tcum-\tven-\tting", "s @r\tk V m\tv e n\tt I N");
result.add("cir-\tcum-\tven-\ttion", "s @r\tk V m\tv e n\ttS V n");
result.add("cir-\tcum-\tvent", "s @r\tk V m\tv e n t");
result.add("cir-\tcum-\tvents", "s @r\tk V m\tv e n t s");
result.add("cir-\tcumfe-\trence", "s @r\tk V m\tf r V n s");
result.add("cir-\tcums-\tpec-\ttion", "s @r\tk V m\ts p e k\tS V n");
result.add("cir-\tcums-\tpect", "s @r\tk V m\ts p e k t");
result.add("cir-\tcus", "s @r\tk V s");
result.add("cir-\trho-\tsis", "s @r\t@U\ts I s");
result.add("cir-\trus", "s I@\tV s");
result.add("cirque", "s @r k");
result.add("cis-\tco", "s I s\tk @U");
result.add("cis-\tco's", "s I s\tk @U z");
result.add("cis-\tkei", "s I s\tk eI");
result.add("cis-\tne-\tros", "s I s\tn e@\t@U s");
result.add("cis-\tsie", "s I\ts i:");
result.add("cist", "s I s t");
result.add("cit-\tric", "s I t\tr I k");
result.add("cit-\trin", "s I t\tr I n");
result.add("cit-\trine", "s I t\tr i: n");
result.add("cit-\tro-\tnel-\tla", "s I t\tr Q\tn e\tl V");
result.add("cit-\troen", "s I t\tr @U n");
result.add("cit-\tron", "s I t\tr V n");
result.add("cit-\tron's", "s I t\tr V n z");
result.add("cit-\tru-\ts's", "s I t\tr V\ts V z");
result.add("cit-\trus", "s I t\tr V s");
result.add("cla-\tbo", "kh l Q\tb @U");
result.add("cla-\tflin", "kh l { f\tl I n");
result.add("cla-\tmor", "kh l {\tm @r");
result.add("cla-\tmor-\ting", "kh l {\tm @r\tI N");
result.add("cla-\tmored", "kh l {\tm @r d");
result.add("cla-\tpham", "kh l {\tf V m");
result.add("cla-\tra", "kh l {\tr V");
result.add("cla-\tra-\tbelle", "kh l {\tr V\tb e l");
result.add("cla-\tra-\tmae", "kh l Q@\tQ\tm aI");
result.add("cla-\tren-\tdon", "kh l e@\tV n\td V n");
result.add("cla-\trence", "kh l e@\tV n s");
result.add("cla-\tres-\tta", "kh l Q@\te s\tt V");
result.add("cla-\trette", "kh l @r\te t");
result.add("cla-\trey", "kh l {\tr i:");
result.add("cla-\tri-\tbel", "kh l e@\tI\tb e l");
result.add("cla-\tri-\tfi-\tca-\ttion", "kh l e@\tI\tf I\tk eI\tS V n");
result.add("cla-\tri-\tfi-\tca-\ttions", "kh l e@\tI\tf I\tk eI\tS V n z");
result.add("cla-\tri-\tfied", "kh l e@\tI\tf aI d");
result.add("cla-\tri-\tfies", "kh l e@\tI\tf aI z");
result.add("cla-\tri-\tfy", "kh l e@\tI\tf aI");
result.add("cla-\tri-\tfy-\ting", "kh l e@\tI\tf aI\tI N");
result.add("cla-\tri-\tne-\ttist", "kh l e@\tI\tn e\tt I s t");
result.add("cla-\tri-\tne-\ttists", "kh l e@\tI\tn e\tt I s t s");
result.add("cla-\tri-\tnet", "kh l e@\tI\tn e t");
result.add("cla-\tri-\ton", "kh l e@\ti:\tV n");
result.add("cla-\tri-\tta", "kh l Q@\ti:\tt V");
result.add("cla-\tri-\tty", "kh l e@\tI\tt i:");
result.add("cla-\trice", "kh l @r\ti: s");
result.add("cla-\trin-\tda", "kh l @r\tI n\td V");
result.add("cla-\trine", "kh l e@\ti: n");
result.add("cla-\tris-\tsa", "kh l @r\tI\ts V");
result.add("cla-\trisse", "kh l {\tr i: s");
result.add("cla-\tro", "kh l Q@\t@U");
result.add("cla-\try", "kh l e@\ti:");
result.add("cla-\tshes", "kh l {\tS V z");
result.add("cla-\tshing", "kh l {\tS I N");
result.add("cla-\tvi-\tchord", "kh l {\tv I\tk O@ d");
result.add("cla-\tvi-\tcle", "kh l {\tv I\tk V l");
result.add("cla-\twing", "kh l O:\tI N");
result.add("cla-\txon", "kh l { k\ts V n");
result.add("cla-\tyey", "kh l eI\ti:");
result.add("clac-\tka-\tmas", "kh l {\tk V\tm V s");
result.add("clack", "kh l { k");
result.add("clad", "kh l { d");
result.add("clad-\tdagh", "kh l {\td V");
result.add("claes", "kh l eI z");
result.add("clai-\tborn", "kh l eI\tb @r n");
result.add("clai-\tborne", "kh l eI\tb @r n");
result.add("clai-\tborne's", "kh l eI\tb O@ n z");
result.add("clai-\tmant", "kh l eI\tm V n t");
result.add("clai-\tmants", "kh l eI\tm V n t s");
result.add("clai-\tming", "kh l eI\tm I N");
result.add("clai-\trol", "kh l e@\tQ l");
result.add("claim", "kh l eI m");
result.add("claimed", "kh l eI m d");
result.add("claims", "kh l eI m z");
result.add("clair", "kh l e@");
result.add("clair-\tvo-\tyance", "kh l e@\tv OI\tV n s");
result.add("clair-\tvo-\tyant", "kh l e@\tv OI\tV n t");
result.add("claire", "kh l e@");
result.add("claire's", "kh l e@ z");
result.add("clam", "kh l { m");
result.add("clam-\tber", "kh l { m\tb @r");
result.add("clam-\tbered", "kh l { m\tb @r d");
result.add("clam-\tmy", "kh l {\tm i:");
result.add("clam-\tpdown", "kh l { m\tp d aU n");
result.add("clam-\tping", "kh l { m\tp I N");
result.add("clam-\tshell", "kh l { m\tS e l");
result.add("clamp", "kh l { m p");
result.add("clamped", "kh l { m p t");
result.add("clamps", "kh l { m p s");
result.add("clams", "kh l { m z");
result.add("clan", "kh l { n");
result.add("clan-\tcy", "kh l { n\ts i:");
result.add("clan-\tcy's", "kh l { n\ts i: z");
result.add("clan-\tdes-\ttine", "kh l { n\td e s\tt V n");
result.add("clan-\tdes-\ttine-\tly", "kh l { n\td e s\tt V n\tl i:");
result.add("clan-\tging", "kh l {\tN I N");
result.add("clan-\tking", "kh l { N\tk I N");
result.add("clan-\tnish", "kh l {\tn I S");
result.add("clan-\tton", "kh l { n\tt V n");
result.add("clang", "kh l { N");
result.add("clank", "kh l { N k");
result.add("clans", "kh l { n z");
result.add("clap", "kh l { p");
result.add("clap-\tboard", "kh l { p\tb O@ d");
result.add("clap-\tboards", "kh l { p\tb O@ d z");
result.add("clap-\tper", "kh l {\tp @r");
result.add("clap-\tping", "kh l {\tp I N");
result.add("clap-\tton", "kh l { p\tt V n");
result.add("clap-\tton's", "kh l { p\tt V n z");
result.add("clapp", "kh l { p");
result.add("clapped", "kh l { p t");
result.add("claps", "kh l { p s");
result.add("clar", "kh l Q@");
result.add("clar-\tdy", "kh l Q@\td i:");
result.add("clar-\tkin", "kh l Q@\tk I n");
result.add("clar-\tridge", "kh l {\tr I dZ");
result.add("clare", "kh l e@");
result.add("clare-\tmont", "kh l e@\tm Q n t");
result.add("clark", "kh l Q@ k");
result.add("clark-\tson", "kh l Q@ k\ts V n");
result.add("clark-\tston", "kh l Q@ k\ts t V n");
result.add("clark-\tsville", "kh l Q@ k\ts v I l");
result.add("clarke", "kh l Q@ k");
result.add("clarke's", "kh l Q@ k s");
result.add("clarks", "kh l Q@ k s");
result.add("clark's", "kh l Q@ k s");
result.add("clarks-\tburg", "kh l Q@ k\ts b @r g");
result.add("clas-\tses", "kh l {\ts V z");
result.add("clas-\tsi-\tcal", "kh l {\ts I\tk V l");
result.add("clas-\tsi-\tci-\tsm", "kh l {\ts V\ts I\tz V m");
result.add("clas-\tsi-\tcist", "kh l {\ts V\ts V s t");
result.add("clas-\tsi-\ter", "kh l {\ts i:\t@r");
result.add("clas-\tsi-\tfi-\ta-\tble", "kh l {\ts I\tf aI\tV\tb V l");
result.add("clas-\tsi-\tfi-\tca-\ttion", "kh l {\ts I\tf I\tk eI\tS V n");
result.add("clas-\tsi-\tfi-\tcat-\tions", "kh l {\ts I\tf I\tk eI\tS V n z");
result.add("clas-\tsi-\tfied", "kh l {\ts I\tf aI d");
result.add("clas-\tsi-\tfies", "kh l {\ts I\tf aI z");
result.add("clas-\tsi-\tfy", "kh l {\ts I\tf aI");
result.add("clas-\tsi-\tfy-\ting", "kh l {\ts I\tf aI\tI N");
result.add("clas-\tsic", "kh l {\ts I k");
result.add("clas-\tsical-\tly", "kh l {\ts I k\tl i:");
result.add("clas-\tsics", "kh l {\ts I k s");
result.add("clas-\tsing", "kh l {\ts I N");
result.add("clas-\tson", "kh l {\ts V n");
result.add("clas-\ts's", "kh l {\ts V z");
result.add("clas-\tsy", "kh l {\ts i:");
result.add("clash", "kh l { S");
result.add("clashed", "kh l { S t");
result.add("clasp", "kh l { s p");
result.add("clasped", "kh l { s p t");
result.add("class", "kh l { s");
result.add("class-\tless", "kh l { s\tl V s");
result.add("class-\tmate", "kh l { s\tm eI t");
result.add("class-\tmates", "kh l { s\tm eI t s");
result.add("class-\troom", "kh l { s\tr u: m");
result.add("class-\trooms", "kh l { s\tr u: m z");
result.add("classed", "kh l { s t");
result.add("clat-\tter", "kh l {\tt @r");
result.add("clau-\tdette", "kh l @U\td e t");
result.add("clau-\tdi-\ta", "kh l O:\td i:\tV");
result.add("clau-\tdi-\tan", "kh l O:\td i:\tV n");
result.add("clau-\tdi-\tna", "kh l O:\td i:\tn V");
result.add("clau-\tdi-\to", "kh l O:\td i:\t@U");
result.add("clau-\tdi-\tus", "kh l O:\td i:\tV s");
result.add("clau-\tdie", "kh l O:\td i:");
result.add("clau-\tdine", "kh l O:\td i: n");
result.add("clau-\tsen", "kh l aU\ts V n");
result.add("clau-\tses", "kh l O:\tz V z");
result.add("claud", "kh l O: d");
result.add("claude", "kh l O: d");
result.add("claunch", "kh l O: n tS");
result.add("claus", "kh l O: z");
result.add("claus-\ttro-\tpho-\tbi-\ta", "kh l O: s\tt r V\tf @U\tb i:\tV");
result.add("claus-\ttro-\tpho-\tbic", "kh l O: s\tt r V\tf @U\tb I k");
result.add("clause", "kh l O: z");
result.add("claw", "kh l O:");
result.add("claw-\tson", "kh l O:\ts V n");
result.add("clawed", "kh l O: d");
result.add("claws", "kh l O: z");
result.add("clax-\tton", "kh l { k\ts t V n");
result.add("clay", "kh l eI");
result.add("clay-\tborn", "kh l eI\tb @r n");
result.add("clay-\tborne", "kh l eI\tb @r n");
result.add("clay-\tbourne", "kh l eI\tb @r n");
result.add("clay-\tma-\ttion", "kh l eI\tm eI\tS V n");
result.add("clay-\tman", "kh l eI\tm V n");
result.add("clay-\tmont", "kh l eI\tm Q n t");
result.add("clay-\tmore", "kh l eI\tm O@");
result.add("clay-\tpool", "kh l eI\tp u: l");
result.add("clay-\tson", "kh l eI\tz V n");
result.add("clay-\tton", "kh l eI\tt V n");
result.add("clay-\tton's", "kh l eI\tt V n z");
result.add("clays", "kh l eI z");
result.add("cle-\tland", "kh l e\tl V n d");
result.add("cle-\tma-\ttis", "kh l e\tm V\tt I s");
result.add("cle-\tmen", "kh l e\tm V n");
result.add("cle-\tmen-\tcy", "kh l e\tm V n\ts i:");
result.add("cle-\tmen-\tte", "kh l V\tm e n\tt eI");
result.add("cle-\tmen-\tti", "kh l eI\tm eI n\tt i:");
result.add("cle-\tmen-\ttia", "kh l eI\tm eI n\tS V");
result.add("cle-\tmen-\ttine", "kh l e\tm V n\tt aI n");
result.add("cle-\tmence", "kh l e\tm V n s");
result.add("cle-\tmens", "kh l e\tm V n z");
result.add("cle-\tment", "kh l e\tm V n t");
result.add("cle-\tments", "kh l e\tm V n t s");
result.add("cle-\tmons", "kh l e\tm V n z");
result.add("cle-\to", "kh l i:\t@U");
result.add("cle-\to-\tpat-\tra", "kh l i:\tV\tp { t\tr V");
result.add("cle-\to-\tpat-\tra's", "kh l i:\tV\tp { t\tr V z");
result.add("cle-\tri-\tcal", "kh l e@\tI\tk V l");
result.add("cle-\tric", "kh l e@\tI k");
result.add("cle-\trics", "kh l e@\tI k s");
result.add("cle-\tris-\tsa", "kh l @r\ti:\ts V");
result.add("cle-\tva", "kh l i:\tv V");
result.add("cle-\tven-\tger", "kh l e\tv V n\tdZ @r");
result.add("cle-\tver", "kh l e\tv @r");
result.add("cle-\tver-\tly", "kh l e\tv @r\tl i:");
result.add("cle-\tver-\tness", "kh l e\tv @r\tn V s");
result.add("cle-\tvie", "kh l i:\tv i:");
result.add("clea-\tner", "kh l i:\tn @r");
result.add("clea-\tners", "kh l i:\tn @r z");
result.add("clea-\tnest", "kh l i:\tn V s t");
result.add("clea-\tning", "kh l i:\tn I N");
result.add("clea-\tnup", "kh l i:\tn V p");
result.add("clea-\tnups", "kh l i:\tn V p s");
result.add("clea-\tran-\tces", "kh l I@\tV n\ts V z");
result.add("clea-\trance", "kh l I@\tV n s");
result.add("clea-\trer", "kh l I@\t@r");
result.add("clea-\trest", "kh l I@\tI s t");
result.add("clea-\tring", "kh l I@\tI N");
result.add("clea-\tring-\thou-\tses", "kh l i:\tr I N\th aU\ts V z");
result.add("clea-\tring-\thouse", "kh l I@\tI N\th aU s");
result.add("clea-\try", "kh l I@\ti:");
result.add("clea-\tvage", "kh l i:\tv V dZ");
result.add("clea-\tver", "kh l i:\tv @r");
result.add("clean", "kh l i: n");
result.add("clean-\tli-\tness", "kh l e n\tl i:\tn V s");
result.add("clean-\tly", "kh l i: n\tl i:");
result.add("clean-\tness", "kh l i: n\tn V s");
result.add("clean-\tser", "kh l e n\tz @r");
result.add("clean-\tsers", "kh l e n\tz @r z");
result.add("clean-\tsing", "kh l e n\tz I N");
result.add("clean-\ttha", "kh l i: n\tT V");
result.add("cleaned", "kh l i: n d");
result.add("cleans", "kh l i: n z");
result.add("cleanse", "kh l e n z");
result.add("cleansed", "kh l e n z d");
result.add("clear", "kh l I@");
result.add("clear-\tcut", "kh l I@\tk V t");
result.add("clear-\tcut-\tting", "kh l I@\tk V\tt I N");
result.add("clear-\tcuts", "kh l I@\tk V t s");
result.add("clear-\tly", "kh l I@\tl i:");
result.add("clear-\twa-\tter", "kh l I@\tw O:\tt @r");
result.add("cleared", "kh l I@ d");
result.add("clears", "kh l I@ z");
result.add("cleat", "kh l i: t");
result.add("cleats", "kh l i: t s");
result.add("cleave", "kh l i: v");
result.add("cleaves", "kh l i: v z");
result.add("cleek", "kh l i: k");
result.add("cleese", "kh l i: s");
result.add("clef", "kh l e f");
result.add("cleft", "kh l e f t");
result.add("cleg-\thorn", "kh l e g\th @r n");
result.add("clegg", "kh l e g");
result.add("clem", "kh l e m");
result.add("clem-\tmie", "kh l e\tm i:");
result.add("clem-\tmons", "kh l e\tm V n z");
result.add("clem-\tmy", "kh l e\tm i:");
result.add("clem-\tson", "kh l e m\ts V n");
result.add("clen-\tcher", "kh l e n\ttS @r");
result.add("clen-\tches", "kh l e n\ttS V z");
result.add("clen-\tde-\tnin", "kh l e n\td e\tn I n");
result.add("clench", "kh l e n tS");
result.add("clenched", "kh l e n tS t");
result.add("cler-\tgy", "kh l @r\tdZ i:");
result.add("cler-\tgy-\tman", "kh l @r\tdZ i:\tm V n");
result.add("cler-\tgy-\tmen", "kh l @r\tdZ i:\tm e n");
result.add("cler-\tmont", "kh l e@\tm Q n t");
result.add("clerc", "kh l @r k");
result.add("clercq", "kh l @r k");
result.add("clerk", "kh l @r k");
result.add("clerks", "kh l @r k s");
result.add("clerk's", "kh l @r k s");
result.add("cleve", "kh l i: v");
result.add("cleve-\tlan-\tder", "kh l i: v\tl V n\td @r");
result.add("cleve-\tlan-\tders", "kh l i: v\tl V n\td @r z");
result.add("cleve-\tland", "kh l i: v\tl V n d");
result.add("cleve-\tland's", "kh l i: v\tl V n d z");
result.add("clews", "kh l u: z");
result.add("cli-\tburn", "kh l aI\tb @r n");
result.add("cli-\tche", "kh l i:\tS eI");
result.add("cli-\tched", "kh l i:\tS eI d");
result.add("cli-\tches", "kh l i:\tS eI z");
result.add("cli-\ten-\ttele", "kh l aI\tV n\tt e l");
result.add("cli-\tent", "kh l aI\tV n t");
result.add("cli-\tents", "kh l aI\tV n t s");
result.add("cli-\tent's", "kh l aI\tV n t s");
result.add("cli-\tma-\ttic", "kh l aI\tm {\tt I k");
result.add("cli-\tma-\tto-\tlo-\tgist", "kh l I\tm V\tt Q\tl V\tdZ I s t");
result.add("cli-\tma-\txes", "kh l I\tm { k\ts V z");
result.add("cli-\tmac-\ttic", "kh l aI\tm { k\tt I k");
result.add("cli-\tmate", "kh l aI\tm V t");
result.add("cli-\tmates", "kh l aI\tm V t s");
result.add("cli-\tmax", "kh l aI\tm { k s");
result.add("cli-\tmaxed", "kh l aI\tm { k s t");
result.add("cli-\tni-\tcal", "kh l I\tn I\tk V l");
result.add("cli-\tni-\tcal-\tly", "kh l I\tn I\tk V\tl i:");
result.add("cli-\tni-\tcian", "kh l V\tn I\tS V n");
result.add("cli-\tni-\tcians", "kh l V\tn I\tS V n z");
result.add("cli-\tnic", "kh l I\tn I k");
result.add("cli-\tnics", "kh l I\tn I k s");
result.add("cli-\tnic's", "kh l I\tn I k s");
result.add("cli-\to", "kh l i:\t@U");
result.add("cli-\tto-\tris", "kh l aI\tt O@\tI s");
result.add("cli-\tver", "kh l aI\tv @r");
result.add("clic-\tker", "kh l I\tk @r");
result.add("clic-\tking", "kh l I\tk I N");
result.add("click", "kh l I k");
result.add("clicked", "kh l I k t");
result.add("clicks", "kh l I k s");
result.add("clif-\tford", "kh l I\tf @r d");
result.add("clif-\tford's", "kh l I\tf @r d z");
result.add("clif-\tton", "kh l I f\tt V n");
result.add("cliff", "kh l I f");
result.add("cliff-\than-\tger", "kh l I f\th {\tN @r");
result.add("cliff-\than-\tgers", "kh l I f\th {\tN @r z");
result.add("cliffs", "kh l I f s");
result.add("cliff's", "kh l I f s");
result.add("clift", "kh l I f t");
result.add("clim", "kh l I m");
result.add("clim-\tber", "kh l aI\tm @r");
result.add("clim-\tbers", "kh l aI\tm @r z");
result.add("clim-\tbing", "kh l aI\tm I N");
result.add("climb", "kh l aI m");
result.add("climbed", "kh l aI m d");
result.add("climbs", "kh l aI m z");
result.add("climes", "kh l aI m z");
result.add("clin-\tcher", "kh l I n\ttS @r");
result.add("clin-\tches", "kh l I n\ttS V z");
result.add("clin-\tching", "kh l I n\ttS I N");
result.add("clin-\tgan", "kh l I N\tg V n");
result.add("clin-\tger", "kh l I\tN @r");
result.add("clin-\tging", "kh l I\tN I N");
result.add("clin-\tto-\tnite", "kh l I n\tt V\tn aI t");
result.add("clin-\tton", "kh l I n\tt V n");
result.add("clin-\tton's", "kh l I n\tt V n z");
result.add("clinch", "kh l I n tS");
result.add("clinched", "kh l I n tS t");
result.add("cline", "kh l aI n");
result.add("clines", "kh l aI n z");
result.add("cling", "kh l I N");
result.add("clings", "kh l I N z");
result.add("clink", "kh l I N k");
result.add("clint", "kh l I n t");
result.add("clip", "kh l I p");
result.add("clip-\tboard", "kh l I p\tb O@ d");
result.add("clive", "kh l aI v");
result.add("clo-\tmi-\tpra-\tmine", "kh l @U\tm I p\tr V\tm aI n");
result.add("clo-\tni-\tdine", "kh l Q\tn I\td i: n");
result.add("clo-\tning", "kh l @U\tn I N");
result.add("clo-\trin-\tda", "kh l O@\ti: n\td V");
result.add("clo-\trox", "kh l O@\tQ k s");
result.add("clo-\tse-\tted", "kh l Q\tz V\tt V d");
result.add("clo-\tser", "kh l @U\ts @r");
result.add("clo-\tses", "kh l @U\tz V z");
result.add("clo-\tsest", "kh l @U\ts V s t");
result.add("clo-\tset", "kh l Q\tz V t");
result.add("clo-\tsets", "kh l Q\tz V t s");
result.add("clo-\tsing", "kh l @U\tz I N");
result.add("clo-\tsings", "kh l @U\tz I N z");
result.add("clo-\tsure", "kh l @U\tZ @r");
result.add("clo-\tsures", "kh l @U\tZ @r z");
result.add("clo-\tthier", "kh l @U D\tj @r");
result.add("clo-\tthiers", "kh l @U D\tj @r z");
result.add("clo-\tthil-\tda", "kh l V\tT I l\td V");
result.add("clo-\tthilde", "kh l Q\tT I l d");
result.add("clo-\tthing", "kh l @U\tD I N");
result.add("clo-\ttil-\tda", "kh l V\tt I l\td V");
result.add("clo-\tture", "kh l @U\ttS @r");
result.add("clo-\tver", "kh l @U\tv @r");
result.add("clo-\tver-\tleaf", "kh l @U\tv @r\tl i: f");
result.add("clo-\tvis", "kh l @U\tv I s");
result.add("clo-\twer", "kh l aU\t@r");
result.add("clo-\tza-\tpine", "kh l @U\tz V\tp aI n");
result.add("cloa-\tking", "kh l @U\tk I N");
result.add("cloak", "kh l @U k");
result.add("cloak-\troom", "kh l @U k\tr u: m");
result.add("cloaked", "kh l @U k t");
result.add("clob-\tber", "kh l Q\tb @r");
result.add("clob-\tber-\ting", "kh l Q\tb @r\tI N");
result.add("clob-\tbered", "kh l Q\tb @r d");
result.add("cloc-\tker", "kh l Q\tk @r");
result.add("cloc-\tkers", "kh l Q\tk @r z");
result.add("clock", "kh l Q k");
result.add("clock-\twise", "kh l Q k\tw aI z");
result.add("clock-\twork", "kh l Q k\tw @r k");
result.add("clocked", "kh l Q k t");
result.add("clocks", "kh l Q k s");
result.add("clock's", "kh l Q k s");
result.add("cloe", "kh l @U");
result.add("clog", "kh l Q g");
result.add("clog-\tging", "kh l Q\tg I N");
result.add("clogged", "kh l O: g d");
result.add("clogs", "kh l Q g z");
result.add("clois-\tter", "kh l OI s\tt @r");
result.add("clois-\ttered", "kh l OI s\tt @r d");
result.add("clois-\tters", "kh l OI s\tt @r z");
result.add("cloke", "kh l @U k");
result.add("clone", "kh l @U n");
result.add("cloned", "kh l @U n d");
result.add("clones", "kh l @U n z");
result.add("cloo-\ttie", "kh l u:\tt i:");
result.add("clop-\tton", "kh l Q p\tt V n");
result.add("clos", "kh l Q s");
result.add("close", "kh l @U s");
result.add("close-\tdown", "kh l @U z\td aU n");
result.add("close-\tdowns", "kh l @U z\td aU n z");
result.add("close-\tly", "kh l @U s\tl i:");
result.add("close-\tness", "kh l @U s\tn V s");
result.add("close-\tup", "kh l @U\ts V p");
result.add("close-\tups", "kh l @U\ts V p s");
result.add("closed", "kh l @U z d");
result.add("clot", "kh l Q t");
result.add("clot-\tted", "kh l Q\tt V d");
result.add("clot-\tting", "kh l Q\tt I N");
result.add("cloth", "kh l O: T");
result.add("clothe", "kh l @U D");
result.add("clothe-\tshorse", "kh l @U z\th O@ s");
result.add("clothed", "kh l @U D d");
result.add("clothes", "kh l @U D z");
result.add("cloths", "kh l O: T s");
result.add("clots", "kh l Q t s");
result.add("clou-\tded", "kh l aU\td V d");
result.add("clou-\tdi-\tness", "kh l aU\td i:\tn V s");
result.add("clou-\tding", "kh l aU\td I N");
result.add("clou-\tdy", "kh l aU\td i:");
result.add("cloud", "kh l aU d");
result.add("cloud-\tburst", "kh l aU d\tb @r s t");
result.add("cloud-\tless", "kh l aU d\tl V s");
result.add("clouds", "kh l aU d z");
result.add("clough", "kh l aU");
result.add("clout", "kh l aU t");
result.add("cloves", "kh l @U v z");
result.add("clow", "kh l @U");
result.add("clow-\tning", "kh l aU\tn I N");
result.add("clown", "kh l aU n");
result.add("clowns", "kh l aU n z");
result.add("cloy", "kh l OI");
result.add("cloy-\ting", "kh l OI\tI N");
result.add("clu-\tny", "kh l u:\tn i:");
result.add("club", "kh l V b");
result.add("club-\tbing", "kh l V\tb I N");
result.add("club-\tby", "kh l V\tb i:");
result.add("club-\thou-\tses", "kh l V b\th aU\ts V z");
result.add("club-\thouse", "kh l V b\th aU s");
result.add("clubb", "kh l V b");
result.add("clubbed", "kh l V b d");
result.add("clubs", "kh l V b z");
result.add("club's", "kh l V b z");
result.add("cluc-\tking", "kh l V\tk I N");
result.add("cluck", "kh l V k");
result.add("clucks", "kh l V k s");
result.add("clue", "kh l u:");
result.add("clue-\tless", "kh l u:\tl V s");
result.add("clued", "kh l u: d");
result.add("clues", "kh l u: z");
result.add("cluff", "kh l V f");
result.add("cluj", "kh l u: dZ");
result.add("clum", "kh l V m");
result.add("clum-\tping", "kh l V m\tp I N");
result.add("clum-\tpy", "kh l V m\tp i:");
result.add("clum-\tsi-\tly", "kh l V m\ts I\tl i:");
result.add("clum-\tsi-\tness", "kh l V m\tz i:\tn V s");
result.add("clum-\tsy", "kh l V m\tz i:");
result.add("clump", "kh l V m p");
result.add("clumps", "kh l V m p s");
result.add("clun-\tker", "kh l V N\tk @r");
result.add("clun-\tkers", "kh l V N\tk @r z");
result.add("clun-\tky", "kh l V N\tk i:");
result.add("clune", "kh l u: n");
result.add("clung", "kh l V N");
result.add("clunk", "kh l V N k");
result.add("clunks", "kh l V N k s");
result.add("clus-\tte-\tring", "kh l V s\tt @r\tI N");
result.add("clus-\tter", "kh l V s\tt @r");
result.add("clus-\ttered", "kh l V s\tt @r d");
result.add("clus-\tters", "kh l V s\tt @r z");
result.add("clut-\tches", "kh l V\ttS V z");
result.add("clut-\tching", "kh l V\ttS I N");
result.add("clut-\tte-\tring", "kh l V\tt @r\tI N");
result.add("clut-\tter", "kh l V\tt @r");
result.add("clut-\ttered", "kh l V\tt @r d");
result.add("clutch", "kh l V tS");
result.add("clutched", "kh l V tS t");
result.add("clute", "kh l u: t");
result.add("cly-\tmene", "kh l I\tm i: n");
result.add("cly-\tmer", "kh l aI\tm @r");
result.add("cly-\ttie", "kh l I\tt i:");
result.add("clyde", "kh l aI d");
result.add("clydes-\tdale", "kh l aI d\tz d eI l");
result.add("clyte", "kh l aI t");
result.add("clyve", "kh l aI v");
result.add("co", "kh @U");
result.add("co-\ta-\tgu-\tla-\tting", "kh @U\t{ g\tj V\tl eI\tt I N");
result.add("co-\ta-\tgu-\tla-\ttion", "kh @U\t{ g\tj V\tl eI\tS V n");
result.add("co-\ta-\tgu-\tlate", "kh @U\t{ g\tj V\tl eI t");
result.add("co-\ta-\tles-\tcing", "kh @U\tV\tl e\ts I N");
result.add("co-\ta-\tlesce", "kh @U\tV\tl e s");
result.add("co-\ta-\tlesced", "kh @U\tV\tl e s t");
result.add("co-\ta-\tli-\ttion", "kh @U\tV\tl I\tS V n");
result.add("co-\ta-\tli-\ttions", "kh @U\tV\tl I\tS V n z");
result.add("co-\ta-\tli-\ttion's", "kh @U\tV\tl I\tS V n z");
result.add("co-\ta-\txi-\tal", "kh @U\t{ k\ts i:\tV l");
result.add("co-\tau-\tthor", "kh @U\tQ\tT @r");
result.add("co-\tau-\tthors", "kh @U\tQ\tT @r z");
result.add("co-\tbain", "kh @U\tb eI n");
result.add("co-\tbain's", "kh @U\tb eI n z");
result.add("co-\tbalt", "kh @U\tb O: l t");
result.add("co-\tben", "kh @U\tb V n");
result.add("co-\tbi-\ta", "kh @U\tb i:\tV");
result.add("co-\tble", "kh @U\tb V l");
result.add("co-\tburn", "kh @U\tb @r n");
result.add("co-\tca", "kh @U\tk V");
result.add("co-\tcaine", "kh @U\tk eI n");
result.add("co-\tchair-\tman", "kh @U\ttS e@\tm V n");
result.add("co-\tchin", "kh @U\ttS I n");
result.add("co-\tco", "kh @U\tk @U");
result.add("co-\tco-\tni-\tno", "kh @U\tk V\tn i:\tn @U");
result.add("co-\tco-\tnut", "kh @U\tk V\tn V t");
result.add("co-\tco-\tnuts", "kh @U\tk V\tn V t s");
result.add("co-\tcoa", "kh @U\tk @U");
result.add("co-\tcoa-\tnuts", "kh @U\tk @U\tn V t s");
result.add("co-\tcom", "kh @U\tk Q m");
result.add("co-\tcoo-\tning", "kh V\tk u:\tn I N");
result.add("co-\tcoon", "kh V\tk u: n");
result.add("co-\tcoons", "kh V\tk u: n z");
result.add("co-\tcos", "kh @U\tk @U z");
result.add("co-\tda", "kh @U\td V");
result.add("co-\tded", "kh @U\td V d");
result.add("co-\tder", "kh @U\td @r");
result.add("co-\tdi-\tfi-\tca-\ttion", "kh Q\td I\tf I\tk eI\tS V n");
result.add("co-\tdi-\tfied", "kh Q\td I\tf aI d");
result.add("co-\tdi-\tfies", "kh @U\td V\tf aI z");
result.add("co-\tdi-\tfy", "kh @U\td V\tf aI");
result.add("co-\tdi-\tfy-\ting", "kh @U\td V\tf aI\tI N");
result.add("co-\tding", "kh @U\td I N");
result.add("co-\tdy", "kh @U\td i:");
result.add("co-\te-\tdu-\tca-\ttio-\tnal", "kh @U\te\tdZ V\tk eI\tS V\tn V l");
result.add("co-\te-\tqual", "kh @U\ti: k\tw V l");
result.add("co-\te-\txis-\tted", "kh @U\tV g\tz I s\tt V d");
result.add("co-\te-\txis-\ttence", "kh @U\tI g\tz I s\tt V n s");
result.add("co-\te-\txis-\tting", "kh @U\tI g\tz I s\tt I N");
result.add("co-\te-\txist", "kh @U\tV g\tz I s t");
result.add("co-\ted", "kh @U\te d");
result.add("co-\teds", "kh @U\te d z");
result.add("co-\tef-\tfi-\tcient", "kh @U\tV\tf I\tS V n t");
result.add("co-\tef-\tfi-\tcients", "kh @U\tV\tf I\tS V n t s");
result.add("co-\tel-\tho", "kh @U\te\tl @U");
result.add("co-\tel-\tlo", "kh @U\te\tl @U");
result.add("co-\ten-\tzyme", "kh @U\te n\tz aI m");
result.add("co-\ter-\tcing", "kh @U\t@r\ts I N");
result.add("co-\ter-\tcion", "kh @U\t@r\tS V n");
result.add("co-\ter-\tcive", "kh @U\t@r\ts I v");
result.add("co-\terce", "kh @U\t@r s");
result.add("co-\terced", "kh @U\t@r s t");
result.add("co-\tfield", "kh @U\tf i: l d");
result.add("co-\tfoun-\tder", "kh @U\tf aU n\td @r");
result.add("co-\tgan", "kh @U\tg V n");
result.add("co-\tge-\tne-\tra-\ttion", "kh @U\tdZ e\tn @r\teI\tS V n");
result.add("co-\tge-\tne-\tra-\ttor", "kh @U\tdZ e\tn @r\teI\tt @r");
result.add("co-\tge-\tne-\tra-\ttors", "kh @U\tdZ e\tn @r\teI\tt @r z");
result.add("co-\tgen-\tcy", "kh @U\tdZ V n\ts i:");
result.add("co-\tgent", "kh @U\tdZ V n t");
result.add("co-\tgi-\tta-\ttion", "kh Q\tdZ I\tt eI\tS V n");
result.add("co-\tgi-\ttate", "kh Q\tdZ I\tt eI t");
result.add("co-\tha-\tbi-\tta-\ttion", "kh @U\th {\tb I\tt eI\tS V n");
result.add("co-\tha-\tbi-\tting", "kh @U\th {\tb I\tt I N");
result.add("co-\tha-\tbit", "kh @U\th {\tb I t");
result.add("co-\than", "kh @U\th V n");
result.add("co-\thas-\tset", "kh @U\th {\ts V t");
result.add("co-\the-\trence", "kh @U\th I@\tV n s");
result.add("co-\the-\trent", "kh @U\th I@\tV n t");
result.add("co-\the-\trent-\tly", "kh @U\th i:\tr V n\tt l i:");
result.add("co-\the-\tsion", "kh @U\th i:\tZ V n");
result.add("co-\the-\tsive", "kh @U\th i:\ts I v");
result.add("co-\the-\tsive-\tly", "kh @U\th i:\ts I v\tl i:");
result.add("co-\the-\tsive-\tness", "kh @U\th i:\ts I v\tn V s");
result.add("co-\then", "kh @U\tV n");
result.add("co-\then's", "kh @U\tV n z");
result.add("co-\tho", "kh @U\th @U");
result.add("co-\thort", "kh @U\th O@ t");
result.add("co-\thorts", "kh @U\th O@ t s");
result.add("co-\thost", "kh @U\th @U s t");
result.add("co-\thosts", "kh @U\th @U s t s");
result.add("co-\tin-\tci-\tded", "kh @U\tI n\ts aI\td I d");
result.add("co-\tin-\tci-\tden-\tces", "kh @U\tI n\ts I\td e n\ts V z");
result.add("co-\tin-\tci-\tden-\ttal", "kh @U\tI n\ts I\td e n\tt V l");
result.add("co-\tin-\tci-\tden-\ttal-\tly", "kh @U\tI n\ts I\td e n\tt V\tl i:");
result.add("co-\tin-\tci-\tdence", "kh @U\tI n\ts I\td V n s");
result.add("co-\tin-\tci-\tdent", "kh @U\tI n\ts I\td V n t");
result.add("co-\tin-\tci-\tding", "kh @U\tI n\ts aI\td I N");
result.add("co-\tin-\tcide", "kh @U\tI n\ts aI d");
result.add("co-\tin-\tcides", "kh @U\tI n\ts aI d z");
result.add("co-\tin-\tsu-\trance", "kh @U\tI n\tS @r\tV n s");
result.add("co-\tker", "kh @U\tk @r");
result.add("co-\tkie", "kh @U\tk i:");
result.add("co-\tking", "kh @U\tk I N");
result.add("co-\tla", "kh @U\tl V");
result.add("co-\tlan", "kh @U\tl V n");
result.add("co-\tlas", "kh @U\tl V s");
result.add("co-\tla's", "kh @U\tl V z");
result.add("co-\tle-\tus", "kh @U\tl i:\tV s");
result.add("co-\tleen", "kh O:\tl i: n");
result.add("co-\tlen", "kh @U\tl V n");
result.add("co-\tlet-\tta", "kh @U\tl e\tt V");
result.add("co-\tlette", "kh @U\tl e t");
result.add("co-\tley", "kh @U\tl i:");
result.add("co-\tli", "kh @U\tl i:");
result.add("co-\tli-\ter", "kh @U\tl i:\t@r");
result.add("co-\tli-\tse-\tum", "kh Q\tl I\ts i:\tV m");
result.add("co-\tlin", "kh @U\tl I n");
result.add("co-\tlis", "kh @U\tl I s");
result.add("co-\tllec-\ttors", "kh V\tl e k\tt @r z");
result.add("co-\tlo", "kh @U\tl @U");
result.add("co-\tlo-\tma", "kh @U\tl @U\tm V");
result.add("co-\tlo-\tni-\ta", "kh V\tl @U\tn i:\tV");
result.add("co-\tlo-\tni-\ta-\tli-\tsm", "kh V\tl @U\tn i:\tV\tl I\tz V m");
result.add("co-\tlo-\tni-\ta-\tlist", "kh V\tl @U\tn i:\tV\tl V s t");
result.add("co-\tlo-\tni-\ta-\tlists", "kh V\tl @U\tn i:\tV\tl V s t s");
result.add("co-\tlo-\tni-\tal", "kh V\tl @U\tn i:\tV l");
result.add("co-\tlo-\tni-\tals", "kh V\tl @U\tn i:\tV l z");
result.add("co-\tlo-\tni-\tza-\ttion", "kh Q\tl V\tn V\tz eI\tS V n");
result.add("co-\tlo-\tni-\tzer", "kh Q\tl V\tn aI\tz @r");
result.add("co-\tlo-\tni-\tzers", "kh Q\tl V\tn aI\tz @r z");
result.add("co-\tlo-\tnies", "kh Q\tl V\tn i: z");
result.add("co-\tlo-\tnist", "kh Q\tl V\tn V s t");
result.add("co-\tlo-\tnists", "kh Q\tl V\tn V s t s");
result.add("co-\tlo-\tnize", "kh Q\tl V\tn aI z");
result.add("co-\tlo-\tnized", "kh Q\tl V\tn aI z d");
result.add("co-\tlo-\tnus", "kh V\tl @U\tn V s");
result.add("co-\tlo-\tny", "kh Q\tl V\tn i:");
result.add("co-\tlo-\tny's", "kh Q\tl V\tn i: z");
result.add("co-\tlo-\tra-\tdan", "kh Q\tl @r\tQ\td V n");
result.add("co-\tlo-\tra-\tdans", "kh Q\tl @r\tQ\td V n z");
result.add("co-\tlo-\tra-\tdo", "kh Q\tl @r\tQ\td @U");
result.add("co-\tlo-\tra-\tdo's", "kh Q\tl @r\tQ\td @U z");
result.add("co-\tlo-\tra-\ttion", "kh V\tl @r\teI\tS V n");
result.add("co-\tlo-\tra-\ttu-\tra", "kh V\tl @r\tV\tt U@\tV");
result.add("co-\tlo-\treds", "kh Q\tl @r\tV d z");
result.add("co-\tlo-\tri-\tza-\ttion", "kh V\tl @r\tI\tz eI\tS V n");
result.add("co-\tlo-\tri-\tzing", "kh V\tl @r\taI\tz I N");
result.add("co-\tlo-\trize", "kh V\tl @r\taI z");
result.add("co-\tlo-\trized", "kh V\tl @r\taI z d");
result.add("co-\tlogne", "kh V\tl @U n");
result.add("co-\tlom-\tbi-\ta", "kh V\tl V m\tb i:\tV");
result.add("co-\tlom-\tbi-\tan", "kh V\tl V m\tb i:\tV n");
result.add("co-\tlom-\tbi-\tans", "kh V\tl V m\tb i:\tV n z");
result.add("co-\tlom-\tbi-\ta's", "kh V\tl V m\tb i:\tV z");
result.add("co-\tlom-\tbo", "kh V\tl V m\tb @U");
result.add("co-\tlomb", "kh Q\tl V m");
result.add("co-\tlon", "kh @U\tl V n");
result.add("co-\tlon-\tnade", "kh Q\tl V\tn eI d");
result.add("co-\tlor", "kh V\tl @r");
result.add("co-\tlor-\tfast", "kh V\tl @r\tf { s t");
result.add("co-\tlor-\tful", "kh V\tl @r\tf V l");
result.add("co-\tlor-\tfully", "kh V\tl @r f\tl i:");
result.add("co-\tlor-\ting", "kh V\tl @r\tI N");
result.add("co-\tlor-\tis-\ttic", "kh V\tl @r\tI s\tt I k");
result.add("co-\tlor-\tless", "kh V\tl @r\tl V s");
result.add("co-\tlorb-\tlind", "kh V\tl @r b\tl aI n d");
result.add("co-\tlored", "kh V\tl @r d");
result.add("co-\tlors", "kh V\tl @r z");
result.add("co-\tlos-\tsal", "kh V\tl Q\ts V l");
result.add("co-\tlos-\tsal-\tly", "kh V\tl Q\ts V\tl i:");
result.add("co-\tlos-\tse-\tum", "kh Q\tl V\ts i:\tV m");
result.add("co-\tlos-\tsus", "kh V\tl Q\ts V s");
result.add("co-\tloured", "kh V\tl @r d");
result.add("co-\tlum-\tba", "kh @U\tl V m\tb V");
result.add("co-\tlum-\tbi-\ta", "kh V\tl V m\tb i:\tV");
result.add("co-\tlum-\tbi-\tan", "kh @U\tl V m\tb i:\tV n");
result.add("co-\tlum-\tbi-\ta's", "kh V\tl V m\tb i:\tV z");
result.add("co-\tlum-\tbine", "kh Q\tl V m\tb aI n");
result.add("co-\tlum-\tbines", "kh Q\tl V m\tb aI n z");
result.add("co-\tlum-\tbo", "kh @U\tl V m\tb @U");
result.add("co-\tlum-\tbu-\ts's", "kh V\tl V m\tb V\ts V z");
result.add("co-\tlum-\tbus", "kh V\tl V m\tb V s");
result.add("co-\tlum-\tnist", "kh Q\tl V m\tn V s t");
result.add("co-\tlum-\tnists", "kh Q\tl V m\tn V s t s");
result.add("co-\tlumn", "kh Q\tl V m");
result.add("co-\tlumned", "kh Q\tl V m d");
result.add("co-\tlumns", "kh Q\tl V m z");
result.add("co-\tly-\ter", "kh @U\tl i:\t@r");
result.add("co-\tma", "kh @U\tm V");
result.add("co-\tma-\ttose", "kh @U\tm V\tt @U s");
result.add("co-\tman", "kh @U\tm V n");
result.add("co-\tman-\tche", "kh V\tm { n\ttS i:");
result.add("co-\tman-\tches", "kh V\tm { n\ttS i: z");
result.add("co-\tman-\tdan-\tte", "kh @U\tm V n\td Q n\tt eI");
result.add("co-\tman-\tdan-\ttes", "kh @U\tm V n\td Q n\tt e z");
result.add("co-\tmas", "kh @U\tm V z");
result.add("co-\tme-\tcon", "kh Q\tm V\tk Q n");
result.add("co-\tme-\tdi-\tan", "kh V\tm i:\td i:\tV n");
result.add("co-\tme-\tdi-\tans", "kh V\tm i:\td i:\tV n z");
result.add("co-\tme-\tdi-\tan's", "kh V\tm i:\td i:\tV n z");
result.add("co-\tme-\tdi-\tenne", "kh V\tm i:\td i:\te n");
result.add("co-\tme-\tdic", "kh V\tm i:\td I k");
result.add("co-\tme-\tdies", "kh Q\tm V\td i: z");
result.add("co-\tme-\tdy", "kh Q\tm V\td i:");
result.add("co-\tme-\tdy's", "kh Q\tm V\td i: z");
result.add("co-\tme-\tta-\try", "kh Q\tm V\tt e@\ti:");
result.add("co-\tmer", "kh V\tm @r");
result.add("co-\tmers", "kh V\tm @r z");
result.add("co-\tmet", "kh Q\tm V t");
result.add("co-\tmeth", "kh V\tm I T");
result.add("co-\tmets", "kh Q\tm V t s");
result.add("co-\tmet's", "kh Q\tm V t s");
result.add("co-\tmeup-\tpance", "kh V\tm V\tp V n s");
result.add("co-\tmex", "kh Q\tm e k s");
result.add("co-\tmi-\tcal", "kh Q\tm I\tk V l");
result.add("co-\tmi-\tcal-\tly", "kh Q\tm I\tk V\tl i:");
result.add("co-\tmi-\tno", "kh V\tm i:\tn @U");
result.add("co-\tmi-\tta-\ttus", "kh O:\tm I\tt eI\tt V s");
result.add("co-\tmi-\tty", "kh @U\tm I\tt i:");
result.add("co-\tmic", "kh Q\tm I k");
result.add("co-\tmics", "kh Q\tm I k s");
result.add("co-\tming", "kh V\tm I N");
result.add("co-\tmings", "kh V\tm I N z");
result.add("co-\tmins", "kh @U\tm I n z");
result.add("co-\tmo", "kh @U\tm @U");
result.add("co-\tna-\tble", "kh @U\tn V\tb V l");
result.add("co-\tna-\tway", "kh Q\tn V\tw eI");
result.add("co-\tnal", "kh @U\tn V l");
result.add("co-\tnan", "kh @U\tn V n");
result.add("co-\tnant", "kh @U\tn V n t");
result.add("co-\tnard", "kh Q\tn @r d");
result.add("co-\tnes-\tto-\tga", "kh Q\tn V s\tt @U\tg V");
result.add("co-\tney", "kh @U\tn i:");
result.add("co-\tni-\tcal", "kh Q\tn I\tk V l");
result.add("co-\tni-\tfe-\trous", "kh V\tn I\tf @r\tV s");
result.add("co-\tni-\tfer", "kh Q\tn I\tf @r");
result.add("co-\tni-\tfers", "kh Q\tn I\tf @r z");
result.add("co-\tni-\tfer's", "kh Q\tn I\tf @r z");
result.add("co-\tnic", "kh Q\tn I k");
result.add("co-\tnics", "kh Q\tn I k s");
result.add("co-\tnis-\tton", "kh Q\tn I s\tt V n");
result.add("co-\tno-\tver", "kh Q\tn V\tv @r");
result.add("co-\tnus", "kh @U\tn V s");
result.add("co-\to-\tpe-\tra-\tted", "kh @U\tQ\tp @r\teI\tt V d");
result.add("co-\to-\tpe-\tra-\tting", "kh @U\tQ\tp @r\teI\tt I N");
result.add("co-\to-\tpe-\tra-\ttion", "kh @U\tQ\tp @r\teI\tS V n");
result.add("co-\to-\tpe-\tra-\ttions", "kh @U\tQ\tp @r\teI\tS V n z");
result.add("co-\to-\tpe-\tra-\ttive", "kh @U\tQ\tp @r\tV\tt I v");
result.add("co-\to-\tpe-\trate", "kh @U\tQ\tp @r\teI t");
result.add("co-\to-\tpe-\trates", "kh @U\tQ\tp @r\teI t s");
result.add("co-\top", "kh @U\tQ p");
result.add("co-\top-\tted", "kh @U\tQ p\tt V d");
result.add("co-\topt", "kh @U\tQ p t");
result.add("co-\tor-\tdi-\tna-\tted", "kh @U\tO@\td I\tn eI\tt I d");
result.add("co-\tor-\tdi-\tna-\tting", "kh @U\tO@\td I\tn eI\tt I N");
result.add("co-\tor-\tdi-\tna-\ttion", "kh @U\tO@\td I\tn eI\tS V n");
result.add("co-\tor-\tdi-\tna-\ttor", "kh @U\tO@\td I\tn eI\tt @r");
result.add("co-\tor-\tdi-\tna-\ttors", "kh @U\tO@\td I\tn eI\tt @r z");
result.add("co-\tor-\tdi-\tnate", "kh @U\tO@\td I\tn V t");
result.add("co-\tor-\tdi-\tnates", "kh @U\tO@\td I\tn V t s");
result.add("co-\tpa", "kh @U\tp V");
result.add("co-\tpa-\tca-\tba-\tna", "kh @U\tp V\tk V\tb {\tn V");
result.add("co-\tpart-\tner", "kh @U\tp Q@ t\tn @r");
result.add("co-\tpart-\tners", "kh @U\tp Q@ t\tn @r z");
result.add("co-\tpay-\tment", "kh @U\tp eI\tm V n t");
result.add("co-\tpay-\tments", "kh @U\tp eI\tm V n t s");
result.add("co-\tpen", "kh @U\tp V n");
result.add("co-\tpen-\tha-\tgen", "kh @U\tp V n\th eI\tg V n");
result.add("co-\tper-\tni-\tcan", "kh V\tp @r\tn V\tk V n");
result.add("co-\tper-\tni-\tcus", "kh V\tp @r\tn V\tk V s");
result.add("co-\tpi-\tague", "kh @U\tp i:\t{ g");
result.add("co-\tpi-\ter", "kh Q\tp i:\t@r");
result.add("co-\tpi-\ters", "kh Q\tp i:\t@r z");
result.add("co-\tpi-\tlot", "kh @U\tp aI\tl V t");
result.add("co-\tpi-\tous", "kh @U\tp i:\tV s");
result.add("co-\tpied", "kh Q\tp i: d");
result.add("co-\tpies", "kh Q\tp i: z");
result.add("co-\tping", "kh @U\tp I N");
result.add("co-\tpu-\tlate", "kh Q p\tj V\tl eI t");
result.add("co-\tpus", "kh @U\tp V s");
result.add("co-\tpy", "kh Q\tp i:");
result.add("co-\tpy-\tcat", "kh Q\tp i:\tk { t");
result.add("co-\tpy-\tcat-\tting", "kh Q\tp i:\tk {\tt I N");
result.add("co-\tpy-\tcats", "kh Q\tp i:\tk { t s");
result.add("co-\tpy-\ting", "kh Q\tp i:\tI N");
result.add("co-\tpy-\trea-\tder", "kh Q\tp i:\tr i:\td @r");
result.add("co-\tpy-\trea-\tders", "kh Q\tp i:\tr i:\td @r z");
result.add("co-\tpy-\trigh-\tta-\tble", "kh Q\tp i:\tr aI\tt V\tb V l");
result.add("co-\tpy-\trigh-\tted", "kh Q\tp i:\tr aI\tt V d");
result.add("co-\tpy-\tright", "kh Q\tp i:\tr aI t");
result.add("co-\tpy-\trights", "kh Q\tp i:\tr aI t s");
result.add("co-\tpy-\twri-\tter", "kh Q\tp i:\tr aI\tt @r");
result.add("co-\tpy-\twri-\tters", "kh Q\tp i:\tr aI\tt @r z");
result.add("co-\tra", "kh O@\tV");
result.add("co-\tra-\tbelle", "kh O@\tV\tb V l");
result.add("co-\tra-\tcle", "kh O@\tV\tk V l");
result.add("co-\tra-\tlie", "kh O@\tV\tl i:");
result.add("co-\tra-\tline", "kh O@\tV\tl aI n");
result.add("co-\tral", "kh O@\tV l");
result.add("co-\trals", "kh O@\tV l z");
result.add("co-\tram", "kh O@\t{ m");
result.add("co-\tra's", "kh O@\tV z");
result.add("co-\trel", "kh O@\te l");
result.add("co-\trel-\tla", "kh @r\te\tl V");
result.add("co-\trell", "kh O@\te l");
result.add("co-\tres-\tpon-\tdent", "kh O@\tV s\tp Q n\td V n t");
result.add("co-\tret-\tta", "kh O@\te\tt V");
result.add("co-\trette", "kh O@\te t");
result.add("co-\trey", "kh O@\ti:");
result.add("co-\tri-\ta", "kh O@\ti:\tV");
result.add("co-\tri-\tan-\tder", "kh O@\ti:\t{ n\td @r");
result.add("co-\tri-\tna", "kh O@\ti:\tn V");
result.add("co-\trin-\tna", "kh O@\tI\tn V");
result.add("co-\trin-\tthi-\tan", "kh @r\tI n\tT i:\tV n");
result.add("co-\trinne", "kh @r\ti: n");
result.add("co-\trinth", "kh O@\tI n T");
result.add("co-\tris-\tsa", "kh O@\tI\ts V");
result.add("co-\tro-\tna", "kh @r\t@U\tn V");
result.add("co-\tro-\tna-\tdo", "kh @r\t@U\tn Q\td @U");
result.add("co-\tro-\tna-\try", "kh O@\tV\tn e@\ti:");
result.add("co-\tro-\tna-\ttion", "kh O@\tV\tn eI\tS V n");
result.add("co-\tro-\tna's", "kh @r\t@U\tn V z");
result.add("co-\tro-\tner", "kh O@\tV\tn @r");
result.add("co-\tro-\tners", "kh O@\tV\tn @r z");
result.add("co-\tro-\tner's", "kh O@\tV\tn @r z");
result.add("co-\tro-\tnet", "kh O@\tV\tn e t");
result.add("co-\tro-\tnets", "kh O@\tV\tn e t s");
result.add("co-\trol-\tla", "kh @r\tQ\tl V");
result.add("co-\trol-\tla-\tries", "kh O@\tV\tl e@\ti: z");
result.add("co-\trol-\tla-\try", "kh O@\tV\tl e@\ti:");
result.add("co-\trum", "kh O@\tV m");
result.add("co-\trun-\tdum", "kh @r\tV n\td V m");
result.add("co-\try", "kh O@\ti:");
result.add("co-\tsa", "kh @U\ts V");
result.add("co-\tsen-\tza", "kh @U\ts e n\tz V");
result.add("co-\tsette", "kh V\ts e t");
result.add("co-\tsey", "kh @U\tz i:");
result.add("co-\tstar", "kh @U s\tt Q@");
result.add("co-\tsy", "kh @U\tz i:");
result.add("co-\tta", "kh @U\tt V");
result.add("co-\tty", "kh @U\tt i:");
result.add("co-\tvar-\tru-\tbi-\tas", "kh @U\tv Q@\tu:\tb i:\tV z");
result.add("co-\tve-\tnan-\tter", "kh V\tv V\tn V n\tt @r");
result.add("co-\tve-\tnan-\tters", "kh V\tv V\tn V n\tt @r z");
result.add("co-\tve-\tnant", "kh V\tv V\tn V n t");
result.add("co-\tve-\tnants", "kh V\tv V\tn V n t s");
result.add("co-\tve-\tney", "kh Q\tv V\tn i:");
result.add("co-\tve-\tra-\tges", "kh V\tv @r\teI\tdZ V z");
result.add("co-\tve-\trage", "kh V\tv @r\tV dZ");
result.add("co-\tve-\trall", "kh V\tv @r\tO: l");
result.add("co-\tve-\tralls", "kh V\tv @r\tO: l z");
result.add("co-\tve-\tring", "kh V\tv @r\tI N");
result.add("co-\tve-\trings", "kh V\tv @r\tI N z");
result.add("co-\tve-\trup", "kh V\tv @r\tV p");
result.add("co-\tve-\trups", "kh V\tv @r\tV p s");
result.add("co-\tve-\tted", "kh V\tv V\tt V d");
result.add("co-\tvel", "kh @U\tv V l");
result.add("co-\tvell", "kh Q\tv V l");
result.add("co-\tven", "kh V\tv V n");
result.add("co-\tvent", "kh V\tv V n t");
result.add("co-\tvent-\try", "kh V\tv V n\tt r i:");
result.add("co-\tver", "kh V\tv @r");
result.add("co-\tver-\tdale", "kh V\tv @r\td eI l");
result.add("co-\tvered", "kh V\tv @r d");
result.add("co-\tvers", "kh V\tv @r z");
result.add("co-\tvert", "kh @U\tv @r t");
result.add("co-\tvert-\tly", "kh V\tv @r t\tl i:");
result.add("co-\tvet", "kh V\tv V t");
result.add("co-\tvets", "kh V\tv V t s");
result.add("co-\tvey", "kh V\tv i:");
result.add("co-\tvi-\tel-\tlo", "kh @U\tv i:\te\tl @U");
result.add("co-\tvi-\tna", "kh @U\tv i:\tn V");
result.add("co-\tville", "kh @U\tv I l");
result.add("co-\tvin", "kh @U\tv I n");
result.add("co-\tving-\tton", "kh V\tv I N\tt V n");
result.add("co-\twan", "kh aU\tV n");
result.add("co-\twans", "kh aU\tV n z");
result.add("co-\twar-\tdice", "kh aU\t@r\td I s");
result.add("co-\tward", "kh aU\t@r d");
result.add("co-\tward-\tly", "kh aU\t@r d\tl i:");
result.add("co-\twards", "kh aU\t@r d z");
result.add("co-\tward's", "kh aU\t@r d z");
result.add("co-\twe-\tring", "kh aU\t@r\tI N");
result.add("co-\twell", "kh Q\tw e l");
result.add("co-\twen", "kh aU\tV n");
result.add("co-\twer", "kh aU\t@r");
result.add("co-\twie", "kh aU\ti:");
result.add("co-\twing", "kh aU\tI N");
result.add("co-\twor-\tker", "kh @U\tw @r\tk @r");
result.add("co-\twor-\tkers", "kh @U\tw @r\tk @r z");
result.add("co-\tx's", "kh Q k\ts V z");
result.add("co-\tyer", "kh OI\t@r");
result.add("co-\tyo-\tte", "kh aI\t@U\tt i:");
result.add("co-\tyo-\ttes", "kh aI\t@U\tt i: s");
result.add("co.", "kh @U");
result.add("coa-\tches", "kh @U\ttS V z");
result.add("coa-\tching", "kh @U\ttS I N");
result.add("coa-\tch's", "kh @U\ttS V z");
result.add("coa-\tdy", "kh @U\td i:");
result.add("coa-\tte", "kh @U\teI t");
result.add("coa-\tted", "kh @U\tt V d");
result.add("coa-\ttes", "kh @U\teI t s");
result.add("coa-\tting", "kh @U\tt I N");
result.add("coa-\ttings", "kh @U\tt I N z");
result.add("coa-\txes", "kh @U k\ts V z");
result.add("coa-\txing", "kh @U k\ts I N");
result.add("coach", "kh @U tS");
result.add("coach-\tman", "kh @U tS\tm V n");
result.add("coached", "kh @U tS t");
result.add("coad", "kh @U d");
result.add("coal", "kh @U l");
result.add("coals", "kh @U l z");
result.add("coal's", "kh @U l z");
result.add("coan", "kh @U n");
result.add("coar-\tse-\tning", "kh O@\ts V\tn I N");
result.add("coar-\tser", "kh O@\ts @r");
result.add("coarse", "kh O@ s");
result.add("coas-\ttal", "kh @U s\tt V l");
result.add("coas-\tted", "kh @U s\tt V d");
result.add("coas-\tter", "kh @U s\tt @r");
result.add("coas-\tters", "kh @U s\tt @r z");
result.add("coas-\tting", "kh @U s\tt I N");
result.add("coast", "kh @U s t");
result.add("coast-\tline", "kh @U s\tt l aI n");
result.add("coast-\tlines", "kh @U s\tt l aI n z");
result.add("coasts", "kh @U s t s");
result.add("coast's", "kh @U s t s");
result.add("coat", "kh @U t");
result.add("coat-\ttail", "kh @U t\tt eI l");
result.add("coat-\ttails", "kh @U t\tt eI l z");
result.add("coates-\tville", "kh @U t\ts v I l");
result.add("coats", "kh @U t s");
result.add("coat's", "kh @U t s");
result.add("coax", "kh @U k s");
result.add("coaxed", "kh @U k s t");
result.add("cob", "kh Q b");
result.add("cob-\tbett", "kh Q\tb I t");
result.add("cob-\tble", "kh Q\tb V l");
result.add("cob-\tbled", "kh Q\tb V l d");
result.add("cob-\tbles-\ttone", "kh Q\tb V l\ts t @U n");
result.add("cob-\tbles-\ttones", "kh Q\tb V l\ts t @U n z");
result.add("cob-\tra", "kh @U b\tr V");
result.add("cob-\tras", "kh @U b\tr V z");
result.add("cob-\tweb", "kh Q b\tw e b");
result.add("cob-\twebs", "kh Q b\tw e b z");
result.add("cobb", "kh Q b");
result.add("cobb-\tler", "kh Q b\tl @r");
result.add("cobb-\tlers", "kh Q b\tl @r z");
result.add("cobb-\tler's", "kh Q b\tl @r z");
result.add("cobbs", "kh Q b z");
result.add("cobe", "kh @U b");
result.add("cobs", "kh Q b z");
result.add("coc-\tco", "kh @U\tk @U");
result.add("coc-\tcus", "kh Q\tk V s");
result.add("coc-\tka-\tma-\tmie", "kh O:\tk V\tm eI\tm i:");
result.add("coc-\tka-\ttoo", "kh Q\tk V\tt u:");
result.add("coc-\tka-\ttoos", "kh Q\tk V\tt u: z");
result.add("coc-\tke-\trell", "kh Q\tk @r\te l");
result.add("coc-\tker", "kh Q\tk @r");
result.add("coc-\tkeyed", "kh Q\tk aI d");
result.add("coc-\tki-\tness", "kh Q\tk i:\tn V s");
result.add("coc-\tking", "kh Q\tk I N");
result.add("coc-\tky", "kh Q\tk i:");
result.add("coch-\tle-\ta", "kh Q k\tl i:\tV");
result.add("coch-\tle-\tar", "kh Q k\tl i:\t@r");
result.add("coch-\tran", "kh Q k\tr V n");
result.add("coch-\trane", "kh Q k\tr V n");
result.add("coch-\tran's", "kh Q k\tr V n z");
result.add("cock", "kh Q k");
result.add("cock-\tburn", "kh Q k\tb @r n");
result.add("cock-\tburn's", "kh @U\tb @r n z");
result.add("cock-\ttail", "kh Q k\tt eI l");
result.add("cock-\ttails", "kh Q k\tt eI l z");
result.add("cocke", "kh @U k");
result.add("cocked", "kh Q k t");
result.add("cod", "kh Q d");
result.add("cod-\td-\tling", "kh Q\td V\tl I N");
result.add("cod-\tding", "kh Q\td I N");
result.add("cod-\tding-\tton", "kh Q\td I N\tt V n");
result.add("cod-\tdle", "kh Q\td V l");
result.add("cod-\tdled", "kh Q\td V l d");
result.add("cod-\tlin", "kh Q d\tl I n");
result.add("codd", "kh Q d");
result.add("code", "kh @U d");
result.add("code-\tbrea-\tker", "kh @U d\tb r eI\tk @r");
result.add("codes", "kh @U d z");
result.add("code's", "kh @U d z");
result.add("coe", "kh @U");
result.add("coe-\tburn", "kh @U\tb @r n");
result.add("coe-\tla-\tcanth", "s i:\tl V\tk { n T");
result.add("coeur", "kh u: r");
result.add("cof-\tfee", "kh Q\tf i:");
result.add("cof-\tfee-\thou-\tses", "kh O:\tf i:\th aU\ts V z");
result.add("cof-\tfee-\thouse", "kh O:\tf i:\th aU s");
result.add("cof-\tfeen", "kh V\tf i: n");
result.add("cof-\tfees", "kh O:\tf i: z");
result.add("cof-\tfee's", "kh Q\tf i: z");
result.add("cof-\tfer", "kh O:\tf @r");
result.add("cof-\tfers", "kh Q\tf @r z");
result.add("cof-\tfey", "kh Q\tf i:");
result.add("cof-\tfin", "kh O:\tf I n");
result.add("cof-\tfing", "kh O:\tf I N");
result.add("cof-\tfins", "kh O:\tf I n z");
result.add("cof-\tfin's", "kh O:\tf I n z");
result.add("coff-\tman", "kh O: f\tm V n");
result.add("cog", "kh O: g");
result.add("cog-\tnac", "kh @U n\tj { k");
result.add("cog-\tni-\ttion", "kh Q g\tn I\tS V n");
result.add("cog-\tni-\ttive", "kh Q g\tn I\tt I v");
result.add("cog-\tni-\tzance", "kh Q g\tn I\tz V n s");
result.add("cog-\tni-\tzant", "kh Q g\tn I\tz V n t");
result.add("cog-\tnos-\tcen-\tti", "kh Q g\tn O:\tS e n\tt i:");
result.add("cogs-\twell", "kh Q g\ts w e l");
result.add("cohn", "kh @U n");
result.add("coi-\tnage", "kh OI\tn I dZ");
result.add("coi-\tner", "kh OI\tn @r");
result.add("coi-\tning", "kh OI\tn I N");
result.add("coiffe", "kh OI f");
result.add("coiffed", "kh OI f t");
result.add("coil", "kh OI l");
result.add("coiled", "kh OI l d");
result.add("coils", "kh OI l z");
result.add("coin", "kh OI n");
result.add("coin-\ttreau", "kh O: n\tt r @U");
result.add("coined", "kh OI n d");
result.add("coins", "kh OI n z");
result.add("coin's", "kh OI n z");
result.add("coit", "kh OI t");
result.add("coke", "kh @U k");
result.add("cokes", "kh @U k s");
result.add("coke's", "kh @U k s");
result.add("col-\tbert", "kh @U l\tb @r t");
result.add("col-\tburn", "kh @U l\tb @r n");
result.add("col-\tby", "kh @U l\tb i:");
result.add("col-\tby's", "kh @U l\tb i: z");
result.add("col-\tcord", "kh @U l\tk @r d");
result.add("col-\tden", "kh @U l\td V n");
result.add("col-\tder", "kh @U l\td @r");
result.add("col-\tdest", "kh @U l\td V s t");
result.add("col-\tgate", "kh @U l\tg eI t");
result.add("col-\tgate's", "kh @U l\tg eI t s");
result.add("col-\tla", "kh @U\tl V");
result.add("col-\tla-\tbo-\tra-\tted", "kh V\tl {\tb @r\teI\tt V d");
result.add("col-\tla-\tbo-\tra-\tting", "kh V\tl {\tb @r\teI\tt I N");
result.add("col-\tla-\tbo-\tra-\ttion", "kh V\tl {\tb @r\teI\tS V n");
result.add("col-\tla-\tbo-\tra-\ttions", "kh Q\tl V\tb @r\teI\tS V n z");
result.add("col-\tla-\tbo-\tra-\ttive", "kh V\tl {\tb @r\teI\tt I v");
result.add("col-\tla-\tbo-\tra-\ttor", "kh V\tl {\tb @r\teI\tt @r");
result.add("col-\tla-\tbo-\tra-\ttors", "kh V\tl {\tb @r\teI\tt @r z");
result.add("col-\tla-\tbo-\trate", "kh V\tl {\tb @r\teI t");
result.add("col-\tla-\tgen", "kh Q\tl V\tg V n");
result.add("col-\tla-\tges", "kh V\tl Q\tZ V z");
result.add("col-\tla-\tte-\tra-\tlize", "kh V\tl {\tt @r\tV\tl aI z");
result.add("col-\tla-\tte-\tra-\tlized", "kh V\tl {\tt @r\tV\tl aI z d");
result.add("col-\tla-\tte-\tral", "kh V\tl {\tt @r\tV l");
result.add("col-\tlage", "kh V\tl Q Z");
result.add("col-\tlap-\tses", "kh V\tl { p\ts V z");
result.add("col-\tlap-\tsi-\tble", "kh V\tl { p\ts V\tb V l");
result.add("col-\tlap-\tsing", "kh V\tl { p\ts I N");
result.add("col-\tlapse", "kh V\tl { p s");
result.add("col-\tlapsed", "kh V\tl { p s t");
result.add("col-\tlar", "kh Q\tl @r");
result.add("col-\tlar-\tbone", "kh Q\tl @r\tb @U n");
result.add("col-\tlard", "kh Q\tl @r d");
result.add("col-\tlards", "kh Q\tl @r d z");
result.add("col-\tlared", "kh Q\tl @r d");
result.add("col-\tlars", "kh Q\tl @r z");
result.add("col-\tlate", "kh V\tl eI t");
result.add("col-\tle-\tges", "kh Q\tl I\tdZ V z");
result.add("col-\tle-\tge's", "kh Q\tl I\tdZ V z");
result.add("col-\tle-\tgi-\ta-\tli-\tty", "kh V\tl i:\tdZ i:\t{\tl V\tt i:");
result.add("col-\tle-\tgi-\tal", "kh V\tl i:\tdZ i:\tV l");
result.add("col-\tle-\tgian", "kh V\tl i:\tdZ V n");
result.add("col-\tle-\tgians", "kh V\tl i:\tdZ V n z");
result.add("col-\tle-\tgiate", "kh V\tl i:\tdZ V t");
result.add("col-\tleague", "kh Q\tl i: g");
result.add("col-\tleagues", "kh Q\tl i: g z");
result.add("col-\tlec-\tted", "kh V\tl e k\tt V d");
result.add("col-\tlec-\tti-\tbi-\tli-\tty", "kh V\tl e k\tt V\tb I\tl V\tt i:");
result.add("col-\tlec-\tti-\tble", "kh V\tl e k\tt V\tb V l");
result.add("col-\tlec-\tti-\tbles", "kh V\tl e k\tt V\tb V l z");
result.add("col-\tlec-\tti-\tvi-\tsm", "kh V\tl e k\tt I\tv I\tz V m");
result.add("col-\tlec-\tti-\tvi-\tza-\ttion", "kh V\tl e k\tt I\tv V\tz eI\tS V n");
result.add("col-\tlec-\tti-\tvist", "kh V\tl e k\tt I\tv I s t");
result.add("col-\tlec-\tti-\tvize", "kh V\tl e k\tt I\tv aI z");
result.add("col-\tlec-\tti-\tvized", "kh V\tl e k\tt I\tv aI z d");
result.add("col-\tlec-\tting", "kh V\tl e k\tt I N");
result.add("col-\tlec-\ttion", "kh V\tl e k\tS V n");
result.add("col-\tlec-\ttions", "kh V\tl e k\tS V n z");
result.add("col-\tlec-\ttive", "kh V\tl e k\tt I v");
result.add("col-\tlec-\ttive-\tly", "kh V\tl e k\tt I v\tl i:");
result.add("col-\tlec-\ttives", "kh V\tl e k\tt I v z");
result.add("col-\tlec-\ttor", "kh V\tl e k\tt @r");
result.add("col-\tlec-\ttor's", "kh V\tl e k\tt @r z");
result.add("col-\tlect", "kh V\tl e k t");
result.add("col-\tlects", "kh V\tl e k t s");
result.add("col-\tleen", "kh Q\tl i: n");
result.add("col-\tlege", "kh Q\tl I dZ");
result.add("col-\tlen", "kh Q\tl V n");
result.add("col-\tlet", "kh Q\tl V t");
result.add("col-\tlette", "kh V\tl e t");
result.add("col-\tley", "kh Q\tl i:");
result.add("col-\tli-\tded", "kh V\tl aI\td V d");
result.add("col-\tli-\tder", "kh V\tl aI\td @r");
result.add("col-\tli-\tding", "kh V\tl aI\td I N");
result.add("col-\tli-\tsio-\tnal", "kh V\tl I\tZ V\tn V l");
result.add("col-\tli-\tsion", "kh V\tl I\tZ V n");
result.add("col-\tli-\tsions", "kh V\tl I\tZ V n z");
result.add("col-\tli-\tson", "kh Q\tl I\ts V n");
result.add("col-\tlide", "kh V\tl aI d");
result.add("col-\tlides", "kh V\tl aI d z");
result.add("col-\tlie", "kh Q\tl i:");
result.add("col-\tlier", "kh Q l\tj @r");
result.add("col-\tliers", "kh Q l\tj @r z");
result.add("col-\tlier's", "kh Q l\tj @r z");
result.add("col-\tlis", "kh Q\tl I s");
result.add("col-\tlo-\tdi-\ton", "kh V\tl @U\td i:\tV n");
result.add("col-\tlo-\tqui-\tal", "kh V\tl @U k\tw i:\tV l");
result.add("col-\tlo-\tqui-\tum", "kh V\tl @U k\tw i:\tV m");
result.add("col-\tlo-\tquy", "kh Q\tl V k\tw i:");
result.add("col-\tloi-\tdal", "kh V\tl OI\td V l");
result.add("col-\tloid", "kh Q\tl OI d");
result.add("col-\tlu-\tded", "kh V\tl u:\td V d");
result.add("col-\tlu-\tding", "kh V\tl u:\td I N");
result.add("col-\tlu-\tsion", "kh V\tl u:\tZ V n");
result.add("col-\tlu-\tsive", "kh V\tl u:\ts I v");
result.add("col-\tlude", "kh V\tl u: d");
result.add("col-\tlum", "kh Q\tl V m");
result.add("col-\tly", "kh Q\tl i:");
result.add("col-\tly-\ter", "kh Q\tl i:\t@r");
result.add("col-\tman", "kh @U l\tm V n");
result.add("col-\tmer", "kh @U\tm @r");
result.add("col-\tquitt", "kh @U l\tk w I t");
result.add("col-\tson", "kh @U l\ts V n");
result.add("col-\tston", "kh @U l\ts t V n");
result.add("col-\tstrip", "kh @U l\ts t r I p");
result.add("col-\tter", "kh @U l\tt @r");
result.add("col-\tton", "kh @U l\tt V n");
result.add("col-\tver", "kh @U l\tv @r");
result.add("col-\tvert", "kh Q l\tv @r t");
result.add("col-\tville", "kh Q l\tv I l");
result.add("col-\tvin", "kh @U l\tv I n");
result.add("col-\twell", "kh @U l\tw e l");
result.add("cold", "kh @U l d");
result.add("cold-\tbloo-\tded", "kh @U l\td b l V\td V d");
result.add("cold-\tblood", "kh @U l\td b l V d");
result.add("cold-\tly", "kh @U l\td l i:");
result.add("cold-\tness", "kh @U l\td n V s");
result.add("cold-\twa-\tter", "kh @U l\td w O:\tt @r");
result.add("colds", "kh @U l d z");
result.add("cole", "kh @U l");
result.add("cole-\tbrook", "kh @U l\tb r U k");
result.add("cole-\tman", "kh @U l\tm V n");
result.add("cole-\tman's", "kh @U l\tm V n z");
result.add("cole-\tridge", "kh @U l\tr I dZ");
result.add("cole-\tville", "kh @U l\tv I l");
result.add("coles", "kh @U l z");
result.add("cole's", "kh @U l z");
result.add("coles-\tlaw", "kh @U l\ts l Q");
result.add("coll", "kh Q l");
result.add("colo-\tnel", "kh @r\tn V l");
result.add("colo-\tnels", "kh @r\tn V l z");
result.add("colo-\tnel's", "kh @r\tn V l z");
result.add("colt", "kh @U l t");
result.add("colt-\trane", "kh @U l\tt r V n");
result.add("colt-\trane's", "kh @U l\tt r V n z");
result.add("colts", "kh @U l t s");
result.add("colt's", "kh @U l t s");
result.add("colts-\tfoot", "kh @U l\tt s f U t");
result.add("com", "kh Q m");
result.add("com-\tba-\ttant", "kh V m\tb {\tt V n t");
result.add("com-\tba-\ttants", "kh V m\tb {\tt V n t s");
result.add("com-\tba-\tting", "kh V m\tb {\tt I N");
result.add("com-\tba-\ttive", "kh V m\tb {\tt I v");
result.add("com-\tba-\ttive-\tness", "kh V m\tb {\tt I v\tn V s");
result.add("com-\tbat", "kh Q m\tb { t");
result.add("com-\tbat-\tting", "kh V m\tb {\tt I N");
result.add("com-\tbats", "kh V m\tb { t s");
result.add("com-\tber", "kh @U\tm @r");
result.add("com-\tbi-\tna-\tbi-\tli-\tty", "kh V m\tb aI\tn V\tb I\tl I\tt i:");
result.add("com-\tbi-\tna-\tble", "kh V m\tb aI\tn V\tb V l");
result.add("com-\tbi-\tna-\ttion", "kh Q m\tb I\tn eI\tS V n");
result.add("com-\tbi-\tna-\ttions", "kh Q m\tb I\tn eI\tS V n z");
result.add("com-\tbi-\tning", "kh V m\tb aI\tn I N");
result.add("com-\tbine", "kh Q m\tb aI n");
result.add("com-\tbined", "kh V m\tb aI n d");
result.add("com-\tbines", "kh V m\tb aI n z");
result.add("com-\tbing", "kh @U\tm I N");
result.add("com-\tbo", "kh Q m\tb @U");
result.add("com-\tbus-\ttion", "kh V m\tb V s\ttS V n");
result.add("com-\tbust", "kh V m\tb V s t");
result.add("com-\tdex", "kh Q m\td V k s");
result.add("com-\tfor-\tta-\tble", "kh V m\tf @r\tt V\tb V l");
result.add("com-\tfor-\ttab-\tly", "kh V m\tf @r\tt V b\tl i:");
result.add("com-\tfor-\tted", "kh V m\tf @r\tt V d");
result.add("com-\tfor-\tter", "kh V m\tf @r\tt @r");
result.add("com-\tfor-\tters", "kh V m\tf @r\tt @r z");
result.add("com-\tfor-\tting", "kh V m\tf @r\tt I N");
result.add("com-\tfort", "kh V m\tf @r t");
result.add("com-\tforts", "kh V m\tf @r t s");
result.add("com-\tfy", "kh V m\tf i:");
result.add("com-\tma", "kh Q\tm V");
result.add("com-\tmack", "kh Q\tm V k");
result.add("com-\tman-\tdant", "kh Q\tm V n\td Q n t");
result.add("com-\tman-\tded", "kh V\tm { n\td V d");
result.add("com-\tman-\tdeer", "kh Q\tm V n\td I@");
result.add("com-\tman-\tdeered", "kh Q\tm V n\td I@ d");
result.add("com-\tman-\tder", "kh V\tm { n\td @r");
result.add("com-\tman-\tders", "kh V\tm { n\td @r z");
result.add("com-\tman-\tder's", "kh V\tm { n\td @r z");
result.add("com-\tman-\tding", "kh V\tm { n\td I N");
result.add("com-\tman-\tdo", "kh V\tm { n\td @U");
result.add("com-\tman-\tdos", "kh V\tm { n\td @U z");
result.add("com-\tmand", "kh V\tm { n d");
result.add("com-\tmand-\tment", "kh V\tm { n\td m V n t");
result.add("com-\tmand-\tments", "kh V\tm { n\td m V n t s");
result.add("com-\tmands", "kh V\tm { n d z");
result.add("com-\tmand's", "kh V\tm { n d z");
result.add("com-\tmas", "kh Q\tm V z");
result.add("com-\tme-\tmo-\tra-\tted", "kh V\tm e\tm @r\teI\tt V d");
result.add("com-\tme-\tmo-\tra-\tting", "kh V\tm e\tm @r\teI\tt I N");
result.add("com-\tme-\tmo-\tra-\ttion", "kh V\tm e\tm @r\teI\tS V n");
result.add("com-\tme-\tmo-\tra-\ttions", "kh V\tm e\tm @r\teI\tS V n z");
result.add("com-\tme-\tmo-\trate", "kh V\tm e\tm @r\teI t");
result.add("com-\tme-\tmo-\trates", "kh V\tm e\tm @r\teI t s");
result.add("com-\tmemo-\tra-\ttive", "kh V\tm e m\tr V\tt I v");
result.add("com-\tmen-\tces", "kh V\tm e n\ts V z");
result.add("com-\tmen-\tcing", "kh V\tm e n\ts I N");
result.add("com-\tmen-\tda-\tble", "kh V\tm e n\td V\tb V l");
result.add("com-\tmen-\tda-\ttion", "kh Q\tm V n\td eI\tS V n");
result.add("com-\tmen-\tded", "kh V\tm e n\td V d");
result.add("com-\tmen-\tding", "kh V\tm e n\td I N");
result.add("com-\tmen-\tsu-\trate", "kh V\tm e n\ts @r\tV t");
result.add("com-\tmen-\tsu-\trate-\tly", "kh V\tm e n\ts @r\tV t\tl i:");
result.add("com-\tmen-\tta-\tries", "kh Q\tm V n\tt e@\ti: z");
result.add("com-\tmen-\tta-\try", "kh Q\tm V n\tt e@\ti:");
result.add("com-\tmen-\tta-\ttor", "kh Q\tm V n\tt eI\tt @r");
result.add("com-\tmen-\tta-\ttors", "kh Q\tm V n\tt eI\tt @r z");
result.add("com-\tmen-\tta-\ttor's", "kh Q\tm V n\tt eI\tt @r z");
result.add("com-\tmen-\tted", "kh Q\tm e n\tt V d");
result.add("com-\tmen-\tter", "kh Q\tm e n\tt @r");
result.add("com-\tmen-\tters", "kh Q\tm e n\tt @r z");
result.add("com-\tmen-\tting", "kh Q\tm e n\tt I N");
result.add("com-\tmence", "kh V\tm e n s");
result.add("com-\tmence-\tment", "kh V\tm e n\ts m V n t");
result.add("com-\tmenced", "kh V\tm e n s t");
result.add("com-\tmend", "kh V\tm e n d");
result.add("com-\tmends", "kh V\tm e n d z");
result.add("com-\tment", "kh Q\tm e n t");
result.add("com-\tments", "kh Q\tm e n t s");
result.add("com-\tmer-\tce's", "kh Q\tm @r\ts V z");
result.add("com-\tmer-\tcia-\tli-\tsm", "kh V\tm @r\tS V\tl I\tz V m");
result.add("com-\tmer-\tcia-\tli-\tza-\ttion", "kh V\tm @r\tS V\tl V\tz eI\tS V n");
result.add("com-\tmer-\tcia-\tli-\tzing", "kh V\tm @r\tS V\tl aI\tz I N");
result.add("com-\tmer-\tcia-\tlize", "kh V\tm @r\tS V\tl aI z");
result.add("com-\tmer-\tcia-\tlized", "kh V\tm @r\tS V\tl aI z d");
result.add("com-\tmer-\tcial", "kh V\tm @r\tS V l");
result.add("com-\tmer-\tcial-\tly", "kh V\tm @r\tS V\tl i:");
result.add("com-\tmer-\tcials", "kh V\tm @r\tS V l z");
result.add("com-\tmerce", "kh Q\tm @r s");
result.add("com-\tmi-\tse-\trate", "kh V\tm I\ts @r\teI t");
result.add("com-\tmie", "kh Q\tm i:");
result.add("com-\tmies", "kh Q\tm i: z");
result.add("com-\tmin-\tg-\tling", "kh Q\tm I N\tg V\tl I N");
result.add("com-\tmin-\tgle", "kh V\tm I N\tg V l");
result.add("com-\tmin-\tgled", "kh Q\tm I N\tg V l d");
result.add("com-\tmis-\tsa-\tries", "kh Q\tm I\ts e@\ti: z");
result.add("com-\tmis-\tsa-\try", "kh Q\tm I\ts e@\ti:");
result.add("com-\tmis-\tsar", "kh Q\tm I\ts Q@");
result.add("com-\tmis-\tsars", "kh Q\tm I\ts Q z");
result.add("com-\tmis-\tsio-\tner", "kh V\tm I\tS V\tn @r");
result.add("com-\tmis-\tsio-\tners", "kh V\tm I\tS V\tn @r z");
result.add("com-\tmis-\tsio-\tner's", "kh V\tm I\tS V\tn @r z");
result.add("com-\tmis-\tsio-\tning", "kh V\tm I\tS V\tn I N");
result.add("com-\tmis-\tsion", "kh V\tm I\tS V n");
result.add("com-\tmis-\tsioned", "kh V\tm I\tS V n d");
result.add("com-\tmis-\tsions", "kh V\tm I\tS V n z");
result.add("com-\tmis-\tsion's", "kh V\tm I\tS V n z");
result.add("com-\tmit", "kh V\tm I t");
result.add("com-\tmit-\tment", "kh V\tm I t\tm V n t");
result.add("com-\tmit-\tments", "kh V\tm I t\tm V n t s");
result.add("com-\tmit-\ttal", "kh V\tm I\tt V l");
result.add("com-\tmit-\tted", "kh V\tm I\tt V d");
result.add("com-\tmit-\ttee", "kh V\tm I\tt i:");
result.add("com-\tmit-\ttee-\tman", "kh V\tm I\tt i:\tm V n");
result.add("com-\tmit-\ttees", "kh V\tm I\tt i: z");
result.add("com-\tmit-\ttee's", "kh V\tm I\tt i: z");
result.add("com-\tmit-\tting", "kh V\tm I\tt I N");
result.add("com-\tmits", "kh V\tm I t s");
result.add("com-\tmo-\tdi-\tous", "kh V\tm @U\td i:\tV s");
result.add("com-\tmo-\tdi-\tties", "kh V\tm Q\td V\tt i: z");
result.add("com-\tmo-\tdi-\tty", "kh V\tm Q\td V\tt i:");
result.add("com-\tmo-\tdi-\tty's", "kh V\tm Q\td V\tt i: z");
result.add("com-\tmo-\tdore", "kh Q\tm V\td O@");
result.add("com-\tmo-\tdore's", "kh Q\tm V\td O@ z");
result.add("com-\tmo-\tna-\tli-\tties", "kh Q\tm V\tn {\tl V\tt i: z");
result.add("com-\tmo-\tna-\tli-\tty", "kh Q\tm V\tn {\tl V\tt i:");
result.add("com-\tmo-\tner", "kh Q\tm V\tn @r");
result.add("com-\tmo-\tners", "kh Q\tm V\tn @r z");
result.add("com-\tmo-\ttion", "kh V\tm @U\tS V n");
result.add("com-\tmode", "kh V\tm @U d");
result.add("com-\tmon", "kh Q\tm V n");
result.add("com-\tmon-\tly", "kh Q\tm V n\tl i:");
result.add("com-\tmon-\tplace", "kh Q\tm V n\tp l eI s");
result.add("com-\tmon-\tsen-\tsi-\tcal", "kh Q\tm V n\ts e n\ts V\tk V l");
result.add("com-\tmon-\tsense", "kh Q\tm V n\ts e n s");
result.add("com-\tmon-\twealth", "kh Q\tm V n\tw e l T");
result.add("com-\tmons", "kh Q\tm V n z");
result.add("com-\tmu-\tnal", "kh V m\tj u:\tn V l");
result.add("com-\tmu-\tni-\tca-\tble", "kh V m\tj u:\tn V\tk V\tb V l");
result.add("com-\tmu-\tni-\tca-\tted", "kh V m\tj u:\tn V\tk eI\tt V d");
result.add("com-\tmu-\tni-\tca-\tting", "kh V m\tj u:\tn V\tk eI\tt I N");
result.add("com-\tmu-\tni-\tca-\ttion", "kh V m\tj u:\tn V\tk eI\tS V n");
result.add("com-\tmu-\tni-\tca-\ttions", "kh V m\tj u:\tn V\tk eI\tS V n z");
result.add("com-\tmu-\tni-\tca-\ttion's", "kh V m\tj u:\tn I\tk eI\tS V n z");
result.add("com-\tmu-\tni-\tca-\ttive", "kh V m\tj u:\tn V\tk V\tt I v");
result.add("com-\tmu-\tni-\tca-\ttor", "kh V m\tj u:\tn V\tk eI\tt @r");
result.add("com-\tmu-\tni-\tca-\ttors", "kh V m\tj u:\tn V\tk eI\tt @r z");
result.add("com-\tmu-\tni-\tcate", "kh V m\tj u:\tn V\tk eI t");
result.add("com-\tmu-\tni-\tcates", "kh V m\tj u:\tn I\tk eI t s");
result.add("com-\tmu-\tni-\tque", "kh V m\tj u:\tn V\tk eI");
result.add("com-\tmu-\tni-\tques", "kh V m\tj u:\tn I\tk eI z");
result.add("com-\tmu-\tni-\tsm", "kh Q m\tj U\tn I\tz V m");
result.add("com-\tmu-\tni-\tsm's", "kh Q m\tj U\tn I\tz V m z");
result.add("com-\tmu-\tni-\tties", "kh V m\tj u:\tn I\tt i: z");
result.add("com-\tmu-\tni-\tty", "kh V m\tj u:\tn I\tt i:");
result.add("com-\tmu-\tni-\tty-\twide", "kh V m\tj u:\tn I\tt i:\tw aI d");
result.add("com-\tmu-\tni-\tty's", "kh V m\tj u:\tn I\tt i: z");
result.add("com-\tmu-\tni-\tza-\ttion", "kh Q m\tj V\tn I\tz eI\tS V n");
result.add("com-\tmu-\tnion", "kh V m\tj u: n\tj V n");
result.add("com-\tmu-\tnist", "kh Q m\tj U\tn I s t");
result.add("com-\tmu-\tnists", "kh Q m\tj U\tn I s t s");
result.add("com-\tmu-\tnist's", "kh Q m\tj U\tn I s t s");
result.add("com-\tmu-\tnize", "kh Q m\tj V\tn aI z");
result.add("com-\tmu-\tted", "kh V m\tj u:\tt V d");
result.add("com-\tmu-\tter", "kh V m\tj u:\tt @r");
result.add("com-\tmu-\tters", "kh V m\tj u:\tt @r z");
result.add("com-\tmu-\tting", "kh V m\tj u:\tt I N");
result.add("com-\tmune", "kh Q m\tj u: n");
result.add("com-\tmunes", "kh Q m\tj u: n z");
result.add("com-\tmute", "kh V m\tj u: t");
result.add("com-\tmutes", "kh V m\tj u: t s");
result.add("com-\tpa-\tni-\ta", "kh V m\tp eI\tn i:\tV");
result.add("com-\tpa-\tnies", "kh V m\tp V\tn i: z");
result.add("com-\tpa-\tnion", "kh V m\tp { n\tj V n");
result.add("com-\tpa-\tnion-\tship", "kh V m\tp { n\tj V n\tS I p");
result.add("com-\tpa-\tnion-\tway", "kh V m\tp { n\tj V n\tw eI");
result.add("com-\tpa-\tnions", "kh V m\tp { n\tj V n z");
result.add("com-\tpa-\tny", "kh V m\tp V\tn i:");
result.add("com-\tpa-\tny's", "kh V m\tp V\tn i: z");
result.add("com-\tpa-\tra-\tbi-\tli-\tty", "kh Q m\tp @r\tV\tb I\tl V\tt i:");
result.add("com-\tpa-\tra-\tble", "kh Q m\tp @r\tV\tb V l");
result.add("com-\tpa-\tra-\tbly", "kh Q m\tp @r\tV b\tl i:");
result.add("com-\tpa-\tra-\ttive", "kh V m\tp e@\tV\tt I v");
result.add("com-\tpa-\tra-\ttive-\tly", "kh V m\tp e@\tV\tt I v\tl i:");
result.add("com-\tpa-\tra-\ttor", "kh V m\tp @r\tV\tt @r");
result.add("com-\tpa-\tri-\tson", "kh V m\tp e@\tV\ts V n");
result.add("com-\tpa-\tri-\tsons", "kh V m\tp e@\tV\ts V n z");
result.add("com-\tpa-\tring", "kh V m\tp e@\tI N");
result.add("com-\tpa-\tti-\tbi-\tli-\tty", "kh V m\tp {\tt V\tb I\tl V\tt i:");
result.add("com-\tpa-\tti-\tble", "kh V m\tp {\tt V\tb V l");
result.add("com-\tpa-\tti-\tbles", "kh V m\tp {\tt V\tb V l z");
result.add("com-\tpaq", "kh Q m\tp { k");
result.add("com-\tpaq's", "kh Q m\tp { k s");
result.add("com-\tpare", "kh V m\tp e@");
result.add("com-\tpared", "kh V m\tp e@ d");
result.add("com-\tpares", "kh V m\tp e@ z");
result.add("com-\tpart-\tmen-\tta-\tlize", "kh V m\tp Q@ t\tm e n\tt V\tl aI z");
result.add("com-\tpart-\tmen-\tta-\tlized", "kh Q m\tp Q@ t\tm e n\tt V\tl aI z d");
result.add("com-\tpart-\tmen-\ttal", "kh V m\tp Q@ t\tm e n\tt V l");
result.add("com-\tpart-\tment", "kh V m\tp Q@ t\tm V n t");
result.add("com-\tpart-\tments", "kh V m\tp Q@ t\tm V n t s");
result.add("com-\tpas-\tsio-\tnate", "kh V m\tp {\tS V\tn V t");
result.add("com-\tpas-\tsio-\tnate-\tly", "kh V m\tp {\tS V\tn V t\tl i:");
result.add("com-\tpas-\tsion", "kh V m\tp {\tS V n");
result.add("com-\tpass", "kh V m\tp V s");
result.add("com-\tpat-\tri-\tot", "kh V m\tp eI t\tr i:\tV t");
result.add("com-\tpat-\tri-\tots", "kh V m\tp eI t\tr i:\tV t s");
result.add("com-\tpe-\tted", "kh V m\tp i:\tt V d");
result.add("com-\tpe-\tten-\tcies", "kh Q m\tp V\tt V n\ts i: z");
result.add("com-\tpe-\tten-\tcy", "kh Q m\tp V\tt V n\ts i:");
result.add("com-\tpe-\ttence", "kh Q m\tp V\tt V n s");
result.add("com-\tpe-\ttent", "kh Q m\tp V\tt V n t");
result.add("com-\tpe-\ttent-\tly", "kh Q m\tp V\tt V n\tt l i:");
result.add("com-\tpe-\tti-\ttion", "kh Q m\tp V\tt I\tS V n");
result.add("com-\tpe-\tti-\ttions", "kh Q m\tp V\tt I\tS V n z");
result.add("com-\tpe-\tti-\ttion's", "kh Q m\tp V\tt I\tS V n z");
result.add("com-\tpe-\tti-\ttive", "kh V m\tp e\tt V\tt I v");
result.add("com-\tpe-\tti-\ttive-\tly", "kh V m\tp e\tt V\tt I v\tl i:");
result.add("com-\tpe-\tti-\ttive-\tness", "kh V m\tp e\tt V\tt I v\tn V s");
result.add("com-\tpe-\tti-\ttor", "kh V m\tp e\tt V\tt @r");
result.add("com-\tpe-\tti-\ttors", "kh V m\tp e\tt V\tt @r z");
result.add("com-\tpe-\tti-\ttor's", "kh V m\tp e\tt V\tt @r z");
result.add("com-\tpe-\tting", "kh V m\tp i:\tt I N");
result.add("com-\tpel", "kh V m\tp e l");
result.add("com-\tpel-\tling", "kh V m\tp e\tl I N");
result.add("com-\tpel-\tling-\tly", "kh V m\tp e\tl I N\tl i:");
result.add("com-\tpelled", "kh V m\tp e l d");
result.add("com-\tpels", "kh V m\tp e l z");
result.add("com-\tpen-\tdi-\tum", "kh V m\tp e n\td i:\tV m");
result.add("com-\tpen-\tsa-\tble", "kh V m\tp e n\ts V\tb V l");
result.add("com-\tpen-\tsa-\tted", "kh Q m\tp V n\ts eI\tt V d");
result.add("com-\tpen-\tsa-\tting", "kh Q m\tp V n\ts eI\tt I N");
result.add("com-\tpen-\tsa-\ttion", "kh Q m\tp V n\ts eI\tS V n");
result.add("com-\tpen-\tsa-\ttions", "kh Q m\tp V n\ts eI\tS V n z");
result.add("com-\tpen-\tsa-\tto-\try", "kh V m\tp e n\ts V\tt O@\ti:");
result.add("com-\tpen-\tsate", "kh Q m\tp V n\ts eI t");
result.add("com-\tpen-\tsates", "kh Q m\tp V n\ts eI t s");
result.add("com-\tpete", "kh V m\tp i: t");
result.add("com-\tpetes", "kh V m\tp i: t s");
result.add("com-\tpi-\tla-\ttion", "kh Q m\tp I\tl eI\tS V n");
result.add("com-\tpi-\tla-\ttions", "kh Q m\tp I\tl eI\tS V n z");
result.add("com-\tpi-\tler", "kh V m\tp aI\tl @r");
result.add("com-\tpi-\tlers", "kh V m\tp aI\tl @r z");
result.add("com-\tpi-\tling", "kh V m\tp aI\tl I N");
result.add("com-\tpile", "kh V m\tp aI l");
result.add("com-\tpiled", "kh V m\tp aI l d");
result.add("com-\tpiles", "kh V m\tp aI l z");
result.add("com-\tpla-\tcen-\tcy", "kh V m\tp l eI\ts V n\ts i:");
result.add("com-\tpla-\tcent", "kh V m\tp l eI\ts V n t");
result.add("com-\tpla-\tcent-\tly", "kh V m\tp l eI\ts V n\tt l i:");
result.add("com-\tplai-\tnant", "kh V m\tp l eI\tn V n t");
result.add("com-\tplai-\tnants", "kh V m\tp l eI\tn V n t s");
result.add("com-\tplai-\tner", "kh V m\tp l eI\tn @r");
result.add("com-\tplai-\tners", "kh Q m\tp l eI\tn @r z");
result.add("com-\tplai-\tning", "kh V m\tp l eI\tn I N");
result.add("com-\tplai-\tsant", "kh V m\tp l eI\ts V n t");
result.add("com-\tplain", "kh V m\tp l eI n");
result.add("com-\tplained", "kh V m\tp l eI n d");
result.add("com-\tplains", "kh V m\tp l eI n z");
result.add("com-\tplaint", "kh V m\tp l eI n t");
result.add("com-\tplaints", "kh V m\tp l eI n t s");
result.add("com-\tpo", "kh Q m\tp @U");
result.add("com-\tpo-\tnent", "kh V m\tp @U\tn V n t");
result.add("com-\tpo-\tnents", "kh V m\tp @U\tn V n t s");
result.add("com-\tpo-\tser", "kh V m\tp @U\tz @r");
result.add("com-\tpo-\tsers", "kh V m\tp @U\tz @r z");
result.add("com-\tpo-\tser's", "kh V m\tp @U\tz @r z");
result.add("com-\tpo-\tses", "kh V m\tp @U\tz V z");
result.add("com-\tpo-\tsi-\ttio-\tnal", "kh Q m\tp V\tz I\tS V\tn V l");
result.add("com-\tpo-\tsi-\ttion", "kh Q m\tp V\tz I\tS V n");
result.add("com-\tpo-\tsi-\ttions", "kh Q m\tp V\tz I\tS V n z");
result.add("com-\tpo-\tsing", "kh V m\tp @U\tz I N");
result.add("com-\tpo-\tsite", "kh V m\tp Q\tz I t");
result.add("com-\tpo-\tsites", "kh V m\tp Q\tz I t s");
result.add("com-\tpo-\tsure", "kh V m\tp @U\tZ @r");
result.add("com-\tport", "kh V m\tp O@ t");
result.add("com-\tport-\tment", "kh V m\tp O@ t\tm V n t");
result.add("com-\tpos-\tting", "kh Q m\tp @U s\tt I N");
result.add("com-\tpose", "kh V m\tp @U z");
result.add("com-\tposed", "kh V m\tp @U z d");
result.add("com-\tpost", "kh Q m\tp @U s t");
result.add("com-\tpote", "kh Q m\tp @U t");
result.add("com-\tpoun-\tded", "kh V m\tp aU n\td V d");
result.add("com-\tpoun-\tding", "kh V m\tp aU n\td I N");
result.add("com-\tpound", "kh Q m\tp aU n d");
result.add("com-\tpounds", "kh Q m\tp aU n d z");
result.add("com-\tpre-\then-\tded", "kh Q m\tp r V\th e n\td V d");
result.add("com-\tpre-\then-\tding", "kh Q m\tp r V\th e n\td I N");
result.add("com-\tpre-\then-\tsi-\tbi-\tli-\tty", "kh Q m\tp r i:\th e n\ts I\tb I\tl I\tt i:");
result.add("com-\tpre-\then-\tsi-\tble", "kh Q m\tp r i:\th e n\ts I\tb V l");
result.add("com-\tpre-\then-\tsion", "kh Q m\tp r i:\th e n\tS V n");
result.add("com-\tpre-\then-\tsive", "kh Q m\tp r i:\th e n\ts I v");
result.add("com-\tpre-\then-\tsive-\tly", "kh Q m\tp r V\th e n\ts I v\tl i:");
result.add("com-\tpre-\thend", "kh Q m\tp r i:\th e n d");
result.add("com-\tpres-\tses", "kh Q m\tp r e\ts V z");
result.add("com-\tpres-\tsing", "kh V m\tp r e\ts I N");
result.add("com-\tpres-\tsion", "kh V m\tp r e\tS V n");
result.add("com-\tpres-\tsor", "kh V m\tp r e\ts @r");
result.add("com-\tpres-\tsors", "kh V m\tp r e\ts @r z");
result.add("com-\tpress", "kh Q m\tp r e s");
result.add("com-\tpressed", "kh V m\tp r e s t");
result.add("com-\tpri-\tses", "kh V m\tp r aI\tz V z");
result.add("com-\tpri-\tsing", "kh V m\tp r aI\tz I N");
result.add("com-\tprint", "kh Q m\tp r I n t");
result.add("com-\tprise", "kh V m\tp r aI z");
result.add("com-\tprised", "kh V m\tp r aI z d");
result.add("com-\tpro-\tmi-\tser", "kh Q m\tp r V\tm aI\tz @r");
result.add("com-\tpro-\tmi-\tses", "kh Q m\tp r V\tm aI\tz V z");
result.add("com-\tpro-\tmi-\tsing", "kh Q m\tp r V\tm aI\tz I N");
result.add("com-\tpro-\tmise", "kh Q m\tp r V\tm aI z");
result.add("com-\tpro-\tmised", "kh Q m\tp r V\tm aI z d");
result.add("com-\tpu-\tserve", "kh Q m\tp j u:\ts @r v");
result.add("com-\tpu-\tserve's", "kh Q m\tp j u:\ts @r v z");
result.add("com-\tpu-\tta-\ttio-\tnal", "kh Q m\tp j u:\tt eI\tS V\tn V l");
result.add("com-\tpu-\tta-\ttion", "kh Q m\tp j V\tt eI\tS V n");
result.add("com-\tpu-\tta-\ttions", "kh Q m\tp j u:\tt eI\tS V n z");
result.add("com-\tpu-\tte-\tri-\tza-\ttion", "kh V m\tp j u:\tt @r\tV\tz eI\tS V n");
result.add("com-\tpu-\tte-\tri-\tzing", "kh V m\tp j u:\tt @r\taI\tz I N");
result.add("com-\tpu-\tte-\trize", "kh V m\tp j u:\tt @r\taI z");
result.add("com-\tpu-\tte-\trized", "kh V m\tp j u:\tt @r\taI z d");
result.add("com-\tpu-\tted", "kh V m\tp j u:\tt V d");
result.add("com-\tpu-\tter", "kh V m\tp j u:\tt @r");
result.add("com-\tpu-\tter-\tlike", "kh V m\tp j u:\tt @r\tl aI k");
result.add("com-\tpu-\tters", "kh V m\tp j u:\tt @r z");
result.add("com-\tpu-\tter's", "kh V m\tp j u:\tt @r z");
result.add("com-\tpu-\tting", "kh V m\tp j u:\tt I N");
result.add("com-\tpul-\tsion", "kh V m\tp V l\tS V n");
result.add("com-\tpul-\tsions", "kh V m\tp U l\tS V n z");
result.add("com-\tpul-\tsive", "kh V m\tp V l\ts I v");
result.add("com-\tpul-\tsive-\tly", "kh V m\tp V l\ts I v\tl i:");
result.add("com-\tpul-\tso-\try", "kh V m\tp V l\ts @r\ti:");
result.add("com-\tpunc-\ttion", "kh V m\tp V N\tk S V n");
result.add("com-\tpute", "kh V m\tp j u: t");
result.add("com-\tputes", "kh V m\tp j u: t s");
result.add("com-\trade", "kh Q m\tr { d");
result.add("com-\trades", "kh Q m\tr { d z");
result.add("com-\tsat", "kh Q m\ts { t");
result.add("com-\tsat's", "kh Q m\ts { t s");
result.add("com-\tstock", "kh Q m\ts t Q k");
result.add("comb", "kh @U m");
result.add("combe", "kh @U m");
result.add("combed", "kh @U m d");
result.add("combes", "kh @U m z");
result.add("combs", "kh @U m z");
result.add("come", "kh V m");
result.add("come-\tback", "kh V m\tb { k");
result.add("come-\tbacks", "kh V m\tb { k s");
result.add("come-\tdown", "kh V m\td aU n");
result.add("come-\tly", "kh V m\tl i:");
result.add("come-\ton", "kh V\tm Q n");
result.add("comes", "kh V m z");
result.add("comf-\trey", "kh V m\tf r i:");
result.add("comp", "kh Q m p");
result.add("comp-\tle-\tmen-\tted", "kh Q m\tp l V\tm e n\tt V d");
result.add("comp-\tle-\tmen-\tting", "kh Q m\tp l V\tm e n\tt I N");
result.add("comp-\tle-\tment", "kh Q m\tp l V\tm V n t");
result.add("comp-\tle-\tmenta-\try", "kh Q m\tp l V\tm e n\tt r i:");
result.add("comp-\tle-\tments", "kh Q m\tp l V\tm V n t s");
result.add("comp-\tle-\tted", "kh V m\tp l i:\tt V d");
result.add("comp-\tle-\tting", "kh V m\tp l i:\tt I N");
result.add("comp-\tle-\ttion", "kh V m\tp l i:\tS V n");
result.add("comp-\tle-\ttions", "kh V m\tp l i:\tS V n z");
result.add("comp-\tle-\txes", "kh Q m\tp l e k\ts V z");
result.add("comp-\tle-\txi-\tties", "kh V m\tp l e k\ts V\tt i: z");
result.add("comp-\tle-\txi-\tty", "kh V m\tp l e k\ts V\tt i:");
result.add("comp-\tle-\txion", "kh V m\tp e k\tS V n");
result.add("comp-\tle-\txions", "kh V m\tp e k\tS V n z");
result.add("comp-\tlete", "kh V m\tp l i: t");
result.add("comp-\tlete-\tly", "kh V m\tp l i: t\tl i:");
result.add("comp-\tlete-\tness", "kh V m\tp l i: t\tn V s");
result.add("comp-\tletes", "kh V m\tp l i: t s");
result.add("comp-\tlex", "kh Q m\tp l e k s");
result.add("comp-\tli-\tance", "kh V m\tp l aI\tV n s");
result.add("comp-\tli-\tant", "kh V m\tp l aI\tV n t");
result.add("comp-\tli-\tca-\tted", "kh Q m\tp l I\tk eI\tt I d");
result.add("comp-\tli-\tca-\tting", "kh Q m\tp l I\tk eI\tt I N");
result.add("comp-\tli-\tca-\ttion", "kh Q m\tp l I\tk eI\tS V n");
result.add("comp-\tli-\tca-\ttions", "kh Q m\tp l V\tk eI\tS V n z");
result.add("comp-\tli-\tcate", "kh Q m\tp l I\tk eI t");
result.add("comp-\tli-\tcates", "kh Q m\tp l I\tk eI t s");
result.add("comp-\tli-\tci-\tty", "kh V m\tp l I\ts V\tt i:");
result.add("comp-\tli-\tcit", "kh V m\tp l I\ts V t");
result.add("comp-\tli-\tmen-\tta-\try", "kh Q m\tp l I\tm e n\tt @r\ti:");
result.add("comp-\tli-\tmen-\tted", "kh Q m\tp l I\tm e n\tt V d");
result.add("comp-\tli-\tmen-\tting", "kh Q m\tp l I\tm e n\tt I N");
result.add("comp-\tli-\tment", "kh Q m\tp l I\tm e n t");
result.add("comp-\tli-\tments", "kh Q m\tp l I\tm e n t s");
result.add("comp-\tlied", "kh V m\tp l aI d");
result.add("comp-\tlies", "kh V m\tp l aI z");
result.add("comp-\tly", "kh V m\tp l aI");
result.add("comp-\tly-\ting", "kh V m\tp l aI\tI N");
result.add("comp-\tton", "kh Q m\tp t V n");
result.add("comp-\tton's", "kh Q m\tp t V n z");
result.add("comp-\ttrol-\tler", "kh V n\tt r @U\tl @r");
result.add("comp-\ttrol-\tler's", "kh V n\tt r @U\tl @r z");
result.add("coms", "kh Q m z");
result.add("com's", "kh Q m z");
result.add("con", "kh Q n");
result.add("con-\tca-\tte-\tna-\ttion", "kh V n\tk {\tt V\tn eI\tS V n");
result.add("con-\tca-\tte-\tnate", "kh V n\tk {\tt V\tn eI t");
result.add("con-\tcan-\tnon", "kh V n\tk {\tn V n");
result.add("con-\tcave", "kh Q n\tk eI v");
result.add("con-\tce-\tded", "kh V n\ts i:\td V d");
result.add("con-\tce-\tding", "kh V n\ts i:\td I N");
result.add("con-\tcea-\tling", "kh V n\ts i:\tl I N");
result.add("con-\tceal", "kh V n\ts i: l");
result.add("con-\tceal-\tment", "kh V n\ts i: l\tm V n t");
result.add("con-\tcealed", "kh V n\ts i: l d");
result.add("con-\tceals", "kh V n\ts i: l z");
result.add("con-\tcede", "kh V n\ts i: d");
result.add("con-\tcedes", "kh V n\ts i: d z");
result.add("con-\tcei-\tted", "kh V n\ts i:\tt V d");
result.add("con-\tcei-\tva-\tble", "kh V n\ts i:\tv V\tb V l");
result.add("con-\tcei-\tvab-\tly", "kh V n\ts i:\tv V b\tl i:");
result.add("con-\tcei-\tving", "kh V n\ts i:\tv I N");
result.add("con-\tceit", "kh V n\ts i: t");
result.add("con-\tceive", "kh V n\ts i: v");
result.add("con-\tceived", "kh V n\ts i: v d");
result.add("con-\tcent-\tra-\tted", "kh O: n\ts V n\tt r eI\tt V d");
result.add("con-\tcent-\tra-\tting", "kh Q n\ts V n\tt r eI\tt I N");
result.add("con-\tcent-\tra-\ttion", "kh Q n\ts V n\tt r eI\tS V n");
result.add("con-\tcent-\tra-\ttions", "kh Q n\ts V n\tt r eI\tS V n z");
result.add("con-\tcent-\trate", "kh Q n\ts V n\tt r eI t");
result.add("con-\tcent-\trates", "kh Q n\ts V n\tt r eI t s");
result.add("con-\tcent-\tric", "kh V n\ts e n\tt r I k");
result.add("con-\tcep-\tci-\ton", "kh V n\ts e p\ts i:\t@U n");
result.add("con-\tcep-\ttion", "kh V n\ts e p\tS V n");
result.add("con-\tcep-\ttions", "kh V n\ts e p\tS V n z");
result.add("con-\tcep-\ttu-\tal", "kh V n\ts e p\ttS u:\tV l");
result.add("con-\tcep-\ttu-\tal-\tly", "kh V n\ts e p\ttS u:\tV\tl i:");
result.add("con-\tcep-\ttua-\tli-\tza-\ttion", "kh V n\ts e p\ttS w V\tl V\tz eI\tS V n");
result.add("con-\tcept", "kh Q n\ts e p t");
result.add("con-\tcepts", "kh Q n\ts e p t s");
result.add("con-\tcer-\tted", "kh V n\ts @r\tt V d");
result.add("con-\tcer-\tti", "kh V n\ttS e@\tt i:");
result.add("con-\tcer-\tti-\tna", "kh Q n\ts @r\tt i:\tn V");
result.add("con-\tcer-\tto", "kh V n\ttS e@\tt @U");
result.add("con-\tcer-\ttos", "kh V n\ttS e@\tt @U z");
result.add("con-\tcern", "kh V n\ts @r n");
result.add("con-\tcern-\ting", "kh V n\ts @r\tn I N");
result.add("con-\tcerned", "kh V n\ts @r n d");
result.add("con-\tcerns", "kh V n\ts @r n z");
result.add("con-\tcert", "kh Q n\ts @r t");
result.add("con-\tcert-\tmas-\tter", "kh Q n\ts @r t\tm { s\tt @r");
result.add("con-\tcerts", "kh Q n\ts @r t s");
result.add("con-\tces-\tsio-\tna-\try", "kh V n\ts e\tS V\tn e@\ti:");
result.add("con-\tces-\tsio-\tnaire", "kh V n\ts e\tS V\tn e@");
result.add("con-\tces-\tsio-\tnal", "kh V n\ts e\tS V\tn V l");
result.add("con-\tces-\tsion", "kh V n\ts e\tS V n");
result.add("con-\tces-\tsions", "kh V n\ts e\tS V n z");
result.add("con-\tcha", "kh Q n\ttS V");
result.add("con-\tchi-\tta", "kh V n\ttS i:\tt V");
result.add("con-\tci-\terge", "kh Q n\ts i:\te@ Z");
result.add("con-\tci-\tli-\ta-\ttion", "kh V n\ts I\tl i:\teI\tS V n");
result.add("con-\tci-\tli-\ta-\tto-\try", "kh V n\ts I\tl i:\tV\tt O@\ti:");
result.add("con-\tci-\tli-\ta-\ttor", "kh V n\ts i:\tl i:\teI\tt @r");
result.add("con-\tci-\tli-\ta-\ttor's", "kh V n\ts I\tl i:\teI\tt @r z");
result.add("con-\tcise", "kh V n\ts aI s");
result.add("con-\tcise-\tly", "kh V n\ts aI s\tl i:");
result.add("con-\tco-\tmi-\ttant", "kh Q n\tk Q\tm I\tt V n t");
result.add("con-\tco-\tmi-\ttant-\tly", "kh Q n\tk Q\tm I\tt V n\tt l i:");
result.add("con-\tcoc-\tted", "kh V n\tk Q k\tt V d");
result.add("con-\tcoc-\tting", "kh V n\tk Q k\tt I N");
result.add("con-\tcoc-\ttion", "kh V n\tk Q k\tS V n");
result.add("con-\tcoc-\ttions", "kh V n\tk Q k\tS V n z");
result.add("con-\tcoct", "kh V n\tk Q k t");
result.add("con-\tcord", "kh Q n\tk O@ d");
result.add("con-\tcorde", "kh Q n\tk O@ d");
result.add("con-\tcord's", "kh Q n\tk O@ d z");
result.add("con-\tcour-\tses", "kh Q n\tk O@\ts V z");
result.add("con-\tcourse", "kh Q n\tk O@ s");
result.add("con-\tcrete", "kh V n\tk r i: t");
result.add("con-\tcrete-\tly", "kh Q n\tk r i: t\tl i:");
result.add("con-\tcu-\tbi-\tnage", "kh Q n\tk j u:\tb I\tn V dZ");
result.add("con-\tcu-\tbine", "kh Q n\tk j V\tb aI n");
result.add("con-\tcu-\tbines", "kh Q n\tk j V\tb aI n z");
result.add("con-\tcur", "kh V n\tk @r");
result.add("con-\tcur-\trence", "kh V n\tk @r\tV n s");
result.add("con-\tcur-\trent", "kh V n\tk @r\tV n t");
result.add("con-\tcur-\trent-\tly", "kh V n\tk @r\tV n\tt l i:");
result.add("con-\tcur-\tring", "kh V n\tk @r\tI N");
result.add("con-\tcurred", "kh V n\tk @r d");
result.add("con-\tcurs", "kh V n\tk @r z");
result.add("con-\tcus-\tsion", "kh V n\tk V\tS V n");
result.add("con-\tcus-\tsions", "kh V n\tk V\tS V n z");
result.add("con-\tde-\tscen-\tding", "kh Q n\td V\ts e n\td I N");
result.add("con-\tde-\tscen-\tsion", "kh Q n\td V\ts e n\tS V n");
result.add("con-\tde-\tscend", "kh Q n\td V\ts e n d");
result.add("con-\tdem-\tna-\ttion", "kh Q n\td V m\tn eI\tS V n");
result.add("con-\tdem-\tna-\ttions", "kh Q n\td V m\tn eI\tS V n z");
result.add("con-\tdem-\tning", "kh V n\td e\tm I N");
result.add("con-\tdemn", "kh V n\td e m");
result.add("con-\tdemned", "kh V n\td e m d");
result.add("con-\tdemns", "kh V n\td e m z");
result.add("con-\tden-\tsa-\ttion", "kh Q n\td V n\ts eI\tS V n");
result.add("con-\tden-\tsate", "kh Q n\td V n\ts eI t");
result.add("con-\tden-\tsates", "kh Q n\td V n\ts eI t s");
result.add("con-\tden-\tser", "kh V n\td e n\ts @r");
result.add("con-\tden-\tsing", "kh V n\td e n\ts I N");
result.add("con-\tdense", "kh V n\td e n s");
result.add("con-\tdensed", "kh V n\td e n s t");
result.add("con-\tder", "kh Q n\td @r");
result.add("con-\tdi-\tment", "kh Q n\td I\tm V n t");
result.add("con-\tdi-\tments", "kh Q n\td I\tm V n t s");
result.add("con-\tdi-\ttio-\tna-\tli-\tty", "kh V n\td I\tS V\tn {\tl V\tt i:");
result.add("con-\tdi-\ttio-\tnal", "kh V n\td I\tS V\tn V l");
result.add("con-\tdi-\ttio-\tnal-\tly", "kh V n\td I\tS V\tn V\tl i:");
result.add("con-\tdi-\ttio-\tner", "kh V n\td I\tS V\tn @r");
result.add("con-\tdi-\ttio-\tners", "kh V n\td I\tS V\tn @r z");
result.add("con-\tdi-\ttio-\tning", "kh V n\td I\tS V\tn I N");
result.add("con-\tdi-\ttion", "kh V n\td I\tS V n");
result.add("con-\tdi-\ttioned", "kh V n\td I\tS V n d");
result.add("con-\tdi-\ttions", "kh V n\td I\tS V n z");
result.add("con-\tdie", "kh Q n\td i:");
result.add("con-\tdit", "kh Q n\td I t");
result.add("con-\tdo", "kh Q n\td @U");
result.add("con-\tdo-\tlen-\tces", "kh V n\td @U\tl V n\ts V z");
result.add("con-\tdo-\tlence", "kh V n\td @U\tl V n s");
result.add("con-\tdo-\tmi-\tni-\tum", "kh Q n\td V\tm I\tn i:\tV m");
result.add("con-\tdo-\tmi-\tni-\tums", "kh Q n\td V\tm I\tn i:\tV m z");
result.add("con-\tdo-\tning", "kh V n\td @U\tn I N");
result.add("con-\tdom", "kh Q n\td V m");
result.add("con-\tdoms", "kh Q n\td V m z");
result.add("con-\tdon", "kh Q n\td V n");
result.add("con-\tdone", "kh V n\td @U n");
result.add("con-\tdoned", "kh V n\td @U n d");
result.add("con-\tdones", "kh V n\td @U n z");
result.add("con-\tdor", "kh Q n\td @r");
result.add("con-\tdors", "kh Q n\td @r z");
result.add("con-\tdos", "kh Q n\td @U z");
result.add("con-\tdu-\tcive", "kh V n\td u:\ts I v");
result.add("con-\tdu-\tit", "kh Q n\td u:\tI t");
result.add("con-\tdu-\tits", "kh Q n\td u:\tI t s");
result.add("con-\tduc-\tted", "kh V n\td V k\tt V d");
result.add("con-\tduc-\tti-\tvi-\tty", "kh Q n\td V k\tt I\tv I\tt i:");
result.add("con-\tduc-\tting", "kh V n\td V k\tt I N");
result.add("con-\tduc-\ttion", "kh V n\td V k\tS V n");
result.add("con-\tduc-\ttive", "kh V n\td V k\tt I v");
result.add("con-\tduc-\ttor", "kh V n\td V k\tt @r");
result.add("con-\tduc-\ttors", "kh V n\td V k\tt @r z");
result.add("con-\tduct", "kh V n\td V k t");
result.add("con-\tducts", "kh V n\td V k t s");
result.add("con-\tfa-\tbu-\tla-\ttion", "kh V n\tf { b\tj V\tl eI\tS V n");
result.add("con-\tfe-\tde-\tra-\tcy", "kh V n\tf e\td @r\tV\ts i:");
result.add("con-\tfe-\tde-\tra-\tcy's", "kh V n\tf e\td @r\tV\ts i: z");
result.add("con-\tfe-\tde-\tra-\ttion", "kh V n\tf e\td @r\teI\tS V n");
result.add("con-\tfe-\tde-\trate", "kh V n\tf e\td @r\tV t");
result.add("con-\tfe-\tree", "kh Q n\tf @r\ti:");
result.add("con-\tfe-\trees", "kh Q n\tf @r\ti: z");
result.add("con-\tfe-\tren-\tces", "kh Q n\tf @r\tV n\ts V z");
result.add("con-\tfe-\tren-\tce's", "kh Q n\tf @r\tV n\ts V z");
result.add("con-\tfe-\trence", "kh Q n\tf @r\tV n s");
result.add("con-\tfec-\ttio-\tna-\tries", "kh V n\tf e k\tS V\tn e@\ti: z");
result.add("con-\tfec-\ttio-\tna-\try", "kh V n\tf e k\tS V\tn e@\ti:");
result.add("con-\tfec-\ttio-\tne-\try", "kh V n\tf e k\tS V\tn e@\ti:");
result.add("con-\tfec-\ttio-\tner", "kh V n\tf e k\tS V\tn @r");
result.add("con-\tfec-\ttio-\tners", "kh V n\tf e k\tS V\tn @r z");
result.add("con-\tfec-\ttion", "kh V n\tf e k\tS V n");
result.add("con-\tfec-\ttions", "kh V n\tf e k\tS V n z");
result.add("con-\tfect", "kh V n\tf e k t");
result.add("con-\tfer", "kh V n\tf @r");
result.add("con-\tfer-\tring", "kh V n\tf @r\tI N");
result.add("con-\tferred", "kh V n\tf @r d");
result.add("con-\tfers", "kh V n\tf @r z");
result.add("con-\tfes-\tses", "kh V n\tf e\ts V z");
result.add("con-\tfes-\tsing", "kh V n\tf e\ts I N");
result.add("con-\tfes-\tsio-\tnal", "kh V n\tf e\tS V\tn V l");
result.add("con-\tfes-\tsio-\tnals", "kh V n\tf e\tS V\tn V l z");
result.add("con-\tfes-\tsion", "kh V n\tf e\tS V n");
result.add("con-\tfes-\tsions", "kh V n\tf e\tS V n z");
result.add("con-\tfess", "kh V n\tf e s");
result.add("con-\tfessed", "kh V n\tf e s t");
result.add("con-\tfet-\tti", "kh V n\tf e\tt i:");
result.add("con-\tfi-\tdant", "kh Q n\tf I\td Q n t");
result.add("con-\tfi-\tdante", "kh Q n\tf I\td { n t");
result.add("con-\tfi-\tdants", "kh Q n\tf I\td { n t s");
result.add("con-\tfi-\tded", "kh V n\tf aI\td V d");
result.add("con-\tfi-\tden-\tces", "kh Q n\tf I\td V n\ts V z");
result.add("con-\tfi-\tden-\tce's", "kh Q n\tf I\td V n\ts V z");
result.add("con-\tfi-\tden-\tti-\ta-\tli-\tty", "kh Q n\tf I\td e n\tS i:\t{\tl I\tt i:");
result.add("con-\tfi-\tden-\ttial", "kh Q n\tf I\td e n\tS V l");
result.add("con-\tfi-\tden-\ttial-\tly", "kh Q n\tf I\td e n\tS V\tl i:");
result.add("con-\tfi-\tdence", "kh Q n\tf I\td V n s");
result.add("con-\tfi-\tdent", "kh Q n\tf I\td V n t");
result.add("con-\tfi-\tdent-\tly", "kh Q n\tf I\td V n\tt l i:");
result.add("con-\tfi-\tding", "kh V n\tf aI\td I N");
result.add("con-\tfide", "kh V n\tf aI d");
result.add("con-\tfides", "kh V n\tf aI d z");
result.add("con-\tfine-\tment", "kh V n\tf aI n\tm V n t");
result.add("con-\tfirms", "kh V n\tf @r m z");
result.add("con-\tfis-\tca-\tted", "kh Q n\tf I s\tk eI\tt I d");
result.add("con-\tfis-\tca-\tting", "kh Q n\tf I s\tk eI\tt I N");
result.add("con-\tfis-\tca-\ttion", "kh Q n\tf I s\tk eI\tS V n");
result.add("con-\tfis-\tca-\tto-\try", "kh V n\tf I s\tk V\tt O@\ti:");
result.add("con-\tfis-\tcate", "kh Q n\tf I s\tk eI t");
result.add("con-\tfor-\tma-\ttio-\tnal", "kh Q n\tf @r\tm eI\tS V\tn V l");
result.add("con-\tfor-\tmance", "kh V n\tf O@\tm V n s");
result.add("con-\tfor-\tmi-\tty", "kh V n\tf O@\tm V\tt i:");
result.add("con-\tfor-\tming", "kh V n\tf O@\tm I N");
result.add("con-\tfor-\tmist", "kh V n\tf O@\tm I s t");
result.add("con-\tfor-\tmists", "kh V n\tf O@\tm V s t s");
result.add("con-\tform", "kh V n\tf O@ m");
result.add("con-\tformed", "kh V n\tf O@ m d");
result.add("con-\tforms", "kh V n\tf O@ m z");
result.add("con-\tfoun-\tded", "kh V n\tf aU n\td V d");
result.add("con-\tfoun-\tding", "kh V n\tf aU n\td I N");
result.add("con-\tfound", "kh Q n\tf aU n d");
result.add("con-\tfounds", "kh V n\tf aU n d z");
result.add("con-\tfron-\tta-\ttio-\tnal", "kh Q n\tf r V n\tt eI\tS V\tn V l");
result.add("con-\tfron-\tta-\ttion", "kh Q n\tf r V n\tt eI\tS V n");
result.add("con-\tfron-\tta-\ttions", "kh Q n\tf r V n\tt eI\tS V n z");
result.add("con-\tfron-\tted", "kh V n\tf r V n\tt V d");
result.add("con-\tfron-\tting", "kh V n\tf r V n\tt I N");
result.add("con-\tfront", "kh V n\tf r V n t");
result.add("con-\tfronts", "kh V n\tf r V n t s");
result.add("con-\tfu-\tcia-\tni-\tsm", "kh V n\tf j u:\tS V\tn I\tz V m");
result.add("con-\tfu-\tcian", "kh V n\tf j u:\tS V n");
result.add("con-\tfu-\tcius", "kh V n\tf j u:\tS V s");
result.add("con-\tfu-\tses", "kh V n\tf j u:\tz V z");
result.add("con-\tfu-\tsing", "kh V n\tf j u:\tz I N");
result.add("con-\tfu-\tsing-\tly", "kh V n\tf j u:\tz I N\tl i:");
result.add("con-\tfu-\tsion", "kh V n\tf j u:\tZ V n");
result.add("con-\tfu-\tsions", "kh V n\tf j u:\tZ V n z");
result.add("con-\tfuse", "kh V n\tf j u: z");
result.add("con-\tfused", "kh V n\tf j u: z d");
result.add("con-\tga", "kh O: N\tg V");
result.add("con-\tge-\tni-\ta-\tli-\tty", "kh V n\tdZ i:\tn i:\t{\tl V\tt i:");
result.add("con-\tge-\tni-\ttal", "kh V n\tdZ e\tn V\tt V l");
result.add("con-\tge-\tnial", "kh V n\tdZ i: n\tj V l");
result.add("con-\tgeal", "kh V n\tdZ i: l");
result.add("con-\tgealed", "kh V n\tdZ i: l d");
result.add("con-\tger", "kh O:\tN @r");
result.add("con-\tges-\tted", "kh V n\tdZ e s\tt V d");
result.add("con-\tges-\ttion", "kh V n\tdZ e s\ttS V n");
result.add("con-\tges-\ttive", "kh V n\tdZ e s\tt I v");
result.add("con-\tgest", "kh V n\tdZ e s t");
result.add("con-\tgo", "kh Q N\tg @U");
result.add("con-\tjec-\tture", "kh V n\tdZ e k\ttS @r");
result.add("con-\tjec-\ttures", "kh V n\tdZ e k\ttS @r z");
result.add("con-\tjoin", "kh Q n\tdZ OI n");
result.add("con-\tjoined", "kh Q n\tdZ OI n d");
result.add("con-\tju-\tga-\tted", "kh Q n\tdZ V\tg eI\tt V d");
result.add("con-\tju-\tga-\ttion", "kh Q n\tdZ V\tg eI\tS V n");
result.add("con-\tju-\tga-\ttions", "kh Q n\tdZ V\tg eI\tS V n z");
result.add("con-\tju-\tgal", "kh Q n\tdZ V\tg V l");
result.add("con-\tju-\tgate", "kh Q n\tdZ V\tg eI t");
result.add("con-\tju-\tgates", "kh Q n\tdZ V\tg eI t s");
result.add("con-\tju-\tring", "kh Q n\tdZ @r\tI N");
result.add("con-\tju-\tror", "kh Q n\tdZ @r\t@r");
result.add("con-\tjunc-\tti-\tva", "kh Q n\tdZ V N\tk t aI\tv V");
result.add("con-\tjunc-\ttion", "kh V n\tdZ V N\tk S V n");
result.add("con-\tjunc-\ttions", "kh V n\tdZ V N\tk S V n z");
result.add("con-\tjure", "kh Q n\tdZ @r");
result.add("con-\tjured", "kh Q n\tdZ @r d");
result.add("con-\tjures", "kh Q n\tdZ @r z");
result.add("con-\tlan", "kh Q n\tl V n");
result.add("con-\tlee", "kh Q n\tl i:");
result.add("con-\tley", "kh Q n\tl i:");
result.add("con-\tlin", "kh Q n\tl I n");
result.add("con-\tlon", "kh Q n\tl V n");
result.add("con-\tnal-\tly", "kh Q\tn V\tl i:");
result.add("con-\tnal-\tly's", "kh Q\tn V\tl i: z");
result.add("con-\tnaught", "kh Q\tn O: t");
result.add("con-\tne-\try", "kh Q\tn @r\ti:");
result.add("con-\tne-\try's", "kh Q\tn @r\ti: z");
result.add("con-\tnec-\tted", "kh V\tn e k\tt V d");
result.add("con-\tnec-\tter", "kh V\tn e k\tt @r");
result.add("con-\tnec-\tti-\tcut", "kh V\tn e\tt V\tk V t");
result.add("con-\tnec-\tti-\tcut's", "kh V\tn e\tt V\tk V t s");
result.add("con-\tnec-\tti-\tvi-\tty", "kh V\tn e k\tt I\tv V\tt i:");
result.add("con-\tnec-\tting", "kh V\tn e k\tt I N");
result.add("con-\tnec-\ttion", "kh V\tn e k\tS V n");
result.add("con-\tnec-\ttions", "kh V\tn e k\tS V n z");
result.add("con-\tnec-\ttive", "kh V\tn e k\tt I v");
result.add("con-\tnec-\ttor", "kh V\tn e k\tt @r");
result.add("con-\tnec-\ttors", "kh V\tn e k\tt @r z");
result.add("con-\tnect", "kh V\tn e k t");
result.add("con-\tnects", "kh V\tn e k t s");
result.add("con-\tnel-\tley", "kh Q\tn V\tl i:");
result.add("con-\tnel-\tly", "kh Q\tn V\tl i:");
result.add("con-\tnel-\tly's", "kh Q\tn V\tl i: z");
result.add("con-\tnell", "kh Q\tn V l");
result.add("con-\tner", "kh Q\tn @r");
result.add("con-\tners", "kh Q\tn @r z");
result.add("con-\tner's", "kh Q\tn @r z");
result.add("con-\tnett", "kh Q\tn e t");
result.add("con-\tni-\tvance", "kh V\tn aI\tv V n s");
result.add("con-\tni-\tving", "kh V\tn aI\tv I N");
result.add("con-\tnie", "kh O:\tn i:");
result.add("con-\tnie's", "kh O:\tn i: z");
result.add("con-\tning", "kh Q\tn I N");
result.add("con-\tnip-\ttion", "kh V\tn I p\tS V n");
result.add("con-\tnive", "kh V\tn aI v");
result.add("con-\tno-\tta-\ttio-\tnal", "kh Q\tn V\tt eI\tS V\tn V l");
result.add("con-\tno-\tta-\ttion", "kh Q\tn V\tt eI\tS V n");
result.add("con-\tno-\tta-\ttions", "kh Q\tn V\tt eI\tS V n z");
result.add("con-\tnois-\tseur", "kh Q\tn V\ts @r");
result.add("con-\tnois-\tseurs", "kh Q\tn V\ts @r z");
result.add("con-\tnol-\tly", "kh O:\tn V\tl i:");
result.add("con-\tnor", "kh Q\tn @r");
result.add("con-\tnors", "kh Q\tn @r z");
result.add("con-\tnote", "kh V\tn @U t");
result.add("con-\tnotes", "kh V\tn @U t s");
result.add("con-\tny", "kh Q\tn i:");
result.add("con-\tque-\tring", "kh Q N\tk @r\tI N");
result.add("con-\tque-\tror", "kh Q N\tk @r\t@r");
result.add("con-\tque-\trors", "kh Q N\tk @r\t@r z");
result.add("con-\tque-\tror's", "kh Q N\tk @r\t@r z");
result.add("con-\tquer", "kh Q N\tk @r");
result.add("con-\tquered", "kh Q N\tk @r d");
result.add("con-\tquers", "kh Q N\tk @r z");
result.add("con-\tquest", "kh Q N\tk w e s t");
result.add("con-\tquests", "kh Q n\tk w e s t s");
result.add("con-\tquest's", "kh Q N\tk w e s t s");
result.add("con-\trad", "kh Q n\tr { d");
result.add("con-\trad's", "kh Q n\tr { d z");
result.add("con-\trail", "kh Q n\tr eI l");
result.add("con-\trail's", "kh Q n\tr eI l z");
result.add("con-\tran", "kh Q n\tr V n");
result.add("con-\trath", "kh Q n\tr V T");
result.add("con-\trey", "kh Q n\tr i:");
result.add("con-\troe", "kh Q n\tr @U");
result.add("con-\troy", "kh O: n\tr OI");
result.add("con-\tsci-\ten-\ttious", "kh Q n\tS i:\te n\tS V s");
result.add("con-\tsci-\ten-\ttious-\tly", "kh Q n\ttS i:\te n\ttS V s\tl i:");
result.add("con-\tscien-\tces", "kh Q n\tS V n\ts V z");
result.add("con-\tscience", "kh Q n\tS V n s");
result.add("con-\tscious", "kh Q n\tS V s");
result.add("con-\tscious-\tly", "kh Q n\tS V s\tl i:");
result.add("con-\tscious-\tness", "kh Q n\tS V s\tn V s");
result.add("con-\tse-\tcu-\ttive", "kh V n\ts e k\tj V\tt I v");
result.add("con-\tse-\tcu-\ttive-\tly", "kh V n\ts e k\tj V\tt I v\tl i:");
result.add("con-\tse-\tquen-\tces", "kh Q n\ts V k\tw e n\ts V z");
result.add("con-\tse-\tquen-\ttial", "kh Q n\ts V k\tw e n\ttS V l");
result.add("con-\tse-\tquence", "kh Q n\ts V k\tw V n s");
result.add("con-\tse-\tquent", "kh Q n\ts V k\tw V n t");
result.add("con-\tse-\tquent-\tly", "kh Q n\ts V k\tw V n\tt l i:");
result.add("con-\tsec-\tra-\tted", "kh Q n\ts V k\tr eI\tt V d");
result.add("con-\tsec-\tra-\ttion", "kh Q n\ts V k\tr eI\tS V n");
result.add("con-\tsec-\tra-\ttions", "kh Q n\ts V k\tr eI\tS V n z");
result.add("con-\tsec-\trate", "kh Q n\ts V k\tr eI t");
result.add("con-\tsen-\tsu-\tal", "kh V n\ts e n\ts u:\tV l");
result.add("con-\tsen-\tsus", "kh V n\ts e n\ts V s");
result.add("con-\tsen-\tted", "kh V n\ts e n\tt V d");
result.add("con-\tsen-\tting", "kh V n\ts e n\tt I N");
result.add("con-\tsent", "kh V n\ts e n t");
result.add("con-\tsents", "kh V n\ts e n t s");
result.add("con-\tser-\tva-\tti-\tsm", "kh V n\ts @r\tv V\tt I\tz V m");
result.add("con-\tser-\tva-\ttio-\tnist", "kh Q n\ts @r\tv eI\tS V\tn I s t");
result.add("con-\tser-\tva-\ttio-\tnists", "kh Q n\ts @r\tv eI\tS V\tn I s t s");
result.add("con-\tser-\tva-\ttion", "kh Q n\ts @r\tv eI\tS V n");
result.add("con-\tser-\tva-\ttive", "kh V n\ts @r\tv V\tt I v");
result.add("con-\tser-\tva-\ttive-\tly", "kh V n\ts @r\tv V\tt I v\tl i:");
result.add("con-\tser-\tva-\ttives", "kh V n\ts @r\tv V\tt I v z");
result.add("con-\tser-\tva-\tto-\tries", "kh V n\ts @r\tv V\tt O@\ti: z");
result.add("con-\tser-\tva-\tto-\try", "kh V n\ts @r\tv V\tt O@\ti:");
result.add("con-\tser-\tva-\ttor", "kh V n\ts @r\tv V\tt @r");
result.add("con-\tser-\tva-\ttor-\tship", "kh V n\ts @r\tv V\tt @r\tS I p");
result.add("con-\tser-\tva-\ttors", "kh V n\ts @r\tv V\tt @r z");
result.add("con-\tser-\tvan-\tcy", "kh V n\ts @r\tv V n\ts i:");
result.add("con-\tser-\tvan-\tcy's", "kh V n\ts @r\tv V n\ts i: z");
result.add("con-\tser-\tving", "kh V n\ts @r\tv I N");
result.add("con-\tserve", "kh V n\ts @r v");
result.add("con-\tserved", "kh V n\ts @r v d");
result.add("con-\tsho-\thoc-\tken", "kh Q n\tS V\th Q\tk V n");
result.add("con-\tsi-\tde-\tra-\tble", "kh V n\ts I\td @r\tV\tb V l");
result.add("con-\tsi-\tde-\tra-\ttion", "kh V n\ts I\td @r\teI\tS V n");
result.add("con-\tsi-\tde-\tra-\ttions", "kh V n\ts I\td @r\teI\tS V n z");
result.add("con-\tsi-\tde-\trab-\tly", "kh V n\ts I\td @r\tV b\tl i:");
result.add("con-\tsi-\tde-\trate", "kh V n\ts I\td @r\tV t");
result.add("con-\tsi-\tde-\tring", "kh V n\ts I\td @r\tI N");
result.add("con-\tsi-\tder", "kh V n\ts I\td @r");
result.add("con-\tsi-\tdered", "kh V n\ts I\td @r d");
result.add("con-\tsi-\tders", "kh V n\ts I\td @r z");
result.add("con-\tsign", "kh V n\ts aI n");
result.add("con-\tsign-\tment", "kh V n\ts aI n\tm V n t");
result.add("con-\tsigned", "kh V n\ts aI n d");
result.add("con-\tsis-\tted", "kh V n\ts I s\tt V d");
result.add("con-\tsis-\tten-\tcy", "kh V n\ts I s\tt V n\ts i:");
result.add("con-\tsis-\ttence", "kh V n\ts I s\tt V n s");
result.add("con-\tsis-\ttent", "kh V n\ts I s\tt V n t");
result.add("con-\tsis-\ttent-\tly", "kh V n\ts I s\tt V n\tt l i:");
result.add("con-\tsis-\tting", "kh V n\ts I s\tt I N");
result.add("con-\tsist", "kh V n\ts I s t");
result.add("con-\tsists", "kh V n\ts I s t s");
result.add("con-\tso-\tla-\tta", "kh Q n\ts @U\tl Q\tt V");
result.add("con-\tso-\tla-\ttion", "kh Q n\ts V\tl eI\tS V n");
result.add("con-\tso-\tla-\ttions", "kh Q n\ts V\tl eI\tS V n z");
result.add("con-\tso-\tli-\tda-\tted", "kh V n\ts Q\tl V\td eI\tt V d");
result.add("con-\tso-\tli-\tda-\tting", "kh V n\ts Q\tl V\td eI\tt I N");
result.add("con-\tso-\tli-\tda-\ttion", "kh V n\ts Q\tl V\td eI\tS V n");
result.add("con-\tso-\tli-\tda-\ttions", "kh V n\ts Q\tl V\td eI\tS V n z");
result.add("con-\tso-\tli-\tda-\ttor", "kh V n\ts Q\tl V\td eI\tt @r");
result.add("con-\tso-\tli-\tda-\ttors", "kh V n\ts Q\tl V\td eI\tt @r z");
result.add("con-\tso-\tli-\tdate", "kh V n\ts Q\tl V\td eI t");
result.add("con-\tso-\tli-\tdates", "kh V n\ts Q\tl V\td eI t s");
result.add("con-\tso-\tling", "kh V n\ts @U\tl I N");
result.add("con-\tso-\tnan-\ttal", "kh Q n\ts V\tn Q n\tt V l");
result.add("con-\tso-\tnant", "kh Q n\ts V\tn V n t");
result.add("con-\tso-\tnants", "kh Q n\ts V\tn V n t s");
result.add("con-\tsol", "kh Q n\ts Q l");
result.add("con-\tsole", "kh Q n\ts @U l");
result.add("con-\tsoled", "kh V n\ts @U l d");
result.add("con-\tsoles", "kh V n\ts @U l z");
result.add("con-\tsol's", "kh Q n\ts Q l z");
result.add("con-\tsor-\tti-\tum", "kh V n\ts O@\tS i:\tV m");
result.add("con-\tsor-\tti-\tums", "kh V n\ts O@\tS i:\tV m z");
result.add("con-\tsor-\tti-\tum's", "kh V n\ts O@\tS i:\tV m z");
result.add("con-\tsor-\ttia", "kh V n\ts O@\tS V");
result.add("con-\tsor-\tting", "kh V n\ts O@\tt I N");
result.add("con-\tsort", "kh V n\ts O@ t");
result.add("con-\tsu-\tlar", "kh Q n\ts V\tl @r");
result.add("con-\tsu-\tlate", "kh Q n\ts V\tl V t");
result.add("con-\tsu-\tlates", "kh Q n\ts V\tl V t s");
result.add("con-\tsu-\tma-\tble", "kh V n\ts u:\tm V\tb V l");
result.add("con-\tsu-\tme-\tri-\tsm", "kh V n\ts u:\tm @r\tI\tz V m");
result.add("con-\tsu-\tme-\trist", "kh V n\ts u:\tm @r\tI s t");
result.add("con-\tsu-\tme-\trists", "kh V n\ts u:\tm @r\tI s t s");
result.add("con-\tsu-\tmer", "kh V n\ts u:\tm @r");
result.add("con-\tsu-\tmers", "kh V n\ts u:\tm @r z");
result.add("con-\tsu-\tmer's", "kh V n\ts u:\tm @r z");
result.add("con-\tsu-\tming", "kh V n\ts u:\tm I N");
result.add("con-\tsue-\tla", "kh V n\ts w eI\tl V");
result.add("con-\tsul", "kh Q n\ts V l");
result.add("con-\tsul-\tship", "kh Q n\ts V l\tS I p");
result.add("con-\tsul-\tta-\ttion", "kh Q n\ts V l\tt eI\tS V n");
result.add("con-\tsul-\tta-\ttions", "kh Q n\ts V l\tt eI\tS V n z");
result.add("con-\tsul-\tta-\ttive", "kh V n\ts V l\tt V\tt I v");
result.add("con-\tsul-\ttan-\tcy", "kh V n\ts V l\tt V n\ts i:");
result.add("con-\tsul-\ttant", "kh V n\ts V l\tt V n t");
result.add("con-\tsul-\ttants", "kh V n\ts V l\tt V n t s");
result.add("con-\tsul-\ttant's", "kh V n\ts V l\tt V n t s");
result.add("con-\tsul-\tted", "kh V n\ts V l\tt V d");
result.add("con-\tsul-\tting", "kh V n\ts V l\tt I N");
result.add("con-\tsult", "kh V n\ts V l t");
result.add("con-\tsults", "kh V n\ts V l t s");
result.add("con-\tsum-\tma-\tted", "kh Q n\ts V\tm eI\tt V d");
result.add("con-\tsum-\tma-\tting", "kh Q n\ts V\tm eI\tt I N");
result.add("con-\tsum-\tma-\ttion", "kh Q n\ts V\tm eI\tS V n");
result.add("con-\tsum-\tmate", "kh Q n\ts V\tm V t");
result.add("con-\tsume", "kh V n\ts u: m");
result.add("con-\tsumed", "kh V n\ts u: m d");
result.add("con-\tsumes", "kh V n\ts u: m z");
result.add("con-\tsump-\ttion", "kh V n\ts V m\tp S V n");
result.add("con-\tta-\tgion", "kh V n\tt eI\tdZ V n");
result.add("con-\tta-\tgious", "kh V n\tt eI\tdZ V s");
result.add("con-\tta-\tgious-\tness", "kh V n\tt eI\tdZ V s\tn V s");
result.add("con-\tta-\tmi-\tna-\tted", "kh V n\tt {\tm V\tn eI\tt V d");
result.add("con-\tta-\tmi-\tna-\tting", "kh V n\tt {\tm V\tn eI\tt I N");
result.add("con-\tta-\tmi-\tna-\ttion", "kh V n\tt {\tm V\tn eI\tS V n");
result.add("con-\tta-\tmi-\tnant", "kh V n\tt {\tm V\tn V n t");
result.add("con-\tta-\tmi-\tnants", "kh V n\tt {\tm V\tn V n t s");
result.add("con-\tta-\tmi-\tnate", "kh V n\tt {\tm V\tn eI t");
result.add("con-\tta-\tmi-\tnates", "kh V n\tt {\tm V\tn eI t s");
result.add("con-\ttac", "kh Q n\tt { k");
result.add("con-\ttac-\tted", "kh Q n\tt { k\tt V d");
result.add("con-\ttac-\tting", "kh Q n\tt { k\tt I N");
result.add("con-\ttact", "kh Q n\tt { k t");
result.add("con-\ttacts", "kh Q n\tt { k t s");
result.add("con-\ttai-\tne-\trize", "kh V n\tt eI\tn @r\taI z");
result.add("con-\ttai-\tne-\trized", "kh V n\tt eI\tn @r\taI z d");
result.add("con-\ttai-\tner", "kh V n\tt eI\tn @r");
result.add("con-\ttai-\tner-\tboard", "kh V n\tt eI\tn @r\tb O@ d");
result.add("con-\ttai-\tners", "kh V n\tt eI\tn @r z");
result.add("con-\ttai-\tner's", "kh V n\tt eI\tn @r z");
result.add("con-\ttai-\tning", "kh V n\tt eI\tn I N");
result.add("con-\ttain", "kh V n\tt eI n");
result.add("con-\ttain-\tment", "kh V n\tt eI n\tm V n t");
result.add("con-\ttained", "kh V n\tt eI n d");
result.add("con-\ttains", "kh V n\tt eI n z");
result.add("con-\ttem-\tpo", "kh Q n\tt e m\tp @U");
result.add("con-\ttem-\tpo-\tra-\tne-\tous", "kh V n\tt e m\tp @r\teI\tn i:\tV s");
result.add("con-\ttem-\tpo-\tra-\tne-\tous-\tly", "kh V n\tt e m\tp @r\teI\tn i:\tV s\tl i:");
result.add("con-\ttem-\tpo-\tra-\tries", "kh V n\tt e m\tp @r\te@\ti: z");
result.add("con-\ttem-\tpo-\tra-\try", "kh V n\tt e m\tp @r\te@\ti:");
result.add("con-\ttemp-\tla-\tted", "kh Q n\tt V m\tp l eI\tt V d");
result.add("con-\ttemp-\tla-\tting", "kh Q n\tt V m\tp l eI\tt I N");
result.add("con-\ttemp-\tla-\ttion", "kh Q n\tt V m\tp l eI\tS V n");
result.add("con-\ttemp-\tla-\ttive", "kh V n\tt e m\tp l V\tt I v");
result.add("con-\ttemp-\tlate", "kh Q n\tt V m\tp l eI t");
result.add("con-\ttemp-\tlates", "kh Q n\tt V m\tp l eI t s");
result.add("con-\ttemp-\tti-\tble", "kh V n\tt e m\tp t V\tb V l");
result.add("con-\ttemp-\ttu-\tous", "kh V n\tt e m\tp tS u:\tV s");
result.add("con-\ttemp-\ttuous-\tly", "kh V n\tt e m\tp tS w V s\tl i:");
result.add("con-\ttempt", "kh V n\tt e m p t");
result.add("con-\tten-\tded", "kh V n\tt e n\td V d");
result.add("con-\tten-\tder", "kh V n\tt e n\td @r");
result.add("con-\tten-\tders", "kh V n\tt e n\td @r z");
result.add("con-\tten-\tding", "kh V n\tt e n\td I N");
result.add("con-\tten-\tted", "kh V n\tt e n\tt V d");
result.add("con-\tten-\tted-\tly", "kh V n\tt e n\tt V d\tl i:");
result.add("con-\tten-\ttion", "kh V n\tt e n\tS V n");
result.add("con-\tten-\ttions", "kh V n\tt e n\tS V n z");
result.add("con-\tten-\ttious", "kh V n\tt e n\tS V s");
result.add("con-\tten-\ttious-\tness", "kh V n\tt e n\tS V s\tn V s");
result.add("con-\ttend", "kh V n\tt e n d");
result.add("con-\ttends", "kh V n\tt e n d z");
result.add("con-\ttent", "kh Q n\tt e n t");
result.add("con-\ttent-\tment", "kh V n\tt e n\tt m V n t");
result.add("con-\ttents", "kh Q n\tt e n t s");
result.add("con-\tti", "kh Q n\tt i:");
result.add("con-\tti-\tgu-\tous", "kh V n\tt I g\tj u:\tV s");
result.add("con-\tti-\tnen-\ttal", "kh Q n\tt I\tn e n\tt V l");
result.add("con-\tti-\tnen-\ttal-\tly", "kh Q n\tt I\tn e n\tt V\tl i:");
result.add("con-\tti-\tnen-\ttals", "kh Q n\tt V\tn e n\tt V l z");
result.add("con-\tti-\tnent", "kh Q n\tt I\tn V n t");
result.add("con-\tti-\tnents", "kh Q n\tt I\tn V n t s");
result.add("con-\tti-\tnent's", "kh Q n\tt I\tn V n t s");
result.add("con-\tti-\tnu-\ta-\ttion", "kh V n\tt I n\tj u:\teI\tS V n");
result.add("con-\tti-\tnu-\tal", "kh V n\tt I n\tj u:\tV l");
result.add("con-\tti-\tnu-\tal-\tly", "kh V n\tt I n\tj u:\tV\tl i:");
result.add("con-\tti-\tnu-\tan-\tces", "kh V n\tt I n\tj u:\tV n\ts V z");
result.add("con-\tti-\tnu-\tance", "kh V n\tt I n\tj u:\tV n s");
result.add("con-\tti-\tnu-\ti-\tty", "kh Q n\tt I\tn u:\tI\tt i:");
result.add("con-\tti-\tnu-\ting", "kh V n\tt I n\tj u:\tI N");
result.add("con-\tti-\tnu-\tous", "kh V n\tt I n\tj u:\tV s");
result.add("con-\tti-\tnu-\tous-\tly", "kh V n\tt I n\tj u:\tV s\tl i:");
result.add("con-\tti-\tnu-\tum", "kh V n\tt I n\tj u:\tV m");
result.add("con-\tti-\tnue", "kh V n\tt I n\tj u:");
result.add("con-\tti-\tnued", "kh V n\tt I n\tj u: d");
result.add("con-\tti-\tnues", "kh V n\tt I n\tj u: z");
result.add("con-\ttin-\tgen-\tcies", "kh V n\tt I n\tdZ V n\ts i: z");
result.add("con-\ttin-\tgen-\tcy", "kh V n\tt I n\tdZ V n\ts i:");
result.add("con-\ttin-\tgent", "kh V n\tt I n\tdZ V n t");
result.add("con-\ttin-\tgents", "kh V n\tt I n\tdZ V n t s");
result.add("con-\ttor-\tted", "kh V n\tt O@\tt V d");
result.add("con-\ttor-\ttio-\tnist", "kh V n\tt O@\tS V\tn V s t");
result.add("con-\ttor-\ttion", "kh V n\tt O@\tS V n");
result.add("con-\ttor-\ttions", "kh V n\tt O@\tS V n z");
result.add("con-\ttort", "kh V n\tt O@ t");
result.add("con-\ttorts", "kh V n\tt O@ t s");
result.add("con-\ttos", "kh Q n\tt @U z");
result.add("con-\ttour", "kh Q n\tt U@");
result.add("con-\ttoured", "kh Q n\tt U@ d");
result.add("con-\ttours", "kh Q n\tt U@ z");
result.add("con-\ttu-\tsion", "kh V n\tt u:\tZ V n");
result.add("con-\ttu-\tsions", "kh V n\tt u:\tZ V n z");
result.add("con-\tund-\trum", "kh V\tn V n\td r V m");
result.add("con-\tva-\tle-\tscence", "kh Q n\tv V\tl e\ts V n s");
result.add("con-\tva-\tle-\tscent", "kh Q n\tv V\tl e\ts V n t");
result.add("con-\tva-\tlesce", "kh Q n\tv V\tl e s");
result.add("con-\tvair", "kh Q n\tv e@");
result.add("con-\tve-\tnien-\tces", "kh V n\tv i: n\tj V n\ts V z");
result.add("con-\tve-\tnience", "kh V n\tv i: n\tj V n s");
result.add("con-\tve-\tnient", "kh V n\tv i: n\tj V n t");
result.add("con-\tve-\tnient-\tly", "kh V n\tv i: n\tj V n\tt l i:");
result.add("con-\tve-\tning", "kh V n\tv i:\tn I N");
result.add("con-\tve-\try", "kh Q n\tv @r\ti:");
result.add("con-\tve-\tyance", "kh V n\tv eI\tV n s");
result.add("con-\tve-\tyer", "kh V n\tv eI\t@r");
result.add("con-\tve-\tying", "kh V n\tv eI\tI N");
result.add("con-\tve-\tyor", "kh V n\tv eI\t@r");
result.add("con-\tvec-\ttion", "kh V n\tv e k\tS V n");
result.add("con-\tven-\ttio-\tnal", "kh V n\tv e n\tS V\tn V l");
result.add("con-\tven-\ttio-\tnal-\tly", "kh V n\tv e n\tS V\tn V\tl i:");
result.add("con-\tven-\ttio-\tneer", "kh V n\tv e n\tS V\tn I@");
result.add("con-\tven-\ttio-\tneers", "kh V n\tv e n\tS V\tn I@ z");
result.add("con-\tven-\ttion", "kh V n\tv e n\tS V n");
result.add("con-\tven-\ttions", "kh V n\tv e n\tS V n z");
result.add("con-\tven-\ttion's", "kh V n\tv e n\tS V n z");
result.add("con-\tvene", "kh V n\tv i: n");
result.add("con-\tvened", "kh V n\tv i: n d");
result.add("con-\tvenes", "kh V n\tv i: n z");
result.add("con-\tvent", "kh Q n\tv V n t");
result.add("con-\tver-\tgence", "kh V n\tv @r\tdZ V n s");
result.add("con-\tver-\tgent", "kh V n\tv @r\tdZ V n t");
result.add("con-\tver-\tging", "kh V n\tv @r\tdZ I N");
result.add("con-\tver-\tsa-\ttio-\tna-\tlist", "kh Q n\tv @r\ts eI\tS V\tn V\tl I s t");
result.add("con-\tver-\tsa-\ttio-\tnal", "kh Q n\tv @r\ts eI\tS V\tn V l");
result.add("con-\tver-\tsa-\ttion", "kh Q n\tv @r\ts eI\tS V n");
result.add("con-\tver-\tsa-\ttions", "kh Q n\tv @r\ts eI\tS V n z");
result.add("con-\tver-\tsant", "kh V n\tv @r\ts V n t");
result.add("con-\tver-\tses", "kh Q n\tv @r\ts V z");
result.add("con-\tver-\tsing", "kh V n\tv @r\ts I N");
result.add("con-\tver-\tsion", "kh V n\tv @r\tZ V n");
result.add("con-\tver-\tsions", "kh V n\tv @r\tZ V n z");
result.add("con-\tver-\tsion's", "kh V n\tv @r\tZ V n z");
result.add("con-\tver-\tted", "kh V n\tv @r\tt V d");
result.add("con-\tver-\tter", "kh V n\tv @r\tt @r");
result.add("con-\tver-\tters", "kh V n\tv @r\tt @r z");
result.add("con-\tver-\tti-\tbi-\tli-\tty", "kh Q n\tv @r\tt I\tb I\tl I\tt i:");
result.add("con-\tver-\tti-\tble", "kh V n\tv @r\tt V\tb V l");
result.add("con-\tver-\tti-\tbles", "kh V n\tv @r\tt V\tb V l z");
result.add("con-\tver-\tting", "kh V n\tv @r\tt I N");
result.add("con-\tverge", "kh V n\tv @r dZ");
result.add("con-\tverged", "kh V n\tv @r dZ d");
result.add("con-\tverse", "kh Q n\tv @r s");
result.add("con-\tverse-\tly", "kh Q n\tv @r s\tl i:");
result.add("con-\tversed", "kh V n\tv @r s t");
result.add("con-\tvert", "kh Q n\tv @r t");
result.add("con-\tverts", "kh Q n\tv @r t s");
result.add("con-\tvex", "kh V n\tv e k s");
result.add("con-\tvey", "kh V n\tv eI");
result.add("con-\tveyed", "kh V n\tv eI d");
result.add("con-\tveys", "kh V n\tv eI z");
result.add("con-\tvi-\tvi-\tal", "kh V n\tv I\tv i:\tV l");
result.add("con-\tvic-\tted", "kh V n\tv I k\tt V d");
result.add("con-\tvic-\tting", "kh V n\tv I k\tt I N");
result.add("con-\tvic-\ttion", "kh V n\tv I k\tS V n");
result.add("con-\tvic-\ttions", "kh V n\tv I k\tS V n z");
result.add("con-\tvict", "kh Q n\tv I k t");
result.add("con-\tvicts", "kh Q n\tv I k t s");
result.add("con-\tvin-\tces", "kh V n\tv I n\ts V z");
result.add("con-\tvin-\tcing", "kh V n\tv I n\ts I N");
result.add("con-\tvin-\tcing-\tly", "kh V n\tv I n\ts I N\tl i:");
result.add("con-\tvince", "kh V n\tv I n s");
result.add("con-\tvinced", "kh V n\tv I n s t");
result.add("con-\tvo-\tca-\ttion", "kh Q n\tv V\tk eI\tS V n");
result.add("con-\tvo-\tlu-\tted", "kh Q n\tv V\tl u:\tt V d");
result.add("con-\tvo-\tlu-\ttion", "kh Q n\tv V\tl u:\tS V n");
result.add("con-\tvo-\tlute", "kh Q n\tv V\tl u: t");
result.add("con-\tvoy", "kh Q n\tv OI");
result.add("con-\tvoys", "kh Q n\tv OI z");
result.add("con-\tvul-\tsion", "kh V n\tv V l\tS V n");
result.add("con-\tvul-\tsions", "kh V n\tv V l\tS V n z");
result.add("con-\tvul-\tsive", "kh V n\tv V l\ts I v");
result.add("con-\tway", "kh Q n\tw eI");
result.add("con-\tyers", "kh Q n\tj @r z");
result.add("conc-\tlave", "kh Q n\tk l eI v");
result.add("conc-\tlu-\tded", "kh V n\tk l u:\td V d");
result.add("conc-\tlu-\tding", "kh V n\tk l u:\td I N");
result.add("conc-\tlu-\tsion", "kh V n\tk l u:\tZ V n");
result.add("conc-\tlu-\tsions", "kh V n\tk l u:\tZ V n z");
result.add("conc-\tlu-\tsive", "kh V n\tk l u:\ts I v");
result.add("conc-\tlu-\tsive-\tly", "kh V n\tk l u:\ts I v\tl i:");
result.add("conc-\tlude", "kh V n\tk l u: d");
result.add("conc-\tludes", "kh V n\tk l u: d z");
result.add("conch", "kh Q n tS");
result.add("conde", "kh Q n d");
result.add("cone", "kh @U n");
result.add("cone-\tflo-\twer", "kh @U n\tf l aU\t@r");
result.add("cone-\thead", "kh @U n\th e d");
result.add("cones", "kh @U n z");
result.add("cone's", "kh @U n z");
result.add("conf-\tlag-\tra-\ttion", "kh Q n\tf l V g\tr eI\tS V n");
result.add("conf-\tlate", "kh V n\tf l eI t");
result.add("conf-\tlates", "kh V n\tf l eI t s");
result.add("conf-\tlic-\tted", "kh V n\tf l I k\tt V d");
result.add("conf-\tlic-\tting", "kh V n\tf l I k\tt I N");
result.add("conf-\tlict", "kh Q n\tf l I k t");
result.add("conf-\tlicts", "kh V n\tf l I k t s");
result.add("conf-\tlu-\tence", "kh Q n\tf l u:\tV n s");
result.add("conf-\tlu-\tent", "kh Q n\tf l u:\tV n t");
result.add("confe-\tren-\tcing", "kh Q n\tf r V n\ts I N");
result.add("cong", "kh O: N");
result.add("cong-\tdon", "kh Q N\td V n");
result.add("cong-\tlo-\tme-\tra-\ttion", "kh V n\tg l Q\tm @r\teI\tS V n");
result.add("cong-\tlo-\tme-\trate", "kh V n\tg l Q\tm @r\tV t");
result.add("cong-\tlo-\tme-\trates", "kh V n\tg l Q\tm @r\tV t s");
result.add("cong-\tlo-\tme-\trate's", "kh V n\tg l Q\tm @r\tV t s");
result.add("cong-\tra-\ttu-\tla-\tted", "kh V n\tg r {\ttS V\tl eI\tt V d");
result.add("cong-\tra-\ttu-\tla-\tting", "kh V n\tg r {\ttS V\tl eI\tt I N");
result.add("cong-\tra-\ttu-\tla-\ttion", "kh V n\tg r {\ttS V\tl eI\tS V n");
result.add("cong-\tra-\ttu-\tla-\ttions", "kh V n\tg r {\ttS V\tl eI\tS V n z");
result.add("cong-\tra-\ttu-\tla-\tto-\try", "kh V n\tg r {\ttS V\tl V\tt O@\ti:");
result.add("cong-\tra-\ttu-\tlate", "kh V n\tg r {\ttS V\tl eI t");
result.add("cong-\tre-\tga-\tted", "kh Q N\tg r V\tg eI\tt V d");
result.add("cong-\tre-\tga-\ttio-\tnal", "kh Q N\tg r V\tg eI\tS V\tn V l");
result.add("cong-\tre-\tga-\ttion", "kh Q N\tg r V\tg eI\tS V n");
result.add("cong-\tre-\tga-\ttions", "kh Q N\tg r V\tg eI\tS V n z");
result.add("cong-\tre-\tga-\ttion's", "kh Q N\tg r V\tg eI\tS V n z");
result.add("cong-\tre-\tgate", "kh Q N\tg r V\tg eI t");
result.add("cong-\tres-\tses", "kh Q N\tg r V\ts V z");
result.add("cong-\tres-\tsio-\tnal", "kh V n\tg r e\tS V\tn V l");
result.add("cong-\tres-\tsio-\tnal-\tly", "kh V n\tg r e\tS V\tn V\tl i:");
result.add("cong-\tres-\ts's", "kh Q N\tg r V\ts V z");
result.add("cong-\tress", "kh Q N\tg r V s");
result.add("cong-\tress-\tman", "kh Q N\tg r V s\tm V n");
result.add("cong-\tress-\tman's", "kh Q N\tg r V s\tm V n z");
result.add("cong-\tress-\tmen", "kh Q N\tg r V s\tm e n");
result.add("cong-\tress-\tpeo-\tple", "kh Q N\tg r V s\tp i:\tp V l");
result.add("cong-\tress-\tper-\tson", "kh Q N\tg r V s\tp @r\ts V n");
result.add("cong-\tress-\tper-\tsons", "kh Q N\tg r V s\tp @r\ts V n z");
result.add("cong-\tress-\two-\tman", "kh Q N\tg r V s\tw U\tm V n");
result.add("cong-\tress-\two-\tman's", "kh Q N\tg r V s\tw U\tm V n z");
result.add("cong-\tress-\two-\tmen", "kh Q N\tg r V s\tw I\tm e n");
result.add("cong-\tru-\tence", "kh O: n\tg r u:\tV n s");
result.add("cong-\tru-\ti-\tty", "kh V n\tg r u:\tV\tt i:");
result.add("conk", "kh Q N k");
result.add("conk-\tlin", "kh Q N\tk l I n");
result.add("conn", "kh Q n");
result.add("conn.", "kh Q n");
result.add("conned", "kh Q n d");
result.add("cons", "kh Q n z");
result.add("cons-\tcrip-\tted", "kh V n\ts k r I p\tt V d");
result.add("cons-\tcrip-\ttion", "kh V n\ts k r I p\tS V n");
result.add("cons-\tcript", "kh Q n\ts k r I p t");
result.add("cons-\tcripts", "kh Q n\ts k r I p t s");
result.add("cons-\tpi-\tcu-\tous", "kh V n\ts p I k\tj u:\tV s");
result.add("cons-\tpi-\tcu-\tous-\tly", "kh V n\ts p I k\tj u:\tV s\tl i:");
result.add("cons-\tpi-\tra-\tcies", "kh V n\ts p I@\tV\ts i: z");
result.add("cons-\tpi-\tra-\tcy", "kh V n\ts p I@\tV\ts i:");
result.add("cons-\tpi-\tra-\tto-\tri-\tal", "kh V n\ts p I@\tV\tt O@\ti:\tV l");
result.add("cons-\tpi-\tra-\tto-\tri-\tal-\tly", "kh V n\ts p I@\tV\tt O@\ti:\tV\tl i:");
result.add("cons-\tpi-\tra-\ttor", "kh V n\ts p I@\tV\tt @r");
result.add("cons-\tpi-\tra-\ttors", "kh V n\ts p I@\tV\tt @r z");
result.add("cons-\tpi-\tre", "kh V n\ts p aI\t@r");
result.add("cons-\tpi-\tred", "kh V n\ts p aI\t@r d");
result.add("cons-\tpi-\tring", "kh V n\ts p aI\tr I N");
result.add("cons-\tta-\tble", "kh Q n\ts t V\tb V l");
result.add("cons-\tta-\tbles", "kh Q n\ts t V\tb V l z");
result.add("cons-\tta-\tbu-\tla-\try", "kh V n\ts t { b\tj V\tl e@\ti:");
result.add("cons-\ttan-\tcy", "kh Q n\ts t V n\ts i:");
result.add("cons-\ttan-\tta", "kh Q n\ts t Q n\tt V");
result.add("cons-\ttan-\tti-\tna", "kh Q n\ts t Q n\tt i:\tn V");
result.add("cons-\ttan-\tti-\tno", "kh Q n\ts t V n\tt i:\tn @U");
result.add("cons-\ttan-\tti-\tno-\tple", "kh Q n\ts t { n\tt I\tn @U\tp V l");
result.add("cons-\ttan-\ttin", "kh V n\ts t { n\tt I n");
result.add("cons-\ttan-\ttine", "kh Q n\ts t V n\tt i: n");
result.add("cons-\ttance", "kh Q n\ts t V n s");
result.add("cons-\ttant", "kh Q n\ts t V n t");
result.add("cons-\ttant-\tly", "kh Q n\ts t V n\tt l i:");
result.add("cons-\ttants", "kh Q n\ts t V n t s");
result.add("cons-\ttant's", "kh Q n\ts t V n t s");
result.add("cons-\ttel-\tla-\ttion", "kh Q n\ts t V\tl eI\tS V n");
result.add("cons-\ttel-\tla-\ttions", "kh Q n\ts t V\tl eI\tS V n z");
result.add("cons-\ttel-\tla-\ttion's", "kh Q n\ts t V\tl eI\tS V n z");
result.add("cons-\tter-\tna-\ttion", "kh Q n\ts t @r\tn eI\tS V n");
result.add("cons-\tti-\tpa-\tted", "kh Q n\ts t I\tp eI\tt I d");
result.add("cons-\tti-\tpa-\ttion", "kh Q n\ts t I\tp eI\tS V n");
result.add("cons-\tti-\tpate", "kh Q n\ts t I\tp eI t");
result.add("cons-\tti-\ttu-\ten-\tcies", "kh V n\ts t I\ttS u:\tV n\ts i: z");
result.add("cons-\tti-\ttu-\ten-\tcy", "kh V n\ts t I\ttS u:\tV n\ts i:");
result.add("cons-\tti-\ttu-\tent", "kh V n\ts t I\ttS u:\tV n t");
result.add("cons-\tti-\ttu-\tents", "kh V n\ts t I\ttS u:\tV n t s");
result.add("cons-\tti-\ttu-\tted", "kh Q n\ts t I\tt u:\tt I d");
result.add("cons-\tti-\ttu-\tting", "kh Q n\ts t I\tt u:\tt I N");
result.add("cons-\tti-\ttu-\ttio-\tna-\tli-\tty", "kh Q n\ts t I\tt u:\tS V\tn {\tl I\tt i:");
result.add("cons-\tti-\ttu-\ttio-\tnal", "kh Q n\ts t I\tt u:\tS V\tn V l");
result.add("cons-\tti-\ttu-\ttio-\tnal-\tly", "kh Q n\ts t I\tt u:\tS V\tn V\tl i:");
result.add("cons-\tti-\ttu-\ttio-\tnist", "kh Q n\ts t I\tt u:\tS V\tn I s t");
result.add("cons-\tti-\ttu-\ttio-\tnists", "kh Q n\ts t I\tt u:\tS V\tn I s t s");
result.add("cons-\tti-\ttu-\ttion", "kh Q n\ts t I\tt u:\tS V n");
result.add("cons-\tti-\ttu-\ttions", "kh Q n\ts t I\tt u:\tS V n z");
result.add("cons-\tti-\ttu-\ttion's", "kh Q n\ts t I\tt u:\tS V n z");
result.add("cons-\tti-\ttute", "kh Q n\ts t I\tt u: t");
result.add("cons-\tti-\ttutes", "kh Q n\ts t I\tt u: t s");
result.add("const-\trai-\tning", "kh V n\ts t r eI\tn I N");
result.add("const-\train", "kh V n\ts t r eI n");
result.add("const-\trained", "kh V n\ts t r eI n d");
result.add("const-\trains", "kh V n\ts t r eI n z");
result.add("const-\traint", "kh V n\ts t r eI n t");
result.add("const-\traints", "kh V n\ts t r eI n t s");
result.add("const-\tric-\tted", "kh V n\ts t r I k\tt V d");
result.add("const-\tric-\tting", "kh V n\ts t r I k\tt I N");
result.add("const-\tric-\ttion", "kh V n\ts t r I k\tS V n");
result.add("const-\tric-\ttions", "kh V n\ts t r I k\tS V n z");
result.add("const-\tric-\ttor", "kh V n\ts t r I k\tt @r");
result.add("const-\tric-\ttors", "kh V n\ts t r I k\tt @r z");
result.add("const-\trict", "kh V n\ts t r I k t");
result.add("const-\truc-\tted", "kh V n\ts t r V k\tt V d");
result.add("const-\truc-\tting", "kh V n\ts t r V k\tt I N");
result.add("const-\truc-\ttio-\tnist", "kh V n\ts t r V k\tS V\tn I s t");
result.add("const-\truc-\ttion", "kh V n\ts t r V k\tS V n");
result.add("const-\truc-\ttions", "kh V n\ts t r V k\tS V n z");
result.add("const-\truc-\ttive", "kh V n\ts t r V k\tt I v");
result.add("const-\truc-\ttive-\tly", "kh V n\ts t r V k\tt I v\tl i:");
result.add("const-\truc-\ttor", "kh V n\ts t r V k\tt @r");
result.add("const-\truc-\ttors", "kh V n\ts t r V k\tt @r z");
result.add("const-\truct", "kh V n\ts t r V k t");
result.add("const-\tructs", "kh V n\ts t r V k t s");
result.add("const-\true", "kh V n\ts t r u:");
result.add("const-\trued", "kh V n\ts t r u: d");
result.add("cont-\tra", "kh Q n\tt r V");
result.add("cont-\tra-\tband", "kh Q n\tt r V\tb { n d");
result.add("cont-\tra-\tbas-\tsoon", "kh Q n\tt r V\tb {\ts u: n");
result.add("cont-\tra-\tcep-\ttion", "kh Q n\tt r V\ts e p\tS V n");
result.add("cont-\tra-\tcep-\ttive", "kh Q n\tt r V\ts e p\tt I v");
result.add("cont-\tra-\tcep-\ttives", "kh Q n\tt r V\ts e p\tt I v z");
result.add("cont-\tra-\tdic-\tted", "kh Q n\tt r V\td I k\tt V d");
result.add("cont-\tra-\tdic-\tting", "kh Q n\tt r V\td I k\tt I N");
result.add("cont-\tra-\tdic-\ttion", "kh Q n\tt r V\td I k\tS V n");
result.add("cont-\tra-\tdic-\ttions", "kh Q n\tt r V\td I k\tS V n z");
result.add("cont-\tra-\tdic-\tto-\tri-\tly", "kh Q n\tt r V\td I k\tt @r\tV\tl i:");
result.add("cont-\tra-\tdic-\tto-\try", "kh Q n\tt r V\td I k\tt @r\ti:");
result.add("cont-\tra-\tdict", "kh Q n\tt r V\td I k t");
result.add("cont-\tra-\tdicts", "kh Q n\tt r V\td I k t s");
result.add("cont-\tra-\tri-\tan", "kh Q n\tt r e@\ti:\tV n");
result.add("cont-\tra-\tri-\tans", "kh V n\tt r e@\ti:\tV n z");
result.add("cont-\tra-\tri-\tness", "kh Q n\tt r e@\ti:\tn V s");
result.add("cont-\tra-\try", "kh Q n\tt r e@\ti:");
result.add("cont-\tra-\tven-\ttion", "kh Q n\tt r V\tv e n\ttS V n");
result.add("cont-\tra-\tvene", "kh Q n\tt r V\tv i: n");
result.add("cont-\trac-\tted", "kh Q n\tt r { k\tt V d");
result.add("cont-\trac-\tting", "kh Q n\tt r { k\tt I N");
result.add("cont-\trac-\ttio-\tna-\try", "kh V n\tt r { k\tS V\tn e@\ti:");
result.add("cont-\trac-\ttion", "kh V n\tt r { k\tS V n");
result.add("cont-\trac-\ttions", "kh V n\tt r { k\tS V n z");
result.add("cont-\trac-\ttor", "kh Q n\tt r { k\tt @r");
result.add("cont-\trac-\ttors", "kh Q n\tt r { k\tt @r z");
result.add("cont-\trac-\ttor's", "kh Q n\tt r { k\tt @r z");
result.add("cont-\trac-\ttu-\tal", "kh V n\tt r { k\ttS u:\tV l");
result.add("cont-\trac-\ttu-\tal-\tly", "kh V n\tt r { k\ttS u:\tV\tl i:");
result.add("cont-\tract", "kh Q n\tt r { k t");
result.add("cont-\tracts", "kh Q n\tt r { k t s");
result.add("cont-\trap-\ttion", "kh V n\tt r { p\tS V n");
result.add("cont-\trap-\ttions", "kh V n\tt r { p\tS V n z");
result.add("cont-\tras", "kh Q n\tt r V z");
result.add("cont-\tras-\tted", "kh V n\tt r { s\tt V d");
result.add("cont-\tras-\tting", "kh V n\tt r { s\tt I N");
result.add("cont-\trast", "kh Q n\tt r { s t");
result.add("cont-\trasts", "kh Q n\tt r { s t s");
result.add("cont-\tre-\tras", "kh Q n\tt r e@\tQ z");
result.add("cont-\tre-\ttemps", "kh Q n\tt r V\tt e m p s");
result.add("cont-\tri-\tbu-\tted", "kh V n\tt r I b\tj u:\tt V d");
result.add("cont-\tri-\tbu-\tting", "kh V n\tt r I b\tj u:\tt I N");
result.add("cont-\tri-\tbu-\ttion", "kh Q n\tt r I b\tj u:\tS V n");
result.add("cont-\tri-\tbu-\ttions", "kh Q n\tt r I b\tj u:\tS V n z");
result.add("cont-\tri-\tbu-\tto-\try", "kh V n\tt r I b\tj V\tt O@\ti:");
result.add("cont-\tri-\tbu-\ttor", "kh V n\tt r I b\tj V\tt @r");
result.add("cont-\tri-\tbu-\ttors", "kh V n\tt r I b\tj V\tt @r z");
result.add("cont-\tri-\tbute", "kh V n\tt r I b\tj u: t");
result.add("cont-\tri-\tbutes", "kh V n\tt r I b\tj u: t s");
result.add("cont-\tri-\ttion", "kh V n\tt r I\tS V n");
result.add("cont-\tri-\tvan-\tces", "kh V n\tt r aI\tv V n\ts V z");
result.add("cont-\tri-\tvance", "kh V n\tt r aI\tv V n s");
result.add("cont-\trite", "kh V n\tt r aI t");
result.add("cont-\trive", "kh V n\tt r aI v");
result.add("cont-\trived", "kh V n\tt r aI v d");
result.add("cont-\tro-\tver-\tsial", "kh Q n\tt r V\tv @r\tS V l");
result.add("cont-\tro-\tver-\tsies", "kh Q n\tt r V\tv @r\ts i: z");
result.add("cont-\tro-\tver-\tsy", "kh Q n\tt r V\tv @r\ts i:");
result.add("cont-\trol", "kh V n\tt r @U l");
result.add("cont-\trol-\tla-\tble", "kh V n\tt r @U\tl V\tb V l");
result.add("cont-\trol-\tler", "kh V n\tt r @U\tl @r");
result.add("cont-\trol-\tlers", "kh V n\tt r @U\tl @r z");
result.add("cont-\trol-\tler's", "kh V n\tt r @U\tl @r z");
result.add("cont-\trol-\tling", "kh V n\tt r @U\tl I N");
result.add("cont-\trolled", "kh V n\tt r @U l d");
result.add("cont-\trols", "kh V n\tt r @U l z");
result.add("cont-\trol's", "kh V n\tt r @U l z");
result.add("conte", "kh O: n t");
result.add("coo", "kh u:");
result.add("coo-\ting", "kh u:\tI N");
result.add("coo-\tker", "kh U\tk @r");
result.add("coo-\tkers", "kh U\tk @r z");
result.add("coo-\tkie", "kh U\tk i:");
result.add("coo-\tkies", "kh U\tk i: z");
result.add("coo-\tking", "kh U\tk I N");
result.add("coo-\tlant", "kh u:\tl V n t");
result.add("coo-\tlants", "kh u:\tl V n t s");
result.add("coo-\tler", "kh u:\tl @r");
result.add("coo-\tlers", "kh u:\tl @r z");
result.add("coo-\tlest", "kh u:\tl V s t");
result.add("coo-\tley", "kh u:\tl i:");
result.add("coo-\tley's", "kh u:\tl i: z");
result.add("coo-\tlid-\tge's", "kh u:\tl I\tdZ V z");
result.add("coo-\tlidge", "kh u:\tl I dZ");
result.add("coo-\tling", "kh u:\tl I N");
result.add("coo-\tnan", "kh u:\tn V n");
result.add("coo-\tner", "kh u:\tn @r");
result.add("coo-\tpe-\tra-\ttive-\tly", "kh @U\tQ p\tr V\tt I v\tl i:");
result.add("coo-\tpe-\tra-\ttives", "kh @U\tQ p\tr V\tt I v z");
result.add("coo-\tpe-\trage", "kh u:\tp @r\tV dZ");
result.add("coo-\tper", "kh u:\tp @r");
result.add("coo-\tper-\tman", "kh u:\tp @r\tm { n");
result.add("coo-\tper-\tsmith", "kh u:\tp @r s\tm I T");
result.add("coo-\tper-\tstein", "kh u:\tp @r s\tt aI n");
result.add("coo-\tpers", "kh u:\tp @r z");
result.add("coo-\tper's", "kh u:\tp @r z");
result.add("coo-\tpers-\ttown", "kh u:\tp @r z\tt aU n");
result.add("coo-\tsa", "kh u:\ts V");
result.add("coo-\tter", "kh u:\tt @r");
result.add("cook", "kh U k");
result.add("cook-\tbook", "kh U k\tb U k");
result.add("cook-\tbooks", "kh U k\tb U k s");
result.add("cook-\tbook's", "kh U k\tb U k s");
result.add("cook-\tout", "kh U\tk aU t");
result.add("cook-\touts", "kh U\tk aU t s");
result.add("cook-\tson", "kh U k\ts V n");
result.add("cook-\tware", "kh U k\tw e@");
result.add("cooke", "kh U k");
result.add("cooked", "kh U k t");
result.add("cooks", "kh U k s");
result.add("cook's", "kh U k s");
result.add("cool", "kh u: l");
result.add("cool-\tly", "kh u:\tl i:");
result.add("cool-\tness", "kh u: l\tn V s");
result.add("cooled", "kh u: l d");
result.add("cools", "kh u: l z");
result.add("coombe", "kh u: m b");
result.add("coombes", "kh u: m b z");
result.add("coombs", "kh u: m z");
result.add("coon", "kh u: n");
result.add("coons", "kh u: n z");
result.add("cooped", "kh u: p t");
result.add("coor-\ts's", "kh u: r\tz V z");
result.add("coors", "kh u: r z");
result.add("coos", "kh u: s");
result.add("coot", "kh u: t");
result.add("coots", "kh u: t s");
result.add("cop", "kh Q p");
result.add("cop-\tland", "kh Q p\tl V n d");
result.add("cop-\tley", "kh Q p\tl i:");
result.add("cop-\tley's", "kh Q p\tl i: z");
result.add("cop-\tlin", "kh Q p\tl I n");
result.add("cop-\tpa", "kh @U\tp V");
result.add("cop-\tpe-\try", "kh Q\tp @r\ti:");
result.add("cop-\tper", "kh Q\tp @r");
result.add("cop-\tper-\tfield", "kh Q\tp @r\tf i: l d");
result.add("cop-\tper-\tfield's", "kh Q\tp @r\tf i: l d z");
result.add("cop-\tper-\thead", "kh Q\tp @r\th e d");
result.add("cop-\tper-\theads", "kh Q\tp @r\th e d z");
result.add("cop-\tper-\tsmith", "kh Q\tp @r s\tm I T");
result.add("cop-\tpers", "kh Q\tp @r z");
result.add("cop-\tper's", "kh Q\tp @r z");
result.add("cop-\tpin", "kh Q\tp I n");
result.add("cop-\tpin-\tger", "kh Q\tp I\tN @r");
result.add("cop-\tping", "kh Q\tp I N");
result.add("cop-\tpins", "kh Q\tp I n z");
result.add("cop-\tple", "kh Q\tp V l");
result.add("cop-\tpo-\tla", "kh @U\tp @U\tl V");
result.add("cop-\tpo-\tla's", "kh @U\tp @U\tl V z");
result.add("cop-\tpock", "kh Q\tp V k");
result.add("cop-\tra", "kh @U p\tr V");
result.add("cop-\tro-\tces-\tsor", "kh @U p\tr Q\ts e\ts @r");
result.add("cop-\tro-\tces-\tsors", "kh @U p\tr Q\ts e\ts @r z");
result.add("cop-\ttic", "kh Q p\tt I k");
result.add("cope", "kh @U p");
result.add("cope-\tland", "kh @U p\tl V n d");
result.add("cope-\tland's", "kh @U p\tl V n d z");
result.add("cope-\tman", "kh @U p\tm V n");
result.add("coped", "kh @U p t");
result.add("copes", "kh @U p s");
result.add("copp", "kh Q p");
result.add("copped", "kh Q p t");
result.add("copps", "kh Q p s");
result.add("cops", "kh Q p s");
result.add("cor", "kh O@");
result.add("cor-\tban", "kh O@\tb V n");
result.add("cor-\tbeil", "kh O@\tb aI l");
result.add("cor-\tbel", "kh O@\tb V l");
result.add("cor-\tbelled", "kh O@\tb V l d");
result.add("cor-\tbet", "kh O@\tb e t");
result.add("cor-\tbett", "kh O@\tb e t");
result.add("cor-\tbin", "kh O@\tb I n");
result.add("cor-\tbu-\tsier", "kh O@ b\tj u: s\tj @r");
result.add("cor-\tby", "kh O@\tb i:");
result.add("cor-\tco-\tran", "kh O@\tk @r\tV n");
result.add("cor-\tda", "kh O@\td V");
result.add("cor-\tdage", "kh O@\td I dZ");
result.add("cor-\tday", "kh O@\td eI");
result.add("cor-\tded", "kh O@\td V d");
result.add("cor-\tdell", "kh O@\td e l");
result.add("cor-\tder", "kh O@\td @r");
result.add("cor-\tdi-\ter", "kh O@\td i:\t@r");
result.add("cor-\tdial", "kh O@\tdZ V l");
result.add("cor-\tdial-\tly", "kh O@\tdZ V\tl i:");
result.add("cor-\tdie", "kh O@\td i:");
result.add("cor-\tgi", "kh O@\tg i:");
result.add("cor-\tker", "kh O@\tk @r");
result.add("cor-\tking", "kh O@\tk I N");
result.add("cor-\tky", "kh O@\tk i:");
result.add("cor-\tle-\tone", "kh O@\tl i:\t@U n");
result.add("cor-\tley", "kh O@\tl i:");
result.add("cor-\tliss", "kh O@\tl I s");
result.add("cor-\tmac", "kh O@\tm V k");
result.add("cor-\tmack", "kh O@\tm V k");
result.add("cor-\tmi-\ter", "kh O@\tm i:\t@r");
result.add("cor-\tmick", "kh O@\tm I k");
result.add("cor-\tmo-\trant", "kh O@\tm @r\tV n t");
result.add("cor-\tmo-\trants", "kh O@\tm @r\tV n t s");
result.add("cor-\tnall", "kh O@\tn V l");
result.add("cor-\tne-\ta", "kh O@\tn i:\tV");
result.add("cor-\tne-\tas", "kh O@\tn i:\tV z");
result.add("cor-\tne-\tla", "kh @r\tn e\tl V");
result.add("cor-\tne-\tlia", "kh O@\tn i: l\tj V");
result.add("cor-\tne-\tlius", "kh O@\tn i: l\tj V s");
result.add("cor-\tne-\tring", "kh O@\tn @r\tI N");
result.add("cor-\tneal", "kh O@\tn i: l");
result.add("cor-\tnel", "kh O@\tn V l");
result.add("cor-\tnell", "kh O@\tn e l");
result.add("cor-\tnelle", "kh @r\tn e l");
result.add("cor-\tnell's", "kh O@\tn e l z");
result.add("cor-\tner", "kh O@\tn @r");
result.add("cor-\tner-\tback", "kh O@\tn @r\tb { k");
result.add("cor-\tnered", "kh O@\tn @r d");
result.add("cor-\tners", "kh O@\tn @r z");
result.add("cor-\tners-\ttone", "kh O@\tn @r s\tt @U n");
result.add("cor-\tners-\ttones", "kh O@\tn @r s\tt @U n z");
result.add("cor-\tnet", "kh O@\tn e t");
result.add("cor-\tnet-\ttist", "kh O@\tn e\tt I s t");
result.add("cor-\tnett", "kh O@\tn e t");
result.add("cor-\tnette", "kh @r\tn e t");
result.add("cor-\tney", "kh O@\tn i:");
result.add("cor-\tni-\ta", "kh O@\tn i:\tV");
result.add("cor-\tniche", "kh O@\tn I S");
result.add("cor-\tnie", "kh O@\tn i:");
result.add("cor-\tning", "kh O@\tn I N");
result.add("cor-\tning's", "kh O@\tn I N z");
result.add("cor-\tnish", "kh O@\tn I S");
result.add("cor-\tnu-\tco-\tpi-\ta", "kh O@\tn V\tk @U\tp i:\tV");
result.add("cor-\tny", "kh O@\tn i:");
result.add("cor-\tpo-\tra", "kh O@\tp @r\tV");
result.add("cor-\tpo-\tra-\tti-\tsm", "kh O@\tp @r\tV\tt I\tz V m");
result.add("cor-\tpo-\tra-\ttion", "kh O@\tp @r\teI\tS V n");
result.add("cor-\tpo-\tra-\ttions", "kh O@\tp @r\teI\tS V n z");
result.add("cor-\tpo-\tra-\ttion's", "kh O@\tp @r\teI\tS V n z");
result.add("cor-\tpo-\tra-\ttist", "kh O@\tp @r\tV\tt I s t");
result.add("cor-\tpo-\tral", "kh O@\tp @r\tV l");
result.add("cor-\tpo-\trate", "kh O@\tp @r\tV t");
result.add("cor-\tpo-\trates", "kh O@\tp @r\tV t s");
result.add("cor-\tpus", "kh O@\tp V s");
result.add("cor-\tra-\tdo", "kh @r\tQ\td @U");
result.add("cor-\tra-\tles", "kh @r\tQ\tl e s");
result.add("cor-\tral", "kh @r\t{ l");
result.add("cor-\tral-\tling", "kh @r\t{\tl I N");
result.add("cor-\tralled", "kh @r\t{ l d");
result.add("cor-\tre-\ta", "kh O@\ti:\tV");
result.add("cor-\tre-\tgi-\tdor", "kh @r\te\tg I\td O@");
result.add("cor-\tre-\tla-\tted", "kh O@\tV\tl eI\tt V d");
result.add("cor-\tre-\tla-\tting", "kh O@\tV\tl eI\tt I N");
result.add("cor-\tre-\tla-\ttion", "kh O@\tV\tl eI\tS V n");
result.add("cor-\tre-\tla-\ttions", "kh O@\tV\tl eI\tS V n z");
result.add("cor-\tre-\tlate", "kh O@\tV\tl eI t");
result.add("cor-\tre-\tlates", "kh O@\tV\tl V t s");
result.add("cor-\trec-\tted", "kh @r\te k\tt V d");
result.add("cor-\trec-\tting", "kh @r\te k\tt I N");
result.add("cor-\trec-\ttio-\tnal", "kh @r\te k\tS V\tn V l");
result.add("cor-\trec-\ttion", "kh @r\te k\tS V n");
result.add("cor-\trec-\ttions", "kh @r\te k\tS V n z");
result.add("cor-\trec-\ttive", "kh @r\te k\tt I v");
result.add("cor-\trect", "kh @r\te k t");
result.add("cor-\trect-\tly", "kh @r\te k\tt l i:");
result.add("cor-\trect-\tness", "kh @r\te k\tt n V s");
result.add("cor-\trects", "kh @r\te k t s");
result.add("cor-\trell", "kh @r\teI l");
result.add("cor-\tren-\tte", "kh @r\te n\tt i:");
result.add("cor-\tres-\tpon-\tded", "kh O@\tV s\tp Q n\td V d");
result.add("cor-\tres-\tpon-\tdence", "kh O@\tV s\tp Q n\td V n s");
result.add("cor-\tres-\tpon-\tdent", "kh O@\tV s\tp Q n\td V n t");
result.add("cor-\tres-\tpon-\tdents", "kh O@\tV s\tp Q n\td V n t s");
result.add("cor-\tres-\tpon-\tding", "kh O@\tV s\tp Q n\td I N");
result.add("cor-\tres-\tpon-\tding-\tly", "kh O@\tV s\tp Q n\td I N\tl i:");
result.add("cor-\tres-\tpond", "kh O@\tV s\tp Q n d");
result.add("cor-\tres-\tponds", "kh O@\tV s\tp Q n d z");
result.add("cor-\tri-\tdor", "kh O@\tI\td @r");
result.add("cor-\tri-\tdors", "kh O@\tI\td @r z");
result.add("cor-\tri-\tgan", "kh O@\tI\tg V n");
result.add("cor-\tri-\tgan's", "kh O@\tI\tg V n z");
result.add("cor-\tri-\tna", "kh @r\ti:\tn V");
result.add("cor-\trie", "kh O@\ti:");
result.add("cor-\tro-\tbo-\tra-\tted", "kh @r\tQ\tb @r\teI\tt V d");
result.add("cor-\tro-\tbo-\tra-\tting", "kh @r\tQ\tb @r\teI\tt I N");
result.add("cor-\tro-\tbo-\tra-\ttion", "kh @r\tO:\tb @r\teI\tS V n");
result.add("cor-\tro-\tbo-\tra-\ttive", "kh @r\tQ\tb @r\tV\tt I v");
result.add("cor-\tro-\tbo-\trate", "kh @r\tQ\tb @r\teI t");
result.add("cor-\tro-\tbo-\trates", "kh @r\tO:\tb @r\teI t s");
result.add("cor-\tro-\tded", "kh @r\t@U\td V d");
result.add("cor-\tro-\tsion", "kh @r\t@U\tZ V n");
result.add("cor-\tro-\tsive", "kh @r\t@U\ts I v");
result.add("cor-\trode", "kh @r\t@U d");
result.add("cor-\trodes", "kh @r\t@U d z");
result.add("cor-\tron", "kh @r\tO: n");
result.add("cor-\tru-\tga-\tted", "kh O@\tV\tg eI\tt V d");
result.add("cor-\tru-\tgate", "kh O@\tV\tg eI t");
result.add("cor-\trup-\tted", "kh @r\tV p\tt V d");
result.add("cor-\trup-\tting", "kh @r\tV p\tt I N");
result.add("cor-\trup-\ttion", "kh @r\tV p\tS V n");
result.add("cor-\trup-\ttions", "kh @r\tV p\tS V n z");
result.add("cor-\trup-\ttive", "kh @r\tV p\tt I v");
result.add("cor-\trupt", "kh @r\tV p t");
result.add("cor-\trupts", "kh @r\tV p t s");
result.add("cor-\try", "kh O@\ti:");
result.add("cor-\tsage", "kh O@\ts Q Z");
result.add("cor-\tsair", "kh O@\ts e@");
result.add("cor-\tser", "kh O@\ts @r");
result.add("cor-\tset", "kh O@\ts V t");
result.add("cor-\tset-\tti", "kh @r\ts e\tt i:");
result.add("cor-\tsi-\tca", "kh O@\ts I\tk V");
result.add("cor-\tsi-\tcan", "kh O@\ts I\tk V n");
result.add("cor-\tsig-\tli-\ta", "kh @r\ts i: g\tl i:\tV");
result.add("cor-\tso", "kh O@\ts @U");
result.add("cor-\tson", "kh O@\ts V n");
result.add("cor-\tte-\tse", "kh @r\tt eI\tz i:");
result.add("cor-\ttel-\tyou", "kh O@\tt e l\tj u:");
result.add("cor-\ttex", "kh O@\tt e k s");
result.add("cor-\ttez", "kh O@\tt e z");
result.add("cor-\tti", "kh O@\tt i:");
result.add("cor-\tti-\tcal", "kh O@\tt I\tk V l");
result.add("cor-\tti-\tcos-\tte-\troid", "kh O@\tt I\tk @U s\tt e@\tOI d");
result.add("cor-\tti-\tcos-\tte-\troids", "kh O@\tt I\tk @U s\tt e@\tOI d z");
result.add("cor-\tti-\tna", "kh @r\tt i:\tn V");
result.add("cor-\tti-\tnas", "kh O@\tt i:\tn V z");
result.add("cor-\tti-\tsone", "kh O@\tt I\tz @U n");
result.add("cor-\ttin", "kh O@\tt I n");
result.add("cor-\ttine", "kh O@\tt i: n");
result.add("cor-\tval-\tlis", "kh O@\tv {\tl I s");
result.add("cor-\tvette", "kh O@\tv e t");
result.add("cor-\tvettes", "kh O@\tv e t s");
result.add("cor-\tvin", "kh O@\tv I n");
result.add("cor-\tvo", "kh O@\tv @U");
result.add("cor-\tvus", "kh O@\tv V s");
result.add("cor-\twin", "kh O@\tw I n");
result.add("cord", "kh O@ d");
result.add("cores", "kh O@ z");
result.add("cork", "kh O@ k");
result.add("cork-\twood", "kh O@ k\tw U d");
result.add("corks", "kh O@ k s");
result.add("corksc-\trew", "kh O@ k\ts k r u:");
result.add("corn", "kh O@ n");
result.add("corn-\tbread", "kh O@ n\tb r e d");
result.add("corn-\tcob", "kh O@ n\tk Q b");
result.add("corn-\tfield", "kh O@ n\tf i: l d");
result.add("corn-\tfields", "kh O@ n\tf i: l d z");
result.add("corn-\tflo-\twer", "kh O@ n\tf l aU\t@r");
result.add("corn-\tflo-\twers", "kh O@ n\tf l aU\t@r z");
result.add("corn-\thus-\tking", "kh O@ n\th V s\tk I N");
result.add("corn-\thusk", "kh O@ n\th V s k");
result.add("corn-\tmeal", "kh O@ n\tm i: l");
result.add("corn-\twal-\tlis", "kh O@ n\tw O:\tl I s");
result.add("corn-\twall", "kh O@ n\tw O: l");
result.add("corn-\twall's", "kh O@ n\tw O: l z");
result.add("corn-\twell", "kh O@ n\tw e l");
result.add("cornc-\trib", "kh O@ n\tk r I b");
result.add("corns", "kh O@ n z");
result.add("corns-\ttalk", "kh O@ n\ts t O: k");
result.add("corns-\ttalks", "kh O@ n\ts t O: k s");
result.add("corns-\ttarch", "kh O@ n\ts t Q@ tS");
result.add("corp", "kh O@ p");
result.add("corp-\tses", "kh O@ p\ts V z");
result.add("corp.", "kh O@ p");
result.add("corps", "kh O@");
result.add("corps-\tman", "kh O@\tm V n");
result.add("corpse", "kh O@ p s");
result.add("corr", "kh O@");
result.add("corse", "kh O@ s");
result.add("cort", "kh O@ t");
result.add("cort-\tland", "kh O@ t\tl V n d");
result.add("cortes", "kh O@ t s");
result.add("cos", "kh O: s");
result.add("cos-\tby", "kh O: z\tb i:");
result.add("cos-\tby's", "kh O: z\tb i: z");
result.add("cos-\tgrove", "kh Q s\tg r V v");
result.add("cos-\tma", "kh @U z\tm V");
result.add("cos-\tme-\ttic", "kh Q z\tm e\tt I k");
result.add("cos-\tme-\ttical-\tly", "kh O: z\tm e\tt I k\tl i:");
result.add("cos-\tme-\ttics", "kh Q z\tm e\tt I k s");
result.add("cos-\tme-\tto-\tlo-\tgy", "kh Q z\tm V\tt Q\tl V\tdZ i:");
result.add("cos-\tmic", "kh Q z\tm I k");
result.add("cos-\tmo", "kh O: z\tm @U");
result.add("cos-\tmo-\tlo-\tgy", "kh O: z\tm O:\tl V\tdZ i:");
result.add("cos-\tmo-\tnaut", "kh O: z\tm V\tn O: t");
result.add("cos-\tmo-\tnauts", "kh O: z\tm V\tn O: t s");
result.add("cos-\tmo-\tpo-\tli-\ttan", "kh Q z\tm V\tp Q\tl V\tt V n");
result.add("cos-\tmos", "kh Q z\tm @U s");
result.add("cos-\tmo's", "kh Q z\tm @U z");
result.add("cos-\tpon-\tsor", "kh @U s\tp O: n\ts @r");
result.add("cos-\tpon-\tsors", "kh @U s\tp O: n\ts @r z");
result.add("cos-\tsack", "kh O:\ts V k");
result.add("cos-\tsacks", "kh Q\ts { k s");
result.add("cos-\tset", "kh Q\ts V t");
result.add("cos-\tsette", "kh V\ts e t");
result.add("cos-\tta", "kh O: s\tt V");
result.add("cos-\ttain", "kh @U s\tt eI n");
result.add("cos-\ttan-\tza", "kh @U s\tt Q n\tz V");
result.add("cos-\ttar", "kh @U s\tt Q@");
result.add("cos-\ttars", "kh @U s\tt Q@ z");
result.add("cos-\tted", "kh Q s\tt V d");
result.add("cos-\ttel-\tlo", "kh O: s\tt e\tl @U");
result.add("cos-\ttel-\tlo's", "kh O: s\tt e\tl @U z");
result.add("cos-\tten", "kh O: s\tt V n");
result.add("cos-\tter", "kh O: s\tt @r");
result.add("cos-\tti-\tgan", "kh Q s\tt I\tg { n");
result.add("cos-\ttil-\tla", "kh @U s\tt I\tl V");
result.add("cos-\ttin", "kh Q s\tt I n");
result.add("cos-\tting", "kh O: s\tt I N");
result.add("cos-\ttu-\tmer", "kh Q s\tt u:\tm @r");
result.add("cos-\ttu-\tmers", "kh Q s\tt u:\tm @r z");
result.add("cos-\ttume", "kh Q s\tt u: m");
result.add("cos-\ttumed", "kh O: s\tt u: m d");
result.add("cos-\ttumes", "kh Q s\tt u: m z");
result.add("cose", "kh @U z");
result.add("cosme", "kh @U z m");
result.add("coss", "kh O: s");
result.add("cost", "kh Q s t");
result.add("cost-\tco", "kh O: s\tt k @U");
result.add("cost-\tcut-\tting", "kh O: s\tt k V\tt I N");
result.add("cost-\tli-\ter", "kh O: s\tt l i:\t@r");
result.add("cost-\tli-\test", "kh O: s\tt l i:\tI s t");
result.add("cost-\tly", "kh Q s\tt l i:");
result.add("cost-\tner", "kh Q s\tt n @r");
result.add("cost-\tner's", "kh Q s\tt n @r z");
result.add("coste", "kh @U s t");
result.add("costs", "kh Q s t s");
result.add("cot", "kh Q t");
result.add("cot-\tta", "kh Q\tt V");
result.add("cot-\tta-\tges", "kh Q\tt I\tdZ V z");
result.add("cot-\ttage", "kh Q\tt V dZ");
result.add("cot-\tter", "kh Q\tt @r");
result.add("cot-\tti-\ter", "kh Q\tt i:\t@r");
result.add("cot-\ttle", "kh Q\tt V l");
result.add("cot-\tton", "kh Q\tt V n");
result.add("cot-\tton-\tmouth", "kh Q\tt V n\tm aU T");
result.add("cot-\tton-\tseed", "kh Q\tt V n\ts i: d");
result.add("cot-\tton-\twood", "kh Q\tt V n\tw U d");
result.add("cot-\tton-\twoods", "kh Q\tt V n\tw U d z");
result.add("cot-\ttoned", "kh Q\tt V n d");
result.add("cot-\ttons", "kh Q\tt V n z");
result.add("cot-\tton's", "kh Q\tt V n z");
result.add("cot-\tty", "kh Q\tt i:");
result.add("cote", "kh @U t");
result.add("cots", "kh Q t s");
result.add("cott", "kh Q t");
result.add("cott-\trell", "kh Q t\tr e l");
result.add("cou", "kh u:");
result.add("cou-\tches", "kh aU\ttS V z");
result.add("cou-\tders-\tport", "kh aU\td @r z\tp O@ t");
result.add("cou-\tgar", "kh u:\tg @r");
result.add("cou-\tgars", "kh u:\tg @r z");
result.add("cou-\tghing", "kh Q\tf I N");
result.add("cou-\tlee", "kh u:\tl i:");
result.add("cou-\tlom-\tbe", "kh aU\tl @U m\tb i:");
result.add("cou-\tper", "kh u:\t@r");
result.add("cou-\tple", "kh V\tp V l");
result.add("cou-\tpled", "kh V\tp V l d");
result.add("cou-\tples", "kh V\tp V l z");
result.add("cou-\tpo-\tning", "kh u:\tp Q\tn I N");
result.add("cou-\tpon", "kh u:\tp O: n");
result.add("cou-\tpons", "kh u:\tp O: n z");
result.add("cou-\tra-\tgeous", "kh @r\teI\tdZ V s");
result.add("cou-\tra-\tgeous-\tly", "kh @r\teI\tdZ V s\tl i:");
result.add("cou-\trage", "kh @r\tV dZ");
result.add("cou-\trant", "kh U@\tV n t");
result.add("cou-\tri-\ter", "kh @r\ti:\t@r");
result.add("cou-\tri-\ters", "kh @r\ti:\t@r z");
result.add("cou-\tri-\ter's", "kh @r\ti:\t@r z");
result.add("cou-\tsin", "kh V\tz I n");
result.add("cou-\tsins", "kh V\tz I n z");
result.add("cou-\tsin's", "kh V\tz I n z");
result.add("cou-\tsy", "kh u:\tz i:");
result.add("cou-\ttu-\tri-\ter", "kh u:\tt U@\ti:\t@r");
result.add("cou-\tture", "kh u:\tt U@");
result.add("couch", "kh aU tS");
result.add("couch-\tman", "kh u: S\tm { n");
result.add("couched", "kh aU tS t");
result.add("cough", "kh Q f");
result.add("cough-\tlin", "kh O: g\tl I n");
result.add("coughed", "kh Q f t");
result.add("coughs", "kh O: f s");
result.add("coul-\tdn't", "kh U\td V n t");
result.add("coul-\td've", "kh U\td V v");
result.add("coul-\tson", "kh aU l\ts V n");
result.add("coul-\tter", "kh @U l\tt @r");
result.add("coul-\tthard", "kh u: l\tT Q@ d");
result.add("could", "kh U d");
result.add("coun-\tci-\tlor", "kh aU n\ts V\tl @r");
result.add("coun-\tci-\tlors", "kh aU n\ts V\tl @r z");
result.add("coun-\tcil", "kh aU n\ts V l");
result.add("coun-\tcil-\tman", "kh aU n\ts V l\tm V n");
result.add("coun-\tcil-\tmen", "kh aU n\ts V l\tm e n");
result.add("coun-\tcil-\two-\tman", "kh aU n\ts V l\tw U\tm V n");
result.add("coun-\tcil-\two-\tmen", "kh aU n\ts V l\tw I\tm V n");
result.add("coun-\tcils", "kh aU n\ts V l z");
result.add("coun-\tcil's", "kh aU n\ts V l z");
result.add("coun-\tse-\tling", "kh aU n\ts V\tl I N");
result.add("coun-\tse-\tlor", "kh aU n\ts V\tl @r");
result.add("coun-\tse-\tlors", "kh aU n\ts V\tl @r z");
result.add("coun-\tsel", "kh aU n\ts V l");
result.add("coun-\tsel-\tlor", "kh aU n\ts V\tl @r");
result.add("coun-\tsel-\tlors", "kh aU n\ts V\tl @r z");
result.add("coun-\tseled", "kh aU n\ts V l d");
result.add("coun-\tsels", "kh aU n\ts V l z");
result.add("coun-\tsel's", "kh aU n\ts V l z");
result.add("coun-\tta-\tble", "kh aU n\tt V\tb V l");
result.add("coun-\tte-\tnan-\tces", "kh aU n\tt V\tn V n\ts V z");
result.add("coun-\tte-\tnance", "kh aU n\tt V\tn V n s");
result.add("coun-\tte-\tnanced", "kh aU n\tt V\tn V n s t");
result.add("coun-\tte-\trac-\tted", "kh aU n\tt @r\t{ k\tt V d");
result.add("coun-\tte-\trac-\tting", "kh aU n\tt @r\t{ k\tt I N");
result.add("coun-\tte-\tract", "kh aU n\tt @r\t{ k t");
result.add("coun-\tte-\trat-\ttack", "kh aU n\tt @r\tV\tt { k");
result.add("coun-\tte-\trat-\ttacked", "kh aU n\tt @r\tV\tt { k t");
result.add("coun-\tte-\trat-\ttacks", "kh aU n\tt @r\tV\tt { k s");
result.add("coun-\tte-\trof-\tfen-\tsive", "kh aU n\tt @r\tO:\tf e n\ts I v");
result.add("coun-\tte-\trof-\tfer", "kh aU n\tt @r\tO:\tf @r");
result.add("coun-\tte-\trof-\tfers", "kh aU n\tt @r\tO:\tf @r z");
result.add("coun-\tted", "kh aU n\tt V d");
result.add("coun-\tter", "kh aU n\tt @r");
result.add("coun-\tter-\tba-\tlance", "kh aU n\tt @r\tb {\tl V n s");
result.add("coun-\tter-\tba-\tlanced", "kh aU n\tt @r\tb {\tl V n s t");
result.add("coun-\tter-\tbid", "kh aU n\tt @r\tb I d");
result.add("coun-\tter-\tchal-\tlenge", "kh aU n\tt @r\ttS {\tl V n dZ");
result.add("coun-\tter-\tchar-\tges", "kh aU n\tt @r\ttS Q@\tdZ V z");
result.add("coun-\tter-\tcharge", "kh aU n\tt @r\ttS Q@ dZ");
result.add("coun-\tter-\tcul-\ttu-\tral", "kh aU n\tt @r\tk V l\ttS @r\tV l");
result.add("coun-\tter-\tcul-\tture", "kh aU n\tt @r\tk V l\ttS @r");
result.add("coun-\tter-\tes-\tpi-\to-\tnage", "kh aU n\tt @r\te s\tp i:\tV\tn Q dZ");
result.add("coun-\tter-\tfei-\tted", "kh aU n\tt @r\tf I\tt V d");
result.add("coun-\tter-\tfei-\tter", "kh aU n\tt @r\tf I\tt @r");
result.add("coun-\tter-\tfei-\tters", "kh aU n\tt @r\tf I\tt @r z");
result.add("coun-\tter-\tfei-\tting", "kh aU n\tt @r\tf I\tt I N");
result.add("coun-\tter-\tfeit", "kh aU n\tt @r\tf I t");
result.add("coun-\tter-\tfeits", "kh aU n\tt @r\tf I t s");
result.add("coun-\tter-\tforce", "kh aU n\tt @r\tf O@ s");
result.add("coun-\tter-\tin-\tsur-\tgen-\tcy", "kh aU n\tt @r\tI n\ts @r\tdZ V n\ts i:");
result.add("coun-\tter-\tin-\ttel-\tli-\tgence", "kh aU n\tt @r\tI n\tt e\tl I\tdZ V n s");
result.add("coun-\tter-\ting", "kh aU n\tt @r\tI N");
result.add("coun-\tter-\tlife", "kh aU n\tt @r\tl aI f");
result.add("coun-\tter-\tman", "kh aU n\tt @r\tm { n");
result.add("coun-\tter-\tmea-\tsure", "kh aU n\tt @r\tm e\tZ @r");
result.add("coun-\tter-\tmea-\tsures", "kh aU n\tt @r\tm e\tZ @r z");
result.add("coun-\tter-\tmove", "kh aU n\tt @r\tm u: v");
result.add("coun-\tter-\tmoves", "kh aU n\tt @r\tm u: v z");
result.add("coun-\tter-\tpart", "kh aU n\tt @r\tp Q@ t");
result.add("coun-\tter-\tparts", "kh aU n\tt @r\tp Q@ t s");
result.add("coun-\tter-\tpoint", "kh aU n\tt @r\tp OI n t");
result.add("coun-\tter-\tpro-\tduc-\ttive", "kh aU n\tt @r p\tr V\td V k\tt I v");
result.add("coun-\tter-\tpro-\tpo-\tsal", "kh aU n\tt @r p\tr V\tp @U\tz V l");
result.add("coun-\tter-\tpro-\tpo-\tsals", "kh aU n\tt @r p\tr V\tp @U\tz V l z");
result.add("coun-\tter-\tpunch", "kh aU n\tt @r\tp V n tS");
result.add("coun-\tter-\tre-\tvo-\tlu-\ttio-\tna-\try", "kh aU n\tt @r\tr e\tv V\tl u:\tS V\tn e@\ti:");
result.add("coun-\tter-\tre-\tvo-\tlu-\ttion", "kh aU n\tt @r\tr e\tv V\tl u:\tS V n");
result.add("coun-\tter-\tsue", "kh aU n\tt @r\ts u:");
result.add("coun-\tter-\tsued", "kh aU n\tt @r\ts u: d");
result.add("coun-\tter-\tsuit", "kh aU n\tt @r\ts u: t");
result.add("coun-\tter-\tte-\tnor", "kh aU n\tt @r\tt e\tn @r");
result.add("coun-\tter-\tter-\tro-\tri-\tsm", "kh aU n\tt @r\tt e@\t@r\tI\tz V m");
result.add("coun-\tter-\tter-\tro-\trist", "kh aU n\tt @r\tt e@\t@r\tI s t");
result.add("coun-\tter-\ttop", "kh aU n\tt @r\tt Q p");
result.add("coun-\tter-\ttrade", "kh aU n\tt @r t\tr eI d");
result.add("coun-\tter-\tvai-\tling", "kh aU n\tt @r\tv eI\tl I N");
result.add("coun-\tter-\tweight", "kh aU n\tt @r\tw eI t");
result.add("coun-\tterc-\tlaim", "kh aU n\tt @r k\tl eI m");
result.add("coun-\tterc-\tlaims", "kh aU n\tt @r k\tl eI m z");
result.add("coun-\tterc-\tlock-\twise", "kh aU\tt @r k\tl O: k\tw aI z");
result.add("coun-\ttered", "kh aU n\tt @r d");
result.add("coun-\tters", "kh aU n\tt @r z");
result.add("coun-\ttess", "kh aU n\tt V s");
result.add("coun-\tties", "kh aU n\tt i: z");
result.add("coun-\tting", "kh aU n\tt I N");
result.add("coun-\tty", "kh aU n\tt i:");
result.add("coun-\tty's", "kh aU n\tt i: z");
result.add("counce", "kh aU n s");
result.add("count", "kh aU n t");
result.add("count-\tdown", "kh aU n\tt d aU n");
result.add("count-\tdowns", "kh aU n\tt d aU n z");
result.add("count-\tless", "kh aU n\tt l V s");
result.add("count-\tries", "kh V n\tt r i: z");
result.add("count-\try", "kh V n\tt r i:");
result.add("count-\try-\tfolk", "kh V n\tt r i:\tf @U k");
result.add("count-\try-\tman", "kh V n\tt r i:\tm V n");
result.add("count-\try-\tmen", "kh V n\tt r i:\tm e n");
result.add("count-\try-\tside", "kh V n\tt r i:\ts aI d");
result.add("count-\try-\twide", "kh V n\tt r i:\tw aI d");
result.add("count-\try's", "kh V n\tt r i: z");
result.add("counts", "kh aU n t s");
result.add("coup", "kh u:");
result.add("coup-\tland", "kh u: p\tl V n d");
result.add("coup-\tler", "kh V p\tl @r");
result.add("coup-\tlers", "kh V p\tl @r z");
result.add("coup-\tle's", "kh V\tp V l z");
result.add("coup-\tling", "kh V p\tl I N");
result.add("coup-\tlings", "kh V p\tl I N z");
result.add("coupe", "kh u: p");
result.add("coupes", "kh u: p s");
result.add("coups", "kh u: z");
result.add("cour-\tser", "kh O@\ts @r");
result.add("cour-\tses", "kh O@\ts V z");
result.add("cour-\tse's", "kh O@\ts V z");
result.add("cour-\tsey", "kh O@\ts i:");
result.add("cour-\tsing", "kh O@\ts I N");
result.add("cour-\tte-\tnay", "kh @r\tt V\tn eI");
result.add("cour-\tte-\tous", "kh @r\tt i:\tV s");
result.add("cour-\tte-\tsies", "kh @r\tt V\ts i: z");
result.add("cour-\tte-\tsy", "kh @r\tt V\ts i:");
result.add("cour-\tted", "kh O@\tt V d");
result.add("cour-\tter", "kh O@\tt @r");
result.add("cour-\tti-\ter", "kh O@\tt i:\t@r");
result.add("cour-\tti-\ters", "kh O@\tt i:\t@r z");
result.add("cour-\tting", "kh O@\tt I N");
result.add("cour-\ttois", "kh O@ t\tw Q");
result.add("course", "kh O@ s");
result.add("court", "kh O@ t");
result.add("court-\thou-\tses", "kh O@ t\th aU\ts V z");
result.add("court-\thouse", "kh O@ t\th aU s");
result.add("court-\tland", "kh O@ t\tl { n d");
result.add("court-\tly", "kh O@ t\tl i:");
result.add("court-\tney", "kh O@ t\tn i:");
result.add("court-\troom", "kh O@ t\tr u: m");
result.add("court-\trooms", "kh O@ t\tr u: m z");
result.add("court-\tship", "kh O@\ttS I p");
result.add("court-\tyard", "kh O@ t\tj Q@ d");
result.add("court-\tyards", "kh O@ t\tj Q@ d z");
result.add("courts", "kh O@ t s");
result.add("court's", "kh O@ t s");
result.add("cous-\tteau", "kh u: s\tt @U");
result.add("cove", "kh @U v");
result.add("coves", "kh @U v z");
result.add("cow", "kh aU");
result.add("cow-\tbell", "kh aU\tb e l");
result.add("cow-\tbells", "kh aU\tb e l z");
result.add("cow-\tboy", "kh aU\tb OI");
result.add("cow-\tboys", "kh aU\tb OI z");
result.add("cow-\tboy's", "kh aU\tb OI z");
result.add("cow-\tden", "kh aU\td V n");
result.add("cow-\tgill", "kh aU\tg I l");
result.add("cow-\tgirl", "kh aU\tg @r l");
result.add("cow-\tgirls", "kh aU\tg @r l z");
result.add("cow-\therd", "kh aU\th @r d");
result.add("cow-\tles", "kh aU\tV l z");
result.add("cow-\tley", "kh aU\tl i:");
result.add("cow-\tling", "kh aU\tl I N");
result.add("cow-\tlings", "kh aU\tl I N z");
result.add("cow-\tling's", "kh aU\tl I N z");
result.add("cow-\tman", "kh aU\tm V n");
result.add("cow-\tper", "kh aU\tp @r");
result.add("cow-\tries", "kh aU\tr i: z");
result.add("cowd-\trey", "kh aU d\tr i:");
result.add("cowed", "kh aU d");
result.add("cowl", "kh aU l");
result.add("cows", "kh aU z");
result.add("cow's", "kh aU z");
result.add("cows-\tlip", "kh aU s\tl I p");
result.add("cox", "kh Q k s");
result.add("cox-\twell", "kh Q k\ts w e l");
result.add("coy", "kh OI");
result.add("coy-\tly", "kh OI\tl i:");
result.add("coyle", "kh OI l");
result.add("cr-\ta-\try", "kh @r\te@\ti:");
result.add("cr-\tyan", "kh r aI\tV n");
result.add("cra-\td-\tling", "kh r eI\td V\tl I N");
result.add("cra-\tdle", "kh r eI\td V l");
result.add("cra-\tdles", "kh r eI\td V l z");
result.add("cra-\tdock", "kh r {\td V k");
result.add("cra-\tker", "kh r eI\tk @r");
result.add("cra-\tmer", "kh r eI\tm @r");
result.add("cra-\tmer's", "kh r eI\tm @r z");
result.add("cra-\tner", "kh r eI\tn @r");
result.add("cra-\tney", "kh r eI\tn i:");
result.add("cra-\tpo", "kh r Q\tp @U");
result.add("cra-\tshes", "kh r {\tS V z");
result.add("cra-\tshing", "kh r {\tS I N");
result.add("cra-\tter", "kh r eI\tt @r");
result.add("cra-\ttered", "kh r eI\tt @r d");
result.add("cra-\tters", "kh r eI\tt @r z");
result.add("cra-\tting", "kh r eI\tt I N");
result.add("cra-\tton", "kh r {\tt V n");
result.add("cra-\tven", "kh r eI\tv V n");
result.add("cra-\tvens", "kh r eI\tv V n z");
result.add("cra-\tven's", "kh r eI\tv V n z");
result.add("cra-\tver", "kh r eI\tv @r");
result.add("cra-\tving", "kh r eI\tv I N");
result.add("cra-\tvings", "kh r eI\tv I N z");
result.add("cra-\tyon", "kh r eI\tQ n");
result.add("cra-\tyons", "kh r eI\tQ n z");
result.add("cra-\tzi-\ter", "kh r eI\tz i:\t@r");
result.add("cra-\tzi-\test", "kh r eI\tz i:\tV s t");
result.add("cra-\tzi-\tly", "kh r eI\tz I\tl i:");
result.add("cra-\tzi-\tness", "kh r eI\tz i:\tn V s");
result.add("cra-\tzies", "kh r eI\tz i: z");
result.add("cra-\tzy", "kh r eI\tz i:");
result.add("crab-\tmeat", "kh r { b\tm i: t");
result.add("crab-\ttree", "kh r { b\tt r i:");
result.add("crabs", "kh r { b z");
result.add("crac-\tker", "kh r {\tk @r");
result.add("crac-\tker-\tjack", "kh r {\tk @r\tdZ { k");
result.add("crac-\tkers", "kh r {\tk @r z");
result.add("crac-\tking", "kh r {\tk I N");
result.add("crac-\tkle", "kh r {\tk V l");
result.add("crac-\tkled", "kh r {\tk V l d");
result.add("crac-\tkles", "kh r {\tk V l z");
result.add("crack", "kh r { k");
result.add("crack-\tdown", "kh r { k\td aU n");
result.add("crack-\tdowns", "kh r { k\td aU n z");
result.add("crack-\tling", "kh r { k\tl I N");
result.add("crack-\tpot", "kh r { k\tp Q t");
result.add("crack-\tpots", "kh r { k\tp Q t s");
result.add("cracked", "kh r { k t");
result.add("cracks", "kh r { k s");
result.add("crad-\tdock", "kh r {\td V k");
result.add("craf-\tted", "kh r { f\tt V d");
result.add("craf-\tting", "kh r { f\tt I N");
result.add("craf-\tton", "kh r { f\tt V n");
result.add("craf-\tty", "kh r { f\tt i:");
result.add("craft", "kh r { f t");
result.add("crafts", "kh r { f t s");
result.add("craft's", "kh r { f t s");
result.add("crafts-\tman", "kh r { f\tt s m V n");
result.add("crafts-\tman-\tship", "kh r { f\tt s m V n\tS I p");
result.add("crafts-\tmen", "kh r { f\tt s m V n");
result.add("crafts-\tpeo-\tple", "kh r { f\tt s p i:\tp V l");
result.add("crag-\tgy", "kh r {\tg i:");
result.add("crai-\tgie", "kh r eI\tg i:");
result.add("craig", "kh r eI g");
result.add("craig's", "kh r eI g z");
result.add("crain", "kh r eI n");
result.add("crain's", "kh r eI n z");
result.add("cram", "kh r { m");
result.add("cram-\tmer", "kh r {\tm @r");
result.add("cram-\tming", "kh r {\tm I N");
result.add("cram-\tping", "kh r { m\tp I N");
result.add("crames", "kh r eI m z");
result.add("crammed", "kh r { m d");
result.add("cramp", "kh r { m p");
result.add("cramped", "kh r { m p t");
result.add("cramps", "kh r { m p s");
result.add("crams", "kh r { m z");
result.add("cran-\tber-\tries", "kh r { n\tb e@\ti: z");
result.add("cran-\tber-\try", "kh r { n\tb e@\ti:");
result.add("cran-\tdall", "kh r { n\td V l");
result.add("cran-\tdall's", "kh r { n\td V l z");
result.add("cran-\tdell", "kh r { n\td V l");
result.add("cran-\tfield", "kh r { n\tf i: l d");
result.add("cran-\tford", "kh r { n\tf @r d");
result.add("cran-\tking", "kh r { N\tk I N");
result.add("cran-\tky", "kh r { N\tk i:");
result.add("cran-\tmer", "kh r { n\tm @r");
result.add("cran-\tnies", "kh r {\tn i: z");
result.add("cran-\tny", "kh r {\tn i:");
result.add("cran-\tshaw", "kh r { n\tS O:");
result.add("crance", "kh r { n s");
result.add("crane", "kh r eI n");
result.add("craned", "kh r eI n d");
result.add("cranes", "kh r eI n z");
result.add("crane's", "kh r eI n z");
result.add("cranes-\tbill", "kh r eI n\tz b I l");
result.add("cranes-\tbills", "kh r eI n\tz b I l z");
result.add("crank", "kh r { N k");
result.add("crank-\tshaft", "kh r { N\tk S { f t");
result.add("crank-\tshafts", "kh r { N\tk S { f t s");
result.add("cranked", "kh r { N k t");
result.add("cranks", "kh r { N k s");
result.add("crans", "kh r { n z");
result.add("crans-\tton", "kh r { n\ts t V n");
result.add("crans-\tton's", "kh r { n\ts t V n z");
result.add("crap", "kh r { p");
result.add("crap-\tpie", "kh r {\tp i:");
result.add("crap-\tshoot", "kh r { p\tS u: t");
result.add("craps", "kh r { p s");
result.add("crash", "kh r { S");
result.add("crashed", "kh r { S t");
result.add("crass", "kh r { s");
result.add("crate", "kh r eI t");
result.add("crates", "kh r eI t s");
result.add("crave", "kh r eI v");
result.add("craved", "kh r eI v d");
result.add("craves", "kh r eI v z");
result.add("craw", "kh r O:");
result.add("craw-\tfish", "kh r O:\tf I S");
result.add("craw-\tford", "kh r O:\tf @r d");
result.add("craw-\tford's", "kh r O:\tf @r d z");
result.add("craw-\tfords-\tville", "kh r O:\tf @r d\tz v I l");
result.add("craw-\tley", "kh r O:\tl i:");
result.add("craw-\tling", "kh r O:\tl I N");
result.add("craw-\tly", "kh r O:\tl i:");
result.add("crawl", "kh r O: l");
result.add("crawled", "kh r O: l d");
result.add("crawls", "kh r O: l z");
result.add("cray", "kh r eI");
result.add("cray-\tfish", "kh r eI\tf I S");
result.add("crayne", "kh r eI n");
result.add("crays", "kh r eI z");
result.add("cray's", "kh r eI z");
result.add("craze", "kh r eI z");
result.add("crazed", "kh r eI z d");
result.add("cre-\ta-\tted", "kh r i:\teI\tt V d");
result.add("cre-\ta-\tti-\tvi-\tty", "kh r i:\teI\tt I\tv I\tt i:");
result.add("cre-\ta-\tting", "kh r i:\teI\tt I N");
result.add("cre-\ta-\ttio-\tni-\tsm", "kh r i:\teI\tS V\tn I\tz V m");
result.add("cre-\ta-\ttion", "kh r i:\teI\tS V n");
result.add("cre-\ta-\ttions", "kh r i:\teI\tS V n z");
result.add("cre-\ta-\ttive", "kh r i:\teI\tt I v");
result.add("cre-\ta-\ttive-\tly", "kh r i:\teI\tt I v\tl i:");
result.add("cre-\ta-\ttive-\tness", "kh r i:\teI\tt I v\tn V s");
result.add("cre-\ta-\ttor", "kh r i:\teI\tt @r");
result.add("cre-\ta-\ttors", "kh r i:\teI\tt @r z");
result.add("cre-\tate", "kh r i:\teI t");
result.add("cre-\tates", "kh r i:\teI t s");
result.add("cre-\tden-\ttial", "kh r V\td e n\ttS V l");
result.add("cre-\tden-\ttialed", "kh r V\td e n\ttS V l d");
result.add("cre-\tden-\ttials", "kh r V\td e n\tS V l z");
result.add("cre-\tdence", "kh r i:\td V n s");
result.add("cre-\tdi-\tbi-\tli-\tty", "kh r e\td V\tb I\tl I\tt i:");
result.add("cre-\tdi-\tble", "kh r e\td I\tb V l");
result.add("cre-\tdi-\tta-\tble", "kh r e\td I\tt V\tb V l");
result.add("cre-\tdi-\tta-\tbly", "kh r e\td I\tt V b\tl i:");
result.add("cre-\tdi-\tted", "kh r e\td I\tt V d");
result.add("cre-\tdi-\tting", "kh r e\td I\tt I N");
result.add("cre-\tdi-\ttor", "kh r e\td I\tt @r");
result.add("cre-\tdi-\ttors", "kh r e\td I\tt @r z");
result.add("cre-\tdib-\tly", "kh r e\td I b\tl i:");
result.add("cre-\tdit", "kh r e\td I t");
result.add("cre-\tdit-\twor-\tthi-\tness", "kh r e\td I t\tw @r\tD i:\tn V s");
result.add("cre-\tdit-\twor-\tthy", "kh r e\td I t\tw @r\tD i:");
result.add("cre-\tdits", "kh r e\td I t s");
result.add("cre-\tdit's", "kh r e\td I t s");
result.add("cre-\tdo", "kh r eI\td @U");
result.add("cre-\tdu-\tli-\tty", "kh r V\td u:\tl I\tt i:");
result.add("cre-\tma-\tted", "kh r i:\tm eI\tt V d");
result.add("cre-\tma-\ttion", "kh r i:\tm eI\tS V n");
result.add("cre-\tma-\tto-\tri-\ta", "kh r i:\tm V\tt O@\ti:\tV");
result.add("cre-\tma-\tto-\tri-\tum", "kh r i:\tm V\tt O@\ti:\tV m");
result.add("cre-\tmate", "kh r i:\tm eI t");
result.add("cre-\tmer", "kh r i:\tm @r");
result.add("cre-\tne-\tla-\tted", "kh r e\tn V\tl eI\tt V d");
result.add("cre-\tne-\tlate", "kh r e\tn V\tl eI t");
result.add("cre-\to-\tlize", "kh r i:\t@U\tl aI z");
result.add("cre-\to-\tlized", "kh r i:\t@U\tl aI z d");
result.add("cre-\to-\tsote", "kh r i:\tV\ts @U t");
result.add("cre-\tole", "kh r i:\t@U l");
result.add("cre-\toles", "kh r i:\t@U l z");
result.add("cre-\tscen-\tdo", "kh r I\tS e n\td @U");
result.add("cre-\tscent", "kh r e\ts V n t");
result.add("cre-\tspi", "kh r e s\tp i:");
result.add("cre-\tta-\tceous", "kh r V\tt eI\tS V s");
result.add("cre-\tvi-\tces", "kh r e\tv V\ts V z");
result.add("cre-\tvice", "kh r e\tv V s");
result.add("cre-\twel", "kh r u:\tV l");
result.add("crea", "kh r i:");
result.add("crea-\tking", "kh r i:\tk I N");
result.add("crea-\tky", "kh r i:\tk i:");
result.add("crea-\tme-\try", "kh r i:\tm @r\ti:");
result.add("crea-\tmer", "kh r i:\tm @r");
result.add("crea-\tmi-\ter", "kh r i:\tm i:\t@r");
result.add("crea-\tmi-\test", "kh r i:\tm i:\tV s t");
result.add("crea-\tmy", "kh r i:\tm i:");
result.add("crea-\tses", "kh r i:\ts V z");
result.add("crea-\tsy", "kh r i:\ts i:");
result.add("crea-\tture", "kh r i:\ttS @r");
result.add("crea-\ttures", "kh r i:\ttS @r z");
result.add("creach", "kh r i: tS");
result.add("creagh", "kh r i: g");
result.add("creak", "kh r i: k");
result.add("creaked", "kh r i: k t");
result.add("cream", "kh r i: m");
result.add("creamed", "kh r i: m d");
result.add("creams", "kh r i: m z");
result.add("crean", "kh r i: n");
result.add("crease", "kh r i: s");
result.add("creath", "kh r e T");
result.add("cree", "kh r i:");
result.add("cree-\tdon", "kh r i:\td V n");
result.add("cree-\tpi-\tness", "kh r i:\tp i:\tn V s");
result.add("cree-\tping", "kh r i:\tp I N");
result.add("cree-\tpy", "kh r i:\tp i:");
result.add("creed", "kh r i: d");
result.add("creeds", "kh r i: d z");
result.add("creek", "kh r i: k");
result.add("creeks", "kh r i: k s");
result.add("creek's", "kh r i: k s");
result.add("creel", "kh r i: l");
result.add("creep", "kh r i: p");
result.add("creeps", "kh r i: p s");
result.add("crees", "kh r i: z");
result.add("creigh-\tton", "kh r eI\tt V n");
result.add("creme", "kh r i: m");
result.add("cren-\tshaw", "kh r e n\tS O:");
result.add("crepe", "kh r eI p");
result.add("crepes", "kh r eI p s");
result.add("crept", "kh r e p t");
result.add("cres-\tpo", "kh r e s\tp @U");
result.add("cres-\tses", "kh r e\ts V z");
result.add("cres-\tsey", "kh r e\ts i:");
result.add("cres-\tson", "kh r e\ts V n");
result.add("cres-\tsy", "kh r e\ts i:");
result.add("cres-\tted", "kh r e s\tt V d");
result.add("cres-\tting", "kh r e s\tt I N");
result.add("cres-\twell", "kh r e s\tw e l");
result.add("cress", "kh r e s");
result.add("cress-\tler", "kh r e s\tl @r");
result.add("crest", "kh r e s t");
result.add("crest-\tfal-\tlen", "kh r e s\tt f O:\tl V n");
result.add("crests", "kh r e s t s");
result.add("crete", "kh r i: t");
result.add("crew", "kh r u:");
result.add("crew-\tman", "kh r u:\tm V n");
result.add("crew-\tmen", "kh r u:\tm e n");
result.add("crewe", "kh r u:");
result.add("crewes", "kh r u: z");
result.add("crews", "kh r u: z");
result.add("crew's", "kh r u: z");
result.add("cri-\ter", "kh r aI\t@r");
result.add("cri-\tme-\ta", "kh r aI\tm i:\tV");
result.add("cri-\tmean", "kh r V\tm i: n");
result.add("cri-\tmi-\tna-\tli-\tty", "kh r I\tm I\tn {\tl I\tt i:");
result.add("cri-\tmi-\tna-\tli-\tza-\ttion", "kh r I\tm I\tn V\tl I\tz eI\tS V n");
result.add("cri-\tmi-\tna-\tli-\tzing", "kh r I\tm I\tn V\tl aI\tz I N");
result.add("cri-\tmi-\tna-\tlis-\ttics", "kh r I\tm I\tn V\tl I s\tt I k s");
result.add("cri-\tmi-\tna-\tlist", "kh r I\tm I\tn V\tl I s t");
result.add("cri-\tmi-\tna-\tlists", "kh r I\tm I\tn V\tl I s t s");
result.add("cri-\tmi-\tna-\tlist's", "kh r I\tm I\tn V\tl I s t s");
result.add("cri-\tmi-\tna-\tlize", "kh r I\tm I\tn V\tl aI z");
result.add("cri-\tmi-\tna-\tlized", "kh r I\tm I\tn V\tl aI z d");
result.add("cri-\tmi-\tnal", "kh r I\tm I\tn V l");
result.add("cri-\tmi-\tnal-\tly", "kh r I\tm I\tn V\tl i:");
result.add("cri-\tmi-\tnals", "kh r I\tm I\tn V l z");
result.add("cri-\tmi-\tnal's", "kh r I\tm I\tn V l z");
result.add("cri-\tmi-\tno-\tlo-\tgist", "kh r I\tm I\tn Q\tl V\tdZ I s t");
result.add("cri-\tmi-\tno-\tlo-\tgists", "kh r I\tm I\tn Q\tl V\tdZ I s t s");
result.add("cri-\tmi-\tno-\tlo-\tgy", "kh r I\tm I\tn Q\tl V\tdZ i:");
result.add("cri-\tses", "kh r aI\ts i: z");
result.add("cri-\tsis", "kh r aI\ts I s");
result.add("cri-\tti-\tcal-\tly", "kh r I\tt I\tk V\tl i:");
result.add("cri-\tti-\tci-\tsm", "kh r I\tt I\ts I\tz V m");
result.add("cri-\tti-\tci-\tsms", "kh r I\tt I\ts I\tz V m z");
result.add("cri-\tti-\tci-\tzes", "kh r I\tt I\ts aI\tz V z");
result.add("cri-\tti-\tci-\tzing", "kh r I\tt I\ts aI\tz I N");
result.add("cri-\tti-\tcize", "kh r I\tt I\ts aI z");
result.add("cri-\tti-\tcized", "kh r I\tt I\ts aI z d");
result.add("cri-\tti-\tquing", "kh r V\tt i:\tk I N");
result.add("cri-\ttics", "kh r I\tt I k s");
result.add("cri-\ttic's", "kh r I\tt I k s");
result.add("cri-\ttique", "kh r V\tt i: k");
result.add("cri-\ttiqued", "kh r V\tt i: k t");
result.add("cri-\ttiques", "kh r V\tt i: k s");
result.add("crib", "kh r I b");
result.add("crib-\tbage", "kh r I\tb I dZ");
result.add("cribs", "kh r I b z");
result.add("cric-\tket", "kh r I\tk V t");
result.add("cric-\tkets", "kh r I\tk V t s");
result.add("cric-\tket's", "kh r I\tk V t s");
result.add("crich-\tton", "kh r I tS\tt V n");
result.add("crick", "kh r I k");
result.add("crid-\tdle", "kh r I\td V l");
result.add("cried", "kh r aI d");
result.add("cries", "kh r aI z");
result.add("crim", "kh r I m");
result.add("crim-\tping", "kh r I m\tp I N");
result.add("crim-\tson", "kh r I m\tz V n");
result.add("crime", "kh r aI m");
result.add("crimes", "kh r aI m z");
result.add("crime's", "kh r aI m z");
result.add("crimp", "kh r I m p");
result.add("crimped", "kh r I m p t");
result.add("crimps", "kh r I m p s");
result.add("crin-\tges", "kh r I n\tdZ V z");
result.add("crin-\tging", "kh r I n\tdZ I N");
result.add("cringe", "kh r I n dZ");
result.add("cringed", "kh r I n dZ d");
result.add("crip", "kh r I p");
result.add("crip-\tp-\tling", "kh r I\tp V\tl I N");
result.add("crip-\tpen", "kh r I\tp V n");
result.add("crip-\tple", "kh r I\tp V l");
result.add("crip-\tpled", "kh r I\tp V l d");
result.add("crip-\tples", "kh r I\tp V l z");
result.add("cripe", "kh r aI p");
result.add("cripps", "kh r I p s");
result.add("crips", "kh r I p s");
result.add("cris", "kh r I s");
result.add("cris-\tco", "kh r i: s\tk @U");
result.add("cris-\tpen", "kh r I s\tp V n");
result.add("cris-\tper", "kh r I s\tp @r");
result.add("cris-\tpin", "kh r I s\tp I n");
result.add("cris-\tpy", "kh r I s\tp i:");
result.add("crise", "kh r aI z");
result.add("crisp", "kh r I s p");
result.add("crisp-\tly", "kh r I s\tp l i:");
result.add("crisp-\tness", "kh r I s\tp n V s");
result.add("criss", "kh r I s");
result.add("criss-\tcross", "kh r I s\tk r O: s");
result.add("crit-\tten-\tden", "kh r I\tt e n\td V n");
result.add("crit-\tter", "kh r I\tt @r");
result.add("crit-\tters", "kh r I\tt @r z");
result.add("critz", "kh r I t s");
result.add("cro", "kh r @U");
result.add("cro-\ta-\ttia", "kh r @U\teI\tS V");
result.add("cro-\ta-\ttian", "kh r @U\teI\tS V n");
result.add("cro-\ta-\ttians", "kh r @U\teI\tS V n z");
result.add("cro-\ta-\ttia's", "kh r @U\teI\tS V z");
result.add("cro-\tat", "kh r @U\tQ t");
result.add("cro-\tats", "kh r @U\tQ t s");
result.add("cro-\tat's", "kh r @U\tQ t s");
result.add("cro-\tce", "kh r @U\ttS i:");
result.add("cro-\tche-\tting", "kh r @U\tS eI\tI N");
result.add("cro-\tchet", "kh r @U\tS eI");
result.add("cro-\tcheted", "kh r @U\tS eI d");
result.add("cro-\tco-\tdile", "kh r Q\tk V\td aI l");
result.add("cro-\tco-\tdiles", "kh r Q\tk V\td aI l z");
result.add("cro-\tcu-\tses", "kh r @U\tk V\ts V z");
result.add("cro-\tcus", "kh r @U\tk V s");
result.add("cro-\tfoot", "kh r @U\tf U t");
result.add("cro-\tghan", "kh r Q g\th V n");
result.add("cro-\tker", "kh r @U\tk @r");
result.add("cro-\tmer", "kh r @U\tm @r");
result.add("cro-\tner", "kh r @U\tn @r");
result.add("cro-\tnies", "kh r @U\tn i: z");
result.add("cro-\tnin", "kh r @U\tn I n");
result.add("cro-\tnus", "kh r @U\tn V s");
result.add("cro-\tny", "kh r @U\tn i:");
result.add("cro-\tny-\ti-\tsm", "kh r @U\tn i:\tI\tz V m");
result.add("cro-\tquet", "kh r @U\tk eI");
result.add("cro-\twell", "kh r @U\tV l");
result.add("cro-\twing", "kh r @U\tI N");
result.add("cro-\tzier", "kh r @U\tZ @r");
result.add("croa-\tker", "kh r @U\tk @r");
result.add("croa-\tking", "kh r @U\tk I N");
result.add("croak", "kh r @U k");
result.add("croc", "kh r Q k");
result.add("croc-\tke-\try", "kh r Q\tk @r\ti:");
result.add("croc-\tker", "kh r Q\tk @r");
result.add("croc-\tker's", "kh r Q\tk @r z");
result.add("croc-\tkett", "kh r Q\tk V t");
result.add("crock", "kh r Q k");
result.add("crock-\tford", "kh r Q k\tf @r d");
result.add("crof-\tton", "kh r Q f\tt V n");
result.add("croft", "kh r O: f t");
result.add("crofts", "kh r O: f t s");
result.add("crois-\tsant", "kh w Q\ts Q n t");
result.add("crois-\tsants", "kh w Q\ts Q n t s");
result.add("croix", "kh r OI");
result.add("croix's", "kh r OI z");
result.add("crom", "kh r Q m");
result.add("crom-\tbie", "kh r Q m\tb i:");
result.add("crom-\twell", "kh r Q m\tw V l");
result.add("crom-\twell's", "kh r Q m\tw V l z");
result.add("cromp-\tton", "kh r Q m\tp t V n");
result.add("cron-\tkite", "kh r Q N\tk aI t");
result.add("crone", "kh r @U n");
result.add("cronk", "kh r Q N k");
result.add("croo-\tked", "kh r U\tk V d");
result.add("croo-\tked-\tness", "kh r U\tk V d\tn V s");
result.add("croo-\tker", "kh r U\tk @r");
result.add("croo-\tner", "kh r u:\tn @r");
result.add("croo-\tning", "kh r u:\tn I N");
result.add("crook", "kh r U k");
result.add("crooks", "kh r U k s");
result.add("crooks-\tton", "kh r U k\ts t V n");
result.add("croom", "kh r u: m");
result.add("croon", "kh r u: n");
result.add("croons", "kh r u: n z");
result.add("crop", "kh r Q p");
result.add("crop-\tland", "kh r Q p\tl { n d");
result.add("crop-\tper", "kh r Q\tp @r");
result.add("crop-\tping", "kh r Q\tp I N");
result.add("crop-\tsey", "kh r Q p\ts i:");
result.add("cropped", "kh r Q p t");
result.add("crops", "kh r Q p s");
result.add("crop's", "kh r Q p s");
result.add("cros-\tby", "kh r O: z\tb i:");
result.add("cros-\tby's", "kh r O: z\tb i: z");
result.add("cros-\tley", "kh r Q s\tl i:");
result.add("cros-\tser", "kh r O:\ts @r");
result.add("cros-\tses", "kh r O:\ts V z");
result.add("cros-\tsett", "kh r Q\ts V t");
result.add("cros-\tsing", "kh r O:\ts I N");
result.add("cros-\tsings", "kh r O:\ts I N z");
result.add("cros-\ts's", "kh r O:\ts V z");
result.add("cros-\twell", "kh r Q s\tw e l");
result.add("crose", "kh r @U z");
result.add("cross", "kh r O: s");
result.add("cross-\tbill", "kh r O: s\tb I l");
result.add("cross-\tbills", "kh r O: s\tb I l z");
result.add("cross-\tbones", "kh r O: s\tb @U n z");
result.add("cross-\tbow", "kh r O: s\tb @U");
result.add("cross-\tcur-\trent", "kh r O: s\tk @r\tV n t");
result.add("cross-\tcur-\trents", "kh r O: s\tk @r\tV n t s");
result.add("cross-\tfield", "kh r O: s\tf i: l d");
result.add("cross-\tfire", "kh r O: s\tf aI r");
result.add("cross-\tfire's", "kh r O: s\tf aI r z");
result.add("cross-\tley", "kh r Q s\tl i:");
result.add("cross-\tman", "kh r O: s\tm V n");
result.add("cross-\to-\tver", "kh r O:\ts @U\tv @r");
result.add("cross-\tpie-\tces", "kh r O: s\tp i:\ts V z");
result.add("cross-\tpiece", "kh r O: s\tp i: s");
result.add("cross-\tpol-\tli-\tnate", "kh r O: s\tp Q\tl I\tn eI t");
result.add("cross-\troad", "kh r O: s\tr @U d");
result.add("cross-\troads", "kh r O: s\tr @U d z");
result.add("cross-\ttalk", "kh r O: s\tt O: k");
result.add("cross-\ttown", "kh r O: s\tt aU n");
result.add("cross-\tville", "kh r Q s\tv I l");
result.add("cross-\twalk", "kh r Q s\tw Q k");
result.add("cross-\twise", "kh r O: s\tw aI z");
result.add("cross-\tword", "kh r O: s\tw @r d");
result.add("cross-\twords", "kh r O: s\tw @r d z");
result.add("crosse", "kh r Q s");
result.add("crossed", "kh r O: s t");
result.add("crot-\tche-\tty", "kh r Q\ttS V\tt i:");
result.add("crot-\teau", "kh r V\tt @U");
result.add("crot-\tty", "kh r Q\tt i:");
result.add("crotch", "kh r Q tS");
result.add("crou-\tcher", "kh r aU\ttS @r");
result.add("crou-\tching", "kh r aU\ttS I N");
result.add("crouch", "kh r aU tS");
result.add("crouched", "kh r aU tS t");
result.add("croup", "kh r u: p");
result.add("crouse", "kh r aU s");
result.add("crout", "kh r aU t");
result.add("crow", "kh r @U");
result.add("crow-\tbar", "kh r @U\tb Q@");
result.add("crow-\tded", "kh r aU\td V d");
result.add("crow-\tder", "kh r aU\td @r");
result.add("crow-\tding", "kh r aU\td I N");
result.add("crow-\tkee-\tper", "kh r @U\tk i:\tp @r");
result.add("crow-\tkee-\tpers", "kh r @U\tk i:\tp @r z");
result.add("crow-\tley", "kh r aU\tl i:");
result.add("crow-\tley's", "kh r aU\tl i: z");
result.add("crow-\tner", "kh r aU\tn @r");
result.add("crow-\tning", "kh r aU\tn I N");
result.add("crowd", "kh r aU d");
result.add("crowds", "kh r aU d z");
result.add("crowd's", "kh r aU d z");
result.add("crowe", "kh r @U");
result.add("crowed", "kh r @U d");
result.add("crowl", "kh r aU l");
result.add("crown", "kh r aU n");
result.add("crown-\tlike", "kh r aU n\tl aI k");
result.add("crowned", "kh r aU n d");
result.add("crowns", "kh r aU n z");
result.add("crown's", "kh r aU n z");
result.add("crows", "kh r @U z");
result.add("crow's", "kh r @U z");
result.add("croy", "kh r OI");
result.add("cru-\tces", "kh r u:\ts i: z");
result.add("cru-\tci-\tble", "kh r u:\ts I\tb V l");
result.add("cru-\tci-\tfi-\txes", "kh r u:\ts I\tf I k\ts V z");
result.add("cru-\tci-\tfi-\txion", "kh r u:\ts I\tf I k\tS V n");
result.add("cru-\tci-\tfied", "kh r u:\ts I\tf aI d");
result.add("cru-\tci-\tfix", "kh r u:\ts I\tf I k s");
result.add("cru-\tci-\tfy", "kh r u:\ts I\tf aI");
result.add("cru-\tcial", "kh r u:\tS V l");
result.add("cru-\tcial-\tly", "kh r u:\tS V l\tl i:");
result.add("cru-\tel", "kh r u:\tV l");
result.add("cru-\tger", "kh r u:\tdZ @r");
result.add("cru-\tik-\tshank", "kh r u:\tI k\tS { N k");
result.add("cru-\tsa-\tder", "kh r u:\ts eI\td @r");
result.add("cru-\tsa-\tders", "kh r u:\ts eI\td @r z");
result.add("cru-\tsa-\tding", "kh r u:\ts eI\td I N");
result.add("cru-\tsade", "kh r u:\ts eI d");
result.add("cru-\tsades", "kh r u:\ts eI d z");
result.add("cru-\tsher", "kh r V\tS @r");
result.add("cru-\tshers", "kh r V\tS @r z");
result.add("cru-\tshes", "kh r V\tS V z");
result.add("cru-\tshing", "kh r V\tS I N");
result.add("cru-\tsoe", "kh r u:\ts @U");
result.add("cru-\tsta-\tcean", "kh r V s\tt eI\tS V n");
result.add("cru-\tsta-\tceans", "kh r V s\tt eI\tS V n z");
result.add("cru-\tza-\tdo", "kh r u:\tz Q\td @U");
result.add("cru-\tza-\tdos", "kh r u:\tz Q\td @U s");
result.add("cru-\tzan", "kh r u:\tz V n");
result.add("cru-\tz's", "kh r u:\tz V z");
result.add("cruce", "kh r u: s");
result.add("crud", "kh r V d");
result.add("crud-\tdy", "kh r V\td i:");
result.add("crude", "kh r u: d");
result.add("crude-\tly", "kh r u: d\tl i:");
result.add("crudes", "kh r u: d z");
result.add("crue-\tlest", "kh r u:\tl V s t");
result.add("cruel-\tly", "kh r u:\tl i:");
result.add("cruel-\tties", "kh r u: l\tt i: z");
result.add("cruel-\tty", "kh r u: l\tt i:");
result.add("crui-\tser", "kh r u:\tz @r");
result.add("crui-\tsers", "kh r u:\tz @r z");
result.add("crui-\tser's", "kh r u:\tz @r z");
result.add("crui-\tses", "kh r u:\tz V z");
result.add("crui-\tsing", "kh r u:\tz I N");
result.add("cruick-\tshank", "kh r U k\tS { N k");
result.add("cruise", "kh r u: z");
result.add("cruised", "kh r u: z d");
result.add("crull", "kh r V l");
result.add("crum", "kh r V m");
result.add("crum-\tb-\tling", "kh r V m\tb V\tl I N");
result.add("crum-\tble", "kh r V m\tb V l");
result.add("crum-\tbled", "kh r V m\tb V l d");
result.add("crum-\tbles", "kh r V m\tb V l z");
result.add("crum-\tby", "kh r V m\tb i:");
result.add("crum-\tmy", "kh r V\tm i:");
result.add("crum-\tp-\tler", "kh r V m\tp V\tl @r");
result.add("crum-\tple", "kh r V m\tp V l");
result.add("crum-\tpled", "kh r V m\tp V l d");
result.add("crumb", "kh r V m");
result.add("crumbs", "kh r V m z");
result.add("crump", "kh r V m p");
result.add("crump-\tton", "kh r V m\tp t V n");
result.add("crun-\tcher", "kh r V n\ttS @r");
result.add("crun-\tchers", "kh r V n\ttS @r z");
result.add("crun-\tches", "kh r V n\ttS V z");
result.add("crun-\tching", "kh r V n\ttS I N");
result.add("crun-\tchy", "kh r V n\ttS i:");
result.add("crunch", "kh r V n tS");
result.add("crunched", "kh r V n tS t");
result.add("crunk", "kh r V N k");
result.add("crus-\ttal", "kh r V s\tt V l");
result.add("crus-\tted", "kh r V s\tt V d");
result.add("crus-\tty", "kh r V s\tt i:");
result.add("cruse", "kh r u: z");
result.add("crush", "kh r V S");
result.add("crushed", "kh r V S t");
result.add("crust", "kh r V s t");
result.add("crusts", "kh r V s t s");
result.add("crut-\tcher", "kh r V\ttS @r");
result.add("crut-\tches", "kh r V\ttS V z");
result.add("crutch", "kh r V tS");
result.add("crux", "kh r V k s");
result.add("cruz", "kh r u: z");
result.add("cry", "kh r aI");
result.add("cry-\tba-\tby", "kh r aI\tb eI\tb i:");
result.add("cry-\ter", "kh r aI\t@r");
result.add("cry-\ting", "kh r aI\tI N");
result.add("cry-\to-\tge-\tnic", "kh r aI\tV\tdZ e\tn V k");
result.add("cry-\to-\tge-\tnics", "kh r aI\tV\tdZ e\tn V k s");
result.add("cry-\to-\tlite", "kh r aI\tV\tl aI t");
result.add("cryp-\ttic", "kh r I p\tt I k");
result.add("cryp-\tto", "kh r I p\tt @U");
result.add("cryp-\ttos-\tpo-\tri-\tdi-\tum", "kh r I p\tt @U s\tp O@\tI\td i:\tV m");
result.add("crypt", "kh r I p t");
result.add("crypts", "kh r I p t s");
result.add("crys-\ttal", "kh r I s\tt V l");
result.add("crys-\ttal-\tli-\tzing", "kh r I s\tt V\tl aI\tz I N");
result.add("crys-\ttal-\tline", "kh r I s\tt V\tl aI n");
result.add("crys-\ttal-\tlize", "kh r I s\tt V\tl aI z");
result.add("crys-\ttal-\tlized", "kh r I s\tt V\tl aI z d");
result.add("crys-\ttal-\tlo-\tgra-\tpher", "kh r I s\tt V\tl Q g\tr V\tf @r");
result.add("crys-\ttal-\tlo-\tgra-\tphy", "kh r I s\tt V\tl Q g\tr V\tf i:");
result.add("crys-\ttals", "kh r I s\tt V l z");
result.add("crys-\ttal's", "kh r I s\tt V l z");
result.add("c's", "s i: z");
result.add("cs-\tpan", "s i: s\tp { n");
result.add("csar", "z Q@");
result.add("ct", "kh O@ t");
result.add("cu-\tba", "kh j u:\tb V");
result.add("cu-\tban", "kh j u:\tb V n");
result.add("cu-\tbans", "kh j u:\tb V n z");
result.add("cu-\tba's", "kh j u:\tb V z");
result.add("cu-\tbi-\tcle", "kh j u:\tb I\tk V l");
result.add("cu-\tbi-\tcles", "kh j u:\tb I\tk V l z");
result.add("cu-\tbi-\tsm", "kh j u:\tb I\tz V m");
result.add("cu-\tbic", "kh j u:\tb I k");
result.add("cu-\tbist", "kh j u:\tb I s t");
result.add("cu-\tbit", "kh j u:\tb I t");
result.add("cu-\tcum-\tber", "kh j u:\tk V m\tb @r");
result.add("cu-\tcum-\tbers", "kh j u:\tk V\tm @r z");
result.add("cu-\tda-\thy", "kh V\td V\th i:");
result.add("cu-\tli-\tna-\try", "kh j u:\tl I\tn e@\ti:");
result.add("cu-\tmings", "kh u:\tm I N z");
result.add("cu-\tmu-\tla-\ttive", "kh j u: m\tj V\tl V\tt I v");
result.add("cu-\tmu-\tla-\ttive-\tly", "kh j u: m\tj V\tl V\tt I v\tl i:");
result.add("cu-\tnard", "kh j u:\tn @r d");
result.add("cu-\tne-\ti-\tform", "kh j u:\tn i:\tV\tf O@ m");
result.add("cu-\tne-\to", "kh j u:\tn i:\t@U");
result.add("cu-\tny", "kh j u:\tn i:");
result.add("cu-\tper-\tti-\tno", "kh u:\tp @r\tt i:\tn @U");
result.add("cu-\tpid", "kh j u:\tp I d");
result.add("cu-\tpids", "kh j u:\tp I d z");
result.add("cu-\tpo", "kh j u:\tp @U");
result.add("cu-\tra-\tble", "kh j U@\tV\tb V l");
result.add("cu-\tra-\tcao", "kh j U@\tV\ts aU");
result.add("cu-\tra-\ttive", "kh j U@\tV\tt I v");
result.add("cu-\tra-\tto-\tri-\tal", "kh j U@\tV\tt O@\ti:\tV l");
result.add("cu-\tra-\ttor", "kh j U@\teI\tt @r");
result.add("cu-\tra-\ttors", "kh j U@\tV\tt @r z");
result.add("cu-\tra-\ttor's", "kh j U@\teI\tt @r z");
result.add("cu-\trate", "kh j U@\tV t");
result.add("cu-\tri-\to-\tsi-\tties", "kh j U@\ti:\tQ\ts I\tt i: z");
result.add("cu-\tri-\to-\tsi-\tty", "kh j U@\ti:\tQ\ts I\tt i:");
result.add("cu-\tri-\tou-\tser", "kh j U@\ti:\tV\ts @r");
result.add("cu-\tri-\tous", "kh j U@\ti:\tV s");
result.add("cu-\tri-\tous-\tly", "kh j U@\ti:\tV s\tl i:");
result.add("cu-\tri-\tti-\tba", "kh j U\tI\tt i:\tb V");
result.add("cu-\trie", "kh j U@\ti:");
result.add("cu-\tring", "kh j U@\tI N");
result.add("cu-\tsack", "kh j u:\tz V k");
result.add("cu-\tshi-\ttic", "kh V\tS I\tt I k");
result.add("cu-\tshing", "kh U\tS I N");
result.add("cu-\tshio-\tning", "kh U\tS V\tn I N");
result.add("cu-\tshion", "kh U\tS V n");
result.add("cu-\tshioned", "kh U\tS V n d");
result.add("cu-\tshions", "kh U\tS V n z");
result.add("cu-\tshy", "kh U\tS i:");
result.add("cu-\tsick", "kh j u:\tz I k");
result.add("cu-\tso", "kh j u:\ts @U");
result.add("cu-\tta-\tway", "kh V\tt V\tw eI");
result.add("cu-\tter", "kh j u:\tt @r");
result.add("cu-\ttest", "kh j u:\tt I s t");
result.add("cu-\tti-\tcle", "kh j u:\tt I\tk V l");
result.add("cu-\tya-\tho-\tga", "kh aI\tV\th @U\tg V");
result.add("cub", "kh V b");
result.add("cub-\tbies", "kh V\tb i: z");
result.add("cub-\tby-\thole", "kh V\tb i:\th @U l");
result.add("cube", "kh j u: b");
result.add("cubed", "kh j u: b d");
result.add("cubes", "kh j u: b z");
result.add("cubs", "kh V b z");
result.add("cuc-\tkoo", "kh V\tk u:");
result.add("cuc-\tkoos", "kh u:\tk u: z");
result.add("cuc-\tkoo's", "kh u:\tk u: z");
result.add("cud-\tdle", "kh V\td V l");
result.add("cud-\tdled", "kh V\td V l d");
result.add("cud-\tdy", "kh V\td i:");
result.add("cud-\tgel", "kh V\tdZ V l");
result.add("cud-\tgels", "kh V\tdZ V l z");
result.add("cudd-\tling", "kh V d\tl I N");
result.add("cudd-\tly", "kh V d\tl i:");
result.add("cue", "kh j u:");
result.add("cue-\tro", "kh w e@\t@U");
result.add("cue-\tva", "kh w e\tv V");
result.add("cued", "kh j u: d");
result.add("cuen-\tca", "kh w e n\tk V");
result.add("cuer-\tvo", "kh U@\tv @U");
result.add("cues", "kh j u: z");
result.add("cues-\tta", "kh w e s\tt V");
result.add("cuff", "kh V f");
result.add("cuffed", "kh V f t");
result.add("cuffs", "kh V f s");
result.add("cui-\tsi-\tnart", "kh w i:\ts I\tn Q t");
result.add("cui-\tsi-\tnarts", "kh w i:\tz I\tn Q@ t s");
result.add("cui-\tsine", "kh w I\tz i: n");
result.add("cui-\tsines", "kh w I\tz i: n z");
result.add("cul", "kh V l");
result.add("cul-\tber-\tson", "kh V l\tb @r\ts V n");
result.add("cul-\tbert", "kh V l\tb @r t");
result.add("cul-\tbert-\tson", "kh V l\tb @r t\ts V n");
result.add("cul-\tde-\tsac", "kh V l\td V\ts { k");
result.add("cul-\tlan", "kh V\tl V n");
result.add("cul-\tlen", "kh V\tl V n");
result.add("cul-\tler", "kh V\tl @r");
result.add("cul-\tlers", "kh V\tl @r z");
result.add("cul-\tler's", "kh V\tl @r z");
result.add("cul-\tley", "kh V\tl i:");
result.add("cul-\tli-\tnan", "kh V\tl I\tn V n");
result.add("cul-\tlin", "kh V\tl I n");
result.add("cul-\tling", "kh V\tl I N");
result.add("cul-\tlom", "kh V\tl V m");
result.add("cul-\tly", "kh V\tl i:");
result.add("cul-\tmi-\tna-\tted", "kh V l\tm I\tn eI\tt I d");
result.add("cul-\tmi-\tna-\tting", "kh V l\tm I\tn eI\tt I N");
result.add("cul-\tmi-\tna-\ttion", "kh V l\tm I\tn eI\tS V n");
result.add("cul-\tmi-\tnate", "kh V l\tm I\tn eI t");
result.add("cul-\tmi-\tnates", "kh V l\tm I\tn eI t s");
result.add("cul-\tpa", "kh V l\tp V");
result.add("cul-\tpa-\tbi-\tli-\tty", "kh V l\tp V\tb I\tl V\tt i:");
result.add("cul-\tpa-\tble", "kh V l\tp V\tb V l");
result.add("cul-\tti-\tva-\tted", "kh V l\tt I\tv eI\tt I d");
result.add("cul-\tti-\tva-\tting", "kh V l\tt I\tv eI\tt I N");
result.add("cul-\tti-\tva-\ttion", "kh V l\tt I\tv eI\tS V n");
result.add("cul-\tti-\tvate", "kh V l\tt I\tv eI t");
result.add("cul-\tti-\tvates", "kh V l\tt I\tv eI t s");
result.add("cul-\ttic", "kh V l\tt I k");
result.add("cul-\ttist", "kh V l\tt I s t");
result.add("cul-\ttists", "kh V l\tt I s t s");
result.add("cul-\ttu-\tral", "kh V l\ttS @r\tV l");
result.add("cul-\ttu-\tral-\tly", "kh V l\ttS @r\tV\tl i:");
result.add("cul-\ttu-\tring", "kh V l\ttS @r\tI N");
result.add("cul-\tture", "kh V l\ttS @r");
result.add("cul-\ttured", "kh V l\ttS @r d");
result.add("cul-\ttures", "kh V l\ttS @r z");
result.add("cul-\tture's", "kh V l\ttS @r z");
result.add("cul-\tver", "kh V l\tv @r");
result.add("cul-\tver-\thouse", "kh V l\tv @r\th aU s");
result.add("cul-\tver's", "kh V l\tv @r z");
result.add("cul-\tvert", "kh V l\tv @r t");
result.add("cull", "kh V l");
result.add("cull-\tman", "kh V l\tm V n");
result.add("culled", "kh V l d");
result.add("culp", "kh V l p");
result.add("culp-\trit", "kh V l\tp r I t");
result.add("culp-\trits", "kh V l\tp r I t s");
result.add("cult", "kh V l t");
result.add("cults", "kh V l t s");
result.add("cult's", "kh V l t s");
result.add("cum", "kh V m");
result.add("cum-\tber", "kh V m\tb @r");
result.add("cum-\tber-\tland", "kh V m\tb @r\tl V n d");
result.add("cum-\tber-\tsome", "kh V m\tb @r\ts V m");
result.add("cum-\tby", "kh V m\tb i:");
result.add("cum-\tmin-\ts's", "kh V\tm I n\tz V z");
result.add("cum-\tming", "kh V\tm I N");
result.add("cum-\tming-\tton", "kh V\tm I N\tt V n");
result.add("cum-\tmings", "kh V\tm I N z");
result.add("cum-\tmins", "kh V\tm I n z");
result.add("cun-\tdiff", "kh V n\td I f");
result.add("cun-\tdy", "kh V n\td i:");
result.add("cun-\tha", "kh V n\th V");
result.add("cun-\tning", "kh V\tn I N");
result.add("cun-\tning-\tham", "kh V\tn I N\th { m");
result.add("cun-\tning-\tham's", "kh V\tn I N\th { m z");
result.add("cup", "kh V p");
result.add("cup-\tboard", "kh V\tb @r d");
result.add("cup-\tboards", "kh V\tb @r d z");
result.add("cup-\tcake", "kh V p\tk eI k");
result.add("cup-\tcakes", "kh V p\tk eI k s");
result.add("cup-\tpy", "kh V\tp i:");
result.add("cups", "kh V p s");
result.add("cur", "kh @r");
result.add("cur-\tbing", "kh @r\tb I N");
result.add("cur-\tby", "kh @r\tb i:");
result.add("cur-\tci-\to", "kh U@\ttS i:\t@U");
result.add("cur-\tfew", "kh @r f\tj u:");
result.add("cur-\tfews", "kh @r f\tj u: z");
result.add("cur-\tler", "kh @r\tl @r");
result.add("cur-\tlers", "kh @r\tl @r z");
result.add("cur-\tley", "kh @r\tl i:");
result.add("cur-\tling", "kh @r\tl I N");
result.add("cur-\tly", "kh @r\tl i:");
result.add("cur-\tmud-\tgeon", "kh @r\tm V\tdZ V n");
result.add("cur-\tragh", "kh V\tr V");
result.add("cur-\tran", "kh @r\tV n");
result.add("cur-\tren", "kh @r\tV n");
result.add("cur-\tren-\tcies", "kh @r\tV n\ts i: z");
result.add("cur-\tren-\tcy", "kh @r\tV n\ts i:");
result.add("cur-\tren-\tcy's", "kh @r\tV n\ts i: z");
result.add("cur-\trent", "kh @r\tV n t");
result.add("cur-\trent-\tly", "kh @r\tV n\tt l i:");
result.add("cur-\trents", "kh @r\tV n t s");
result.add("cur-\trent's", "kh @r\tV n t s");
result.add("cur-\trey", "kh @r\ti:");
result.add("cur-\tri-\tcu-\tla", "kh @r\tI k\tj V\tl V");
result.add("cur-\tri-\tcu-\tlar", "kh @r\tI k\tj V\tl @r");
result.add("cur-\tri-\tcu-\tlum", "kh @r\tI k\tj V\tl V m");
result.add("cur-\tri-\tcu-\tlums", "kh @r\tI k\tj V\tl V m z");
result.add("cur-\tri-\ter", "kh @r\ti:\t@r");
result.add("cur-\trie", "kh @r\ti:");
result.add("cur-\tried", "kh @r\ti: d");
result.add("cur-\tries", "kh @r\ti: z");
result.add("cur-\try", "kh V\tr i:");
result.add("cur-\try-\ting", "kh @r\ti:\tI N");
result.add("cur-\try's", "kh V\tr i: z");
result.add("cur-\tses", "kh @r\ts V z");
result.add("cur-\tsing", "kh @r\ts I N");
result.add("cur-\tso-\try", "kh @r\ts @r\ti:");
result.add("cur-\tsor", "kh @r\ts @r");
result.add("cur-\ttai-\tling", "kh @r\tt eI\tl I N");
result.add("cur-\ttail", "kh @r\tt eI l");
result.add("cur-\ttail-\tment", "kh @r\tt eI l\tm V n t");
result.add("cur-\ttail-\tments", "kh @r\tt eI l\tm V n t s");
result.add("cur-\ttailed", "kh @r\tt eI l d");
result.add("cur-\ttails", "kh @r\tt eI l z");
result.add("cur-\ttain", "kh @r\tt @ n");
result.add("cur-\ttains", "kh @r\tt @ n z");
result.add("cur-\ttice", "kh U@\tt I s");
result.add("cur-\ttin", "kh @r\tt I n");
result.add("cur-\ttis", "kh @r\tt I s");
result.add("cur-\ttiss", "kh @r\tt I s");
result.add("cur-\tva-\tture", "kh @r\tv V\ttS @r");
result.add("cur-\tving", "kh @r\tv I N");
result.add("cur-\tvy", "kh @r\tv i:");
result.add("curb", "kh @r b");
result.add("curb-\tside", "kh @r b\ts aI d");
result.add("curb-\tstone", "kh @r b\ts t @U n");
result.add("curbed", "kh @r b d");
result.add("curbs", "kh @r b z");
result.add("curd", "kh @r d");
result.add("cure", "kh j U@");
result.add("cured", "kh j U@ d");
result.add("cures", "kh j U@ z");
result.add("curl", "kh @r l");
result.add("curled", "kh @r l d");
result.add("curls", "kh @r l z");
result.add("curse", "kh @r s");
result.add("cursed", "kh @r s t");
result.add("curt", "kh @r t");
result.add("curt-\tly", "kh @r t\tl i:");
result.add("curt's", "kh @r t s");
result.add("curve", "kh @r v");
result.add("curved", "kh @r v d");
result.add("curves", "kh @r v z");
result.add("cus-\tsing", "kh V\ts I N");
result.add("cus-\ttard", "kh V s\tt @r d");
result.add("cus-\tter", "kh V s\tt @r");
result.add("cus-\tter's", "kh V s\tt @r z");
result.add("cus-\tto-\tdi-\tal", "kh V s\tt @U\td i:\tV l");
result.add("cus-\tto-\tdi-\tan", "kh V s\tt @U\td i:\tV n");
result.add("cus-\tto-\tdi-\tans", "kh V s\tt @U\td i:\tV n z");
result.add("cus-\tto-\tdy", "kh V s\tt V\td i:");
result.add("cus-\tto-\tma-\tri-\tly", "kh V s\tt V\tm e@\tV\tl i:");
result.add("cus-\tto-\tma-\try", "kh V s\tt V\tm e@\ti:");
result.add("cus-\tto-\tmer", "kh V s\tt V\tm @r");
result.add("cus-\tto-\tmers", "kh V s\tt V\tm @r z");
result.add("cus-\tto-\tmer's", "kh V s\tt V\tm @r z");
result.add("cus-\tto-\tmi-\tzing", "kh V s\tt V\tm aI\tz I N");
result.add("cus-\tto-\tmize", "kh V s\tt V\tm aI z");
result.add("cus-\tto-\tmized", "kh V s\tt V\tm aI z d");
result.add("cus-\ttom", "kh V s\tt V m");
result.add("cus-\ttoms", "kh V s\tt V m z");
result.add("cush", "kh V S");
result.add("cush-\tman", "kh U S\tm V n");
result.add("cusk", "kh V s k");
result.add("cusp", "kh V s p");
result.add("cuss", "kh V s");
result.add("cussed", "kh V s t");
result.add("cut", "kh V t");
result.add("cut-\tback", "kh V t\tb { k");
result.add("cut-\tbacks", "kh V t\tb { k s");
result.add("cut-\tcher", "kh V\ttS @r");
result.add("cut-\tlass", "kh V t\tl V s");
result.add("cut-\tle-\try", "kh V t\tl @r\ti:");
result.add("cut-\tler", "kh V t\tl @r");
result.add("cut-\tler's", "kh V t\tl @r z");
result.add("cut-\tlip", "kh V t\tl I p");
result.add("cut-\toff", "kh V\tt O: f");
result.add("cut-\toffs", "kh V\tt O: f s");
result.add("cut-\tout", "kh V\tt aU t");
result.add("cut-\touts", "kh V\tt aU t s");
result.add("cut-\tter", "kh V\tt @r");
result.add("cut-\tters", "kh V\tt @r z");
result.add("cut-\tting", "kh V\tt I N");
result.add("cut-\ttings", "kh V\tt I N z");
result.add("cut-\ttle-\tfish", "kh V\tt V l\tf I S");
result.add("cut-\tty", "kh V\tt i:");
result.add("cut-\tworm", "kh V t\tw @r m");
result.add("cut-\tworms", "kh V t\tw @r m z");
result.add("cute", "kh j u: t");
result.add("cute-\tness", "kh j u: t\tn V s");
result.add("cute-\tsi-\tness", "kh j u: t\ts i:\tn V s");
result.add("cute-\tsy", "kh j u: t\ts i:");
result.add("cuth-\tbert", "kh V T\tb @r t");
result.add("cuth-\tbert-\tson", "kh V T\tb @r t\ts V n");
result.add("cuts", "kh V t s");
result.add("cutth-\troat", "kh V t\tT r @U t");
result.add("cuy-\tler", "kh aI\tl @r");
result.add("cy", "s aI");
result.add("cy-\ta-\tnu-\tric", "s aI\t{\tn @r\tI k");
result.add("cy-\tber", "s aI\tb @r");
result.add("cy-\tber-\tsex", "s aI\tb @r\ts e k s");
result.add("cy-\tber-\tspace", "s aI\tb @r s\tp eI s");
result.add("cy-\tbill", "s aI\tb I l");
result.add("cy-\tc-\tling", "s aI\tk V\tl I N");
result.add("cy-\tc-\tlist", "s aI\tk V\tl I s t");
result.add("cy-\tc-\tlists", "s aI\tk V\tl I s t s");
result.add("cy-\tcads", "s aI\tk { d z");
result.add("cy-\tcle", "s aI\tk V l");
result.add("cy-\tcled", "s aI\tk V l d");
result.add("cy-\tcles", "s aI\tk V l z");
result.add("cy-\tdo-\tni-\ta", "s V\td @U\tn i:\tV");
result.add("cy-\tlin-\tder", "s I\tl I n\td @r");
result.add("cy-\tlin-\tders", "s I\tl I n\td @r z");
result.add("cy-\tlind-\tri-\tcal", "s V\tl I n\td r I\tk V l");
result.add("cy-\tna-\tra", "kh I\tn Q@\tV");
result.add("cy-\tni-\tcal", "s I\tn I\tk V l");
result.add("cy-\tni-\tcal-\tly", "s I\tn I\tk V\tl i:");
result.add("cy-\tni-\tci-\tsm", "s I\tn I\ts I\tz V m");
result.add("cy-\tnic", "s I\tn I k");
result.add("cy-\tnics", "s I\tn I k s");
result.add("cy-\tpher", "s aI\tf @r");
result.add("cy-\tphers", "s aI\tf @r z");
result.add("cy-\tra-\tno", "kh i:\tr Q\tn @U");
result.add("cy-\tre-\tna", "kh I@\ti:\tn V");
result.add("cy-\tril", "s I@\tI l");
result.add("cy-\tril-\tla", "s I@\tI\tl V");
result.add("cy-\tril-\tlic", "s @r\tI\tl I k");
result.add("cy-\trus", "s aI\tr V s");
result.add("cy-\tthe-\tre-\ta", "s I\tT @r\ti:\tV");
result.add("cy-\tto-\tlo-\tgy", "s aI\tt Q\tl V\tdZ i:");
result.add("cy-\tto-\tme-\tga-\tlo-\tvi-\trus", "s aI\tt V\tm e\tg V\tl @U\tv aI\tr V s");
result.add("cy-\ttop-\tla-\tsm", "s aI\tt V p\tl {\tz V m");
result.add("cy-\ttop-\tlas-\tmic", "s aI\tt V p\tl { z\tm I k");
result.add("cyb", "s aI b");
result.add("cyc-\tla-\tdes", "s aI k\tl eI\td i: z");
result.add("cyc-\tli-\tca-\tli-\tty", "s I k\tl I\tk {\tl I\tt i:");
result.add("cyc-\tli-\tcal", "s aI k\tl I\tk V l");
result.add("cyc-\tli-\tcals", "s I k\tl I\tk V l z");
result.add("cyc-\tlo-\the-\txane", "s aI k\tl V\th e k\ts eI n");
result.add("cyc-\tlo-\tpe-\tan", "s aI k\tl V\tp i:\tV n");
result.add("cyc-\tlone", "s I k\tl @U n");
result.add("cyc-\tlones", "s I k\tl @U n z");
result.add("cyc-\tlop-\ts's", "s aI k\tl O: p\ts V z");
result.add("cyc-\tlops", "s aI k\tl O: p s");
result.add("cyc-\tlos-\tpo-\trine", "s I k\tl O: s\tp @r\ti: n");
result.add("cyc-\tlos-\ttome", "s aI k\tl V s\tt @U m");
result.add("cyc-\tlos-\ttomes", "s aI k\tl V s\tt @U m z");
result.add("cyd", "s I d");
result.add("cyg-\tnus", "s I g\tn V s");
result.add("cym-\tbal", "s I m\tb V l");
result.add("cym-\tbals", "s I m\tb V l z");
result.add("cyn-\tdi", "s I n\td i:");
result.add("cyn-\tthi-\ta", "s I n\tT i:\tV");
result.add("cyn-\tthi-\ta's", "s I n\tT i:\tV z");
result.add("cyn-\tthie", "s I n\tT i:");
result.add("cyn-\twyd", "s I n\tw V d");
result.add("cynth", "s I n T");
result.add("cyp-\tres-\ts's", "s aI p\tr V\ts V z");
result.add("cyp-\tress", "s aI p\tr V s");
result.add("cyp-\tri-\tan", "s I p\tr i:\tV n");
result.add("cyp-\tri-\tot", "s I p\tr i:\tV t");
result.add("cyp-\tri-\tots", "s I p\tr i:\tV t s");
result.add("cyp-\tris", "s aI p\tr I s");
result.add("cyp-\trus", "s aI p\tr V s");
result.add("cyr", "s I@");
result.add("cys-\ttic", "s I s\tt I k");
result.add("cyst", "s I s t");
result.add("cysts", "s I s t s");
result.add("cza-\trist", "z Q@\tI s t");
result.add("czar", "z Q@");
result.add("czars", "z Q@ z");
result.add("czar's", "z Q@ z");
result.add("cze-\tchos-\tlo-\tva-\tki-\ta", "tS e\tk V s\tl @U\tv Q\tk i:\tV");
result.add("cze-\tchos-\tlo-\tva-\tki-\tan", "tS e\ttS V s\tl @U\tv Q\tk i:\tV n");
result.add("cze-\tchos-\tlo-\tva-\tki-\ta's", "tS e\tk V s\tl @U\tv Q\tk i:\tV z");
result.add("cze-\tchos-\tlo-\tvak", "tS e\tk V s\tl @U\tv Q k");
result.add("cze-\tchos-\tlo-\tvaks", "tS e\tk V s\tl @U\tv Q k s");
result.add("czech", "tS e k");
result.add("czechs", "tS e k s");
result.add("czer-\tni-\tak", "tS @r\tn i:\t{ k");
result.add("czer-\tny", "tS @r\tn i:");
result.add("d", "dh i:");
result.add("d'-\ta-\tmo-\tre", "dh i:\tV\tm O@\teI");
result.add("d-\ta's", "dh i:\teI z");
result.add("d-\tk", "dh i:\tk eI");
result.add("d-\tmi-\ttri", "dh V\tm i: t\tr i:");
result.add("d-\tnase", "dh i:\tn eI s");
result.add("d-\tnies-\tter", "dh V\tn i: s\tt @r");
result.add("d-\ts-\ts", "dh i:\te\ts e s");
result.add("d-\ts-\tv", "dh i:\te s\tv i:");
result.add("d-\tu-\ti", "dh i:\tj u:\taI");
result.add("d.", "dh i:");
result.add("da", "dh Q");
result.add("da-\tcey", "dh eI\ts i:");
result.add("da-\tcha", "dh Q\ttS V");
result.add("da-\tchau", "dh {\tk aU");
result.add("da-\tci-\ta", "dh eI\tS i:\tV");
result.add("da-\tcus", "dh {\tk V s");
result.add("da-\tcy", "dh eI\ts i:");
result.add("da-\tda", "dh Q\td Q");
result.add("da-\tdo", "dh eI\td @U");
result.add("da-\tgan", "dh eI\tg V n");
result.add("da-\tgen-\tham", "dh {\tg V n\th { m");
result.add("da-\tges-\ttan", "dh {\tg e s\tt { n");
result.add("da-\tkar", "dh Q\tk Q@");
result.add("da-\tko-\tta", "dh V\tk @U\tt V");
result.add("da-\tko-\ttan", "dh V\tk @U\tt V n");
result.add("da-\tko-\ttans", "dh V\tk @U\tt V n z");
result.add("da-\tko-\ttas", "dh V\tk @U\tt V z");
result.add("da-\tko-\tta's", "dh V\tk @U\tt V z");
result.add("da-\tlai", "dh {\tl eI");
result.add("da-\tlen", "dh {\tl V n");
result.add("d'a-\tlene", "dh V\tl i: n");
result.add("da-\tleth", "dh Q\tl e T");
result.add("da-\tley", "dh eI\tl i:");
result.add("da-\tley's", "dh eI\tl i: z");
result.add("da-\tli", "dh Q\tl i:");
result.add("da-\tli-\tan", "dh eI\tl i:\tV n");
result.add("da-\tli-\tla", "dh V\tl aI\tl V");
result.add("da-\tlia", "dh Q l\tj V");
result.add("da-\tlis", "dh {\tl I s");
result.add("da-\tlo", "dh Q\tl @U");
result.add("da-\tly", "dh eI\tl i:");
result.add("da-\tma", "dh Q\tm V");
result.add("da-\tma-\tges", "dh {\tm V\tdZ V z");
result.add("da-\tma-\tging", "dh {\tm I\tdZ I N");
result.add("da-\tma-\tris", "dh V\tm Q@\tV s");
result.add("da-\tmage", "dh {\tm V dZ");
result.add("da-\tmaged", "dh {\tm V dZ d");
result.add("da-\tman", "dh eI\tm V n");
result.add("da-\tmas", "dh Q\tm V z");
result.add("da-\tmas-\tcu-\ts's", "dh V\tm { s\tk V\ts V z");
result.add("da-\tmas-\tcus", "dh V\tm { s\tk V s");
result.add("da-\tmask", "dh {\tm V s k");
result.add("da-\tmasks", "dh {\tm V s k s");
result.add("da-\tme-\tron", "dh Q\tm e@\tO: n");
result.add("da-\tmi-\ta-\tni", "dh Q\tm i:\tQ\tn i:");
result.add("da-\tmi-\ta-\tno", "dh Q\tm i:\tQ\tn @U");
result.add("da-\tmi-\tan", "dh eI\tm i:\tV n");
result.add("da-\tmi-\ten", "dh eI\tm i:\tV n");
result.add("da-\tmi-\ten's", "dh eI\tm i:\tV n z");
result.add("da-\tmi-\tet-\tta", "dh {\tm i:\te\tt V");
result.add("da-\tmi-\tno-\tzide", "dh {\tm I\tn V\tz aI d");
result.add("da-\tmi-\tta", "dh Q\tm i:\tt V");
result.add("da-\tmoc-\tles", "dh {\tm V k\tl i: z");
result.add("da-\tmon", "dh eI\tm V n");
result.add("da-\tmon's", "dh eI\tm V n z");
result.add("da-\tmour", "dh V\tm U@");
result.add("da-\tna", "dh eI\tn V");
result.add("da-\tna-\ther", "dh {\tn V\th @r");
result.add("da-\tna's", "dh eI\tn V z");
result.add("da-\tne-\tse", "dh Q\tn eI\tz i:");
result.add("da-\tnel-\tla", "dh V\tn e\tl V");
result.add("da-\tnelle", "dh V\tn e l");
result.add("da-\tney", "dh eI\tn i:");
result.add("da-\tni", "dh Q\tn i:");
result.add("da-\tni-\tca", "dh {\tn I\tk V");
result.add("da-\tni-\telle", "dh {\tn i:\te l");
result.add("da-\tnia", "dh eI n\tj V");
result.add("da-\tnie-\tla", "dh { n\tj e\tl V");
result.add("da-\tniel", "dh { n\tj V l");
result.add("da-\tniel-\tla", "dh { n\tj e\tl V");
result.add("da-\tniel-\tson", "dh { n\tj V l\ts V n");
result.add("da-\tniele", "dh { n\tj e l");
result.add("da-\tniell", "dh {\tn i: l");
result.add("da-\tniels", "dh { n\tj V l z");
result.add("da-\tniel's", "dh { n\tj V l z");
result.add("da-\tnish", "dh eI\tn I S");
result.add("da-\tnube", "dh { n\tj u: b");
result.add("da-\tra", "dh {\tr V");
result.add("da-\tren", "dh {\tr V n");
result.add("da-\tri-\ta", "dh Q@\ti:\tV");
result.add("da-\tri-\ten", "dh e@\ti:\tV n");
result.add("da-\tri-\to", "dh e@\ti:\t@U");
result.add("da-\tri-\tus", "dh @r\taI\tV s");
result.add("da-\trice", "dh Q@\tI s");
result.add("da-\trin", "dh {\tr I n");
result.add("da-\tring", "dh e@\tI N");
result.add("da-\tryl", "dh e@\tV l");
result.add("da-\tshel", "dh {\tS V l");
result.add("da-\tsher", "dh {\tS @r");
result.add("da-\tshes", "dh {\tS V z");
result.add("da-\tshi-\tki", "dh V\tS i:\tk i:");
result.add("da-\tshing", "dh {\tS I N");
result.add("da-\tta", "dh eI\tt V");
result.add("da-\tta-\tba-\tses", "dh eI\tt V\tb eI\ts V z");
result.add("da-\tta-\tbase", "dh eI\tt V\tb eI s");
result.add("da-\tta-\tpoint", "dh eI\tt V\tp OI n t");
result.add("da-\tta's", "dh eI\tt V z");
result.add("da-\tted", "dh eI\tt V d");
result.add("da-\tting", "dh eI\tt I N");
result.add("da-\tto", "dh Q\tt @U");
result.add("da-\ttu-\tra", "dh V\tt U@\tV");
result.add("da-\ttuk", "dh Q\tt u: k");
result.add("da-\ttum", "dh {\tt V m");
result.add("da-\tvao", "dh V\tv @U");
result.add("da-\tven-\tport", "dh {\tv V n\tp O@ t");
result.add("da-\tven-\tport's", "dh {\tv V n\tp O@ t s");
result.add("da-\tvey", "dh eI\tv i:");
result.add("da-\tvi-\tda", "dh Q\tv i:\td V");
result.add("da-\tvi-\tde", "dh V\tv i:\td eI");
result.add("da-\tvi-\tdi-\tan", "dh V\tv I\td i:\tV n");
result.add("da-\tvi-\tdi-\tan's", "dh V\tv I\td i:\tV n z");
result.add("da-\tvi-\tdoff", "dh eI\tv I\td O: f");
result.add("da-\tvi-\tna", "dh Q\tv i:\tn V");
result.add("da-\tvi-\tson", "dh eI\tv I\ts V n");
result.add("da-\tvi-\ts's", "dh eI\tv I\ts V z");
result.add("da-\tvid", "dh eI\tv I d");
result.add("da-\tvid-\tson", "dh eI\tv I d\ts V n");
result.add("da-\tvid-\tson's", "dh eI\tv I d\ts V n z");
result.add("da-\tvids", "dh eI\tv I d z");
result.add("da-\tvid's", "dh eI\tv I d z");
result.add("da-\tvie", "dh eI\tv i:");
result.add("da-\tvies", "dh eI\tv i: z");
result.add("da-\tvil-\tla", "dh V\tv I\tl V");
result.add("da-\tvin", "dh {\tv I n");
result.add("da-\tvis", "dh eI\tv I s");
result.add("da-\tvis'", "dh eI\tv I s");
result.add("da-\tvis-\tson", "dh {\tv I\ts V n");
result.add("da-\tvos", "dh Q\tv @U s");
result.add("da-\tvy", "dh eI\tv i:");
result.add("da-\tx's", "dh { k\ts V z");
result.add("da-\tyan", "dh eI\tV n");
result.add("dab", "dh { b");
result.add("dab-\tb-\tling", "dh {\tb V\tl I N");
result.add("dab-\tbing", "dh {\tb I N");
result.add("dab-\tble", "dh {\tb V l");
result.add("dab-\tbled", "dh {\tb V l d");
result.add("dab-\tbles", "dh {\tb V l z");
result.add("dab-\tchick", "dh { b\ttS I k");
result.add("dab-\tney", "dh { b\tn i:");
result.add("dabbs", "dh { b z");
result.add("dac", "dh { k");
result.add("dac-\tron", "dh { k\tr Q n");
result.add("dace", "dh eI s");
result.add("dach-\tshund", "dh Q k\ts h U n d");
result.add("dach-\tshunds", "dh Q k\ts h U n t s");
result.add("dacs", "dh { k s");
result.add("dad", "dh { d");
result.add("dad-\tdies", "dh {\td i: z");
result.add("dad-\tdy", "dh {\td i:");
result.add("dad-\tdy's", "dh {\td i: z");
result.add("dade", "dh eI d");
result.add("dads", "dh { d z");
result.add("dad's", "dh { d z");
result.add("dae", "dh eI");
result.add("dae-\tda-\tlus", "dh e\td V\tl V s");
result.add("dae-\tmon", "dh i:\tm V n");
result.add("d'af-\tfaires", "dh V\tf e@ z");
result.add("daf-\tfo-\tdil", "dh {\tf V\td I l");
result.add("daf-\tfo-\tdils", "dh {\tf V\td I l z");
result.add("daf-\tfy", "dh {\tf i:");
result.add("daf-\tna", "dh { f\tn V");
result.add("daft", "dh { f t");
result.add("dag", "dh { g");
result.add("dag-\tger", "dh {\tg @r");
result.add("dag-\tgers", "dh {\tg @r z");
result.add("dag-\tgett", "dh {\tg V t");
result.add("dag-\tgy", "dh {\tg i:");
result.add("dag-\tley", "dh { g\tl i:");
result.add("dag-\tmar", "dh { g\tm Q@");
result.add("dai-\tley", "dh eI\tl i:");
result.add("dai-\tlies", "dh eI\tl i: z");
result.add("dai-\tly", "dh eI\tl i:");
result.add("dai-\tmones", "dh eI\tm @U n z");
result.add("dai-\tries", "dh e@\ti: z");
result.add("dai-\try", "dh e@\ti:");
result.add("dai-\try-\ting", "dh e@\ti:\tI N");
result.add("dai-\try-\tmen", "dh eI\tr i:\tm V n");
result.add("dai-\tsey", "dh eI\ts i:");
result.add("dai-\tsies", "dh eI\tz i: z");
result.add("dai-\tsy", "dh eI\tz i:");
result.add("dai-\tsy's", "dh eI\tz i: z");
result.add("dail", "dh eI l");
result.add("daile", "dh eI l");
result.add("daim-\tler", "dh eI m\tl @r");
result.add("daim-\tler's", "dh eI m\tl @r z");
result.add("dain", "dh eI n");
result.add("dain-\tty", "dh eI n\tt i:");
result.add("daines", "dh eI n z");
result.add("dais", "dh eI z");
result.add("dak", "dh { k");
result.add("dal", "dh { l");
result.add("dal-\tla-\ts's", "dh {\tl V\ts V z");
result.add("dal-\tlas", "dh {\tl V s");
result.add("dal-\tli-\tance", "dh {\tl i:\tV n s");
result.add("dal-\tlied", "dh {\tl i: d");
result.add("dal-\tly", "dh {\tl i:");
result.add("dal-\tma-\ttian", "dh { l\tm eI\tS V n");
result.add("dal-\tma-\ttians", "dh { l\tm eI\tS V n z");
result.add("dal-\trym-\tple", "dh { l\tr I m\tp V l");
result.add("dal-\tton", "dh O: l\tt V n");
result.add("dal-\ttons", "dh O: l\tt V n z");
result.add("dal-\tton's", "dh O: l\tt V n z");
result.add("dal-\tzell", "dh { l\tz V l");
result.add("dale", "dh eI l");
result.add("dales", "dh eI l z");
result.add("dale's", "dh eI l z");
result.add("dall", "dh O: l");
result.add("dall-\tman", "dh O: l\tm V n");
result.add("dalpe", "dh eI l p");
result.add("dam", "dh { m");
result.add("dam-\tmer", "dh {\tm @r");
result.add("dam-\tming", "dh {\tm I N");
result.add("dam-\tmit", "dh {\tm I t");
result.add("dam-\tna-\ttion", "dh { m\tn eI\tS V n");
result.add("dam-\tning", "dh {\tm I N");
result.add("dam-\tpe-\tning", "dh { m\tp V\tn I N");
result.add("dam-\tpen", "dh { m\tp V n");
result.add("dam-\tpened", "dh { m\tp V n d");
result.add("dam-\tper", "dh { m\tp @r");
result.add("dam-\tpers", "dh { m\tp @r z");
result.add("dam-\tpi-\ter", "dh { m\tp i:\t@r");
result.add("dam-\tping", "dh { m\tp I N");
result.add("dam-\tsel", "dh { m\tz V l");
result.add("dam-\tson", "dh { m\ts V n");
result.add("dame", "dh eI m");
result.add("dames", "dh eI m z");
result.add("dame's", "dh eI m z");
result.add("damme", "dh { m");
result.add("dammed", "dh { m d");
result.add("damn", "dh { m");
result.add("damned", "dh { m d");
result.add("damp", "dh { m p");
result.add("damp-\tness", "dh { m\tp n V s");
result.add("damped", "dh { m p t");
result.add("damps", "dh { m p s");
result.add("dams", "dh { m z");
result.add("dam's", "dh { m z");
result.add("dan", "dh { n");
result.add("dan-\tbu-\try", "dh { n\tb @r\ti:");
result.add("dan-\tby", "dh { n\tb i:");
result.add("dan-\tcer", "dh { n\ts @r");
result.add("dan-\tcers", "dh { n\ts @r z");
result.add("dan-\tcer's", "dh { n\ts @r z");
result.add("dan-\tces", "dh { n\ts V z");
result.add("dan-\tcey", "dh { n\ts i:");
result.add("dan-\tcing", "dh { n\ts I N");
result.add("dan-\tcy", "dh { n\ts i:");
result.add("dan-\tde-\tli-\ton", "dh { n\td V\tl aI\tV n");
result.add("dan-\tde-\tli-\tons", "dh { n\td V\tl aI\tV n z");
result.add("dan-\tdy", "dh { n\td i:");
result.add("dan-\tdy-\ti-\tsm", "dh { n\td i:\tI\tz V m");
result.add("dan-\tford", "dh { n\tf @r d");
result.add("dan-\tforth", "dh { n\tf @r T");
result.add("dan-\tg-\tler", "dh { N\tg V\tl @r");
result.add("dan-\tg-\tling", "dh { N\tg V\tl I N");
result.add("dan-\tge-\trous", "dh eI n\tdZ @r\tV s");
result.add("dan-\tge-\trous-\tly", "dh eI n\tdZ @r\tV s\tl i:");
result.add("dan-\tger", "dh eI n\tdZ @r");
result.add("dan-\tger-\tfield", "dh eI n\tdZ @r\tf i: l d");
result.add("dan-\tgers", "dh eI n\tdZ @r z");
result.add("dan-\tgle", "dh { N\tg V l");
result.add("dan-\tgled", "dh { N\tg V l d");
result.add("dan-\tgles", "dh { N\tg V l z");
result.add("dan-\tker", "dh { N\tk @r");
result.add("dan-\tna", "dh {\tn V");
result.add("dan-\tner", "dh {\tn @r");
result.add("dan-\tnie", "dh {\tn i:");
result.add("dan-\tny", "dh {\tn i:");
result.add("dan-\tny's", "dh {\tn i: z");
result.add("dan-\tte", "dh Q n\tt eI");
result.add("dan-\tte's", "dh { n\tt i: z");
result.add("dan-\tton", "dh { n\tt V n");
result.add("dan-\tvers", "dh { n\tv @r z");
result.add("dan-\tville", "dh { n\tv I l");
result.add("dan-\tzi-\tger", "dh { n\tz I\tg @r");
result.add("dan-\tzig", "dh { n\tz I g");
result.add("dance", "dh { n s");
result.add("danced", "dh { n s t");
result.add("dand-\truff", "dh { n\td r V f");
result.add("dane", "dh eI n");
result.add("danes", "dh eI n z");
result.add("dane's", "dh eI n z");
result.add("dang", "dh { N");
result.add("dank", "dh { N k");
result.add("danks", "dh { N k s");
result.add("dann", "dh { n");
result.add("dan's", "dh { n z");
result.add("dans-\tville", "dh { n\tz v I l");
result.add("dans-\tville's", "dh { n\tz v I l z");
result.add("dant", "dh { n t");
result.add("dao", "dh aU");
result.add("dap-\tper", "dh {\tp @r");
result.add("daph-\tne", "dh { f\tn i:");
result.add("daph-\tne's", "dh { f\tn i: z");
result.add("daph-\tnis", "dh { f\tn I s");
result.add("dar", "dh Q@");
result.add("dar-\tby", "dh Q@\tb i:");
result.add("dar-\tby's", "dh Q@\tb i: z");
result.add("dar-\tcey", "dh Q@\ts i:");
result.add("dar-\tcie", "dh Q@\tk i:");
result.add("dar-\tcy", "dh Q@\ts i:");
result.add("d'ar-\tcy", "dh Q@\ts i:");
result.add("dar-\tden", "dh Q@\td V n");
result.add("dar-\tden's", "dh Q@\td V n z");
result.add("dar-\tga", "dh Q@\tg V");
result.add("dar-\tjee-\tling", "dh Q@\tdZ i:\tl I N");
result.add("dar-\tke-\tning", "dh Q@\tk V\tn I N");
result.add("dar-\tken", "dh Q@\tk V n");
result.add("dar-\tkened", "dh Q@\tk V n d");
result.add("dar-\tker", "dh Q@\tk @r");
result.add("dar-\tkest", "dh Q@\tk V s t");
result.add("dar-\tkie", "dh Q@\tk i:");
result.add("dar-\tlene", "dh Q@\tl i: n");
result.add("dar-\tline", "dh Q@\tl aI n");
result.add("dar-\tling", "dh Q@\tl I N");
result.add("dar-\tling-\tton", "dh Q@\tl I N\tt V n");
result.add("dar-\tlings", "dh Q@\tl I N z");
result.add("dar-\tnall", "dh Q@\tn V l");
result.add("dar-\tnel", "dh Q@\tn V l");
result.add("dar-\tnell", "dh Q@\tn e l");
result.add("dar-\tner", "dh Q@\tn @r");
result.add("dar-\tpa", "dh Q@\tp V");
result.add("dar-\tragh", "dh e@\tV");
result.add("dar-\trell", "dh e@\tV l");
result.add("dar-\trelle", "dh @r\te l");
result.add("dar-\tren", "dh Q@\tV n");
result.add("dar-\trick", "dh {\tr I k");
result.add("dar-\tring-\tton", "dh {\tr I N\tt V n");
result.add("dar-\trow", "dh e@\t@U");
result.add("dar-\tryl", "dh e@\tV l");
result.add("dar-\tsey", "dh Q@\ts i:");
result.add("dar-\tted", "dh Q@\tt V d");
result.add("dar-\tter", "dh Q@\tt @r");
result.add("dar-\tting", "dh Q@\tt I N");
result.add("dar-\tton", "dh Q@\tt V n");
result.add("dar-\twi-\tni-\tan", "dh Q@\tw I\tn i:\tV n");
result.add("dar-\twi-\tni-\tsm", "dh Q@\tw I\tn I\tz V m");
result.add("dar-\twin", "dh Q@\tw I n");
result.add("dare", "dh e@");
result.add("dare-\tde-\tvil", "dh e@\td e\tv V l");
result.add("dare-\tsay", "dh e@\ts eI");
result.add("dared", "dh e@ d");
result.add("dares", "dh e@ z");
result.add("dark", "dh Q@ k");
result.add("dark-\tly", "dh Q@ k\tl i:");
result.add("dark-\tness", "dh Q@ k\tn V s");
result.add("dark-\troom", "dh Q@ k\tr u: m");
result.add("darm-\tstadt", "dh Q@ m\ts t { t");
result.add("darn", "dh Q@ n");
result.add("darne-\tdest", "dh Q@ n\td e s t");
result.add("darned", "dh Q@ n d");
result.add("darns", "dh Q@ n z");
result.add("darr", "dh e@");
result.add("darst", "dh Q@ s t");
result.add("dart", "dh Q@ t");
result.add("dart-\tboard", "dh Q@ t\tb O@ d");
result.add("dart-\tmouth", "dh Q@ t\tm V T");
result.add("dart-\tmouth's", "dh Q@ t\tm V T s");
result.add("darth", "dh Q@ T");
result.add("darts", "dh Q@ t s");
result.add("dart's", "dh Q@ t s");
result.add("das", "dh { s");
result.add("das-\ttard-\tly", "dh { s\tt @r d\tl i:");
result.add("dase", "dh eI z");
result.add("dash", "dh { S");
result.add("dash-\tboard", "dh { S\tb O@ d");
result.add("dash-\tboards", "dh { S\tb O@ d z");
result.add("dashed", "dh { S t");
result.add("dat", "dh { t");
result.add("dat-\tsun", "dh { t\ts V n");
result.add("dat-\tsun's", "dh { t\ts V n z");
result.add("date", "dh eI t");
result.add("date-\tline", "dh eI t\tl aI n");
result.add("date-\tlines", "dh eI t\tl aI n z");
result.add("date-\tline's", "dh eI t\tl aI n z");
result.add("dates", "dh eI t s");
result.add("dau", "dh @U");
result.add("dau-\tber", "dh aU\tb @r");
result.add("dau-\tgher-\tty", "dh Q\tk @r\tt i:");
result.add("dau-\tphin", "dh aU\tf I n");
result.add("daub", "dh O: b");
result.add("daube", "dh O: b");
result.add("daubed", "dh O: b d");
result.add("daugh-\tter", "dh O:\tt @r");
result.add("daugh-\tters", "dh O:\tt @r z");
result.add("daugh-\tter's", "dh O:\tt @r z");
result.add("daught-\try", "dh O: t\tr i:");
result.add("dault", "dh O: l t");
result.add("daun", "dh O: n");
result.add("daun-\tted", "dh O: n\tt V d");
result.add("daun-\tting", "dh O: n\tt I N");
result.add("daunt", "dh O: n t");
result.add("dave", "dh eI v");
result.add("dave's", "dh eI v z");
result.add("daw", "dh O:");
result.add("daw-\tdle", "dh O:\td V l");
result.add("daw-\tdy", "dh O:\td i:");
result.add("daw-\tkins", "dh O:\tk I n z");
result.add("daw-\tning", "dh O:\tn I N");
result.add("daw-\tson", "dh O:\ts V n");
result.add("daw-\tson's", "dh O:\ts V n z");
result.add("dawd-\tling", "dh O: d\tl I N");
result.add("dawe", "dh O:");
result.add("dawes", "dh O: z");
result.add("dawn", "dh O: n");
result.add("dawned", "dh O: n d");
result.add("dawns", "dh O: n z");
result.add("dawn's", "dh O: n z");
result.add("daws", "dh O: z");
result.add("dax", "dh { k s");
result.add("day", "dh eI");
result.add("day-\tbreak", "dh eI b\tr eI k");
result.add("day-\tcare", "dh eI\tk e@");
result.add("day-\tdrea-\tming", "dh eI d\tr i:\tm I N");
result.add("day-\tdream", "dh eI d\tr i: m");
result.add("day-\tdreamed", "dh eI d\tr i: m d");
result.add("day-\tlight", "dh eI\tl aI t");
result.add("day-\tlights", "dh eI\tl aI t s");
result.add("day-\tlong", "dh eI\tl O: N");
result.add("daye", "dh eI");
result.add("dayle", "dh eI l");
result.add("days", "dh eI z");
result.add("day's", "dh eI z");
result.add("days'", "dh eI z");
result.add("de", "dh i:");
result.add("de-\ta-\tna", "dh i:\t{\tn V");
result.add("de-\tac-\tti-\tva-\tted", "dh i:\t{ k\tt I\tv eI\tt V d");
result.add("de-\tac-\tti-\tvate", "dh i:\t{ k\tt I\tv eI t");
result.add("de-\tan-\tna", "dh i:\t{\tn V");
result.add("de-\tba-\tcle", "dh V\tb Q\tk V l");
result.add("de-\tba-\tcles", "dh eI\tb Q\tk V l z");
result.add("de-\tba-\tsing", "dh V\tb eI\ts I N");
result.add("de-\tba-\tta-\tble", "dh V\tb eI\tt V\tb V l");
result.add("de-\tba-\tted", "dh V\tb eI\tt V d");
result.add("de-\tba-\tter", "dh V\tb eI\tt @r");
result.add("de-\tba-\tters", "dh V\tb eI\tt @r z");
result.add("de-\tba-\tting", "dh V\tb eI\tt I N");
result.add("de-\tba-\ttor", "dh i:\tb eI\tt @r");
result.add("de-\tbar-\tment", "dh V\tb Q@\tm V n t");
result.add("de-\tbase", "dh V\tb eI s");
result.add("de-\tbase-\tment", "dh V\tb eI s\tm V n t");
result.add("de-\tbased", "dh V\tb eI s t");
result.add("de-\tbate", "dh V\tb eI t");
result.add("de-\tbates", "dh V\tb eI t s");
result.add("de-\tbate's", "dh V\tb eI t s");
result.add("de-\tbau-\tche-\try", "dh V\tb O:\ttS @r\ti:");
result.add("de-\tbell", "dh i:\tb e l");
result.add("de-\tben-\tture", "dh V\tb e n\ttS @r");
result.add("de-\tben-\ttures", "dh V\tb e n\ttS @r z");
result.add("de-\tber-\try", "dh i:\tb e@\ti:");
result.add("de-\tbi", "dh e\tb i:");
result.add("de-\tbi-\tli-\tta-\tted", "dh V\tb I\tl V\tt eI\tt V d");
result.add("de-\tbi-\tli-\tta-\tting", "dh V\tb I\tl V\tt eI\tt I N");
result.add("de-\tbi-\tli-\ttate", "dh V\tb I\tl V\tt eI t");
result.add("de-\tbi-\tli-\tty", "dh V\tb I\tl V\tt i:");
result.add("de-\tbit", "dh e\tb I t");
result.add("de-\tbo-\tnair", "dh e\tb V\tn e@");
result.add("de-\tbo-\trah", "dh e\tb @r\tV");
result.add("de-\tbo-\trah's", "dh e\tb @r\tV z");
result.add("de-\tbolt", "dh e\tb @U l t");
result.add("de-\tbor", "dh e\tb O@");
result.add("de-\tbord", "dh I\tb O@ d");
result.add("de-\tbu-\ttante", "dh e b\tj V\tt Q n t");
result.add("de-\tbu-\ttantes", "dh e b\tj V\tt Q n t s");
result.add("de-\tbu-\tting", "dh eI b\tj u:\tI N");
result.add("de-\tbug", "dh i:\tb V g");
result.add("de-\tbug-\tging", "dh i:\tb V\tg I N");
result.add("de-\tbun-\tking", "dh V\tb V N\tk I N");
result.add("de-\tbunk", "dh V\tb V N k");
result.add("de-\tbunked", "dh V\tb V N k t");
result.add("de-\tbus", "dh e\tb V s");
result.add("de-\tbus-\tsy", "dh e\tb V\ts i:");
result.add("de-\tbus-\tsy's", "dh e\tb V\ts i: z");
result.add("de-\tbut", "dh eI b\tj u:");
result.add("de-\tbuted", "dh eI b\tj u: d");
result.add("de-\tbuts", "dh eI b\tj u: z");
result.add("de-\tca-\tdence", "dh e\tk V\td V n s");
result.add("de-\tca-\tdent", "dh e\tk V\td V n t");
result.add("de-\tca-\tpi-\tta-\tted", "dh i:\tk {\tp I\tt eI\tt I d");
result.add("de-\tca-\tpi-\tta-\ttion", "dh I\tk {\tp I\tt eI\tS V n");
result.add("de-\tca-\tpi-\tta-\ttions", "dh I\tk {\tp I\tt eI\tS V n z");
result.add("de-\tca-\tpi-\ttate", "dh i:\tk {\tp I\tt eI t");
result.add("de-\tca-\tto", "dh I\tk Q\tt @U");
result.add("de-\tca-\ttur", "dh I\tk eI\tt @r");
result.add("de-\tcade", "dh e\tk eI d");
result.add("de-\tcades", "dh e\tk eI d z");
result.add("de-\tcade's", "dh e\tk eI d z");
result.add("de-\tcaf", "dh i:\tk { f");
result.add("de-\tcaf-\tfei-\tna-\tted", "dh i:\tk {\tf I\tn eI\tt I d");
result.add("de-\tcaf-\tfei-\tna-\tting", "dh i:\tk {\tf I\tn eI\tt I N");
result.add("de-\tcaf-\tfei-\tna-\ttion", "dh i:\tk {\tf I\tn eI\tS V n");
result.add("de-\tcaf-\tfei-\tnate", "dh i:\tk {\tf I\tn eI t");
result.add("de-\tcals", "dh i:\tk { l z");
result.add("de-\tcamp", "dh V\tk { m p");
result.add("de-\tcamped", "dh i:\tk { m p t");
result.add("de-\tcan-\tting", "dh V\tk { n\tt I N");
result.add("de-\tcant", "dh V\tk { n t");
result.add("de-\tcath-\tlete", "dh i:\tk { T\tl i: t");
result.add("de-\tcath-\tlon", "dh i:\tk { T\tl O: n");
result.add("de-\tcay", "dh V\tk eI");
result.add("de-\tcay-\ting", "dh V\tk eI\tI N");
result.add("de-\tcayed", "dh V\tk eI d");
result.add("de-\tcays", "dh V\tk eI z");
result.add("de-\tce-\tdent", "dh e\ts i:\td V n t");
result.add("de-\tce-\tdents", "dh e\ts i:\td V n t s");
result.add("de-\tce-\tdent's", "dh e\ts i:\td V n t s");
result.add("de-\tce-\tle-\tra-\tted", "dh V\ts e\tl @r\teI\tt V d");
result.add("de-\tce-\tle-\tra-\tting", "dh V\ts e\tl @r\teI\tt I N");
result.add("de-\tce-\tle-\tra-\ttion", "dh V\ts e\tl @r\teI\tS V n");
result.add("de-\tce-\tle-\trate", "dh V\ts e\tl @r\teI t");
result.add("de-\tcease", "dh V\ts i: s");
result.add("de-\tceased", "dh V\ts i: s t");
result.add("de-\tcei-\tving", "dh V\ts i:\tv I N");
result.add("de-\tceit", "dh V\ts i: t");
result.add("de-\tceit-\tful", "dh V\ts i: t\tf V l");
result.add("de-\tceits", "dh V\ts i: t s");
result.add("de-\tceive", "dh V\ts i: v");
result.add("de-\tceived", "dh V\ts i: v d");
result.add("de-\tcem-\tber", "dh V\ts e m\tb @r");
result.add("de-\tcem-\tber's", "dh V\ts e m\tb @r z");
result.add("de-\tcen-\tcy", "dh i:\ts V n\ts i:");
result.add("de-\tcen-\tni-\tal", "dh V\ts e\tn i:\tV l");
result.add("de-\tcent", "dh i:\ts V n t");
result.add("de-\tcent-\tly", "dh i:\ts V n\tt l i:");
result.add("de-\tcent-\tra-\tli-\tza-\ttion", "dh V\ts e n\tt r V\tl V\tz eI\tS V n");
result.add("de-\tcent-\tra-\tli-\tzing", "dh V\ts e n\tt r V\tl aI\tz I N");
result.add("de-\tcent-\tra-\tlize", "dh V\ts e n\tt r V\tl aI z");
result.add("de-\tcent-\tra-\tlized", "dh V\ts e n\tt r V\tl aI z d");
result.add("de-\tcep-\ttion", "dh V\ts e p\tS V n");
result.add("de-\tcep-\ttions", "dh V\ts e p\tS V n z");
result.add("de-\tcep-\ttive", "dh V\ts e p\tt I v");
result.add("de-\tcep-\ttive-\tly", "dh V\ts e p\tt I v\tl i:");
result.add("de-\tcer-\tti-\tfi-\tca-\ttion", "dh i:\ts @r\tt I\tf I\tk eI\tS V n");
result.add("de-\tcer-\tti-\tfied", "dh i:\ts @r\tt I\tf aI d");
result.add("de-\tcer-\tti-\tfy", "dh i:\ts @r\tt I\tf aI");
result.add("de-\tcherd", "dh e\ttS @r d");
result.add("de-\tci-\tbel", "dh e\ts I\tb e l");
result.add("de-\tci-\tbels", "dh e\ts I\tb V l z");
result.add("de-\tci-\tded", "dh V\ts aI\td V d");
result.add("de-\tci-\tded-\tly", "dh V\ts aI\td V d\tl i:");
result.add("de-\tci-\tding", "dh V\ts aI\td I N");
result.add("de-\tci-\tdu-\tous", "dh V\ts I\tdZ u:\tV s");
result.add("de-\tci-\tli-\tter", "dh e\ts I\tl i:\tt @r");
result.add("de-\tci-\tma", "dh I\ttS i:\tm V");
result.add("de-\tci-\tma-\tted", "dh e\ts I\tm eI\tt I d");
result.add("de-\tci-\tma-\tting", "dh e\ts I\tm eI\tt I N");
result.add("de-\tci-\tma-\ttion", "dh e\ts I\tm eI\tS V n");
result.add("de-\tci-\tmal", "dh e\ts I\tm V l");
result.add("de-\tci-\tmals", "dh e\ts I\tm V l z");
result.add("de-\tci-\tmate", "dh e\ts I\tm eI t");
result.add("de-\tci-\tphe-\tring", "dh V\ts aI\tf @r\tI N");
result.add("de-\tci-\tpher", "dh V\ts aI\tf @r");
result.add("de-\tci-\tphered", "dh V\ts aI\tf @r d");
result.add("de-\tci-\tsion", "dh V\ts I\tZ V n");
result.add("de-\tci-\tsion-\tma-\tker", "dh V\ts I\tZ V n\tm eI\tk @r");
result.add("de-\tci-\tsions", "dh V\ts I\tZ V n z");
result.add("de-\tci-\tsion's", "dh V\ts I\tZ V n z");
result.add("de-\tci-\tsive", "dh V\ts aI\ts I v");
result.add("de-\tci-\tsive-\tly", "dh V\ts aI\ts I v\tl i:");
result.add("de-\tci-\tsive-\tness", "dh V\ts aI\ts I v\tn V s");
result.add("de-\tcide", "dh V\ts aI d");
result.add("de-\tcides", "dh V\ts aI d z");
result.add("de-\tco", "dh e\tk @U");
result.add("de-\tco-\tder", "dh I\tk @U\td @r");
result.add("de-\tco-\tders", "dh I\tk @U\td @r z");
result.add("de-\tco-\tding", "dh I\tk @U\td I N");
result.add("de-\tco-\trum", "dh I\tk O@\tV m");
result.add("de-\tcode", "dh I\tk @U d");
result.add("de-\tcom-\tmis-\tsio-\tning", "dh i:\tk V\tm I\tS V\tn I N");
result.add("de-\tcom-\tmis-\tsion", "dh i:\tk V\tm I\tS V n");
result.add("de-\tcom-\tmis-\tsioned", "dh i:\tk V\tm I\tS V n d");
result.add("de-\tcom-\tpo-\tses", "dh i:\tk V m\tp @U\tz V z");
result.add("de-\tcom-\tpo-\tsi-\ttion", "dh i:\tk V m\tp @U\tz I\tS V n");
result.add("de-\tcom-\tpo-\tsing", "dh i:\tk V m\tp @U\tz I N");
result.add("de-\tcom-\tpose", "dh i:\tk V m\tp @U z");
result.add("de-\tcom-\tposed", "dh i:\tk V m\tp @U z d");
result.add("de-\tcom-\tpres-\tsion", "dh i:\tk V m\tp r e\tS V n");
result.add("de-\tcon-\tges-\ttant", "dh I\tk V n\tdZ e s\tt V n t");
result.add("de-\tcon-\tges-\ttants", "dh I\tk V n\tdZ e s\tt V n t s");
result.add("de-\tcou-\tple", "dh i:\tk V\tp V l");
result.add("de-\tcoup-\tling", "dh i:\tk V p\tl I N");
result.add("de-\tcoy", "dh V\tk OI");
result.add("de-\tcoys", "dh i:\tk OI z");
result.add("de-\tcre-\tpit", "dh V k\tr e\tp V t");
result.add("de-\tcrea-\tses", "dh I k\tr i:\ts V z");
result.add("de-\tcrea-\tsing", "dh I k\tr i:\ts I N");
result.add("de-\tcrease", "dh I k\tr i: s");
result.add("de-\tcreased", "dh I k\tr i: s t");
result.add("de-\tcree", "dh I k\tr i:");
result.add("de-\tcreed", "dh I k\tr i: d");
result.add("de-\tcrees", "dh I k\tr i: z");
result.add("de-\tcri-\tmi-\tna-\tli-\tza-\ttion", "dh i: k\tr I\tm I\tn V\tl I\tz eI\tS V n");
result.add("de-\tcri-\tmi-\tna-\tli-\tzing", "dh i: k\tr I\tm I\tn V\tl aI\tz I N");
result.add("de-\tcri-\tmi-\tna-\tlize", "dh i: k\tr I\tm I\tn V\tl aI z");
result.add("de-\tcried", "dh I k\tr aI d");
result.add("de-\tcries", "dh I k\tr aI z");
result.add("de-\tdi-\tca-\tted", "dh e\td I\tk eI\tt I d");
result.add("de-\tdi-\tca-\tting", "dh e\td I\tk eI\tt I N");
result.add("de-\tdi-\tca-\ttion", "dh e\td I\tk eI\tS V n");
result.add("de-\tdi-\tcate", "dh e\td I\tk eI t");
result.add("de-\tdi-\tcates", "dh e\td I\tk eI t s");
result.add("de-\tdo", "dh eI\td @U");
result.add("de-\tduc-\tted", "dh V\td V k\tt V d");
result.add("de-\tduc-\tti-\tbi-\tli-\tty", "dh V\td V k\tt V\tb I\tl V\tt i:");
result.add("de-\tduc-\tti-\tble", "dh V\td V k\tt V\tb V l");
result.add("de-\tduc-\tti-\tbles", "dh V\td V k\tt V\tb V l z");
result.add("de-\tduc-\tting", "dh V\td V k\tt I N");
result.add("de-\tduc-\ttion", "dh V\td V k\tS V n");
result.add("de-\tduc-\ttions", "dh V\td V k\tS V n z");
result.add("de-\tduce", "dh V\td u: s");
result.add("de-\tduced", "dh V\td u: s t");
result.add("de-\tduct", "dh V\td V k t");
result.add("de-\tducts", "dh V\td V k t s");
result.add("de-\tem-\tpha-\tsi-\tzing", "dh i:\te m\tf V\ts aI\tz I N");
result.add("de-\tem-\tpha-\tsize", "dh i:\te m\tf V\ts aI z");
result.add("de-\tex-\tcite", "dh i:\tI k\ts aI t");
result.add("de-\tfa-\tcing", "dh V\tf eI\ts I N");
result.add("de-\tfa-\tma-\ttion", "dh e\tf V\tm eI\tS V n");
result.add("de-\tfa-\tma-\tto-\try", "dh V\tf {\tm V\tt O@\ti:");
result.add("de-\tface", "dh V\tf eI s");
result.add("de-\tfaced", "dh V\tf eI s t");
result.add("de-\tfal-\tco", "dh V\tf Q l\tk @U");
result.add("de-\tfame", "dh V\tf eI m");
result.add("de-\tfamed", "dh V\tf eI m d");
result.add("de-\tfaul-\tted", "dh V\tf O: l\tt V d");
result.add("de-\tfaul-\tters", "dh V\tf O: l\tt @r z");
result.add("de-\tfaul-\tting", "dh V\tf O: l\tt I N");
result.add("de-\tfault", "dh V\tf O: l t");
result.add("de-\tfaults", "dh V\tf O: l t s");
result.add("de-\tfe-\tren-\ttial", "dh e\tf @r\te n\ttS V l");
result.add("de-\tfe-\trence", "dh e\tf @r\tV n s");
result.add("de-\tfea-\tsance", "dh V\tf i:\tz V n s");
result.add("de-\tfea-\tted", "dh V\tf i:\tt V d");
result.add("de-\tfea-\tti-\tsm", "dh V\tf i:\tt I\tz V m");
result.add("de-\tfea-\tting", "dh V\tf i:\tt I N");
result.add("de-\tfea-\ttist", "dh V\tf i:\tt I s t");
result.add("de-\tfeat", "dh V\tf i: t");
result.add("de-\tfeats", "dh V\tf i: t s");
result.add("de-\tfec-\tted", "dh V\tf e k\tt V d");
result.add("de-\tfec-\tting", "dh V\tf e k\tt I N");
result.add("de-\tfec-\ttion", "dh V\tf e k\tS V n");
result.add("de-\tfec-\ttions", "dh V\tf e k\tS V n z");
result.add("de-\tfec-\ttive", "dh V\tf e k\tt I v");
result.add("de-\tfec-\ttor", "dh V\tf e k\tt @r");
result.add("de-\tfec-\ttors", "dh V\tf e k\tt @r z");
result.add("de-\tfect", "dh i:\tf e k t");
result.add("de-\tfects", "dh i:\tf e k t s");
result.add("de-\tfen-\tdant", "dh V\tf e n\td V n t");
result.add("de-\tfen-\tdants", "dh V\tf e n\td V n t s");
result.add("de-\tfen-\tdant's", "dh V\tf e n\td V n t s");
result.add("de-\tfen-\tded", "dh V\tf e n\td V d");
result.add("de-\tfen-\tder", "dh V\tf e n\td @r");
result.add("de-\tfen-\tders", "dh V\tf e n\td @r z");
result.add("de-\tfen-\tder's", "dh V\tf e n\td @r z");
result.add("de-\tfen-\tding", "dh V\tf e n\td I N");
result.add("de-\tfen-\tses", "dh V\tf e n\ts V z");
result.add("de-\tfen-\tse's", "dh V\tf e n\ts V z");
result.add("de-\tfen-\tsi-\tble", "dh V\tf e n\ts V\tb V l");
result.add("de-\tfen-\tsive", "dh V\tf e n\ts I v");
result.add("de-\tfen-\tsive-\tly", "dh V\tf e n\ts I v\tl i:");
result.add("de-\tfen-\tsive-\tness", "dh V\tf e n\ts I v\tn V s");
result.add("de-\tfence", "dh V\tf e n s");
result.add("de-\tfend", "dh V\tf e n d");
result.add("de-\tfends", "dh V\tf e n d z");
result.add("de-\tfense", "dh V\tf e n s");
result.add("de-\tfense-\tless", "dh V\tf e n\ts l V s");
result.add("de-\tfer", "dh V\tf @r");
result.add("de-\tfer-\tment", "dh V\tf @r\tm V n t");
result.add("de-\tfer-\tments", "dh V\tf @r\tm V n t s");
result.add("de-\tfer-\tral", "dh V\tf @r\tV l");
result.add("de-\tfer-\trals", "dh V\tf @r\tV l z");
result.add("de-\tfer-\tring", "dh V\tf @r\tI N");
result.add("de-\tferred", "dh V\tf @r d");
result.add("de-\tfers", "dh V\tf @r z");
result.add("de-\tfi-\tance", "dh V\tf aI\tV n s");
result.add("de-\tfi-\tant", "dh V\tf aI\tV n t");
result.add("de-\tfi-\tant-\tly", "dh V\tf aI\tV n\tt l i:");
result.add("de-\tfi-\tbril-\tla-\ttor", "dh i:\tf I b\tr I\tl eI\tt @r");
result.add("de-\tfi-\tbril-\tla-\ttors", "dh i:\tf I b\tr I\tl eI\tt @r z");
result.add("de-\tfi-\tcien-\tcies", "dh V\tf I\tS V n\ts i: z");
result.add("de-\tfi-\tcien-\tcy", "dh V\tf I\tS V n\ts i:");
result.add("de-\tfi-\tcient", "dh V\tf I\tS V n t");
result.add("de-\tfi-\tcit", "dh e\tf I\ts I t");
result.add("de-\tfi-\tcits", "dh e\tf I\ts I t s");
result.add("de-\tfi-\tcit's", "dh e\tf I\ts I t s");
result.add("de-\tfi-\tna-\tble", "dh V\tf aI\tn V\tb V l");
result.add("de-\tfi-\tni-\ttion", "dh e\tf I\tn I\tS V n");
result.add("de-\tfi-\tni-\ttions", "dh e\tf I\tn I\tS V n z");
result.add("de-\tfi-\tni-\ttive", "dh V\tf I\tn I\tt I v");
result.add("de-\tfi-\tni-\ttive-\tly", "dh V\tf I\tn I\tt I v\tl i:");
result.add("de-\tfi-\tning", "dh V\tf aI\tn I N");
result.add("de-\tfi-\tnite", "dh e\tf I\tn I t");
result.add("de-\tfi-\tnite-\tly", "dh e\tf I\tn I t\tl i:");
result.add("de-\tfied", "dh V\tf aI d");
result.add("de-\tfies", "dh V\tf aI z");
result.add("de-\tfine", "dh V\tf aI n");
result.add("de-\tfined", "dh V\tf aI n d");
result.add("de-\tfines", "dh V\tf aI n z");
result.add("de-\tfo-\tli-\tant", "dh V\tf @U\tl i:\tV n t");
result.add("de-\tfo-\tli-\tants", "dh V\tf @U\tl i:\tV n t s");
result.add("de-\tfo-\tres-\tta-\ttion", "dh V\tf O@\tV s\tt eI\tS V n");
result.add("de-\tfo-\trest", "dh V\tf O@\tV s t");
result.add("de-\tfoe", "dh V\tf @U");
result.add("de-\tfoe's", "dh V\tf @U z");
result.add("de-\tfor-\tma-\ttion", "dh i:\tf O@\tm eI\tS V n");
result.add("de-\tfor-\tmi-\tties", "dh V\tf O@\tm V\tt i: z");
result.add("de-\tfor-\tmi-\tty", "dh V\tf O@\tm V\tt i:");
result.add("de-\tford", "dh e\tf @r d");
result.add("de-\tford's", "dh e\tf @r d z");
result.add("de-\tform", "dh i:\tf O@ m");
result.add("de-\tformed", "dh V\tf O@ m d");
result.add("de-\tfu-\tsing", "dh V f\tj u:\tz I N");
result.add("de-\tfun-\tding", "dh i:\tf V n\td I N");
result.add("de-\tfunct", "dh V\tf V N k t");
result.add("de-\tfund", "dh i:\tf V n d");
result.add("de-\tfuse", "dh V f\tj u: z");
result.add("de-\tfused", "dh V f\tj u: z d");
result.add("de-\tfy", "dh V\tf aI");
result.add("de-\tfy-\ting", "dh V\tf aI\tI N");
result.add("de-\tgas", "dh eI\tg V s");
result.add("de-\tge-\tne-\tra-\tcy", "dh I\tdZ e\tn @r\tV\ts i:");
result.add("de-\tge-\tne-\tra-\tted", "dh I\tdZ e\tn @r\teI\tt V d");
result.add("de-\tge-\tne-\tra-\tting", "dh I\tdZ e\tn @r\teI\tt I N");
result.add("de-\tge-\tne-\tra-\ttion", "dh I\tdZ e\tn @r\teI\tS V n");
result.add("de-\tge-\tne-\tra-\ttive", "dh I\tdZ e\tn @r\tV\tt I v");
result.add("de-\tge-\tne-\trate", "dh I\tdZ e\tn @r\tV t");
result.add("de-\tge-\tne-\trates", "dh I\tdZ e\tn @r\tV t s");
result.add("de-\tge-\tne-\tres", "dh I\tdZ V\tn e@\te s");
result.add("de-\tge-\tner", "dh e\tg i:\tn @r");
result.add("de-\thoff", "dh e\th O: f");
result.add("de-\thu-\tma-\tni-\tza-\ttion", "dh i: h\tj u:\tm V\tn V\tz eI\tS V n");
result.add("de-\thu-\tma-\tni-\tzing", "dh i: h\tj u:\tm V\tn aI\tz I N");
result.add("de-\thu-\tma-\tnize", "dh V h\tj u:\tm V\tn aI z");
result.add("de-\thu-\tma-\tnized", "dh V h\tj u:\tm V\tn aI z d");
result.add("de-\thyd-\tra-\tted", "dh V\th aI d\tr eI\tt V d");
result.add("de-\thyd-\tra-\ttion", "dh i:\th aI d\tr eI\tS V n");
result.add("de-\thyd-\trate", "dh V\th aI d\tr eI t");
result.add("de-\ti-\tfi-\tca-\ttion", "dh i:\tV\tf V\tk eI\tS V n");
result.add("de-\ti-\tfy", "dh i:\tV\tf aI");
result.add("de-\ti-\tsm", "dh i:\tI\tz V m");
result.add("de-\ti-\tties", "dh i:\tI\tt i: z");
result.add("de-\ti-\tty", "dh i:\tI\tt i:");
result.add("de-\tin-\tsti-\ttu-\ttio-\tna-\tli-\tza-\ttion", "dh i:\tI n\ts t I\tt u:\tS V\tn V\tl I\tz eI\tS V n");
result.add("de-\tin-\tsti-\ttu-\ttio-\tna-\tlize", "dh i:\tI n\ts t I\tt u:\tS V\tn V\tl aI z");
result.add("de-\tist", "dh i:\tI s t");
result.add("de-\tja", "dh i:\tdZ V");
result.add("de-\tje-\tsus", "dh I\tdZ i:\tz V s");
result.add("de-\tjec-\tted", "dh I\tdZ e k\tt V d");
result.add("de-\tject", "dh I\tdZ e k t");
result.add("de-\tkalb", "dh I\tk { l b");
result.add("de-\tkle", "dh e\tk V l");
result.add("de-\tla", "dh e\tl V");
result.add("de-\tla-\tcruz", "dh eI\tl Q k\tr u: z");
result.add("de-\tla-\tfield", "dh e\tl V\tf i: l d");
result.add("de-\tla-\tney", "dh V\tl eI\tn i:");
result.add("de-\tla-\tno", "dh V\tl Q\tn @U");
result.add("de-\tla-\tvan", "dh e\tl V\tv V n");
result.add("de-\tla-\twa-\tri-\tan", "dh e\tl V\tw e@\ti:\tV n");
result.add("de-\tla-\tware", "dh e\tl V\tw e@");
result.add("de-\tla-\tware's", "dh e\tl V\tw e@ z");
result.add("de-\tlaine", "dh V\tl eI n");
result.add("de-\tlan-\tcey", "dh e\tl V n\ts i:");
result.add("de-\tland", "dh V\tl { n d");
result.add("de-\tlay", "dh V\tl eI");
result.add("de-\tlay-\ting", "dh V\tl eI\tI N");
result.add("de-\tlayed", "dh V\tl eI d");
result.add("de-\tlays", "dh V\tl eI z");
result.add("de-\tle-\tga-\tted", "dh e\tl V\tg eI\tt V d");
result.add("de-\tle-\tga-\tting", "dh e\tl V\tg eI\tt I N");
result.add("de-\tle-\tga-\ttion", "dh e\tl V\tg eI\tS V n");
result.add("de-\tle-\tga-\ttions", "dh e\tl V\tg eI\tS V n z");
result.add("de-\tle-\tga-\ttion's", "dh e\tl V\tg eI\tS V n z");
result.add("de-\tle-\tgate", "dh e\tl V\tg eI t");
result.add("de-\tle-\tgates", "dh e\tl V\tg eI t s");
result.add("de-\tle-\tgate's", "dh e\tl I\tg V t s");
result.add("de-\tle-\ton", "dh e\tl i:\tV n");
result.add("de-\tle-\tte-\tri-\tous", "dh e\tl V\tt I@\ti:\tV s");
result.add("de-\tle-\tted", "dh V\tl i:\tt V d");
result.add("de-\tle-\tting", "dh V\tl i:\tt I N");
result.add("de-\tle-\ttion", "dh V\tl i:\tS V n");
result.add("de-\tle-\ttions", "dh V\tl i:\tS V n z");
result.add("de-\tlec-\tta-\tble", "dh V\tl e k\tt V\tb V l");
result.add("de-\tlete", "dh V\tl i: t");
result.add("de-\tli", "dh e\tl i:");
result.add("de-\tli-\tbe-\tra-\tted", "dh V\tl I\tb @r\teI\tt V d");
result.add("de-\tli-\tbe-\tra-\tting", "dh V\tl I\tb @r\teI\tt I N");
result.add("de-\tli-\tbe-\tra-\ttion", "dh V\tl I\tb @r\teI\tS V n");
result.add("de-\tli-\tbe-\tra-\ttions", "dh V\tl I\tb @r\teI\tS V n z");
result.add("de-\tli-\tbe-\tra-\ttive", "dh V\tl I\tb @r\teI\tt I v");
result.add("de-\tli-\tbe-\trate", "dh V\tl I\tb @r\tV t");
result.add("de-\tli-\tbe-\trate-\tly", "dh V\tl I\tb @r\tV t\tl i:");
result.add("de-\tli-\tbe-\trates", "dh V\tl I\tb @r\teI t s");
result.add("de-\tli-\tca-\tcies", "dh e\tl I\tk V\ts i: z");
result.add("de-\tli-\tca-\tcy", "dh e\tl I\tk V\ts i:");
result.add("de-\tli-\tca-\ttes-\tsen", "dh e\tl I\tk V\tt e\ts V n");
result.add("de-\tli-\tca-\ttes-\tsens", "dh e\tl I\tk V\tt e\ts V n z");
result.add("de-\tli-\tcate", "dh e\tl I\tk V t");
result.add("de-\tli-\tcate-\tly", "dh e\tl I\tk V t\tl i:");
result.add("de-\tli-\tcia", "dh e\tl i:\ttS V");
result.add("de-\tli-\tcious", "dh V\tl I\tS V s");
result.add("de-\tli-\tcious-\tly", "dh V\tl I\tS V s\tl i:");
result.add("de-\tli-\tla", "dh e\tl i:\tl V");
result.add("de-\tli-\tlah", "dh V\tl aI\tl V");
result.add("de-\tli-\tri-\tous", "dh V\tl I@\ti:\tV s");
result.add("de-\tli-\tri-\tum", "dh V\tl I@\ti:\tV m");
result.add("de-\tli-\tve-\tra-\tble", "dh V\tl I\tv @r\tV\tb V l");
result.add("de-\tli-\tve-\trance", "dh V\tl I\tv @r\tV n s");
result.add("de-\tli-\tve-\trer", "dh V\tl I\tv @r\t@r");
result.add("de-\tli-\tve-\trers", "dh V\tl I\tv @r\t@r z");
result.add("de-\tli-\tve-\tries", "dh V\tl I\tv @r\ti: z");
result.add("de-\tli-\tve-\tring", "dh V\tl I\tv @r\tI N");
result.add("de-\tli-\tve-\try", "dh V\tl I\tv @r\ti:");
result.add("de-\tli-\tver", "dh V\tl I\tv @r");
result.add("de-\tli-\tvered", "dh V\tl I\tv @r d");
result.add("de-\tli-\tvers", "dh V\tl I\tv @r z");
result.add("de-\tlia", "dh i: l\tj V");
result.add("de-\tligh-\tted", "dh V\tl aI\tt V d");
result.add("de-\tligh-\tting", "dh V\tl aI\tt I N");
result.add("de-\tlight", "dh V\tl aI t");
result.add("de-\tlight-\tful", "dh V\tl aI t\tf V l");
result.add("de-\tlight-\tful-\tly", "dh V\tl aI t\tf V\tl i:");
result.add("de-\tlights", "dh V\tl aI t s");
result.add("de-\tlil-\tlo", "dh V\tl I\tl @U");
result.add("de-\tlin-\tquent", "dh V\tl I N\tk w V n t");
result.add("de-\tlis-\tted", "dh i:\tl I s\tt V d");
result.add("de-\tlis-\tting", "dh i:\tl I s\tt I N");
result.add("de-\tlisle", "dh V\tl aI l");
result.add("de-\tlist", "dh i:\tl I s t");
result.add("de-\tlo-\tra", "dh e\tl O@\tV");
result.add("de-\tlo-\tre-\tan", "dh V\tl O@\ti:\tV n");
result.add("de-\tlo-\tren-\tzo", "dh e\tl O@\te n\tz @U");
result.add("de-\tlo-\tres", "dh V\tl O@\tV s");
result.add("de-\tlo-\tri-\ta", "dh e\tl O@\ti:\tV");
result.add("de-\tlo-\tris", "dh e\tl @r\tI s");
result.add("de-\tlong", "dh V\tl O: N");
result.add("de-\tlor-\tme", "dh e\tl O@\tm i:");
result.add("de-\tlors", "dh V\tl O@ z");
result.add("de-\tlu-\tded", "dh V\tl u:\td V d");
result.add("de-\tlu-\tding", "dh V\tl u:\td I N");
result.add("de-\tlu-\tsio-\tnal", "dh V\tl u:\tZ V\tn V l");
result.add("de-\tlu-\tsion", "dh V\tl u:\tZ V n");
result.add("de-\tlu-\tsions", "dh V\tl u:\tZ V n z");
result.add("de-\tlude", "dh V\tl u: d");
result.add("de-\tluge", "dh e l\tj u: dZ");
result.add("de-\tluged", "dh e l\tj u: dZ d");
result.add("de-\tluxe", "dh V\tl V k s");
result.add("de-\tma-\tgo-\tgic", "dh e\tm V\tg Q\tdZ I k");
result.add("de-\tma-\tgo-\tgue-\try", "dh e\tm V\tg Q\tg @r\ti:");
result.add("de-\tma-\tgo-\tguing", "dh e\tm V\tg Q\tg I N");
result.add("de-\tma-\tgo-\tgy", "dh e\tm V\tg Q\tdZ i:");
result.add("de-\tma-\tgogue", "dh e\tm V\tg Q g");
result.add("de-\tma-\tgogues", "dh e\tm V\tg Q g z");
result.add("de-\tma-\ti-\to", "dh V\tm Q\ti:\t@U");
result.add("de-\tma-\tre-\tst", "dh eI\tm Q@\teI\te s t");
result.add("de-\tma-\tree", "dh e\tm @r\ti:");
result.add("de-\tma-\tri-\ta", "dh I\tm Q@\ti:\tV");
result.add("de-\tmag-\tgi-\to", "dh V\tm Q\tdZ i:\t@U");
result.add("de-\tmain", "dh V\tm eI n");
result.add("de-\tman", "dh i:\tm V n");
result.add("de-\tman-\tded", "dh I\tm { n\td V d");
result.add("de-\tman-\tding", "dh I\tm { n\td I N");
result.add("de-\tman-\tding-\tly", "dh I\tm { n\td I N\tl i:");
result.add("de-\tmand", "dh I\tm { n d");
result.add("de-\tmands", "dh I\tm { n d z");
result.add("de-\tmar-\tca-\ttion", "dh i:\tm Q@\tk eI\tS V n");
result.add("de-\tmar-\tca-\ttions", "dh i:\tm Q@\tk eI\tS V n z");
result.add("de-\tmar-\tti-\tni", "dh I\tm Q@\tt i:\tn i:");
result.add("de-\tmarche", "dh I\tm Q@ tS");
result.add("de-\tmark", "dh V\tm Q@ k");
result.add("de-\tme-\trit", "dh i:\tm e@\tI t");
result.add("de-\tme-\trits", "dh i:\tm e@\tI t s");
result.add("de-\tme-\tter", "dh I\tm i:\tt @r");
result.add("de-\tme-\ttre", "dh e\tm i:\tt @r");
result.add("de-\tme-\tyer", "dh e\tm aI\t@r");
result.add("de-\tmea-\tning", "dh I\tm i:\tn I N");
result.add("de-\tmea-\tnor", "dh I\tm i:\tn @r");
result.add("de-\tmean", "dh I\tm i: n");
result.add("de-\tmeaned", "dh I\tm i: n d");
result.add("de-\tmeans", "dh I\tm i: n z");
result.add("de-\tmen-\tted", "dh I\tm e n\tt V d");
result.add("de-\tmen-\tti-\ta", "dh I\tm e n\tS i:\tV");
result.add("de-\tment", "dh V\tm e n t");
result.add("de-\tmer-\tger", "dh i:\tm @r\tdZ @r");
result.add("de-\tmet-\tri-\ta", "dh I\tm e t\tr i:\tV");
result.add("de-\tmet-\tri-\tus", "dh I\tm i: t\tr i:\tV s");
result.add("de-\tmi", "dh e\tm i:");
result.add("de-\tmi-\tli-\tta-\tri-\tza-\ttion", "dh i:\tm I\tl I\tt @r\tI\tz eI\tS V n");
result.add("de-\tmi-\tli-\tta-\tri-\tzes", "dh i:\tm I\tl I\tt @r\taI\tz V z");
result.add("de-\tmi-\tli-\tta-\tri-\tzing", "dh i:\tm I\tl I\tt @r\taI\tz I N");
result.add("de-\tmi-\tli-\tta-\trize", "dh i:\tm I\tl I\tt @r\taI z");
result.add("de-\tmi-\tli-\tta-\trized", "dh i:\tm I\tl I\tt @r\taI z d");
result.add("de-\tmi-\trel", "dh V\tm I@\tV l");
result.add("de-\tming", "dh e\tm I N");
result.add("de-\tmise", "dh I\tm aI z");
result.add("de-\tmo", "dh e\tm @U");
result.add("de-\tmo-\tbi-\tli-\tza-\ttion", "dh i:\tm @U\tb V\tl aI\tz eI\tS V n");
result.add("de-\tmo-\tbi-\tlize", "dh I\tm @U\tb I\tl aI z");
result.add("de-\tmo-\tbi-\tlized", "dh I\tm @U\tb I\tl aI z d");
result.add("de-\tmo-\tcra-\tcies", "dh I\tm Q k\tr V\ts i: z");
result.add("de-\tmo-\tcra-\tcy", "dh I\tm Q k\tr V\ts i:");
result.add("de-\tmo-\tcra-\tcy's", "dh I\tm Q k\tr V\ts i: z");
result.add("de-\tmo-\tcra-\tti-\tza-\ttion", "dh I\tm Q k\tr V\tt V\tz eI\tS V n");
result.add("de-\tmo-\tcra-\tti-\tzing", "dh I\tm Q k\tr V\tt aI\tz I N");
result.add("de-\tmo-\tcra-\ttic", "dh e\tm V k\tr {\tt I k");
result.add("de-\tmo-\tcra-\ttical-\tly", "dh e\tm V k\tr {\tt I k\tl i:");
result.add("de-\tmo-\tcra-\ttize", "dh I\tm Q k\tr V\tt aI z");
result.add("de-\tmo-\tcra-\ttized", "dh I\tm Q k\tr V\tt aI z d");
result.add("de-\tmo-\tcrat", "dh e\tm V k\tr { t");
result.add("de-\tmo-\tcrats", "dh e\tm V k\tr { t s");
result.add("de-\tmo-\tcrat's", "dh e\tm V k\tr { t s");
result.add("de-\tmo-\tdu-\tla-\ttion", "dh i:\tm Q\tdZ V\tl eI\tS V n");
result.add("de-\tmo-\tdu-\tlate", "dh i:\tm Q\tdZ V\tl eI t");
result.add("de-\tmo-\tli-\tshing", "dh I\tm Q\tl I\tS I N");
result.add("de-\tmo-\tli-\ttion", "dh e\tm V\tl I\tS V n");
result.add("de-\tmo-\tlish", "dh V\tm Q\tl I S");
result.add("de-\tmo-\tlished", "dh I\tm Q\tl I S t");
result.add("de-\tmo-\tni-\tza-\ttion", "dh i:\tm V\tn V\tz eI\tS V n");
result.add("de-\tmo-\tni-\tzing", "dh i:\tm V\tn aI\tz I N");
result.add("de-\tmo-\tnic", "dh I\tm Q\tn I k");
result.add("de-\tmo-\tnize", "dh i:\tm V\tn aI z");
result.add("de-\tmo-\tnized", "dh i:\tm V\tn aI z d");
result.add("de-\tmo-\tra-\tli-\tza-\ttion", "dh I\tm O@\tV\tl V\tz eI\tS V n");
result.add("de-\tmo-\tra-\tli-\tzing", "dh I\tm O@\tV\tl aI\tz I N");
result.add("de-\tmo-\tra-\tlize", "dh I\tm O@\tV\tl aI z");
result.add("de-\tmo-\tra-\tlized", "dh I\tm O@\tV\tl aI z d");
result.add("de-\tmo-\trest", "dh eI\tm O@\te s t");
result.add("de-\tmo-\tted", "dh I\tm @U\tt V d");
result.add("de-\tmo-\ttion", "dh I\tm @U\tS V n");
result.add("de-\tmo-\ttions", "dh I\tm @U\tS V n z");
result.add("de-\tmog-\tra-\tpher", "dh e\tm Q g\tr V\tf @r");
result.add("de-\tmog-\tra-\tphers", "dh e\tm Q g\tr V\tf @r z");
result.add("de-\tmog-\tra-\tphic", "dh e\tm V g\tr {\tf I k");
result.add("de-\tmog-\tra-\tphical-\tly", "dh e\tm V g\tr {\tf I k\tl i:");
result.add("de-\tmog-\tra-\tphics", "dh e\tm V g\tr {\tf I k s");
result.add("de-\tmog-\tra-\tphy", "dh e\tm Q g\tr V\tf i:");
result.add("de-\tmon", "dh i:\tm V n");
result.add("de-\tmons", "dh i:\tm V n z");
result.add("de-\tmons-\ttra-\tble", "dh e\tm V n\ts t r V\tb V l");
result.add("de-\tmons-\ttra-\tted", "dh e\tm V n\ts t r eI\tt V d");
result.add("de-\tmons-\ttra-\tting", "dh e\tm V n\ts t r eI\tt I N");
result.add("de-\tmons-\ttra-\ttion", "dh e\tm V n\ts t r eI\tS V n");
result.add("de-\tmons-\ttra-\ttions", "dh e\tm V n\ts t r eI\tS V n z");
result.add("de-\tmons-\ttra-\ttive", "dh I\tm Q n\ts t r V\tt I v");
result.add("de-\tmons-\ttra-\ttor", "dh e\tm V n\ts t r eI\tt @r");
result.add("de-\tmons-\ttra-\ttors", "dh e\tm V n\ts t r eI\tt @r z");
result.add("de-\tmons-\ttrab-\tly", "dh I\tm Q n\ts t r V b\tl i:");
result.add("de-\tmons-\ttrate", "dh e\tm V n\ts t r eI t");
result.add("de-\tmons-\ttrates", "dh e\tm V n\ts t r eI t s");
result.add("de-\tmos", "dh e\tm @U z");
result.add("de-\tmote", "dh I\tm @U t");
result.add("de-\tmott", "dh V\tm Q t");
result.add("de-\tmur", "dh I\tm @r");
result.add("de-\tmur-\tring", "dh I\tm @r\tI N");
result.add("de-\tmure", "dh I m\tj U@");
result.add("de-\tmure-\tly", "dh I m\tj U@\tl i:");
result.add("de-\tmurred", "dh I\tm @r d");
result.add("de-\tmurs", "dh I\tm @r z");
result.add("de-\tmus", "dh i:\tm V s");
result.add("de-\tmuth", "dh i:\tm V T");
result.add("de-\tmys-\tti-\tfy", "dh i:\tm I s\tt I\tf aI");
result.add("de-\tna", "dh i:\tn V");
result.add("de-\tna-\tri-\tus", "dh V\tn {\tr i:\tV s");
result.add("de-\tna-\trii", "dh V\tn {\tr i:");
result.add("de-\tna-\tro", "dh V\tn Q@\t@U");
result.add("de-\tna-\ttio-\tna-\tli-\tza-\ttion", "dh i:\tn {\tS V\tn V\tl I\tz eI\tS V n");
result.add("de-\tna-\ttio-\tna-\tli-\tza-\ttions", "dh i:\tn {\tS V\tn V\tl I\tz eI\tS V n z");
result.add("de-\tna-\ttio-\tna-\tli-\tzing", "dh V\tn {\tS V\tn V\tl aI\tz I N");
result.add("de-\tna-\ttio-\tna-\tlize", "dh V\tn {\tS V\tn V\tl aI z");
result.add("de-\tna-\ttio-\tna-\tlized", "dh V\tn {\tS V\tn V\tl aI z d");
result.add("de-\tna-\tture", "dh V\tn eI\ttS @r");
result.add("de-\tna-\ttured", "dh V\tn eI\ttS @r d");
result.add("de-\tneen", "dh I\tn i: n");
result.add("de-\tneuve", "dh I\tn V v");
result.add("de-\tni-\ta-\tbi-\tli-\tty", "dh V\tn aI\tV\tb I\tl V\tt i:");
result.add("de-\tni-\tal", "dh V\tn aI\tV l");
result.add("de-\tni-\tals", "dh V\tn aI\tV l z");
result.add("de-\tni-\to", "dh i:\tn i:\t@U");
result.add("de-\tni-\tson", "dh e\tn I\ts V n");
result.add("de-\tni-\tson's", "dh e\tn I\ts V n z");
result.add("de-\tni-\tzen", "dh e\tn V\tz V n");
result.add("de-\tni-\tzens", "dh e\tn V\tz V n z");
result.add("de-\tnice", "dh I\tn i: s");
result.add("de-\tnied", "dh V\tn aI d");
result.add("de-\tnies", "dh V\tn aI z");
result.add("de-\tnig-\tra-\tted", "dh e\tn I g\tr eI\tt V d");
result.add("de-\tnig-\tra-\tting", "dh e\tn I g\tr eI\tt I N");
result.add("de-\tnig-\trate", "dh e\tn I g\tr eI t");
result.add("de-\tnim", "dh e\tn I m");
result.add("de-\tnis", "dh e\tn I s");
result.add("de-\tnise", "dh V\tn i: s");
result.add("de-\tniz", "dh eI\tn i: z");
result.add("de-\tno-\tmi-\tna-\tted", "dh V\tn Q\tm V\tn eI\tt V d");
result.add("de-\tno-\tmi-\tna-\ttio-\tnal", "dh V\tn O:\tm V\tn eI\tS V\tn V l");
result.add("de-\tno-\tmi-\tna-\ttion", "dh V\tn O:\tm V\tn eI\tS V n");
result.add("de-\tno-\tmi-\tna-\ttions", "dh V\tn O:\tm V\tn eI\tS V n z");
result.add("de-\tno-\tmi-\tna-\ttion's", "dh V\tn O:\tm V\tn eI\tS V n z");
result.add("de-\tno-\tmi-\tna-\ttor", "dh V\tn Q\tm V\tn eI\tt @r");
result.add("de-\tno-\tmi-\tnate", "dh V\tn Q\tm V\tn eI t");
result.add("de-\tno-\tted", "dh V\tn @U\tt V d");
result.add("de-\tnote", "dh V\tn @U t");
result.add("de-\tnotes", "dh V\tn @U t s");
result.add("de-\tnoue-\tment", "dh eI\tn u:\tm Q n");
result.add("de-\tnoun-\tces", "dh V\tn aU n\ts V z");
result.add("de-\tnoun-\tcing", "dh V\tn aU n\ts I N");
result.add("de-\tnounce", "dh V\tn aU n s");
result.add("de-\tnounced", "dh V\tn aU n s t");
result.add("de-\tnu-\tded", "dh V\tn u:\td V d");
result.add("de-\tnu-\tding", "dh V\tn u:\td I N");
result.add("de-\tnuc-\tle-\ta-\tri-\tza-\ttion", "dh i:\tn u: k\tl i:\t@r\tI\tz eI\tS V n");
result.add("de-\tnuc-\tle-\ta-\trize", "dh i:\tn u: k\tl i:\t@r\taI z");
result.add("de-\tnuc-\tle-\ta-\trized", "dh i:\tn u: k\tl i:\t@r\taI z d");
result.add("de-\tnude", "dh V\tn u: d");
result.add("de-\tnun-\tci-\ta-\ttion", "dh V\tn V n\ts i:\teI\tS V n");
result.add("de-\tnun-\tci-\ta-\ttions", "dh V\tn V n\ts i:\teI\tS V n z");
result.add("de-\tny", "dh V\tn aI");
result.add("de-\tny-\ting", "dh V\tn aI\tI N");
result.add("de-\tnys", "dh e\tn I s");
result.add("de-\tnyse", "dh e\tn aI s");
result.add("de-\to", "dh i:\t@U");
result.add("de-\to-\tdo-\trant", "dh i:\t@U\td @r\tV n t");
result.add("de-\to-\tdo-\trants", "dh i:\t@U\td @r\tV n t s");
result.add("de-\to-\txy-\tri-\tbo-\tnuc-\tle-\tic", "dh i:\tQ k\ts i:\tr aI\tb @U\tn u: k\tl eI\tI k");
result.add("de-\ton", "dh i:\tQ n");
result.add("de-\tpar-\tdieu", "dh i:\tp Q@ d\tj V");
result.add("de-\tpar-\tted", "dh V\tp Q@\tt V d");
result.add("de-\tpar-\tting", "dh V\tp Q@\tt I N");
result.add("de-\tpart", "dh V\tp Q@ t");
result.add("de-\tpart-\tmen-\tta-\tlize", "dh V\tp Q@ t\tm e n\tt V\tl aI z");
result.add("de-\tpart-\tmen-\tta-\tlized", "dh V\tp Q@ t\tm e n\tt V\tl aI z d");
result.add("de-\tpart-\tmen-\ttal", "dh V\tp Q@ t\tm e\tn V l");
result.add("de-\tpart-\tment", "dh V\tp Q@ t\tm V n t");
result.add("de-\tpen-\tded", "dh V\tp e n\td V d");
result.add("de-\tpen-\tden-\tcies", "dh V\tp e n\td V n\ts i: z");
result.add("de-\tpen-\tden-\tcy", "dh V\tp e n\td V n\ts i:");
result.add("de-\tpen-\tdence", "dh V\tp e n\td V n s");
result.add("de-\tpen-\tdent", "dh V\tp e n\td V n t");
result.add("de-\tpen-\tdents", "dh V\tp e n\td V n t s");
result.add("de-\tpen-\tding", "dh V\tp e n\td I N");
result.add("de-\tpends", "dh V\tp e n d z");
result.add("de-\tper-\tso-\tna-\tlize", "dh i:\tp @r\ts V\tn V\tl aI z");
result.add("de-\tpew", "dh V p\tj u:");
result.add("de-\tpi-\tla-\tto-\try", "dh V\tp I\tl V\tt O@\ti:");
result.add("de-\tpic-\tted", "dh V\tp I k\tt V d");
result.add("de-\tpic-\tting", "dh V\tp I k\tt I N");
result.add("de-\tpic-\ttion", "dh V\tp I k\tS V n");
result.add("de-\tpic-\ttions", "dh V\tp I k\tS V n z");
result.add("de-\tpict", "dh V\tp I k t");
result.add("de-\tpicts", "dh V\tp I k t s");
result.add("de-\tple-\tted", "dh V p\tl i:\tt V d");
result.add("de-\tple-\tting", "dh V p\tl i:\tt I N");
result.add("de-\tple-\ttion", "dh V p\tl i:\tS V n");
result.add("de-\tplete", "dh V p\tl i: t");
result.add("de-\tpletes", "dh V p\tl i: t s");
result.add("de-\tplo-\tra-\tble", "dh V p\tl O@\tV\tb V l");
result.add("de-\tplo-\tring", "dh V p\tl O@\tI N");
result.add("de-\tplo-\tya-\tble", "dh V p\tl OI\tV\tb V l");
result.add("de-\tplore", "dh V p\tl O@");
result.add("de-\tplored", "dh V p\tl O@ d");
result.add("de-\tplores", "dh V p\tl O@ z");
result.add("de-\tploy", "dh V p\tl OI");
result.add("de-\tploy-\ting", "dh V p\tl OI\tI N");
result.add("de-\tploy-\tment", "dh V p\tl OI\tm V n t");
result.add("de-\tploy-\tments", "dh V p\tl OI\tm V n t s");
result.add("de-\tployed", "dh V p\tl OI d");
result.add("de-\tploys", "dh V p\tl OI z");
result.add("de-\tpo-\tpu-\tla-\ttion", "dh V\tp Q p\tj V\tl eI\tS V n");
result.add("de-\tpo-\tpu-\tlate", "dh i:\tp Q p\tj V\tl eI t");
result.add("de-\tpo-\tsi-\tta-\try", "dh V\tp Q\tz V\tt e@\ti:");
result.add("de-\tpo-\tsi-\tted", "dh V\tp Q\tz V\tt V d");
result.add("de-\tpo-\tsi-\tting", "dh V\tp Q\tz V\tt I N");
result.add("de-\tpo-\tsi-\ttio-\tnal", "dh e\tp V\tz I\tS V\tn V l");
result.add("de-\tpo-\tsi-\ttion", "dh e\tp V\tz I\tS V n");
result.add("de-\tpo-\tsi-\ttions", "dh e\tp V\tz I\tS V n z");
result.add("de-\tpo-\tsi-\tto-\try", "dh V\tp Q\tz V\tt O@\ti:");
result.add("de-\tpo-\tsi-\ttor", "dh V\tp Q\tz V\tt @r");
result.add("de-\tpo-\tsi-\ttors", "dh V\tp Q\tz V\tt @r z");
result.add("de-\tpo-\tsi-\ttor's", "dh V\tp Q\tz V\tt @r z");
result.add("de-\tpo-\tsit", "dh V\tp Q\tz V t");
result.add("de-\tpo-\tsits", "dh V\tp Q\tz V t s");
result.add("de-\tpor-\tta-\ttion", "dh i:\tp O@\tt eI\tS V n");
result.add("de-\tpor-\tta-\ttions", "dh i:\tp O@\tt eI\tS V n z");
result.add("de-\tpor-\tted", "dh V\tp O@\tt V d");
result.add("de-\tpor-\ttee", "dh i:\tp O@\tt i:");
result.add("de-\tpor-\ttees", "dh i:\tp O@\tt i: z");
result.add("de-\tpor-\tting", "dh V\tp O@\tt I N");
result.add("de-\tport", "dh V\tp O@ t");
result.add("de-\tport-\tment", "dh V\tp O@ t\tm V n t");
result.add("de-\tpose", "dh V\tp @U z");
result.add("de-\tposed", "dh V\tp @U z d");
result.add("de-\tpot", "dh i:\tp @U");
result.add("de-\tpots", "dh i:\tp @U z");
result.add("de-\tpot's", "dh i:\tp @U z");
result.add("de-\tpoy", "dh e\tp OI");
result.add("de-\tpu-\tties", "dh e p\tj V\tt i: z");
result.add("de-\tpu-\ttize", "dh e p\tj V\tt aI z");
result.add("de-\tpu-\ttized", "dh e p\tj V\tt aI z d");
result.add("de-\tpu-\tty", "dh e p\tj V\tt i:");
result.add("de-\tpue", "dh V p\tj u:");
result.add("de-\tpuy", "dh V p\tw i:");
result.add("de-\trai-\tling", "dh I@\teI\tl I N");
result.add("de-\trail", "dh I@\teI l");
result.add("de-\trail-\tment", "dh I@\teI l\tm V n t");
result.add("de-\trail-\tments", "dh I@\teI l\tm V n t s");
result.add("de-\trailed", "dh I@\teI l d");
result.add("de-\trails", "dh I@\teI l z");
result.add("de-\trange", "dh I@\teI n dZ");
result.add("de-\tranged", "dh I@\teI n dZ d");
result.add("de-\tre-\tgu-\tla-\tted", "dh i:\tr e g\tj V\tl eI\tt V d");
result.add("de-\tre-\tgu-\tla-\tting", "dh i:\tr e g\tj V\tl eI\tt I N");
result.add("de-\tre-\tgu-\tla-\ttion", "dh i:\tr e g\tj V\tl eI\tS V n");
result.add("de-\tre-\tgu-\tla-\tto-\try", "dh i:\tr e g\tj V\tl V\tt O@\ti:");
result.add("de-\tre-\tgu-\tla-\ttor", "dh i:\tr e g\tj V\tl eI\tt @r");
result.add("de-\tre-\tgu-\tla-\ttors", "dh i:\tr e g\tj V\tl eI\tt @r z");
result.add("de-\tre-\tgu-\tlate", "dh i:\tr e g\tj V\tl eI t");
result.add("de-\tre-\tlic-\ttion", "dh e@\tV\tl I k\tS V n");
result.add("de-\tre-\tlict", "dh e@\tV\tl I k t");
result.add("de-\tre-\tlicts", "dh e@\tV\tl I k t s");
result.add("de-\trek", "dh e@\tI k");
result.add("de-\tri-\tded", "dh I@\taI\td V d");
result.add("de-\tri-\tding", "dh I@\taI\td I N");
result.add("de-\tri-\tsion", "dh @r\tI\tZ V n");
result.add("de-\tri-\tsive", "dh @r\tI\ts I v");
result.add("de-\tri-\tsive-\tly", "dh @r\tI\ts I v\tl i:");
result.add("de-\tri-\tva-\ttion", "dh e@\tV\tv eI\tS V n");
result.add("de-\tri-\tva-\ttive", "dh @r\tI\tv V\tt I v");
result.add("de-\tri-\tva-\ttives", "dh @r\tI\tv V\tt I v z");
result.add("de-\tri-\tving", "dh @r\taI\tv I N");
result.add("de-\trick", "dh e@\tI k");
result.add("de-\tride", "dh I@\taI d");
result.add("de-\trides", "dh I@\taI d z");
result.add("de-\trin-\tger", "dh e@\tI n\tdZ @r");
result.add("de-\tring", "dh I@\tI N");
result.add("de-\trive", "dh @r\taI v");
result.add("de-\trived", "dh @r\taI v d");
result.add("de-\trives", "dh @r\taI v z");
result.add("de-\tro-\tga-\tto-\try", "dh @r\tQ\tg V\tt O@\ti:");
result.add("de-\tro-\tsa", "dh I@\t@U\ts V");
result.add("de-\troo", "dh e@\tu:");
result.add("de-\truy-\tter", "dh I@\taI\tt @r");
result.add("de-\tsa-\ti", "dh eI\ts Q\ti:");
result.add("de-\tsa-\tli-\tna-\ttion", "dh i:\ts eI\tl I\tn eI\tS V n");
result.add("de-\tsa-\tli-\tni-\tza-\ttion", "dh i:\ts eI\tl I\tn I\tz eI\tS V n");
result.add("de-\tsan-\ttis", "dh eI\ts Q n\tt I s");
result.add("de-\tse-\tret", "dh e\ts @r\te t");
result.add("de-\tsec-\tra-\tted", "dh e\tz V k\tr eI\tt V d");
result.add("de-\tsec-\tra-\ttion", "dh e\ts V k\tr eI\tS V n");
result.add("de-\tsec-\tra-\ttions", "dh e\ts V k\tr eI\tS V n z");
result.add("de-\tsec-\trate", "dh e\tz V k\tr eI t");
result.add("de-\tseg-\tre-\tga-\tted", "dh i:\ts e g\tr I\tg eI\tt V d");
result.add("de-\tseg-\tre-\tga-\ttion", "dh i:\ts e g\tr V\tg eI\tS V n");
result.add("de-\tseg-\tre-\tgate", "dh i:\ts e g\tr V\tg eI t");
result.add("de-\tsen-\tsi-\tti-\tzing", "dh V\ts e n\ts V\tt aI\tz I N");
result.add("de-\tsen-\tsi-\ttize", "dh V\ts e n\ts V\tt aI z");
result.add("de-\tsen-\tsi-\ttized", "dh V\ts e n\ts V\tt aI z d");
result.add("de-\tser-\tted", "dh V\tz @r\tt V d");
result.add("de-\tser-\tter", "dh e\tz @r\tt @r");
result.add("de-\tser-\tters", "dh e\tz @r\tt @r z");
result.add("de-\tser-\tting", "dh e\tz @r\tt I N");
result.add("de-\tser-\ttion", "dh V\tz @r\tS V n");
result.add("de-\tser-\ttions", "dh V\tz @r\tS V n z");
result.add("de-\tser-\tved-\tly", "dh V\tz @r\tv V d\tl i:");
result.add("de-\tser-\tving", "dh V\tz @r\tv I N");
result.add("de-\tsert", "dh e\tz @r t");
result.add("de-\tserts", "dh e\tz @r t s");
result.add("de-\tserve", "dh V\tz @r v");
result.add("de-\tserved", "dh V\tz @r v d");
result.add("de-\tserves", "dh V\tz @r v z");
result.add("de-\tsha", "dh e\tS V");
result.add("de-\tsi", "dh e\tz i:");
result.add("de-\tsi-\tmo-\tne", "dh V\ts i:\tm @U\tn i:");
result.add("de-\tsi-\tr-\ting", "dh V\tz aI\t@r\tI N");
result.add("de-\tsi-\tra-\tbi-\tli-\tty", "dh V\tz aI\tr V\tb I\tl V\tt i:");
result.add("de-\tsi-\tra-\tble", "dh V\tz aI\tr V\tb V l");
result.add("de-\tsi-\tre", "dh V\tz aI\t@r");
result.add("de-\tsi-\tred", "dh V\tz aI\t@r d");
result.add("de-\tsi-\tree", "dh e\ts aI\tr i:");
result.add("de-\tsi-\tres", "dh V\tz aI\t@r z");
result.add("de-\tsi-\trous", "dh V\tz aI\tr V s");
result.add("de-\tsic-\tca-\ttion", "dh e\ts I\tk eI\tS V n");
result.add("de-\tsig-\tna-\tted", "dh e\tz I g\tn eI\tt I d");
result.add("de-\tsig-\tna-\tting", "dh e\tz I g\tn eI\tt I N");
result.add("de-\tsig-\tna-\ttion", "dh e\tz I g\tn eI\tS V n");
result.add("de-\tsig-\tna-\ttions", "dh e\tz I g\tn eI\tS V n z");
result.add("de-\tsig-\tnate", "dh e\tz I g\tn eI t");
result.add("de-\tsig-\tnates", "dh e\tz I g\tn eI t s");
result.add("de-\tsig-\tnee", "dh e\tz I g\tn i:");
result.add("de-\tsig-\tnees", "dh e\tz I g\tn i: z");
result.add("de-\tsig-\tner", "dh V\tz aI\tn @r");
result.add("de-\tsig-\tners", "dh V\tz aI\tn @r z");
result.add("de-\tsig-\tner's", "dh V\tz aI\tn @r z");
result.add("de-\tsig-\tning", "dh V\tz aI\tn I N");
result.add("de-\tsign", "dh V\tz aI n");
result.add("de-\tsigned", "dh V\tz aI n d");
result.add("de-\tsigns", "dh V\tz aI n z");
result.add("de-\tsist", "dh V\ts I s t");
result.add("de-\tso-\tla-\ttion", "dh e\ts V\tl eI\tS V n");
result.add("de-\tso-\tlate", "dh e\ts V\tl V t");
result.add("de-\tso-\tto", "dh I\ts @U\tt @U");
result.add("de-\tspai-\tring", "dh I s\tp e@\tI N");
result.add("de-\tspair", "dh I s\tp e@");
result.add("de-\tspaired", "dh I s\tp e@ d");
result.add("de-\tspairs", "dh I s\tp e@ z");
result.add("de-\tta-\tcha-\tble", "dh V\tt {\ttS V\tb V l");
result.add("de-\tta-\tches", "dh V\tt {\ttS V z");
result.add("de-\ttach", "dh V\tt { tS");
result.add("de-\ttach-\tment", "dh V\tt { tS\tm V n t");
result.add("de-\ttached", "dh V\tt { tS t");
result.add("de-\ttai-\tler", "dh i:\tt eI\tl @r");
result.add("de-\ttai-\tling", "dh V\tt eI\tl I N");
result.add("de-\ttai-\tnee", "dh i:\tt eI\tn i:");
result.add("de-\ttai-\tnees", "dh V\tt eI\tn i: z");
result.add("de-\ttai-\tning", "dh V\tt eI\tn I N");
result.add("de-\ttail", "dh V\tt eI l");
result.add("de-\ttailed", "dh V\tt eI l d");
result.add("de-\ttails", "dh V\tt eI l z");
result.add("de-\ttain", "dh V\tt eI n");
result.add("de-\ttained", "dh V\tt eI n d");
result.add("de-\ttar", "dh i:\tt Q@");
result.add("d'e-\ttat", "dh e\tt { t");
result.add("de-\tte-\tri-\to-\tra-\tted", "dh V\tt I@\ti:\t@r\teI\tt V d");
result.add("de-\tte-\tri-\to-\tra-\tting", "dh V\tt I@\ti:\t@r\teI\tt I N");
result.add("de-\tte-\tri-\to-\tra-\ttion", "dh V\tt I@\ti:\t@r\teI\tS V n");
result.add("de-\tte-\tri-\to-\trate", "dh V\tt I@\ti:\t@r\teI t");
result.add("de-\tte-\tri-\to-\trates", "dh V\tt I@\ti:\t@r\teI t s");
result.add("de-\ttec-\tta-\tble", "dh V\tt e k\tt V\tb V l");
result.add("de-\ttec-\tted", "dh V\tt e k\tt V d");
result.add("de-\ttec-\tting", "dh V\tt e k\tt I N");
result.add("de-\ttec-\ttion", "dh V\tt e k\tS V n");
result.add("de-\ttec-\ttive", "dh V\tt e k\tt I v");
result.add("de-\ttec-\ttives", "dh V\tt e k\tt I v z");
result.add("de-\ttec-\ttive's", "dh V\tt e k\tt I v z");
result.add("de-\ttec-\ttor", "dh V\tt e k\tt @r");
result.add("de-\ttec-\ttors", "dh V\tt e k\tt @r z");
result.add("de-\ttect", "dh V\tt e k t");
result.add("de-\ttects", "dh V\tt e k t s");
result.add("de-\tten-\ttion", "dh V\tt e n\tS V n");
result.add("de-\tten-\ttions", "dh V\tt e n\tS V n z");
result.add("de-\ttente", "dh eI\tt Q n t");
result.add("de-\tter", "dh V\tt @r");
result.add("de-\tter-\tgent", "dh V\tt @r\tdZ V n t");
result.add("de-\tter-\tgents", "dh V\tt @r\tdZ V n t s");
result.add("de-\tter-\tment", "dh V\tt @r\tm V n t");
result.add("de-\tter-\tmi-\tna-\tble", "dh V\tt @r\tm V\tn V\tb V l");
result.add("de-\tter-\tmi-\tna-\ttion", "dh V\tt @r\tm V\tn eI\tS V n");
result.add("de-\tter-\tmi-\tna-\ttions", "dh V\tt @r\tm V\tn eI\tS V n z");
result.add("de-\tter-\tmi-\tna-\ttion's", "dh V\tt @r\tm V\tn eI\tS V n z");
result.add("de-\tter-\tmi-\tna-\ttive", "dh V\tt @r\tm V\tn V\tt I v");
result.add("de-\tter-\tmi-\tnant", "dh V\tt @r\tm V\tn V n t");
result.add("de-\tter-\tmi-\tnants", "dh V\tt @r\tm V\tn V n t s");
result.add("de-\tter-\tmi-\tnate", "dh V\tt @r\tm V\tn eI t");
result.add("de-\tter-\tmi-\tned-\tly", "dh V\tt @r\tm V\tn V d\tl i:");
result.add("de-\tter-\tmi-\tni-\tsm", "dh V\tt @r\tm V\tn I\tz V m");
result.add("de-\tter-\tmi-\tning", "dh V\tt @r\tm V\tn I N");
result.add("de-\tter-\tmi-\tnis-\ttic", "dh V\tt @r\tm V\tn I s\tt I k");
result.add("de-\tter-\tmi-\tnist", "dh V\tt @r\tm V\tn V s t");
result.add("de-\tter-\tmine", "dh V\tt @r\tm V n");
result.add("de-\tter-\tmined", "dh V\tt @r\tm V n d");
result.add("de-\tter-\tmines", "dh V\tt @r\tm V n z");
result.add("de-\tter-\trence", "dh V\tt @r\tV n s");
result.add("de-\tter-\trent", "dh V\tt @r\tr V n t");
result.add("de-\tter-\trents", "dh V\tt @r\tV n t s");
result.add("de-\tter-\tring", "dh V\tt @r\tI N");
result.add("de-\tterred", "dh V\tt @r d");
result.add("de-\tters", "dh V\tt @r z");
result.add("de-\ttes-\tted", "dh V\tt e s\tt V d");
result.add("de-\ttest", "dh V\tt e s t");
result.add("de-\tto-\tna-\tted", "dh e\tt V\tn eI\tt V d");
result.add("de-\tto-\tna-\tting", "dh e\tt V\tn eI\tt I N");
result.add("de-\tto-\tna-\ttion", "dh e\tt V\tn eI\tS V n");
result.add("de-\tto-\tna-\ttions", "dh e\tt V\tn eI\tS V n z");
result.add("de-\tto-\tna-\ttor", "dh e\tt V\tn eI\tt @r");
result.add("de-\tto-\tna-\ttors", "dh e\tt V\tn eI\tt @r z");
result.add("de-\tto-\tnate", "dh e\tt V\tn eI t");
result.add("de-\tto-\txi-\tca-\ttion", "dh V\tt Q k\ts I\tk eI\tS V n");
result.add("de-\tto-\txi-\tfi-\tca-\ttion", "dh V\tt Q k\ts V\tf I\tk eI\tS V n");
result.add("de-\tto-\txi-\tfy", "dh V\tt Q k\ts V\tf aI");
result.add("de-\ttour", "dh I\tt U@");
result.add("de-\ttoured", "dh i:\tt U@ d");
result.add("de-\ttours", "dh I\tt U@ z");
result.add("de-\ttox", "dh i:\tt Q k s");
result.add("d'e-\ttre", "dh e t\tr i:");
result.add("de-\tva", "dh eI\tv V");
result.add("de-\tva-\tlu-\ta-\tted", "dh I\tv { l\tj u:\teI\tt V d");
result.add("de-\tva-\tlu-\ta-\ttion", "dh I\tv { l\tj u:\teI\tS V n");
result.add("de-\tva-\tlu-\ta-\ttions", "dh i:\tv { l\tj u:\teI\tS V n z");
result.add("de-\tva-\tlu-\tate", "dh I\tv { l\tj u:\teI t");
result.add("de-\tva-\tlu-\ting", "dh I\tv { l\tj u:\tI N");
result.add("de-\tva-\tlue", "dh I\tv { l\tj u:");
result.add("de-\tva-\tlued", "dh I\tv { l\tj u: d");
result.add("de-\tva-\tney", "dh e\tv V\tn i:");
result.add("de-\tval", "dh I\tv Q l");
result.add("de-\tvall", "dh eI\tv Q l");
result.add("de-\tvan", "dh e\tv V n");
result.add("de-\tvas-\tta-\tted", "dh e\tv V s\tt eI\tt V d");
result.add("de-\tvas-\tta-\tting", "dh e\tv V s\tt eI\tt I N");
result.add("de-\tvas-\tta-\tting-\tly", "dh e\tv V s\tt eI\tt I N\tl i:");
result.add("de-\tvas-\tta-\ttion", "dh e\tv V s\tt eI\tS V n");
result.add("de-\tvas-\ttate", "dh e\tv V s\tt eI t");
result.add("de-\tvaul", "dh I\tv @U l");
result.add("de-\tvault", "dh I\tv @U");
result.add("de-\tve-\tlo-\tpa-\tble", "dh I\tv e\tl V\tp V\tb V l");
result.add("de-\tve-\tlo-\tper", "dh I\tv e\tl V\tp @r");
result.add("de-\tve-\tlo-\tpers", "dh I\tv e\tl V\tp @r z");
result.add("de-\tve-\tlo-\tper's", "dh I\tv e\tl V\tp @r z");
result.add("de-\tve-\tlo-\tping", "dh I\tv e\tl V\tp I N");
result.add("de-\tve-\tlop", "dh I\tv e\tl V p");
result.add("de-\tve-\tlop-\tmen-\ttal", "dh I\tv e\tl V p\tm e n\tt V l");
result.add("de-\tve-\tlop-\tmen-\ttal-\tly", "dh I\tv e\tl V p\tm e n\tt V\tl i:");
result.add("de-\tve-\tlop-\tment", "dh I\tv e\tl V p\tm V n t");
result.add("de-\tve-\tlop-\tments", "dh I\tv e\tl V p\tm V n t s");
result.add("de-\tve-\tlop-\tment's", "dh I\tv e\tl V p\tm V n t s");
result.add("de-\tve-\tloped", "dh I\tv e\tl V p t");
result.add("de-\tve-\tlops", "dh I\tv e\tl V p s");
result.add("de-\tve-\treux", "dh e\tv @r\tu:");
result.add("de-\tver", "dh i:\tv @r");
result.add("de-\tvers", "dh e\tv @r z");
result.add("de-\tvi-\ta-\tted", "dh i:\tv i:\teI\tt V d");
result.add("de-\tvi-\ta-\ttion", "dh i:\tv i:\teI\tS V n");
result.add("de-\tvi-\ta-\ttions", "dh i:\tv i:\teI\tS V n z");
result.add("de-\tvi-\tan-\tcy", "dh i:\tv i:\te n\ts i:");
result.add("de-\tvi-\tance", "dh i:\tv i:\tV n s");
result.add("de-\tvi-\tant", "dh i:\tv i:\tV n t");
result.add("de-\tvi-\tants", "dh i:\tv i:\tV n t s");
result.add("de-\tvi-\tate", "dh i:\tv i:\teI t");
result.add("de-\tvi-\tates", "dh i:\tv i:\teI t s");
result.add("de-\tvi-\tces", "dh I\tv aI\ts V z");
result.add("de-\tvi-\tce's", "dh I\tv aI\ts V z");
result.add("de-\tvi-\tlish-\tly", "dh e\tv I\tl I S\tl i:");
result.add("de-\tvi-\tous", "dh i:\tv i:\tV s");
result.add("de-\tvi-\tses", "dh I\tv aI\tz V z");
result.add("de-\tvi-\tsing", "dh I\tv aI\tz I N");
result.add("de-\tvice", "dh I\tv aI s");
result.add("de-\tvil", "dh e\tv I l");
result.add("de-\tvil-\twood", "dh e\tv I l\tw U d");
result.add("de-\tvilish", "dh e v\tl I S");
result.add("de-\tville", "dh V\tv I l");
result.add("de-\tville's", "dh V\tv I l z");
result.add("de-\tvils", "dh e\tv I l z");
result.add("de-\tvil's", "dh e\tv I l z");
result.add("de-\tvin", "dh e\tv I n");
result.add("de-\tvine", "dh V\tv aI n");
result.add("de-\tvise", "dh I\tv aI z");
result.add("de-\tvised", "dh I\tv aI z d");
result.add("de-\tvitt", "dh I\tv I t");
result.add("de-\tvo-\tlu-\ttion", "dh e\tv V\tl u:\tS V n");
result.add("de-\tvo-\tna", "dh e\tv V\tn V");
result.add("de-\tvo-\tni-\tan", "dh I\tv @U\tn i:\tV n");
result.add("de-\tvo-\tted", "dh I\tv @U\tt V d");
result.add("de-\tvo-\ttee", "dh e\tv V\tt i:");
result.add("de-\tvo-\ttees", "dh e\tv V\tt i: z");
result.add("de-\tvo-\tting", "dh I\tv @U\tt I N");
result.add("de-\tvo-\ttio-\tnal", "dh I\tv @U\tS V\tn V l");
result.add("de-\tvo-\ttion", "dh I\tv @U\tS V n");
result.add("de-\tvo-\tto", "dh I\tv @U\tt @U");
result.add("de-\tvo-\tur", "dh I\tv aU\t@r");
result.add("de-\tvoid", "dh I\tv OI d");
result.add("de-\tvol", "dh e\tv O: l");
result.add("de-\tvolve", "dh I\tv Q l v");
result.add("de-\tvolved", "dh I\tv Q l v d");
result.add("de-\tvon", "dh e\tv V n");
result.add("de-\tvon-\tshire", "dh I\tv Q n\tS aI r");
result.add("de-\tvore", "dh e\tv @r");
result.add("de-\tvote", "dh I\tv @U t");
result.add("de-\tvotes", "dh I\tv @U t s");
result.add("de-\tvou-\tr-\ting", "dh I\tv aU\t@r\tI N");
result.add("de-\tvou-\tred", "dh I\tv aU\t@r d");
result.add("de-\tvou-\trs", "dh I\tv aU\t@r z");
result.add("de-\tvout", "dh I\tv aU t");
result.add("de-\tvout-\tly", "dh I\tv aU t\tl i:");
result.add("de-\twan", "dh u:\tV n");
result.add("de-\twar", "dh u:\t@r");
result.add("de-\twar's", "dh u:\t@r z");
result.add("de-\twart", "dh u:\tQ@ t");
result.add("de-\twayne", "dh I\tw eI n");
result.add("de-\twees", "dh u:\ti: z");
result.add("de-\tweese", "dh u:\ti: z");
result.add("de-\twey", "dh u:\ti:");
result.add("de-\twey's", "dh u:\ti: z");
result.add("de-\twhirst", "dh e\tw @r s t");
result.add("de-\twhurst", "dh e\tw @r s t");
result.add("de-\twing", "dh u:\tI N");
result.add("de-\twitt", "dh V\tw I t");
result.add("de-\twy", "dh u:\ti:");
result.add("de-\tyoung", "dh e\tj V N");
result.add("dea-\tco-\tness", "dh i:\tk V\tn V s");
result.add("dea-\tcon", "dh i:\tk V n");
result.add("dea-\tcons", "dh i:\tk V n z");
result.add("dea-\tde-\tning", "dh e\td V\tn I N");
result.add("dea-\tden", "dh e\td V n");
result.add("dea-\tder", "dh e\td @r");
result.add("dea-\tdy", "dh e\td i:");
result.add("dea-\tfe-\tning", "dh e\tf V\tn I N");
result.add("dea-\tfen", "dh e\tf V n");
result.add("dea-\tkin", "dh i:\tk I n");
result.add("dea-\tler", "dh i:\tl @r");
result.add("dea-\tler-\tship", "dh i:\tl @r\tS I p");
result.add("dea-\tler-\tships", "dh i:\tl @r\tS I p s");
result.add("dea-\tler-\tship's", "dh i:\tl @r\tS I p s");
result.add("dea-\tlers", "dh i:\tl @r z");
result.add("dea-\tler's", "dh i:\tl @r z");
result.add("dea-\tling", "dh i:\tl I N");
result.add("dea-\tlings", "dh i:\tl I N z");
result.add("dea-\tner", "dh i:\tn @r");
result.add("dea-\trest", "dh I@\tV s t");
result.add("dea-\tring", "dh I@\tI N");
result.add("dea-\try", "dh I@\ti:");
result.add("dea-\tver", "dh i:\tv @r");
result.add("dea-\tver's", "dh i:\tv @r z");
result.add("dead", "dh e d");
result.add("dead-\tbeat", "dh e d\tb i: t");
result.add("dead-\tbeats", "dh e d\tb i: t s");
result.add("dead-\tbolt", "dh e d\tb @U l t");
result.add("dead-\thead", "dh e d\th e d");
result.add("dead-\theads", "dh e d\th e d z");
result.add("dead-\tli-\ter", "dh e d\tl i:\t@r");
result.add("dead-\tli-\test", "dh e d\tl i:\tV s t");
result.add("dead-\tli-\tness", "dh e d\tl i:\tn V s");
result.add("dead-\tline", "dh e d\tl aI n");
result.add("dead-\tlines", "dh e d\tl aI n z");
result.add("dead-\tlock", "dh e d\tl Q k");
result.add("dead-\tlocked", "dh e d\tl Q k t");
result.add("dead-\tlocks", "dh e d\tl Q k s");
result.add("dead-\tly", "dh e d\tl i:");
result.add("dead-\tpan", "dh e d\tp { n");
result.add("dead-\tweight", "dh e d\tw eI t");
result.add("dead-\twood", "dh e d\tw U d");
result.add("deaf", "dh e f");
result.add("deaf-\tness", "dh e f\tn V s");
result.add("deal", "dh i: l");
result.add("deal-\tfish", "dh i: l\tf I S");
result.add("deal-\tma-\tker", "dh i: l\tm eI\tk @r");
result.add("deal-\tma-\tkers", "dh i: l\tm eI\tk @r z");
result.add("deal-\tma-\tking", "dh i: l\tm eI\tk I N");
result.add("deale", "dh i: l");
result.add("deals", "dh i: l z");
result.add("dealt", "dh e l t");
result.add("dean", "dh i: n");
result.add("deane", "dh i: n");
result.add("deans", "dh i: n z");
result.add("dean's", "dh i: n z");
result.add("dear", "dh I@");
result.add("dear-\tborn", "dh I@\tb O@ n");
result.add("dear-\tden", "dh I@\td V n");
result.add("dear-\tly", "dh I@\tl i:");
result.add("dear-\tman", "dh I@\tm V n");
result.add("dearth", "dh @r T");
result.add("deas", "dh i: z");
result.add("death", "dh e T");
result.add("death-\tbed", "dh e T\tb e d");
result.add("death-\tly", "dh e T\tl i:");
result.add("death-\tshot", "dh e T\tS O: t");
result.add("death-\twatch", "dh e T\tw Q tS");
result.add("deaths", "dh e T s");
result.add("death's", "dh e T s");
result.add("deb", "dh e b");
result.add("deb-\tbie", "dh e\tb i:");
result.add("deb-\tbie's", "dh e\tb i: z");
result.add("deb-\tby", "dh e\tb i:");
result.add("deb-\tlock", "dh e b\tl V k");
result.add("deb-\tra", "dh e b\tr V");
result.add("deb-\trie-\tfing", "dh V b\tr i:\tf I N");
result.add("deb-\trief", "dh V b\tr i: f");
result.add("deb-\triefed", "dh V b\tr i: f t");
result.add("deb-\tris", "dh V b\tr i:");
result.add("deb-\ttor", "dh e\tt @r");
result.add("deb-\ttors", "dh e\tt @r z");
result.add("deb-\ttor's", "dh e\tt @r z");
result.add("debes", "dh i: b z");
result.add("debo-\tra", "dh e b\tr V");
result.add("debs", "dh e b z");
result.add("debt", "dh e t");
result.add("debts", "dh e t s");
result.add("debt's", "dh e t s");
result.add("dec", "dh e k");
result.add("dec-\tca", "dh e\tk V");
result.add("dec-\tker", "dh e\tk @r");
result.add("dec-\tker's", "dh e\tk @r z");
result.add("dec-\tkert", "dh e\tk @r t");
result.add("dec-\tking", "dh e\tk I N");
result.add("dec-\tla-\tra-\ttion", "dh e k\tl @r\teI\tS V n");
result.add("dec-\tla-\tra-\ttions", "dh e k\tl @r\teI\tS V n z");
result.add("dec-\tla-\tra-\tto-\try", "dh I k\tl e@\tV\tt O@\ti:");
result.add("dec-\tla-\trant", "dh I k\tl e@\tV n t");
result.add("dec-\tla-\tring", "dh I k\tl e@\tI N");
result.add("dec-\tlaim", "dh I k\tl eI m");
result.add("dec-\tlaimed", "dh I k\tl eI m d");
result.add("dec-\tlare", "dh I k\tl e@");
result.add("dec-\tlared", "dh I k\tl e@ d");
result.add("dec-\tlares", "dh I k\tl e@ z");
result.add("dec-\tlas-\tsi-\tfied", "dh I k\tl {\ts I\tf aI d");
result.add("dec-\tlas-\tsi-\tfy", "dh I k\tl {\ts I\tf aI");
result.add("dec-\tli-\tner", "dh I k\tl aI\tn @r");
result.add("dec-\tli-\tners", "dh I k\tl aI\tn @r z");
result.add("dec-\tli-\tning", "dh I k\tl aI\tn I N");
result.add("dec-\tline", "dh I k\tl aI n");
result.add("dec-\tlined", "dh I k\tl aI n d");
result.add("dec-\tlines", "dh I k\tl aI n z");
result.add("dec-\try", "dh I k\tr aI");
result.add("dec-\try-\ting", "dh I k\tr aI\tI N");
result.add("deck", "dh e k");
result.add("deck-\tman", "dh e k\tm V n");
result.add("decked", "dh e k t");
result.add("decks", "dh e k s");
result.add("dec's", "dh e k s");
result.add("ded-\tham", "dh e\td V m");
result.add("ded-\trick", "dh e d\tr I k");
result.add("dede", "dh i: d");
result.add("dee", "dh i:");
result.add("dee-\tded", "dh i:\td V d");
result.add("dee-\tdee", "dh i:\td i:");
result.add("dee-\tdy", "dh i:\td i:");
result.add("dee-\tgan", "dh i:\tg V n");
result.add("dee-\tmer", "dh i:\tm @r");
result.add("dee-\tner", "dh i:\tn @r");
result.add("dee-\tpe-\tning", "dh i:\tp V\tn I N");
result.add("dee-\tpen", "dh i:\tp V n");
result.add("dee-\tpened", "dh i:\tp V n d");
result.add("dee-\tpens", "dh i:\tp V n z");
result.add("dee-\tper", "dh i:\tp @r");
result.add("dee-\tpest", "dh i:\tp V s t");
result.add("dee-\tring", "dh I@\tI N");
result.add("dee-\try", "dh I@\ti:");
result.add("deed", "dh i: d");
result.add("deeds", "dh i: d z");
result.add("deem", "dh i: m");
result.add("deemed", "dh i: m d");
result.add("deems", "dh i: m z");
result.add("deen", "dh i: n");
result.add("deep", "dh i: p");
result.add("deep-\tly", "dh i: p\tl i:");
result.add("deep-\twa-\tter", "dh i: p\tw O:\tt @r");
result.add("deer", "dh I@");
result.add("deer-\tfield", "dh I@\tf i: l d");
result.add("deer-\tskin", "dh I@ s\tk I n");
result.add("deere", "dh I@");
result.add("deere's", "dh I@ z");
result.add("dees", "dh i: z");
result.add("dee's", "dh i: z");
result.add("deets", "dh i: t s");
result.add("def-\tla-\tted", "dh V f\tl eI\tt V d");
result.add("def-\tla-\tting", "dh V f\tl eI\tt I N");
result.add("def-\tla-\ttio-\tna-\try", "dh V f\tl eI\tS V\tn e@\ti:");
result.add("def-\tla-\ttion", "dh V f\tl eI\tS V n");
result.add("def-\tla-\ttor", "dh V f\tl eI\tt @r");
result.add("def-\tlate", "dh V f\tl eI t");
result.add("def-\tlec-\tted", "dh V f\tl e k\tt V d");
result.add("def-\tlec-\tting", "dh V f\tl e k\tt I N");
result.add("def-\tlect", "dh V f\tl e k t");
result.add("def-\tlects", "dh V f\tl e k t s");
result.add("def-\trau-\tded", "dh V f\tr O:\td V d");
result.add("def-\trau-\tding", "dh V f\tr O:\td I N");
result.add("def-\traud", "dh V f\tr O: d");
result.add("def-\tray", "dh V f\tr eI");
result.add("def-\trays", "dh V f\tr eI z");
result.add("def-\tros-\tting", "dh V f\tr O: s\tt I N");
result.add("def-\trost", "dh V f\tr O: s t");
result.add("deft", "dh e f t");
result.add("deft-\tly", "dh e f\tt l i:");
result.add("deg-\tra-\tda-\tble", "dh I g\tr eI\td V\tb V l");
result.add("deg-\tra-\tda-\ttion", "dh e g\tr V\td eI\tS V n");
result.add("deg-\tra-\tda-\ttions", "dh e g\tr V\td eI\tS V n z");
result.add("deg-\tra-\tded", "dh I g\tr eI\td V d");
result.add("deg-\tra-\tding", "dh I g\tr eI\td I N");
result.add("deg-\trade", "dh I g\tr eI d");
result.add("deg-\trades", "dh I g\tr eI d z");
result.add("deg-\traff", "dh e g\tr V f");
result.add("deg-\tree", "dh I g\tr i:");
result.add("deg-\treed", "dh I g\tr i: d");
result.add("deg-\trees", "dh I g\tr i: z");
result.add("dei-\tbel", "dh aI\tb V l");
result.add("dei-\tdre", "dh i: d\tr V");
result.add("dei-\tdre's", "dh i: d\tr V z");
result.add("dei-\ton", "dh i:\tj Q n");
result.add("deigh-\tton", "dh eI\tt V n");
result.add("deir-\tdre", "dh i: r\td r V");
result.add("deis", "dh i: z");
result.add("dek-\tker", "dh e\tk @r");
result.add("dek-\tlerk", "dh V k\tl @r k");
result.add("del", "dh e l");
result.add("del-\tbert", "dh e l\tb @r t");
result.add("del-\tcam-\tbre", "dh e l\tk Q m\tb r i:");
result.add("del-\tci-\tne", "dh e l\ttS i:\tn i:");
result.add("del-\tco", "dh e l\tk @U");
result.add("del-\tfi-\tne", "dh e l\tf i:\tn i:");
result.add("del-\tga-\tdo", "dh e l\tg Q\td @U");
result.add("del-\thi", "dh e\tl i:");
result.add("del-\thi's", "dh e\tl i: z");
result.add("del-\tla", "dh e\tl V");
result.add("del-\tler", "dh e\tl @r");
result.add("del-\tma", "dh e l\tm V");
result.add("del-\tmar", "dh e l\tm @r");
result.add("del-\tmar-\tva", "dh e l\tm Q@\tv V");
result.add("del-\tmer", "dh e l\tm @r");
result.add("del-\tmo-\tni-\tco", "dh e l\tm Q\tn i:\tk @U");
result.add("del-\tmont", "dh eI l\tm @U n t");
result.add("del-\tmore", "dh e l\tm O@");
result.add("del-\tphi", "dh e l\tf aI");
result.add("del-\tphi-\ta", "dh e l\tf i:\tV");
result.add("del-\tphi-\tna", "dh e l\tf i:\tn V");
result.add("del-\tphi-\tne", "dh e l\tf i:\tn i:");
result.add("del-\tphic", "dh e l\tf I k");
result.add("del-\tray", "dh e l\tr eI");
result.add("del-\tri-\to", "dh e l\tr i:\t@U");
result.add("del-\tta", "dh e l\tt V");
result.add("del-\tta-\tic", "dh e l\tt eI\tI k");
result.add("del-\tta's", "dh e l\tt V z");
result.add("del-\tval-\tle", "dh e l\tv {\tl i:");
result.add("del-\tval-\tle's", "dh e l\tv {\tl i: z");
result.add("del-\tving", "dh e l\tv I N");
result.add("del-\twin", "dh e l\tw I n");
result.add("del-\twyn", "dh e l\tw I n");
result.add("delfs", "dh e l f s");
result.add("delft", "dh e l f t");
result.add("delft-\tware", "dh e l\tf t w e@");
result.add("dell", "dh e l");
result.add("delle", "dh e l");
result.add("dell's", "dh e l z");
result.add("delp", "dh e l p");
result.add("delph", "dh e l f");
result.add("delve", "dh e l v");
result.add("delved", "dh e l v d");
result.add("delves", "dh e l v z");
result.add("dem-\tbow-\tski", "dh e m\tb O: f\ts k i:");
result.add("dem-\tjan-\tjuk", "dh e m\tj Q n\tj u: k");
result.add("dem-\tjan-\tjuk's", "dh e m\tj Q n\tj u: k s");
result.add("dem-\tmer", "dh e\tm @r");
result.add("demp-\tsey", "dh e m\tp s i:");
result.add("demps-\tter", "dh e m\tp s t @r");
result.add("den", "dh e n");
result.add("den-\tbo", "dh i: n\tb @U");
result.add("den-\tby", "dh e n\tb i:");
result.add("den-\tham", "dh e\tn V m");
result.add("den-\tman", "dh e n\tm V n");
result.add("den-\tmark", "dh e n\tm Q@ k");
result.add("den-\tmark's", "dh e n\tm Q@ k s");
result.add("den-\tnard", "dh V\tn Q@ d");
result.add("den-\tnett", "dh e\tn V t");
result.add("den-\tney", "dh e\tn i:");
result.add("den-\tni-\tson", "dh e\tn V\ts V n");
result.add("den-\tnie", "dh e\tn i:");
result.add("den-\tning", "dh e\tn I N");
result.add("den-\tnis", "dh e\tn I s");
result.add("den-\tnis-\tton", "dh e\tn V s\tt Q n");
result.add("den-\tny", "dh e\tn i:");
result.add("den-\tny's", "dh e\tn i: z");
result.add("den-\tser", "dh e n\ts @r");
result.add("den-\tsest", "dh e n\ts V s t");
result.add("den-\tsi-\tties", "dh e n\ts I\tt i: z");
result.add("den-\tsi-\tto-\tme-\tter", "dh e n\ts I\tt Q\tm V\tt @r");
result.add("den-\tsi-\tty", "dh e n\ts I\tt i:");
result.add("den-\ttal", "dh e n\tt V l");
result.add("den-\ttals", "dh e n\tt V l z");
result.add("den-\tted", "dh e n\tt I d");
result.add("den-\tti-\ttion", "dh e n\tt I\tS V n");
result.add("den-\ttin", "dh e n\tt I n");
result.add("den-\ttine", "dh e n\tt i: n");
result.add("den-\tting", "dh e n\tt I N");
result.add("den-\ttist", "dh e n\tt I s t");
result.add("den-\ttist-\try", "dh e n\tt I s\tt r i:");
result.add("den-\ttists", "dh e n\tt I s t s");
result.add("den-\ttist's", "dh e n\tt I s t s");
result.add("den-\tton", "dh e n\tt V n");
result.add("den-\tture", "dh e n\ttS @r");
result.add("den-\ttures", "dh e n\ttS @r z");
result.add("den-\tver", "dh e n\tv @r");
result.add("den-\tver's", "dh e n\tv @r z");
result.add("den-\tzil", "dh e n\tz I l");
result.add("dend-\tri-\ttic", "dh e n\td r I\tt I k");
result.add("dend-\troch-\tro-\tno-\tlo-\tgy", "dh e n\td r @U k\tr V\tn Q\tl V\tdZ i:");
result.add("denes", "dh i: n z");
result.add("deng", "dh e N");
result.add("deng's", "dh e N z");
result.add("dengue", "dh e n g");
result.add("denn", "dh e n");
result.add("dens", "dh e n z");
result.add("dens-\tmore", "dh i: n\ts m O@");
result.add("dense", "dh e n s");
result.add("dense-\tly", "dh e n\ts l i:");
result.add("dent", "dh e n t");
result.add("dente", "dh e n t");
result.add("dents", "dh e n t s");
result.add("dep-\tra-\tva-\ttion", "dh e p\tr V\tv eI\tS V n");
result.add("dep-\tra-\tvi-\tty", "dh V p\tr {\tv V\tt i:");
result.add("dep-\trave", "dh i: p\tr eI v");
result.add("dep-\traved", "dh i: p\tr eI v d");
result.add("dep-\tre-\tca-\tting", "dh e p\tr V\tk eI\tt I N");
result.add("dep-\tre-\tcate", "dh e p\tr V\tk eI t");
result.add("dep-\tre-\tci-\ta-\tted", "dh V p\tr i:\tS i:\teI\tt V d");
result.add("dep-\tre-\tci-\ta-\tting", "dh V p\tr i:\tS i:\teI\tt I N");
result.add("dep-\tre-\tci-\ta-\ttion", "dh V p\tr i:\tS i:\teI\tS V n");
result.add("dep-\tre-\tci-\ta-\ttions", "dh V p\tr i:\tS i:\teI\tS V n z");
result.add("dep-\tre-\tci-\tate", "dh V p\tr i:\tS i:\teI t");
result.add("dep-\tre-\tci-\tates", "dh V p\tr i:\tS i:\teI t s");
result.add("dep-\tre-\tcia-\tble", "dh V p\tr I\tS V\tb V l");
result.add("dep-\tre-\tda-\ttion", "dh e p\tr V\td eI\tS V n");
result.add("dep-\tre-\tda-\ttions", "dh e p\tr V\td eI\tS V n z");
result.add("dep-\tree", "dh V p\tr i:");
result.add("dep-\tres-\tsant", "dh V p\tr e\ts V n t");
result.add("dep-\tres-\tsants", "dh V p\tr e\ts V n t s");
result.add("dep-\tres-\tses", "dh V p\tr e\ts V z");
result.add("dep-\tres-\tsing", "dh V p\tr e\ts I N");
result.add("dep-\tres-\tsing-\tly", "dh V p\tr e\ts I N\tl i:");
result.add("dep-\tres-\tsion", "dh V p\tr e\tS V n");
result.add("dep-\tres-\tsions", "dh V p\tr e\tS V n z");
result.add("dep-\tres-\tsive", "dh V p\tr e\ts I v");
result.add("dep-\tres-\tsu-\trize", "dh V p\tr e\tS @r\taI z");
result.add("dep-\tres-\tsu-\trized", "dh V p\tr e\tS @r\taI z d");
result.add("dep-\tress", "dh V p\tr e s");
result.add("dep-\tressed", "dh V p\tr e s t");
result.add("dep-\trez", "dh eI p\tr e z");
result.add("dep-\tri-\tva-\ttion", "dh e p\tr I\tv eI\tS V n");
result.add("dep-\tri-\tva-\ttions", "dh e p\tr I\tv eI\tS V n z");
result.add("dep-\tri-\tving", "dh V p\tr aI\tv I N");
result.add("dep-\trive", "dh V p\tr aI v");
result.add("dep-\trived", "dh V p\tr aI v d");
result.add("dep-\trives", "dh V p\tr aI v z");
result.add("dep-\trog-\tram", "dh i: p\tr @U g\tr { m");
result.add("dep-\trog-\tram-\tming", "dh i: p\tr @U g\tr {\tm I N");
result.add("depp", "dh e p");
result.add("depth", "dh e p T");
result.add("depths", "dh e p T s");
result.add("der", "dh @r");
result.add("der-\tby", "dh @r\tb i:");
result.add("der-\tham", "dh @r\th V m");
result.add("der-\tleth", "dh @r\tl e T");
result.add("der-\tma", "dh @r\tm V");
result.add("der-\tma-\tto-\tlo-\tgi-\tcal", "dh @r\tm V\tt V\tl Q\tdZ I\tk V l");
result.add("der-\tma-\tto-\tlo-\tgist", "dh @r\tm V\tt Q\tl V\tdZ V s t");
result.add("der-\tma-\tto-\tlo-\tgists", "dh @r\tm V\tt Q\tl V\tdZ V s t s");
result.add("der-\tma-\tto-\tlo-\tgy", "dh @r\tm V\tt Q\tl V\tdZ i:");
result.add("der-\tmal", "dh @r\tm V l");
result.add("der-\tman", "dh @r\tm V n");
result.add("der-\tmis", "dh @r\tm I s");
result.add("der-\tmot", "dh @r\tm V t");
result.add("der-\tmott", "dh @r\tm V t");
result.add("der-\tner", "dh @r\tn @r");
result.add("der-\trick", "dh e@\tI k");
result.add("der-\trin-\tger", "dh e@\tI n\tdZ @r");
result.add("der-\try", "dh e@\ti:");
result.add("der-\tvish", "dh @r\tv I S");
result.add("der-\tward", "dh @r\tw @r d");
result.add("der-\twin", "dh @r\tw I n");
result.add("derk", "dh @r k");
result.add("dern", "dh @r n");
result.add("derr", "dh e@");
result.add("des", "dh e");
result.add("des-\tcartes", "dh eI\tk Q@ t");
result.add("des-\tcen-\tdant", "dh V\ts e n\td V n t");
result.add("des-\tcen-\tdants", "dh V\ts e n\td V n t s");
result.add("des-\tcen-\tded", "dh V\ts e n\td V d");
result.add("des-\tcen-\tdent", "dh V\ts e n\td V n t");
result.add("des-\tcen-\tdents", "dh V\ts e n\td V n t s");
result.add("des-\tcen-\tding", "dh V\ts e n\td I N");
result.add("des-\tcend", "dh V\ts e n d");
result.add("des-\tcends", "dh V\ts e n d z");
result.add("des-\tcent", "dh V\ts e n t");
result.add("des-\tcents", "dh V\ts e n t s");
result.add("des-\tchamps", "dh e\tS V m p s");
result.add("des-\tcri-\tba-\tble", "dh V s\tk r aI\tb V\tb V l");
result.add("des-\tcri-\tbing", "dh V s\tk r aI\tb I N");
result.add("des-\tcribe", "dh V s\tk r aI b");
result.add("des-\tcribed", "dh V s\tk r aI b d");
result.add("des-\tcribes", "dh V s\tk r aI b z");
result.add("des-\tcrip-\ttion", "dh V s\tk r I p\tS V n");
result.add("des-\tcrip-\ttions", "dh V s\tk r I p\tS V n z");
result.add("des-\tcrip-\ttive", "dh V s\tk r I p\tt I v");
result.add("des-\tma", "dh i: s\tm V");
result.add("des-\tman", "dh e s\tm V n");
result.add("des-\tmet", "dh e s\tm e t");
result.add("des-\tmids", "dh e s\tm I d z");
result.add("des-\tmo-\tna", "dh e s\tm @U\tn V");
result.add("des-\tmond", "dh e z\tm V n d");
result.add("des-\tpe-\tra-\tdo", "dh e s\tp @r\tQ\td @U");
result.add("des-\tpe-\tra-\tdoes", "dh e s\tp @r\tQ\td @U z");
result.add("des-\tpe-\tra-\ttion", "dh e s\tp @r\teI\tS V n");
result.add("des-\tpe-\trate-\tly", "dh e s\tp @r\tV t\tl i:");
result.add("des-\tpi-\tca-\tble", "dh I s\tp I\tk V\tb V l");
result.add("des-\tpi-\tses", "dh I s\tp aI\tz V z");
result.add("des-\tpise", "dh I s\tp aI z");
result.add("des-\tpised", "dh I s\tp aI z d");
result.add("des-\tpite", "dh I s\tp aI t");
result.add("des-\tpo-\tti-\tsm", "dh e s\tp V\tt I\tz V m");
result.add("des-\tpo-\ttic", "dh I s\tp Q\tt I k");
result.add("des-\tpon-\tden-\tcy", "dh I s\tp Q n\td V n\ts i:");
result.add("des-\tpon-\tdent", "dh I s\tp Q n\td V n t");
result.add("des-\tpot", "dh e s\tp V t");
result.add("des-\tsert", "dh I\tz @r t");
result.add("des-\tserts", "dh I\tz @r t s");
result.add("des-\tta-\tbi-\tli-\tza-\ttion", "dh i: s\tt eI\tb I\tl I\tz eI\tS V n");
result.add("des-\tta-\tbi-\tli-\tzing", "dh i: s\tt eI\tb I\tl aI\tz I N");
result.add("des-\tta-\tbi-\tlize", "dh i: s\tt eI\tb I\tl aI z");
result.add("des-\tta-\tbi-\tlized", "dh i: s\tt eI\tb I\tl aI z d");
result.add("d'es-\ttaing", "dh V s\tt eI N");
result.add("des-\tti-\tna-\ttion", "dh e s\tt I\tn eI\tS V n");
result.add("des-\tti-\tna-\ttions", "dh e s\tt I\tn eI\tS V n z");
result.add("des-\tti-\tnies", "dh e s\tt I\tn i: z");
result.add("des-\tti-\tny", "dh e s\tt I\tn i:");
result.add("des-\tti-\ttu-\ttion", "dh e s\tt I\tt u:\tS V n");
result.add("des-\tti-\ttute", "dh e s\tt I\tt u: t");
result.add("des-\ttin", "dh e s\tt I n");
result.add("des-\ttined", "dh e s\tt I n d");
result.add("desh-\tler", "dh e S\tl @r");
result.add("desk", "dh e s k");
result.add("desk-\ttop", "dh e s\tk t Q p");
result.add("desk-\ttops", "dh e s\tk t Q p s");
result.add("desks", "dh e s k s");
result.add("despe-\trate", "dh e s\tp r V t");
result.add("dest", "dh e s t");
result.add("dest-\tro-\tyer", "dh V s\tt r OI\t@r");
result.add("dest-\tro-\tyers", "dh V s\tt r OI\t@r z");
result.add("dest-\troy", "dh V s\tt r OI");
result.add("dest-\troy-\ting", "dh V s\tt r OI\tI N");
result.add("dest-\troyed", "dh V s\tt r OI d");
result.add("dest-\troys", "dh V s\tt r OI z");
result.add("dest-\truc-\tted", "dh V s\tt r V k\tt V d");
result.add("dest-\truc-\tting", "dh V s\tt r V k\tt I N");
result.add("dest-\truc-\ttion", "dh V s\tt r V k\tS V n");
result.add("dest-\truc-\ttive", "dh V s\tt r V k\tt I v");
result.add("dest-\truc-\ttive-\tness", "dh V s\tt r V k\tt I v\tn V s");
result.add("dest-\truct", "dh V s\tt r V k t");
result.add("dest-\tructs", "dh V s\tt r V k t s");
result.add("det-\trac-\tted", "dh V t\tr { k\tt V d");
result.add("det-\trac-\tting", "dh V t\tr { k\tt I N");
result.add("det-\trac-\ttor", "dh i: t\tr { k\tt @r");
result.add("det-\trac-\ttors", "dh i: t\tr { k\tt @r z");
result.add("det-\tract", "dh V t\tr { k t");
result.add("det-\tracts", "dh V t\tr { k t s");
result.add("det-\tri-\tmen-\ttal", "dh e t\tr I\tm e n\tt V l");
result.add("det-\tri-\tment", "dh e t\tr I\tm V n t");
result.add("det-\tri-\ttus", "dh V t\tr aI\tt V s");
result.add("det-\troi-\tters", "dh V t\tr OI\tt @r z");
result.add("det-\troit", "dh V t\tr OI t");
result.add("det-\troit's", "dh V t\tr OI t s");
result.add("deth-\trone", "dh i: T\tr @U n");
result.add("deth-\troned", "dh i: T\tr @U n d");
result.add("dett-\tmer", "dh e t\tm @r");
result.add("deu-\tte-\tri-\tum", "dh u:\tt i:\tr i:\tV m");
result.add("deu-\tte-\trons", "dh u:\tt @r\tQ n z");
result.add("deuce", "dh u: s");
result.add("deut-\tscher", "dh OI\ttS @r");
result.add("deutsch", "dh OI tS");
result.add("deutsch-\tland", "dh OI tS\tl { n d");
result.add("deutsche", "dh OI tS");
result.add("deux", "dh u:");
result.add("dev", "dh e v");
result.add("dev-\tlin", "dh e v\tl I n");
result.add("devil-\ts", "dh e\tv I l z");
result.add("dew", "dh u:");
result.add("dew-\tber-\try", "dh u:\tb e@\ti:");
result.add("dewc-\tlaw", "dh u: k\tl O:");
result.add("dews", "dh u: z");
result.add("dex", "dh e k s");
result.add("dex-\tte-\tri-\tty", "dh e k\ts t e@\tI\tt i:");
result.add("dex-\tter", "dh e k\ts t @r");
result.add("dex-\tter's", "dh e k\ts t @r z");
result.add("dex-\ttra", "dh e k\ts t r V");
result.add("dex-\ttran", "dh e k\ts t r { n");
result.add("dex-\ttro", "dh e k\ts t r @U");
result.add("dex-\ttrose", "dh e k\ts t r @U s");
result.add("dex-\ttrous", "dh e k\ts t r V s");
result.add("dey", "dh eI");
result.add("dha-\tbi", "dh Q\tb i:");
result.add("dha-\tka", "dh Q\tk V");
result.add("dhah-\tran", "dh V\tr Q n");
result.add("dhar-\tma", "dh Q@\tm V");
result.add("dhole", "dh @U l");
result.add("dhows", "dh aU z");
result.add("di", "dh i:");
result.add("di-\ta", "dh i:\tV");
result.add("di-\ta-\tba-\tsic", "dh aI\tV\tb eI\ts I k");
result.add("di-\ta-\tbase", "dh aI\tV\tb eI s");
result.add("di-\ta-\tbe-\ttes", "dh aI\tV\tb i:\tt i: z");
result.add("di-\ta-\tbe-\ttic", "dh aI\tV\tb e\tt I k");
result.add("di-\ta-\tbe-\ttics", "dh aI\tV\tb e\tt I k s");
result.add("di-\ta-\tblo", "dh aI\t{ b\tl @U");
result.add("di-\ta-\tbo-\tli-\tcal", "dh aI\tV\tb Q\tl I\tk V l");
result.add("di-\ta-\tco-\tnate", "dh aI\t{\tk V\tn V t");
result.add("di-\ta-\tcri-\tti-\tcal", "dh aI\tV k\tr I\tt V\tk V l");
result.add("di-\ta-\tcri-\ttic", "dh aI\tV k\tr I\tt V k");
result.add("di-\ta-\tdem", "dh aI\tV\td e m");
result.add("di-\ta-\tgo-\tnal", "dh aI\t{\tg V\tn V l");
result.add("di-\ta-\tgo-\tnal-\tly", "dh aI\t{\tg V\tn V\tl i:");
result.add("di-\ta-\tgo-\tnals", "dh aI\t{\tg V\tn V l z");
result.add("di-\ta-\tgra-\tming", "dh aI\tV g\tr {\tm I N");
result.add("di-\ta-\tgram", "dh aI\tV g\tr { m");
result.add("di-\ta-\tgram-\tma-\ttic", "dh aI\tV g\tr V\tm {\tt I k");
result.add("di-\ta-\tgrammed", "dh aI\tV g\tr { m d");
result.add("di-\ta-\tgrams", "dh aI\tV g\tr { m z");
result.add("di-\ta-\tlec-\tti-\tcal", "dh aI\tV\tl e k\tt I\tk V l");
result.add("di-\ta-\tlec-\ttic", "dh aI\tV\tl e k\tt I k");
result.add("di-\ta-\tlect", "dh aI\tV\tl e k t");
result.add("di-\ta-\tlects", "dh aI\tV\tl e k t s");
result.add("di-\ta-\tling", "dh aI\tV\tl I N");
result.add("di-\ta-\tlog", "dh aI\tV\tl O: g");
result.add("di-\ta-\tlogue", "dh aI\tV\tl O: g");
result.add("di-\ta-\tlogues", "dh aI\tV\tl O: g z");
result.add("di-\ta-\tly-\tsis", "dh aI\t{\tl V\ts V s");
result.add("di-\ta-\tmag-\tne-\tti-\tsm", "dh aI\tV\tm { g\tn V\tt I\tz V m");
result.add("di-\ta-\tmag-\tne-\ttic", "dh aI\tV\tm { g\tn e\tt I k");
result.add("di-\ta-\tman-\tta", "dh aI\tV\tm { n\tt V");
result.add("di-\ta-\tman-\tte", "dh aI\tV\tm Q n\tt i:");
result.add("di-\ta-\tmant", "dh aI\tV\tm V n t");
result.add("di-\ta-\tme-\tter", "dh aI\t{\tm V\tt @r");
result.add("di-\ta-\tmet-\tri-\tcal-\tly", "dh aI\tV\tm e t\tr I\tk V\tl i:");
result.add("di-\ta-\tna", "dh aI\t{\tn V");
result.add("di-\ta-\tna's", "dh aI\t{\tn V z");
result.add("di-\ta-\tne-\ttics", "dh aI\tV\tn e\tt I k s");
result.add("di-\ta-\tpers", "dh aI\tV\tp @r z");
result.add("di-\ta-\tpho-\tni-\ta", "dh aI\tV\tf @U\tn i:\tV");
result.add("di-\ta-\tries", "dh aI\t@r\ti: z");
result.add("di-\ta-\try", "dh aI\t@r\ti:");
result.add("di-\ta-\tto-\tmic", "dh aI\tV\tt Q\tm I k");
result.add("di-\ta-\tto-\tnic", "dh aI\tV\tt Q\tn I k");
result.add("di-\ta-\ttoms", "dh aI\tV\tt Q m z");
result.add("di-\ta-\ttribe", "dh aI\tV t\tr aI b");
result.add("di-\ta-\ttribes", "dh aI\tV t\tr aI b z");
result.add("di-\ta-\tzo", "dh aI\t{\tz @U");
result.add("di-\tag-\tno-\tses", "dh aI\tV g\tn @U\ts i: z");
result.add("di-\tag-\tno-\tsing", "dh aI\tV g\tn @U\ts I N");
result.add("di-\tag-\tno-\tsis", "dh aI\tV g\tn @U\ts V s");
result.add("di-\tag-\tnos-\ttic", "dh aI\tV g\tn Q s\tt I k");
result.add("di-\tag-\tnos-\ttics", "dh aI\tV g\tn Q s\tt I k s");
result.add("di-\tag-\tnose", "dh aI\tV g\tn @U s");
result.add("di-\tag-\tnosed", "dh aI\tV g\tn @U s t");
result.add("di-\tal", "dh aI\tV l");
result.add("di-\tal-\ttone", "dh aI\tV l\tt @U n");
result.add("di-\taled", "dh aI\tV l d");
result.add("di-\tals", "dh aI\tV l z");
result.add("di-\tal's", "dh aI\tV l z");
result.add("di-\tan", "dh aI\tV n");
result.add("di-\tan-\tna", "dh aI\t{\tn V");
result.add("di-\tan-\ttha", "dh aI\t{ n\tT V");
result.add("di-\tan-\tthe", "dh aI\t{ n\tD i:");
result.add("di-\tane", "dh aI\t{ n");
result.add("di-\tane's", "dh aI\t{ n z");
result.add("di-\tanne", "dh aI\t{ n");
result.add("di-\tap-\tsid", "dh aI\t{ p\ts I d");
result.add("di-\taph-\tragm", "dh aI\tV f\tr { m");
result.add("di-\tar-\trhe-\ta", "dh aI\t@r\ti:\tV");
result.add("di-\tarr-\thoe-\ta", "dh aI\t@r\ti:\tV");
result.add("di-\tas", "dh aI\tV z");
result.add("di-\tat-\ther-\tmy", "dh aI\tV\tT @r\tm i:");
result.add("di-\taz", "dh i:\t{ z");
result.add("di-\tboll", "dh I\tb V l");
result.add("di-\tcap-\tri-\to", "dh I\tk { p\tr i:\t@U");
result.add("di-\tcen-\tzo", "dh I\ts e n\tz @U");
result.add("di-\tcey", "dh aI\ts i:");
result.add("di-\tcho-\tto-\tmy", "dh aI\tk Q\tt V\tm i:");
result.add("di-\tci-\ter", "dh aI\ts i:\t@r");
result.add("di-\tcots", "dh aI\tk Q t s");
result.add("di-\tdac-\ttic", "dh aI\td { k\tt I k");
result.add("di-\tdi", "dh i:\td i:");
result.add("di-\tdi-\ter", "dh I\td i:\t@r");
result.add("di-\tdi-\tni-\tum", "dh V\td I\tn i:\tV m");
result.add("di-\tdn't", "dh I\td V n t");
result.add("di-\tdo", "dh aI\td @U");
result.add("di-\te-\tgo", "dh i:\teI\tg @U");
result.add("di-\te-\tgo's", "dh i:\teI\tg @U z");
result.add("di-\te-\tta-\try", "dh aI\tV\tt e@\ti:");
result.add("di-\te-\tte-\ttic", "dh aI\tV\tt e\tt I k");
result.add("di-\te-\tters", "dh aI\tV\tt @r z");
result.add("di-\te-\tti-\ttian", "dh aI\tV\tt I\tS V n");
result.add("di-\te-\tti-\ttians", "dh aI\tV\tt I\tS V n z");
result.add("di-\te-\tti-\ttian's", "dh aI\tV\tt I\tS V n z");
result.add("di-\te-\tting", "dh aI\tV\tt I N");
result.add("di-\ter", "dh i:\t@r");
result.add("di-\tet", "dh aI\tV t");
result.add("di-\tets", "dh aI\tV t s");
result.add("di-\tet's", "dh aI\tV t s");
result.add("di-\tge-\tno-\tva", "dh i:\tdZ e\tn @U\tv V");
result.add("di-\tges-\tted", "dh aI\tdZ e s\tt V d");
result.add("di-\tges-\tter", "dh aI\tdZ e s\tt @r");
result.add("di-\tges-\tti-\tble", "dh aI\tdZ e s\tt I\tb V l");
result.add("di-\tges-\tting", "dh aI\tdZ e s\tt I N");
result.add("di-\tges-\ttion", "dh aI\tdZ e s\ttS V n");
result.add("di-\tges-\ttive", "dh aI\tdZ e s\tt I v");
result.add("di-\tgest", "dh aI\tdZ e s t");
result.add("di-\tgests", "dh V\tdZ e s t s");
result.add("di-\tgest's", "dh aI\tdZ e s t s");
result.add("di-\tgi-\tta-\tlis", "dh I\tdZ I\tt {\tl V s");
result.add("di-\tgi-\ttal", "dh I\tdZ I\tt V l");
result.add("di-\tgi-\ttal-\tly", "dh I\tdZ I\tt V\tl i:");
result.add("di-\tgi-\tti-\tzing", "dh I\tdZ I\tt aI\tz I N");
result.add("di-\tgi-\ttize", "dh I\tdZ I\tt aI z");
result.add("di-\tgi-\ttized", "dh I\tdZ I\tt aI z d");
result.add("di-\tgior-\tgi-\to", "dh I\tdZ O@\tdZ i:\t@U");
result.add("di-\tgit", "dh I\tdZ I t");
result.add("di-\tgits", "dh I\tdZ I t s");
result.add("di-\tjon", "dh i:\tZ Q n");
result.add("di-\tla-\tpi-\tda-\tted", "dh V\tl {\tp V\td eI\tt V d");
result.add("di-\tla-\tpi-\tdate", "dh V\tl {\tp V\td eI t");
result.add("di-\tla-\tta-\ttion", "dh I\tl V\tt eI\tS V n");
result.add("di-\tla-\tted", "dh aI\tl eI\tt V d");
result.add("di-\tla-\ttion", "dh aI\tl eI\tS V n");
result.add("di-\tla-\tto-\try", "dh I\tl V\tt O@\ti:");
result.add("di-\tlate", "dh aI\tl eI t");
result.add("di-\tlem-\tma", "dh V\tl e\tm V");
result.add("di-\tlem-\tmas", "dh V\tl e\tm V z");
result.add("di-\tli-\tgence", "dh I\tl I\tdZ V n s");
result.add("di-\tli-\tgent", "dh I\tl I\tdZ V n t");
result.add("di-\tli-\tgent-\tly", "dh I\tl I\tdZ V n\tt l i:");
result.add("di-\tli-\tthi-\tum", "dh aI\tl I\tT i:\tV m");
result.add("di-\tlu-\tted", "dh aI\tl u:\tt V d");
result.add("di-\tlu-\tting", "dh aI\tl u:\tt I N");
result.add("di-\tlu-\ttion", "dh aI\tl u:\tS V n");
result.add("di-\tlu-\ttive", "dh V\tl u:\tt I v");
result.add("di-\tlute", "dh aI\tl u: t");
result.add("di-\tlutes", "dh aI\tl u: t s");
result.add("di-\tma-\tri-\ta", "dh I\tm Q@\ti:\tV");
result.add("di-\tmag-\tgi-\to", "dh V\tm {\tdZ i:\t@U");
result.add("di-\tmen-\tsio-\tna-\tli-\tty", "dh I\tm e n\tS V\tn {\tl I\tt i:");
result.add("di-\tmen-\tsio-\tnal", "dh I\tm e n\tS V\tn V l");
result.add("di-\tmen-\tsion", "dh I\tm e n\tS V n");
result.add("di-\tmen-\tsioned", "dh V\tm e n\ttS V n d");
result.add("di-\tmen-\tsions", "dh I\tm e n\tS V n z");
result.add("di-\tmer", "dh aI\tm @r");
result.add("di-\tmi-\tni-\tshes", "dh V\tm I\tn I\tS V z");
result.add("di-\tmi-\tni-\tshing", "dh V\tm I\tn I\tS I N");
result.add("di-\tmi-\tnish", "dh V\tm I\tn I S");
result.add("di-\tmi-\tnish-\tment", "dh V\tm I\tn I S\tm V n t");
result.add("di-\tmi-\tnished", "dh V\tm I\tn I S t");
result.add("di-\tmi-\tnu-\ttion", "dh I\tm I\tn u:\tS V n");
result.add("di-\tmi-\tnu-\ttive", "dh V\tm I n\tj V\tt I v");
result.add("di-\tmit-\tri", "dh I\tm i: t\tr i:");
result.add("di-\tmock", "dh I\tm V k");
result.add("di-\tmond", "dh aI\tm V n d");
result.add("di-\tmor-\tphi-\tsm", "dh aI\tm O@\tf I\tz V m");
result.add("di-\tmor-\tphic", "dh aI\tm O@\tf I k");
result.add("di-\tna", "dh i:\tn V");
result.add("di-\tnah", "dh aI\tn V");
result.add("di-\tnan", "dh I\tn V n");
result.add("di-\tnar", "dh I\tn Q@");
result.add("di-\tnars", "dh aI\tn @r z");
result.add("di-\tner", "dh aI\tn @r");
result.add("di-\tners", "dh aI\tn @r z");
result.add("di-\tnesh", "dh I\tn e S");
result.add("di-\tno-\tsaur", "dh aI\tn V\ts O@");
result.add("di-\tno-\tsaurs", "dh aI\tn V\ts O@ z");
result.add("di-\to-\tce-\tsan", "dh aI\tQ\ts V\ts V n");
result.add("di-\to-\tcese", "dh aI\tV\ts i: z");
result.add("di-\to-\tceses", "dh aI\tV\ts i: z");
result.add("di-\to-\tni-\tsi-\to", "dh aI\tV\tn I\ts i:\t@U");
result.add("di-\to-\tny-\tsi-\tus", "dh aI\tV\tn I\ts i:\tV s");
result.add("di-\to-\trite", "dh aI\t@r\taI t");
result.add("di-\to-\txide", "dh aI\tQ k\ts aI d");
result.add("di-\to-\txides", "dh aI\tQ k\ts aI d z");
result.add("di-\to-\txin", "dh aI\tQ k\ts I n");
result.add("di-\to-\txins", "dh aI\tQ k\ts I n z");
result.add("di-\tode", "dh aI\t@U d");
result.add("di-\todes", "dh aI\t@U d z");
result.add("di-\ton", "dh aI\tV n");
result.add("di-\tone", "dh i:\tQ n");
result.add("di-\tonne", "dh i:\tQ n");
result.add("di-\tor", "dh i:\tO@");
result.add("di-\tos", "dh i:\t@U s");
result.add("di-\tpole", "dh aI\tp @U l");
result.add("di-\trec-\tted", "dh I@\te k\tt V d");
result.add("di-\trec-\tting", "dh @r\te k\tt I N");
result.add("di-\trec-\ttio-\tnal", "dh @r\te k\tS V\tn V l");
result.add("di-\trec-\ttion", "dh @r\te k\tS V n");
result.add("di-\trec-\ttion-\tless", "dh @r\te k\tS V n\tl e s");
result.add("di-\trec-\ttions", "dh @r\te k\tS V n z");
result.add("di-\trec-\ttive", "dh @r\te k\tt I v");
result.add("di-\trec-\ttives", "dh aI\tr e k\tt I v z");
result.add("di-\trec-\ttly", "dh @r\te k\tt l i:");
result.add("di-\trec-\tto-\tral", "dh @r\te k\tt @r\tV l");
result.add("di-\trec-\tto-\trate", "dh @r\te k\tt @r\tV t");
result.add("di-\trec-\tto-\tri-\tal", "dh @r\te k\tt O@\ti:\tV l");
result.add("di-\trec-\tto-\tries", "dh aI\tr e k\tt @r\ti: z");
result.add("di-\trec-\tto-\try", "dh @r\te k\tt @r\ti:");
result.add("di-\trec-\ttor", "dh @r\te k\tt @r");
result.add("di-\trec-\ttor-\tship", "dh @r\te k\tt @r\tS I p");
result.add("di-\trec-\ttor-\tships", "dh @r\te k\tt @r\tS I p s");
result.add("di-\trec-\ttors", "dh @r\te k\tt @r z");
result.add("di-\trec-\ttor's", "dh aI\tr e k\tt @r z");
result.add("di-\trect", "dh @r\te k t");
result.add("di-\trect-\tness", "dh @r\te k\tt n V s");
result.add("di-\trects", "dh @r\te k t s");
result.add("di-\trest", "dh aI\tr V s t");
result.add("di-\tsa", "dh I\ts V");
result.add("di-\tsa-\tb-\tling", "dh I\ts eI\tb V\tl I N");
result.add("di-\tsa-\tbi-\tli-\tties", "dh I\ts V\tb I\tl V\tt i: z");
result.add("di-\tsa-\tbi-\tli-\tty", "dh I\ts V\tb I\tl V\tt i:");
result.add("di-\tsa-\tble", "dh I\ts eI\tb V l");
result.add("di-\tsa-\tbled", "dh I\ts eI\tb V l d");
result.add("di-\tsa-\tbles", "dh I\ts eI\tb V l z");
result.add("di-\tsa-\tbu-\tses", "dh I\ts V b\tj u:\ts V z");
result.add("di-\tsa-\tbuse", "dh I\ts V b\tj u: s");
result.add("di-\tsa-\tbused", "dh I\ts V b\tj u: z d");
result.add("di-\tsa-\tvow", "dh I\ts V\tv aU");
result.add("di-\tsa-\tvow-\ting", "dh I\ts V\tv aU\tI N");
result.add("di-\tsa-\tvowed", "dh I\ts V\tv aU d");
result.add("di-\tsad-\tvan-\tta-\tgeous", "dh I\ts { d\tv { n\tt eI\tdZ V s");
result.add("di-\tsad-\tvan-\tta-\tges", "dh I\ts V d\tv { n\tt I\tdZ V z");
result.add("di-\tsad-\tvan-\ttage", "dh I\ts V d\tv { n\tt I dZ");
result.add("di-\tsad-\tvan-\ttaged", "dh I\ts V d\tv { n\tt I dZ d");
result.add("di-\tsaf-\tfec-\tted", "dh I\ts V\tf e k\tt V d");
result.add("di-\tsaf-\tfec-\ttion", "dh I\ts V\tf e k\tS V n");
result.add("di-\tsaf-\tfect", "dh I\ts V\tf e k t");
result.add("di-\tsag-\tree", "dh I\ts V g\tr i:");
result.add("di-\tsag-\tree-\ta-\tble", "dh I\ts V g\tr i:\tV\tb V l");
result.add("di-\tsag-\tree-\ting", "dh I\ts V g\tr i:\tI N");
result.add("di-\tsag-\tree-\tment", "dh I\ts V g\tr i:\tm V n t");
result.add("di-\tsag-\tree-\tments", "dh I\ts V g\tr i:\tm V n t s");
result.add("di-\tsag-\treed", "dh I\ts V g\tr i: d");
result.add("di-\tsag-\trees", "dh I\ts V g\tr i: z");
result.add("di-\tsal-\tlo-\twan-\tces", "dh I\ts V\tl aU\tV n\ts V z");
result.add("di-\tsal-\tlo-\twance", "dh I\ts V\tl aU\tV n s");
result.add("di-\tsal-\tlow", "dh I\ts V\tl aU");
result.add("di-\tsal-\tlow-\ting", "dh I\ts V\tl aU\tI N");
result.add("di-\tsal-\tlowed", "dh I\ts V\tl aU d");
result.add("di-\tsap-\tpea-\tran-\tces", "dh I\ts V\tp I@\tV n\ts V z");
result.add("di-\tsap-\tpea-\trance", "dh I\ts V\tp I@\tV n s");
result.add("di-\tsap-\tpea-\tring", "dh I\ts V\tp I@\tI N");
result.add("di-\tsap-\tpear", "dh I\ts V\tp I@");
result.add("di-\tsap-\tpeared", "dh I\ts V\tp I@ d");
result.add("di-\tsap-\tpears", "dh I\ts V\tp I@ z");
result.add("di-\tsap-\tpoin-\tted", "dh I\ts V\tp OI n\tt V d");
result.add("di-\tsap-\tpoin-\tting", "dh I\ts V\tp OI n\tt I N");
result.add("di-\tsap-\tpoin-\tting-\tly", "dh I\ts V\tp OI n\tt I N\tl i:");
result.add("di-\tsap-\tpoint", "dh I\ts V\tp OI n t");
result.add("di-\tsap-\tpoint-\tment", "dh I\ts V\tp OI n\tt m V n t");
result.add("di-\tsap-\tpoint-\tments", "dh I\ts V\tp OI n\tt m V n t s");
result.add("di-\tsap-\tpoints", "dh I\ts V\tp OI n t s");
result.add("di-\tsap-\tpro-\tval", "dh I\ts V p\tr u:\tv V l");
result.add("di-\tsap-\tpro-\tving", "dh I\ts V p\tr u:\tv I N");
result.add("di-\tsap-\tprove", "dh I\ts V p\tr u: v");
result.add("di-\tsap-\tproved", "dh I\ts V p\tr u: v d");
result.add("di-\tsap-\tproves", "dh I\ts V p\tr u: v z");
result.add("di-\tsar-\tma-\tment", "dh I\ts Q@\tm V\tm V n t");
result.add("di-\tsar-\tming", "dh I\ts Q@\tm I N");
result.add("di-\tsar-\tming-\tly", "dh I\ts Q@\tm I N\tl i:");
result.add("di-\tsar-\tray", "dh I\ts @r\teI");
result.add("di-\tsarm", "dh I\ts Q@ m");
result.add("di-\tsarmed", "dh I\ts Q@ m d");
result.add("di-\tsas-\tsem-\tble", "dh I\ts V\ts e m\tb V l");
result.add("di-\tsas-\tsem-\tbled", "dh I\ts V\ts e m\tb V l d");
result.add("di-\tsas-\tso-\tci-\ta-\tted", "dh I\ts V\ts @U\tS i:\teI\tt V d");
result.add("di-\tsas-\tso-\tci-\tate", "dh I\ts V\ts @U\tS i:\teI t");
result.add("di-\tsas-\tter", "dh I\tz { s\tt @r");
result.add("di-\tsas-\tters", "dh I\tz { s\tt @r z");
result.add("di-\tsast-\trous", "dh I\tz { s\tt r V s");
result.add("di-\tsast-\trous-\tly", "dh I\tz { s\tt r V s\tl i:");
result.add("di-\tse-\tqui-\tli-\tbri-\tum", "dh I\ts i: k\tw I\tl I b\tr i:\tV m");
result.add("di-\tsea-\tses", "dh I\tz i:\tz V z");
result.add("di-\tsea-\tse's", "dh I\tz i:\tz V z");
result.add("di-\tsease", "dh I\tz i: z");
result.add("di-\tseased", "dh I\tz i: z d");
result.add("di-\tsem-\tbar-\tka-\ttion", "dh I\ts e m\tb Q@\tk eI\tS V n");
result.add("di-\tsem-\tbark", "dh I\ts e m\tb Q@ k");
result.add("di-\tsem-\tbo-\tdied", "dh I\ts V\tb Q\td i: d");
result.add("di-\tsem-\tbo-\tdy", "dh I\ts V\tb Q\td i:");
result.add("di-\tsen-\tchan-\tted", "dh I\ts V n\ttS { n\tt V d");
result.add("di-\tsen-\tchant", "dh I\ts V n\ttS { n t");
result.add("di-\tsen-\tchant-\tment", "dh I\ts V n\ttS { n\tt m V n t");
result.add("di-\tsen-\tfran-\tchise", "dh I\ts V n\tf r { n\ttS aI z");
result.add("di-\tsen-\tfran-\tchise-\tment", "dh I\ts V n\tf r { n\ttS aI z\tm V n t");
result.add("di-\tsen-\tfran-\tchised", "dh I\ts V n\tf r { n\ttS aI z d");
result.add("di-\tsen-\tga-\tging", "dh I\ts V n\tg eI\tdZ I N");
result.add("di-\tsen-\tgage", "dh I\ts V n\tg eI dZ");
result.add("di-\tsen-\tgage-\tment", "dh I\ts V n\tg eI dZ\tm V n t");
result.add("di-\tsen-\tgaged", "dh I\ts V n\tg eI dZ d");
result.add("di-\tsen-\ttan-\tgle", "dh I\ts V n\tt { N\tg V l");
result.add("di-\tses-\ttab-\tlish-\tment", "dh I\ts V s\tt { b\tl I S\tm V n t");
result.add("di-\tsha-\troon", "dh I\tS @r\tu: n");
result.add("di-\tshe-\tvel", "dh I\tS e\tv V l");
result.add("di-\tshe-\tveled", "dh I\tS e\tv V l d");
result.add("di-\tshear-\tte-\tning", "dh I s\th Q@\tt V\tn I N");
result.add("di-\tshear-\tten", "dh I s\th Q@\tt V n");
result.add("di-\tshear-\ttened", "dh I s\th Q@\tt V n d");
result.add("di-\tsher", "dh I\tS @r");
result.add("di-\tshes", "dh I\tS V z");
result.add("di-\tshing", "dh I\tS I N");
result.add("di-\tsil-\tlu-\tsio-\tning", "dh I\ts I\tl u:\tZ V\tn I N");
result.add("di-\tsil-\tlu-\tsion", "dh I\ts I\tl u:\tZ V n");
result.add("di-\tsil-\tlu-\tsion-\tment", "dh I\ts I\tl u:\tZ V n\tm V n t");
result.add("di-\tsil-\tlu-\tsioned", "dh I\ts I\tl u:\tZ V n d");
result.add("di-\tsin-\tcen-\ttive", "dh I\ts I n\ts e n\tt I v");
result.add("di-\tsin-\tcen-\ttives", "dh I\ts I n\ts e n\tt I v z");
result.add("di-\tsin-\tfec-\ttant", "dh I\ts I n\tf e k\tt V n t");
result.add("di-\tsin-\tfec-\ttants", "dh I\ts I n\tf e k\tt V n t s");
result.add("di-\tsin-\tfec-\ttion", "dh I\ts I n\tf e k\tS V n");
result.add("di-\tsin-\tfect", "dh I\ts I n\tf e k t");
result.add("di-\tsin-\tfla-\ttio-\tna-\try", "dh I\ts V n\tf l eI\tS V\tn e@\ti:");
result.add("di-\tsin-\tfla-\ttion", "dh I\ts I n\tf l eI\tS V n");
result.add("di-\tsin-\tflate", "dh I\ts I n\tf l eI t");
result.add("di-\tsin-\tfor-\tma-\ttion", "dh I\ts I n\tf @r\tm eI\tS V n");
result.add("di-\tsin-\tform", "dh I\ts I n\tf O@ m");
result.add("di-\tsin-\tge-\tnu-\tous", "dh I\ts I n\tdZ e n\tj u:\tV s");
result.add("di-\tsin-\tge-\tnu-\tous-\tness", "dh I\ts I n\tdZ e n\tj u:\tV s\tn V s");
result.add("di-\tsin-\tte-\trest", "dh I\ts I n\tt @r\tV s t");
result.add("di-\tsin-\tteg-\tra-\tted", "dh I\ts I n\tt V g\tr eI\tt V d");
result.add("di-\tsin-\tteg-\tra-\tting", "dh I\ts I n\tt V g\tr eI\tt I N");
result.add("di-\tsin-\tteg-\tra-\ttion", "dh I\ts I n\tt V g\tr eI\tS V n");
result.add("di-\tsin-\tteg-\trate", "dh I\ts I n\tt V g\tr eI t");
result.add("di-\tsin-\tteg-\trates", "dh I\ts I n\tt V g\tr eI t s");
result.add("di-\tsin-\tvest-\tment", "dh I\ts I n\tv e s\tt m V n t");
result.add("di-\tsin-\tvi-\tted", "dh I\ts I n\tv aI\tt V d");
result.add("di-\tsin-\tvite", "dh I\ts I n\tv aI t");
result.add("di-\tsinc-\tli-\tna-\ttion", "dh I\ts I n\tk l I\tn eI\tS V n");
result.add("di-\tsinc-\tline", "dh I\ts I n\tk l aI n");
result.add("di-\tsinc-\tlined", "dh I\ts I n\tk l aI n d");
result.add("di-\tsinte-\tres-\tted", "dh I\ts I n\tt r V s\tt V d");
result.add("di-\tso-\tri-\ten-\tta-\ttion", "dh I\ts O@\ti:\tV n\tt eI\tS V n");
result.add("di-\tso-\tri-\ten-\tted", "dh I\ts O@\ti:\te n\tt V d");
result.add("di-\tso-\tri-\ten-\tting", "dh I\ts O@\ti:\te n\tt I N");
result.add("di-\tso-\tri-\tent", "dh I\ts O@\ti:\te n t");
result.add("di-\tsor-\tder", "dh I\ts O@\td @r");
result.add("di-\tsor-\tder-\tly", "dh I\ts O@\td @r\tl i:");
result.add("di-\tsor-\tdered", "dh I\ts O@\td @r d");
result.add("di-\tsor-\tders", "dh I\ts O@\td @r z");
result.add("di-\tsor-\tga-\tni-\tza-\ttion", "dh I\ts O@\tg V\tn V\tz eI\tS V n");
result.add("di-\tsor-\tga-\tnize", "dh I\ts O@\tg V\tn aI z");
result.add("di-\tsor-\tga-\tnized", "dh I\ts O@\tg V\tn aI z d");
result.add("di-\tsown", "dh I\ts @U n");
result.add("di-\tsowned", "dh I\ts @U n d");
result.add("di-\tsuse", "dh I s\tj u: s");
result.add("di-\tthe-\tring", "dh I\tD @r\tI N");
result.add("di-\tther", "dh I\tD @r");
result.add("di-\tthers", "dh I\tD @r z");
result.add("di-\tthy-\tramb", "dh I\tT @r\t{ m");
result.add("di-\tu-\tre-\ttic", "dh aI\tu:\tr e\tt I k");
result.add("di-\tu-\tre-\ttics", "dh aI\tu:\tr e\tt I k s");
result.add("di-\tur-\tnal", "dh aI\t@r\tn V l");
result.add("di-\tur-\tnal-\tly", "dh aI\t@r\tn V\tl i:");
result.add("di-\tva", "dh i:\tv V");
result.add("di-\tva-\tlent", "dh aI\tv eI\tl V n t");
result.add("di-\tvan", "dh I\tv { n");
result.add("di-\tvas", "dh i:\tv V z");
result.add("di-\tver", "dh aI\tv @r");
result.add("di-\tver-\tgen-\tces", "dh aI\tv @r\tdZ V n\ts V z");
result.add("di-\tver-\tgence", "dh aI\tv @r\tdZ V n s");
result.add("di-\tver-\tgent", "dh aI\tv @r\tdZ V n t");
result.add("di-\tver-\tges", "dh aI\tv @r\tdZ V z");
result.add("di-\tver-\tging", "dh aI\tv @r\tdZ I N");
result.add("di-\tver-\tsi-\tfi-\tca-\ttion", "dh aI\tv @r\ts V\tf I\tk eI\tS V n");
result.add("di-\tver-\tsi-\tfi-\tca-\ttions", "dh aI\tv @r\ts V\tf I\tk eI\tS V n z");
result.add("di-\tver-\tsi-\tfied", "dh aI\tv @r\ts I\tf aI d");
result.add("di-\tver-\tsi-\tfy", "dh aI\tv @r\ts I\tf aI");
result.add("di-\tver-\tsi-\tfy-\ting", "dh aI\tv @r\ts I\tf aI\tI N");
result.add("di-\tver-\tsi-\tty", "dh I\tv @r\ts I\tt i:");
result.add("di-\tver-\tsio-\tna-\try", "dh aI\tv @r\tZ V\tn e@\ti:");
result.add("di-\tver-\tsion", "dh aI\tv @r\tZ V n");
result.add("di-\tver-\tsions", "dh I\tv @r\tZ V n z");
result.add("di-\tver-\tted", "dh aI\tv @r\tt V d");
result.add("di-\tver-\tti-\tcu-\tla", "dh aI\tv @r\tt I k\tj V\tl V");
result.add("di-\tver-\tti-\tcu-\tlum", "dh aI\tv @r\tt I k\tj V\tl V m");
result.add("di-\tver-\tti-\tmen-\tto", "dh I\tv @r\tt I\tm e n\tt @U");
result.add("di-\tver-\tting", "dh aI\tv @r\tt I N");
result.add("di-\tverge", "dh I\tv @r dZ");
result.add("di-\tverged", "dh aI\tv @r dZ d");
result.add("di-\tvers", "dh aI\tv @r z");
result.add("di-\tver's", "dh aI\tv @r z");
result.add("di-\tverse", "dh aI\tv @r s");
result.add("di-\tvert", "dh aI\tv @r t");
result.add("di-\tverts", "dh aI\tv @r t s");
result.add("di-\tves-\tted", "dh aI\tv e s\tt V d");
result.add("di-\tves-\tti-\tture", "dh I\tv e s\tt I\ttS @r");
result.add("di-\tves-\tti-\ttures", "dh I\tv e s\tt I\ttS @r z");
result.add("di-\tves-\tting", "dh aI\tv e s\tt I N");
result.add("di-\tvest", "dh aI\tv e s t");
result.add("di-\tvest-\tment", "dh aI\tv e s\tt m V n t");
result.add("di-\tvest-\tments", "dh aI\tv e s\tt m V n t s");
result.add("di-\tvests", "dh aI\tv e s t s");
result.add("di-\tvi", "dh i:\tv i:");
result.add("di-\tvi-\tded", "dh I\tv aI\td V d");
result.add("di-\tvi-\tdend", "dh I\tv I\td e n d");
result.add("di-\tvi-\tdends", "dh I\tv I\td e n d z");
result.add("di-\tvi-\tdend's", "dh I\tv I\td e n d z");
result.add("di-\tvi-\tder", "dh I\tv aI\td @r");
result.add("di-\tvi-\tding", "dh I\tv aI\td I N");
result.add("di-\tvi-\tna-\ttion", "dh I\tv I\tn eI\tS V n");
result.add("di-\tvi-\tni-\tties", "dh I\tv I\tn I\tt i: z");
result.add("di-\tvi-\tni-\tty", "dh I\tv I\tn I\tt i:");
result.add("di-\tvi-\tning", "dh V\tv aI\tn I N");
result.add("di-\tvi-\tsi-\tble", "dh I\tv I\tz I\tb V l");
result.add("di-\tvi-\tsio-\tnal", "dh I\tv I\tZ V\tn V l");
result.add("di-\tvi-\tsion", "dh I\tv I\tZ V n");
result.add("di-\tvi-\tsions", "dh I\tv I\tZ V n z");
result.add("di-\tvi-\tsion's", "dh I\tv I\tZ V n z");
result.add("di-\tvi-\tsive", "dh I\tv aI\ts I v");
result.add("di-\tvi-\tsive-\tness", "dh I\tv aI\ts I v\tn V s");
result.add("di-\tvi-\tsor", "dh I\tv aI\tz @r");
result.add("di-\tvide", "dh I\tv aI d");
result.add("di-\tvides", "dh I\tv aI d z");
result.add("di-\tvine", "dh I\tv aI n");
result.add("di-\tvine-\tly", "dh I\tv aI n\tl i:");
result.add("di-\tving", "dh aI\tv I N");
result.add("di-\tvis", "dh i:\tv I s");
result.add("d'i-\tvoire", "dh i: v\tw Q@");
result.add("di-\tvor-\tcee", "dh V\tv O@\ts i:");
result.add("di-\tvor-\tces", "dh I\tv O@\ts V z");
result.add("di-\tvor-\tcing", "dh I\tv O@\ts I N");
result.add("di-\tvorce", "dh I\tv O@ s");
result.add("di-\tvorced", "dh I\tv O@ s t");
result.add("di-\tvul-\tging", "dh I\tv V l\tdZ I N");
result.add("di-\tvulge", "dh I\tv V l dZ");
result.add("di-\tvulged", "dh I\tv V l dZ d");
result.add("di-\txie", "dh I k\ts i:");
result.add("di-\txie-\tland", "dh I k\ts i:\tl { n d");
result.add("di-\txon", "dh I k\ts V n");
result.add("di-\txon's", "dh I k\ts V n z");
result.add("di-\txy", "dh I k\ts i:");
result.add("dia-\thann", "dh aI\t{ n");
result.add("dia-\tmond", "dh aI\tm V n d");
result.add("dia-\tmonds", "dh aI\tm V n d z");
result.add("dia-\tmond's", "dh aI\tm V n d z");
result.add("dia-\tpe-\tring", "dh aI\tp @r\tI N");
result.add("dia-\tper", "dh aI\tp @r");
result.add("dib-\tble", "dh I\tb V l");
result.add("dib-\tbled", "dh I\tb V l d");
result.add("dib-\tla-\tsi", "dh V b\tl Q\ts i:");
result.add("dibb", "dh I b");
result.add("dibs", "dh I b z");
result.add("dic", "dh I k");
result.add("dic-\tke-\tring", "dh I\tk @r\tI N");
result.add("dic-\tken-\tsi-\tan", "dh I\tk e n\tz i:\tV n");
result.add("dic-\tken-\tson", "dh I\tk V n\ts V n");
result.add("dic-\tken-\ts's", "dh I\tk V n\tz V z");
result.add("dic-\tkens", "dh I\tk V n z");
result.add("dic-\tker", "dh I\tk @r");
result.add("dic-\tker-\tson", "dh I\tk @r\ts V n");
result.add("dic-\tkered", "dh I\tk @r d");
result.add("dic-\tkey", "dh I\tk i:");
result.add("dic-\tkey's", "dh I\tk i: z");
result.add("dic-\tkie", "dh I\tk i:");
result.add("dic-\tkin-\tson", "dh I\tk I n\ts V n");
result.add("dic-\tky", "dh I\tk i:");
result.add("dic-\tta", "dh I k\tt V");
result.add("dic-\tta-\tphone", "dh I k\tt V\tf @U n");
result.add("dic-\tta-\tted", "dh I k\tt eI\tt V d");
result.add("dic-\tta-\tting", "dh I k\tt eI\tt I N");
result.add("dic-\tta-\ttion", "dh I k\tt eI\tS V n");
result.add("dic-\tta-\tto-\tri-\tal", "dh I k\tt V\tt O@\ti:\tV l");
result.add("dic-\tta-\ttor", "dh I k\tt eI\tt @r");
result.add("dic-\tta-\ttor-\tship", "dh I k\tt eI\tt @r\tS I p");
result.add("dic-\tta-\ttor-\tships", "dh I k\tt eI\tt @r\tS I p s");
result.add("dic-\tta-\ttors", "dh I k\tt eI\tt @r z");
result.add("dic-\ttate", "dh I k\tt eI t");
result.add("dic-\ttates", "dh I k\tt eI t s");
result.add("dic-\ttio-\tna-\tries", "dh I k\tS V\tn e@\ti: z");
result.add("dic-\ttio-\tna-\try", "dh I k\tS V\tn e@\ti:");
result.add("dic-\ttion", "dh I k\tS V n");
result.add("dic-\ttum", "dh I k\tt V m");
result.add("dice", "dh aI s");
result.add("diced", "dh aI s t");
result.add("dich-\tro-\tic", "dh aI k\tr @U\tI k");
result.add("dich-\tro-\tmate", "dh aI k\tr @U\tm eI t");
result.add("dich-\tter", "dh I k\tt @r");
result.add("dick", "dh I k");
result.add("dick-\tman", "dh I k\tm V n");
result.add("dick-\tson", "dh I k\ts V n");
result.add("dicks", "dh I k s");
result.add("dick's", "dh I k s");
result.add("did", "dh I d");
result.add("did-\tdy", "dh I\td i:");
result.add("didd-\tley", "dh I d\tl i:");
result.add("die", "dh aI");
result.add("die-\tbold", "dh aI\tb @U l d");
result.add("die-\thard", "dh aI\th Q@ d");
result.add("die-\thards", "dh aI\th Q@ d z");
result.add("die-\tner", "dh i:\tn @r");
result.add("die-\tnes", "dh i:\tn e z");
result.add("die-\trolf", "dh I@\t@U l f");
result.add("die-\tsel", "dh i:\ts V l");
result.add("die-\tsels", "dh i:\tz V l z");
result.add("die-\tses", "dh aI\tz V z");
result.add("die-\tte-\trich", "dh i:\tt @r\tI k");
result.add("die-\tter", "dh i:\tt @r");
result.add("died", "dh aI d");
result.add("diehl", "dh i: l");
result.add("diel", "dh i: l");
result.add("diem", "dh i: m");
result.add("dierks", "dh i: r k s");
result.add("dies", "dh aI z");
result.add("diet-\trich", "dh i: t\tr I k");
result.add("dietsche", "dh i: tS");
result.add("dietz", "dh i: t s");
result.add("dif-\tfe-\tren-\tces", "dh I\tf @r\tV n\ts V z");
result.add("dif-\tfe-\tren-\tti-\ta-\tted", "dh I\tf @r\te n\ttS i:\teI\tt I d");
result.add("dif-\tfe-\tren-\tti-\ta-\tting", "dh I\tf @r\te n\ttS i:\teI\tt I N");
result.add("dif-\tfe-\tren-\tti-\ta-\ttion", "dh I\tf @r\te n\tS i:\teI\tS V n");
result.add("dif-\tfe-\tren-\tti-\tate", "dh I\tf @r\te n\tS i:\teI t");
result.add("dif-\tfe-\tren-\tti-\tates", "dh I\tf @r\te n\tS i:\teI t s");
result.add("dif-\tfe-\tren-\ttial", "dh I\tf @r\te n\ttS V l");
result.add("dif-\tfe-\tren-\ttials", "dh I\tf @r\te n\ttS V l z");
result.add("dif-\tfe-\trence", "dh I\tf @r\tV n s");
result.add("dif-\tfe-\trent", "dh I\tf @r\tV n t");
result.add("dif-\tfe-\tring", "dh I\tf @r\tI N");
result.add("dif-\tfer", "dh I\tf @r");
result.add("dif-\tfered", "dh I\tf @r d");
result.add("dif-\tfers", "dh I\tf @r z");
result.add("dif-\tfi-\tcul-\tties", "dh I\tf I\tk V l\tt i: z");
result.add("dif-\tfi-\tcul-\tty", "dh I\tf I\tk V l\tt i:");
result.add("dif-\tfi-\tcult", "dh I\tf I\tk V l t");
result.add("dif-\tfi-\tcult-\tly", "dh I\tf I\tk V l\tt l i:");
result.add("dif-\tfu-\tses", "dh V f\tj u:\tz V z");
result.add("dif-\tfu-\tsing", "dh V f\tj u:\tz I N");
result.add("dif-\tfu-\tsion", "dh V f\tj u:\tZ V n");
result.add("dif-\tfuse", "dh V f\tj u: s");
result.add("dif-\tfused", "dh V f\tj u: z d");
result.add("diff", "dh I f");
result.add("diff-\trac-\ttion", "dh V f\tr { k\tS V n");
result.add("diff-\tract", "dh V f\tr { k t");
result.add("diffe-\trent-\tly", "dh I f\tr V n\tt l i:");
result.add("dig", "dh I g");
result.add("dig-\tby", "dh I g\tb i:");
result.add("dig-\tger", "dh I\tg @r");
result.add("dig-\tgers", "dh I\tg @r z");
result.add("dig-\tging", "dh I\tg I N");
result.add("dig-\tgins", "dh I\tg I n z");
result.add("dig-\tni-\tfied", "dh I g\tn I\tf aI d");
result.add("dig-\tni-\tfy", "dh I g\tn I\tf aI");
result.add("dig-\tni-\tta-\tries", "dh I g\tn I\tt e@\ti: z");
result.add("dig-\tni-\tta-\try", "dh I g\tn I\tt e@\ti:");
result.add("dig-\tni-\tty", "dh I g\tn I\tt i:");
result.add("dig-\tres-\tsing", "dh aI g\tr e\ts I N");
result.add("dig-\tres-\tsion", "dh aI g\tr e\tS V n");
result.add("dig-\tres-\tsions", "dh aI g\tr e\tS V n z");
result.add("dig-\tress", "dh aI g\tr e s");
result.add("dig-\tressed", "dh aI g\tr e s t");
result.add("diggs", "dh I g z");
result.add("digs", "dh I g z");
result.add("dike", "dh aI k");
result.add("dikes", "dh aI k s");
result.add("dil-\tlard", "dh I\tl @r d");
result.add("dil-\tlard's", "dh I\tl @r d z");
result.add("dil-\tler", "dh I\tl @r");
result.add("dil-\tler's", "dh I\tl @r z");
result.add("dil-\tley", "dh I\tl i:");
result.add("dil-\tlie", "dh I\tl i:");
result.add("dil-\tlin-\tger", "dh I\tl I\tN @r");
result.add("dil-\tling", "dh I\tl I N");
result.add("dil-\tling-\tham", "dh I\tl I N\th { m");
result.add("dil-\tlon", "dh I\tl V n");
result.add("dil-\tlon's", "dh I\tl V n z");
result.add("dil-\tly", "dh I\tl i:");
result.add("dil-\tti-\ta-\tzem", "dh I l\tt i:\tV\tz e m");
result.add("dil-\tworth", "dh I l\tw @r T");
result.add("dilks", "dh I l k s");
result.add("dill", "dh I l");
result.add("dille", "dh I l");
result.add("dills", "dh I l z");
result.add("dim", "dh I m");
result.add("dim-\tly", "dh I m\tl i:");
result.add("dim-\tmer", "dh I\tm @r");
result.add("dim-\tmers", "dh I\tm @r z");
result.add("dim-\tmick", "dh I\tm I k");
result.add("dim-\tming", "dh I\tm I N");
result.add("dim-\tmitt", "dh I\tm I t");
result.add("dim-\tple", "dh I m\tp V l");
result.add("dim-\tpled", "dh I m\tp V l d");
result.add("dime", "dh aI m");
result.add("dimes", "dh aI m z");
result.add("dime's", "dh aI m z");
result.add("dimmed", "dh I m d");
result.add("dims", "dh I m z");
result.add("din", "dh I n");
result.add("din-\tgee", "dh I N\tg i:");
result.add("din-\tgell", "dh I N\tg V l");
result.add("din-\tgell's", "dh I N\tg V l z");
result.add("din-\tger", "dh I\tN @r");
result.add("din-\tges", "dh I n\tdZ V z");
result.add("din-\tgess", "dh I N\tg I s");
result.add("din-\tghy", "dh I\tN i:");
result.add("din-\tgle", "dh I N\tg V l");
result.add("din-\tgo", "dh I N\tg @U");
result.add("din-\tgus", "dh I N\tg V s");
result.add("din-\tner", "dh I\tn @r");
result.add("din-\twid-\tdie", "dh I n\tw I\td i:");
result.add("dine", "dh aI n");
result.add("dined", "dh aI n d");
result.add("dines", "dh aI n z");
result.add("ding", "dh I N");
result.add("ding-\tman", "dh I N\tm V n");
result.add("ding-\twall", "dh I N\tg w V l");
result.add("dings", "dh I N z");
result.add("dins-\tdale", "dh I n\tz d eI l");
result.add("dins-\tmore", "dh i: n\ts m O@");
result.add("dinse", "dh I n s");
result.add("dint", "dh I n t");
result.add("dip", "dh I p");
result.add("dip-\tlo-\tma", "dh V p\tl @U\tm V");
result.add("dip-\tlo-\tma-\tcy", "dh V p\tl @U\tm V\ts i:");
result.add("dip-\tlo-\tma-\ttic", "dh I p\tl V\tm {\tt I k");
result.add("dip-\tlo-\tma-\ttical-\tly", "dh I p\tl V\tm {\tt I k\tl i:");
result.add("dip-\tlo-\tmas", "dh V p\tl @U\tm V z");
result.add("dip-\tlo-\tmat", "dh I p\tl V\tm { t");
result.add("dip-\tlo-\tmats", "dh I p\tl V\tm { t s");
result.add("dip-\tlo-\tmat's", "dh I p\tl V\tm { t s");
result.add("dip-\tper", "dh I\tp @r");
result.add("dip-\tpers", "dh I\tp @r z");
result.add("dip-\tping", "dh I\tp I N");
result.add("dip-\tpold", "dh I\tp @U l d");
result.add("dip-\tpy", "dh I\tp i:");
result.add("dip-\tstick", "dh I p\ts t I k");
result.add("diph-\tthe-\tri-\ta", "dh I f\tT I@\ti:\tV");
result.add("dipped", "dh I p t");
result.add("dips", "dh I p s");
result.add("dir-\thams", "dh @r\tV m z");
result.add("dir-\tti-\ter", "dh @r\tt i:\t@r");
result.add("dir-\tti-\test", "dh @r\tt i:\tV s t");
result.add("dir-\tty", "dh @r\tt i:");
result.add("dire", "dh aI r");
result.add("dirge", "dh @r dZ");
result.add("dirk", "dh @r k");
result.add("dirkes", "dh @r k s");
result.add("dirks", "dh @r k s");
result.add("dirt", "dh @r t");
result.add("dirt's", "dh @r t s");
result.add("dis", "dh I s");
result.add("di's", "dh aI z");
result.add("dis-\tban-\tded", "dh I s\tb { n\td V d");
result.add("dis-\tban-\tding", "dh I s\tb { n\td I N");
result.add("dis-\tband", "dh I s\tb { n d");
result.add("dis-\tbar", "dh I s\tb Q@");
result.add("dis-\tbar-\tment", "dh I s\tb Q@\tm V n t");
result.add("dis-\tbarred", "dh I s\tb Q@ d");
result.add("dis-\tbe-\tlie-\tving", "dh I s\tb V\tl i:\tv I N");
result.add("dis-\tbe-\tlief", "dh I s\tb V\tl i: f");
result.add("dis-\tbe-\tlieve", "dh I s\tb V\tl i: v");
result.add("dis-\tbur-\tsing", "dh I s\tb @r\ts I N");
result.add("dis-\tburse", "dh I s\tb @r s");
result.add("dis-\tburse-\tment", "dh I s\tb @r s\tm V n t");
result.add("dis-\tburse-\tments", "dh I s\tb @r s\tm V n t s");
result.add("dis-\tbursed", "dh I s\tb @r s t");
result.add("dis-\tcar-\tded", "dh I s\tk Q@\td V d");
result.add("dis-\tcar-\tding", "dh I s\tk Q@\td I N");
result.add("dis-\tcard", "dh I s\tk Q@ d");
result.add("dis-\tcards", "dh I s\tk Q@ d z");
result.add("dis-\tcer-\tni-\tble", "dh I\ts @r\tn I\tb V l");
result.add("dis-\tcer-\tning", "dh I\ts @r\tn I N");
result.add("dis-\tcern", "dh I\ts @r n");
result.add("dis-\tcern-\tment", "dh I\ts @r n\tm V n t");
result.add("dis-\tcerned", "dh I\ts @r n d");
result.add("dis-\tchar-\tges", "dh I s\ttS Q@\tdZ V z");
result.add("dis-\tchar-\tging", "dh I s\ttS Q@\tdZ I N");
result.add("dis-\tcharge", "dh I s\ttS Q@ dZ");
result.add("dis-\tcharged", "dh I s\ttS Q@ dZ d");
result.add("dis-\tci-\tple", "dh V\ts aI\tp V l");
result.add("dis-\tci-\tples", "dh V\ts aI\tp V l z");
result.add("dis-\tcip-\tli-\tna-\tri-\tan", "dh I\ts I p\tl I\tn e@\ti:\tV n");
result.add("dis-\tcip-\tli-\tna-\tri-\tans", "dh I\ts I p\tl I\tn e@\ti:\tV n z");
result.add("dis-\tcip-\tli-\tna-\try", "dh I\ts I p\tl I\tn e@\ti:");
result.add("dis-\tcip-\tli-\tning", "dh I\ts I p\tl I\tn I N");
result.add("dis-\tcip-\tline", "dh I\ts I p\tl I n");
result.add("dis-\tcip-\tlined", "dh I\ts I p\tl I n d");
result.add("dis-\tcip-\tlines", "dh I\ts I p\tl I n z");
result.add("dis-\tco", "dh I s\tk @U");
result.add("dis-\tco-\tlo-\tra-\ttion", "dh I s\tk V\tl @r\teI\tS V n");
result.add("dis-\tco-\tlo-\tra-\ttions", "dh I s\tk V\tl @r\teI\tS V n z");
result.add("dis-\tco-\tlor", "dh I s\tk V\tl @r");
result.add("dis-\tco-\tlored", "dh I s\tk V\tl @r d");
result.add("dis-\tco-\tlors", "dh I s\tk V\tl @r z");
result.add("dis-\tco-\ttheque", "dh I s\tk @U\tt e k");
result.add("dis-\tcog-\tra-\tphy", "dh V s\tk O: g\tr V\tf i:");
result.add("dis-\tcom-\tfort", "dh I s\tk V m\tf @r t");
result.add("dis-\tcon-\tcer-\tting", "dh I s\tk V n\ts @r\tt I N");
result.add("dis-\tcon-\tcert", "dh I s\tk V n\ts @r t");
result.add("dis-\tcon-\tcerts", "dh I s\tk V n\ts @r t s");
result.add("dis-\tcon-\tnec-\tted", "dh I s\tk V\tn e k\tt V d");
result.add("dis-\tcon-\tnec-\tting", "dh I s\tk V\tn e k\tt I N");
result.add("dis-\tcon-\tnec-\ttion", "dh I s\tk V\tn e k\tS V n");
result.add("dis-\tcon-\tnect", "dh I s\tk V\tn e k t");
result.add("dis-\tcon-\tten-\tted", "dh I s\tk V n\tt e n\tt V d");
result.add("dis-\tcon-\ttent", "dh I s\tk V n\tt e n t");
result.add("dis-\tcon-\ttents", "dh I s\tk V n\tt e n t s");
result.add("dis-\tcon-\tti-\tnu-\ta-\ttion", "dh I s\tk V n\tt I n\tj u:\teI\tS V n");
result.add("dis-\tcon-\tti-\tnu-\tance", "dh I s\tk V n\tt I n\tj u:\tV n s");
result.add("dis-\tcon-\tti-\tnu-\ti-\tty", "dh I s\tk Q n\tt I\tn u:\tI\tt i:");
result.add("dis-\tcon-\tti-\tnu-\ting", "dh I s\tk V n\tt I n\tj u:\tI N");
result.add("dis-\tcon-\tti-\tnue", "dh I s\tk V n\tt I n\tj u:");
result.add("dis-\tcon-\tti-\tnued", "dh I s\tk V n\tt I n\tj u: d");
result.add("dis-\tcor-\tdant", "dh I s\tk O@\td V n t");
result.add("dis-\tcord", "dh I s\tk O@ d");
result.add("dis-\tcos", "dh I s\tk @U z");
result.add("dis-\tcou-\tra-\tges", "dh I s\tk @r\tI\tdZ V z");
result.add("dis-\tcou-\tra-\tging", "dh I s\tk @r\tV\tdZ I N");
result.add("dis-\tcou-\trage", "dh I s\tk @r\tI dZ");
result.add("dis-\tcou-\trage-\tment", "dh I s\tk @r\tI dZ\tm V n t");
result.add("dis-\tcou-\traged", "dh I s\tk @r\tV dZ d");
result.add("dis-\tcoun-\tta-\tble", "dh I s\tk aU n\tt V\tb V l");
result.add("dis-\tcoun-\tted", "dh I s\tk aU n\tt V d");
result.add("dis-\tcoun-\tter", "dh I s\tk aU n\tt @r");
result.add("dis-\tcoun-\tters", "dh I s\tk aU n\tt @r z");
result.add("dis-\tcoun-\tting", "dh I s\tk aU n\tt I N");
result.add("dis-\tcount", "dh I s\tk aU n t");
result.add("dis-\tcounts", "dh I s\tk aU n t s");
result.add("dis-\tcour-\tses", "dh I s\tk O@\ts V z");
result.add("dis-\tcourse", "dh I s\tk O@ s");
result.add("dis-\tcur-\tsive", "dh I s\tk @r\ts I v");
result.add("dis-\tcus", "dh I s\tk V s");
result.add("dis-\tcus-\tses", "dh I s\tk V\ts V z");
result.add("dis-\tcus-\tsing", "dh I s\tk V\ts I N");
result.add("dis-\tcus-\tsion", "dh I s\tk V\tS V n");
result.add("dis-\tcus-\tsions", "dh I s\tk V\tS V n z");
result.add("dis-\tcuss", "dh I s\tk V s");
result.add("dis-\tcussed", "dh I s\tk V s t");
result.add("dis-\tdai-\tning", "dh I s\td eI\tn I N");
result.add("dis-\tdain", "dh I s\td eI n");
result.add("dis-\tdain-\tful", "dh I s\td eI n\tf V l");
result.add("dis-\tdained", "dh I s\td eI n d");
result.add("dis-\tdains", "dh I s\td eI n z");
result.add("dis-\tfa-\tvo-\tring", "dh I s\tf eI\tv @r\tI N");
result.add("dis-\tfa-\tvor", "dh I s\tf eI\tv @r");
result.add("dis-\tfi-\tgu-\tring", "dh I s\tf I g\tj @r\tI N");
result.add("dis-\tfi-\tgure", "dh I s\tf I g\tj @r");
result.add("dis-\tfi-\tgure-\tment", "dh I s\tf I g\tj @r\tm e n t");
result.add("dis-\tfi-\tgured", "dh I s\tf I g\tj @r d");
result.add("dis-\tgorge", "dh I s\tg O@ dZ");
result.add("dis-\tgorge-\tment", "dh I s\tg O@ dZ\tm V n t");
result.add("dis-\tgorged", "dh I s\tg O@ dZ d");
result.add("dis-\tgui-\tses", "dh I s\tg aI\tz V z");
result.add("dis-\tgui-\tsing", "dh I s\tg aI\tz I N");
result.add("dis-\tguise", "dh I s\tg aI z");
result.add("dis-\tguised", "dh I s\tg aI z d");
result.add("dis-\tgus-\tted", "dh I s\tg V s\tt V d");
result.add("dis-\tgus-\tting", "dh I s\tg V s\tt I N");
result.add("dis-\tgust", "dh I s\tg V s t");
result.add("dis-\tgusts", "dh I s\tg V s t s");
result.add("dis-\thar-\tmo-\tny", "dh I s\th Q@\tm V\tn i:");
result.add("dis-\tho-\tnes-\tty", "dh I\ts Q\tn V s\tt i:");
result.add("dis-\tho-\tnest", "dh I\ts Q\tn V s t");
result.add("dis-\tho-\tnest-\tly", "dh I\ts O:\tn V s\tt l i:");
result.add("dis-\tho-\tno-\tra-\tble", "dh I\ts Q\tn @r\tV\tb V l");
result.add("dis-\tho-\tnor", "dh I\ts Q\tn @r");
result.add("dis-\tho-\tnored", "dh I\ts Q\tn @r d");
result.add("dis-\tjoin-\tted", "dh I s\tdZ OI n\tt V d");
result.add("dis-\tjoint", "dh I s\tdZ OI n t");
result.add("dis-\tkette", "dh I s\tk e t");
result.add("dis-\tkettes", "dh I s\tk e t s");
result.add("dis-\tkin", "dh I s\tk I n");
result.add("dis-\tli-\tking", "dh I s\tl aI\tk I N");
result.add("dis-\tlike", "dh I s\tl aI k");
result.add("dis-\tliked", "dh I s\tl aI k t");
result.add("dis-\tlikes", "dh I s\tl aI k s");
result.add("dis-\tlo-\tca-\tted", "dh I s\tl @U\tk eI\tt V d");
result.add("dis-\tlo-\tca-\ttion", "dh I s\tl @U\tk eI\tS V n");
result.add("dis-\tlo-\tca-\ttions", "dh I s\tl @U\tk eI\tS V n z");
result.add("dis-\tlo-\tcate", "dh I s\tl @U\tk eI t");
result.add("dis-\tlo-\tyal", "dh I s\tl OI\tV l");
result.add("dis-\tlo-\tyal-\tty", "dh I s\tl OI\tV l\tt i:");
result.add("dis-\tlod-\tging", "dh I s\tl Q\tdZ I N");
result.add("dis-\tlodge", "dh I s\tl Q dZ");
result.add("dis-\tlodged", "dh I s\tl Q dZ d");
result.add("dis-\tmal", "dh I z\tm V l");
result.add("dis-\tmal-\tly", "dh I z\tm V\tl i:");
result.add("dis-\tman-\tt-\tling", "dh I s\tm { n\tt V\tl I N");
result.add("dis-\tman-\ttle", "dh I s\tm { n\tt V l");
result.add("dis-\tman-\ttle-\tment", "dh I s\tm { n\tt V l\tm V n t");
result.add("dis-\tman-\ttled", "dh I s\tm { n\tt V l d");
result.add("dis-\tman-\ttles", "dh I s\tm { n\tt V l z");
result.add("dis-\tmay", "dh I s\tm eI");
result.add("dis-\tmay-\ting", "dh I s\tm eI\tI N");
result.add("dis-\tmayed", "dh I s\tm eI d");
result.add("dis-\tmays", "dh I s\tm eI z");
result.add("dis-\tmem-\tbe-\tring", "dh I s\tm e m\tb @r\tI N");
result.add("dis-\tmem-\tber", "dh I s\tm e m\tb @r");
result.add("dis-\tmem-\tber-\tment", "dh I s\tm e m\tb @r\tm V n t");
result.add("dis-\tmem-\tbered", "dh I s\tm e m\tb @r d");
result.add("dis-\tmis-\tsal", "dh I s\tm I\ts V l");
result.add("dis-\tmis-\tsals", "dh I s\tm I\ts V l z");
result.add("dis-\tmis-\tses", "dh I s\tm I\ts V z");
result.add("dis-\tmis-\tsing", "dh I s\tm I\ts I N");
result.add("dis-\tmis-\tsive", "dh I s\tm I\ts I v");
result.add("dis-\tmiss", "dh I s\tm I s");
result.add("dis-\tmissed", "dh I s\tm I s t");
result.add("dis-\tney", "dh I z\tn i:");
result.add("dis-\tney-\tland", "dh I z\tn i:\tl { n d");
result.add("dis-\tney's", "dh I z\tn i: z");
result.add("dis-\to-\tbe-\tdi-\tence", "dh I\ts V\tb i:\td i:\tV n s");
result.add("dis-\to-\tbe-\tdi-\tent", "dh I\ts V\tb i:\td i:\tV n t");
result.add("dis-\to-\tbe-\tying", "dh I\ts @U\tb eI\tI N");
result.add("dis-\to-\tbey", "dh I\ts V\tb eI");
result.add("dis-\to-\tbeyed", "dh I\ts @U\tb eI d");
result.add("dis-\tpa-\tra-\tges", "dh I s\tp e@\tI\tdZ V z");
result.add("dis-\tpa-\tra-\tging", "dh I s\tp e@\tI\tdZ I N");
result.add("dis-\tpa-\tra-\tging-\tly", "dh I s\tp e@\tI\tdZ I N\tl i:");
result.add("dis-\tpa-\trage", "dh I s\tp e@\tI dZ");
result.add("dis-\tpa-\traged", "dh I s\tp e@\tI dZ d");
result.add("dis-\tpa-\trate", "dh I s\tp @r\tV t");
result.add("dis-\tpa-\tri-\tties", "dh I s\tp e@\tI\tt i: z");
result.add("dis-\tpa-\tri-\tty", "dh I s\tp e@\tI\tt i:");
result.add("dis-\tpair", "dh I s\tp e@");
result.add("dis-\tpas-\tsio-\tnate", "dh I s\tp {\tS V\tn V t");
result.add("dis-\tpas-\tsio-\tnate-\tly", "dh I s\tp {\tS V\tn V t\tl i:");
result.add("dis-\tpat-\tcher", "dh I s\tp {\ttS @r");
result.add("dis-\tpat-\tchers", "dh I s\tp {\ttS @r z");
result.add("dis-\tpat-\tcher's", "dh I s\tp {\ttS @r z");
result.add("dis-\tpat-\tches", "dh I s\tp {\ttS V z");
result.add("dis-\tpat-\tching", "dh I s\tp {\ttS I N");
result.add("dis-\tpatch", "dh I s\tp { tS");
result.add("dis-\tpatched", "dh I s\tp { tS t");
result.add("dis-\tpel", "dh I s\tp e l");
result.add("dis-\tpel-\tling", "dh I s\tp e\tl I N");
result.add("dis-\tpell", "dh I s\tp e l");
result.add("dis-\tpelled", "dh I s\tp e l d");
result.add("dis-\tpels", "dh I s\tp e l z");
result.add("dis-\tpen-\tsa-\tble", "dh I s\tp e n\ts V\tb V l");
result.add("dis-\tpen-\tsa-\try", "dh I s\tp e n\ts @r\ti:");
result.add("dis-\tpen-\tsa-\ttion", "dh I s\tp V n\ts eI\tS V n");
result.add("dis-\tpen-\tser", "dh I s\tp e n\ts @r");
result.add("dis-\tpen-\tsers", "dh I s\tp e n\ts @r z");
result.add("dis-\tpen-\tses", "dh I s\tp e n\ts V z");
result.add("dis-\tpen-\tsing", "dh I s\tp e n\ts I N");
result.add("dis-\tpense", "dh I s\tp e n s");
result.add("dis-\tpensed", "dh I s\tp e n s t");
result.add("dis-\tper-\tsal", "dh I s\tp @r\ts V l");
result.add("dis-\tper-\tsant", "dh I s\tp @r\ts V n t");
result.add("dis-\tper-\tsants", "dh I s\tp @r\ts V n t s");
result.add("dis-\tper-\tsing", "dh I s\tp @r\ts I N");
result.add("dis-\tper-\tsion", "dh I s\tp @r\tZ V n");
result.add("dis-\tper-\tsive", "dh I s\tp @r\ts I v");
result.add("dis-\tperse", "dh I s\tp @r s");
result.add("dis-\tpersed", "dh I s\tp @r s t");
result.add("dis-\tpi-\tri-\tted", "dh I s\tp I@\tI\tt V d");
result.add("dis-\tpi-\tri-\tting", "dh I s\tp I@\tI\tt I N");
result.add("dis-\tpla-\tces", "dh I s\tp l eI\ts V z");
result.add("dis-\tpla-\tcing", "dh I s\tp l eI\ts I N");
result.add("dis-\tplace", "dh I s\tp l eI s");
result.add("dis-\tplace-\tment", "dh I s\tp l eI s\tm V n t");
result.add("dis-\tplace-\tments", "dh I s\tp l eI s\tm V n t s");
result.add("dis-\tplaced", "dh I s\tp l eI s t");
result.add("dis-\tplay", "dh I s\tp l eI");
result.add("dis-\tplay-\ting", "dh I s\tp l eI\tI N");
result.add("dis-\tplayed", "dh I s\tp l eI d");
result.add("dis-\tplays", "dh I s\tp l eI z");
result.add("dis-\tplea-\tsure", "dh I s\tp l e\tZ @r");
result.add("dis-\tplease", "dh I s\tp l i: z");
result.add("dis-\tpleased", "dh I s\tp l i: z d");
result.add("dis-\tpo-\tsa-\tble", "dh I s\tp @U\tz V\tb V l");
result.add("dis-\tpo-\tsa-\tbles", "dh I s\tp @U\tz V\tb V l z");
result.add("dis-\tpo-\tsal", "dh I s\tp @U\tz V l");
result.add("dis-\tpo-\tsals", "dh I s\tp @U\tz V l z");
result.add("dis-\tpo-\tser", "dh I s\tp @U\tz @r");
result.add("dis-\tpo-\tses", "dh I s\tp @U\tz V z");
result.add("dis-\tpo-\tsi-\ttion", "dh I s\tp V\tz I\tS V n");
result.add("dis-\tpo-\tsi-\ttions", "dh I s\tp V\tz I\tS V n z");
result.add("dis-\tpo-\tsi-\ttive", "dh I s\tp Q\tz I\tt I v");
result.add("dis-\tpo-\tsing", "dh I s\tp @U\tz I N");
result.add("dis-\tpos-\tsess", "dh I s\tp V\tz e s");
result.add("dis-\tpos-\tsessed", "dh I s\tp V\tz e s t");
result.add("dis-\tpose", "dh I s\tp @U z");
result.add("dis-\tposed", "dh I s\tp @U z d");
result.add("dis-\tpu-\tta-\ttion", "dh I s\tp j u:\tt eI\tS V n");
result.add("dis-\tpu-\tted", "dh I s\tp j u:\tt V d");
result.add("dis-\tpu-\tting", "dh I s\tp j u:\tt I N");
result.add("dis-\tpute", "dh I s\tp j u: t");
result.add("dis-\tputes", "dh I s\tp j u: t s");
result.add("dis-\tqua-\tli-\tfi-\tca-\ttion", "dh I s\tk w Q\tl I\tf I\tk eI\tS V n");
result.add("dis-\tqua-\tli-\tfied", "dh I s\tk w Q\tl I\tf aI d");
result.add("dis-\tqua-\tli-\tfies", "dh I s\tk w Q\tl I\tf aI z");
result.add("dis-\tqua-\tli-\tfy", "dh I s\tk w Q\tl I\tf aI");
result.add("dis-\tqua-\tli-\tfy-\ting", "dh I s\tk w Q\tl I\tf aI\tI N");
result.add("dis-\tqui-\te-\tting", "dh I s\tk w aI\tV\tt I N");
result.add("dis-\tqui-\tet", "dh I s\tk w aI\tV t");
result.add("dis-\trae-\tli", "dh I z\tr eI\tl i:");
result.add("dis-\tre-\tgar-\tded", "dh I s\tr I\tg Q@\td V d");
result.add("dis-\tre-\tgar-\tding", "dh I s\tr I\tg Q@\td I N");
result.add("dis-\tre-\tgard", "dh I s\tr I\tg Q@ d");
result.add("dis-\tre-\tgards", "dh I s\tr I\tg Q@ d z");
result.add("dis-\tre-\tpair", "dh I s\tr V\tp e@");
result.add("dis-\tre-\tpu-\tta-\tble", "dh I s\tr e p\tj V\tt V\tb V l");
result.add("dis-\tre-\tpute", "dh I s\tr V p\tj u: t");
result.add("dis-\tres-\tpec-\tted", "dh I s\tr V s\tp e k\tt V d");
result.add("dis-\tres-\tpec-\tting", "dh I s\tr V s\tp e k\tt I N");
result.add("dis-\tres-\tpect", "dh I s\tr V s\tp e k t");
result.add("dis-\tres-\tpect-\tful", "dh I s\tr V s\tp e k\tt f V l");
result.add("dis-\tres-\tpects", "dh I s\tr V s\tp e k t s");
result.add("dis-\tse-\tmi-\tna-\tted", "dh I\ts e\tm I\tn eI\tt I d");
result.add("dis-\tse-\tmi-\tna-\tting", "dh I\ts e\tm I\tn eI\tt I N");
result.add("dis-\tse-\tmi-\tna-\ttion", "dh I\ts e\tm I\tn eI\tS V n");
result.add("dis-\tse-\tmi-\tnate", "dh I\ts e\tm V\tn eI t");
result.add("dis-\tsec-\tted", "dh aI\ts e k\tt V d");
result.add("dis-\tsec-\tting", "dh aI\ts e k\tt I N");
result.add("dis-\tsec-\ttion", "dh aI\ts e k\tS V n");
result.add("dis-\tsec-\ttions", "dh aI\ts e k\tS V n z");
result.add("dis-\tsect", "dh aI\ts e k t");
result.add("dis-\tsects", "dh aI\ts e k t s");
result.add("dis-\tsem-\tble", "dh I\ts e m\tb V l");
result.add("dis-\tsemb-\tling", "dh I\ts e m\tb l I N");
result.add("dis-\tsen-\tsion", "dh I\ts e n\tS V n");
result.add("dis-\tsen-\tted", "dh I\ts e n\tt V d");
result.add("dis-\tsen-\tter", "dh I\ts e n\tt @r");
result.add("dis-\tsen-\tters", "dh I\ts e n\tt @r z");
result.add("dis-\tsen-\tting", "dh I\ts e n\tt I N");
result.add("dis-\tsent", "dh I\ts e n t");
result.add("dis-\tsents", "dh I\ts e n t s");
result.add("dis-\tser-\tta-\ttion", "dh I\ts @r\tt eI\tS V n");
result.add("dis-\tser-\tvice", "dh I s\ts @r\tv I s");
result.add("dis-\tsi-\tdence", "dh I\ts I\td V n s");
result.add("dis-\tsi-\tdent", "dh I\ts I\td V n t");
result.add("dis-\tsi-\tdents", "dh I\ts I\td V n t s");
result.add("dis-\tsi-\tmi-\tla-\tri-\tty", "dh I s\ts I\tm I\tl {\tr I\tt i:");
result.add("dis-\tsi-\tmi-\tlar", "dh I s\ts I\tm V\tl @r");
result.add("dis-\tsi-\tpa-\tted", "dh I\ts I\tp eI\tt I d");
result.add("dis-\tsi-\tpa-\tting", "dh I\ts I\tp eI\tt I N");
result.add("dis-\tsi-\tpa-\ttion", "dh I\ts I\tp eI\tS V n");
result.add("dis-\tsi-\tpa-\ttive", "dh I\ts I\tp eI\tt I v");
result.add("dis-\tsi-\tpate", "dh I\ts I\tp eI t");
result.add("dis-\tsi-\tpates", "dh I\ts I\tp eI t s");
result.add("dis-\tso-\tci-\ta-\ttion", "dh I\ts @U\ts i:\teI\tS V n");
result.add("dis-\tso-\tci-\tate", "dh I\ts @U\ts i:\teI t");
result.add("dis-\tso-\tlu-\ttion", "dh I\ts V\tl u:\tS V n");
result.add("dis-\tso-\tnance", "dh I\ts V\tn V n s");
result.add("dis-\tso-\tnant", "dh I\ts V\tn V n t");
result.add("dis-\tsol-\tver", "dh I\tz Q l\tv @r");
result.add("dis-\tsol-\tvers", "dh I\tz Q l\tv @r z");
result.add("dis-\tsol-\tving", "dh I\tz O: l\tv I N");
result.add("dis-\tsolve", "dh I\tz Q l v");
result.add("dis-\tsolved", "dh I\tz Q l v d");
result.add("dis-\tsolves", "dh I\tz Q l v z");
result.add("dis-\tsua-\tded", "dh I s\tw eI\td V d");
result.add("dis-\tsuade", "dh I s\tw eI d");
result.add("dis-\tsym-\tmet-\tric", "dh I\ts V\tm e t\tr I k");
result.add("dis-\tsym-\tmet-\try", "dh I\ts I\tm V t\tr i:");
result.add("dis-\ttad", "dh I s\tt V d");
result.add("dis-\ttal", "dh I s\tt V l");
result.add("dis-\ttan-\tces", "dh I s\tt V n\ts V z");
result.add("dis-\ttan-\tcing", "dh I s\tt V n\ts I N");
result.add("dis-\ttance", "dh I s\tt V n s");
result.add("dis-\ttanced", "dh I s\tt V n s t");
result.add("dis-\ttant", "dh I s\tt V n t");
result.add("dis-\ttaste", "dh I s\tt eI s t");
result.add("dis-\ttaste-\tful", "dh I s\tt eI s\tt f V l");
result.add("dis-\ttem-\tper", "dh I s\tt e m\tp @r");
result.add("dis-\tten-\tded", "dh I s\tt e n\td V d");
result.add("dis-\ttend", "dh I s\tt e n d");
result.add("dis-\ttil", "dh I s\tt I l");
result.add("dis-\ttil-\tla-\ttion", "dh I s\tt I\tl eI\tS V n");
result.add("dis-\ttil-\tlate", "dh I s\tt I\tl eI t");
result.add("dis-\ttil-\tlates", "dh I s\tt I\tl eI t s");
result.add("dis-\ttil-\tle-\tries", "dh I s\tt I\tl @r\ti: z");
result.add("dis-\ttil-\tle-\try", "dh I s\tt I\tl @r\ti:");
result.add("dis-\ttil-\tler", "dh I s\tt I\tl @r");
result.add("dis-\ttil-\tlers", "dh I s\tt I\tl @r z");
result.add("dis-\ttil-\tler's", "dh I s\tt I\tl @r z");
result.add("dis-\ttil-\tling", "dh I s\tt I\tl I N");
result.add("dis-\ttill", "dh I s\tt I l");
result.add("dis-\ttilled", "dh I s\tt I l d");
result.add("dis-\ttills", "dh I s\tt I l z");
result.add("dis-\ttin-\tgui-\tsha-\tble", "dh I s\tt I N\tg w I\tS V\tb V l");
result.add("dis-\ttin-\tgui-\tshes", "dh I s\tt I N\tg w I\tS V z");
result.add("dis-\ttin-\tgui-\tshing", "dh I s\tt I N\tg w I\tS I N");
result.add("dis-\ttin-\tguish", "dh I s\tt I N\tg w I S");
result.add("dis-\ttin-\tguished", "dh I s\tt I N\tg w I S t");
result.add("dis-\ttinc-\ttion", "dh I s\tt I N\tk S V n");
result.add("dis-\ttinc-\ttions", "dh I s\tt I N\tk S V n z");
result.add("dis-\ttinc-\ttive", "dh I s\tt I N\tk t I v");
result.add("dis-\ttinc-\ttive-\tly", "dh I s\tt I N\tk t I v\tl i:");
result.add("dis-\ttinc-\ttive-\tness", "dh I s\tt I N\tk t I v\tn V s");
result.add("dis-\ttinct", "dh I s\tt I N k t");
result.add("dis-\ttinct-\tly", "dh I s\tt I N\tk t l i:");
result.add("dis-\ttor-\tted", "dh I s\tt O@\tt V d");
result.add("dis-\ttor-\tting", "dh I s\tt O@\tt I N");
result.add("dis-\ttor-\ttion", "dh I s\tt O@\tS V n");
result.add("dis-\ttor-\ttions", "dh I s\tt O@\tS V n z");
result.add("dis-\ttort", "dh I s\tt O@ t");
result.add("dis-\ttorts", "dh I s\tt O@ t s");
result.add("dis-\ttur-\tban-\tces", "dh I s\tt @r\tb V n\ts V z");
result.add("dis-\ttur-\tbance", "dh I s\tt @r\tb V n s");
result.add("dis-\ttur-\tbing", "dh I s\tt @r\tb I N");
result.add("dis-\ttur-\tbing-\tly", "dh I s\tt @r\tb I N\tl i:");
result.add("dis-\tturb", "dh I s\tt @r b");
result.add("dis-\tturbed", "dh I s\tt @r b d");
result.add("dis-\tturbs", "dh I s\tt @r b z");
result.add("dis-\tu-\tni-\tty", "dh I s\tj u:\tn I\tt i:");
result.add("dis-\tu-\tnion", "dh I s\tj u: n\tj V n");
result.add("disc", "dh I s k");
result.add("disc-\tlai-\tmer", "dh I s\tk l eI\tm @r");
result.add("disc-\tlai-\tmers", "dh I s\tk l eI\tm @r z");
result.add("disc-\tlai-\tming", "dh I s\tk l eI\tm I N");
result.add("disc-\tlaim", "dh I s\tk l eI m");
result.add("disc-\tlaimed", "dh I s\tk l eI m d");
result.add("disc-\tlaims", "dh I s\tk l eI m z");
result.add("disc-\tlo-\tses", "dh I s\tk l @U\tz V z");
result.add("disc-\tlo-\tsing", "dh I s\tk l @U\tz I N");
result.add("disc-\tlo-\tsure", "dh I s\tk l @U\tZ @r");
result.add("disc-\tlo-\tsures", "dh I s\tk l @U\tZ @r z");
result.add("disc-\tlose", "dh I s\tk l @U z");
result.add("disc-\tlosed", "dh I s\tk l @U z d");
result.add("disc-\tre-\ttio-\tna-\try", "dh I s\tk r e\tS V\tn e@\ti:");
result.add("disc-\tre-\ttion", "dh I s\tk r e\tS V n");
result.add("disc-\trete", "dh I s\tk r i: t");
result.add("disc-\tri-\tmi-\tna-\tted", "dh I s\tk r I\tm I\tn eI\tt V d");
result.add("disc-\tri-\tmi-\tna-\tting", "dh I s\tk r I\tm I\tn eI\tt I N");
result.add("disc-\tri-\tmi-\tna-\ttion", "dh I s\tk r I\tm I\tn eI\tS V n");
result.add("disc-\tri-\tmi-\tna-\tto-\try", "dh I s\tk r I\tm I\tn V\tt O@\ti:");
result.add("disc-\tri-\tmi-\tnate", "dh I s\tk r I\tm I\tn eI t");
result.add("disc-\tri-\tmi-\tnates", "dh I s\tk r I\tm I\tn eI t s");
result.add("discs", "dh I s k s");
result.add("disg-\trace", "dh I s\tg r eI s");
result.add("disg-\trace-\tful", "dh I s\tg r eI s\tf V l");
result.add("disg-\traced", "dh I s\tg r eI s t");
result.add("disg-\trun-\tt-\tling", "dh I s\tg r V n\tt V\tl I N");
result.add("disg-\trun-\ttle", "dh I s\tg r V n\tt V l");
result.add("disg-\trun-\ttle-\tment", "dh I s\tg r V n\tt V l\tm V n t");
result.add("disg-\trun-\ttled", "dh I s\tg r V n\tt V l d");
result.add("dish", "dh I S");
result.add("dish-\twa-\tsher", "dh I S\tw Q\tS @r");
result.add("dish-\twa-\tshers", "dh I S\tw Q\tS @r z");
result.add("dish-\twa-\tshing", "dh I S\tw Q\tS I N");
result.add("dished", "dh I S t");
result.add("disk", "dh I s k");
result.add("disk-\tless", "dh I s\tk l V s");
result.add("disks", "dh I s k s");
result.add("disp-\tro-\tpor-\ttio-\tnate", "dh I s\tp r V\tp O@\tS V\tn V t");
result.add("disp-\tro-\tpor-\ttio-\tnate-\tly", "dh I s\tp r V\tp O@\tS V\tn V t\tl i:");
result.add("disp-\tro-\tven", "dh I s\tp r u:\tv V n");
result.add("disp-\trove", "dh I s\tp r u: v");
result.add("disp-\troved", "dh I s\tp r u: v d");
result.add("disp-\troves", "dh I s\tp r u: v z");
result.add("dist-\trac-\tted", "dh I s\tt r { k\tt V d");
result.add("dist-\trac-\tting", "dh I s\tt r { k\tt I N");
result.add("dist-\trac-\ttion", "dh I s\tt r { k\tS V n");
result.add("dist-\trac-\ttions", "dh I s\tt r { k\tS V n z");
result.add("dist-\tract", "dh I s\tt r { k t");
result.add("dist-\tracts", "dh I s\tt r { k t s");
result.add("dist-\traught", "dh I s\tt r O: t");
result.add("dist-\tres-\tses", "dh I s\tt r e\ts V z");
result.add("dist-\tres-\tsing", "dh I s\tt r e\ts I N");
result.add("dist-\tres-\tsing-\tly", "dh I s\tt r e\ts I N\tl i:");
result.add("dist-\tress", "dh I s\tt r e s");
result.add("dist-\tressed", "dh I s\tt r e s t");
result.add("dist-\tri-\tbu-\tted", "dh I s\tt r I b\tj V\tt V d");
result.add("dist-\tri-\tbu-\tting", "dh I s\tt r I b\tj u:\tt I N");
result.add("dist-\tri-\tbu-\ttion", "dh I s\tt r I b\tj u:\tS V n");
result.add("dist-\tri-\tbu-\ttions", "dh I s\tt r I b\tj u:\tS V n z");
result.add("dist-\tri-\tbu-\ttive", "dh I s\tt r I b\tj u:\tt I v");
result.add("dist-\tri-\tbu-\ttor", "dh I s\tt r I b\tj V\tt @r");
result.add("dist-\tri-\tbu-\ttor-\tship", "dh I s\tt r I b\tj u:\tt @r\tS I p");
result.add("dist-\tri-\tbu-\ttor-\tships", "dh I s\tt r I b\tj u:\tt @r\tS I p s");
result.add("dist-\tri-\tbu-\ttors", "dh I s\tt r I b\tj V\tt @r z");
result.add("dist-\tri-\tbu-\ttor's", "dh I s\tt r I b\tj u:\tt @r z");
result.add("dist-\tri-\tbute", "dh I s\tt r I b\tj u: t");
result.add("dist-\tri-\tbutes", "dh I s\tt r I b\tj u: t s");
result.add("dist-\tric-\tting", "dh I s\tt r I k\tt I N");
result.add("dist-\trict", "dh I s\tt r I k t");
result.add("dist-\tricts", "dh I s\tt r I k t s");
result.add("dist-\trict's", "dh I s\tt r I k t s");
result.add("dist-\trus-\tted", "dh I s\tt r V s\tt V d");
result.add("dist-\trust", "dh I s\tt r V s t");
result.add("dist-\trust-\tful", "dh I s\tt r V s\tt f V l");
result.add("dist-\trusts", "dh I s\tt r V s t s");
result.add("dit-\tches", "dh I\ttS V z");
result.add("dit-\tching", "dh I\ttS I N");
result.add("dit-\tmars", "dh I t\tm @r z");
result.add("dit-\tmore", "dh I t\tm O@");
result.add("dit-\tsy", "dh I t\ts i:");
result.add("dit-\tter", "dh I\tt @r");
result.add("dit-\tties", "dh I\tt i: z");
result.add("dit-\tto", "dh I\tt @U");
result.add("dit-\tton", "dh I\tt V n");
result.add("dit-\tty", "dh I\tt i:");
result.add("dit-\tzel", "dh I t\tz V l");
result.add("ditch", "dh I tS");
result.add("ditched", "dh I tS t");
result.add("ditt-\tman", "dh I t\tm V n");
result.add("ditt-\tmer", "dh I t\tm @r");
result.add("div-\tvied", "dh I\tv i: d");
result.add("div-\tvy", "dh I\tv i:");
result.add("dive", "dh aI v");
result.add("dived", "dh aI v d");
result.add("dives", "dh aI v z");
result.add("dix", "dh I k s");
result.add("diz-\tzi-\tness", "dh I\tz i:\tn V s");
result.add("diz-\tzy", "dh I\tz i:");
result.add("diz-\tzy-\ting", "dh I\tz i:\tI N");
result.add("dja-\tkar-\tta", "dZ V\tk Q@\tt V");
result.add("dja-\tkar-\tta's", "dZ V\tk Q@\tt V z");
result.add("dji-\tbou-\tti", "dZ I\tb u:\tt i:");
result.add("do", "dh u:");
result.add("do-\ta-\tble", "dh u:\tV\tb V l");
result.add("do-\tber-\tman", "dh @U\tb @r\tm V n");
result.add("do-\tbie", "dh Q\tb i:");
result.add("do-\tbies", "dh @U\tb i: z");
result.add("do-\tble", "dh @U\tb V l");
result.add("do-\tbos", "dh @U\tb @U z");
result.add("do-\tby", "dh @U\tb i:");
result.add("do-\tcent", "dh @U\ts V n t");
result.add("do-\tcents", "dh @U\ts V n t s");
result.add("do-\tcher-\tty", "dh Q\ttS @r\tt i:");
result.add("do-\tci-\tla", "dh Q\ts I\tl V");
result.add("do-\tci-\tli-\tty", "dh Q\ts I\tl I\tt i:");
result.add("do-\tcile", "dh Q\ts V l");
result.add("do-\tcu-\tdra-\tma", "dh @U\tk V d\tr {\tm V");
result.add("do-\tcu-\tmen-\tta-\tries", "dh Q k\tj V\tm e n\tt @r\ti: z");
result.add("do-\tcu-\tmen-\tta-\try", "dh Q k\tj V\tm e n\tt @r\ti:");
result.add("do-\tcu-\tmen-\tta-\ttion", "dh Q k\tj V\tm e n\tt eI\tS V n");
result.add("do-\tcu-\tmen-\tted", "dh Q k\tj V\tm e n\tt V d");
result.add("do-\tcu-\tmen-\tting", "dh Q k\tj V\tm V n\tt I N");
result.add("do-\tcu-\tment", "dh Q k\tj V\tm e n t");
result.add("do-\tcu-\tments", "dh Q k\tj V\tm V n t s");
result.add("do-\tdo", "dh @U\td @U");
result.add("do-\tdos", "dh @U\td @U z");
result.add("do-\tdo's", "dh @U\td @U z");
result.add("do-\tlan", "dh @U\tl V n");
result.add("do-\tland", "dh u:\tl V n d");
result.add("do-\tley", "dh @U\tl i:");
result.add("do-\tlin", "dh @U\tl I n");
result.add("do-\tling", "dh @U\tl I N");
result.add("do-\tlo-\tmite", "dh @U\tl V\tm aI t");
result.add("do-\tlo-\tmites", "dh @U\tl V\tm aI t s");
result.add("do-\tlo-\tmite's", "dh @U\tl V\tm aI t s");
result.add("do-\tlo-\tres", "dh V\tl O@\tV s");
result.add("do-\tlo-\tri-\tta", "dh @U\tl O@\ti:\tt V");
result.add("do-\tmain", "dh @U\tm eI n");
result.add("do-\tmaine", "dh @U\tm eI n");
result.add("do-\tmains", "dh @U\tm eI n z");
result.add("do-\tme-\tnech", "dh Q\tm e\tn I k");
result.add("do-\tme-\tni-\tco", "dh @U\tm eI\tn i:\tk @U");
result.add("do-\tme-\tnick", "dh Q\tm e\tn I k");
result.add("do-\tmer", "dh @U\tm @r");
result.add("do-\tmes-\tti-\tca-\tted", "dh V\tm e s\tt V\tk eI\tt V d");
result.add("do-\tmes-\tti-\tca-\tting", "dh V\tm e s\tt V\tk eI\tt I N");
result.add("do-\tmes-\tti-\tca-\ttion", "dh V\tm e s\tt V\tk eI\tS V n");
result.add("do-\tmes-\tti-\tcate", "dh V\tm e s\tt V\tk eI t");
result.add("do-\tmes-\tti-\tci-\tty", "dh @U\tm e s\tt I\ts I\tt i:");
result.add("do-\tmes-\ttic", "dh V\tm e s\tt I k");
result.add("do-\tmes-\ttical-\tly", "dh V\tm e s\tt I k\tl i:");
result.add("do-\tmes-\ttics", "dh V\tm e s\tt I k s");
result.add("do-\tmi-\tcal", "dh Q\tm I\tk V l");
result.add("do-\tmi-\tna", "dh @U\tm i:\tn V");
result.add("do-\tmi-\tna-\tted", "dh Q\tm I\tn eI\tt I d");
result.add("do-\tmi-\tna-\tting", "dh Q\tm I\tn eI\tt I N");
result.add("do-\tmi-\tna-\ttion", "dh Q\tm I\tn eI\tS V n");
result.add("do-\tmi-\tnance", "dh Q\tm I\tn V n s");
result.add("do-\tmi-\tnant", "dh Q\tm I\tn V n t");
result.add("do-\tmi-\tnate", "dh Q\tm I\tn eI t");
result.add("do-\tmi-\tnates", "dh Q\tm I\tn eI t s");
result.add("do-\tmi-\tne", "dh @U\tm i:\tn i:");
result.add("do-\tmi-\tnee", "dh @U\tm I\tn eI");
result.add("do-\tmi-\tnee-\tring", "dh Q\tm I\tn I@\tI N");
result.add("do-\tmi-\tneer", "dh Q\tm I\tn I@");
result.add("do-\tmi-\tni", "dh Q\tm I\tn i:");
result.add("do-\tmi-\tni-\tca", "dh V\tm I\tn I\tk V");
result.add("do-\tmi-\tni-\tcan", "dh V\tm I\tn V\tk V n");
result.add("do-\tmi-\tni-\tcans", "dh @U\tm I\tn I\tk V n z");
result.add("do-\tmi-\tnic", "dh Q\tm I\tn I k");
result.add("do-\tmi-\tnick", "dh Q\tm V\tn I k");
result.add("do-\tmi-\tnic's", "dh Q\tm I\tn I k s");
result.add("do-\tmi-\tnik", "dh V\tm I\tn I k");
result.add("do-\tmi-\tnion", "dh V\tm I n\tj V n");
result.add("do-\tmi-\tnion's", "dh V\tm I n\tj V n z");
result.add("do-\tmi-\tnique", "dh O:\tm I\tn i: k");
result.add("do-\tmi-\tno", "dh Q\tm I\tn @U");
result.add("do-\tmi-\tnoes", "dh Q\tm I\tn @U z");
result.add("do-\tmi-\tnos", "dh Q\tm I\tn @U z");
result.add("do-\tmi-\tno's", "dh Q\tm I\tn @U z");
result.add("do-\tmi-\tnus", "dh @U\tm i:\tn V s");
result.add("do-\tmi-\tny", "dh V\tm aI\tn i:");
result.add("do-\tmin-\tgo", "dh @U\tm I N\tg @U");
result.add("do-\tmin-\tguez", "dh V\tm I\tN e z");
result.add("do-\tna", "dh @U\tn V");
result.add("do-\tna-\tghue", "dh Q\tn V\th u:");
result.add("do-\tna-\thoe", "dh Q\tn V\th @U");
result.add("do-\tna-\thue", "dh Q\tn V h\tj u:");
result.add("do-\tna-\tta", "dh V\tn Q\tt V");
result.add("do-\tna-\tted", "dh @U\tn eI\tt V d");
result.add("do-\tna-\ttel-\tli", "dh @U\tn Q\tt e\tl i:");
result.add("do-\tna-\tti", "dh @U\tn Q\tt i:");
result.add("do-\tna-\tting", "dh @U\tn eI\tt I N");
result.add("do-\tna-\ttion", "dh @U\tn eI\tS V n");
result.add("do-\tna-\ttions", "dh @U\tn eI\tS V n z");
result.add("do-\tna-\ttists", "dh Q\tn V\tt V s t s");
result.add("do-\tna-\tto", "dh V\tn Q\tt @U");
result.add("do-\tnal-\tda", "dh @U\tn Q l\td V");
result.add("do-\tnald", "dh Q\tn V l d");
result.add("do-\tnald-\tson", "dh Q\tn V l\td s V n");
result.add("do-\tnald-\tson's", "dh Q\tn V l\td s V n z");
result.add("do-\tnald's", "dh Q\tn V l d z");
result.add("do-\tnar", "dh Q\tn @r");
result.add("do-\tnat", "dh @U\tn V t");
result.add("do-\tnate", "dh @U\tn eI t");
result.add("do-\tnates", "dh @U\tn eI t s");
result.add("do-\tnath", "dh Q\tn V T");
result.add("do-\tne-\tgan", "dh Q\tn I\tg { n");
result.add("do-\tnel-\tla", "dh @U\tn e\tl V");
result.add("do-\tnel-\tson", "dh Q\tn V l\ts V n");
result.add("do-\tner", "dh O:\tn @r");
result.add("do-\tney", "dh Q\tn i:");
result.add("do-\tni-\ta", "dh @U\tn i:\tV");
result.add("do-\tni-\tca", "dh Q\tn I\tk V");
result.add("do-\tni-\tzet-\tti", "dh Q\tn I\tz e\tt i:");
result.add("do-\tni-\tzet-\tti's", "dh Q\tn I\tz e\tt i: z");
result.add("do-\tnis", "dh @U\tn I s");
result.add("do-\tno-\tghue", "dh Q\tn V h\tj u:");
result.add("do-\tno-\tghue's", "dh Q\tn V h\tj u: z");
result.add("do-\tno-\tho", "dh Q\tn V\th @U");
result.add("do-\tno-\thue", "dh Q\tn V h\tj u:");
result.add("do-\tno-\thue's", "dh Q\tn V h\tj u: z");
result.add("do-\tno-\tvan", "dh Q\tn V\tv V n");
result.add("do-\tno-\tvan's", "dh Q\tn V\tv V n z");
result.add("do-\tnor", "dh @U\tn @r");
result.add("do-\tnors", "dh @U\tn @r z");
result.add("do-\tnor's", "dh @U\tn @r z");
result.add("do-\tnut", "dh @U\tn V t");
result.add("do-\tnuts", "dh @U\tn V t s");
result.add("do-\tpa", "dh @U\tp V");
result.add("do-\tpa-\tmine", "dh Q\tp V\tm aI n");
result.add("do-\tpey", "dh @U\tp i:");
result.add("do-\tra", "dh O@\tV");
result.add("do-\tra-\tdo", "dh O@\tQ\td @U");
result.add("do-\tra-\tlin", "dh O@\tQ\tl i: n");
result.add("do-\tra-\tlynne", "dh O@\tV\tl aI n");
result.add("do-\tra-\tville", "dh O@\tV\tv I l");
result.add("do-\tran", "dh O@\t{ n");
result.add("do-\tre-\tli-\ta", "dh O@\te\tl i:\tV");
result.add("do-\tre-\tna", "dh O@\te\tn V");
result.add("do-\treen", "dh O@\ti: n");
result.add("do-\trene", "dh O@\ti: n");
result.add("do-\trette", "dh @r\te t");
result.add("do-\trey", "dh O@\ti:");
result.add("do-\tri", "dh O@\ti:");
result.add("do-\tri-\ta", "dh O@\ti:\tV");
result.add("do-\tri-\tan", "dh O@\ti:\tV n");
result.add("do-\tri-\tans", "dh O@\ti:\tV n z");
result.add("do-\tri-\tne", "dh O@\ti:\tn i:");
result.add("do-\tri-\ton", "dh O@\ti:\tO: n");
result.add("do-\tri-\ttos", "dh O@\ti:\tt @U z");
result.add("do-\tric", "dh O@\tI k");
result.add("do-\trice", "dh O@\tI s");
result.add("do-\trie", "dh O@\ti:");
result.add("do-\trin", "dh O@\tI n");
result.add("do-\trin-\tda", "dh O@\ti: n\td V");
result.add("do-\tris", "dh O@\tI s");
result.add("do-\trise", "dh O@\taI z");
result.add("do-\tro", "dh O@\t@U");
result.add("do-\tro-\tte-\ta", "dh O@\tV\tt eI\tV");
result.add("do-\tro-\tthe-\ta", "dh O@\tV\tT i:\tV");
result.add("do-\tro-\tthy", "dh O@\tV\tT i:");
result.add("do-\tro-\tthy's", "dh O@\tV\tT i: z");
result.add("do-\try", "dh O@\ti:");
result.add("do-\tsa-\tges", "dh @U\ts V\tdZ V z");
result.add("do-\tsage", "dh @U\ts V dZ");
result.add("do-\tser", "dh @U\ts @r");
result.add("do-\tses", "dh @U\ts V z");
result.add("do-\tsi-\ta", "dh @U\ts i:\tV");
result.add("do-\tsi-\tme-\tters", "dh @U\ts I\tm V\tt @r z");
result.add("do-\tsing", "dh @U\ts I N");
result.add("do-\tthan", "dh Q\tT V n");
result.add("do-\tting", "dh @U\tt I N");
result.add("do-\tto", "dh @U\tt @U");
result.add("do-\tty", "dh @U\tt i:");
result.add("do-\tur", "dh aU\t@r");
result.add("do-\twel", "dh aU\tV l");
result.add("do-\twell", "dh Q\tw e l");
result.add("do-\twels", "dh aU\tV l z");
result.add("do-\twie", "dh aU\ti:");
result.add("do-\txie", "dh Q k\ts i:");
result.add("do-\txo-\tlo-\tgies", "dh Q k\ts Q\tl V\tdZ i: z");
result.add("do-\txo-\tlo-\tgy", "dh Q k\ts Q\tl V\tdZ i:");
result.add("do-\txy", "dh Q k\ts i:");
result.add("do-\tyen", "dh OI\tI n");
result.add("do-\tyon", "dh OI\tV n");
result.add("do-\tzen", "dh V\tz V n");
result.add("do-\tzens", "dh V\tz V n z");
result.add("do-\tzes", "dh @U\tz V z");
result.add("do-\tzi-\ter", "dh @U\tz i:\t@r");
result.add("do-\tzing", "dh @U\tz I N");
result.add("doak", "dh @U k");
result.add("doan-\tna", "dh @U\tn V");
result.add("doane", "dh @U n");
result.add("dob", "dh Q b");
result.add("dob-\tbie", "dh Q\tb i:");
result.add("dob-\tbin", "dh Q\tb I n");
result.add("dob-\tbins", "dh Q\tb I n z");
result.add("dob-\try-\tnin", "dh V b\tr i:\tn V n");
result.add("dob-\tson", "dh Q b\ts V n");
result.add("dob-\tsons", "dh Q b\ts V n z");
result.add("dob-\tson's", "dh Q b\ts V n z");
result.add("dobb", "dh Q b");
result.add("dobbs", "dh Q b z");
result.add("doc", "dh Q k");
result.add("doc-\tken", "dh Q\tk V n");
result.add("doc-\tker", "dh Q\tk @r");
result.add("doc-\tkers", "dh Q\tk @r z");
result.add("doc-\tket", "dh Q\tk V t");
result.add("doc-\tkets", "dh Q\tk V t s");
result.add("doc-\tking", "dh Q\tk I N");
result.add("doc-\tto-\tral", "dh Q k\tt @r\tV l");
result.add("doc-\tto-\trate", "dh Q k\tt @r\tV t");
result.add("doc-\tto-\trates", "dh Q k\tt @r\tV t s");
result.add("doc-\tto-\tring", "dh Q k\tt @r\tI N");
result.add("doc-\ttor", "dh Q k\tt @r");
result.add("doc-\ttored", "dh Q k\tt @r d");
result.add("doc-\ttors", "dh Q k\tt @r z");
result.add("doc-\ttor's", "dh Q k\tt @r z");
result.add("doc-\ttors'", "dh Q k\tt @r z");
result.add("doc-\ttri-\tnaire", "dh Q k\tt r I\tn e@");
result.add("doc-\ttri-\tnal", "dh Q k\tt r I\tn V l");
result.add("doc-\ttrine", "dh Q k\tt r I n");
result.add("doc-\ttrine's", "dh Q k\tt r I n z");
result.add("dock", "dh Q k");
result.add("dock-\tland", "dh Q k\tl V n d");
result.add("dock-\tlands", "dh Q k\tl V n d z");
result.add("dock-\tside", "dh Q k\ts aI d");
result.add("dock-\twor-\tker", "dh Q k\tw @r\tk @r");
result.add("dock-\twor-\tkers", "dh Q k\tw @r\tk @r z");
result.add("dock-\tyard", "dh Q k\tj Q@ d");
result.add("docked", "dh Q k t");
result.add("docks", "dh Q k s");
result.add("dock's", "dh Q k s");
result.add("doct-\trines", "dh Q k\tt r I n z");
result.add("dod-\tde-\tring", "dh Q\td @r\tI N");
result.add("dod-\tger", "dh Q\tdZ @r");
result.add("dod-\tgers", "dh Q\tdZ @r z");
result.add("dod-\tger's", "dh Q\tdZ @r z");
result.add("dod-\tges", "dh Q\tdZ V z");
result.add("dod-\tge's", "dh Q\tdZ V z");
result.add("dod-\tging", "dh Q\tdZ I N");
result.add("dod-\tson", "dh Q d\ts V n");
result.add("dodd", "dh Q d");
result.add("dodds", "dh Q d z");
result.add("dodd's", "dh Q d z");
result.add("dodge", "dh Q dZ");
result.add("dodged", "dh Q dZ d");
result.add("dods-\tworth", "dh Q d\ts w @r T");
result.add("doe", "dh @U");
result.add("doe-\trs", "dh u:\t@r z");
result.add("doe-\tsn't", "dh V\tz V n t");
result.add("doer", "dh u: r");
result.add("does", "dh V z");
result.add("doe's", "dh @U z");
result.add("d'oeuvre", "dh @r v");
result.add("d'oeuvres", "dh @r v z");
result.add("dof-\tfing", "dh O:\tf I N");
result.add("doff", "dh O: f");
result.add("doffs", "dh O: f s");
result.add("dog", "dh Q g");
result.add("dog-\tbane", "dh O: g\tb eI n");
result.add("dog-\tber-\try", "dh O: g\tb e@\ti:");
result.add("dog-\tfight", "dh Q g\tf aI t");
result.add("dog-\tfights", "dh O: g\tf aI t s");
result.add("dog-\tfish", "dh O: g\tf I S");
result.add("dog-\tge-\trel", "dh Q\tg @r\tV l");
result.add("dog-\tged-\tly", "dh O:\tg V d\tl i:");
result.add("dog-\tgett", "dh Q\tg I t");
result.add("dog-\tgie", "dh O:\tg i:");
result.add("dog-\tgies", "dh O:\tg i: z");
result.add("dog-\tging", "dh O:\tg I N");
result.add("dog-\tgone", "dh O:\tg O: n");
result.add("dog-\tgy", "dh O:\tg i:");
result.add("dog-\tgy's", "dh O:\tg i: z");
result.add("dog-\thouse", "dh O: g\th aU s");
result.add("dog-\tlike", "dh O: g\tl aI k");
result.add("dog-\tma", "dh Q g\tm V");
result.add("dog-\tma-\tti-\tsm", "dh Q g\tm V\tt I\tz V m");
result.add("dog-\tma-\ttic", "dh Q g\tm {\tt I k");
result.add("dog-\tma-\ttical-\tly", "dh Q g\tm {\tt I k\tl i:");
result.add("doge", "dh @U dZ");
result.add("dogged", "dh O: g d");
result.add("doke", "dh @U k");
result.add("dol", "dh Q l");
result.add("dol-\tby", "dh @U l\tb i:");
result.add("dol-\tce", "dh @U l\ttS eI");
result.add("dol-\tlar", "dh Q\tl @r");
result.add("dol-\tlars", "dh Q\tl @r z");
result.add("dol-\tlar's", "dh Q\tl @r z");
result.add("dol-\tley", "dh Q\tl i:");
result.add("dol-\tli-\tver", "dh Q\tl I\tv @r");
result.add("dol-\tlie", "dh Q\tl i:");
result.add("dol-\tlin-\tger", "dh Q\tl I\tN @r");
result.add("dol-\tloff", "dh Q\tl O: f");
result.add("dol-\tlop", "dh Q\tl V p");
result.add("dol-\tly", "dh Q\tl i:");
result.add("dol-\tly's", "dh Q\tl i: z");
result.add("dol-\tman", "dh Q l\tm V n");
result.add("dol-\tphin", "dh Q l\tf I n");
result.add("dol-\tphins", "dh Q l\tf I n z");
result.add("dol-\tton", "dh @U l\tt V n");
result.add("dold-\trum", "dh @U l\td r V m");
result.add("dold-\trums", "dh @U l\td r V m z");
result.add("dole", "dh @U l");
result.add("dole-\tful", "dh @U l\tf V l");
result.add("doled", "dh @U l d");
result.add("doles", "dh @U l z");
result.add("dole's", "dh @U l z");
result.add("dolf", "dh @U l f");
result.add("doll", "dh Q l");
result.add("doll-\thou-\tses", "dh Q l\th aU\ts V z");
result.add("doll-\thouse", "dh Q l\th aU s");
result.add("dolled", "dh Q l d");
result.add("dolls", "dh Q l z");
result.add("doll's", "dh Q l z");
result.add("dolph", "dh @U l f");
result.add("dols", "dh Q l z");
result.add("dom", "dh Q m");
result.add("domb-\trow-\tski", "dh V m\tb r O: f\ts k i:");
result.add("dome", "dh @U m");
result.add("domed", "dh @U m d");
result.add("domes", "dh @U m z");
result.add("dome's", "dh @U m z");
result.add("don", "dh Q n");
result.add("don-\tkey", "dh Q N\tk i:");
result.add("don-\tkeys", "dh Q N\tk i: z");
result.add("don-\tna", "dh Q\tn V");
result.add("don-\tnas", "dh Q\tn V z");
result.add("don-\tna's", "dh Q\tn V z");
result.add("don-\tnel-\tly", "dh Q\tn V\tl i:");
result.add("don-\tnel-\tly's", "dh Q\tn V\tl i: z");
result.add("don-\tnell", "dh Q\tn V l");
result.add("don-\tner", "dh Q\tn @r");
result.add("don-\tnie", "dh Q\tn i:");
result.add("don-\tning", "dh Q\tn I N");
result.add("don-\tny", "dh Q\tn i:");
result.add("don-\tny-\tbrook", "dh Q\tn i: b\tr U k");
result.add("done", "dh V n");
result.add("dong", "dh O: N");
result.add("donn", "dh Q n");
result.add("donne", "dh V n");
result.add("donned", "dh Q n d");
result.add("dons", "dh Q n z");
result.add("don's", "dh Q n z");
result.add("don't", "dh @U n t");
result.add("don'ts", "dh @U n t s");
result.add("doo", "dh u:");
result.add("doo-\tdad", "dh u:\td { d");
result.add("doo-\tdads", "dh u:\td { d z");
result.add("doo-\tdle", "dh u:\td V l");
result.add("doo-\tdles", "dh u:\td V l z");
result.add("doo-\tdy", "dh u:\td i:");
result.add("doo-\tley", "dh u:\tl i:");
result.add("doo-\tlit-\ttle", "dh u:\tl I\tt V l");
result.add("doo-\tming", "dh u:\tm I N");
result.add("doo-\tzy", "dh u:\tz i:");
result.add("doom", "dh u: m");
result.add("doom-\tsa-\tyer", "dh u: m\ts eI\t@r");
result.add("doom-\tsa-\tyers", "dh u: m\ts eI\t@r z");
result.add("doom-\tsa-\tying", "dh u: m\ts eI\tI N");
result.add("doomed", "dh u: m d");
result.add("dooms", "dh u: m z");
result.add("dooms-\tday", "dh u: m\tz d eI");
result.add("doones-\tbu-\try", "dh u: n\tz b e@\ti:");
result.add("door", "dh O@");
result.add("door-\tbell", "dh O@\tb e l");
result.add("door-\tkee-\tper", "dh O@\tk i:\tp @r");
result.add("door-\tknob", "dh u: r\tn Q b");
result.add("door-\tknobs", "dh u: r\tn Q b z");
result.add("door-\tman", "dh O@\tm { n");
result.add("door-\tmat", "dh O@\tm { t");
result.add("door-\tmats", "dh O@\tm { t s");
result.add("door-\tnail", "dh O@\tn eI l");
result.add("door-\tsill", "dh O@\ts I l");
result.add("door-\tstep", "dh O@ s\tt e p");
result.add("door-\tsteps", "dh O@ s\tt e p s");
result.add("door-\tway", "dh O@\tw eI");
result.add("door-\tways", "dh O@\tw eI z");
result.add("doorn", "dh O@ n");
result.add("doors", "dh O@ z");
result.add("door's", "dh O@ z");
result.add("dope", "dh @U p");
result.add("doped", "dh @U p t");
result.add("dopp", "dh Q p");
result.add("dopp-\tler", "dh Q p\tl @r");
result.add("d'or", "dh O@");
result.add("dor-\tcas", "dh O@\tk V s");
result.add("dor-\tches-\tter", "dh O@\ttS e s\tt @r");
result.add("dor-\tman", "dh O@\tm V n");
result.add("dor-\tman-\tcy", "dh O@\tm V n\ts i:");
result.add("dor-\tmant", "dh O@\tm V n t");
result.add("dor-\tmer", "dh O@\tm @r");
result.add("dor-\tmi-\tto-\tries", "dh O@\tm I\tt O@\ti: z");
result.add("dor-\tmi-\tto-\try", "dh O@\tm I\tt O@\ti:");
result.add("dor-\tmouse", "dh O@\tm aU s");
result.add("dor-\tnier", "dh O@\tn I@");
result.add("dor-\trance", "dh O@\tV n s");
result.add("dor-\trie", "dh O@\ti:");
result.add("dor-\tris", "dh O@\tI s");
result.add("dor-\tsa", "dh O@\ts V");
result.add("dor-\tsal", "dh O@\ts V l");
result.add("dor-\tsal-\tly", "dh O@\ts V\tl i:");
result.add("d'or-\tsay", "dh O@\ts eI");
result.add("dor-\tset", "dh O@\ts e t");
result.add("dor-\tsey", "dh O@\ts i:");
result.add("dor-\tsi", "dh O@\ts i:");
result.add("dor-\tthe-\ta", "dh O@\tD i:\tV");
result.add("dor-\tthy", "dh O@\tT i:");
result.add("dor-\tton", "dh O@\tt V n");
result.add("dore", "dh O@");
result.add("dorf-\tman", "dh O@ f\tm V n");
result.add("dorm", "dh O@ m");
result.add("dorms", "dh O@ m z");
result.add("dorn", "dh O@ n");
result.add("dorr", "dh O@");
result.add("dort", "dh O@ t");
result.add("dort-\tmund", "dh O@ t\tm V n d");
result.add("dos", "dh O: s");
result.add("do's", "dh u: z");
result.add("dos-\tcher", "dh O:\tS @r");
result.add("dos-\tsier", "dh O: s\tj eI");
result.add("dos-\tsiers", "dh O: s\tj eI z");
result.add("dos-\ttoev-\tski", "dh O: s\tt @U v\ts k i:");
result.add("dos-\ttoev-\tsky", "dh O: s\tt @U v\ts k i:");
result.add("dos-\twell", "dh Q s\tw e l");
result.add("dose", "dh @U s");
result.add("dosh", "dh Q S");
result.add("doss", "dh O: s");
result.add("dost", "dh Q s t");
result.add("dot", "dh Q t");
result.add("dot-\tson", "dh Q t\ts V n");
result.add("dot-\tted", "dh Q\tt V d");
result.add("dot-\tter", "dh Q\tt @r");
result.add("dot-\ttie", "dh Q\tt i:");
result.add("dot-\tting", "dh Q\tt I N");
result.add("dot-\tty", "dh Q\tt i:");
result.add("dote", "dh @U t");
result.add("doth", "dh O: T");
result.add("dots", "dh Q t s");
result.add("dott", "dh Q t");
result.add("dou-\tb-\tling", "dh V\tb V\tl I N");
result.add("dou-\tble", "dh V\tb V l");
result.add("dou-\tble-\tday", "dh V\tb V l\td eI");
result.add("dou-\tble-\tspeak", "dh V\tb V l\ts p i: k");
result.add("dou-\tble-\tthink", "dh V\tb V l\tT I N k");
result.add("dou-\tble-\ttree", "dh V\tb V l\tt r i:");
result.add("dou-\tbled", "dh V\tb V l d");
result.add("dou-\tbles", "dh V\tb V l z");
result.add("dou-\tcet", "dh u:\ts e t");
result.add("dou-\tcette", "dh u:\ts e t");
result.add("dou-\tgal", "dh u:\tg V l");
result.add("dou-\tgall", "dh aU\tg V l");
result.add("dou-\tghy", "dh @U\ti:");
result.add("dou-\tgie", "dh u:\tg i:");
result.add("dou-\tgie's", "dh u:\tg i: z");
result.add("dou-\tgl", "dh u:\tg V l");
result.add("dou-\tma", "dh @U\tm V");
result.add("doub", "dh aU b");
result.add("doub-\tly", "dh V b\tl i:");
result.add("doub-\tted", "dh aU\tt V d");
result.add("doub-\tter", "dh aU\tt @r");
result.add("doub-\tters", "dh aU\tt @r z");
result.add("doub-\tting", "dh aU\tt I N");
result.add("doubt", "dh aU t");
result.add("doubt-\tful", "dh aU t\tf V l");
result.add("doubt-\tless", "dh aU t\tl V s");
result.add("doubts", "dh aU t s");
result.add("douds", "dh aU d z");
result.add("doug", "dh V g");
result.add("doug-\ther-\tty", "dh @U\t@r\tt i:");
result.add("doug-\tla-\tss", "dh V g\tl V\ts V z");
result.add("doug-\tla-\ts's", "dh V g\tl V\ts V z");
result.add("doug-\tlas", "dh V g\tl V s");
result.add("dough", "dh @U");
result.add("dough-\tboy", "dh @U\tb OI");
result.add("dough-\tman", "dh @U\tm V n");
result.add("dough-\tnut", "dh @U\tn V t");
result.add("dough-\tnuts", "dh @U\tn V t s");
result.add("dough-\tty", "dh O:\tt i:");
result.add("doug's", "dh V g z");
result.add("doul-\tton", "dh @U l\tt V n");
result.add("dow-\tding", "dh aU\td I N");
result.add("dow-\tdy", "dh aU\td i:");
result.add("dow-\tland", "dh aU\tl V n d");
result.add("dow-\tlen", "dh aU\tl V n");
result.add("dow-\tless", "dh aU\tl V s");
result.add("dow-\tling", "dh aU\tl I N");
result.add("dow-\tner", "dh aU\tn @r");
result.add("dow-\tners", "dh aU\tn @r z");
result.add("dow-\tney", "dh aU\tn i:");
result.add("dow-\tney's", "dh aU\tn i: z");
result.add("dow-\tnie", "dh aU\tn i:");
result.add("dow-\tning", "dh aU\tn I N");
result.add("dow-\tning-\ttown", "dh aU\tn I N\tt aU n");
result.add("dow-\tny", "dh aU\tn i:");
result.add("dow-\try", "dh aU\tr i:");
result.add("dow-\tsing", "dh aU\ts I N");
result.add("dowds", "dh aU d z");
result.add("dower", "dh aU r");
result.add("dowers", "dh aU r z");
result.add("down", "dh aU n");
result.add("down-\tbeat", "dh aU n\tb i: t");
result.add("down-\tcast", "dh aU n\tk { s t");
result.add("down-\tdraft", "dh aU n\td r { f t");
result.add("down-\tfall", "dh aU n\tf O: l");
result.add("down-\tgra-\tded", "dh aU n\tg r eI\td V d");
result.add("down-\tgra-\tding", "dh aU n\tg r eI\td I N");
result.add("down-\tgrade", "dh aU n\tg r eI d");
result.add("down-\tgrades", "dh aU n\tg r eI d z");
result.add("down-\thill", "dh aU n\th I l");
result.add("down-\tloa-\tded", "dh aU n\tl @U\td V d");
result.add("down-\tloa-\tding", "dh aU n\tl @U\td I N");
result.add("down-\tload", "dh aU n\tl @U d");
result.add("down-\tpay-\tment", "dh aU n\tp eI\tm V n t");
result.add("down-\tplay", "dh aU n\tp l eI");
result.add("down-\tplay-\ting", "dh aU n\tp l eI\tI N");
result.add("down-\tplayed", "dh aU n\tp l eI d");
result.add("down-\tplays", "dh aU n\tp l eI z");
result.add("down-\tpour", "dh aU n\tp O@");
result.add("down-\tpours", "dh aU n\tp O@ z");
result.add("down-\trange", "dh aU n\tr eI n dZ");
result.add("down-\tri-\tver", "dh aU n\tr I\tv @r");
result.add("down-\tright", "dh aU n\tr aI t");
result.add("down-\tscale", "dh aU n\ts k eI l");
result.add("down-\tsi-\tzing", "dh aU n\ts aI\tz I N");
result.add("down-\tside", "dh aU n\ts aI d");
result.add("down-\tsides", "dh aU n\ts aI d z");
result.add("down-\tsize", "dh aU n\ts aI z");
result.add("down-\tsized", "dh aU n\ts aI z d");
result.add("down-\tstage", "dh aU n\ts t eI dZ");
result.add("down-\tstairs", "dh aU n\ts t e@ z");
result.add("down-\tstate", "dh aU n\ts t eI t");
result.add("down-\tstream", "dh aU n\ts t r i: m");
result.add("down-\tswing", "dh aU n\ts w I N");
result.add("down-\ttime", "dh aU n\tt aI m");
result.add("down-\ttown", "dh aU n\tt aU n");
result.add("down-\ttowns", "dh aU n\tt aU n z");
result.add("down-\ttrend", "dh aU n\tt r e n d");
result.add("down-\ttrod-\tden", "dh aU n\tt r Q\td V n");
result.add("down-\tturn", "dh aU n\tt @r n");
result.add("down-\tturns", "dh aU n\tt @r n z");
result.add("down-\tward", "dh aU n\tw @r d");
result.add("down-\tward-\tly", "dh aU n\tw @r d\tl i:");
result.add("down-\twards", "dh aU n\tw @r d z");
result.add("down-\twind", "dh aU n\tw I n d");
result.add("downe", "dh aU n");
result.add("downed", "dh aU n d");
result.add("downes", "dh aU n z");
result.add("downs", "dh aU n z");
result.add("down's", "dh aU n z");
result.add("dow's", "dh aU z");
result.add("dowse", "dh aU s");
result.add("doyle", "dh OI l");
result.add("doyle's", "dh OI l z");
result.add("doze", "dh @U z");
result.add("dozed", "dh @U z d");
result.add("dr", "dh r aI v");
result.add("dr.", "dh r aI v");
result.add("dra-\tco", "dh r eI\tk @U");
result.add("dra-\tco-\tni-\tan", "dh r eI\tk @U\tn i:\tV n");
result.add("dra-\tcu-\tla", "dh r { k\tj u:\tl V");
result.add("dra-\tgo", "dh r Q\tg @U");
result.add("dra-\tgon", "dh r {\tg V n");
result.add("dra-\tgon-\thead", "dh r {\tg V n\th e d");
result.add("dra-\tgone", "dh r V\tg @U n");
result.add("dra-\tgons", "dh r {\tg V n z");
result.add("dra-\tgon's", "dh r {\tg V n z");
result.add("dra-\tma", "dh r Q\tm V");
result.add("dra-\tma-\tmine", "dh r {\tm V\tm i: n");
result.add("dra-\tma-\tti-\tza-\ttion", "dh r {\tm V\tt V\tz eI\tS V n");
result.add("dra-\tma-\tti-\tza-\ttions", "dh r {\tm V\tt V\tz eI\tS V n z");
result.add("dra-\tma-\tti-\tzes", "dh r {\tm V\tt aI\tz V z");
result.add("dra-\tma-\tti-\tzing", "dh r {\tm V\tt aI\tz I N");
result.add("dra-\tma-\ttic", "dh r V\tm {\tt I k");
result.add("dra-\tma-\ttical-\tly", "dh r V\tm {\tt I k\tl i:");
result.add("dra-\tma-\ttist", "dh r Q\tm V\tt I s t");
result.add("dra-\tma-\ttize", "dh r Q\tm V\tt aI z");
result.add("dra-\tma-\ttized", "dh r {\tm V\tt aI z d");
result.add("dra-\tmas", "dh r Q\tm V z");
result.add("dra-\tpe-\tries", "dh r eI\tp @r\ti: z");
result.add("dra-\tpe-\try", "dh r eI\tp @r\ti:");
result.add("dra-\tper", "dh r eI\tp @r");
result.add("dra-\tping", "dh r eI\tp I N");
result.add("dra-\twing", "dh r O:\tI N");
result.add("dra-\twings", "dh r O:\tI N z");
result.add("drab", "dh r { b");
result.add("drab-\tble", "dh r {\tb V l");
result.add("drabbed", "dh r { b d");
result.add("drabs", "dh r { b z");
result.add("drach-\tma", "dh r { k\tm V");
result.add("drach-\tmas", "dh r Q k\tm V z");
result.add("draf-\tted", "dh r { f\tt V d");
result.add("draf-\ttee", "dh r { f\tt i:");
result.add("draf-\ttees", "dh r { f\tt i: z");
result.add("draf-\tter", "dh r { f\tt @r");
result.add("draf-\tters", "dh r { f\tt @r z");
result.add("draf-\tting", "dh r { f\tt I N");
result.add("draf-\tty", "dh r { f\tt i:");
result.add("draft", "dh r { f t");
result.add("drafts", "dh r { f t s");
result.add("draft's", "dh r { f t s");
result.add("drafts-\tman", "dh r { f\tt s m V n");
result.add("drafts-\tman-\tship", "dh r { f\tt s m V n\tS I p");
result.add("drafts-\tmen", "dh r { f\tt s m V n");
result.add("drag", "dh r { g");
result.add("drag-\tging", "dh r {\tg I N");
result.add("drag-\tgy", "dh r {\tg i:");
result.add("drag-\tline", "dh r { g\tl aI n");
result.add("drag-\tnet", "dh r { g\tn e t");
result.add("drag-\tnets", "dh r { g\tn e t s");
result.add("dragged", "dh r { g d");
result.add("drags", "dh r { g z");
result.add("drai-\tnage", "dh r eI\tn V dZ");
result.add("drai-\tner", "dh r eI\tn @r");
result.add("drai-\tners", "dh r eI\tn @r z");
result.add("drai-\tning", "dh r eI\tn I N");
result.add("drain", "dh r eI n");
result.add("draine", "dh r eI n");
result.add("drained", "dh r eI n d");
result.add("drains", "dh r eI n z");
result.add("drake", "dh r eI k");
result.add("drakes", "dh r eI k s");
result.add("dram", "dh r { m");
result.add("drams", "dh r { m z");
result.add("drang", "dh r { N");
result.add("drank", "dh r { N k");
result.add("drape", "dh r eI p");
result.add("draped", "dh r eI p t");
result.add("drapes", "dh r eI p s");
result.add("dras-\ttic", "dh r { s\tt I k");
result.add("dras-\ttical-\tly", "dh r { s\tt I k\tl i:");
result.add("draught", "dh r { f t");
result.add("draughts", "dh r { f t s");
result.add("draw", "dh r O:");
result.add("draw-\tback", "dh r O:\tb { k");
result.add("draw-\tbacks", "dh r O:\tb { k s");
result.add("draw-\tbridge", "dh r O: b\tr I dZ");
result.add("draw-\tdown", "dh r O:\td aU n");
result.add("draw-\tdowns", "dh r O:\td aU n z");
result.add("drawer", "dh r O@");
result.add("drawers", "dh r O@ z");
result.add("drawl", "dh r O: l");
result.add("drawled", "dh r O: l d");
result.add("drawls", "dh r O: l z");
result.add("drawn", "dh r O: n");
result.add("draws", "dh r O: z");
result.add("dray", "dh r eI");
result.add("dray-\tton", "dh r eI\tt V n");
result.add("dray-\tton's", "dh r eI\tt V n z");
result.add("dre-\tscher", "dh r e\tS @r");
result.add("dre-\twett", "dh r u:\tV t");
result.add("dre-\txel", "dh r e k\ts V l");
result.add("dre-\txel's", "dh r e k\ts V l z");
result.add("dre-\tyer", "dh r eI\t@r");
result.add("drea-\tded", "dh r e\td V d");
result.add("drea-\tding", "dh r e\td I N");
result.add("drea-\tmer", "dh r i:\tm @r");
result.add("drea-\tmers", "dh r i:\tm @r z");
result.add("drea-\tming", "dh r i:\tm I N");
result.add("drea-\tmy", "dh r i:\tm i:");
result.add("drea-\tri-\tness", "dh r i:\tr i:\tn V s");
result.add("drea-\try", "dh r I@\ti:");
result.add("dread", "dh r e d");
result.add("dread-\tful", "dh r e d\tf V l");
result.add("dread-\tful-\tly", "dh r e d\tf V\tl i:");
result.add("dread-\tnought", "dh r e d\tn O: t");
result.add("dreads", "dh r e d z");
result.add("dream", "dh r i: m");
result.add("dream-\tland", "dh r i: m\tl { n d");
result.add("dream-\tlike", "dh r i: m\tl aI k");
result.add("dream-\tworld", "dh r i: m\tw @r l d");
result.add("dreamed", "dh r i: m d");
result.add("dreams", "dh r i: m z");
result.add("dreamt", "dh r e m t");
result.add("dred", "dh r e d");
result.add("dred-\tges", "dh r e\tdZ V z");
result.add("dred-\tging", "dh r e\tdZ I N");
result.add("dredge", "dh r e dZ");
result.add("dredged", "dh r e dZ d");
result.add("drees", "dh r i: z");
result.add("dregs", "dh r e g z");
result.add("dreher", "dh r e@");
result.add("drei-\tling", "dh r aI\tl I N");
result.add("dren-\tching", "dh r e n\ttS I N");
result.add("dren-\tnen", "dh r e\tn V n");
result.add("drench", "dh r e n tS");
result.add("drenched", "dh r e n tS t");
result.add("dres-\tden", "dh r e z\td V n");
result.add("dres-\tsage", "dh r e\ts Q Z");
result.add("dres-\tsel", "dh r e\ts V l");
result.add("dres-\tsen", "dh r e\ts V n");
result.add("dres-\tser", "dh r e\ts @r");
result.add("dres-\tsers", "dh r e\ts @r z");
result.add("dres-\tser's", "dh r e\ts @r z");
result.add("dres-\tses", "dh r e\ts V z");
result.add("dres-\tsi-\ter", "dh r e\ts i:\t@r");
result.add("dres-\tsing", "dh r e\ts I N");
result.add("dres-\tsings", "dh r e\ts I N z");
result.add("dres-\tsy", "dh r e\ts i:");
result.add("dress", "dh r e s");
result.add("dress-\tler", "dh r e s\tl @r");
result.add("dress-\tma-\tker", "dh r e s\tm eI\tk @r");
result.add("dress-\tma-\tkers", "dh r e s\tm eI\tk @r z");
result.add("dress-\tma-\tking", "dh r e s\tm eI\tk I N");
result.add("dressed", "dh r e s t");
result.add("drew", "dh r u:");
result.add("drews", "dh r u: z");
result.add("drex-\tler", "dh r e k\ts l @r");
result.add("drey", "dh r eI");
result.add("drey-\tfu-\ts's", "dh r eI\tf V\ts V z");
result.add("drey-\tfus", "dh r aI\tf V s");
result.add("drey-\tfuss", "dh r eI\tf V s");
result.add("dri-\ter", "dh r aI\t@r");
result.add("dri-\test", "dh r aI\tV s t");
result.add("dri-\tna", "dh i:\tn V");
result.add("dri-\tna's", "dh i:\tn V z");
result.add("dri-\tva-\tble", "dh r aI\tv V\tb V l");
result.add("dri-\tvel", "dh r I\tv V l");
result.add("dri-\tven", "dh r I\tv V n");
result.add("dri-\tver", "dh r aI\tv @r");
result.add("dri-\tver-\tless", "dh r aI\tv @r\tl V s");
result.add("dri-\tvers", "dh r aI\tv @r z");
result.add("dri-\tver's", "dh r aI\tv @r z");
result.add("dri-\tving", "dh r aI\tv I N");
result.add("drib-\tb-\tling", "dh r I\tb V\tl I N");
result.add("drib-\tble", "dh r I\tb V l");
result.add("drib-\tbled", "dh r I\tb V l d");
result.add("dribbed", "dh r I b d");
result.add("dribs", "dh r I b z");
result.add("dried", "dh r aI d");
result.add("dries", "dh r aI z");
result.add("drif-\tted", "dh r I f\tt V d");
result.add("drif-\tter", "dh r I f\tt @r");
result.add("drif-\tters", "dh r I f\tt @r z");
result.add("drif-\tting", "dh r I f\tt I N");
result.add("drift", "dh r I f t");
result.add("drift-\tnet", "dh r I f\tt n e t");
result.add("drift-\twood", "dh r I f\tt w U d");
result.add("drifts", "dh r I f t s");
result.add("driggs", "dh r I g z");
result.add("dril-\tler", "dh r I\tl @r");
result.add("dril-\tlers", "dh r I\tl @r z");
result.add("dril-\tling", "dh r I\tl I N");
result.add("dril-\tling's", "dh r I\tl I N z");
result.add("drill", "dh r I l");
result.add("drill-\tbit", "dh r I l\tb I t");
result.add("drilled", "dh r I l d");
result.add("drills", "dh r I l z");
result.add("drin-\tka-\tble", "dh r I n\tk V\tb V l");
result.add("drin-\tker", "dh r I N\tk @r");
result.add("drin-\tkers", "dh r I N\tk @r z");
result.add("drin-\tker's", "dh r I N\tk @r z");
result.add("drin-\tking", "dh r I N\tk I N");
result.add("drink", "dh r I N k");
result.add("drink-\twa-\tter", "dh r I N\tk w O:\tt @r");
result.add("drinks", "dh r I N k s");
result.add("drip", "dh r I p");
result.add("drip-\tping", "dh r I\tp I N");
result.add("dripped", "dh r I p t");
result.add("dripps", "dh r I p s");
result.add("drips", "dh r I p s");
result.add("dris-\tcoll", "dh r I s\tk V l");
result.add("dris-\tkill", "dh r I s\tk I l");
result.add("drive", "dh r aI v");
result.add("drive-\tway", "dh r aI v\tw eI");
result.add("drive-\tways", "dh r aI v\tw eI z");
result.add("drives", "dh r aI v z");
result.add("driz-\tz-\tling", "dh r I\tz V\tl I N");
result.add("driz-\tzle", "dh r I\tz V l");
result.add("drizz-\tly", "dh r I z\tl i:");
result.add("dro-\tlet", "dh r @U\tl e t");
result.add("dro-\tme-\tda-\try", "dh r Q\tm V\td e@\ti:");
result.add("dro-\tmo-\tma-\tni-\ta", "dh r @U\tm @U\tm eI\tn i:\tV");
result.add("dro-\tmon", "dh r @U\tm V n");
result.add("dro-\tnet", "dh r @U\tn e t");
result.add("dro-\tning", "dh r @U\tn I N");
result.add("dro-\tver", "dh r @U\tv @r");
result.add("drogue", "dh r @U g");
result.add("droll", "dh r @U l");
result.add("drone", "dh r @U n");
result.add("droned", "dh r @U n d");
result.add("drones", "dh r @U n z");
result.add("droo-\tling", "dh r u:\tl I N");
result.add("droo-\tping", "dh r u:\tp I N");
result.add("droo-\tpy", "dh r u:\tp i:");
result.add("drool", "dh r u: l");
result.add("droop", "dh r u: p");
result.add("drooped", "dh r u: p t");
result.add("drop", "dh r Q p");
result.add("drop-\tlet", "dh r Q p\tl V t");
result.add("drop-\tlets", "dh r Q p\tl V t s");
result.add("drop-\toff", "dh r Q\tp O: f");
result.add("drop-\tout", "dh r Q\tp aU t");
result.add("drop-\touts", "dh r Q\tp aU t s");
result.add("drop-\tper", "dh r Q\tp @r");
result.add("drop-\tpers", "dh r Q\tp @r z");
result.add("drop-\tping", "dh r Q\tp I N");
result.add("drop-\tpings", "dh r Q\tp I N z");
result.add("drop-\tsy", "dh r Q p\ts i:");
result.add("dropped", "dh r Q p t");
result.add("drops", "dh r Q p s");
result.add("dross", "dh r O: s");
result.add("drought", "dh r aU t");
result.add("droughts", "dh r aU t s");
result.add("drought's", "dh r aU t s");
result.add("drove", "dh r @U v");
result.add("droves", "dh r @U v z");
result.add("drow-\tning", "dh r aU\tn I N");
result.add("drow-\tnings", "dh r aU\tn I N z");
result.add("drow-\tsi-\tness", "dh r aU\tz i:\tn V s");
result.add("drow-\tsy", "dh r aU\tz i:");
result.add("drown", "dh r aU n");
result.add("drowned", "dh r aU n d");
result.add("drowns", "dh r aU n z");
result.add("dru", "dh r u:");
result.add("dru-\tcie", "dh r V\tk i:");
result.add("dru-\tel-\tla", "dh r u:\te\tl V");
result.add("dru-\ti-\tdi-\tsm", "dh r u:\tI\td I\tz V m");
result.add("dru-\tid", "dh r u:\tI d");
result.add("dru-\tids", "dh r u:\tI d z");
result.add("drub", "dh r V b");
result.add("drub-\tbing", "dh r V\tb I N");
result.add("drubbed", "dh r V b d");
result.add("druce", "dh r u: s");
result.add("drud-\tge-\try", "dh r V\tdZ @r\ti:");
result.add("drudge", "dh r V dZ");
result.add("drug", "dh r V g");
result.add("drug-\tging", "dh r V\tg I N");
result.add("drug-\tgist", "dh r V\tg I s t");
result.add("drug-\tgists", "dh r V\tg I s t s");
result.add("drug-\tgist's", "dh r V\tg I s t s");
result.add("drug-\tma-\tker", "dh r V g\tm eI\tk @r");
result.add("drug-\tma-\tkers", "dh r V g\tm eI\tk @r z");
result.add("drugged", "dh r V g d");
result.add("drugs", "dh r V g z");
result.add("drug's", "dh r V g z");
result.add("drugs-\ttore", "dh r V g\ts t O@");
result.add("drugs-\ttores", "dh r V g\ts t O@ z");
result.add("drum", "dh r V m");
result.add("drum-\tbeat", "dh r V m\tb i: t");
result.add("drum-\thead", "dh r V m\th e d");
result.add("drum-\tlin's", "dh r V m\tl I n z");
result.add("drum-\tmer", "dh r V\tm @r");
result.add("drum-\tmers", "dh r V\tm @r z");
result.add("drum-\tming", "dh r V\tm I N");
result.add("drum-\tmond", "dh r V\tm V n d");
result.add("drum-\tmonds", "dh r V\tm V n d z");
result.add("drummed", "dh r V m d");
result.add("dry-\tclean", "dh r aI k\tl i: n");
result.add("dry-\tden", "dh r aI\td V n");
result.add("dry-\ter", "dh r aI\t@r");
result.add("dry-\ters", "dh r aI\t@r z");
result.add("dry-\ting", "dh r aI\tI N");
result.add("dry-\tly", "dh r aI\tl i:");
result.add("dry-\tness", "dh r aI\tn V s");
result.add("dry-\tpoint", "dh r aI\tp OI n t");
result.add("dry-\twall", "dh r aI\tw Q l");
result.add("drye", "dh r aI");
result.add("drys-\tdale", "dh r aI z\td eI l");
result.add("d's", "dh i: z");
result.add("du", "dh u:");
result.add("du-\ta-\tli-\tsm", "dh u:\tV\tl I\tz V m");
result.add("du-\ta-\tli-\tsms", "dh u:\tV\tl I\tz V m z");
result.add("du-\ta-\tli-\tty", "dh u:\t{\tl I\tt i:");
result.add("du-\ta-\tlis-\ttic", "dh u:\tV\tl I s\tt I k");
result.add("du-\ta-\tlist", "dh u:\tV\tl I s t");
result.add("du-\tal", "dh u:\tV l");
result.add("du-\tals", "dh u:\tV l z");
result.add("du-\tbach", "dh V\tb Q k");
result.add("du-\tbai", "dh u:\tb aI");
result.add("du-\tbi-\tous", "dh u:\tb i:\tV s");
result.add("du-\tbin-\tsky", "dh V\tb I n\ts k i:");
result.add("du-\tbois", "dh u:\tb OI s");
result.add("du-\tbose", "dh u:\tb @U z");
result.add("du-\tbuque", "dh V b\tj u: k");
result.add("du-\tbuque's", "dh V b\tj u: k s");
result.add("du-\tby", "dh u:\tb i:");
result.add("du-\tcal", "dh u:\tk V l");
result.add("du-\tchamp", "dh u:\tS Q m p");
result.add("du-\tchamp's", "dh u:\tS Q m p s");
result.add("du-\tchenne", "dh u:\tS e n");
result.add("du-\tchess", "dh V\ttS V s");
result.add("du-\tchy", "dh V\ttS i:");
result.add("du-\tcom-\tmun", "dh u:\tk Q\tm V n");
result.add("du-\te-\tlist", "dh u:\tV\tl I s t");
result.add("du-\te-\tna", "dh u:\te\tn V");
result.add("du-\te-\tnas", "dh u:\te\tn V s");
result.add("du-\tel", "dh u:\tV l");
result.add("du-\teled", "dh u:\tV l d");
result.add("du-\tels", "dh u:\tV l z");
result.add("du-\ter", "dh u:\t@r");
result.add("du-\tet", "dh u:\te t");
result.add("du-\tets", "dh u:\te t s");
result.add("du-\tfur", "dh V\tf @r");
result.add("du-\tgal", "dh u:\tdZ V l");
result.add("du-\tgald", "dh V\tg V l d");
result.add("du-\tgan", "dh V\tg V n");
result.add("du-\tgas", "dh u:\tg V z");
result.add("du-\tgout", "dh V\tg aU t");
result.add("du-\tgouts", "dh V\tg aU t s");
result.add("du-\tha-\tmel", "dh u:\th {\tm V l");
result.add("du-\tka-\tki-\ts's", "dh u:\tk Q\tk I\ts V z");
result.add("du-\tka-\tkis", "dh u:\tk Q\tk I s");
result.add("du-\tking", "dh u:\tk I N");
result.add("du-\tla-\tney", "dh j u:\tl V\tn i:");
result.add("du-\tlac", "dh V\tl { k");
result.add("du-\tluth", "dh V\tl u: T");
result.add("du-\tly", "dh u:\tl i:");
result.add("du-\tma", "dh u:\tm V");
result.add("du-\tmas", "dh u:\tm V z");
result.add("du-\tmond", "dh V\tm Q n d");
result.add("du-\tmont", "dh u:\tm Q n t");
result.add("du-\tna", "dh u:\tn V");
result.add("du-\tna-\tway", "dh V\tn V\tw eI");
result.add("du-\tnaj", "dh u:\tn V dZ");
result.add("du-\tne-\tdin", "dh u:\tn V\td I n");
result.add("du-\tnite", "dh u:\tn aI t");
result.add("du-\to", "dh u:\t@U");
result.add("du-\to-\tde-\tnal", "dh u:\tQ\td V\tn V l");
result.add("du-\to-\tde-\tnum", "dh u:\tQ\td V\tn V m");
result.add("du-\to-\tpo-\tly", "dh u:\t@U\tp Q\tl i:");
result.add("du-\tong", "dh u:\t@U N");
result.add("du-\tper", "dh u:\tp @r");
result.add("du-\tpin", "dh V\tp { n");
result.add("du-\tpont", "dh u:\tp Q n t");
result.add("du-\tpont's", "dh u:\tp Q n t s");
result.add("du-\tpu-\tis", "dh V\tp u:\tI z");
result.add("du-\tpuy", "dh V\tp aI");
result.add("du-\tquesne", "dh u:\tk eI n");
result.add("du-\tquette", "dh V\tk e t");
result.add("du-\tra", "dh U@\tV");
result.add("du-\tra-\tbi-\tli-\tty", "dh @r\tV\tb I\tl V\tt i:");
result.add("du-\tra-\tble", "dh U@\tV\tb V l");
result.add("du-\tra-\tbles", "dh U@\tV\tb V l z");
result.add("du-\tra-\tcell", "dh U@\tV\ts e l");
result.add("du-\tra-\ttion", "dh U@\teI\tS V n");
result.add("du-\tra-\ttions", "dh U@\teI\tS V n z");
result.add("du-\tran", "dh @r\t{ n");
result.add("du-\tran-\tgo", "dh @r\t{ N\tg @U");
result.add("du-\tran-\tte", "dh U@\tQ n\tt i:");
result.add("du-\tran's", "dh @r\t{ n s");
result.add("du-\trant", "dh U@\tV n t");
result.add("du-\trant's", "dh @r\t{ n t s");
result.add("du-\tree", "dh U@\ti:");
result.add("du-\trene", "dh j u:\tr i: n");
result.add("du-\trer", "dh U@\t@r");
result.add("du-\tress", "dh U@\te s");
result.add("du-\tri-\to", "dh U@\ti:\t@U");
result.add("du-\tri-\tron", "dh u:\tr I@\tV n");
result.add("du-\tring", "dh U@\tI N");
result.add("du-\tro", "dh U@\t@U");
result.add("du-\tro-\tcher", "dh j u:\tr V\tk @r");
result.add("du-\trum", "dh U@\tV m");
result.add("du-\trye-\ta", "dh U@\ti:\tV");
result.add("du-\tsen-\tbu-\try", "dh u:\ts V n\tb e@\ti:");
result.add("du-\tthie", "dh V\tT i:");
result.add("du-\tti-\tful", "dh u:\tt i:\tf V l");
result.add("du-\tti-\tful-\tly", "dh u:\tt i:\tf V\tl i:");
result.add("du-\tties", "dh u:\tt i: z");
result.add("du-\ttoit", "dh u:\tt OI t");
result.add("du-\tty", "dh u:\tt i:");
result.add("du-\tva-\tlier", "dh u:\tv { l\tj @r");
result.add("du-\tval", "dh u:\tv { l");
result.add("du-\tvall", "dh u:\tv Q l");
result.add("duan", "dh w { n");
result.add("duane", "dh w eI n");
result.add("duar-\tte", "dh w Q@\tt eI");
result.add("duar-\tte's", "dh w Q@\tt eI z");
result.add("dub", "dh V b");
result.add("dub-\tber-\tly", "dh V\tb @r\tl i:");
result.add("dub-\tbing", "dh V\tb I N");
result.add("dub-\tcek", "dh V b\ttS e k");
result.add("dub-\tlin", "dh V b\tl I n");
result.add("dub-\tlin's", "dh V b\tl I n z");
result.add("dub-\trov-\tnik", "dh u: b\tr Q v\tn I k");
result.add("dub-\trov-\tnik's", "dh u: b\tr Q v\tn I k z");
result.add("dubbed", "dh V b d");
result.add("dubs", "dh V b z");
result.add("duc", "dh V k");
result.add("duc-\tker", "dh V\tk @r");
result.add("duc-\tking", "dh V\tk I N");
result.add("duc-\tlos", "dh V k\tl @U z");
result.add("duc-\tti-\tli-\tty", "dh V k\tt I\tl I\tt i:");
result.add("duc-\ttile", "dh V k\tt I l");
result.add("duce", "dh u: s");
result.add("duck", "dh V k");
result.add("duck-\tling", "dh V k\tl I N");
result.add("duck-\tlings", "dh V k\tl I N z");
result.add("duck-\tweed", "dh V k\tw i: d");
result.add("ducked", "dh V k t");
result.add("ducks", "dh V k s");
result.add("duck's", "dh V k s");
result.add("duct", "dh V k t");
result.add("duct-\tless", "dh V k\tt l V s");
result.add("ducts", "dh V k t s");
result.add("dud", "dh V d");
result.add("dud-\tdy", "dh V\td i:");
result.add("dud-\tgeon", "dh V\tdZ V n");
result.add("dud-\tley", "dh V d\tl i:");
result.add("dud-\tman", "dh V d\tm V n");
result.add("dude", "dh u: d");
result.add("dudes", "dh j u: d z");
result.add("duds", "dh V d z");
result.add("due", "dh u:");
result.add("due-\tling", "dh u:\tl I N");
result.add("dues", "dh u: z");
result.add("duf-\tfel", "dh V\tf V l");
result.add("duf-\tfer", "dh V\tf @r");
result.add("duf-\tfie", "dh V\tf i:");
result.add("duf-\tfield", "dh V\tf i: l d");
result.add("duf-\tfy", "dh V\tf i:");
result.add("duff", "dh V f");
result.add("dug", "dh V g");
result.add("dug-\tgan", "dh V\tg V n");
result.add("dug-\tger", "dh V\tg @r");
result.add("duh", "dh V");
result.add("duhr", "dh @r");
result.add("duis-\tburg", "dh u: s\tb @r g");
result.add("duke", "dh u: k");
result.add("duke-\tdom", "dh u: k\td V m");
result.add("dukes", "dh u: k s");
result.add("duke's", "dh u: k s");
result.add("dul-\tce-\ta", "dh V l\ts i:\tV");
result.add("dul-\tcet", "dh V l\ts V t");
result.add("dul-\tci-\tbelle", "dh V l\ts I\tb V l");
result.add("dul-\tci-\tmer", "dh V l\ts I\tm @r");
result.add("dul-\tci-\tne-\ta", "dh V l\ts I\tn i:\tV");
result.add("dul-\tcia-\tna", "dh u: l\ttS {\tn V");
result.add("dul-\tcie", "dh V l\tk i:");
result.add("dul-\tcine", "dh V l\ts I n");
result.add("dul-\tler", "dh V\tl @r");
result.add("dul-\tles", "dh V\tl V s");
result.add("dul-\tlest", "dh V\tl V s t");
result.add("dul-\tling", "dh V\tl I N");
result.add("dul-\twich", "dh V l\tw I tS");
result.add("dulce", "dh V l s");
result.add("dule", "dh u: l");
result.add("dull", "dh V l");
result.add("dull-\tness", "dh V l\tn V s");
result.add("dulled", "dh V l d");
result.add("dum", "dh V m");
result.add("dum-\tber", "dh V\tm @r");
result.add("dum-\tbest", "dh V\tm V s t");
result.add("dum-\tbing", "dh V\tm I N");
result.add("dum-\tbo", "dh V m\tb @U");
result.add("dum-\tmies", "dh V\tm i: z");
result.add("dum-\tmy", "dh V\tm i:");
result.add("dum-\tper", "dh V m\tp @r");
result.add("dum-\tping", "dh V m\tp I N");
result.add("dum-\tpy", "dh V m\tp i:");
result.add("dumb", "dh V m");
result.add("dumb-\tbell", "dh V m\tb e l");
result.add("dumb-\tbells", "dh V m\tb e l z");
result.add("dumb-\tfoun-\tded", "dh V m\tf aU n\td V d");
result.add("dumb-\tfound", "dh V m\tf aU n d");
result.add("dumb-\tstruck", "dh V m\ts t r V k");
result.add("dumm", "dh V m");
result.add("dump", "dh V m p");
result.add("dump-\tling", "dh V m\tp l I N");
result.add("dump-\tlings", "dh V m\tp l I N z");
result.add("dump-\tster", "dh V m\tp s t @r");
result.add("dump-\tsters", "dh V m\tp s t @r z");
result.add("dump-\ttruck", "dh V m\tp t r V k");
result.add("dump-\tty", "dh V m\tp t i:");
result.add("dumped", "dh V m p t");
result.add("dumps", "dh V m p s");
result.add("dun", "dh V n");
result.add("dun-\tbar", "dh V n\tb Q@");
result.add("dun-\tcan", "dh V N\tk V n");
result.add("dun-\tcombe", "dh V N\tk V m");
result.add("dun-\tdas", "dh V n\td V z");
result.add("dun-\tdee", "dh V n\td i:");
result.add("dun-\tgan", "dh V N\tg V n");
result.add("dun-\tgeon", "dh V n\tdZ V n");
result.add("dun-\tgeons", "dh V n\tdZ V n z");
result.add("dun-\tham", "dh V\tn V m");
result.add("dun-\tkel", "dh V N\tk V l");
result.add("dun-\tker", "dh V N\tk @r");
result.add("dun-\tkin", "dh V N\tk I n");
result.add("dun-\tkirk", "dh V n\tk @r k");
result.add("dun-\tkle", "dh V N\tk V l");
result.add("dun-\tla-\tvy", "dh V n\tl V\tv i:");
result.add("dun-\tlap", "dh V n\tl { p");
result.add("dun-\tle-\tvy", "dh u: n\tl I\tv i:");
result.add("dun-\tlop", "dh V n\tl Q p");
result.add("dun-\tnell", "dh V\tn V l");
result.add("dun-\tni-\tgan", "dh V\tn I\tg V n");
result.add("dun-\tning", "dh V\tn I N");
result.add("dun-\tson", "dh V n\ts V n");
result.add("dun-\tton", "dh V n\tt V n");
result.add("dun-\twoo-\tdy", "dh V n\tw U\td i:");
result.add("dunc", "dh V N k");
result.add("dune", "dh u: n");
result.add("dunes", "dh u: n z");
result.add("dung", "dh V N");
result.add("dunk", "dh V N k");
result.add("dunked", "dh V N k t");
result.add("dunks", "dh V N k s");
result.add("dunn", "dh V n");
result.add("dunne", "dh V n");
result.add("dunned", "dh V n d");
result.add("duns", "dh V n z");
result.add("dun's", "dh V n z");
result.add("duns-\ttan", "dh V n\ts t V n");
result.add("duns-\tter", "dh V n\ts t @r");
result.add("duns-\tton", "dh V n\ts t V n");
result.add("dunst", "dh V n s t");
result.add("dup-\tles-\tsis", "dh u: p\tl e\ts I s");
result.add("dup-\tlex", "dh u: p\tl e k s");
result.add("dup-\tli-\tca-\tted", "dh u: p\tl I\tk eI\tt I d");
result.add("dup-\tli-\tca-\tting", "dh u: p\tl I\tk eI\tt I N");
result.add("dup-\tli-\tca-\ttion", "dh j u: p\tl I\tk eI\tS V n");
result.add("dup-\tli-\tca-\ttions", "dh u: p\tl I\tk eI\tS V n z");
result.add("dup-\tli-\tca-\ttive", "dh u: p\tl I\tk V\tt I v");
result.add("dup-\tli-\tcate", "dh u: p\tl I\tk V t");
result.add("dup-\tli-\tcates", "dh j u: p\tl I\tk eI t s");
result.add("dup-\tli-\tci-\ttous", "dh u: p\tl I\ts I\tt V s");
result.add("dup-\tli-\tci-\tty", "dh u: p\tl I\ts I\tt i:");
result.add("dup-\tre", "dh V\tp @r");
result.add("dup-\tree", "dh V p\tr i:");
result.add("dupe", "dh u: p");
result.add("duped", "dh u: p t");
result.add("dupes", "dh u: p s");
result.add("duque", "dh u: k");
result.add("dur-\tban", "dh @r\tb V n");
result.add("dur-\tbin", "dh @r\tb I n");
result.add("dur-\tgan", "dh @r\tg V n");
result.add("dur-\tham", "dh @r\tV m");
result.add("dur-\tkee", "dh @r\tk i:");
result.add("dur-\tkin", "dh @r\tk I n");
result.add("dur-\tning", "dh @r\tn I N");
result.add("dur-\trell", "dh O@\tV l");
result.add("dur-\trett", "dh O@\tV t");
result.add("dur-\tward", "dh @r\tw @r d");
result.add("dur-\twin", "dh @r\tw I n");
result.add("durk-\theim", "dh @r k\th aI m");
result.add("durk-\theim's", "dh @r k\th aI m z");
result.add("durn", "dh @r n");
result.add("durr", "dh @r");
result.add("durst", "dh @r s t");
result.add("dus-\tsel-\tdorf", "dh u:\ts V l\td O@ f");
result.add("dus-\tted", "dh V s\tt V d");
result.add("dus-\tter", "dh V s\tt @r");
result.add("dus-\tters", "dh V s\tt @r z");
result.add("dus-\ttin", "dh V s\tt I n");
result.add("dus-\tting", "dh V s\tt I N");
result.add("dus-\tton", "dh V s\tt V n");
result.add("dus-\tty", "dh V s\tt i:");
result.add("dus-\tza", "dh V\tS V");
result.add("dush", "dh V S");
result.add("dusk", "dh V s k");
result.add("dust", "dh V s t");
result.add("dust-\tbin", "dh V s\tt b I n");
result.add("dust-\tman", "dh V s\tt m V n");
result.add("dusts", "dh V s t s");
result.add("dut-\tcher", "dh V\ttS @r");
result.add("dut-\tra", "dh u: t\tr V");
result.add("dut-\tton", "dh V\tt V n");
result.add("dutch", "dh V tS");
result.add("dutch-\tman", "dh V tS\tm V n");
result.add("duwe", "dh u: w");
result.add("dux", "dh V k s");
result.add("dvo-\trak", "dh v O@\tV k");
result.add("dvor-\tsky", "dh v O@ s\tk i:");
result.add("dw-\tyer", "dh w aI\t@r");
result.add("dwan", "dh w Q n");
result.add("dwar-\tfi-\tsm", "dh w O@\tf I\tz V m");
result.add("dwar-\tfing", "dh w O@\tf I N");
result.add("dwarf", "dh w O@ f");
result.add("dwarfed", "dh w O@ f t");
result.add("dwarfs", "dh w O@ f s");
result.add("dwarves", "dh w O@ v z");
result.add("dwayne", "dh w eI n");
result.add("dweck", "dh w e k");
result.add("dwel-\tler", "dh w e\tl @r");
result.add("dwel-\tlers", "dh w e\tl @r z");
result.add("dwel-\tling", "dh w e\tl I N");
result.add("dwel-\tlings", "dh w e\tl I N z");
result.add("dwell", "dh w e l");
result.add("dwelled", "dh w e l d");
result.add("dwells", "dh w e l z");
result.add("dwelt", "dh w e l t");
result.add("dwight", "dh w aI t");
result.add("dwin-\td-\tling", "dh w I n\td V\tl I N");
result.add("dwin-\tdle", "dh w I n\td V l");
result.add("dwin-\tdled", "dh w I n\td V l d");
result.add("dwin-\tdles", "dh w I n\td V l z");
result.add("dwo-\trak", "dh w @r\tV k");
result.add("dy-\tad", "dh aI\t{ d");
result.add("dy-\tna-\tmi-\tsm", "dh aI\tn V\tm I\tz V m");
result.add("dy-\tna-\tmic-\ts's", "dh aI\tn {\tm I k\ts V z");
result.add("dy-\tna-\tmics", "dh aI\tn {\tm I k s");
result.add("dy-\tna-\tmite", "dh aI\tn V\tm aI t");
result.add("dy-\tna-\tmo", "dh aI\tn V\tm @U");
result.add("dy-\tnas-\ttic", "dh aI\tn { s\tt I k");
result.add("dy-\tnas-\tties", "dh aI\tn V s\tt i: z");
result.add("dy-\tnas-\tty", "dh aI\tn V s\tt i:");
result.add("dy-\tsart", "dh I\ts @r t");
result.add("dy-\tsen-\tte-\try", "dh I\ts V n\tt e@\ti:");
result.add("dy-\tson", "dh aI\ts V n");
result.add("dynes", "dh aI n z");
result.add("dys-\tfunc-\ttio-\tnal", "dh I s\tf V N\tk S V\tn V l");
result.add("dys-\tfunc-\ttion", "dh I s\tf V N\tk S V n");
result.add("dys-\tle-\txi-\ta", "dh I s\tl e k\ts i:\tV");
result.add("dys-\tle-\txic", "dh I s\tl e k\ts I k");
result.add("dys-\tpla-\tsia", "dh I s\tp l eI\tZ V");
result.add("dys-\ttro-\tphin", "dh I s\tt r V\tf I n");
result.add("dys-\ttro-\tphy", "dh I s\tt r V\tf i:");
result.add("e", "i:");
result.add("e-\tba", "i:\tb V");
result.add("e-\tban", "e\tb V n");
result.add("e-\tbe-\tne-\tzer", "e\tb V\tn i:\tz @r");
result.add("e-\tbe-\tnee-\tzer", "e\tb V\tn i:\tz @r");
result.add("e-\tben", "e\tb V n");
result.add("e-\tber-\thard", "e\tb @r\th Q@ t");
result.add("e-\tber-\thart", "e\tb @r\th Q@ t");
result.add("e-\tber-\tle", "e\tb @r\tV l");
result.add("e-\tber-\tly", "e\tb @r\tl i:");
result.add("e-\tbert", "e\tb @r t");
result.add("e-\tbo-\tla", "i:\tb @U\tl V");
result.add("e-\tbo-\tnics", "i:\tb O:\tn I k s");
result.add("e-\tbo-\tny", "e\tb V\tn i:");
result.add("e-\tbul-\tlience", "V\tb U l\tj V n s");
result.add("e-\tbul-\tlient", "V\tb U l\tj V n t");
result.add("e-\tcad", "i:\tk { d");
result.add("e-\tce-\tvit", "e\ts V\tv V t");
result.add("e-\tchard", "e\ttS @r d");
result.add("e-\tche-\tlon", "e\tS V\tl Q n");
result.add("e-\tche-\tlons", "e\tS V\tl Q n z");
result.add("e-\tche-\tver-\tri-\ta", "eI\ttS eI\tv e@\ti:\tV");
result.add("e-\tcho", "e\tk @U");
result.add("e-\tcho-\ting", "e\tk @U\tI N");
result.add("e-\tcho-\tlo-\tca-\ttion", "e\tk @U\tl @U\tk eI\tS V n");
result.add("e-\tchoed", "e\tk @U d");
result.add("e-\tchoes", "e\tk @U z");
result.add("e-\tchols", "e\tk V l z");
result.add("e-\tchos", "e\tk @U z");
result.add("e-\tcho's", "e\tk @U z");
result.add("e-\tco", "i:\tk @U");
result.add("e-\tco-\tlo-\tgi-\tcal", "i:\tk V\tl Q\tdZ I\tk V l");
result.add("e-\tco-\tlo-\tgical-\tly", "i:\tk V\tl Q\tdZ I k\tl i:");
result.add("e-\tco-\tlo-\tgist", "I\tk Q\tl V\tdZ V s t");
result.add("e-\tco-\tlo-\tgists", "I\tk Q\tl V\tdZ V s t s");
result.add("e-\tco-\tlo-\tgy", "I\tk Q\tl V\tdZ i:");
result.add("e-\tco-\tno-\tmet-\tric", "I\tk Q\tn V\tm e t\tr I k");
result.add("e-\tco-\tno-\tmet-\trics", "I\tk Q\tn V\tm e t\tr I k s");
result.add("e-\tco-\tno-\tmi-\tcal", "e\tk V\tn Q\tm I\tk V l");
result.add("e-\tco-\tno-\tmi-\tzing", "I\tk Q\tn V\tm aI\tz I N");
result.add("e-\tco-\tno-\tmic", "e\tk V\tn Q\tm I k");
result.add("e-\tco-\tno-\tmical-\tly", "e\tk V\tn Q\tm I k\tl i:");
result.add("e-\tco-\tno-\tmics", "e\tk V\tn Q\tm I k s");
result.add("e-\tco-\tno-\tmies", "I\tk Q\tn V\tm i: z");
result.add("e-\tco-\tno-\tmist", "I\tk Q\tn V\tm V s t");
result.add("e-\tco-\tno-\tmists", "I\tk Q\tn V\tm V s t s");
result.add("e-\tco-\tno-\tmist's", "I\tk Q\tn V\tm V s t s");
result.add("e-\tco-\tno-\tmize", "I\tk Q\tn V\tm aI z");
result.add("e-\tco-\tno-\tmy", "I\tk Q\tn V\tm i:");
result.add("e-\tco-\tno-\tmy's", "I\tk Q\tn V\tm i: z");
result.add("e-\tco-\tsys-\ttem", "i:\tk @U\ts I s\tt V m");
result.add("e-\tco-\tsys-\ttems", "i:\tk @U\ts I s\tt V m z");
result.add("e-\tcole", "I\tk @U l");
result.add("e-\tcon", "i:\tk Q n");
result.add("e-\tcu-\tme-\tni-\tcal", "e k\tj u:\tm e\tn I\tk V l");
result.add("e-\tcua-\tdo-\tran", "e k\tw V\td O@\tV n");
result.add("e-\tcua-\tdo-\tre-\tan", "e k\tw V\td O@\ti:\tV n");
result.add("e-\tcua-\tdo-\tri-\tan", "e k\tw V\td O@\ti:\tV n");
result.add("e-\tcua-\tdor", "e k\tw V\td O@");
result.add("e-\tcua-\tdor's", "e k\tw V\td O@ z");
result.add("e-\tda", "i:\td V");
result.add("e-\tda-\tna", "e\td {\tn V");
result.add("e-\tdam", "i:\td V m");
result.add("e-\tdan", "i:\td V n");
result.add("e-\tde-\tline", "e\td V\tl aI n");
result.add("e-\tde-\tma", "V\td i:\tm V");
result.add("e-\tdel-\tman", "e\td V l\tm V n");
result.add("e-\tdel-\tman's", "e\td V l\tm V n z");
result.add("e-\tdel-\tson", "e\td V l\ts V n");
result.add("e-\tdel-\tstein", "e\td V l\ts t aI n");
result.add("e-\tdel-\tweiss", "eI\td V l\tv aI s");
result.add("e-\tden", "i:\td V n");
result.add("e-\tden-\tton", "e\td V n\tt V n");
result.add("e-\tdens", "i:\td V n z");
result.add("e-\tdi", "i:\td i:");
result.add("e-\tdi-\tble", "e\td I\tb V l");
result.add("e-\tdi-\tbles", "e\td I\tb V l z");
result.add("e-\tdi-\tfi-\tca-\ttion", "e\td I\tf I\tk eI\tS V n");
result.add("e-\tdi-\tfice", "e\td I\tf I s");
result.add("e-\tdi-\tfy", "e\td I\tf aI");
result.add("e-\tdi-\tfy-\ting", "e\td I\tf aI\tI N");
result.add("e-\tdi-\tna", "V\td i:\tn V");
result.add("e-\tdi-\tson", "e\td I\ts V n");
result.add("e-\tdi-\tson's", "e\td I\ts V n z");
result.add("e-\tdi-\tted", "e\td I\tt I d");
result.add("e-\tdi-\ttha", "e\td I\tD V");
result.add("e-\tdi-\tting", "e\td I\tt I N");
result.add("e-\tdi-\ttion", "V\td I\tS V n");
result.add("e-\tdi-\ttions", "V\td I\tS V n z");
result.add("e-\tdi-\ttion's", "V\td I\tS V n z");
result.add("e-\tdi-\tto-\tri-\ta-\tli-\tzing", "e\td I\tt O@\ti:\tV\tl aI\tz I N");
result.add("e-\tdi-\tto-\tri-\ta-\tlist", "e\td I\tt O@\ti:\tV\tl I s t");
result.add("e-\tdi-\tto-\tri-\ta-\tlists", "e\td I\tt O@\ti:\tV\tl I s t s");
result.add("e-\tdi-\tto-\tri-\ta-\tlize", "e\td I\tt O@\ti:\tV\tl aI z");
result.add("e-\tdi-\tto-\tri-\ta-\tlized", "e\td I\tt O@\ti:\tV\tl aI z d");
result.add("e-\tdi-\tto-\tri-\tal", "e\td I\tt O@\ti:\tV l");
result.add("e-\tdi-\tto-\tri-\tal-\tly", "e\td I\tt O@\ti:\tV\tl i:");
result.add("e-\tdi-\tto-\tri-\tals", "e\td I\tt O@\ti:\tV l z");
result.add("e-\tdi-\ttor", "e\td I\tt @r");
result.add("e-\tdi-\ttor-\tship", "e\td I\tt @r\tS I p");
result.add("e-\tdi-\ttors", "e\td I\tt @r z");
result.add("e-\tdi-\ttor's", "e\td I\tt @r z");
result.add("e-\tdi-\tva", "e\td i:\tv V");
result.add("e-\tdict", "i:\td I k t");
result.add("e-\tdicts", "i:\td I k t s");
result.add("e-\tdie", "e\td i:");
result.add("e-\tdin", "e\td I n");
result.add("e-\tdin-\tbo-\tro", "e\td I n\tb @r\t@U");
result.add("e-\tdin-\tbur-\tgh", "e\td I n\tb @r\t@U");
result.add("e-\tdit", "e\td I t");
result.add("e-\tdith", "i:\td I T");
result.add("e-\tdithe", "e\td I D");
result.add("e-\tdits", "e\td I t s");
result.add("e-\tdo", "i:\td @U");
result.add("e-\tdou-\tard", "e\td u:\tQ@ d");
result.add("e-\tdu-\tca-\tted", "e\tdZ V\tk eI\tt V d");
result.add("e-\tdu-\tca-\tting", "e\tdZ V\tk eI\tt I N");
result.add("e-\tdu-\tca-\ttio-\tnal", "e\tdZ V\tk eI\tS V\tn V l");
result.add("e-\tdu-\tca-\ttio-\tnal-\tly", "e\tdZ V\tk eI\tS V\tn V\tl i:");
result.add("e-\tdu-\tca-\ttion", "e\tdZ V\tk eI\tS V n");
result.add("e-\tdu-\tca-\ttions", "e\tdZ V\tk eI\tS V n z");
result.add("e-\tdu-\tca-\ttion's", "e\tdZ V\tk eI\tS V n z");
result.add("e-\tdu-\tca-\ttor", "e\tdZ V\tk eI\tt @r");
result.add("e-\tdu-\tca-\ttors", "e\tdZ V\tk eI\tt @r z");
result.add("e-\tdu-\tcate", "e\tdZ V\tk eI t");
result.add("e-\tdu-\tcates", "e\tdZ V\tk eI t z");
result.add("e-\tdyth", "e\td I T");
result.add("e-\tdythe", "e\td aI D");
result.add("e-\te-\to", "i:\ti:\t@U");
result.add("e-\tga-\tli-\tta-\tri-\ta-\tni-\tsm", "i:\tg {\tl I\tt e@\ti:\tV\tn I\tz V m");
result.add("e-\tga-\tli-\tta-\tri-\tan", "I\tg {\tl I\tt e@\ti:\tV n");
result.add("e-\tgan", "i:\tg V n");
result.add("e-\tge-\tland", "e\tg V\tl V n d");
result.add("e-\tger", "i:\tg @r");
result.add("e-\tger-\tton", "e\tg @r\tt V n");
result.add("e-\tgo", "i:\tg @U");
result.add("e-\tgo-\tcent-\tric", "i:\tg @U\ts e n\tt r I k");
result.add("e-\tgo-\ti-\tsm", "i:\tg @U\tI\tz V m");
result.add("e-\tgo-\tma-\tni-\tac", "i:\tg @U\tm eI\tn i:\t{ k");
result.add("e-\tgo-\tti-\tsm", "i:\tg V\tt I\tz V m");
result.add("e-\tgo-\ttis-\tti-\tcal", "e\tg V\tt I s\tt I\tk V l");
result.add("e-\tgo-\ttist", "i:\tg V\tt I s t");
result.add("e-\tgon", "i:\tg V n");
result.add("e-\tgos", "i:\tg @U z");
result.add("e-\tgre-\tgious", "I g\tr i:\tdZ V s");
result.add("e-\tgre-\tgious-\tly", "I g\tr i:\tdZ V s\tl i:");
result.add("e-\tgyp-\ttian", "I\tdZ I p\tS V n");
result.add("e-\tgyp-\ttians", "I\tdZ I p\tS V n z");
result.add("e-\tgyp-\tto-\tlo-\tgy", "i:\tdZ V p\tt Q\tl V\tdZ i:");
result.add("e-\tgypt", "i:\tdZ V p t");
result.add("e-\tgypt's", "i:\tdZ V p t s");
result.add("e-\tja-\tcu-\tla-\ttion", "i:\tdZ { k\tj u:\tl eI\tS V n");
result.add("e-\tja-\tcu-\tlate", "I\tdZ { k\tj u:\tl eI t");
result.add("e-\tjec-\tted", "I\tdZ e k\tt V d");
result.add("e-\tjec-\ttion", "I\tdZ e k\tS V n");
result.add("e-\tject", "I\tdZ e k t");
result.add("e-\tka-\tte-\tri-\tna", "eI\tk Q\tt e@\ti:\tn V");
result.add("e-\tking", "i:\tk I N");
result.add("e-\tla", "e\tl V");
result.add("e-\tla-\tbo-\tra-\tted", "V\tl {\tb @r\teI\tt V d");
result.add("e-\tla-\tbo-\tra-\tting", "V\tl {\tb @r\teI\tt I N");
result.add("e-\tla-\tbo-\tra-\ttion", "V\tl {\tb @r\teI\tS V n");
result.add("e-\tla-\tbo-\trates", "V\tl {\tb @r\teI t s");
result.add("e-\tla-\tborate-\tly", "V\tl { b\tr V t\tl i:");
result.add("e-\tla-\tta", "e\tl Q\tt V");
result.add("e-\tla-\tted", "V\tl eI\tt V d");
result.add("e-\tla-\tter", "e\tl V\tt @r");
result.add("e-\tla-\tters", "e\tl V\tt @r z");
result.add("e-\tla-\tting", "V\tl eI\tt I N");
result.add("e-\tla-\ttion", "V\tl eI\tS V n");
result.add("e-\tlabo-\trate", "V\tl { b\tr V t");
result.add("e-\tlai-\tna", "V\tl eI\tn V");
result.add("e-\tlaine", "V\tl eI n");
result.add("e-\tlaine's", "V\tl eI n z");
result.add("e-\tlam", "e\tl V m");
result.add("e-\tlan", "i:\tl V n");
result.add("e-\tland", "i:\tl V n d");
result.add("e-\tlane", "V\tl eI n");
result.add("e-\tlapse", "V\tl { p s");
result.add("e-\tlapsed", "V\tl { p s t");
result.add("e-\tlas-\tti-\tci-\tty", "i:\tl { s\tt I\ts I\tt i:");
result.add("e-\tlas-\ttic", "V\tl { s\tt I k");
result.add("e-\tlas-\tto-\tmer", "V\tl { s\tt V\tm @r");
result.add("e-\tlas-\tto-\tmers", "V\tl { s\tt V\tm @r z");
result.add("e-\tlat", "e\tl { t");
result.add("e-\tlate", "V\tl eI t");
result.add("e-\tlayne", "V\tl eI n");
result.add("e-\tle-\tgance", "e\tl V\tg V n s");
result.add("e-\tle-\tgant", "e\tl V\tg V n t");
result.add("e-\tle-\tgant-\tly", "e\tl I\tg V n\tt l i:");
result.add("e-\tle-\tgy", "e\tl V\tdZ i:");
result.add("e-\tle-\tmen-\ttal", "e\tl V\tm e n\tt V l");
result.add("e-\tle-\tment", "e\tl V\tm V n t");
result.add("e-\tle-\tmenta-\try", "e\tl V\tm e n\tt r i:");
result.add("e-\tle-\tments", "e\tl V\tm V n t s");
result.add("e-\tle-\tna", "e\tl V\tn V");
result.add("e-\tle-\tnore", "e\tl V\tn @r");
result.add("e-\tle-\to-\tno-\tre", "e\tl i:\tV\tn O@\ti:");
result.add("e-\tle-\tphan-\ttine", "e\tl V\tf { n\tt i: n");
result.add("e-\tle-\tphant", "e\tl V\tf V n t");
result.add("e-\tle-\tphants", "e\tl V\tf V n t s");
result.add("e-\tle-\tphant's", "e\tl V\tf V n t s");
result.add("e-\tle-\tva-\tted", "e\tl V\tv eI\tt V d");
result.add("e-\tle-\tva-\tting", "e\tl V\tv eI\tt I N");
result.add("e-\tle-\tva-\ttion", "e\tl V\tv eI\tS V n");
result.add("e-\tle-\tva-\ttions", "e\tl V\tv eI\tS V n z");
result.add("e-\tle-\tva-\ttor", "e\tl V\tv eI\tt @r");
result.add("e-\tle-\tva-\ttors", "e\tl V\tv eI\tt @r z");
result.add("e-\tle-\tvate", "e\tl V\tv eI t");
result.add("e-\tle-\tvates", "e\tl V\tv eI t s");
result.add("e-\tle-\tven", "V\tl e\tv V n");
result.add("e-\tle-\tvens", "V\tl e\tv V n z");
result.add("e-\tle-\tven's", "V\tl e\tv V n z");
result.add("e-\tle-\tventh", "V\tl e\tv V n T");
result.add("e-\tlea-\tno-\tra", "e\tl V\tn O@\tV");
result.add("e-\tlea-\tnor", "e\tl V\tn O@");
result.add("e-\tlec-\ttion", "V\tl e k\tS V n");
result.add("e-\tlec-\ttri-\tcal-\tly", "V\tl e k\tt r I\tk V\tl i:");
result.add("e-\tlec-\ttri-\tcals", "V\tl e k\tt r I\tk V l z");
result.add("e-\tlec-\ttri-\tci-\tty", "V\tl e k\tt r I\ts V\tt i:");
result.add("e-\tlec-\ttri-\tcian", "V\tl e k\tt r I\tS V n");
result.add("e-\tlec-\ttri-\tcians", "V\tl e k\tt r I\tS V n z");
result.add("e-\tlec-\ttri-\tfi-\tca-\ttion", "V\tl e k\tt r V\tf I\tk eI\tS V n");
result.add("e-\tlec-\ttri-\tfied", "V\tl e k\tt r V\tf aI d");
result.add("e-\tlec-\ttri-\tfies", "V\tl e k\tt r V\tf aI z");
result.add("e-\tlec-\ttri-\tfy", "V\tl e k\tt r V\tf aI");
result.add("e-\tlec-\ttri-\tfy-\ting", "V\tl e k\tt r V\tf aI\tI N");
result.add("e-\tlec-\ttrics", "V\tl e k\tt r I k s");
result.add("e-\tlec-\ttro", "V\tl e k\tt r @U");
result.add("e-\tlec-\ttro-\tbi-\to-\tlo-\tgy", "V\tl e k\tt r @U\tb aI\tQ\tl V\tdZ i:");
result.add("e-\tlec-\ttro-\tbi-\to-\tlo-\tgy's", "V\tl e k\tt r @U\tb aI\tQ\tl V\tdZ i: z");
result.add("e-\tlec-\ttro-\tcar-\tdi-\to-\tgram", "V\tl e k\tt r @U\tk Q@\td i:\tV g\tr { m");
result.add("e-\tlec-\ttro-\tcar-\tdi-\to-\tgrams", "V\tl e k\tt r @U\tk Q@\td i:\tV g\tr { m z");
result.add("e-\tlec-\ttro-\tche-\tmi-\tcal", "V\tl e k\tt r @U\tk e\tm I\tk V l");
result.add("e-\tlec-\ttro-\tcu-\tted", "V\tl e k\tt r V k\tj u:\tt V d");
result.add("e-\tlec-\ttro-\tcu-\ttion", "V\tl e k\tt r V k\tj u:\tS V n");
result.add("e-\tlec-\ttro-\tcu-\ttions", "V\tl e k\tt r V k\tj u:\tS V n z");
result.add("e-\tlec-\ttro-\tcute", "V\tl e k\tt r V k\tj u: t");
result.add("e-\tlec-\ttro-\tdy-\tna-\tmic", "V\tl e k\tt r @U\td aI\tn {\tm I k");
result.add("e-\tlec-\ttro-\tdy-\tna-\tmics", "V\tl e k\tt r @U\td aI\tn {\tm I k s");
result.add("e-\tlec-\ttro-\tly-\tsis", "V\tl e k\tt r Q\tl V\ts V s");
result.add("e-\tlec-\ttro-\tly-\ttic", "V\tl e k\tt r V\tl I\tt I k");
result.add("e-\tlec-\ttro-\tmag-\tne-\tti-\tsm", "V\tl e k\tt r @U\tm { g\tn V\tt I\tz V m");
result.add("e-\tlec-\ttro-\tmag-\tne-\ttic", "V\tl e k\tt r @U\tm { g\tn e\tt I k");
result.add("e-\tlec-\ttro-\tmag-\tnet", "V\tl e k\tt r @U\tm { g\tn V t");
result.add("e-\tlec-\ttro-\tmag-\tnets", "V\tl e k\tt r @U\tm { g\tn V t s");
result.add("e-\tlec-\ttro-\tme-\tcha-\tni-\tcal", "V\tl e k\tt r @U\tm V\tk {\tn I\tk V l");
result.add("e-\tlec-\ttro-\tni-\tcal-\tly", "V\tl e k\tt r Q\tn I\tk V\tl i:");
result.add("e-\tlec-\ttro-\tnic", "V\tl e k\tt r Q\tn I k");
result.add("e-\tlec-\ttro-\tnics", "V\tl e k\tt r Q\tn I k s");
result.add("e-\tlec-\ttro-\tpho-\tre-\tsis", "V\tl e k\tt r @U\tf O@\tI\ts I s");
result.add("e-\tlec-\ttro-\tpho-\tre-\tto-\tgram", "V\tl e k\tt r Q\tf V\tr e\tt V g\tr { m");
result.add("e-\tlec-\ttro-\tpla-\tting", "V\tl e k\tt r V p\tl eI\tt I N");
result.add("e-\tlec-\ttro-\tplate", "V\tl e k\tt r V p\tl eI t");
result.add("e-\tlec-\ttro-\tshock", "V\tl e k\tt r @U\tS Q k");
result.add("e-\tlec-\ttro-\tsta-\ttic", "V\tl e k\tt r @U s\tt {\tt I k");
result.add("e-\tlec-\ttrode", "V\tl e k\tt r @U d");
result.add("e-\tlec-\ttrodes", "V\tl e k\tt r @U d z");
result.add("e-\tlec-\ttron", "V\tl e k\tt r Q n");
result.add("e-\tlec-\ttrons", "V\tl e k\tt r Q n z");
result.add("e-\tlects", "V\tl e k t s");
result.add("e-\tlect's", "V\tl e k t s");
result.add("e-\tleen", "e\tl i: n");
result.add("e-\tlek-\ttra", "e\tl e k\tt r V");
result.add("e-\tlene", "e\tl i: n");
result.add("e-\tleu-\tthe-\tra", "V\tl u:\tT @r\tV");
result.add("e-\tli", "i:\tl aI");
result.add("e-\tli-\ta", "V\tl aI\tV");
result.add("e-\tli-\ta-\tson", "V\tl aI\tV\ts V n");
result.add("e-\tli-\tades", "i:\tl i:\teI d z");
result.add("e-\tli-\tas", "V\tl aI\tV s");
result.add("e-\tli-\tci-\tted", "V\tl I\ts V\tt V d");
result.add("e-\tli-\tci-\tting", "V\tl I\ts V\tt I N");
result.add("e-\tli-\tcit", "V\tl I\ts V t");
result.add("e-\tli-\tcits", "V\tl I\ts V t s");
result.add("e-\tli-\tgi-\tbi-\tli-\tty", "e\tl I\tdZ I\tb I\tl I\tt i:");
result.add("e-\tli-\tgi-\tble", "e\tl V\tdZ I\tb V l");
result.add("e-\tli-\thu", "e\tl I\th u:");
result.add("e-\tli-\tjah", "e\tl aI\tdZ V");
result.add("e-\tli-\tmi-\tna-\tted", "V\tl I\tm V\tn eI\tt V d");
result.add("e-\tli-\tmi-\tna-\tting", "V\tl I\tm V\tn eI\tt I N");
result.add("e-\tli-\tmi-\tna-\ttion", "V\tl I\tm V\tn eI\tS V n");
result.add("e-\tli-\tmi-\tna-\ttions", "V\tl I\tm V\tn eI\tS V n z");
result.add("e-\tli-\tmi-\tnate", "V\tl I\tm V\tn eI t");
result.add("e-\tli-\tmi-\tnates", "V\tl I\tm V\tn eI t s");
result.add("e-\tli-\tno-\tre", "e\tl i:\tn O@\ti:");
result.add("e-\tli-\tnor", "e\tl I\tn @r");
result.add("e-\tli-\tot", "e\tl i:\tV t");
result.add("e-\tli-\tot's", "e\tl i:\tV t s");
result.add("e-\tli-\tott", "e\tl i:\tQ t");
result.add("e-\tli-\tsa", "V\tl i:\ts V");
result.add("e-\tli-\tsa-\tbeth", "V\tl I\tz V\tb e T");
result.add("e-\tli-\tsa's", "V\tl i:\ts V z");
result.add("e-\tli-\tsha", "e\tl I\tS V");
result.add("e-\tli-\tson", "e\tl I\ts V n");
result.add("e-\tli-\tti-\tsm", "V\tl i:\tt I\tz V m");
result.add("e-\tli-\ttist", "eI\tl i:\tt V s t");
result.add("e-\tli-\ttists", "eI\tl i:\tt I s t s");
result.add("e-\tli-\txir", "V\tl I k\ts @r");
result.add("e-\tli-\tza", "V\tl aI\tz V");
result.add("e-\tli-\tza-\tbe-\tthan", "e\tl I\tz V\tb i:\tT V n");
result.add("e-\tli-\tza-\tbeth", "I\tl I\tz V\tb V T");
result.add("e-\tli-\tza-\tbeth-\ttown", "I\tl I\tz V\tb e T\tt aU n");
result.add("e-\tli-\tza-\tbeth's", "I\tl I\tz V\tb V T s");
result.add("e-\tlie", "e\tl i:");
result.add("e-\tlis-\tsa", "e\tl i:\ts V");
result.add("e-\tlise", "V\tl i: s");
result.add("e-\tlish", "e\tl I S");
result.add("e-\tlite", "V\tl i: t");
result.add("e-\tlites", "V\tl i: t s");
result.add("e-\tlo-\tcu-\ttion", "e\tl V k\tj u:\tS V n");
result.add("e-\tlo-\tcu-\ttions", "e\tl V k\tj u:\tS V n z");
result.add("e-\tlo-\tquence", "e\tl V k\tw V n s");
result.add("e-\tlo-\tquent", "e\tl V k\tw V n t");
result.add("e-\tlo-\tquent-\tly", "e\tl V k\tw V n\tt l i:");
result.add("e-\tloi-\tsa", "e\tl OI\ts V");
result.add("e-\tloise", "e\tl OI z");
result.add("e-\tlon-\tga-\tted", "V\tl O: N\tg eI\tt V d");
result.add("e-\tlon-\tga-\ttion", "i:\tl O: N\tg eI\tS V n");
result.add("e-\tlon-\tgate", "V\tl O: N\tg eI t");
result.add("e-\tlope", "V\tl @U p");
result.add("e-\tlopes", "V\tl @U p s");
result.add("e-\tlu-\tci-\tda-\tted", "V\tl u:\ts V\td eI\tt V d");
result.add("e-\tlu-\tci-\tda-\ttive", "V\tl u:\ts V\td eI\tt I v");
result.add("e-\tlu-\tci-\tdate", "V\tl u:\ts V\td eI t");
result.add("e-\tlu-\tded", "V\tl u:\td V d");
result.add("e-\tlu-\tding", "V\tl u:\td I N");
result.add("e-\tlu-\tsive", "V\tl u:\ts I v");
result.add("e-\tlu-\tsive-\tness", "V\tl u:\ts I v\tn V s");
result.add("e-\tlude", "V\tl u: d");
result.add("e-\tludes", "V\tl u: d z");
result.add("e-\tly", "i:\tl aI");
result.add("e-\tly-\tri-\ta", "V\tl I@\ti:\tV");
result.add("e-\tly-\tsee", "e\tl i:\ts i:");
result.add("e-\tly-\tsees", "e\tl i:\ts i: z");
result.add("e-\tly-\tsi-\ta", "V\tl I\tZ i:\tV");
result.add("e-\tly-\tsi-\tum", "V\tl I\tz i:\tV m");
result.add("e-\tlyn", "e\tl I n");
result.add("e-\tlyse", "e\tl aI s");
result.add("e-\tma", "i:\tm V");
result.add("e-\tma-\tci-\ta-\tted", "V\tm eI\tS i:\teI\tt V d");
result.add("e-\tma-\tci-\tate", "V\tm eI\tS i:\teI t");
result.add("e-\tma-\tna-\tted", "e\tm V\tn eI\tt V d");
result.add("e-\tma-\tna-\tting", "e\tm V\tn eI\tt I N");
result.add("e-\tma-\tna-\ttion", "e\tm V\tn eI\tS V n");
result.add("e-\tma-\tna-\ttions", "e\tm V\tn eI\tS V n z");
result.add("e-\tma-\tnate", "e\tm V\tn eI t");
result.add("e-\tma-\tnates", "e\tm V\tn eI t s");
result.add("e-\tma-\tnu-\te-\tle", "eI\tm Q\tn u:\te\tl eI");
result.add("e-\tma-\tnu-\tel", "I\tm { n\tj u:\tV l");
result.add("e-\tmad", "i:\tm { d");
result.add("e-\tmai-\tling", "i:\tm eI\tl I N");
result.add("e-\tmail", "i:\tm eI l");
result.add("e-\tmailed", "i:\tm eI l d");
result.add("e-\tmails", "i:\tm eI l z");
result.add("e-\tman-\tci-\tpa-\tted", "V\tm { n\ts V\tp eI\tt V d");
result.add("e-\tman-\tci-\tpa-\ttion", "V\tm { n\ts V\tp eI\tS V n");
result.add("e-\tman-\tci-\tpate", "V\tm { n\ts V\tp eI t");
result.add("e-\tmas-\tcu-\tla-\tted", "V\tm { s\tk j u:\tl eI\tt V d");
result.add("e-\tmas-\tcu-\tlate", "V\tm { s\tk j u:\tl V t");
result.add("e-\tme-\tli-\tna", "e\tm e\tl i:\tn V");
result.add("e-\tme-\tli-\tta", "e\tm e\tl i:\tt V");
result.add("e-\tme-\tline", "e\tm V\tl aI n");
result.add("e-\tme-\tlyne", "e\tm V\tl aI n");
result.add("e-\tme-\tra", "e\tm e@\tV");
result.add("e-\tme-\trant", "eI\tm e@\tV n t");
result.add("e-\tme-\traude", "e\tm @r\taU d");
result.add("e-\tme-\tri-\ttus", "I\tm e@\tI\tt V s");
result.add("e-\tme-\trick", "e\tm @r\tI k");
result.add("e-\tme-\try", "e\tm @r\ti:");
result.add("e-\tme-\try-\tville", "e\tm @r\ti:\tv I l");
result.add("e-\tme-\try's", "e\tm @r\ti: z");
result.add("e-\tme-\ttic", "e\tm e\tt I k");
result.add("e-\tmel-\tda", "e\tm e l\td V");
result.add("e-\tmer-\tgen-\tcies", "I\tm @r\tdZ V n\ts i: z");
result.add("e-\tmer-\tgen-\tcy", "I\tm @r\tdZ V n\ts i:");
result.add("e-\tmer-\tgence", "I\tm @r\tdZ V n s");
result.add("e-\tmer-\tgent", "I\tm @r\tdZ V n t");
result.add("e-\tmer-\tges", "I\tm @r\tdZ V z");
result.add("e-\tmer-\tging", "I\tm @r\tdZ I N");
result.add("e-\tmer-\tson", "e\tm @r\ts V n");
result.add("e-\tmer-\tson's", "e\tm @r\ts V n z");
result.add("e-\tmerge", "I\tm @r dZ");
result.add("e-\tmerged", "I\tm @r dZ d");
result.add("e-\tmerse", "I\tm @r s");
result.add("e-\tmersed", "I\tm @r s t");
result.add("e-\tmi-\tli-\ta", "V\tm i:\tl i:\tV");
result.add("e-\tmi-\tli-\to", "V\tm i:\tl i:\t@U");
result.add("e-\tmi-\tlie", "e\tm I\tl i:");
result.add("e-\tmi-\tly", "e\tm I\tl i:");
result.add("e-\tmi-\tly's", "e\tm I\tl i: z");
result.add("e-\tmi-\tna", "e\tm i:\tn V");
result.add("e-\tmi-\tnen-\tces", "e\tm I\tn V n\ts V z");
result.add("e-\tmi-\tnence", "e\tm I\tn V n s");
result.add("e-\tmi-\tnent", "e\tm I\tn V n t");
result.add("e-\tmi-\tnent-\tly", "e\tm I\tn V n\tt l i:");
result.add("e-\tmi-\trate", "e\tm @r\tV t");
result.add("e-\tmi-\trates", "e\tm @r\tV t s");
result.add("e-\tmi-\tson", "e\tm I\ts V n");
result.add("e-\tmig-\tra-\tted", "e\tm I g\tr eI\tt I d");
result.add("e-\tmig-\tra-\tting", "e\tm I g\tr eI\tt I N");
result.add("e-\tmig-\tra-\ttion", "e\tm I g\tr eI\tS V n");
result.add("e-\tmig-\tra-\ttions", "e\tm I g\tr eI\tS V n z");
result.add("e-\tmig-\trant", "e\tm I g\tr V n t");
result.add("e-\tmig-\trants", "e\tm I g\tr V n t s");
result.add("e-\tmig-\trate", "e\tm I g\tr eI t");
result.add("e-\tmig-\trates", "e\tm I g\tr eI t s");
result.add("e-\tmig-\tre", "e\tm I g\tr eI");
result.add("e-\tmig-\tres", "e\tm I g\tr eI z");
result.add("e-\tmil", "e\tm i: l");
result.add("e-\tmile", "eI\tm i: l");
result.add("e-\tmir", "e\tm I@");
result.add("e-\tmis-\tsa-\tries", "e\tm I\ts e@\ti: z");
result.add("e-\tmis-\tsa-\try", "e\tm I\ts e@\ti:");
result.add("e-\tmis-\tsion", "I\tm I\tS V n");
result.add("e-\tmis-\tsions", "I\tm I\tS V n z");
result.add("e-\tmit", "e\tm I t");
result.add("e-\tmit-\tted", "e\tm I\tt V d");
result.add("e-\tmit-\tting", "e\tm I\tt I N");
result.add("e-\tmits", "e\tm I t s");
result.add("e-\tmo-\tgene", "e\tm V\tg i: n");
result.add("e-\tmo-\try", "e\tm @r\ti:");
result.add("e-\tmo-\try's", "e\tm @r\ti: z");
result.add("e-\tmo-\ttio-\tna-\tli-\tsm", "I\tm @U\tS V\tn V\tl I\tz V m");
result.add("e-\tmo-\ttio-\tnal", "I\tm @U\tS V\tn V l");
result.add("e-\tmo-\ttion", "I\tm @U\tS V n");
result.add("e-\tmo-\ttions", "I\tm @U\tS V n z");
result.add("e-\tmotio-\tnal-\tly", "I\tm @U S\tn V\tl i:");
result.add("e-\tmu", "i: m\tj u:");
result.add("e-\tmu-\tla-\tted", "e m\tj V\tl eI\tt V d");
result.add("e-\tmu-\tla-\tting", "e m\tj V\tl eI\tt I N");
result.add("e-\tmu-\tla-\ttion", "e m\tj V\tl eI\tS V n");
result.add("e-\tmu-\tlate", "e m\tj V\tl eI t");
result.add("e-\tmul-\tsi-\tfi-\ter", "I\tm V l\ts I\tf aI\t@r");
result.add("e-\tmul-\tsion", "I\tm V l\tS V n");
result.add("e-\tna", "e\tn V");
result.add("e-\tna-\tb-\tler", "e\tn eI\tb V\tl @r");
result.add("e-\tna-\tb-\tling", "e\tn eI\tb V\tl I N");
result.add("e-\tna-\tble", "e\tn eI\tb V l");
result.add("e-\tna-\tbled", "e\tn eI\tb V l d");
result.add("e-\tna-\tbles", "e\tn eI\tb V l z");
result.add("e-\tna-\tmel", "V\tn {\tm V l");
result.add("e-\tna-\tmeled", "V\tn {\tm V l d");
result.add("e-\tna-\tmels", "V\tn {\tm V l z");
result.add("e-\tna-\tmor", "e\tn {\tm @r");
result.add("e-\tna-\tmored", "e\tn {\tm @r d");
result.add("e-\tnac-\tted", "e\tn { k\tt V d");
result.add("e-\tnac-\tting", "e\tn { k\tt I N");
result.add("e-\tnact", "e\tn { k t");
result.add("e-\tnact-\tment", "e\tn { k\tt m V n t");
result.add("e-\tnact-\tments", "e\tn { k\tt m V n t s");
result.add("e-\tnacts", "I\tn { k t s");
result.add("e-\tne-\ta", "e\tn i:\tV");
result.add("e-\tne-\tma", "e\tn V\tm V");
result.add("e-\tne-\tmas", "e\tn V\tm V z");
result.add("e-\tne-\tmies", "e\tn V\tm i: z");
result.add("e-\tne-\tmy", "e\tn V\tm i:");
result.add("e-\tne-\tmy's", "e\tn V\tm i: z");
result.add("e-\tner-\tge-\ttic", "e\tn @r\tdZ e\tt I k");
result.add("e-\tner-\tge-\ttical-\tly", "e\tn @r\tdZ e\tt I k\tl i:");
result.add("e-\tner-\tgi-\tzer", "e\tn @r\tdZ aI\tz @r");
result.add("e-\tner-\tgi-\tzes", "e\tn @r\tdZ aI\tz V z");
result.add("e-\tner-\tgi-\tzing", "e\tn @r\tdZ aI\tz I N");
result.add("e-\tner-\tgies", "e\tn @r\tdZ i: z");
result.add("e-\tner-\tgize", "e\tn @r\tdZ aI z");
result.add("e-\tner-\tgized", "e\tn @r\tdZ aI z d");
result.add("e-\tner-\tgy", "e\tn @r\tdZ i:");
result.add("e-\tner-\tgy's", "e\tn @r\tdZ i: z");
result.add("e-\tni-\tac", "i:\tn i:\t{ k");
result.add("e-\tnid", "i:\tn I d");
result.add("e-\tnig-\tma", "V\tn I g\tm V");
result.add("e-\tnig-\tma-\ttic", "e\tn I g\tm {\tt I k");
result.add("e-\tno", "e\tn @U");
result.add("e-\tno-\tla", "V\tn @U\tl V");
result.add("e-\tnoch", "i:\tn V k");
result.add("e-\tnochs", "e\tn V k s");
result.add("e-\tnor-\tmi-\tty", "V\tn O@\tm I\tt i:");
result.add("e-\tnor-\tmous", "V\tn O@\tm V s");
result.add("e-\tnor-\tmous-\tly", "V\tn O@\tm V s\tl i:");
result.add("e-\tnough", "V\tn V f");
result.add("e-\tnu-\tme-\tra-\tted", "V\tn u:\tm @r\teI\tt V d");
result.add("e-\tnu-\tme-\tra-\ttion", "V\tn u:\tm @r\teI\tS V n");
result.add("e-\tnu-\tme-\trate", "V\tn u:\tm @r\teI t");
result.add("e-\tnu-\tme-\trates", "V\tn u:\tm @r\teI t s");
result.add("e-\tnun-\tci-\ta-\tted", "V\tn V n\ts i:\teI\tt V d");
result.add("e-\tnun-\tci-\ta-\tting", "V\tn V n\ts i:\teI\tt I N");
result.add("e-\tnun-\tci-\tate", "V\tn V n\ts i:\teI t");
result.add("e-\to-\tcene", "i:\tV\ts i: n");
result.add("e-\to-\thip-\tpus", "i:\t@U\th I\tp V s");
result.add("e-\to-\tlan-\tde", "eI\t@U\tl Q n\td i:");
result.add("e-\ton", "i:\tV n");
result.add("e-\tons", "i:\tV n z");
result.add("e-\tos", "i:\tQ s");
result.add("e-\tphe-\tme-\tral", "e\tf e\tm @r\tV l");
result.add("e-\tphed-\trine", "e\tf e d\tr I n");
result.add("e-\tpi-\tcen-\tter", "e\tp I\ts e n\tt @r");
result.add("e-\tpi-\tcu-\tre-\tan", "e\tp V k\tj U@\ti:\tV n");
result.add("e-\tpi-\tcure", "e\tp I k\tj U@");
result.add("e-\tpi-\tde-\tmi-\to-\tlo-\tgi-\tcal", "e\tp I\td i:\tm i:\tV\tl Q\tdZ I\tk V l");
result.add("e-\tpi-\tde-\tmi-\to-\tlo-\tgist", "e\tp I\td i:\tm i:\tQ\tl V\tdZ V s t");
result.add("e-\tpi-\tde-\tmi-\to-\tlo-\tgists", "e\tp I\td i:\tm i:\tQ\tl V\tdZ V s t s");
result.add("e-\tpi-\tde-\tmi-\to-\tlo-\tgy", "e\tp I\td e\tm i:\tQ\tl V\tdZ i:");
result.add("e-\tpi-\tde-\tmic", "e\tp I\td e\tm I k");
result.add("e-\tpi-\tde-\tmics", "e\tp I\td e\tm I k s");
result.add("e-\tpi-\tder-\tmal", "e\tp I\td @r\tm V l");
result.add("e-\tpi-\tder-\tmis", "e\tp I\td @r\tm I s");
result.add("e-\tpi-\tdu-\tral", "e\tp I\td @r\tV l");
result.add("e-\tpi-\tge-\tne-\ttic", "e\tp I\tdZ V\tn e\tt I k");
result.add("e-\tpi-\tgra-\tphic", "e\tp I g\tr {\tf I k");
result.add("e-\tpi-\tgram", "e\tp I g\tr { m");
result.add("e-\tpi-\tlep-\tsies", "e\tp I\tl e p\ts i: z");
result.add("e-\tpi-\tlep-\tsy", "e\tp I\tl e p\ts i:");
result.add("e-\tpi-\tlep-\ttic", "e\tp I\tl e p\tt I k");
result.add("e-\tpi-\tlogue", "e\tp I\tl O: g");
result.add("e-\tpi-\tpha-\tny", "I\tp I\tf V\tn i:");
result.add("e-\tpi-\ttaph", "e\tp I\tt { f");
result.add("e-\tpi-\ttaphs", "e\tp I\tt { f s");
result.add("e-\tpi-\tthe-\tlial", "e\tp I\tT e l\tj V l");
result.add("e-\tpi-\tthet", "e\tp I\tT e t");
result.add("e-\tpi-\tthets", "e\tp I\tT e t s");
result.add("e-\tpi-\tto-\tme", "V\tp I\tt V\tm i:");
result.add("e-\tpi-\tto-\tmi-\tzes", "V\tp I\tt V\tm aI\tz V z");
result.add("e-\tpi-\tto-\tmize", "V\tp I\tt V\tm aI z");
result.add("e-\tpi-\tto-\tmized", "V\tp I\tt V\tm aI z d");
result.add("e-\tpi-\ttope", "e\tp I\tt @U p");
result.add("e-\tpic", "e\tp I k");
result.add("e-\tpics", "e\tp I k s");
result.add("e-\tpic's", "e\tp I k s");
result.add("e-\tpis-\tco-\tpa-\tli-\tan", "I\tp I s\tk V\tp eI\tl i:\tV n");
result.add("e-\tpis-\tco-\tpal", "I\tp I s\tk V\tp V l");
result.add("e-\tpis-\tte-\tmo-\tlo-\tgy", "V\tp I s\tt V\tm Q\tl V\tdZ i:");
result.add("e-\tpis-\tteme", "e\tp I s\tt i: m");
result.add("e-\tpis-\ttle", "I\tp I\ts V l");
result.add("e-\tpis-\tto-\tla-\try", "I\tp I s\tt V\tl e@\ti:");
result.add("e-\tpo-\tchal", "e\tp V\tk V l");
result.add("e-\tpo-\txy", "I\tp Q k\ts i:");
result.add("e-\tpoch", "e\tp V k");
result.add("e-\tpochs", "e\tp V k s");
result.add("e-\tqua-\tble", "e k\tw V\tb V l");
result.add("e-\tqua-\tli-\tty", "I k\tw Q\tl I\tt i:");
result.add("e-\tqua-\tli-\tza-\ttion", "i: k\tw V\tl I\tz eI\tS V n");
result.add("e-\tqua-\tli-\tzer", "i: k\tw V\tl aI\tz @r");
result.add("e-\tqua-\tli-\tzing", "i: k\tw V\tl aI\tz I N");
result.add("e-\tqua-\tling", "i: k\tw V\tl I N");
result.add("e-\tqua-\tlize", "i: k\tw V\tl aI z");
result.add("e-\tqua-\tlized", "i: k\tw V\tl aI z d");
result.add("e-\tqua-\tni-\tmi-\tty", "i: k\tw V\tn I\tm V\tt i:");
result.add("e-\tqua-\tted", "I k\tw eI\tt V d");
result.add("e-\tqua-\tting", "I k\tw eI\tt I N");
result.add("e-\tqua-\ttion", "I k\tw eI\tZ V n");
result.add("e-\tqua-\ttions", "I k\tw eI\tZ V n z");
result.add("e-\tqua-\tto-\tri-\tal", "i: k\tw V\tt O@\ti:\tV l");
result.add("e-\tqua-\ttor", "I k\tw eI\tt @r");
result.add("e-\tqual", "i: k\tw V l");
result.add("e-\tqual-\tly", "i: k\tw V\tl i:");
result.add("e-\tqualed", "i: k\tw V l d");
result.add("e-\tquals", "i: k\tw V l z");
result.add("e-\tquate", "I k\tw eI t");
result.add("e-\tquates", "I k\tw eI t s");
result.add("e-\tque-\tstri-\tan", "I k\tw e s\tt r i:\tV n");
result.add("e-\tqui-\tan-\tgu-\tlar", "i: k\tw I\t{ N\tg j V\tl @r");
result.add("e-\tqui-\tli-\tbri-\ta", "i: k\tw I\tl I b\tr i:\tV");
result.add("e-\tqui-\tli-\tbri-\tum", "i: k\tw I\tl I b\tr i:\tV m");
result.add("e-\tqui-\tnox", "i: k\tw I\tn Q k s");
result.add("e-\tqui-\tta-\tble", "e k\tw I\tt V\tb V l");
result.add("e-\tqui-\tta-\ttion", "e k\tw I\tt eI\tS V n");
result.add("e-\tqui-\ttab-\tly", "e k\tw I\tt V b\tl i:");
result.add("e-\tqui-\tties", "e k\tw I\tt i: z");
result.add("e-\tqui-\tty", "e k\tw I\tt i:");
result.add("e-\tqui-\tty's", "e k\tw I\tt i: z");
result.add("e-\tqui-\tva-\tlen-\tcy", "I k\tw I\tv V\tl V n\ts i:");
result.add("e-\tqui-\tva-\tlence", "I k\tw I\tv V\tl V n s");
result.add("e-\tqui-\tva-\tlent", "I k\tw I\tv V\tl V n t");
result.add("e-\tqui-\tva-\tlents", "I k\tw I\tv V\tl V n t s");
result.add("e-\tqui-\tvo-\tca-\tting", "I k\tw I\tv V\tk eI\tt I N");
result.add("e-\tqui-\tvo-\tca-\ttion", "I k\tw I\tv V\tk eI\tS V n");
result.add("e-\tqui-\tvo-\tcal", "I k\tw I\tv V\tk V l");
result.add("e-\tqui-\tvo-\tcate", "I k\tw I\tv V\tk eI t");
result.add("e-\tquine", "i: k\tw aI n");
result.add("e-\tquip", "I k\tw I p");
result.add("e-\tquip-\tment", "I k\tw I p\tm V n t");
result.add("e-\tquip-\tments", "I k\tw I p\tm V n t s");
result.add("e-\tquip-\tment's", "I k\tw I p\tm V n t s");
result.add("e-\tquip-\tping", "I k\tw I\tp I N");
result.add("e-\tquipped", "I k\tw I p t");
result.add("e-\tquips", "I k\tw I p s");
result.add("e-\tra", "e@\tV");
result.add("e-\tra-\tdi-\tca-\tted", "I@\t{\td I\tk eI\tt I d");
result.add("e-\tra-\tdi-\tca-\tting", "I@\t{\td I\tk eI\tt I N");
result.add("e-\tra-\tdi-\tca-\ttion", "I@\t{\td I\tk eI\tS V n");
result.add("e-\tra-\tdi-\tcate", "I@\t{\td I\tk eI t");
result.add("e-\tra-\tsa-\tble", "I@\teI\ts V\tb V l");
result.add("e-\tra-\tser", "I@\teI\ts @r");
result.add("e-\tra-\tsers", "I@\teI\ts @r z");
result.add("e-\tra-\tses", "I@\teI\ts V z");
result.add("e-\tra-\tsing", "I@\teI\ts I N");
result.add("e-\tras", "I@\tV z");
result.add("e-\tra's", "e@\tV z");
result.add("e-\tras-\tmus", "I@\t{ z\tm V s");
result.add("e-\tras-\ttus", "I@\t{ s\tt V s");
result.add("e-\trase", "I@\teI s");
result.add("e-\trased", "I@\teI s t");
result.add("e-\tre-\tna", "@r\te\tn V");
result.add("e-\trec-\tted", "I@\te k\tt V d");
result.add("e-\trec-\tting", "I@\te k\tt I N");
result.add("e-\trec-\ttion", "I@\te k\tS V n");
result.add("e-\trec-\ttions", "I@\te k\tS V n z");
result.add("e-\trec-\ttor", "I@\te k\tt @r");
result.add("e-\trect", "I@\te k t");
result.add("e-\trects", "I@\te k t s");
result.add("e-\tri-\tca", "e@\tI\tk V");
result.add("e-\tri-\tka", "e@\tI\tk V");
result.add("e-\tri-\tna", "@r\ti:\tn V");
result.add("e-\tri-\tsa", "e@\ti:\ts V");
result.add("e-\tric", "e@\tI k");
result.add("e-\tric-\tka", "e@\tI\tk V");
result.add("e-\tric-\tson", "e@\tI k\ts V n");
result.add("e-\trich", "e@\tI k");
result.add("e-\trick", "e@\tI k");
result.add("e-\trick-\tsen", "e@\tI k\ts V n");
result.add("e-\trick-\tson", "e@\tI k\ts V n");
result.add("e-\tric's", "e@\tI k s");
result.add("e-\trics-\tson", "e@\tI k\ts V n");
result.add("e-\trics-\tson's", "e@\tI k\ts V n z");
result.add("e-\trie", "I@\ti:");
result.add("e-\trik", "e@\tI k");
result.add("e-\trik-\tson", "e@\tI k\ts V n");
result.add("e-\trik-\tson's", "e@\tI k\ts V n z");
result.add("e-\trik's", "e@\tI k s");
result.add("e-\triks-\tson", "e@\tI k\ts V n");
result.add("e-\trin", "e@\tI n");
result.add("e-\trit-\tre-\ta", "e@\tI t\tr i:\tV");
result.add("e-\trit-\tre-\tan", "e@\tI t\tr i:\tV n");
result.add("e-\trit-\treans", "e@\tI t\tr i: n z");
result.add("e-\tro-\tded", "I@\t@U\td V d");
result.add("e-\tro-\tdi-\tble", "I@\t@U\td I\tb V l");
result.add("e-\tro-\tding", "I@\t@U\td I N");
result.add("e-\tro-\tsio-\tnal", "I@\t@U\tZ V\tn V l");
result.add("e-\tro-\tsion", "I@\t@U\tZ V n");
result.add("e-\tro-\tsive", "I@\t@U\ts I v");
result.add("e-\tro-\tti-\tca", "I@\tQ\tt I\tk V");
result.add("e-\tro-\tti-\tci-\tsm", "@r\tQ\tt I\ts I\tz V m");
result.add("e-\tro-\ttic", "I@\tQ\tt I k");
result.add("e-\trode", "I@\t@U d");
result.add("e-\trodes", "I@\t@U d z");
result.add("e-\troi-\tca", "@r\tOI\tk V");
result.add("e-\tros", "I@\tQ s");
result.add("e-\tru-\tdi-\ttion", "e@\tV\td I\tS V n");
result.add("e-\tru-\tdite", "e@\tV\td aI t");
result.add("e-\trup-\tted", "i:\tr V p\tt V d");
result.add("e-\trup-\tting", "I@\tV p\tt I N");
result.add("e-\trup-\ttion", "I@\tV p\tS V n");
result.add("e-\trup-\ttions", "I@\tV p\tS V n z");
result.add("e-\trup-\ttive", "I@\tV p\tt I v");
result.add("e-\trupt", "I@\tV p t");
result.add("e-\trupts", "I@\tV p t s");
result.add("e-\tryth-\tro-\tpoie-\ttin", "e@\tI T\tr V\tp OI\tt I n");
result.add("e-\tsau", "i:\ts O:");
result.add("e-\tso-\tpha-\tgus", "V\ts Q\tf V\tg V s");
result.add("e-\tso-\tte-\tric", "e\ts V\tt e@\tI k");
result.add("e-\tter-\tnal", "I\tt @r\tn V l");
result.add("e-\tter-\tnal-\tly", "I\tt @r\tn V\tl i:");
result.add("e-\tter-\tni-\tty", "I\tt @r\tn I\tt i:");
result.add("e-\ttha-\tnol", "e\tT V\tn O: l");
result.add("e-\tthan", "i:\tT V n");
result.add("e-\tthane", "e\tT eI n");
result.add("e-\tthe-\tlin-\tda", "e\tT e\tl i: n\td V");
result.add("e-\tthe-\tline", "e\tT V\tl aI n");
result.add("e-\tthe-\tlyn", "e\tT V\tl V n");
result.add("e-\tthe-\tre-\tal", "V\tT I@\ti:\tV l");
result.add("e-\tthel", "e\tT V l");
result.add("e-\tthel-\tbert", "e\tT V l\tb @r t");
result.add("e-\tthel-\tda", "V\tT e l\td V");
result.add("e-\tthene", "e\tT i: n");
result.add("e-\tther", "i:\tT @r");
result.add("e-\tther-\tnet", "e\tT @r\tn e t");
result.add("e-\tthers", "i:\tT @r z");
result.add("e-\tthi-\tcal", "e\tT I\tk V l");
result.add("e-\tthi-\tcal-\tly", "e\tT I\tk V\tl i:");
result.add("e-\tthi-\tcist", "e\tT I\ts I s t");
result.add("e-\tthi-\tcists", "e\tT I\ts I s t s");
result.add("e-\tthi-\to-\tpi-\ta", "i:\tT i:\t@U\tp i:\tV");
result.add("e-\tthi-\to-\tpi-\tan", "i:\tT i:\t@U\tp i:\tV n");
result.add("e-\tthi-\to-\tpi-\tans", "i:\tT i:\t@U\tp i:\tV n z");
result.add("e-\tthi-\to-\tpi-\ta's", "i:\tT i:\t@U\tp i:\tV z");
result.add("e-\tthic", "e\tT I k");
result.add("e-\tthics", "e\tT I k s");
result.add("e-\ttho-\tlo-\tgy", "e\tT Q\tl V\tdZ i:");
result.add("e-\tthos", "i:\tT Q s");
result.add("e-\tthy-\tlene", "e\tT V\tl i: n");
result.add("e-\tthyl", "e\tT V l");
result.add("e-\tti-\tenne", "e\tt i:\te n");
result.add("e-\tti-\to-\tlo-\tgies", "i:\tt i:\tQ\tl V\tdZ i: z");
result.add("e-\tti-\to-\tlo-\tgy", "i:\tt i:\tQ\tl V\tdZ i:");
result.add("e-\tti-\tquette", "e\tt I\tk V t");
result.add("e-\tton", "i:\tt V n");
result.add("e-\ttudes", "eI\tt u: d z");
result.add("e-\tty-\tmo-\tlo-\tgi-\tcal", "e\tt V\tm V\tl Q\tdZ V\tk V l");
result.add("e-\tty-\tmo-\tlo-\tgy", "e\tt V\tm Q\tl V\tdZ i:");
result.add("e-\tva", "eI\tv V");
result.add("e-\tva-\tcu-\ta-\tted", "I\tv { k\tj V\tw eI\tt V d");
result.add("e-\tva-\tcu-\ta-\tting", "I\tv { k\tj V\tw eI\tt I N");
result.add("e-\tva-\tcu-\ta-\ttion", "I\tv { k\tj V\tw eI\tS V n");
result.add("e-\tva-\tcu-\ta-\ttions", "I\tv { k\tj V\tw eI\tS V n z");
result.add("e-\tva-\tcu-\tate", "I\tv { k\tj V\teI t");
result.add("e-\tva-\tcu-\tee", "I\tv { k\tj u:\ti:");
result.add("e-\tva-\tcu-\tees", "I\tv { k\tj u:\ti: z");
result.add("e-\tva-\tded", "I\tv eI\td V d");
result.add("e-\tva-\tder", "I\tv eI\td @r");
result.add("e-\tva-\tders", "I\tv eI\td @r z");
result.add("e-\tva-\tding", "I\tv eI\td I N");
result.add("e-\tva-\tleen", "e\tv V\tl i: n");
result.add("e-\tva-\tlu-\ta-\tted", "I\tv { l\tj u:\teI\tt V d");
result.add("e-\tva-\tlu-\ta-\tting", "I\tv { l\tj u:\teI\tt I N");
result.add("e-\tva-\tlu-\ta-\ttion", "I\tv { l\tj u:\teI\tS V n");
result.add("e-\tva-\tlu-\ta-\ttions", "I\tv { l\tj u:\teI\tS V n z");
result.add("e-\tva-\tlu-\tate", "I\tv { l\tj u:\teI t");
result.add("e-\tva-\tlu-\tates", "I\tv { l\tj u:\teI t s");
result.add("e-\tva-\tnes-\tcence", "e\tv V\tn e\ts V n s");
result.add("e-\tva-\tnes-\tcent", "e\tv V\tn e\ts V n t");
result.add("e-\tva-\tpo-\tra-\tted", "I\tv {\tp @r\teI\tt V d");
result.add("e-\tva-\tpo-\tra-\tting", "I\tv {\tp @r\teI\tt I N");
result.add("e-\tva-\tpo-\tra-\ttion", "I\tv {\tp @r\teI\tS V n");
result.add("e-\tva-\tpo-\tra-\ttor", "I\tv {\tp @r\teI\tt @r");
result.add("e-\tva-\tpo-\trate", "I\tv {\tp @r\teI t");
result.add("e-\tva-\tpo-\trates", "I\tv {\tp @r\teI t s");
result.add("e-\tva-\tsion", "I\tv eI\tZ V n");
result.add("e-\tva-\tsions", "I\tv eI\tZ V n z");
result.add("e-\tva-\tsive", "I\tv eI\ts I v");
result.add("e-\tvad-\tne", "I\tv e d\tn i:");
result.add("e-\tvade", "I\tv eI d");
result.add("e-\tvades", "I\tv eI d z");
result.add("e-\tvan", "e\tv V n");
result.add("e-\tvan-\tder", "i:\tv { n\td @r");
result.add("e-\tvan-\tge-\tli-\tcal", "i:\tv { n\tdZ e\tl I\tk V l");
result.add("e-\tvan-\tge-\tli-\tcals", "i:\tv { n\tdZ e\tl I\tk V l z");
result.add("e-\tvan-\tge-\tli-\tsm", "I\tv { n\tdZ V\tl I\tz V m");
result.add("e-\tvan-\tge-\tline", "I\tv { n\tdZ V\tl aI n");
result.add("e-\tvan-\tge-\tlis-\tta", "e\tv Q N\tg e\tl i: s\tt V");
result.add("e-\tvan-\tge-\tlis-\ttic", "i:\tv { n\tdZ V\tl I s\tt I k");
result.add("e-\tvan-\tge-\tlist", "I\tv { n\tdZ V\tl I s t");
result.add("e-\tvan-\tge-\tlists", "I\tv { n\tdZ V\tl I s t s");
result.add("e-\tvan-\tge-\tlize", "I\tv { n\tdZ V\tl aI z");
result.add("e-\tvan-\tston", "e\tv V n\ts t V n");
result.add("e-\tvans", "e\tv V n z");
result.add("e-\tvans-\tville", "e\tv V n\tz v I l");
result.add("e-\tvarts", "e\tv @r t s");
result.add("e-\tva's", "eI\tv V z");
result.add("e-\tvatt", "e\tv V t");
result.add("e-\tve-\tleth", "e\tv V\tl e T");
result.add("e-\tve-\tli-\tna", "e\tv e\tl i:\tn V");
result.add("e-\tve-\tline", "e\tv V\tl I n");
result.add("e-\tve-\tlyn", "e\tv V\tl V n");
result.add("e-\tve-\trard", "e\tv @r\t@r d");
result.add("e-\tve-\trea-\tdy", "e\tv @r\tr e\td i:");
result.add("e-\tve-\trest", "e\tv @r\tV s t");
result.add("e-\tve-\trest's", "e\tv @r\tV s t s");
result.add("e-\tve-\trett", "e\tv @r\tV t");
result.add("e-\tve-\trette", "e\tv @r\tV t");
result.add("e-\tve-\tretts", "e\tv @r\tV t s");
result.add("e-\tve-\try", "e\tv @r\ti:");
result.add("e-\tven", "i:\tv V n");
result.add("e-\tven-\tdale", "e\tv V n\td eI l");
result.add("e-\tven-\than-\tded", "i:\tv V n\th { n\td V d");
result.add("e-\tven-\than-\tded-\tly", "i:\tv V n\th { n\td V d\tl i:");
result.add("e-\tven-\tly", "i:\tv V n\tl i:");
result.add("e-\tven-\tness", "i:\tv V n\tn V s");
result.add("e-\tven-\tsen", "e\tv V n\ts V n");
result.add("e-\tven-\ttu-\ta-\tli-\tty", "V\tv e n\ttS u:\t{\tl I\tt i:");
result.add("e-\tven-\ttu-\tal", "V\tv e n\ttS u:\tV l");
result.add("e-\tven-\ttu-\tal-\tly", "I\tv e n\ttS V\tw V\tl i:");
result.add("e-\tvened", "i:\tv V n d");
result.add("e-\tvens", "i:\tv V n z");
result.add("e-\tvent", "I\tv e n t");
result.add("e-\tvent-\tful", "I\tv e n\tt f V l");
result.add("e-\tvents", "I\tv e n t s");
result.add("e-\tvent's", "I\tv e n t s");
result.add("e-\tver", "e\tv @r");
result.add("e-\tver-\tglades", "e\tv @r g\tl eI d z");
result.add("e-\tver-\tgood", "e\tv @r\tg U d");
result.add("e-\tver-\tgreen", "e\tv @r g\tr i: n");
result.add("e-\tver-\tgreens", "e\tv @r g\tr i: n z");
result.add("e-\tver-\thart", "e\tv @r\th Q@ t");
result.add("e-\tver-\tlas-\tting", "e\tv @r\tl { s\tt I N");
result.add("e-\tver-\tlas-\ttings", "e\tv @r\tl { s\tt I N z");
result.add("e-\tver-\tly", "e\tv @r\tl i:");
result.add("e-\tver-\tmore", "e\tv @r\tm O@");
result.add("e-\tver-\tsole", "e\tv @r\ts @U l");
result.add("e-\tver-\tson", "e\tv @r\ts V n");
result.add("e-\tver-\tton", "e\tv @r\tt V n");
result.add("e-\tvered", "e\tv @r d");
result.add("e-\tvers", "e\tv @r z");
result.add("e-\tvert", "I\tv @r t");
result.add("e-\tverts", "e\tv @r t s");
result.add("e-\tvi-\tan", "e\tv i:\tV n");
result.add("e-\tvi-\tden-\tces", "e\tv I\td V n\ts V z");
result.add("e-\tvi-\tden-\tti-\ta-\try", "e\tv I\td e n\tS i:\te@\ti:");
result.add("e-\tvi-\tdence", "e\tv I\td V n s");
result.add("e-\tvi-\tdenced", "e\tv I\td V n s t");
result.add("e-\tvi-\tdent", "e\tv I\td e n t");
result.add("e-\tvi-\tdent-\tly", "e\tv I\td V n\tt l i:");
result.add("e-\tvi-\tta", "e\tv i:\tt V");
result.add("e-\tvic-\tted", "I\tv I k\tt V d");
result.add("e-\tvic-\tting", "I\tv I k\tt I N");
result.add("e-\tvic-\ttion", "I\tv I k\tS V n");
result.add("e-\tvic-\ttions", "I\tv I k\tS V n z");
result.add("e-\tvict", "I\tv I k t");
result.add("e-\tvil", "i:\tv I l");
result.add("e-\tvil-\tdo-\ter", "i:\tv I l\td u:\t@r");
result.add("e-\tvil-\tdo-\ters", "i:\tv I l\td u:\t@r z");
result.add("e-\tvils", "i:\tv I l z");
result.add("e-\tvin", "e\tv I n");
result.add("e-\tvince", "I\tv I n s");
result.add("e-\tvinced", "I\tv I n s t");
result.add("e-\tvis-\tce-\tra-\tted", "V\tv I\ts @r\teI\tt V d");
result.add("e-\tvis-\tce-\trate", "V\tv I\ts @r\teI t");
result.add("e-\tvo-\tca-\ttion", "i:\tv @U\tk eI\tS V n");
result.add("e-\tvo-\tca-\ttive", "I\tv Q\tk V\tt I v");
result.add("e-\tvo-\tking", "I\tv @U\tk I N");
result.add("e-\tvo-\tlu-\ttio-\tna-\try", "e\tv V\tl u:\tS V\tn e@\ti:");
result.add("e-\tvo-\tlu-\ttion", "e\tv V\tl u:\tS V n");
result.add("e-\tvoke", "I\tv @U k");
result.add("e-\tvoked", "I\tv @U k t");
result.add("e-\tvokes", "I\tv @U k s");
result.add("e-\tvol-\tving", "I\tv Q l\tv I N");
result.add("e-\tvolve", "I\tv Q l v");
result.add("e-\tvolved", "I\tv Q l v d");
result.add("e-\tvolves", "I\tv Q l v z");
result.add("e-\tvonne", "e\tv Q n");
result.add("e-\twald", "j u:\tV l d");
result.add("e-\twan", "j u:\tV n");
result.add("e-\twart", "j u:\t@r t");
result.add("e-\twell", "j u:\tV l");
result.add("e-\twen", "j u:\tV n");
result.add("e-\twer", "j u:\t@r");
result.add("e-\twers", "j u:\t@r z");
result.add("e-\twing", "j u:\tI N");
result.add("e-\twing's", "j u:\tI N z");
result.add("e-\txa-\tbyte", "e k\ts V\tb aI t");
result.add("e-\txa-\tcer-\tba-\tted", "I g\tz {\ts @r\tb eI\tt V d");
result.add("e-\txa-\tcer-\tba-\tting", "I g\tz {\ts @r\tb eI\tt I N");
result.add("e-\txa-\tcer-\tba-\ttion", "I g\tz {\ts @r\tb eI\tS V n");
result.add("e-\txa-\tcer-\tba-\ttions", "I g\tz {\ts @r\tb eI\tS V n z");
result.add("e-\txa-\tcer-\tbate", "I g\tz {\ts @r\tb eI t");
result.add("e-\txa-\tcer-\tbates", "I g\tz {\ts @r\tb eI t s");
result.add("e-\txa-\tmi-\tna-\ttion", "I g\tz {\tm I\tn eI\tS V n");
result.add("e-\txa-\tmi-\tna-\ttions", "I g\tz {\tm I\tn eI\tS V n z");
result.add("e-\txa-\tmi-\tner", "I g\tz {\tm I\tn @r");
result.add("e-\txa-\tmi-\tners", "I g\tz {\tm I\tn @r z");
result.add("e-\txa-\tmi-\tner's", "e g\tz {\tm I\tn @r z");
result.add("e-\txa-\tmi-\tning", "I g\tz {\tm I\tn I N");
result.add("e-\txa-\tmine", "I g\tz {\tm I n");
result.add("e-\txa-\tmined", "I g\tz {\tm I n d");
result.add("e-\txa-\tmines", "I g\tz {\tm I n z");
result.add("e-\txac-\tted", "I g\tz { k\tt V d");
result.add("e-\txac-\tti-\ttude", "I g\tz { k\tt I\tt u: d");
result.add("e-\txac-\tting", "I g\tz { k\tt I N");
result.add("e-\txac-\ttion", "I g\tz { k\tS V n");
result.add("e-\txac-\ttions", "I g\tz { k\tS V n z");
result.add("e-\txact", "I g\tz { k t");
result.add("e-\txact-\tly", "I g\tz { k\tt l i:");
result.add("e-\txacts", "I g\tz { k t s");
result.add("e-\txag-\tge-\tra-\tted", "I g\tz {\tdZ @r\teI\tt V d");
result.add("e-\txag-\tge-\tra-\tting", "I g\tz {\tdZ @r\teI\tt I N");
result.add("e-\txag-\tge-\tra-\ttion", "I g\tz {\tdZ @r\teI\tS V n");
result.add("e-\txag-\tge-\tra-\ttions", "I g\tz {\tdZ @r\teI\tS V n z");
result.add("e-\txag-\tge-\trate", "I g\tz {\tdZ @r\teI t");
result.add("e-\txag-\tge-\trates", "I g\tz {\tdZ @r\teI t s");
result.add("e-\txal-\tted", "I g\tz O: l\tt V d");
result.add("e-\txal-\tting", "I g\tz O: l\tt I N");
result.add("e-\txalt", "I g\tz O: l t");
result.add("e-\txalts", "I g\tz O: l t s");
result.add("e-\txam", "I g\tz { m");
result.add("e-\txam-\tple", "I g\tz { m\tp V l");
result.add("e-\txam-\tples", "I g\tz { m\tp V l z");
result.add("e-\txams", "I g\tz { m z");
result.add("e-\txas-\tpe-\tra-\tted", "I g\tz { s\tp @r\teI\tt V d");
result.add("e-\txas-\tpe-\tra-\tting", "I g\tz { s\tp @r\teI\tt I N");
result.add("e-\txas-\tpe-\tra-\ttion", "e k\ts { s\tp @r\teI\tS V n");
result.add("e-\txas-\tpe-\trate", "I g\tz { s\tp @r\teI t");
result.add("e-\txe-\tcu-\ttive", "I g\tz e k\tj V\tt I v");
result.add("e-\txe-\tter", "e k\ts V\tt @r");
result.add("e-\txec", "e g\tz e k");
result.add("e-\txemp-\tla-\try", "I g\tz e m\tp l @r\ti:");
result.add("e-\txemp-\tlar", "I g\tz e m\tp l Q@");
result.add("e-\txemp-\tlars", "I g\tz e m\tp l Q@ z");
result.add("e-\txemp-\tli-\tfied", "I g\tz e m\tp l I\tf aI d");
result.add("e-\txemp-\tli-\tfies", "I g\tz e m\tp l I\tf aI z");
result.add("e-\txemp-\tli-\tfy", "I g\tz e m\tp l I\tf aI");
result.add("e-\txemp-\tli-\tfy-\ting", "I g\tz e m\tp l I\tf aI\tI N");
result.add("e-\txemp-\tlum", "I g\tz e m\tp l V m");
result.add("e-\txemp-\tted", "I g\tz e m\tp t V d");
result.add("e-\txemp-\tting", "I g\tz e m\tp t I N");
result.add("e-\txemp-\ttion", "I g\tz e m\tp S V n");
result.add("e-\txemp-\ttions", "I g\tz e m\tp S V n z");
result.add("e-\txempt", "I g\tz e m p t");
result.add("e-\txempts", "I g\tz e m p t s");
result.add("e-\txer-\tci-\tsa-\tble", "e k\ts @r\ts aI\tz V\tb V l");
result.add("e-\txer-\tci-\tser", "e k\ts @r\ts aI\tz @r");
result.add("e-\txer-\tci-\tsers", "e k\ts @r\ts aI\tz @r z");
result.add("e-\txer-\tci-\tses", "e k\ts @r\ts aI\tz V z");
result.add("e-\txer-\tci-\tsing", "e k\ts @r\ts aI\tz I N");
result.add("e-\txer-\tcise", "e k\ts @r\ts aI z");
result.add("e-\txer-\tcised", "e k\ts @r\ts aI z d");
result.add("e-\txer-\tted", "I g\tz @r\tt V d");
result.add("e-\txer-\tting", "I g\tz @r\tt I N");
result.add("e-\txer-\ttion", "I g\tz @r\tS V n");
result.add("e-\txer-\ttions", "I g\tz @r\tS V n z");
result.add("e-\txert", "I g\tz @r t");
result.add("e-\txerts", "I g\tz @r t s");
result.add("e-\txes", "e k\ts V z");
result.add("e-\txhaled", "e k\ts h eI l d");
result.add("e-\txhaus-\tted", "I g\tz O: s\tt V d");
result.add("e-\txhaus-\tting", "I g\tz O: s\tt I N");
result.add("e-\txhaus-\ttion", "I g\tz O: s\ttS V n");
result.add("e-\txhaus-\ttive", "I g\tz O: s\tt I v");
result.add("e-\txhaus-\ttive-\tly", "I g\tz Q s\tt I v\tl i:");
result.add("e-\txhaust", "I g\tz O: s t");
result.add("e-\txhausts", "I g\tz O: s t s");
result.add("e-\txhi-\tbi-\tted", "I g\tz I\tb I\tt I d");
result.add("e-\txhi-\tbi-\tting", "I g\tz I\tb I\tt I N");
result.add("e-\txhi-\tbi-\ttio-\tnist", "e k\ts I\tb I\tS V\tn I s t");
result.add("e-\txhi-\tbi-\ttio-\tnists", "e k\ts I\tb I\tS V\tn I s t s");
result.add("e-\txhi-\tbi-\ttion", "e k\ts V\tb I\tS V n");
result.add("e-\txhi-\tbi-\ttions", "e k\ts I\tb I\tS V n z");
result.add("e-\txhi-\tbi-\ttor", "I g\tz I\tb I\tt @r");
result.add("e-\txhi-\tbi-\ttors", "I g\tz I\tb I\tt @r z");
result.add("e-\txhi-\tbit", "I g\tz I\tb I t");
result.add("e-\txhi-\tbits", "I g\tz I\tb I t s");
result.add("e-\txhi-\tla-\tra-\tted", "I g\tz I\tl @r\teI\tt V d");
result.add("e-\txhi-\tla-\tra-\tting", "I g\tz I\tl @r\teI\tt I N");
result.add("e-\txhi-\tla-\tra-\ttion", "I g\tz I\tl @r\teI\tS V n");
result.add("e-\txhi-\tla-\trate", "I g\tz I\tl @r\teI t");
result.add("e-\txhor-\tta-\ttion", "e g\tz O@\tt eI\tS V n");
result.add("e-\txhor-\tta-\ttions", "e g\tz O@\tt eI\tS V n z");
result.add("e-\txhor-\tted", "I g\tz O@\tt V d");
result.add("e-\txhor-\tting", "I g\tz O@\tt I N");
result.add("e-\txhort", "I g\tz O@ t");
result.add("e-\txhorts", "I g\tz O@ t s");
result.add("e-\txhu-\tma-\ttion", "e k\ts h j u:\tm eI\tS V n");
result.add("e-\txhume", "e k\ts h j u: m");
result.add("e-\txhumed", "e k\ts h j u: m d");
result.add("e-\txhumes", "e k\ts h j u: m z");
result.add("e-\txi-\tgen-\tcies", "e k\ts I\tdZ V n\ts i: z");
result.add("e-\txi-\tgen-\tcy", "e k\ts I\tdZ V n\ts i:");
result.add("e-\txi-\tgent", "e k\ts I\tdZ V n t");
result.add("e-\txi-\tgents", "e k\ts I\tdZ V n t s");
result.add("e-\txi-\tted", "e g\tz I\tt I d");
result.add("e-\txi-\tting", "e g\tz I\tt I N");
result.add("e-\txile", "e g\tz aI l");
result.add("e-\txiled", "e g\tz aI l d");
result.add("e-\txiles", "e g\tz aI l z");
result.add("e-\txis-\tted", "I g\tz I s\tt V d");
result.add("e-\txis-\tten-\ttial", "e k\ts I s\tt e n\ttS V l");
result.add("e-\txis-\ttence", "e g\tz I s\tt V n s");
result.add("e-\txis-\ttent", "e g\tz I s\tt V n t");
result.add("e-\txis-\tting", "I g\tz I s\tt I N");
result.add("e-\txist", "I g\tz I s t");
result.add("e-\txists", "I g\tz I s t s");
result.add("e-\txit", "e g\tz I t");
result.add("e-\txits", "e g\tz I t s");
result.add("e-\txo-\tcet", "e k\ts @U\ts e t");
result.add("e-\txo-\tdus", "e k\ts V\td V s");
result.add("e-\txo-\tge-\tnous", "e k\ts @U\tdZ V\tn V s");
result.add("e-\txo-\tne-\tra-\tted", "I g\tz Q\tn @r\teI\tt V d");
result.add("e-\txo-\tne-\tra-\tting", "I g\tz Q\tn @r\teI\tt I N");
result.add("e-\txo-\tne-\tra-\ttion", "I g\tz Q\tn @r\teI\tS V n");
result.add("e-\txo-\tne-\trate", "I g\tz Q\tn @r\teI t");
result.add("e-\txo-\tne-\trates", "I g\tz Q\tn @r\teI t s");
result.add("e-\txo-\tther-\tmic", "e k\ts @U\tT @r\tm I k");
result.add("e-\txo-\ttic", "I g\tz Q\tt I k");
result.add("e-\txo-\ttics", "e g\tz Q\tt I k s");
result.add("e-\txon", "e k\ts O: n");
result.add("e-\txor-\tbi-\ttant", "I g\tz O@\tb I\tt V n t");
result.add("e-\txor-\tcist", "e k\ts @r\ts I s t");
result.add("e-\txos-\tke-\tle-\tton", "e k\ts @U s\tk e\tl V\tt V n");
result.add("e-\txu-\tbe-\trance", "I g\tz u:\tb @r\tV n s");
result.add("e-\txu-\tbe-\trant", "I g\tz u:\tb @r\tV n t");
result.add("e-\txu-\tded", "I g\tz u:\td V d");
result.add("e-\txude", "I g\tz u: d");
result.add("e-\txudes", "I g\tz u: d z");
result.add("e-\txul-\ttant", "I g\tz V l\tt V n t");
result.add("e-\txul-\ttant-\tly", "I g\tz V l\tt V n\tt l i:");
result.add("e-\txul-\tted", "I g\tz V l\tt V d");
result.add("e-\txult", "I g\tz V l t");
result.add("e-\txults", "I g\tz V l t s");
result.add("e-\tze-\tkiel", "e\tz I\tk i: l");
result.add("e.", "i:");
result.add("ea-\tdie", "e\td i:");
result.add("ea-\tgan", "i:\tg V n");
result.add("ea-\tgar", "i:\tg @r");
result.add("ea-\tger", "i:\tg @r");
result.add("ea-\tger-\tly", "i:\tg @r\tl i:");
result.add("ea-\tger-\tness", "i:\tg @r\tn V s");
result.add("ea-\tgle", "i:\tg V l");
result.add("ea-\tgle-\tton", "i:\tg V l\tt V n");
result.add("ea-\tgles", "i:\tg V l z");
result.add("ea-\tgle's", "i:\tg V l z");
result.add("ea-\tkins", "i:\tk I n z");
result.add("ea-\tling", "i:\tl I N");
result.add("ea-\tmon", "i:\tm V n");
result.add("ea-\tsel", "i:\tz V l");
result.add("ea-\tses", "i:\tz V z");
result.add("ea-\tsi-\ter", "i:\tz i:\t@r");
result.add("ea-\tsi-\test", "i:\tz i:\tV s t");
result.add("ea-\tsi-\tly", "i:\tz I\tl i:");
result.add("ea-\tsing", "i:\tz I N");
result.add("ea-\tsy", "i:\tz i:");
result.add("ea-\tsy-\tgo-\ting", "i:\tz i:\tg @U\tI N");
result.add("ea-\tta-\tble", "i:\tt V\tb V l");
result.add("ea-\tte-\tries", "i:\tt @r\ti: z");
result.add("ea-\tte-\try", "i:\tt @r\ti:");
result.add("ea-\tten", "i:\tt V n");
result.add("ea-\tter", "i:\tt @r");
result.add("ea-\tters", "i:\tt @r z");
result.add("ea-\tting", "i:\tt I N");
result.add("ea-\tton", "i:\tt V n");
result.add("ea-\tton's", "i:\tt V n z");
result.add("each", "i: tS");
result.add("eade", "i: d");
result.add("eads", "i: d z");
result.add("eales", "i: l z");
result.add("eanes", "i: n z");
result.add("ear", "I@");
result.add("ear-\thart", "I@\th Q@ t");
result.add("ear-\tlene", "@r\tl i: n");
result.add("ear-\tless", "I@\tl V s");
result.add("ear-\tley", "@r\tl i:");
result.add("ear-\tli-\ter", "@r\tl i:\t@r");
result.add("ear-\tli-\test", "@r\tl i:\tV s t");
result.add("ear-\tlie", "@r\tl i:");
result.add("ear-\tline", "@r\tl aI n");
result.add("ear-\tly", "@r\tl i:");
result.add("ear-\tmar-\tking", "I@\tm Q@\tk I N");
result.add("ear-\tmark", "I@\tm Q@ k");
result.add("ear-\tmarked", "I@\tm Q@ k t");
result.add("ear-\tmarks", "I@\tm Q@ k s");
result.add("ear-\tmuff", "I@\tm V f");
result.add("ear-\tmuffs", "I@\tm V f s");
result.add("ear-\tner", "@r\tn @r");
result.add("ear-\tners", "@r\tn @r z");
result.add("ear-\tnest", "@r\tn V s t");
result.add("ear-\tnest-\tly", "@r\tn V s\tt l i:");
result.add("ear-\tnest-\tness", "@r\tn V s\tt n V s");
result.add("ear-\tning", "@r\tn I N");
result.add("ear-\tnings", "@r\tn I N z");
result.add("ear-\tphone", "I@\tf @U n");
result.add("ear-\tphones", "I@\tf @U n z");
result.add("ear-\tpie-\tces", "I@\tp i:\ts V z");
result.add("ear-\tpiece", "I@\tp i: s");
result.add("ear-\tring", "I@\tI N");
result.add("ear-\trings", "I@\tI N z");
result.add("ear-\tshot", "I@\tS Q t");
result.add("ear-\ttha", "@r\tT V");
result.add("ear-\tthen", "@r\tT V n");
result.add("ear-\tthen-\tware", "@r\tT V n\tw e@");
result.add("ear-\tthy", "@r\tT i:");
result.add("ear-\tvin", "@r\tv I n");
result.add("ear-\twax", "I@\tw { k s");
result.add("eard-\tley", "I@ d\tl i:");
result.add("eared", "I@ d");
result.add("earl", "@r l");
result.add("earl-\tdom", "@r l\td V m");
result.add("earle", "@r l");
result.add("earls", "@r l z");
result.add("earn", "@r n");
result.add("earn-\thardt", "@r n\th Q@ t");
result.add("earned", "@r n d");
result.add("earns", "@r n z");
result.add("earp", "@r p");
result.add("earp-\tlug", "I@ p\tl V g");
result.add("earp-\tlugs", "I@ p\tl V g z");
result.add("ears", "I@ z");
result.add("earth", "@r T");
result.add("earth-\tbound", "@r T\tb aU n d");
result.add("earth-\tling", "@r T\tl I N");
result.add("earth-\tlings", "@r T\tl I N z");
result.add("earth-\tly", "@r T\tl i:");
result.add("earth-\tmo-\tving", "@r T\tm u:\tv I N");
result.add("earth-\tquake", "@r T\tk w eI k");
result.add("earth-\tquakes", "@r T\tk w eI k s");
result.add("earth-\tquake's", "@r T\tk w eI k s");
result.add("earth-\tsha-\tking", "@r T\tS eI\tk I N");
result.add("earth-\tshine", "@r T\tS aI n");
result.add("earth-\tstar", "@r T\ts t Q@");
result.add("earth-\twork", "@r T\tw @r k");
result.add("earth-\tworm", "@r T\tw @r m");
result.add("earth-\tworms", "@r T\tw @r m z");
result.add("earths", "@r T s");
result.add("earth's", "@r T s");
result.add("eas-\tley", "i: z\tl i:");
result.add("eas-\tten-\tder", "i: z\tt e n\td @r");
result.add("eas-\tten-\tders", "i: z\tt e n\td @r z");
result.add("eas-\tter", "i: s\tt @r");
result.add("eas-\tter-\tling", "i: s\tt @r\tl I N");
result.add("eas-\tter-\tly", "i: s\tt @r\tl i:");
result.add("eas-\tter-\tner", "i: s\tt @r\tn @r");
result.add("eas-\tter-\tners", "i: s\tt @r\tn @r z");
result.add("eas-\ttern", "i: s\tt @r n");
result.add("eas-\tton", "i: s\tt V n");
result.add("ease", "i: z");
result.add("ease-\tment", "i: z\tm V n t");
result.add("eased", "i: z d");
result.add("east", "i: s t");
result.add("east-\tbound", "i: s\tt b aU n d");
result.add("east-\tland", "i: s\tt l V n d");
result.add("east-\tland's", "i: s\tt l V n d z");
result.add("east-\tman", "i: s\tt m V n");
result.add("east-\tward", "i: s\tt w @r d");
result.add("east-\twick", "i: s\tt w I k");
result.add("east-\twood", "i: s\tt w U d");
result.add("east-\twood's", "i: s\tt w U d z");
result.add("east's", "i: s t s");
result.add("eat", "i: t");
result.add("eats", "i: t s");
result.add("eau", "@U");
result.add("eaux", "@U z");
result.add("eave", "i: v");
result.add("eaves", "i: v z");
result.add("eaves-\tdrop", "i: v\tz d r Q p");
result.add("eaves-\tdrop-\tping", "i: v\tz d r Q\tp I N");
result.add("eb", "e b");
result.add("eb-\tba", "e\tb V");
result.add("eb-\tbing", "e\tb I N");
result.add("eb-\tby", "e\tb i:");
result.add("eb-\tner", "e b\tn @r");
result.add("eb-\tro", "i: b\tr @U");
result.add("ebb", "e b");
result.add("ebbed", "e b d");
result.add("ebbs", "e b z");
result.add("ec-\tcent-\tri-\tci-\tties", "e k\ts e n\tt r I\ts I\tt i: z");
result.add("ec-\tcent-\tri-\tci-\tty", "e k\ts V n\tt r I\ts I\tt i:");
result.add("ec-\tcent-\tric", "I k\ts e n\tt r I k");
result.add("ec-\tcent-\trics", "I k\ts e n\tt r I k s");
result.add("ec-\tcle-\tsi-\tas-\tti-\tcal", "I k\tl i:\tz i:\t{ s\tt I\tk V l");
result.add("ec-\tcle-\tsi-\tas-\ttic", "I k\tl i:\tz i:\t{ s\tt I k");
result.add("ec-\tcles", "e\tk V l z");
result.add("ec-\tkardt", "e\tk @r t");
result.add("ec-\tkardt's", "e\tk @r t s");
result.add("ec-\tkart", "e\tk Q@ t");
result.add("ec-\tkel", "e\tk V l");
result.add("ec-\tker-\tman", "e\tk @r\tm V n");
result.add("ec-\tkert", "e\tk @r t");
result.add("ec-\tlec-\ttic", "I k\tl e k\tt I k");
result.add("ec-\tlip-\tses", "I k\tl I p\ts V z");
result.add("ec-\tlip-\tsing", "I k\tl I p\ts I N");
result.add("ec-\tlip-\ttic", "I k\tl I p\tt I k");
result.add("ec-\tlipse", "I k\tl I p s");
result.add("ec-\tlipsed", "I k\tl I p s t");
result.add("ec-\tru", "e k\tr u:");
result.add("ec-\tze-\tma", "e k\ts V\tm V");
result.add("eck", "e k");
result.add("eck-\thardt", "e k\th Q@ t");
result.add("eck-\thart", "e k\th Q@ t");
result.add("eck-\tley", "e k\tl i:");
result.add("eck-\tman", "e k\tm V n");
result.add("eck-\tmann", "e k\tm V n");
result.add("ecs-\tta-\tsy", "e k\ts t V\ts i:");
result.add("ecs-\tta-\ttic", "e k\ts t {\tt I k");
result.add("ecs-\tta-\ttical-\tly", "e k\ts t {\tt I k\tl i:");
result.add("ed", "e d");
result.add("ed-\tberg", "e d\tb @r g");
result.add("ed-\tbert", "e d\tb @r t");
result.add("ed-\tdie", "e\td i:");
result.add("ed-\tdies", "e\td i: z");
result.add("ed-\tdie's", "e\td i: z");
result.add("ed-\tding-\tton", "e\td I N\tt V n");
result.add("ed-\tdy", "e\td i:");
result.add("ed-\tgar", "e d\tg @r");
result.add("ed-\tgar's", "e d\tg @r z");
result.add("ed-\tgell", "e\tdZ V l");
result.add("ed-\tger", "e\tdZ @r");
result.add("ed-\tger-\tton", "e\tdZ @r\tt V n");
result.add("ed-\tges", "e\tdZ V z");
result.add("ed-\tgi-\tness", "e\tdZ i:\tn V s");
result.add("ed-\tging", "e\tdZ I N");
result.add("ed-\tgy", "e\tdZ i:");
result.add("ed-\tley", "e d\tl i:");
result.add("ed-\tlin", "e d\tl I n");
result.add("ed-\tlyn", "e d\tl I n");
result.add("ed-\tman", "e d\tm V n");
result.add("ed-\tmon-\tda", "e d\tm Q n\td V");
result.add("ed-\tmon-\tson", "e d\tm V n\ts V n");
result.add("ed-\tmon-\tton", "e d\tm V n\tt V n");
result.add("ed-\tmond", "e d\tm V n d");
result.add("ed-\tmond-\tson", "e d\tm V n\td s V n");
result.add("ed-\tmonds", "e d\tm V n d z");
result.add("ed-\tmun-\tda", "e d\tm V n\td V");
result.add("ed-\tmund", "e d\tm V n d");
result.add("ed-\tmunds", "e d\tm V n d z");
result.add("ed-\tna", "e d\tn V");
result.add("ed-\tra", "e d\tr V");
result.add("ed-\tre-\ta", "e d\tr i:\tV");
result.add("ed-\tric", "e d\tr I k");
result.add("ed-\tris", "V d\tr i: s");
result.add("ed-\tsel", "e d\ts V l");
result.add("ed-\tson", "e d\ts V n");
result.add("ed-\tuar-\tdo", "e d\tw Q@\td @U");
result.add("ed-\tuard", "e d\tw @r d");
result.add("ed-\twar-\tdi-\tan", "e d\tw O@\td i:\tV n");
result.add("ed-\twar-\tdine", "V d\tw O@\td aI n");
result.add("ed-\tward", "e d\tw @r d");
result.add("ed-\twards", "e d\tw @r d z");
result.add("ed-\tward's", "e d\tw @r d z");
result.add("ed-\twi-\tna", "e d\tw i:\tn V");
result.add("ed-\twin", "e d\tw I n");
result.add("ede", "i: d");
result.add("edes", "i: d z");
result.add("edge", "e dZ");
result.add("edge-\tway", "e dZ\tw eI");
result.add("edge-\tways", "e dZ\tw eI z");
result.add("edge-\twise", "e dZ\tw aI z");
result.add("edge-\twood", "e dZ\tw U d");
result.add("edge-\tworth", "e dZ\tw @r T");
result.add("edged", "e dZ d");
result.add("ed's", "e d z");
result.add("ee", "i:");
result.add("ee-\tri-\tly", "I@\tI\tl i:");
result.add("ee-\trie", "I@\ti:");
result.add("eeg", "i: g");
result.add("eel", "i: l");
result.add("eel-\tgrass", "i: l\tg r { s");
result.add("eel-\tlike", "i: l\tl aI k");
result.add("eel-\tpout", "i: l\tp aU t");
result.add("eel-\tpouts", "i: l\tp aU t s");
result.add("eels", "i: l z");
result.add("ef-\tfa-\tcing", "V\tf eI\ts I N");
result.add("ef-\tface", "V\tf eI s");
result.add("ef-\tfe-\tmi-\tnate", "i:\tf e\tm I\tn V t");
result.add("ef-\tfe-\trent", "e\tf @r\tV n t");
result.add("ef-\tfec-\tted", "V\tf e k\tt V d");
result.add("ef-\tfec-\tting", "V\tf e k\tt I N");
result.add("ef-\tfec-\ttive", "V\tf e k\tt I v");
result.add("ef-\tfec-\ttive-\tly", "V\tf e k\tt I v\tl i:");
result.add("ef-\tfec-\ttive-\tness", "V\tf e k\tt I v\tn V s");
result.add("ef-\tfec-\ttu-\tate", "V\tf e k\ttS u:\teI t");
result.add("ef-\tfect", "V\tf e k t");
result.add("ef-\tfects", "V\tf e k t s");
result.add("ef-\tfer-\tve-\tscent", "e\tf @r\tv e\ts V n t");
result.add("ef-\tfete", "e\tf i: t");
result.add("ef-\tfi-\tca-\tcious", "e\tf V\tk eI\tS V s");
result.add("ef-\tfi-\tca-\tcy", "e\tf I\tk {\ts i:");
result.add("ef-\tfi-\tcien-\tcies", "V\tf I\tS V n\ts i: z");
result.add("ef-\tfi-\tcien-\tcy", "V\tf I\tS V n\ts i:");
result.add("ef-\tfi-\tcient", "V\tf I\tS V n t");
result.add("ef-\tfi-\tcient-\tly", "V\tf I\tS V n\tt l i:");
result.add("ef-\tfi-\tgy", "e\tf I\tdZ i:");
result.add("ef-\tfie", "e\tf i:");
result.add("ef-\tfin-\tgham", "e\tf I\tN V m");
result.add("ef-\tfort", "e\tf @r t");
result.add("ef-\tfort-\tless", "e\tf @r t\tl V s");
result.add("ef-\tfort-\tless-\tly", "e\tf @r t\tl V s\tl i:");
result.add("ef-\tforts", "e\tf @r t s");
result.add("ef-\tfu-\tsive", "e f\tj u:\ts I v");
result.add("ef-\tfu-\tsive-\tly", "V f\tj u:\ts I v\tl i:");
result.add("ef-\tfy", "e\tf i:");
result.add("ef-\tron", "e f\tr V n");
result.add("ef-\tta", "e f\tt V");
result.add("eff-\tlu-\tent", "e f\tl u:\tV n t");
result.add("eff-\tlux", "e f\tl V k s");
result.add("eff-\tron-\tte-\try", "V f\tr V n\tt @r\ti:");
result.add("eg-\tbert", "e g\tb @r t");
result.add("eg-\tger", "e\tg @r");
result.add("eg-\tgers", "e\tg @r z");
result.add("eg-\tgles-\tton", "e\tg V l\ts t V n");
result.add("eg-\tlan-\ttine", "e g\tl V n\tt aI n");
result.add("eg-\tlin", "e g\tl I n");
result.add("eg-\tress", "I g\tr e s");
result.add("ege", "i: dZ");
result.add("egg", "e g");
result.add("egg-\thead", "e g\th e d");
result.add("egg-\thead's", "e g\th e d z");
result.add("egg-\tplant", "e g\tp l { n t");
result.add("egg-\tplants", "e g\tp l { n t s");
result.add("egged", "e g d");
result.add("eggs", "e g z");
result.add("eggs-\thell", "e g\tS e l");
result.add("eggs-\thells", "e g\tS e l z");
result.add("eh", "e");
result.add("eh-\tman", "e\tm V n");
result.add("eh-\tren-\tberg", "e@\tV n\tb @r g");
result.add("eh-\tud", "e\th V d");
result.add("ehlke", "e l k");
result.add("ehr-\thardt", "e@\th Q@ t");
result.add("ehr-\tlich", "@r\tl I k");
result.add("ehr-\tman", "e@\tm V n");
result.add("ehr-\tsam", "e@\ts V m");
result.add("ei-\tleen", "aI\tl i: n");
result.add("ei-\tmer", "aI\tm @r");
result.add("ei-\tnar", "aI\tn @r");
result.add("ei-\tre-\tna", "@r\teI\tn V");
result.add("ei-\tsa", "eI\ts V");
result.add("ei-\tse-\tnach", "aI\tz V\tn Q k");
result.add("ei-\tsel", "aI\ts V l");
result.add("ei-\tsele", "aI\ts V l");
result.add("ei-\tsen", "aI\ts V n");
result.add("ei-\tsen-\tberg", "aI\tz V n\tb @r g");
result.add("ei-\tsen-\thart", "aI\tz V n\th Q@ t");
result.add("ei-\tsen-\tho-\twer", "aI\tz V n\th aU\t@r");
result.add("ei-\tsen-\tho-\twer's", "aI\tz V n\th aU\t@r z");
result.add("ei-\tsens-\ttadt", "aI\tz V n\ts t { t");
result.add("ei-\tsens-\ttein", "aI\tz V n\ts t aI n");
result.add("ei-\tsin-\tger", "aI\ts I n\tdZ @r");
result.add("ei-\tther", "i:\tD @r");
result.add("eich-\tman", "aI k\tm V n");
result.add("eich-\tmann", "aI k\tm V n");
result.add("eich-\tstadt", "aI k\ts t { t");
result.add("eid-\tson", "i: d\ts V n");
result.add("eide", "aI d");
result.add("eif-\tfel", "aI\tf V l");
result.add("eigh-\tteen", "eI\tt i: n");
result.add("eigh-\tteens", "eI\tt i: n z");
result.add("eigh-\tteen's", "eI\tt i: n z");
result.add("eigh-\tteenth", "eI\tt i: n T");
result.add("eigh-\tti-\teth", "eI\tt i:\tV T");
result.add("eigh-\tties", "eI\tt i: z");
result.add("eigh-\tty", "eI\tt i:");
result.add("eigh-\tty's", "eI\tt i: z");
result.add("eight", "eI t");
result.add("eight-\tfold", "eI t\tf @U l d");
result.add("eighth", "eI t T");
result.add("eighths", "eI t T s");
result.add("eights", "eI t s");
result.add("eight's", "eI t s");
result.add("ein", "aI n");
result.add("ein-\thorn", "aI n\th O@ n");
result.add("ein-\tstein", "aI n\ts t aI n");
result.add("ein-\tstein's", "aI n\ts t aI n z");
result.add("eind-\tho-\tven", "aI n\td h @U\tv V n");
result.add("eir", "aI r");
result.add("eis", "aI z");
result.add("eis-\tler", "aI s\tl @r");
result.add("eis-\tner", "aI s\tn @r");
result.add("eis-\tner's", "aI s\tn @r z");
result.add("eit-\tzen", "aI t\tz V n");
result.add("ek", "e k");
result.add("ek-\tberg", "e k\tb @r g");
result.add("eke", "i: k");
result.add("eked", "i: k t");
result.add("eks-\ttrom", "e k\ts t r V m");
result.add("el", "e l");
result.add("el-\tber-\tta", "e l\tb e@\tt V");
result.add("el-\tber-\ttine", "e l\tb @r\tt i: n");
result.add("el-\tbert", "e l\tb @r t");
result.add("el-\tbow", "e l\tb @U");
result.add("el-\tbow-\ting", "e l\tb @U\tI N");
result.add("el-\tbow-\troom", "e l\tb @U\tr u: m");
result.add("el-\tbowed", "e l\tb @U d");
result.add("el-\tbows", "e l\tb @U z");
result.add("el-\tbrus", "e l\tb r V s");
result.add("el-\tco", "e l\tk @U");
result.add("el-\tden", "e l\td V n");
result.add("el-\tder", "e l\td @r");
result.add("el-\tder-\tly", "e l\td @r\tl i:");
result.add("el-\tders", "e l\td @r z");
result.add("el-\tdest", "e l\td V s t");
result.add("el-\tdin", "e l\td I n");
result.add("el-\tdo-\tra", "e l\td O@\tV");
result.add("el-\tdo-\tra-\tdo", "e l\td @r\tQ\td @U");
result.add("el-\tdo-\tra-\tdo's", "e l\td @r\tQ\td @U z");
result.add("el-\tdon", "e l\td Q n");
result.add("el-\tfers", "e l\tf @r z");
result.add("el-\tfie", "e l\tf i:");
result.add("el-\tfin", "e l\tf I n");
result.add("el-\tfre-\tda", "e l\tf r e\td V");
result.add("el-\tfri-\tda", "e l\tf r i:\td V");
result.add("el-\tfrie-\tda", "e l\tf r i:\td V");
result.add("el-\tga", "e l\tg Q");
result.add("el-\tgar", "e l\tg @r");
result.add("el-\tgar's", "e l\tg @r z");
result.add("el-\tger", "e l\tg @r");
result.add("el-\tgin", "e l\tdZ I n");
result.add("el-\tgre-\tco", "e l\tg r e\tk @U");
result.add("el-\tkin", "e l\tk I n");
result.add("el-\tkins", "e l\tk I n z");
result.add("el-\tko", "e l\tk @U");
result.add("el-\tla", "e\tl V");
result.add("el-\tla-\tmay", "e\tl V\tm eI");
result.add("el-\tlan", "e\tl V n");
result.add("el-\tlan's", "e\tl V n z");
result.add("el-\tlard", "e\tl @r d");
result.add("el-\tla's", "e\tl V z");
result.add("el-\tle-\trey", "e\tl @r\ti:");
result.add("el-\tle-\try", "e\tl @r\ti:");
result.add("el-\tlen", "e\tl V n");
result.add("el-\tlen-\tburg", "e\tl V n\tb @r g");
result.add("el-\tlen-\twood", "e\tl V n\tw U d");
result.add("el-\tlene", "e\tl i: n");
result.add("el-\tlen's", "e\tl V n z");
result.add("el-\tlerbe", "e\tl @r b");
result.add("el-\tlett", "e\tl e t");
result.add("el-\tlette", "e\tl e t");
result.add("el-\tli-\tcott", "e\tl I\tk Q t");
result.add("el-\tli-\tjay", "i:\tl aI\tdZ eI");
result.add("el-\tli-\tot", "e\tl i:\tV t");
result.add("el-\tli-\tott", "e\tl i:\tV t");
result.add("el-\tli-\tott's", "e\tl i:\tV t s");
result.add("el-\tli-\tson", "e\tl I\ts V n");
result.add("el-\tlice", "e\tl I s");
result.add("el-\tlie", "e\tl i:");
result.add("el-\tlin-\tger", "e\tl I\tN @r");
result.add("el-\tlin-\twood", "e\tl I n\tw U d");
result.add("el-\tling", "e\tl I N");
result.add("el-\tling-\tton", "e\tl I N\tt V n");
result.add("el-\tling-\tton's", "e\tl I N\tt V n z");
result.add("el-\tlip-\tsoid", "V\tl I p\ts OI d");
result.add("el-\tlip-\tsoids", "V\tl I p\ts OI d z");
result.add("el-\tlip-\tti-\tcal", "V\tl I p\tt I\tk V l");
result.add("el-\tlipse", "V\tl I p s");
result.add("el-\tlis", "e\tl I s");
result.add("el-\tlis-\tton", "e\tl I s\tt Q n");
result.add("el-\tly", "e\tl i:");
result.add("el-\tlyn", "e\tl I n");
result.add("el-\tma", "e l\tm V");
result.add("el-\tman", "e l\tm V n");
result.add("el-\tmen-\tdorf", "e l\tm V n\td O@ f");
result.add("el-\tmer", "e l\tm @r");
result.add("el-\tmi-\tra", "e l\tm aI\tr V");
result.add("el-\tmo", "e l\tm @U");
result.add("el-\tmore", "e l\tm O@");
result.add("el-\tna", "e l\tn Q");
result.add("el-\tno-\tra", "e l\tn O@\tV");
result.add("el-\tnore", "e l\tn O@");
result.add("el-\tri-\tca", "e l\tr I\tk V");
result.add("el-\trod", "e l\tr Q d");
result.add("el-\troy", "e l\tr OI");
result.add("el-\tsa", "e l\ts V");
result.add("el-\tse-\tvier", "e l\ts e v\tj @r");
result.add("el-\tse-\tvier's", "e l\ts e v\tj @r z");
result.add("el-\tses", "e l\ts V z");
result.add("el-\tse's", "e l\ts V z");
result.add("el-\tsey", "e l\ts i:");
result.add("el-\tsi-\tnore", "e l\ts I\tn O@");
result.add("el-\tsie", "e l\ts i:");
result.add("el-\tsie's", "e l\ts i: z");
result.add("el-\tson", "e l\ts V n");
result.add("el-\tton", "e l\tt V n");
result.add("el-\tva", "e l\tv V");
result.add("el-\tve-\tra", "eI l\tv e@\tV");
result.add("el-\tvers", "e l\tv @r z");
result.add("el-\tvi-\ta", "e l\tv i:\tV");
result.add("el-\tvi-\tna", "e l\tv i:\tn V");
result.add("el-\tvi-\tra", "e l\tv aI\tr V");
result.add("el-\tvi-\ts's", "e l\tv I\ts V z");
result.add("el-\tvie", "e l\tv i:");
result.add("el-\tvin", "e l\tv I n");
result.add("el-\tvis", "e l\tv I s");
result.add("el-\tway", "e l\tw eI");
result.add("el-\twell", "e l\tw e l");
result.add("el-\twin", "e l\tw I n");
result.add("el-\twood", "e l\tw U d");
result.add("elbe", "e l b");
result.add("eld-\tred", "e l\td @r d");
result.add("eld-\tredge", "e l\td r e dZ");
result.add("eld-\tri-\tda", "e l\td r i:\td V");
result.add("eld-\tridge", "e l\td r I dZ");
result.add("eld-\tritch", "e l\td r I tS");
result.add("eld-\twin", "e l\td w I n");
result.add("elf", "e l f");
result.add("elf's", "e l f s");
result.add("elk", "e l k");
result.add("elk-\thart", "e l\tk h Q@ t");
result.add("elk-\thorn", "e l\tk h O@ n");
result.add("elk-\tton", "e l\tk t V n");
result.add("elks", "e l k s");
result.add("ell", "e l");
result.add("ell-\twood", "e l\tw U d");
result.add("ell-\twood's", "e l\tw U d z");
result.add("elle", "e l");
result.add("elles-\tmere", "e l\tz m I@");
result.add("ells", "e l z");
result.add("ells-\tworth", "e l\tz w @r T");
result.add("elm", "e l m");
result.add("elm-\thurst", "e l\tm h @r s t");
result.add("elm-\twood", "e l\tm w U d");
result.add("elms", "e l m z");
result.add("elms-\tford", "e l\tm z f @r d");
result.add("els", "e l z");
result.add("els-\tber-\try", "e l\tz b e@\ti:");
result.add("els-\tdon", "e l\ts d V n");
result.add("els-\tton", "e l\ts t Q n");
result.add("els-\tworth", "e l\tz w @r T");
result.add("else", "e l s");
result.add("else-\twhere", "e l\ts w e@");
result.add("elves", "e l v z");
result.add("em", "e m");
result.add("em-\tbal-\tming", "e m\tb Q\tm I N");
result.add("em-\tbalm", "e m\tb Q m");
result.add("em-\tbalmed", "e m\tb Q m d");
result.add("em-\tbank-\tment", "e m\tb { N\tk m V n t");
result.add("em-\tbar-\tca-\tde-\tro", "e m\tb Q@\tk V\td e@\t@U");
result.add("em-\tbar-\tgo", "e m\tb Q@\tg @U");
result.add("em-\tbar-\tgoed", "e m\tb Q@\tg @U d");
result.add("em-\tbar-\tgoes", "e m\tb Q@\tg @U z");
result.add("em-\tbar-\tka-\ttion", "e m\tb Q@\tk eI\tS V n");
result.add("em-\tbar-\tking", "e m\tb Q@\tk I N");
result.add("em-\tbar-\tras-\tses", "e m\tb {\tr V\ts V z");
result.add("em-\tbar-\tras-\tsing", "e m\tb e@\tV\ts I N");
result.add("em-\tbar-\tras-\tsing-\tly", "e m\tb e@\tV\ts I N\tl i:");
result.add("em-\tbar-\trass", "e m\tb e@\tV s");
result.add("em-\tbar-\trass-\tment", "e m\tb e@\tV s\tm V n t");
result.add("em-\tbar-\trass-\tments", "e m\tb e@\tV s\tm V n t s");
result.add("em-\tbar-\trassed", "e m\tb e@\tV s t");
result.add("em-\tbark", "e m\tb Q@ k");
result.add("em-\tbarked", "e m\tb Q@ k t");
result.add("em-\tbarks", "e m\tb Q@ k s");
result.add("em-\tbas-\tsies", "e m\tb V\ts i: z");
result.add("em-\tbas-\tsy", "e m\tb V\ts i:");
result.add("em-\tbas-\tsy's", "e m\tb V\ts i: z");
result.add("em-\tbat-\ttle", "e m\tb {\tt V l");
result.add("em-\tbat-\ttled", "e m\tb {\tt V l d");
result.add("em-\tbay-\tment", "e m\tb eI\tm V n t");
result.add("em-\tbe-\tllish", "e m\tb e\tl I S");
result.add("em-\tbed", "e m\tb e d");
result.add("em-\tbed-\tded", "e m\tb e\td V d");
result.add("em-\tbel-\tli-\tshing", "e m\tb e\tl I\tS I N");
result.add("em-\tbel-\tlish-\tment", "e m\tb e\tl I S\tm V n t");
result.add("em-\tbel-\tlished", "e m\tb e\tl I S t");
result.add("em-\tber", "e m\tb @r");
result.add("em-\tbers", "e m\tb @r z");
result.add("em-\tbez-\tz-\tler", "e m\tb e\tz V\tl @r");
result.add("em-\tbez-\tz-\tlers", "e m\tb e\tz V\tl @r z");
result.add("em-\tbez-\tz-\tling", "e m\tb e\tz V\tl I N");
result.add("em-\tbez-\tzle", "e m\tb e\tz V l");
result.add("em-\tbez-\tzle-\tment", "e m\tb e\tz V l\tm V n t");
result.add("em-\tbez-\tzled", "e m\tb e\tz V l d");
result.add("em-\tbez-\tzles", "e m\tb e\tz V l z");
result.add("em-\tbit-\tter", "e m\tb I\tt @r");
result.add("em-\tbit-\ttered", "e m\tb I\tt @r d");
result.add("em-\tbla-\tzon", "e m\tb l eI\tz V n");
result.add("em-\tbla-\tzoned", "e m\tb l eI\tz V n d");
result.add("em-\tboss", "e m\tb O: s");
result.add("em-\tbossed", "e m\tb O: s t");
result.add("em-\tbra-\tcea-\tble", "e m\tb r eI\ts V\tb V l");
result.add("em-\tbra-\tces", "e m\tb r eI\ts V z");
result.add("em-\tbra-\tcing", "e m\tb r eI\ts I N");
result.add("em-\tbrace", "e m\tb r eI s");
result.add("em-\tbraced", "e m\tb r eI s t");
result.add("em-\tcee", "e m\ts i:");
result.add("em-\tlyn", "e m\tl I n");
result.add("em-\tlynne", "e m\tl aI n");
result.add("em-\tma", "e\tm V");
result.add("em-\tma-\tli-\tne", "e\tm Q\tl i:\tn i:");
result.add("em-\tma-\tnu-\tel", "e\tm { n\tj u:\tV l");
result.add("em-\tmaus", "e\tm aU s");
result.add("em-\tme-\tline", "e\tm V\tl aI n");
result.add("em-\tme-\trich", "e\tm @r\tI k");
result.add("em-\tme-\try", "e\tm @r\ti:");
result.add("em-\tmer", "e\tm @r");
result.add("em-\tmet", "e\tm I t");
result.add("em-\tmett", "e\tm e t");
result.add("em-\tmi", "e\tm i:");
result.add("em-\tmie", "e\tm i:");
result.add("em-\tmit", "e\tm I t");
result.add("em-\tmons", "e\tm V n z");
result.add("em-\tmott", "e\tm V t");
result.add("em-\tmy", "e\tm i:");
result.add("em-\tmys", "e\tm i: z");
result.add("em-\tmy's", "e\tm i: z");
result.add("em-\tpa-\tne-\tling", "e m\tp {\tn V\tl I N");
result.add("em-\tpa-\tnel", "e m\tp {\tn V l");
result.add("em-\tpa-\tneled", "e m\tp {\tn V l d");
result.add("em-\tpa-\tthe-\ttic", "e m\tp V\tT e\tt I k");
result.add("em-\tpa-\tthize", "e m\tp V\tT aI z");
result.add("em-\tpa-\tthy", "e m\tp V\tT i:");
result.add("em-\tpath", "e m\tp { T");
result.add("em-\tpe-\tror", "e m\tp @r\t@r");
result.add("em-\tpe-\trors", "e m\tp @r\t@r z");
result.add("em-\tpe-\tror's", "e m\tp @r\t@r z");
result.add("em-\tpha-\tses", "e m\tf V\ts i: z");
result.add("em-\tpha-\tsi-\tzes", "e m\tf V\ts aI\tz V z");
result.add("em-\tpha-\tsi-\tzing", "e m\tf V\ts aI\tz I N");
result.add("em-\tpha-\tsis", "e m\tf V\ts I s");
result.add("em-\tpha-\tsize", "e m\tf V\ts aI z");
result.add("em-\tpha-\tsized", "e m\tf V\ts aI z d");
result.add("em-\tpha-\ttic", "e m\tf {\tt I k");
result.add("em-\tpha-\ttical-\tly", "e m\tf {\tt I k\tl i:");
result.add("em-\tphy-\tse-\tma", "e m\tf V\tz i:\tm V");
result.add("em-\tpi-\tre", "e m\tp aI\t@r");
result.add("em-\tpi-\tres", "e m\tp aI\t@r z");
result.add("em-\tpi-\tre's", "e m\tp aI\t@r z");
result.add("em-\tpi-\tri-\tcal", "e m\tp I@\tI\tk V l");
result.add("em-\tpi-\tri-\tcal-\tly", "e m\tp I@\tI\tk V\tl i:");
result.add("em-\tpi-\tri-\tci-\tsm", "e m\tp I@\tI\ts I\tz V m");
result.add("em-\tpi-\tri-\tcist", "e m\tp I@\tI\ts I s t");
result.add("em-\tplace-\tment", "e m\tp l eI s\tm V n t");
result.add("em-\tplace-\tments", "e m\tp l eI s\tm V n t s");
result.add("em-\tplo-\tya-\tble", "e m\tp l OI\tV\tb V l");
result.add("em-\tplo-\tyee", "e m\tp l OI\ti:");
result.add("em-\tplo-\tyees", "e m\tp l OI\ti: z");
result.add("em-\tplo-\tyee's", "e m\tp l OI\ti: z");
result.add("em-\tplo-\tyer", "e m\tp l OI\t@r");
result.add("em-\tplo-\tyers", "e m\tp l OI\t@r z");
result.add("em-\tplo-\tyer's", "e m\tp l OI\t@r z");
result.add("em-\tplo-\tying", "e m\tp l OI\tI N");
result.add("em-\tploy", "e m\tp l OI");
result.add("em-\tploy-\tment", "e m\tp l OI\tm V n t");
result.add("em-\tployed", "e m\tp l OI d");
result.add("em-\tploys", "e m\tp l OI z");
result.add("em-\tpo-\tri-\ta", "e m\tp O@\ti:\tV");
result.add("em-\tpo-\tri-\tum", "e m\tp O@\ti:\tV m");
result.add("em-\tpo-\twe-\tring", "I m\tp aU\t@r\tI N");
result.add("em-\tpo-\twer", "I m\tp aU\t@r");
result.add("em-\tpo-\twer-\tment", "I m\tp aU\t@r\tm V n t");
result.add("em-\tpo-\twered", "I m\tp aU\t@r d");
result.add("em-\tpo-\twers", "I m\tp aU\t@r z");
result.add("em-\tpre-\tsa", "e m\tp r e\ts V");
result.add("em-\tpress", "e m\tp r e s");
result.add("em-\trich", "e m\tr I k");
result.add("emb-\tle-\tma-\ttic", "e m\tb l V\tm {\tt I k");
result.add("emb-\tlem", "e m\tb l V m");
result.add("emb-\troi-\tde-\trer", "e m\tb r OI\td @r\t@r");
result.add("emb-\troi-\tde-\trers", "e m\tb r OI\td @r\t@r z");
result.add("emb-\troi-\tde-\tries", "e m\tb r OI\td @r\ti: z");
result.add("emb-\troi-\tde-\tring", "e m\tb r OI\td @r\tI N");
result.add("emb-\troi-\tde-\try", "e m\tb r OI\td @r\ti:");
result.add("emb-\troi-\tder", "e m\tb r OI\td @r");
result.add("emb-\troi-\tdered", "e m\tb r OI\td @r d");
result.add("emb-\troil", "e m\tb r OI l");
result.add("emb-\troiled", "e m\tb r OI l d");
result.add("emb-\try", "e m\tb r i:");
result.add("emb-\try-\to", "e m\tb r i:\t@U");
result.add("emb-\try-\to-\tlo-\tgy", "e m\tb r i:\tQ\tl V\tdZ i:");
result.add("emb-\try-\to-\tnic", "e m\tb r i:\tQ\tn I k");
result.add("emb-\try-\tos", "e m\tb r i:\t@U z");
result.add("eme-\trald", "e m\tr V l d");
result.add("eme-\tralds", "e m\tr V l d z");
result.add("emp-\tloy-\tments", "e m\tp l OI\tm V n t s");
result.add("emp-\trise", "e m\tp r aI z");
result.add("emp-\tson", "e m\tp s V n");
result.add("emp-\tti-\ter", "e m\tp t i:\t@r");
result.add("emp-\tti-\tness", "e m\tp t i:\tn V s");
result.add("emp-\ttied", "e m\tp t i: d");
result.add("emp-\tties", "e m\tp t i: z");
result.add("emp-\ttion", "e m\tp S V n");
result.add("emp-\ttive", "e m\tp t I v");
result.add("emp-\ttor", "e m\tp t @r");
result.add("emp-\tty", "e m\tp t i:");
result.add("emp-\tty-\ting", "e m\tp t i:\tI N");
result.add("empt", "e m p t");
result.add("en", "e n");
result.add("en-\tcamp", "e n\tk { m p");
result.add("en-\tcamp-\tment", "e n\tk { m\tp m V n t");
result.add("en-\tcamp-\tments", "e n\tk { m\tp m V n t s");
result.add("en-\tcamped", "e n\tk { m p t");
result.add("en-\tcap-\tsu-\tla-\tted", "e n\tk { p\ts V\tl eI\tt V d");
result.add("en-\tcap-\tsu-\tla-\tting", "e n\tk { p\ts V\tl eI\tt I N");
result.add("en-\tcap-\tsu-\tlate", "e n\tk { p\ts V\tl eI t");
result.add("en-\tcar-\tta", "e n\tk Q@\tt V");
result.add("en-\tcase", "e n\tk eI s");
result.add("en-\tcased", "e n\tk eI s t");
result.add("en-\tce-\tpha-\tli-\ttis", "e n\ts e\tf V\tl aI\tt V s");
result.add("en-\tce-\tpha-\tlo-\tpa-\tthy", "e n\ts e\tf V\tl O:\tp V\tT i:");
result.add("en-\tchan-\tted", "e n\ttS { n\tt V d");
result.add("en-\tchan-\tter", "e n\ttS { n\tt @r");
result.add("en-\tchan-\tters", "e n\ttS { n\tt @r z");
result.add("en-\tchan-\tter's", "e n\ttS { n\tt @r z");
result.add("en-\tchan-\tting", "e n\ttS { n\tt I N");
result.add("en-\tchant", "e n\ttS { n t");
result.add("en-\tchant-\tment", "e n\ttS { n\tt m V n t");
result.add("en-\tchi-\tla-\tda", "e n\ttS I\tl Q\td V");
result.add("en-\tci-\tnas", "e n\ts I\tn V z");
result.add("en-\tci-\tno", "e n\ts i:\tn @U");
result.add("en-\tcir-\tc-\tling", "e n\ts @r\tk V\tl I N");
result.add("en-\tcir-\tcle", "e n\ts @r\tk V l");
result.add("en-\tcir-\tcle-\tment", "e n\ts @r\tk V l\tm V n t");
result.add("en-\tcir-\tcled", "e n\ts @r\tk V l d");
result.add("en-\tco-\tded", "e n\tk @U\td V d");
result.add("en-\tco-\tding", "e n\tk @U\td I N");
result.add("en-\tcode", "e n\tk @U d");
result.add("en-\tcom-\tpas-\tses", "e n\tk V m\tp V\ts V z");
result.add("en-\tcom-\tpas-\tsing", "e n\tk V m\tp V\ts I N");
result.add("en-\tcom-\tpass", "e n\tk V m\tp V s");
result.add("en-\tcom-\tpassed", "e n\tk V m\tp V s t");
result.add("en-\tcore", "Q n\tk O@");
result.add("en-\tcores", "Q n\tk O@ z");
result.add("en-\tcou-\tra-\tges", "e n\tk @r\tI\tdZ V z");
result.add("en-\tcou-\tra-\tging", "e n\tk @r\tI\tdZ I N");
result.add("en-\tcou-\trage", "e n\tk @r\tI dZ");
result.add("en-\tcou-\trage-\tment", "e n\tk @r\tI dZ\tm V n t");
result.add("en-\tcou-\traged", "e n\tk @r\tI dZ d");
result.add("en-\tcoun-\tte-\tring", "e n\tk aU n\tt @r\tI N");
result.add("en-\tcoun-\tter", "e n\tk aU n\tt @r");
result.add("en-\tcoun-\ttered", "e n\tk aU n\tt @r d");
result.add("en-\tcoun-\tters", "e n\tk aU n\tt @r z");
result.add("en-\tcum-\tber", "e n\tk V m\tb @r");
result.add("en-\tcum-\tbered", "e n\tk V m\tb @r d");
result.add("en-\tdan-\tge-\tring", "e n\td eI n\tdZ @r\tI N");
result.add("en-\tdan-\tger", "e n\td eI n\tdZ @r");
result.add("en-\tdan-\tger-\tment", "e n\td eI n\tdZ @r\tm V n t");
result.add("en-\tdan-\tgered", "e n\td eI n\tdZ @r d");
result.add("en-\tdan-\tgers", "e n\td eI n\tdZ @r z");
result.add("en-\tde-\tmic", "e n\td e\tm I k");
result.add("en-\tdea-\tring", "e n\td i:\tr I N");
result.add("en-\tdea-\tvo-\tring", "e n\td e\tv @r\tI N");
result.add("en-\tdea-\tvor", "e n\td e\tv @r");
result.add("en-\tdea-\tvored", "e n\td e\tv @r d");
result.add("en-\tdea-\tvors", "e n\td e\tv @r z");
result.add("en-\tdea-\tvor's", "e n\td e\tv @r z");
result.add("en-\tdea-\tvour", "e n\td e\tv @r");
result.add("en-\tdea-\tvour's", "e n\td e\tv @r z");
result.add("en-\tdear", "e n\td i: r");
result.add("en-\tdear-\tment", "e n\td I@\tm V n t");
result.add("en-\tdeared", "e n\td i: r d");
result.add("en-\tded", "e n\td V d");
result.add("en-\tder", "e n\td @r");
result.add("en-\tder-\tby", "e n\td @r\tb i:");
result.add("en-\tder-\tlin", "e n\td @r\tl I n");
result.add("en-\tders", "e n\td @r z");
result.add("en-\tdi-\tcott", "e n\td I\tk Q t");
result.add("en-\tding", "e n\td I N");
result.add("en-\tdings", "e n\td I N z");
result.add("en-\tdive", "e n\td aI v");
result.add("en-\tdo", "e n\td @U");
result.add("en-\tdo-\tder-\tmal", "e n\td @U\td @r\tm V l");
result.add("en-\tdo-\tmet-\tri-\tal", "e n\td @U\tm e t\tr i:\tV l");
result.add("en-\tdo-\tmet-\tri-\to-\tsis", "e n\td @U\tm e t\tr i:\t@U\ts I s");
result.add("en-\tdo-\tther-\tmic", "e n\td @U\tT @r\tm I k");
result.add("en-\tdo-\twing", "e n\td aU\tI N");
result.add("en-\tdoc-\tri-\tno-\tlo-\tgist", "e n\td @U k\tr I\tn Q\tl V\tdZ V s t");
result.add("en-\tdoc-\tri-\tno-\tlo-\tgists", "e n\td @U k\tr I\tn Q\tl V\tdZ V s t s");
result.add("en-\tdoc-\tri-\tno-\tlo-\tgist's", "e n\td @U k\tr I\tn Q\tl V\tdZ V s t s");
result.add("en-\tdoc-\tri-\tno-\tlo-\tgy", "e n\td @U k\tr I\tn Q\tl V\tdZ i:");
result.add("en-\tdoc-\trine", "e n\td @U k\tr aI n");
result.add("en-\tdor-\tphin", "e n\td O@\tf I n");
result.add("en-\tdor-\tphins", "e n\td O@\tf I n z");
result.add("en-\tdor-\tser", "e n\td O@\ts @r");
result.add("en-\tdor-\tsers", "e n\td O@\ts @r z");
result.add("en-\tdor-\tses", "e n\td O@\ts V z");
result.add("en-\tdor-\tsing", "e n\td O@\ts I N");
result.add("en-\tdorse", "e n\td O@ s");
result.add("en-\tdorse-\tment", "e n\td O@ s\tm V n t");
result.add("en-\tdorse-\tments", "e n\td O@ s\tm V n t s");
result.add("en-\tdorsed", "e n\td O@ s t");
result.add("en-\tdos-\tco-\tpic", "e n\td @U s\tk Q\tp I k");
result.add("en-\tdos-\tperm", "e n\td V s\tp @r m");
result.add("en-\tdow", "e n\td aU");
result.add("en-\tdow-\tment", "e n\td aU\tm V n t");
result.add("en-\tdow-\tments", "e n\td aU\tm V n t s");
result.add("en-\tdow-\tment's", "e n\td aU\tm V n t s");
result.add("en-\tdowed", "e n\td aU d");
result.add("en-\tdu-\trance", "e n\td @r\tV n s");
result.add("en-\tdu-\tring", "e n\td j U@\tI N");
result.add("en-\tdued", "e n\td u: d");
result.add("en-\tdure", "e n\td j U@");
result.add("en-\tdured", "e n\td j U@ d");
result.add("en-\tdures", "e n\td j U@ z");
result.add("en-\tfant", "e n\tf Q n t");
result.add("en-\tfee-\tble", "e n\tf i:\tb V l");
result.add("en-\tfee-\tbled", "e n\tf i:\tb V l d");
result.add("en-\tfield", "e n\tf i: l d");
result.add("en-\tfield's", "e n\tf i: l d z");
result.add("en-\tfold", "e n\tf @U l d");
result.add("en-\tfor-\tcea-\tbi-\tli-\tty", "e n\tf O@\ts V\tb I\tl V\tt i:");
result.add("en-\tfor-\tcea-\tble", "e n\tf O@\ts V\tb V l");
result.add("en-\tfor-\tcer", "e n\tf O@\ts @r");
result.add("en-\tfor-\tcers", "e n\tf O@\ts @r z");
result.add("en-\tfor-\tces", "e n\tf O@\ts V z");
result.add("en-\tfor-\tcing", "e n\tf O@\ts I N");
result.add("en-\tforce", "e n\tf O@ s");
result.add("en-\tforce-\tment", "e n\tf O@ s\tm V n t");
result.add("en-\tforce-\tments", "e n\tf O@ s\tm V n t s");
result.add("en-\tforce-\tment's", "e n\tf O@ s\tm V n t s");
result.add("en-\tforced", "e n\tf O@ s t");
result.add("en-\tfran-\tchi-\tses", "e n\tf r { n\ttS aI\tz V z");
result.add("en-\tfran-\tchise", "e n\tf r { n\ttS aI z");
result.add("en-\tfran-\tchised", "e n\tf r { n\ttS aI z d");
result.add("en-\tg-\tler", "e N\tg V\tl @r");
result.add("en-\tg-\tler's", "e N\tg V\tl @r z");
result.add("en-\tga-\tges", "e n\tg eI\tdZ V z");
result.add("en-\tga-\tging", "e n\tg eI\tdZ I N");
result.add("en-\tgage", "e n\tg eI dZ");
result.add("en-\tgage-\tment", "e n\tg eI dZ\tm V n t");
result.add("en-\tgage-\tments", "e n\tg eI dZ\tm V n t s");
result.add("en-\tgaged", "e n\tg eI dZ d");
result.add("en-\tgel", "e n\tg V l");
result.add("en-\tgel-\tber-\tta", "e N\tg e l\tb e@\tt V");
result.add("en-\tgel-\tbert", "e N\tg V l\tb @r t");
result.add("en-\tgel-\thard", "e N\tg V l\th Q@ d");
result.add("en-\tgel-\thart", "e N\tg V l\th Q@ t");
result.add("en-\tgel-\tmann", "e N\tg V l\tm V n");
result.add("en-\tgels", "e N\tg V l z");
result.add("en-\tgen", "e\tN V n");
result.add("en-\tgen-\tder", "e n\tdZ e n\td @r");
result.add("en-\tgen-\tdered", "e n\tdZ e n\td @r d");
result.add("en-\tgen-\tders", "e N\tg V n\td @r z");
result.add("en-\tgi-\tnee-\tring", "e n\tdZ I\tn I@\tI N");
result.add("en-\tgi-\tneer", "e n\tdZ I\tn I@");
result.add("en-\tgi-\tneered", "e n\tdZ I\tn i: r d");
result.add("en-\tgi-\tneers", "e n\tdZ I\tn I@ z");
result.add("en-\tgi-\tneer's", "e n\tdZ I\tn i: r z");
result.add("en-\tgine", "e n\tdZ I n");
result.add("en-\tgined", "e n\tdZ I n d");
result.add("en-\tgines", "e n\tdZ I n z");
result.add("en-\tgine's", "e n\tdZ I n z");
result.add("en-\tgle", "e N\tg V l");
result.add("en-\tgle-\tbert", "I\tN V l\tb @r t");
result.add("en-\tgle-\tman", "I\tN V l\tm V n");
result.add("en-\tgle-\twood", "e N\tg V l\tw U d");
result.add("en-\tgul-\tfing", "e n\tg V l\tf I N");
result.add("en-\tgulf", "e n\tg V l f");
result.add("en-\tgulfed", "e n\tg V l f t");
result.add("en-\than-\tcer", "e n\th { n\ts @r");
result.add("en-\than-\tces", "e n\th { n\ts V z");
result.add("en-\than-\tcing", "e n\th { n\ts I N");
result.add("en-\thance", "e n\th { n s");
result.add("en-\thance-\tment", "e n\th { n\ts m V n t");
result.add("en-\thance-\tments", "e n\th { n\ts m V n t s");
result.add("en-\thanced", "e n\th { n s t");
result.add("en-\tjoi-\tning", "e n\tdZ OI\tn I N");
result.add("en-\tjoin", "e n\tdZ OI n");
result.add("en-\tjoined", "e n\tdZ OI n d");
result.add("en-\tjoy", "e n\tdZ OI");
result.add("en-\tjoy-\ta-\tble", "e n\tdZ OI\tV\tb V l");
result.add("en-\tjoy-\ting", "e n\tdZ OI\tI N");
result.add("en-\tjoy-\tment", "e n\tdZ OI\tm V n t");
result.add("en-\tjoy-\tments", "e n\tdZ OI\tm V n t s");
result.add("en-\tjoyed", "e n\tdZ OI d");
result.add("en-\tjoys", "e n\tdZ OI z");
result.add("en-\tlar-\tger", "V n\tl Q@\tg @r");
result.add("en-\tlar-\tges", "V n\tl Q@\tdZ V z");
result.add("en-\tlar-\tging", "V n\tl Q@\tdZ I N");
result.add("en-\tlarge", "e n\tl Q@ dZ");
result.add("en-\tlarge-\tment", "V n\tl Q@ dZ\tm V n t");
result.add("en-\tlarge-\tments", "V n\tl Q@ dZ\tm V n t s");
result.add("en-\tlarged", "e n\tl Q@ dZ d");
result.add("en-\tli-\tven", "e n\tl aI\tv V n");
result.add("en-\tli-\tvened", "e n\tl aI\tv V n d");
result.add("en-\tligh-\tte-\tning", "e n\tl aI\tt V\tn I N");
result.add("en-\tligh-\tten", "e n\tl aI\tt V n");
result.add("en-\tligh-\tten-\tment", "e n\tl aI\tt V n\tm V n t");
result.add("en-\tligh-\ttened", "e n\tl aI\tt V n d");
result.add("en-\tlis-\tted", "e n\tl I s\tt V d");
result.add("en-\tlis-\ttee", "e n\tl I s\tt i:");
result.add("en-\tlis-\ttees", "e n\tl I s\tt i: z");
result.add("en-\tlis-\tting", "e n\tl I s\tt I N");
result.add("en-\tlist", "e n\tl I s t");
result.add("en-\tlist-\tment", "e n\tl I s\tt m V n t");
result.add("en-\tlists", "e n\tl I s t s");
result.add("en-\tloe", "e n\tl @U");
result.add("en-\tmesh", "e n\tm e S");
result.add("en-\tmeshed", "e n\tm e S t");
result.add("en-\tmi-\tties", "e n\tm V\tt i: z");
result.add("en-\tmi-\tty", "e n\tm I\tt i:");
result.add("en-\tnis", "e\tn I s");
result.add("en-\tno-\tble", "e\tn @U\tb V l");
result.add("en-\tnu-\ti", "e\tn u:\ti:");
result.add("en-\tqui-\tre", "e n\tk w aI\t@r");
result.add("en-\tqui-\trer", "e n\tk w aI\tr @r");
result.add("en-\tra-\tging", "e n\tr eI\tdZ I N");
result.add("en-\trage", "e n\tr eI dZ");
result.add("en-\traged", "e n\tr eI dZ d");
result.add("en-\trap-\tture", "e n\tr { p\ttS @r");
result.add("en-\trap-\ttured", "e n\tr { p\ttS @r d");
result.add("en-\tri-\tca", "e n\tr i:\tk V");
result.add("en-\tri-\tches", "e n\tr I\ttS V z");
result.add("en-\tri-\tching", "e n\tr I\ttS I N");
result.add("en-\tri-\tco", "e n\tr i:\tk @U");
result.add("en-\tri-\tque", "e n\tr i:\tk eI");
result.add("en-\trich", "e n\tr I tS");
result.add("en-\trich-\tment", "e n\tr I tS\tm V n t");
result.add("en-\triched", "e n\tr I tS t");
result.add("en-\tright", "e n\tr aI t");
result.add("en-\trol-\tlee", "e n\tr @U\tl i:");
result.add("en-\trol-\tlees", "e n\tr @U\tl i: z");
result.add("en-\trol-\tling", "e n\tr @U\tl I N");
result.add("en-\troll", "e n\tr @U l");
result.add("en-\troll-\tment", "e n\tr @U l\tm V n t");
result.add("en-\troll-\tments", "e n\tr @U l\tm V n t s");
result.add("en-\trolled", "e n\tr @U l d");
result.add("en-\trolls", "e n\tr @U l z");
result.add("en-\tron", "e n\tr Q n");
result.add("en-\tron's", "e n\tr Q n z");
result.add("en-\troute", "e n\tr u: t");
result.add("en-\tsem-\tble", "Q n\ts Q m\tb V l");
result.add("en-\tsem-\tbles", "Q n\ts Q m\tb V l z");
result.add("en-\tsign", "e n\ts aI n");
result.add("en-\tsor", "e n\ts @r");
result.add("en-\tsu-\ting", "e n\ts u:\tI N");
result.add("en-\tsu-\tring", "e n\tS U@\tI N");
result.add("en-\tsue", "e n\ts u:");
result.add("en-\tsued", "e n\ts u: d");
result.add("en-\tsues", "e n\ts u: z");
result.add("en-\tsure", "e n\tS U@");
result.add("en-\tsured", "e n\tS U@ d");
result.add("en-\tsures", "e n\tS U@ z");
result.add("en-\ttai-\tling", "e n\tt eI\tl I N");
result.add("en-\ttail", "e n\tt eI l");
result.add("en-\ttailed", "e n\tt eI l d");
result.add("en-\ttails", "e n\tt eI l z");
result.add("en-\tte-\tring", "e n\tt @r\tI N");
result.add("en-\tter-\ttai-\tner", "e n\tt @r\tt eI\tn @r");
result.add("en-\tter-\ttai-\tners", "e n\tt @r\tt eI\tn @r z");
result.add("en-\tter-\ttai-\tner's", "e n\tt @r\tt eI\tn @r z");
result.add("en-\tter-\ttai-\tning", "e n\tt @r\tt eI\tn I N");
result.add("en-\tter-\ttain", "e n\tt @r\tt eI n");
result.add("en-\tter-\ttain-\tment", "e n\tt @r\tt eI n\tm V n t");
result.add("en-\tter-\ttain-\tments", "e n\tt @r\tt eI n\tm V n t s");
result.add("en-\tter-\ttain-\tment's", "e n\tt @r\tt eI n\tm V n t s");
result.add("en-\tter-\ttained", "e n\tt @r\tt eI n d");
result.add("en-\tter-\ttains", "e n\tt @r\tt eI n z");
result.add("en-\tterp-\tri-\tses", "e n\tt @r p\tr aI\tz V z");
result.add("en-\tterp-\tri-\tse's", "e n\tt @r p\tr aI\tz V z");
result.add("en-\tterp-\tri-\tsing", "e n\tt @r p\tr aI\tz I N");
result.add("en-\tterp-\trise", "e n\tt @r p\tr aI z");
result.add("en-\tters", "e n\tt @r z");
result.add("en-\tthu-\tsi-\ta-\tsm", "e n\tT u:\tz i:\t{\tz V m");
result.add("en-\tthu-\tsi-\ta-\tsms", "e n\tT u:\tz i:\t{\tz V m z");
result.add("en-\tthu-\tsi-\tas-\ttic", "e n\tT u:\tz i:\t{ s\tt I k");
result.add("en-\tthu-\tsi-\tas-\ttical-\tly", "e n\tT u:\tz i:\t{ s\tt I k\tl i:");
result.add("en-\tthu-\tsi-\tast", "e n\tT u:\tz i:\t{ s t");
result.add("en-\tthu-\tsi-\tasts", "e n\tT u:\tz i:\t{ s t s");
result.add("en-\tthuse", "e n\tT u: z");
result.add("en-\tthused", "e n\tT u: z d");
result.add("en-\tti-\tcing", "e n\tt aI\ts I N");
result.add("en-\tti-\tre", "e n\tt aI\t@r");
result.add("en-\tti-\tre-\tly", "e n\tt aI\t@r\tl i:");
result.add("en-\tti-\tre-\tty", "e n\tt aI\t@r\tt i:");
result.add("en-\tti-\tt-\tling", "e n\tt aI\tt V\tl I N");
result.add("en-\tti-\tties", "e n\tt I\tt i: z");
result.add("en-\tti-\ttle", "e n\tt aI\tt V l");
result.add("en-\tti-\ttle-\tment", "e n\tt aI\tt V l\tm V n t");
result.add("en-\tti-\ttle-\tments", "e n\tt aI\tt V l\tm V n t s");
result.add("en-\tti-\ttled", "e n\tt aI\tt V l d");
result.add("en-\tti-\ttles", "e n\tt aI\tt V l z");
result.add("en-\tti-\tty", "e n\tt I\tt i:");
result.add("en-\tti-\tty's", "e n\tt I\tt i: z");
result.add("en-\ttice", "e n\tt aI s");
result.add("en-\ttice-\tment", "e n\tt aI s\tm V n t");
result.add("en-\ttice-\tments", "e n\tt aI s\tm V n t s");
result.add("en-\tticed", "e n\tt aI s t");
result.add("en-\tto-\tmo-\tlo-\tgist", "e n\tt V\tm Q\tl V\tdZ V s t");
result.add("en-\tto-\tmo-\tlo-\tgists", "e n\tt V\tm Q\tl V\tdZ V s t s");
result.add("en-\tto-\tmo-\tlo-\tgy", "e n\tt V\tm Q\tl V\tdZ i:");
result.add("en-\ttomb", "e n\tt u: m");
result.add("en-\ttomb-\tment", "e n\tt u: m\tm V n t");
result.add("en-\ttombed", "e n\tt u: m d");
result.add("en-\ttou-\trage", "Q n\tt U@\tQ Z");
result.add("en-\ttrail", "e n\tt r eI l");
result.add("en-\ttrails", "e n\tt r V l z");
result.add("en-\ttran-\tces", "e n\tt r V n\ts V z");
result.add("en-\ttrance", "e n\tt r V n s");
result.add("en-\ttranced", "e n\tt r { n s t");
result.add("en-\ttrant", "e n\tt r V n t");
result.add("en-\ttrants", "e n\tt r V n t s");
result.add("en-\ttrap", "e n\tt r { p");
result.add("en-\ttrap-\tment", "e n\tt r { p\tm V n t");
result.add("en-\ttrapped", "e n\tt r { p t");
result.add("en-\ttre", "Q n\tt r eI");
result.add("en-\ttrea-\tties", "e n\tt r i:\tt i: z");
result.add("en-\ttrea-\tty", "e n\tt r i:\tt i:");
result.add("en-\ttree", "Q n\tt r eI");
result.add("en-\ttrees", "Q n\tt r eI z");
result.add("en-\ttren-\tches", "e n\tt r e n\ttS V z");
result.add("en-\ttren-\tching", "e n\tt r e n\ttS I N");
result.add("en-\ttrench", "e n\tt r e n tS");
result.add("en-\ttrench-\tment", "e n\tt r e n\ttS m V n t");
result.add("en-\ttrep-\tren-\teu-\tri-\ta-\tli-\tsm", "e n\tt r V p\tr V\tn u:\tr i:\tV\tl I\tz V m");
result.add("en-\ttrep-\tren-\teu-\tri-\tal", "Q n\tt r V p\tr V\tn @r\ti:\tV l");
result.add("en-\ttrep-\tren-\teur", "Q n\tt r V p\tr V\tn @r");
result.add("en-\ttrep-\tren-\teur-\tship", "Q n\tt r V p\tr V\tn @r\tS I p");
result.add("en-\ttrep-\tren-\teurs", "Q n\tt r V p\tr V\tn @r z");
result.add("en-\ttrep-\tren-\teur's", "Q n\tt r V p\tr V\tn @r z");
result.add("en-\ttries", "e n\tt r i: z");
result.add("en-\ttro-\tpy", "e n\tt r V\tp i:");
result.add("en-\ttrus-\tted", "e n\tt r V s\tt V d");
result.add("en-\ttrus-\tting", "e n\tt r V s\tt I N");
result.add("en-\ttrust", "e n\tt r V s t");
result.add("en-\tve-\tlo-\tping", "e n\tv e\tl V\tp I N");
result.add("en-\tve-\tlop", "e n\tv e\tl V p");
result.add("en-\tve-\tlope", "e n\tv V\tl @U p");
result.add("en-\tve-\tloped", "e n\tv e\tl V p t");
result.add("en-\tve-\tlopes", "e n\tv V\tl @U p s");
result.add("en-\tve-\tlops", "e n\tv e\tl V p s");
result.add("en-\tvi-\ta-\tble", "e n\tv i:\tV\tb V l");
result.add("en-\tvi-\tous", "e n\tv i:\tV s");
result.add("en-\tvi-\tous-\tly", "e n\tv i:\tV s\tl i:");
result.add("en-\tvi-\tro-\tnic", "e n\tv aI\tr O:\tn I k");
result.add("en-\tvi-\tro-\tnics", "e n\tv aI\tr O:\tn I k s");
result.add("en-\tvi-\tron-\tmen-\tta-\tli-\tsm", "e n\tv aI\tr V n\tm e n\tt V\tl I\tz V m");
result.add("en-\tvi-\tron-\tmen-\tta-\tlist", "V n\tv aI\tr V n\tm e n\tt V\tl V s t");
result.add("en-\tvi-\tron-\tmen-\tta-\tlists", "e n\tv aI\tr V n\tm e n\tt V\tl V s t s");
result.add("en-\tvi-\tron-\tmen-\ttal", "V n\tv aI\tr V n\tm e n\tt V l");
result.add("en-\tvi-\tron-\tmen-\ttal-\tly", "V n\tv aI\tr V n\tm e n\tt V\tl i:");
result.add("en-\tvi-\tron-\tment", "V n\tv aI\tr V n\tm V n t");
result.add("en-\tvi-\tron-\tments", "V n\tv aI\tr V n\tm V n t s");
result.add("en-\tvi-\tron-\tment's", "V n\tv aI\tr V n\tm V n t s");
result.add("en-\tvi-\trons", "e n\tv aI\tr V n z");
result.add("en-\tvi-\tsa-\tges", "e n\tv I\tz I\tdZ V z");
result.add("en-\tvi-\tsage", "e n\tv I\tz I dZ");
result.add("en-\tvi-\tsaged", "e n\tv I\tz I dZ d");
result.add("en-\tvi-\tsio-\tning", "e n\tv I\tZ V\tn I N");
result.add("en-\tvi-\tsion", "e n\tv I\tZ V n");
result.add("en-\tvi-\tsioned", "e n\tv I\tZ V n d");
result.add("en-\tvi-\tsions", "e n\tv I\tZ V n z");
result.add("en-\tvied", "e n\tv i: d");
result.add("en-\tvoy", "e n\tv OI");
result.add("en-\tvoys", "e n\tv OI z");
result.add("en-\tvy", "e n\tv i:");
result.add("en-\tzy-\tma-\ttic", "e n\tz aI\tm {\tt I k");
result.add("en-\tzyme", "e n\tz aI m");
result.add("en-\tzymes", "e n\tz aI m z");
result.add("enc-\tlave", "Q n\tk l eI v");
result.add("enc-\tlaves", "Q n\tk l eI v z");
result.add("enc-\tlo-\tsure", "e n\tk l @U\tZ @r");
result.add("enc-\tlo-\tsures", "V n\tk l @U\tZ @r z");
result.add("enc-\tlos-\ting", "e n\tk l @U\tz I N");
result.add("enc-\tlose", "e n\tk l @U z");
result.add("enc-\tlosed", "e n\tk l @U z d");
result.add("enc-\troa-\tches", "e n\tk r @U\ttS V z");
result.add("enc-\troa-\tching", "e n\tk r @U\ttS I N");
result.add("enc-\troach", "e n\tk r @U tS");
result.add("enc-\troach-\tment", "e n\tk r @U tS\tm V n t");
result.add("enc-\troach-\tments", "e n\tk r @U tS\tm V n t s");
result.add("enc-\troached", "e n\tk r @U tS t");
result.add("enc-\trus-\tted", "e n\tk r V s\tt V d");
result.add("enc-\trus-\tting", "e n\tk r V s\tt I N");
result.add("enc-\trust", "e n\tk r V s t");
result.add("enc-\tryp-\tted", "e n\tk r I p\tt V d");
result.add("enc-\tryp-\ttion", "e n\tk r I p\tS V n");
result.add("enc-\trypt", "e n\tk r I p t");
result.add("end", "e n d");
result.add("end-\tgame", "e n\td g eI m");
result.add("end-\tgames", "e n\td g eI m z");
result.add("end-\tless", "e n\td l V s");
result.add("end-\tless-\tly", "e n\td l V s\tl i:");
result.add("end-\tpoint", "e n\td p OI n t");
result.add("end-\tres", "e n\td @r z");
result.add("ende", "e n d");
result.add("ends", "e n d z");
result.add("eng", "e N");
result.add("eng-\tdahl", "e N\td Q l");
result.add("eng-\tlan-\tder", "I N\tg l V n\td @r");
result.add("eng-\tlan-\tders", "I N\tg l V n\td @r z");
result.add("eng-\tland", "I N\tg l V n d");
result.add("eng-\tland's", "I N\tg l V n d z");
result.add("eng-\tlish", "I N\tg l I S");
result.add("eng-\tlish-\tman", "I N\tg l I S\tm V n");
result.add("eng-\tlish-\tmen", "I N\tg l I S\tm e n");
result.add("eng-\tlish-\two-\tman", "I N\tg l I S\tw U\tm V n");
result.add("eng-\tra-\tver", "V n\tg r eI\tv @r");
result.add("eng-\tra-\tving", "V n\tg r eI\tv I N");
result.add("eng-\tra-\tvings", "V n\tg r eI\tv I N z");
result.add("eng-\tram", "e n\tg r { m");
result.add("eng-\trave", "V n\tg r eI v");
result.add("eng-\traved", "V n\tg r eI v d");
result.add("eng-\tros-\tsing", "V n\tg r @U\ts I N");
result.add("eng-\tross", "V n\tg r @U s");
result.add("eng-\trossed", "V n\tg r @U s t");
result.add("ens-\tconce", "V n\ts k Q n s");
result.add("ens-\tconced", "V n\ts k Q n s t");
result.add("ens-\tlave", "e n\ts l eI v");
result.add("ens-\tlave-\tment", "e n\ts l eI v\tm V n t");
result.add("ens-\tlaved", "e n\ts l eI v d");
result.add("ens-\tnare", "e n\ts n e@");
result.add("ens-\tnared", "e n\ts n e@ d");
result.add("ens-\tnarl", "e n\ts n Q@ l");
result.add("ens-\tnarled", "e n\ts n Q@ l d");
result.add("ensh-\trine", "e n\tS r aI n");
result.add("ensh-\trined", "e n\tS r aI n d");
result.add("ensh-\trou-\tded", "V n\tS r aU\td V d");
result.add("ensh-\troud", "V n\tS r aU d");
result.add("ent", "e n t");
result.add("ent-\try", "e n\tt r i:");
result.add("ent-\try-\tway", "e n\tt r i:\tw eI");
result.add("ent-\twi-\tstle", "e n\tt w I\ts V l");
result.add("ent-\twine", "e n\tt w aI n");
result.add("ent-\twined", "e n\tt w aI n d");
result.add("enth-\tral", "e n\tT r O: l");
result.add("enth-\tralled", "e n\tT r O: l d");
result.add("enz", "e n z");
result.add("ep-\tcot", "e p\tk Q t");
result.add("ep-\tper-\tson", "e\tp @r\ts V n");
result.add("ep-\tping", "e\tp I N");
result.add("ep-\trom", "e p\tr V m");
result.add("ep-\troms", "e p\tr V m z");
result.add("ep-\tsi-\tlon", "e p\ts I\tl Q n");
result.add("ep-\tso-\tmite", "e p\ts V\tm aI t");
result.add("ep-\tsom", "e p\ts V m");
result.add("ep-\tson", "e p\ts V n");
result.add("ep-\tstein", "e p\ts t i: n");
result.add("epes", "i: p s");
result.add("eph-\traim", "i: f\tr I@ m");
result.add("epp", "e p");
result.add("eppes", "e p s");
result.add("epps", "e p s");
result.add("er", "@r");
result.add("er-\tda", "e@\td V");
result.add("er-\tgo", "@r\tg @U");
result.add("er-\tgo-\tno-\tmic", "@r\tg V\tn Q\tm I k");
result.add("er-\tgo-\tno-\tmics", "@r\tg V\tn Q\tm I k s");
result.add("er-\tgo-\tti-\tsm", "@r\tg V\tt I\tz V m");
result.add("er-\tgot", "@r\tg V t");
result.add("er-\tgots", "@r\tg V t s");
result.add("er-\tgot's", "@r\tg V t s");
result.add("er-\thard", "e@\th Q@ d");
result.add("er-\thardt", "@r\th Q@ t");
result.add("er-\thart", "@r\th Q@ t");
result.add("er-\tlach", "@r\tl Q k");
result.add("er-\tlan-\tgen", "@r\tl { N\tg V n");
result.add("er-\tlan-\tger", "e@\tl {\tN @r");
result.add("er-\tland", "@r\tl V n d");
result.add("er-\tland-\tson", "@r\tl V n\td s V n");
result.add("er-\tle", "O@\tV l");
result.add("er-\tlene", "@r\tl i: n");
result.add("er-\tline", "@r\tl aI n");
result.add("er-\tma", "@r\tm V");
result.add("er-\tma's", "@r\tm V z");
result.add("er-\tmi-\tna", "@r\tm i:\tn V");
result.add("er-\tmi-\tni-\ta", "@r\tm i:\tn i:\tV");
result.add("er-\tmi-\tnie", "@r\tm I\tn i:");
result.add("er-\tmin", "@r\tm I n");
result.add("er-\tmine", "@r\tm I n");
result.add("er-\tna", "@r\tn V");
result.add("er-\tna-\tline", "@r\tn V\tl aI n");
result.add("er-\tnes-\ttine", "@r\tn V s\tt i: n");
result.add("er-\tnes-\tto", "@r\tn e s\tt @U");
result.add("er-\tnest", "@r\tn V s t");
result.add("er-\tnest's", "@r\tn V s t s");
result.add("er-\tnie", "@r\tn i:");
result.add("er-\tny", "@r\tn i:");
result.add("er-\tra-\ttic", "I@\t{\tt I k");
result.add("er-\tra-\ttical-\tly", "e@\t{\tt I k\tl i:");
result.add("er-\trand", "e@\tV n d");
result.add("er-\trands", "e@\tV n d z");
result.add("er-\trant", "e@\tV n t");
result.add("er-\tro-\tne-\tous", "e@\t@U\tn i:\tV s");
result.add("er-\tro-\tne-\tous-\tly", "e@\t@U\tn i:\tV s\tl i:");
result.add("er-\trol", "e@\tV l");
result.add("er-\tror", "e@\t@r");
result.add("er-\trors", "e@\t@r z");
result.add("er-\tsatz", "e@\ts Q t s");
result.add("er-\ttha", "@r\tD V");
result.add("er-\tven", "@r\tv V n");
result.add("er-\tvin", "@r\tv I n");
result.add("er-\tving", "@r\tv I N");
result.add("er-\twin", "@r\tw I n");
result.add("erb", "@r b");
result.add("erbe", "@r b");
result.add("erbes", "@r b z");
result.add("erd-\tman", "@r d\tm V n");
result.add("erd-\trich", "@r d\tr I k");
result.add("erk", "@r k");
result.add("erl", "@r l");
result.add("erne", "@r n");
result.add("ernst", "@r n s t");
result.add("err", "e@");
result.add("erred", "e@ d");
result.add("errs", "e@ z");
result.add("ers", "@r z");
result.add("ers-\tkine", "@r s\tk aI n");
result.add("erst-\twhile", "@r s\tt w aI l");
result.add("es", "e s");
result.add("e's", "i: z");
result.add("es-\tben-\tshade", "e s\tb V n\tS V d");
result.add("es-\tca-\tla-\tted", "e s\tk V\tl eI\tt V d");
result.add("es-\tca-\tla-\tting", "e s\tk V\tl eI\tt I N");
result.add("es-\tca-\tla-\ttion", "e s\tk V\tl eI\tS V n");
result.add("es-\tca-\tla-\ttor", "e s\tk V\tl eI\tt @r");
result.add("es-\tca-\tla-\ttors", "e s\tk V\tl eI\tt @r z");
result.add("es-\tca-\tlan-\tte", "e s\tk Q\tl Q n\tt i:");
result.add("es-\tca-\tlate", "e s\tk V\tl eI t");
result.add("es-\tca-\tlates", "e s\tk V\tl eI t s");
result.add("es-\tca-\tna-\tba", "e s\tk V\tn Q\tb V");
result.add("es-\tca-\tpade", "e s\tk V\tp eI d");
result.add("es-\tca-\tpades", "e s\tk V\tp eI d z");
result.add("es-\tca-\tpee", "V s\tk eI\tp i:");
result.add("es-\tca-\tpees", "V s\tk eI\tp i: z");
result.add("es-\tca-\tpi-\tsm", "V s\tk eI\tp I\tz V m");
result.add("es-\tca-\tping", "V s\tk eI\tp I N");
result.add("es-\tcape", "V s\tk eI p");
result.add("es-\tcape-\tment", "V s\tk eI p\tm V n t");
result.add("es-\tcaped", "V s\tk eI p t");
result.add("es-\tcapes", "V s\tk eI p s");
result.add("es-\tcarp-\tment", "e s\tk Q@ p\tm V n t");
result.add("es-\tcarp-\tments", "e s\tk Q@ p\tm V n t s");
result.add("es-\tcha-\tto-\tlo-\tgi-\tcal", "e s\tk V\tt V\tl Q\tdZ I\tk V l");
result.add("es-\tche-\twing", "e\tS u:\tI N");
result.add("es-\tchen-\tbach", "e\tS V n\tb Q k");
result.add("es-\tcher", "e\tS @r");
result.add("es-\tchew", "e s\ttS u:");
result.add("es-\tchewed", "e\tS u: d");
result.add("es-\tchews", "e s\ttS u: z");
result.add("es-\tco-\tbe-\tdo", "e s\tk @U\tb eI\td @U");
result.add("es-\tcon-\tdi-\tdo", "e s\tk Q n\td i:\td @U");
result.add("es-\tcor-\tted", "e s\tk O@\tt V d");
result.add("es-\tcor-\tting", "e s\tk O@\tt I N");
result.add("es-\tcort", "e s\tk O@ t");
result.add("es-\tcorts", "e s\tk O@ t s");
result.add("es-\tki-\tmos", "e s\tk I\tm @U z");
result.add("es-\tmark", "e s\tm Q@ k");
result.add("es-\tme-\trel-\tda", "e s\tm @r\te l\td V");
result.add("es-\tmond", "e z\tm V n d");
result.add("es-\tpa-\tda", "eI s\tp Q\td V");
result.add("es-\tpa-\tlier", "e s\tp { l\tj @r");
result.add("es-\tpa-\tna", "e s\tp { n\tj V");
result.add("es-\tpa-\tno-\tla", "e s\tp V\tn @U\tl V");
result.add("es-\tpa-\tnol", "e s\tp Q n\tj @U l");
result.add("es-\tpe-\tran-\tto", "e s\tp @r\t{ n\tt @U");
result.add("es-\tpe-\tran-\tto's", "e s\tp @r\t{ n\tt @U z");
result.add("es-\tpecial-\tly", "V s\tp e S\tl i:");
result.add("es-\tpi-\tnal", "eI s\tp i:\tn V l");
result.add("es-\tpi-\tno", "eI s\tp i:\tn @U");
result.add("es-\tpi-\tno-\tza", "eI s\tp i:\tn @U\tz V");
result.add("es-\tpi-\to-\tnage", "e s\tp i:\tV\tn Q dZ");
result.add("es-\tpo-\tsi-\tto", "e s\tp V\tz i:\tt @U");
result.add("es-\tpou-\tses", "V s\tp aU\tz V z");
result.add("es-\tpou-\tsing", "V s\tp aU\tz I N");
result.add("es-\tpouse", "V s\tp aU z");
result.add("es-\tpoused", "V s\tp aU z d");
result.add("es-\tpres-\tso", "e s\tp r e\ts @U");
result.add("es-\tprit", "e s\tp r i:");
result.add("es-\tprit's", "e s\tp r i: z");
result.add("es-\tpy", "e s\tp i:");
result.add("es-\tpy's", "e s\tp i: z");
result.add("es-\tquire", "e s\tk w aI r");
result.add("es-\tquire's", "e s\tk w aI r z");
result.add("es-\tsa", "e\ts V");
result.add("es-\tsay", "e\ts eI");
result.add("es-\tsay-\tist", "e\ts eI\tI s t");
result.add("es-\tsays", "e\ts eI z");
result.add("es-\tse-\tx's", "e\ts I k\ts V z");
result.add("es-\tsen", "e\ts V n");
result.add("es-\tsen-\ttial", "V\ts e n\tS V l");
result.add("es-\tsen-\ttial-\tly", "V\ts e n\tS V\tl i:");
result.add("es-\tsen-\ttials", "V\ts e n\ttS V l z");
result.add("es-\tsence", "e\ts V n s");
result.add("es-\tses", "e\ts V z");
result.add("es-\tsex", "e\ts I k s");
result.add("es-\tsie", "e\ts i:");
result.add("es-\tsig", "e\ts I g");
result.add("es-\tso", "e\ts @U");
result.add("es-\tta", "e s\tt V");
result.add("es-\ttab-\tli-\tshes", "V s\tt { b\tl I\tS V z");
result.add("es-\ttab-\tli-\tshing", "V s\tt { b\tl I\tS I N");
result.add("es-\ttab-\tlish", "V s\tt { b\tl I S");
result.add("es-\ttab-\tlish-\tment", "V s\tt { b\tl I S\tm V n t");
result.add("es-\ttab-\tlish-\tments", "V s\tt { b\tl I S\tm V n t s");
result.add("es-\ttab-\tlish-\tment's", "V s\tt { b\tl I S\tm V n t s");
result.add("es-\ttab-\tlished", "V s\tt { b\tl I S t");
result.add("es-\ttate", "V s\tt eI t");
result.add("es-\ttates", "V s\tt eI t s");
result.add("es-\ttate's", "V s\tt eI t s");
result.add("es-\tte-\tban", "e s\tt V\tb Q n");
result.add("es-\tteem", "V s\tt i: m");
result.add("es-\tteemed", "e s\tt i: m d");
result.add("es-\ttel", "e s\tt V l");
result.add("es-\ttel-\tla", "e s\tt e\tl V");
result.add("es-\ttell", "e s\tt V l");
result.add("es-\ttelle", "e s\tt e l");
result.add("es-\tter", "e s\tt @r");
result.add("es-\tters", "e s\tt @r z");
result.add("es-\ttes", "e s\tt i: z");
result.add("es-\ttey", "e s\tt i:");
result.add("es-\tther", "e s\tt @r");
result.add("es-\tti-\tma-\tble", "e s\tt V\tm V\tb V l");
result.add("es-\tti-\tma-\tted", "e s\tt V\tm eI\tt I d");
result.add("es-\tti-\tma-\tting", "e s\tt V\tm eI\tt I N");
result.add("es-\tti-\tma-\ttion", "e s\tt V\tm eI\tS V n");
result.add("es-\tti-\tma-\ttions", "e s\tt V\tm eI\tS V n z");
result.add("es-\tti-\tma-\ttor", "V s\tt I\tm V\tt @r");
result.add("es-\tti-\tma-\ttors", "V s\tt I\tm V\tt @r z");
result.add("es-\tti-\tmate", "e s\tt V\tm V t");
result.add("es-\tti-\tmates", "e s\tt V\tm V t s");
result.add("es-\ttill", "eI s\tt i: l");
result.add("es-\ttis", "e s\tt I s");
result.add("es-\tto-\tni-\ta", "e s\tt @U\tn i:\tV");
result.add("es-\tto-\tni-\tan", "e s\tt @U\tn i:\tV n");
result.add("es-\tto-\tni-\tans", "e s\tt @U\tn i:\tV n z");
result.add("es-\ttra-\tda", "e s\tt r Q\td V");
result.add("es-\ttrange", "e s\tt r eI n dZ");
result.add("es-\ttrange-\tment", "V s\tt r eI n\tdZ m V n t");
result.add("es-\ttranged", "e s\tt r eI n dZ d");
result.add("es-\ttrel-\tla", "e s\tt r e\tl V");
result.add("es-\ttrich", "e s\tt r I k");
result.add("es-\ttridge", "e s\tt r I dZ");
result.add("es-\ttrin", "e s\tt r I n");
result.add("es-\ttro-\tgen", "e s\tt r V\tdZ V n");
result.add("es-\ttro-\tgens", "e s\tt r V\tdZ V n z");
result.add("es-\ttrous", "e s\tt r V s");
result.add("es-\ttrus", "e s\tt r V s");
result.add("es-\ttu-\ta-\tries", "e s\ttS u:\te@\ti: z");
result.add("es-\ttu-\ta-\try", "e s\ttS u:\te@\ti:");
result.add("esch", "e S");
result.add("esh", "e S");
result.add("esme", "e z m");
result.add("esp-\tla-\tnade", "e s\tp l V\tn Q d");
result.add("ess", "e s");
result.add("esse", "e s");
result.add("este", "e s t");
result.add("et", "e t");
result.add("et-\tce-\tte-\tra", "e t\ts e\tt @r\tV");
result.add("et-\tches", "e\ttS V z");
result.add("et-\tching", "e\ttS I N");
result.add("et-\tchings", "e\ttS I N z");
result.add("et-\tna", "e t\tn V");
result.add("et-\trus-\tcan", "I t\tr V s\tk V n");
result.add("et-\trus-\tcans", "I t\tr V s\tk V n z");
result.add("et-\tta", "e\tt V");
result.add("et-\tters", "e\tt @r z");
result.add("et-\ttie", "e\tt i:");
result.add("et-\ttin-\tger", "e\tt I\tN @r");
result.add("et-\ttin-\tger's", "e\tt I\tN @r z");
result.add("et-\tty", "e\tt i:");
result.add("et-\tzel", "e t\tz V l");
result.add("et-\tzel's", "e t\tz V l z");
result.add("etch", "e tS");
result.add("etched", "e tS t");
result.add("eth-\tni-\tcal", "e T\tn I\tk V l");
result.add("eth-\tni-\tci-\tty", "e T\tn I\ts I\tt i:");
result.add("eth-\tnic", "e T\tn I k");
result.add("eth-\tnical-\tly", "e T\tn I k\tl i:");
result.add("eth-\tnics", "e T\tn I k s");
result.add("eth-\tno-\tcent-\tri-\tsm", "e T\tn @U\ts e n\tt r I\tz V m");
result.add("eth-\tno-\tcent-\tric", "e T\tn @U\ts e n\tt r I k");
result.add("eth-\tno-\tgra-\tphic", "e T\tn V g\tr {\tf I k");
result.add("eth-\tno-\tlo-\tgy", "e T\tn Q\tl V\tdZ i:");
result.add("eth-\tno-\tmu-\tsi-\tco-\tlo-\tgist", "e T\tn V m\tj u:\tz V\tk Q\tl V\tg V s t");
result.add("eth-\tno-\ts's", "e T\tn V\ts V z");
result.add("eth-\tnos", "e T\tn @U s");
result.add("eu-\tbank", "j u:\tb { N k");
result.add("eu-\tca-\tlyp-\tti", "j u:\tk V\tl I p\tt aI");
result.add("eu-\tca-\tlyp-\ttus", "j u:\tk V\tl I p\tt V s");
result.add("eu-\tcha-\trist", "j u:\tk @r\tI s t");
result.add("eu-\tchre", "j u:\tk @r");
result.add("eu-\tchred", "j u:\tk @r d");
result.add("eu-\tdo-\tcia", "j u:\td @U\ttS V");
result.add("eu-\tdo-\tra", "j u:\td O@\tV");
result.add("eu-\tdo-\tsi-\ta", "j u:\td @U\ts i:\tV");
result.add("eu-\tdo-\txi-\ta", "j u:\td Q k\ts i:\tV");
result.add("eu-\tge-\tni-\ta", "j u:\tdZ i:\tn i:\tV");
result.add("eu-\tge-\tni-\ta's", "j u:\tdZ i:\tn i:\tV z");
result.add("eu-\tge-\tni-\to", "j u:\tdZ i:\tn i:\t@U");
result.add("eu-\tge-\tni-\to's", "j u:\tdZ i:\tn i:\t@U z");
result.add("eu-\tge-\tnic", "j u:\tdZ e\tn I k");
result.add("eu-\tge-\tnics", "j u:\tdZ e\tn I k s");
result.add("eu-\tge-\tnie", "j u:\tdZ i:\tn i:");
result.add("eu-\tgene", "j u:\tdZ i: n");
result.add("eu-\tla", "j u:\tl V");
result.add("eu-\tler", "OI\tl @r");
result.add("eu-\tlo-\tgies", "j u:\tl V\tdZ i: z");
result.add("eu-\tlo-\tgize", "j u:\tl V\tdZ aI z");
result.add("eu-\tlo-\tgized", "j u:\tl V\tdZ aI z d");
result.add("eu-\tlo-\tgy", "j u:\tl V\tdZ i:");
result.add("eu-\tlo-\tgy's", "j u:\tl V\tdZ i: z");
result.add("eu-\tnice", "j u:\tn I s");
result.add("eu-\tpho-\tri-\ta", "j u:\tf O@\ti:\tV");
result.add("eu-\tpho-\tric", "j u:\tf Q@\tI k");
result.add("eu-\tphra-\ttes", "j u: f\tr eI\tt i: z");
result.add("eu-\tra-\tsia", "j U@\teI\tZ V");
result.add("eu-\tra-\tsian", "j U@\teI\tZ V n");
result.add("eu-\tre-\tka", "j U@\ti:\tk V");
result.add("eu-\tro", "j u:\tr @U");
result.add("eu-\tro-\tbond", "j u:\tr @U\tb Q n d");
result.add("eu-\tro-\tbonds", "j u:\tr @U\tb Q n d z");
result.add("eu-\tro-\tdol-\tlar", "j u:\tr @U\td Q\tl @r");
result.add("eu-\tro-\tdol-\tlars", "j u:\tr @U\td Q\tl @r z");
result.add("eu-\tro-\tfigh-\tter", "j u:\tr @U\tf aI\tt @r");
result.add("eu-\tro-\tmar-\tket", "j u:\tr @U\tm Q@\tk V t");
result.add("eu-\tro-\tmar-\tkets", "j u:\tr @U\tm Q@\tk V t s");
result.add("eu-\tro-\tpa", "j U@\t@U\tp V");
result.add("eu-\tro-\tpe-\tan", "j U@\tV\tp i:\tV n");
result.add("eu-\tro-\tpe-\tans", "j U@\tV\tp i:\tV n z");
result.add("eu-\tro-\tphile", "j U@\t@U\tf aI l");
result.add("eu-\tro-\tphiles", "j U@\t@U\tf aI l z");
result.add("eu-\tro-\tpi-\tum", "j U@\t@U\tp i:\tV m");
result.add("eu-\tro-\ttun-\tnel", "j u:\tr @U\tt V\tn V l");
result.add("eu-\tro-\ttun-\tnel's", "j U@\t@U\tt V\tn V l z");
result.add("eu-\troc-\trat", "j u:\tr V k\tr { t");
result.add("eu-\troc-\trats", "j u:\tr V k\tr { t s");
result.add("eu-\trope", "j U@\tV p");
result.add("eu-\trope's", "j U@\tV p s");
result.add("eu-\tros-\tter-\tling", "j u:\tr @U s\tt @r\tl I N");
result.add("eu-\tse-\tbi-\to", "j u:\ts i:\tb i:\t@U");
result.add("eu-\tsta-\tchi-\tan", "j u: s\tt eI\tk i:\tV n");
result.add("eu-\tsta-\tcia", "j u: s\tt Q\ttS V");
result.add("eu-\tstace", "j u: s\tt V s");
result.add("eu-\ttha-\tna-\tsia", "j u:\tT V\tn eI\tZ V");
result.add("eu-\ttha-\tna-\tsia's", "j u:\tT V\tn eI\tZ V z");
result.add("eu-\ttha-\tnize", "j u:\tT V\tn aI z");
result.add("euc-\tle-\ta", "j u: k\tl i:\tV");
result.add("euc-\tlid", "j u: k\tl I d");
result.add("eure", "@r");
result.add("eus-\ttis", "j u: s\tt I s");
result.add("ev", "e v");
result.add("eve", "i: v");
result.add("eve-\tning", "i: v\tn I N");
result.add("eve-\tnings", "i: v\tn I N z");
result.add("eve-\tning's", "i: v\tn I N z");
result.add("eve-\try-\tbo-\tdy", "e v\tr i:\tb Q\td i:");
result.add("eve-\try-\tbo-\tdy's", "e v\tr i:\tb Q\td i: z");
result.add("eve-\try-\tday", "e v\tr i:\td eI");
result.add("eve-\try-\tman", "e v\tr i:\tm V n");
result.add("eve-\try-\tman's", "e v\tr i:\tm V n z");
result.add("eve-\try-\tone", "e v\tr i:\tw V n");
result.add("eve-\try-\tone's", "e v\tr i:\tw V n z");
result.add("eve-\try-\tplace", "e v\tr i: p\tl eI s");
result.add("eve-\try-\tthing", "e v\tr i:\tT I N");
result.add("eve-\try-\twhere", "e v\tr i:\tw e@");
result.add("eves", "i: v z");
result.add("ewe", "j u:");
result.add("ewes", "j u: z");
result.add("ex", "e k s");
result.add("ex-\tboy-\tfriend", "e k\ts b OI f\tr e n d");
result.add("ex-\tca-\tli-\tbur", "e k\ts k {\tl I\tb @r");
result.add("ex-\tca-\tva-\tted", "e k\ts k V\tv eI\tt V d");
result.add("ex-\tca-\tva-\tting", "e k\ts k V\tv eI\tt I N");
result.add("ex-\tca-\tva-\ttion", "e k\ts k V\tv eI\tS V n");
result.add("ex-\tca-\tva-\ttions", "e k\ts k V\tv eI\tS V n z");
result.add("ex-\tca-\tva-\ttor", "e k\ts k V\tv eI\tt @r");
result.add("ex-\tca-\tva-\ttors", "e k\ts k V\tv eI\tt @r z");
result.add("ex-\tca-\tvate", "e k\ts k V\tv eI t");
result.add("ex-\tced-\trin", "e k\ts e d\tr I n");
result.add("ex-\tcee-\tded", "I k\ts i:\td V d");
result.add("ex-\tcee-\tding", "I k\ts i:\td I N");
result.add("ex-\tcee-\tding-\tly", "I k\ts i:\td I N\tl i:");
result.add("ex-\tceed", "I k\ts i: d");
result.add("ex-\tceeds", "I k\ts i: d z");
result.add("ex-\tcel", "I k\ts e l");
result.add("ex-\tcel-\tlence", "e k\ts V\tl V n s");
result.add("ex-\tcel-\tlent", "e k\ts V\tl V n t");
result.add("ex-\tcel-\tlent-\tly", "e k\ts V\tl V n\tt l i:");
result.add("ex-\tcel-\tling", "I k\ts e\tl I N");
result.add("ex-\tcel-\tsi-\tor", "I k\ts e l\ts i:\t@r");
result.add("ex-\tcelled", "I k\ts e l d");
result.add("ex-\tcels", "I k\ts e l z");
result.add("ex-\tcep-\tted", "I k\ts e p\tt V d");
result.add("ex-\tcep-\tting", "e k\ts e p\tt I N");
result.add("ex-\tcep-\ttio-\tnal", "I k\ts e p\tS V\tn V l");
result.add("ex-\tcep-\ttio-\tnal-\tly", "I k\ts e p\tS V\tn V\tl i:");
result.add("ex-\tcep-\ttion", "I k\ts e p\tS V n");
result.add("ex-\tcep-\ttions", "I k\ts e p\tS V n z");
result.add("ex-\tcept", "I k\ts e p t");
result.add("ex-\tcerp-\tted", "e k\ts @r p\tt I d");
result.add("ex-\tcerpt", "e k\ts @r p t");
result.add("ex-\tcerpts", "e k\ts @r p t s");
result.add("ex-\tces-\tses", "e k\ts e\ts V z");
result.add("ex-\tces-\tsive", "I k\ts e\ts I v");
result.add("ex-\tces-\tsive-\tly", "I k\ts e\ts I v\tl i:");
result.add("ex-\tcess", "e k\ts e s");
result.add("ex-\tchan-\tgea-\tble", "I k\ts tS eI n\tdZ V\tb V l");
result.add("ex-\tchan-\tger", "I k\ts tS eI n\tdZ @r");
result.add("ex-\tchan-\tgers", "I k\ts tS eI n\tdZ @r z");
result.add("ex-\tchan-\tges", "I k\ts tS eI n\tdZ V z");
result.add("ex-\tchan-\tging", "I k\ts tS eI n\tdZ I N");
result.add("ex-\tchange", "I k\ts tS eI n dZ");
result.add("ex-\tchanged", "I k\ts tS eI n dZ d");
result.add("ex-\tche-\tquer", "e k\ts tS e\tk @r");
result.add("ex-\tci-\tmer", "e k\ts I\tm @r");
result.add("ex-\tci-\tses", "e k\ts aI\tz V z");
result.add("ex-\tci-\tsion", "I k\ts I\tZ V n");
result.add("ex-\tci-\tta-\tble", "I k\ts aI\tt V\tb V l");
result.add("ex-\tci-\tta-\ttion", "e k\ts aI\tt eI\tS V n");
result.add("ex-\tci-\tted", "I k\ts aI\tt V d");
result.add("ex-\tci-\tted-\tly", "I k\ts aI\tt V d\tl i:");
result.add("ex-\tci-\tting", "I k\ts aI\tt I N");
result.add("ex-\tcise", "e k\ts aI s");
result.add("ex-\tcised", "e k\ts aI z d");
result.add("ex-\tcite", "I k\ts aI t");
result.add("ex-\tcite-\tment", "I k\ts aI t\tm V n t");
result.add("ex-\tcites", "I k\ts aI t s");
result.add("ex-\tco-\tri-\ta-\tted", "e k\ts k O@\ti:\teI\tt V d");
result.add("ex-\tco-\tri-\ta-\tting", "e k\ts k O@\ti:\teI\tt I N");
result.add("ex-\tco-\tri-\ta-\ttion", "e k\ts k O@\ti:\teI\tS V n");
result.add("ex-\tco-\tri-\tate", "e k\ts k O@\ti:\teI t");
result.add("ex-\tcom-\tmu-\tni-\tca-\tted", "e k\ts k V m\tj u:\tn V\tk eI\tt V d");
result.add("ex-\tcom-\tmu-\tni-\tca-\ttion", "e k\ts k V m\tj u:\tn V\tk eI\tS V n");
result.add("ex-\tcom-\tmu-\tni-\tcate", "e k\ts k V m\tj u:\tn V\tk eI t");
result.add("ex-\tcu-\tsa-\tble", "I k\ts k j u:\tz V\tb V l");
result.add("ex-\tcu-\tses", "I k\ts k j u:\ts V z");
result.add("ex-\tcu-\tsing", "I k\ts k j u:\tz I N");
result.add("ex-\tcul-\tpa-\tto-\try", "e k\ts k V l\tp V\tt O@\ti:");
result.add("ex-\tcul-\tpate", "e k\ts k V l\tp eI t");
result.add("ex-\tcur-\tsion", "I k\ts k @r\tZ V n");
result.add("ex-\tcur-\tsions", "I k\ts k @r\tZ V n z");
result.add("ex-\tcuse", "I k\ts k j u: s");
result.add("ex-\tcused", "I k\ts k j u: z d");
result.add("ex-\tfo-\tli-\ta-\ttion", "e k\ts f @U\tl i:\teI\tS V n");
result.add("ex-\tfo-\tli-\tate", "e k\ts f @U\tl i:\teI t");
result.add("ex-\tha-\tla-\ttion", "e k\ts h V\tl eI\tS V n");
result.add("ex-\thale", "e k\ts h eI l");
result.add("ex-\tline", "e k\ts l aI n");
result.add("ex-\tpan-\tda-\tble", "I k\ts p { n\td V\tb V l");
result.add("ex-\tpan-\tded", "I k\ts p { n\td V d");
result.add("ex-\tpan-\tding", "I k\ts p { n\td I N");
result.add("ex-\tpan-\tses", "I k\ts p { n\ts V z");
result.add("ex-\tpan-\tsio-\tna-\try", "I k\ts p { n\tS V\tn e@\ti:");
result.add("ex-\tpan-\tsio-\tni-\tsm", "I k\ts p { n\ttS V\tn I\tz V m");
result.add("ex-\tpan-\tsio-\tnist", "I k\ts p { n\ttS V\tn I s t");
result.add("ex-\tpan-\tsion", "I k\ts p { n\tS V n");
result.add("ex-\tpan-\tsions", "I k\ts p { n\tS V n z");
result.add("ex-\tpan-\tsion's", "I k\ts p { n\ttS V n z");
result.add("ex-\tpan-\tsive", "I k\ts p { n\ts I v");
result.add("ex-\tpand", "I k\ts p { n d");
result.add("ex-\tpands", "I k\ts p { n d z");
result.add("ex-\tpanse", "I k\ts p { n s");
result.add("ex-\tpat-\tri-\ta-\ttion", "e k\ts p eI t\tr i:\teI\tS V n");
result.add("ex-\tpat-\tri-\tate", "e k\ts p eI t\tr i:\teI t");
result.add("ex-\tpat-\tri-\tates", "e k\ts p eI t\tr i:\teI t s");
result.add("ex-\tpe-\tdi-\ten-\tcy", "I k\ts p i:\td i:\tV n\ts i:");
result.add("ex-\tpe-\tdi-\tence", "I k\ts p i:\td i:\tV n s");
result.add("ex-\tpe-\tdi-\tent", "I k\ts p i:\td i:\tV n t");
result.add("ex-\tpe-\tdi-\tted", "e k\ts p V\td aI\tt V d");
result.add("ex-\tpe-\tdi-\tting", "e k\ts p V\td aI\tt I N");
result.add("ex-\tpe-\tdi-\ttio-\tna-\try", "e k\ts p V\td I\tS V\tn e@\ti:");
result.add("ex-\tpe-\tdi-\ttion", "e k\ts p V\td I\tS V n");
result.add("ex-\tpe-\tdi-\ttions", "e k\ts p V\td I\tS V n z");
result.add("ex-\tpe-\tdi-\ttious", "e k\ts p V\td I\tS V s");
result.add("ex-\tpe-\tdi-\ttious-\tly", "e k\ts p V\td I\tS V s\tl i:");
result.add("ex-\tpe-\tdite", "e k\ts p V\td aI t");
result.add("ex-\tpe-\tri-\ten-\tces", "I k\ts p I@\ti:\tV n\ts V z");
result.add("ex-\tpe-\tri-\ten-\tcing", "I k\ts p I@\ti:\tV n\ts I N");
result.add("ex-\tpe-\tri-\ten-\ttial", "e k\ts p e@\ti:\te n\tS V l");
result.add("ex-\tpe-\tri-\tence", "I k\ts p I@\ti:\tV n s");
result.add("ex-\tpe-\tri-\tenced", "I k\ts p I@\ti:\tV n s t");
result.add("ex-\tpe-\tri-\tmen-\tta-\tlist", "I k\ts p e@\tI\tm e n\tt V\tl I s t");
result.add("ex-\tpe-\tri-\tmen-\tta-\ttion", "I k\ts p e@\tI\tm e n\tt eI\tS V n");
result.add("ex-\tpe-\tri-\tmen-\ttal", "I k\ts p e@\tI\tm e n\tt V l");
result.add("ex-\tpe-\tri-\tmen-\ttal-\tly", "I k\ts p e@\tI\tm e n\tt V\tl i:");
result.add("ex-\tpe-\tri-\tmen-\tted", "I k\ts p e@\tI\tm e n\tt I d");
result.add("ex-\tpe-\tri-\tmen-\tter", "I k\ts p e@\tI\tm e n\tt @r");
result.add("ex-\tpe-\tri-\tmen-\tters", "I k\ts p e@\tI\tm e n\tt @r z");
result.add("ex-\tpe-\tri-\tmen-\tting", "e k\ts p e@\tI\tm e n\tt I N");
result.add("ex-\tpe-\tri-\tment", "I k\ts p e@\tI\tm e n t");
result.add("ex-\tpe-\tri-\tments", "I k\ts p e@\tI\tm e n t s");
result.add("ex-\tpe-\tri-\tment's", "I k\ts p e@\tI\tm e n t s");
result.add("ex-\tpec-\tta-\ttion", "e k\ts p e k\tt eI\tS V n");
result.add("ex-\tpec-\tta-\ttions", "e k\ts p e k\tt eI\tS V n z");
result.add("ex-\tpec-\ttan-\tcies", "I k\ts p e k\tt V n\ts i: z");
result.add("ex-\tpec-\ttan-\tcy", "I k\ts p e k\tt V n\ts i:");
result.add("ex-\tpec-\ttant", "I k\ts p e k\tt V n t");
result.add("ex-\tpec-\tted", "I k\ts p e k\tt V d");
result.add("ex-\tpec-\tting", "I k\ts p e k\tt I N");
result.add("ex-\tpec-\tto-\trant", "I k\ts p e k\tt @r\tV n t");
result.add("ex-\tpect", "I k\ts p e k t");
result.add("ex-\tpects", "I k\ts p e k t s");
result.add("ex-\tpel", "I k\ts p e l");
result.add("ex-\tpel-\tling", "I k\ts p e\tl I N");
result.add("ex-\tpelled", "I k\ts p e l d");
result.add("ex-\tpen-\tda-\tble", "I k\ts p e n\td V\tb V l");
result.add("ex-\tpen-\tded", "I k\ts p e n\td V d");
result.add("ex-\tpen-\tdi-\tture", "I k\ts p e n\td I\ttS @r");
result.add("ex-\tpen-\tdi-\ttures", "I k\ts p e n\td I\ttS @r z");
result.add("ex-\tpen-\tding", "e k\ts p e n\td I N");
result.add("ex-\tpen-\tses", "I k\ts p e n\ts V z");
result.add("ex-\tpen-\tsing", "I k\ts p e n\ts I N");
result.add("ex-\tpen-\tsive", "I k\ts p e n\ts I v");
result.add("ex-\tpen-\tsive-\tly", "e k\ts p e n\ts I v\tl i:");
result.add("ex-\tpend", "I k\ts p e n d");
result.add("ex-\tpense", "I k\ts p e n s");
result.add("ex-\tper-\ttise", "e k\ts p @r\tt i: z");
result.add("ex-\tpert", "e k\ts p @r t");
result.add("ex-\tpert-\tly", "e k\ts p @r t\tl i:");
result.add("ex-\tperts", "e k\ts p @r t s");
result.add("ex-\tpert's", "e k\ts p @r t s");
result.add("ex-\tpi-\tate", "e k\ts p i:\teI t");
result.add("ex-\tpi-\tra-\ttion", "e k\ts p @r\teI\tS V n");
result.add("ex-\tpi-\tra-\ttions", "e k\ts p @r\teI\tS V n z");
result.add("ex-\tpi-\tra-\tto-\try", "I k\ts p aI\tr V\tt O@\ti:");
result.add("ex-\tpi-\tres", "I k\ts p aI\t@r z");
result.add("ex-\tpi-\tring", "I k\ts p aI\tr I N");
result.add("ex-\tpi-\try", "e k\ts p aI\tr i:");
result.add("ex-\tpire", "I k\ts p aI r");
result.add("ex-\tpired", "I k\ts p aI r d");
result.add("ex-\tplain", "I k\ts p l eI n");
result.add("ex-\tpo", "e k\ts p @U");
result.add("ex-\tpo-\tnen-\ttial", "e k\ts p @U\tn e n\ttS V l");
result.add("ex-\tpo-\tnen-\ttial-\tly", "e k\ts p @U\tn e n\tS V\tl i:");
result.add("ex-\tpo-\tnent", "e k\ts p @U\tn V n t");
result.add("ex-\tpo-\tnents", "I k\ts p @U\tn V n t s");
result.add("ex-\tpo-\tses", "I k\ts p @U\tz V z");
result.add("ex-\tpo-\tsi-\ttion", "e k\ts p V\tz I\tS V n");
result.add("ex-\tpo-\tsi-\ttions", "e k\ts p V\tz I\tS V n z");
result.add("ex-\tpo-\tsing", "I k\ts p @U\tz I N");
result.add("ex-\tpo-\tsure", "I k\ts p @U\tZ @r");
result.add("ex-\tpo-\tsures", "I k\ts p @U\tZ @r z");
result.add("ex-\tpor-\tta-\tble", "e k\ts p O@\tt V\tb V l");
result.add("ex-\tpor-\tted", "I k\ts p O@\tt V d");
result.add("ex-\tpor-\tter", "I k\ts p O@\tt @r");
result.add("ex-\tpor-\tters", "I k\ts p O@\tt @r z");
result.add("ex-\tpor-\tting", "I k\ts p O@\tt I N");
result.add("ex-\tport", "e k\ts p O@ t");
result.add("ex-\tports", "e k\ts p O@ t s");
result.add("ex-\tpos", "e k\ts p @U z");
result.add("ex-\tpose", "I k\ts p @U z");
result.add("ex-\tposed", "I k\ts p @U z d");
result.add("ex-\tpoun-\tded", "I k\ts p aU n\td V d");
result.add("ex-\tpoun-\tding", "I k\ts p aU n\td I N");
result.add("ex-\tpound", "I k\ts p aU n d");
result.add("ex-\tpounds", "I k\ts p aU n d z");
result.add("ex-\tpres-\tses", "I k\ts p r e\ts V z");
result.add("ex-\tpres-\tsing", "I k\ts p r e\ts I N");
result.add("ex-\tpres-\tsio-\tni-\tsm", "I k\ts p r e\tS V\tn I\tz V m");
result.add("ex-\tpres-\tsio-\tnis-\ttic", "I k\ts p r e\tS V\tn I s\tt I k");
result.add("ex-\tpres-\tsio-\tnist", "I k\ts p r e\tS V\tn I s t");
result.add("ex-\tpres-\tsion", "I k\ts p r e\tS V n");
result.add("ex-\tpres-\tsion-\tless", "I k\ts p r e\tS V n\tl V s");
result.add("ex-\tpress", "I k\ts p r e s");
result.add("ex-\tpressed", "I k\ts p r e s t");
result.add("ex-\tpul-\tsion", "I k\ts p V l\tS V n");
result.add("ex-\tpul-\tsions", "I k\ts p V l\tS V n z");
result.add("ex-\tpunge", "I k\ts p V n dZ");
result.add("ex-\tpunged", "I k\ts p V n dZ d");
result.add("ex-\tqui-\tsite", "e k\ts k w I\tz I t");
result.add("ex-\tqui-\tsite-\tly", "e k\ts k w I\tz I t\tl i:");
result.add("ex-\ttant", "e k\ts t V n t");
result.add("ex-\tte-\tnu-\ta-\tting", "I k\ts t e n\tj u:\teI\tt I N");
result.add("ex-\tte-\tnu-\tate", "I k\ts t e n\tj u:\teI t");
result.add("ex-\tte-\tri-\tor", "I k\ts t I@\ti:\t@r");
result.add("ex-\tte-\tri-\tors", "e k\ts t I@\ti:\t@r z");
result.add("ex-\tten-\tda-\tble", "e k\ts t e n\td V\tb V l");
result.add("ex-\tten-\tded", "I k\ts t e n\td V d");
result.add("ex-\tten-\tder", "e k\ts t e n\td @r");
result.add("ex-\tten-\tders", "e k\ts t e n\td @r z");
result.add("ex-\tten-\tdi-\tble", "e k\ts t e n\td I\tb V l");
result.add("ex-\tten-\tding", "I k\ts t e n\td I N");
result.add("ex-\tten-\tsion", "I k\ts t e n\tS V n");
result.add("ex-\tten-\tsions", "I k\ts t e n\tS V n z");
result.add("ex-\tten-\tsive", "I k\ts t e n\ts I v");
result.add("ex-\tten-\tsive-\tly", "I k\ts t e n\ts I v\tl i:");
result.add("ex-\ttend", "I k\ts t e n d");
result.add("ex-\ttends", "I k\ts t e n d z");
result.add("ex-\ttent", "I k\ts t e n t");
result.add("ex-\tter-\tmi-\tna-\tted", "I k\ts t @r\tm I\tn eI\tt V d");
result.add("ex-\tter-\tmi-\tna-\tting", "I k\ts t @r\tm I\tn eI\tt I N");
result.add("ex-\tter-\tmi-\tna-\ttion", "I k\ts t @r\tm I\tn eI\tS V n");
result.add("ex-\tter-\tmi-\tna-\ttor", "I k\ts t @r\tm I\tn eI\tt @r");
result.add("ex-\tter-\tmi-\tna-\ttors", "I k\ts t @r\tm I\tn eI\tt @r z");
result.add("ex-\tter-\tmi-\tnate", "I k\ts t @r\tm I\tn eI t");
result.add("ex-\tter-\tmi-\tnates", "I k\ts t @r\tm I\tn eI t s");
result.add("ex-\tter-\tnal", "I k\ts t @r\tn V l");
result.add("ex-\tter-\tnal-\tly", "I k\ts t @r\tn V\tl i:");
result.add("ex-\ttin-\tgui-\tsher", "I k\ts t I N\tg w I\tS @r");
result.add("ex-\ttin-\tgui-\tshers", "I k\ts t I N\tg w I\tS @r z");
result.add("ex-\ttin-\tgui-\tshing", "I k\ts t I N\tg w I\tS I N");
result.add("ex-\ttin-\tguish", "I k\ts t I N\tg w I S");
result.add("ex-\ttin-\tguish-\tment", "I k\ts t I N\tg w I S\tm V n t");
result.add("ex-\ttin-\tguished", "I k\ts t I N\tg w I S t");
result.add("ex-\ttinc-\ttion", "I k\ts t I N\tk S V n");
result.add("ex-\ttinct", "I k\ts t I N k t");
result.add("ex-\ttir-\tpate", "e k\ts t @r\tp eI t");
result.add("ex-\ttol", "I k\ts t @U l");
result.add("ex-\ttol-\tling", "I k\ts t @U\tl I N");
result.add("ex-\ttolled", "I k\ts t @U l d");
result.add("ex-\ttols", "I k\ts t @U l z");
result.add("ex-\tton", "e k\ts t V n");
result.add("ex-\ttor-\tted", "I k\ts t O@\tt V d");
result.add("ex-\ttor-\tting", "I k\ts t O@\tt I N");
result.add("ex-\ttor-\ttio-\tnate", "I k\ts t O@\tS V\tn V t");
result.add("ex-\ttor-\ttion", "I k\ts t O@\tS V n");
result.add("ex-\ttort", "I k\ts t O@ t");
result.add("ex-\txon", "e k\ts Q n");
result.add("ex-\txon's", "e k\ts Q n z");
result.add("exc-\tla-\tma-\ttion", "e k\ts k l V\tm eI\tS V n");
result.add("exc-\tla-\tma-\ttion-\tpoint", "e k\ts k l V\tm eI\tS V n\tp OI n t");
result.add("exc-\tla-\tma-\ttions", "e k\ts k l V\tm eI\tS V n z");
result.add("exc-\tlai-\tming", "I k\ts k l eI\tm I N");
result.add("exc-\tlaim", "I k\ts k l eI m");
result.add("exc-\tlaimed", "I k\ts k l eI m d");
result.add("exc-\tlaims", "I k\ts k l eI m z");
result.add("exc-\tlu-\tda-\tble", "I k\ts k l u:\td V\tb V l");
result.add("exc-\tlu-\tded", "I k\ts k l u:\td V d");
result.add("exc-\tlu-\tding", "I k\ts k l u:\td I N");
result.add("exc-\tlu-\tsi-\tvi-\tty", "e k\ts k l u:\ts I\tv I\tt i:");
result.add("exc-\tlu-\tsio-\tna-\try", "I k\ts k l u:\tZ V\tn e@\ti:");
result.add("exc-\tlu-\tsion", "I k\ts k l u:\tZ V n");
result.add("exc-\tlu-\tsions", "I k\ts k l u:\tZ V n z");
result.add("exc-\tlu-\tsive", "I k\ts k l u:\ts I v");
result.add("exc-\tlu-\tsive-\tly", "I k\ts k l u:\ts I v\tl i:");
result.add("exc-\tlu-\tsives", "I k\ts k l u:\ts I v z");
result.add("exc-\tlude", "I k\ts k l u: d");
result.add("exc-\tludes", "I k\ts k l u: d z");
result.add("exc-\tre-\tment", "e k\ts k r V\tm V n t");
result.add("exc-\tre-\ttion", "I k\ts k r i:\tS V n");
result.add("exc-\tre-\tto-\try", "e k\ts k r V\tt O@\ti:");
result.add("exc-\trete", "I k\ts k r i: t");
result.add("exc-\tru-\tci-\ta-\tting", "I k\ts k r u:\tS i:\teI\tt I N");
result.add("exc-\tru-\tci-\ta-\tting-\tly", "e k\ts k r u:\ts i:\teI\tt I N\tl i:");
result.add("excel-\tlen-\tcies", "e k\ts l V n\ts i: z");
result.add("excel-\tlen-\tcy", "e k\ts l V n\ts i:");
result.add("exp-\tla-\tna-\ttion", "e k\ts p l V\tn eI\tS V n");
result.add("exp-\tla-\tna-\ttions", "e k\ts p l V\tn eI\tS V n z");
result.add("exp-\tla-\tna-\tto-\try", "I k\ts p l {\tn V\tt O@\ti:");
result.add("exp-\tlai-\tna-\tble", "I k\ts p l eI\tn V\tb V l");
result.add("exp-\tlai-\tning", "I k\ts p l eI\tn I N");
result.add("exp-\tlained", "I k\ts p l eI n d");
result.add("exp-\tlains", "I k\ts p l eI n z");
result.add("exp-\tle-\ttive", "e k\ts p l V\tt I v");
result.add("exp-\tle-\ttives", "e k\ts p l V\tt I v z");
result.add("exp-\tli-\tca-\ttion", "e k\ts p l I\tk eI\tS V n");
result.add("exp-\tli-\tcit", "I k\ts p l I\ts I t");
result.add("exp-\tli-\tcit-\tly", "I k\ts p l I\ts I t\tl i:");
result.add("exp-\tlo-\tded", "I k\ts p l @U\td V d");
result.add("exp-\tlo-\tding", "I k\ts p l @U\td I N");
result.add("exp-\tlo-\tra-\ttion", "e k\ts p l @r\teI\tS V n");
result.add("exp-\tlo-\tra-\ttions", "e k\ts p l @r\teI\tS V n z");
result.add("exp-\tlo-\tra-\ttion's", "e k\ts p l @r\teI\tS V n z");
result.add("exp-\tlo-\tra-\tto-\try", "I k\ts p l O@\tV\tt O@\ti:");
result.add("exp-\tlo-\trer", "I k\ts p l O@\t@r");
result.add("exp-\tlo-\trers", "I k\ts p l O@\t@r z");
result.add("exp-\tlo-\tring", "I k\ts p l O@\tI N");
result.add("exp-\tlo-\tsion", "I k\ts p l @U\tZ V n");
result.add("exp-\tlo-\tsions", "I k\ts p l @U\tZ V n z");
result.add("exp-\tlo-\tsive", "I k\ts p l @U\ts I v");
result.add("exp-\tlo-\tsive-\tly", "e k\ts p l @U\ts I v\tl i:");
result.add("exp-\tlo-\tsives", "I k\ts p l @U\ts I v z");
result.add("exp-\tlode", "I k\ts p l @U d");
result.add("exp-\tlodes", "I k\ts p l @U d z");
result.add("exp-\tloi-\tta-\ttion", "e k\ts p l OI\tt eI\tS V n");
result.add("exp-\tloi-\tta-\ttive", "e k\ts p l OI\tt V\tt I v");
result.add("exp-\tloi-\tted", "e k\ts p l OI\tt V d");
result.add("exp-\tloi-\tting", "e k\ts p l OI\tt I N");
result.add("exp-\tloi-\ttive", "I k\ts p l OI\tt I v");
result.add("exp-\tloit", "e k\ts p l OI t");
result.add("exp-\tloits", "e k\ts p l OI t s");
result.add("exp-\tlore", "I k\ts p l O@");
result.add("exp-\tlored", "I k\ts p l O@ d");
result.add("exp-\tlores", "I k\ts p l O@ z");
result.add("exp-\tres-\tsi-\tvi-\tty", "e k\ts p r e\ts I\tv I\tt i:");
result.add("exp-\tres-\tsions", "I k\ts p r e\tS V n z");
result.add("exp-\tres-\tsive", "I k\ts p r e\ts I v");
result.add("exp-\tres-\tso", "I k\ts p e\ts @U");
result.add("exp-\tress-\tly", "e k\ts p r e s\tl i:");
result.add("exp-\tress-\tway", "I k\ts p r e s\tw eI");
result.add("exp-\trop-\tri-\ta-\tted", "e k\ts p r @U p\tr i:\teI\tt V d");
result.add("exp-\trop-\tri-\ta-\ttion", "e k\ts p r @U p\tr i:\teI\tS V n");
result.add("exp-\trop-\tri-\ta-\ttions", "e k\ts p r @U p\tr i:\teI\tS V n z");
result.add("exp-\trop-\tri-\tate", "e k\ts p r @U p\tr i:\teI t");
result.add("ext-\tra", "e k\ts t r V");
result.add("ext-\tra-\tcel-\tlu-\tlar-\tly", "e k\ts t r V\ts e l\tj V\tl @r\tl i:");
result.add("ext-\tra-\tcur-\tri-\tcu-\tlar", "e k\ts t r V\tk @r\tI k\tj V\tl @r");
result.add("ext-\tra-\tdi-\tted", "e k\ts t r V\td aI\tt V d");
result.add("ext-\tra-\tdi-\tting", "e k\ts t r V\td aI\tt I N");
result.add("ext-\tra-\tdi-\ttion", "e k\ts t r V\td I\tS V n");
result.add("ext-\tra-\tdite", "e k\ts t r V\td aI t");
result.add("ext-\tra-\tga-\tlac-\ttic", "e k\ts t r V\tg V\tl { k\tt I k");
result.add("ext-\tra-\tle-\tgal", "e k\ts t r V\tl i:\tg V l");
result.add("ext-\tra-\tma-\tri-\ttal", "e k\ts t r V\tm e@\tV\tt V l");
result.add("ext-\tra-\tne-\tous", "e k\ts t r eI\tn i:\tV s");
result.add("ext-\tra-\tor-\tdi-\tnaire", "e k\ts t r V\tO@\td V\tn e@");
result.add("ext-\tra-\tpo-\tla-\tted", "I k\ts t r {\tp V\tl eI\tt V d");
result.add("ext-\tra-\tpo-\tla-\tting", "I k\ts t r {\tp V\tl eI\tt I N");
result.add("ext-\tra-\tpo-\tla-\ttion", "I k\ts t r {\tp V\tl eI\tS V n");
result.add("ext-\tra-\tpo-\tlate", "I k\ts t r {\tp V\tl eI t");
result.add("ext-\tra-\tva-\tgan-\tza", "I k\ts t r {\tv V\tg { n\tz V");
result.add("ext-\tra-\tva-\tgan-\tzas", "I k\ts t r {\tv V\tg { n\tz V z");
result.add("ext-\tra-\tva-\tgance", "I k\ts t r {\tv V\tg V n s");
result.add("ext-\tra-\tva-\tgant", "I k\ts t r {\tv V\tg V n t");
result.add("ext-\tra-\tva-\tgant-\tly", "e k\ts t r {\tv V\tg V n\tt l i:");
result.add("ext-\trac-\tted", "I k\ts t r { k\tt V d");
result.add("ext-\trac-\tting", "I k\ts t r { k\tt I N");
result.add("ext-\trac-\ttion", "I k\ts t r { k\tS V n");
result.add("ext-\trac-\ttions", "I k\ts t r { k\tS V n z");
result.add("ext-\tract", "I k\ts t r { k t");
result.add("ext-\tracts", "I k\ts t r { k t s");
result.add("ext-\tre-\tmi-\tsm", "e k\ts t r e\tm I\tz V m");
result.add("ext-\tre-\tmi-\tties", "I k\ts t r e\tm I\tt i: z");
result.add("ext-\tre-\tmi-\tty", "I k\ts t r e\tm I\tt i:");
result.add("ext-\tre-\tmist", "I k\ts t r i:\tm I s t");
result.add("ext-\tre-\tmists", "I k\ts t r i:\tm I s t s");
result.add("ext-\treme", "I k\ts t r i: m");
result.add("ext-\treme-\tly", "I k\ts t r i: m\tl i:");
result.add("ext-\tremes", "I k\ts t r i: m z");
result.add("ext-\tri-\tca-\tted", "e k\ts t r I\tk eI\tt I d");
result.add("ext-\tri-\tcate", "e k\ts t r I\tk eI t");
result.add("ext-\trin-\tsic", "e k\ts t r I n\ts I k");
result.add("ext-\tro-\tver-\tted", "e k\ts t r V\tv @r\tt V d");
result.add("ext-\tro-\tvert", "e k\ts t r V\tv @r t");
result.add("ext-\tru-\tded", "I k\ts t r u:\td V d");
result.add("ext-\tru-\tding", "I k\ts t r u:\td I N");
result.add("ext-\tru-\tsion", "I k\ts t r u:\tZ V n");
result.add("ext-\trude", "I k\ts t r u: d");
result.add("extra-\tor-\tdi-\tna-\tri-\tly", "I k\ts t r O@\td I\tn e@\tI\tl i:");
result.add("extra-\tor-\tdi-\tna-\try", "I k\ts t r O@\td I\tn e@\ti:");
result.add("ey-\tdie", "eI\td i:");
result.add("ey-\ter", "aI\t@r");
result.add("ey-\trie", "e@\ti:");
result.add("eyde", "eI d");
result.add("eye", "aI");
result.add("eye-\tball", "aI\tb O: l");
result.add("eye-\tballs", "aI\tb O: l z");
result.add("eye-\tbrow", "aI b\tr aU");
result.add("eye-\tbrows", "aI b\tr aU z");
result.add("eye-\tdrop", "aI d\tr Q p");
result.add("eye-\tdrop-\tper", "aI d\tr Q\tp @r");
result.add("eye-\tdrops", "aI d\tr Q p s");
result.add("eye-\tglas-\tses", "aI g\tl {\ts V z");
result.add("eye-\tglass", "aI g\tl { s");
result.add("eye-\ting", "aI\tI N");
result.add("eye-\tla-\tshes", "aI\tl {\tS V z");
result.add("eye-\tlash", "aI\tl { S");
result.add("eye-\tless", "aI\tl V s");
result.add("eye-\tlet", "aI\tl V t");
result.add("eye-\tlets", "aI\tl V t s");
result.add("eye-\tli-\tner", "aI\tl aI\tn @r");
result.add("eye-\tlid", "aI\tl I d");
result.add("eye-\tlids", "aI\tl I d z");
result.add("eye-\tlike", "aI\tl aI k");
result.add("eye-\tpiece", "aI\tp i: s");
result.add("eye-\tshade", "aI\tS eI d");
result.add("eye-\tsight", "aI\ts aI t");
result.add("eye-\tsore", "aI\ts O@");
result.add("eye-\tspot", "aI s\tp Q t");
result.add("eye-\tstone", "aI s\tt @U n");
result.add("eye-\tstrain", "aI s\tt r eI n");
result.add("eye-\twear", "aI\tw e@");
result.add("eye-\twit-\tnes-\tses", "aI\tw I t\tn V\ts V z");
result.add("eye-\twit-\tness", "aI\tw I t\tn V s");
result.add("eyed", "aI d");
result.add("eyes", "aI z");
result.add("eye's", "aI z");
result.add("eyre", "e@");
result.add("ez-\tra", "e z\tr V");
result.add("ez-\tzo", "e\tz @U");
result.add("f", "e f");
result.add("f-\tm", "e\tf e m");
result.add("f.", "e f");
result.add("fa-\tber", "f eI\tb @r");
result.add("fa-\tber-\tge", "f {\tb @r\tdZ eI");
result.add("fa-\tbi-\ta-\tno", "f Q\tb i:\tQ\tn @U");
result.add("fa-\tbi-\tan", "f eI\tb i:\tV n");
result.add("fa-\tbi-\to", "f Q\tb i:\t@U");
result.add("fa-\tbien", "f {\tb i: n");
result.add("fa-\tble", "f eI\tb V l");
result.add("fa-\tbled", "f eI\tb V l d");
result.add("fa-\tbles", "f eI\tb V l z");
result.add("fa-\tbre", "f eI\tb @r");
result.add("fa-\tbu-\tlous", "f { b\tj V\tl V s");
result.add("fa-\tbu-\tlous-\tly", "f { b\tj u:\tl V s\tl i:");
result.add("fa-\tcade", "f V\ts Q d");
result.add("fa-\tcades", "f V\ts Q d z");
result.add("fa-\tce-\tted", "f {\ts V\tt V d");
result.add("fa-\tce-\ttious", "f V\ts i:\tS V s");
result.add("fa-\tce-\ttious-\tly", "f V\ts i:\tS V s\tl i:");
result.add("fa-\tcer", "f eI\ts @r");
result.add("fa-\tces", "f eI\ts V z");
result.add("fa-\tcet", "f {\ts V t");
result.add("fa-\tcets", "f {\ts V t s");
result.add("fa-\tcet's", "f {\ts V t s");
result.add("fa-\tci-\tli-\tta-\tted", "f V\ts I\tl V\tt eI\tt V d");
result.add("fa-\tci-\tli-\tta-\tting", "f V\ts I\tl V\tt eI\tt I N");
result.add("fa-\tci-\tli-\tta-\ttion", "f V\ts I\tl V\tt eI\tS V n");
result.add("fa-\tci-\tli-\tta-\ttor", "f V\ts I\tl V\tt eI\tt @r");
result.add("fa-\tci-\tli-\tta-\ttors", "f V\ts I\tl V\tt eI\tt @r z");
result.add("fa-\tci-\tli-\tta-\ttor's", "f V\ts I\tl V\tt eI\tt @r z");
result.add("fa-\tci-\tli-\ttate", "f V\ts I\tl V\tt eI t");
result.add("fa-\tci-\tli-\ttates", "f V\ts I\tl V\tt eI t s");
result.add("fa-\tci-\tli-\tties", "f V\ts I\tl V\tt i: z");
result.add("fa-\tci-\tli-\tty", "f V\ts I\tl V\tt i:");
result.add("fa-\tci-\tli-\tty's", "f V\ts I\tl V\tt i: z");
result.add("fa-\tcial", "f eI\tS V l");
result.add("fa-\tcials", "f eI\tS V l z");
result.add("fa-\tcie", "f eI\ts i:");
result.add("fa-\tcile", "f {\ts I l");
result.add("fa-\tcing", "f eI\ts I N");
result.add("fa-\tcings", "f eI\ts I N z");
result.add("fa-\tcul-\tta-\ttive", "f {\tk V l\tt eI\tt I v");
result.add("fa-\tcul-\tties", "f {\tk V l\tt i: z");
result.add("fa-\tcul-\tty", "f {\tk V l\tt i:");
result.add("fa-\tded", "f eI\td V d");
result.add("fa-\tden", "f eI\td V n");
result.add("fa-\tder", "f eI\td @r");
result.add("fa-\tding", "f eI\td I N");
result.add("fa-\tgan", "f eI\tg V n");
result.add("fa-\tgen", "f {\tg V n");
result.add("fa-\tger", "f eI\tg @r");
result.add("fa-\tgin", "f eI\tg I n");
result.add("fa-\they", "f {\th i:");
result.add("fa-\thy", "f eI\th i:");
result.add("fa-\tjar-\tdo", "f Q\tj Q@\td @U");
result.add("fa-\tji-\tta", "f V\tdZ i:\tt V");
result.add("fa-\tji-\ttas", "f V\tdZ i:\tt V z");
result.add("fa-\tker", "f eI\tk @r");
result.add("fa-\tkers", "f eI\tk @r z");
result.add("fa-\tking", "f eI\tk I N");
result.add("fa-\tla-\tfel", "f V\tl Q\tf V l");
result.add("fa-\tma", "f Q\tm V");
result.add("fa-\tmi-\tli-\tari-\tty", "f V\tm I l\tj e@\tV\tt i:");
result.add("fa-\tmi-\tli-\tarize", "f V\tm I l\tj @r\taI z");
result.add("fa-\tmi-\tli-\tarized", "f V\tm I l\tj @r\taI z d");
result.add("fa-\tmi-\tlial", "f V\tm I l\tj V l");
result.add("fa-\tmi-\tliar", "f V\tm I l\tj @r");
result.add("fa-\tmi-\tlies", "f {\tm I\tl i: z");
result.add("fa-\tmi-\tly", "f {\tm I\tl i:");
result.add("fa-\tmi-\tly's", "f {\tm I\tl i: z");
result.add("fa-\tmig-\tli-\tet-\tti", "f V\tm I g\tl i:\te\tt i:");
result.add("fa-\tmine", "f {\tm I n");
result.add("fa-\tmines", "f {\tm I n z");
result.add("fa-\tmous", "f eI\tm V s");
result.add("fa-\tmous-\tly", "f eI\tm V s\tl i:");
result.add("fa-\tna-\tti-\tcal", "f V\tn {\tt I\tk V l");
result.add("fa-\tna-\tti-\tcal-\tly", "f V\tn {\tt I\tk V\tl i:");
result.add("fa-\tna-\tti-\tci-\tsm", "f V\tn {\tt V\ts I\tz V m");
result.add("fa-\tna-\ttic", "f V\tn {\tt I k");
result.add("fa-\tna-\ttics", "f V\tn {\tt I k s");
result.add("fa-\tneu-\til", "f { n\tj u:\tI l");
result.add("fa-\tra-\tday", "f {\tr V\td eI");
result.add("fa-\tra-\tday's", "f {\tr V\td eI z");
result.add("fa-\tra-\tway", "f Q@\tV\tw eI");
result.add("fa-\trah", "f e@\tV");
result.add("fa-\tro", "f e@\t@U");
result.add("fa-\trouk", "f V\tr u: k");
result.add("fa-\tsa-\tno", "f Q\ts Q\tn @U");
result.add("fa-\tshio-\tna-\tble", "f {\tS V\tn V\tb V l");
result.add("fa-\tshio-\tnab-\tly", "f {\tS V\tn V b\tl i:");
result.add("fa-\tshio-\tning", "f {\tS V\tn I N");
result.add("fa-\tshion", "f {\tS V n");
result.add("fa-\tshioned", "f {\tS V n d");
result.add("fa-\tshions", "f {\tS V n z");
result.add("fa-\tshion's", "f {\tS V n z");
result.add("fa-\tso", "f Q\ts @U");
result.add("fa-\tste-\tners", "f {\ts V\tn @r z");
result.add("fa-\tste-\tning", "f {\ts V\tn I N");
result.add("fa-\tste-\tnings", "f {\ts V\tn I N z");
result.add("fa-\tta", "f Q\tt V");
result.add("fa-\tta-\tli-\tsm", "f eI\tt V\tl I\tz V m");
result.add("fa-\tta-\tli-\tties", "f V\tt {\tl V\tt i: z");
result.add("fa-\tta-\tli-\tty", "f V\tt {\tl V\tt i:");
result.add("fa-\tta-\tlis-\ttic", "f eI\tt V\tl I s\tt I k");
result.add("fa-\tta-\tlist", "f eI\tt V\tl I s t");
result.add("fa-\tta-\tlists", "f eI\tt V\tl V s t s");
result.add("fa-\ttah", "f Q\tt V");
result.add("fa-\ttal", "f eI\tt V l");
result.add("fa-\ttal-\tly", "f eI\tt V\tl i:");
result.add("fa-\tted", "f eI\tt V d");
result.add("fa-\tthe-\tring", "f Q\tD @r\tI N");
result.add("fa-\tther", "f Q\tD @r");
result.add("fa-\tther-\thood", "f Q\tD @r\th U d");
result.add("fa-\tther-\tland", "f Q\tD @r\tl { n d");
result.add("fa-\tther-\tless", "f Q\tD @r\tl V s");
result.add("fa-\tther-\tly", "f Q\tD @r\tl i:");
result.add("fa-\tthered", "f Q\tD @r d");
result.add("fa-\tthers", "f Q\tD @r z");
result.add("fa-\tther's", "f Q\tD @r z");
result.add("fa-\ttho-\tma-\tble", "f {\tD V\tm V\tb V l");
result.add("fa-\tthom", "f {\tD V m");
result.add("fa-\tthoms", "f {\tD V m z");
result.add("fa-\tti-\tma", "f {\tT I\tm V");
result.add("fa-\tti-\tmah", "f {\tT I\tm V");
result.add("fa-\ttigu-\ting", "f V\tt i:\tg I N");
result.add("fa-\ttigue", "f V\tt i: g");
result.add("fa-\ttigued", "f V\tt i: g d");
result.add("fa-\ttigues", "f V\tt i: g z");
result.add("fa-\ttu-\tous", "f {\ttS V\tw V s");
result.add("fa-\tva", "f Q\tv V");
result.add("fa-\tva-\tta", "f Q\tv Q\tt V");
result.add("fa-\tve-\tla", "f Q\tv e\tl V");
result.add("fa-\tver", "f eI\tv @r");
result.add("fa-\tvo-\tra-\tbi-\tli-\tty", "f {\tv @r\tV\tb I\tl V\tt i:");
result.add("fa-\tvo-\tra-\tble", "f eI\tv @r\tV\tb V l");
result.add("fa-\tvo-\trab-\tly", "f eI\tv @r\tV b\tl i:");
result.add("fa-\tvo-\tri-\tti-\tsm", "f eI\tv @r\tI\tt I\tz V m");
result.add("fa-\tvo-\tring", "f eI\tv @r\tI N");
result.add("fa-\tvo-\trite", "f eI\tv @r\tI t");
result.add("fa-\tvo-\trites", "f eI\tv @r\tI t s");
result.add("fa-\tvor", "f eI\tv @r");
result.add("fa-\tvored", "f eI\tv @r d");
result.add("fa-\tvors", "f eI\tv @r z");
result.add("fa-\txes", "f { k\ts V z");
result.add("fa-\txing", "f { k\ts I N");
result.add("fa-\txon", "f { k\ts V n");
result.add("fa-\tyanne", "f eI\tV n");
result.add("fa-\tyette", "f eI\te t");
result.add("fa-\tyette-\tville", "f eI\te t\tv I l");
result.add("fab", "f { b");
result.add("fab-\tri", "f { b\tr i:");
result.add("fab-\tri-\tca-\tted", "f { b\tr I\tk eI\tt I d");
result.add("fab-\tri-\tca-\tting", "f { b\tr I\tk eI\tt I N");
result.add("fab-\tri-\tca-\ttion", "f { b\tr I\tk eI\tS V n");
result.add("fab-\tri-\tca-\ttions", "f { b\tr I\tk eI\tS V n z");
result.add("fab-\tri-\tca-\ttor", "f { b\tr I\tk eI\tt @r");
result.add("fab-\tri-\tca-\ttors", "f { b\tr I\tk eI\tt @r z");
result.add("fab-\tri-\tcant", "f { b\tr I\tk V n t");
result.add("fab-\tri-\tcate", "f { b\tr I\tk eI t");
result.add("fab-\tri-\tcates", "f { b\tr I\tk eI t s");
result.add("fab-\tric", "f { b\tr I k");
result.add("fab-\trics", "f { b\tr I k s");
result.add("fab-\tron", "f { b\tr V n");
result.add("fac", "f { k");
result.add("fac-\tsi-\tmi-\tle", "f { k\ts I\tm I\tl i:");
result.add("fac-\tsi-\tmi-\tles", "f { k\ts I\tm I\tl i: z");
result.add("fac-\tti-\ttious", "f { k\tt I\tS V s");
result.add("fac-\ttio-\tna-\tli-\tsm", "f { k\tS V\tn V\tl I\tz V m");
result.add("fac-\ttio-\tnal", "f { k\tS V\tn V l");
result.add("fac-\ttion", "f { k\tS V n");
result.add("fac-\ttions", "f { k\tS V n z");
result.add("fac-\tto", "f { k\tt @U");
result.add("fac-\tto-\tries", "f { k\tt @r\ti: z");
result.add("fac-\tto-\tring", "f { k\tt @r\tI N");
result.add("fac-\tto-\try", "f { k\tt @r\ti:");
result.add("fac-\tto-\try's", "f { k\tt @r\ti: z");
result.add("fac-\ttor", "f { k\tt @r");
result.add("fac-\ttored", "f { k\tt @r d");
result.add("fac-\ttors", "f { k\tt @r z");
result.add("fac-\ttu-\tal", "f { k\ttS u:\tV l");
result.add("fac-\ttu-\tal-\tly", "f { k\ttS u:\tV\tl i:");
result.add("face", "f eI s");
result.add("face-\tdown", "f eI s\td aU n");
result.add("face-\tless", "f eI s\tl V s");
result.add("face-\tlift", "f eI s\tl I f t");
result.add("faced", "f eI s t");
result.add("fack-\tler", "f { k\tl @r");
result.add("fact", "f { k t");
result.add("facts", "f { k t s");
result.add("fad", "f { d");
result.add("fad-\tden", "f {\td V n");
result.add("fad-\tdish", "f {\td I S");
result.add("fade", "f eI d");
result.add("fades", "f eI d z");
result.add("fads", "f { d z");
result.add("fae", "f aI");
result.add("fag", "f { g");
result.add("fag-\tgot", "f {\tg V t");
result.add("fags", "f { g z");
result.add("fah-\tren-\theit", "f e@\tV n\th aI t");
result.add("fahd", "f Q d");
result.add("fahne-\tstock", "f Q n\ts t Q k");
result.add("fahr", "f Q@");
result.add("fahs", "f { s");
result.add("fai-\tling", "f eI\tl I N");
result.add("fai-\tlings", "f eI\tl I N z");
result.add("fai-\tlure", "f eI l\tj @r");
result.add("fai-\tlures", "f eI l\tj @r z");
result.add("fai-\trer", "f e@\t@r");
result.add("fai-\trest", "f e@\tV s t");
result.add("fai-\tries", "f e@\ti: z");
result.add("fai-\try", "f e@\ti:");
result.add("fai-\try-\tland", "f e@\ti:\tl { n d");
result.add("fai-\try-\ttale", "f e@\ti:\tt eI l");
result.add("fai-\try-\ttales", "f e@\ti:\tt eI l z");
result.add("fai-\tsal", "f eI\tz V l");
result.add("fai-\tson", "f eI\tz V n");
result.add("fail", "f eI l");
result.add("fail-\tsafe", "f eI l\ts eI f");
result.add("failed", "f eI l d");
result.add("fails", "f eI l z");
result.add("fain", "f eI n");
result.add("fain-\tted", "f eI n\tt V d");
result.add("fain-\tter", "f eI n\tt @r");
result.add("fain-\ttest", "f eI n\tt V s t");
result.add("fain-\tthear-\tted", "f eI n\tt h Q@\tt V d");
result.add("fain-\tting", "f eI n\tt I N");
result.add("faint", "f eI n t");
result.add("faint-\tly", "f eI n\tt l i:");
result.add("faint-\tness", "f eI n\tt n V s");
result.add("fair", "f e@");
result.add("fair-\tbank", "f e@\tb V N k");
result.add("fair-\tbanks", "f e@\tb V N k s");
result.add("fair-\tburn", "f e@\tb @r n");
result.add("fair-\tchild", "f e@\ttS aI l d");
result.add("fair-\tchild's", "f e@\ttS aI l d z");
result.add("fair-\tfax", "f e@\tf { k s");
result.add("fair-\tfield", "f e@\tf i: l d");
result.add("fair-\tground", "f e@ g\tr aU n d");
result.add("fair-\tgrounds", "f e@ g\tr aU n d z");
result.add("fair-\tlawn", "f e@\tl O: n");
result.add("fair-\tleigh", "f e@\tl eI");
result.add("fair-\tless", "f e@\tl V s");
result.add("fair-\tley", "f e@\tl i:");
result.add("fair-\tlie", "f e@\tl i:");
result.add("fair-\tly", "f e@\tl i:");
result.add("fair-\tman", "f aI r\tm V n");
result.add("fair-\tmont", "f e@\tm Q n t");
result.add("fair-\tness", "f e@\tn V s");
result.add("fair-\tview", "f e@ v\tj u:");
result.add("fair-\tway", "f e@\tw eI");
result.add("fair-\tways", "f e@\tw eI z");
result.add("fair-\twea-\tther", "f e@\tw e\tD @r");
result.add("faire", "f e@");
result.add("faires", "f e@ z");
result.add("fairs", "f e@ z");
result.add("fair's", "f e@ z");
result.add("fait", "f eI t");
result.add("faith", "f eI T");
result.add("faith-\tful", "f eI T\tf V l");
result.add("faith-\tful-\tly", "f eI T\tf V\tl i:");
result.add("faith-\tfuls", "f eI T\tf V l z");
result.add("faiths", "f eI T s");
result.add("fake", "f eI k");
result.add("faked", "f eI k t");
result.add("fakes", "f eI k s");
result.add("fal-\tco", "f { l\tk @U");
result.add("fal-\tco-\tne", "f Q l\tk @U\tn i:");
result.add("fal-\tco-\tner", "f { l\tk V\tn @r");
result.add("fal-\tco-\tners", "f { l\tk V\tn @r z");
result.add("fal-\tco-\tnet", "f { l\tk V\tn e t");
result.add("fal-\tco-\tnets", "f { l\tk V\tn e t s");
result.add("fal-\tcon", "f { l\tk V n");
result.add("fal-\tcon-\try", "f { l\tk V n\tr i:");
result.add("fal-\tcons", "f { l\tk V n z");
result.add("fal-\tdo", "f Q l\td @U");
result.add("fal-\tla", "f {\tl V");
result.add("fal-\tla-\tcies", "f {\tl V\ts i: z");
result.add("fal-\tla-\tcious", "f V\tl eI\tS V s");
result.add("fal-\tla-\tcious-\tly", "f V\tl eI\tS V s\tl i:");
result.add("fal-\tla-\tcy", "f {\tl V\ts i:");
result.add("fal-\tlen", "f Q\tl V n");
result.add("fal-\tler", "f O:\tl @r");
result.add("fal-\tli-\tbi-\tli-\tty", "f {\tl V\tb I\tl I\tt i:");
result.add("fal-\tli-\tble", "f {\tl I\tb V l");
result.add("fal-\tling", "f Q\tl I N");
result.add("fal-\tlo-\tpi-\tan", "f V\tl @U\tp i:\tV n");
result.add("fal-\tlon", "f {\tl V n");
result.add("fal-\tlow", "f {\tl @U");
result.add("fal-\tlows", "f {\tl @U z");
result.add("fal-\tmouth", "f { l\tm V T");
result.add("fal-\tset-\tto", "f O: l\ts e\tt @U");
result.add("fal-\tset-\ttos", "f O: l\ts e\tt @U z");
result.add("fal-\tsi-\tfi-\tca-\ttion", "f { l\ts I\tf I\tk eI\tS V n");
result.add("fal-\tsi-\tfied", "f O: l\ts I\tf aI d");
result.add("fal-\tsi-\tfy", "f O: l\ts I\tf aI");
result.add("fal-\tsi-\tfy-\ting", "f O: l\ts I\tf aI\tI N");
result.add("fal-\tsi-\tty", "f O: l\ts I\tt i:");
result.add("fal-\tstaff", "f O: l\ts t { f");
result.add("fal-\tstaff's", "f O: l\ts t { f s");
result.add("fal-\tte-\tring", "f O: l\tt @r\tI N");
result.add("fal-\tter", "f O: l\tt @r");
result.add("fal-\ttered", "f Q l\tt @r d");
result.add("fal-\tters", "f O: l\tt @r z");
result.add("fal-\twell", "f O: l\tw e l");
result.add("fal-\twell's", "f O: l\tw e l z");
result.add("falk", "f O: k");
result.add("falk-\tland", "f O: k\tl V n d");
result.add("falk-\tlands", "f O: k\tl V n d z");
result.add("falk-\tner", "f O: k\tn @r");
result.add("fall", "f Q l");
result.add("fall-\tback", "f O: l\tb { k");
result.add("fall-\toff", "f O:\tl O: f");
result.add("fall-\tout", "f O:\tl aU t");
result.add("fall-\touts", "f O:\tl aU t s");
result.add("falls", "f O: l z");
result.add("fall's", "f Q l z");
result.add("false", "f O: l s");
result.add("false-\thood", "f { l\ts h U d");
result.add("false-\thoods", "f { l\ts h U d z");
result.add("false-\tly", "f O: l\ts l i:");
result.add("fame", "f eI m");
result.add("famed", "f eI m d");
result.add("fan", "f { n");
result.add("fan-\tcher", "f { n\ttS @r");
result.add("fan-\tchon", "f { n\ttS V n");
result.add("fan-\tci-\ter", "f { n\ts i:\t@r");
result.add("fan-\tci-\ters", "f { n\ts i:\t@r z");
result.add("fan-\tci-\test", "f { n\ts i:\tV s t");
result.add("fan-\tci-\tful", "f { n\ts I\tf V l");
result.add("fan-\tcied", "f { n\ts i: d");
result.add("fan-\tcies", "f { n\ts i: z");
result.add("fan-\tcy", "f { n\ts i:");
result.add("fan-\tdan-\tgo", "f { n\td { N\tg @U");
result.add("fan-\tfare", "f { n\tf e@");
result.add("fan-\tger", "f {\tN @r");
result.add("fan-\tgle", "f { N\tg V l");
result.add("fan-\tgled", "f { N\tg V l d");
result.add("fan-\tlike", "f { n\tl aI k");
result.add("fan-\tnie", "f {\tn i:");
result.add("fan-\tnin", "f {\tn I n");
result.add("fan-\tning", "f {\tn I N");
result.add("fan-\tning's", "f {\tn I N z");
result.add("fan-\tnon", "f {\tn V n");
result.add("fan-\tny", "f {\tn i:");
result.add("fan-\tta-\tsi-\tzes", "f { n\tt V\ts aI\tz V z");
result.add("fan-\tta-\tsi-\tzing", "f { n\tt V\ts aI\tz I N");
result.add("fan-\tta-\tsia", "f { n\tt eI\tZ V");
result.add("fan-\tta-\tsies", "f { n\tt V\ts i: z");
result.add("fan-\tta-\tsize", "f { n\tt V\ts aI z");
result.add("fan-\tta-\tsized", "f { n\tt V\ts aI z d");
result.add("fan-\tta-\tsy", "f { n\tt V\ts i:");
result.add("fan-\tta-\tsy-\tland", "f { n\tt V\ts i:\tl { n d");
result.add("fan-\ttail", "f { n\tt eI l");
result.add("fan-\ttas-\ttic", "f { n\tt { s\tt I k");
result.add("fan-\ttas-\ttical-\tly", "f { n\tt { s\tt I k\tl i:");
result.add("fane", "f eI n");
result.add("fang", "f { N");
result.add("fangs", "f { N z");
result.add("fanned", "f { n d");
result.add("fans", "f { n z");
result.add("fan's", "f { n z");
result.add("fant", "f { n t");
result.add("fao", "f aU");
result.add("far", "f Q@");
result.add("far-\tber", "f Q@\tb @r");
result.add("far-\tci-\tcal", "f Q@\ts I\tk V l");
result.add("far-\tmer", "f Q@\tm @r");
result.add("far-\tmers", "f Q@\tm @r z");
result.add("far-\tmer's", "f Q@\tm @r z");
result.add("far-\tmers'", "f Q@\tm @r z");
result.add("far-\tming", "f Q@\tm I N");
result.add("far-\tming-\tdale", "f Q@\tm I N\td eI l");
result.add("far-\tming-\tton", "f Q@\tm I N\tt V n");
result.add("far-\tming's", "f Q@\tm I N z");
result.add("far-\tnam", "f Q@\tn V m");
result.add("far-\tner", "f Q@\tn @r");
result.add("far-\tquhar", "f Q@ k\tw @r");
result.add("far-\tra", "f Q@\tV");
result.add("far-\tra-\tgut", "f e@\tV\tg V t");
result.add("far-\tra-\tkhan", "f Q@\tV\tk Q n");
result.add("far-\tra-\tkhan's", "f Q@\tV\tk Q n z");
result.add("far-\trah", "f e@\tV");
result.add("far-\trand", "f {\tr V n d");
result.add("far-\trant", "f Q@\tV n t");
result.add("far-\trar", "f @r\tQ@");
result.add("far-\trel", "f e@\tV l");
result.add("far-\trell", "f e@\te l");
result.add("far-\trell's", "f e@\te l z");
result.add("far-\tren", "f e@\tV n");
result.add("far-\trens", "f {\tr V n z");
result.add("far-\tri-\ter", "f e@\ti:\t@r");
result.add("far-\tring-\tton", "f e@\tI N\tt V n");
result.add("far-\tris", "f e@\tI s");
result.add("far-\trish", "f {\tr I S");
result.add("far-\tro", "f Q@\t@U");
result.add("far-\tro-\twing", "f {\tr @U\tI N");
result.add("far-\tron", "f e@\tV n");
result.add("far-\trow", "f e@\t@U");
result.add("far-\trow's", "f e@\t@U z");
result.add("far-\tsi", "f Q@\ts i:");
result.add("far-\tsigh-\tted", "f Q@\ts aI\tt V d");
result.add("far-\tsigh-\tted-\tness", "f Q@\ts aI\tt V d\tn V s");
result.add("far-\tson", "f Q@\ts V n");
result.add("far-\tther", "f Q@\tD @r");
result.add("far-\tthest", "f Q@\tD V s t");
result.add("far-\tthin-\tgale", "f Q@\tD I N\tg eI l");
result.add("far-\tthing", "f Q@\tD I N");
result.add("far-\tver", "f Q@\tv @r");
result.add("far-\twell", "f Q@\tw e l");
result.add("farce", "f Q@ s");
result.add("fare", "f e@");
result.add("fared", "f e@ d");
result.add("farm", "f Q@ m");
result.add("farm-\thand", "f Q@ m\th { n d");
result.add("farm-\thands", "f Q@ m\th { n d z");
result.add("farm-\thou-\tses", "f Q@ m\th aU\ts V z");
result.add("farm-\thouse", "f Q@ m\th aU s");
result.add("farm-\tland", "f Q@ m\tl { n d");
result.add("farm-\tlands", "f Q@ m\tl { n d z");
result.add("farm-\tstead", "f Q@ m\ts t e d");
result.add("farm-\twor-\tker", "f Q@ m\tw @r\tk @r");
result.add("farm-\twor-\tkers", "f Q@ m\tw @r\tk @r z");
result.add("farm-\tyard", "f Q@ m\tj Q@ d");
result.add("farmed", "f Q@ m d");
result.add("farms", "f Q@ m z");
result.add("farm's", "f Q@ m z");
result.add("farn-\tbo-\trough", "f Q@ n\tb @r\t@U");
result.add("farn-\tham", "f Q@\tn V m");
result.add("farns-\tworth", "f Q@ n\ts w @r T");
result.add("farr", "f Q@");
result.add("far's", "f Q@ z");
result.add("fas-\tching", "f {\tS I N");
result.add("fas-\tci-\tna-\tted", "f {\ts I\tn eI\tt I d");
result.add("fas-\tci-\tna-\tting", "f {\ts I\tn eI\tt I N");
result.add("fas-\tci-\tna-\ttion", "f {\ts I\tn eI\tS V n");
result.add("fas-\tci-\tnate", "f {\ts I\tn eI t");
result.add("fas-\tci-\tnates", "f {\ts I\tn eI t s");
result.add("fas-\tci-\tsm", "f {\tS I\tz V m");
result.add("fas-\tcist", "f {\tS I s t");
result.add("fas-\tcists", "f {\tS I s t s");
result.add("fas-\tnacht", "f { s\tn V k t");
result.add("fas-\tte-\tner", "f {\ts V\tn @r");
result.add("fas-\tted", "f { s\tt V d");
result.add("fas-\tten", "f {\ts V n");
result.add("fas-\ttened", "f {\ts V n d");
result.add("fas-\tter", "f { s\tt @r");
result.add("fas-\ttest", "f { s\tt V s t");
result.add("fas-\tti-\tdi-\tous", "f { s\tt I\td i:\tV s");
result.add("fas-\tting", "f { s\tt I N");
result.add("fass", "f { s");
result.add("fast", "f { s t");
result.add("fast-\tball", "f { s\tt b O: l");
result.add("fast-\tfood", "f { s\tt f u: d");
result.add("fast-\tness", "f { s\tt n V s");
result.add("fasts", "f { s t s");
result.add("fat", "f { t");
result.add("fat-\tte-\tning", "f {\tt V\tn I N");
result.add("fat-\tten", "f {\tt V n");
result.add("fat-\ttened", "f {\tt V n d");
result.add("fat-\tter", "f {\tt @r");
result.add("fat-\ttest", "f {\tt V s t");
result.add("fat-\tties", "f {\tt i: z");
result.add("fat-\tty", "f {\tt i:");
result.add("fat-\twa", "f Q t\tw Q");
result.add("fate", "f eI t");
result.add("fate-\tful", "f eI t\tf V l");
result.add("fates", "f eI t s");
result.add("fath", "f { T");
result.add("fats", "f { t s");
result.add("fau-\tbert", "f aU\tb @r t");
result.add("fau-\tbi-\ton", "f aU\tb i:\tV n");
result.add("fau-\tcet", "f O:\ts V t");
result.add("fau-\tcets", "f O:\ts V t s");
result.add("fau-\tcett", "f O:\ts e t");
result.add("fau-\tcher", "f aU\tk @r");
result.add("fau-\tna", "f O:\tn V");
result.add("fau-\tnal", "f Q\tn V l");
result.add("fau-\tver", "f aU\tv @r");
result.add("faul-\tted", "f O: l\tt V d");
result.add("faul-\tting", "f O: l\tt I N");
result.add("faul-\tty", "f O: l\tt i:");
result.add("faulds", "f O: l d z");
result.add("faulk-\tner", "f O: k\tn @r");
result.add("faulk-\tner's", "f O: k\tn @r z");
result.add("fault", "f O: l t");
result.add("faults", "f O: l t s");
result.add("faunt-\tler-\toy", "f O: n\tt l @r\tOI");
result.add("faure", "f O@");
result.add("faus", "f O: z");
result.add("faus-\tta", "f O: s\tt V");
result.add("faus-\tti-\tna", "f O: s\tt i:\tn V");
result.add("faus-\tti-\tno", "f O: s\tt i:\tn @U");
result.add("faus-\ttian", "f O: s\ttS V n");
result.add("faus-\ttine", "f aU s\tt i: n");
result.add("faus-\tto", "f O: s\tt @U");
result.add("faus-\ttus", "f O: s\tt V s");
result.add("faust", "f aU s t");
result.add("faux", "f O: k s");
result.add("faw", "f O:");
result.add("faw-\tcett", "f O:\ts e t");
result.add("faw-\tley", "f O:\tl i:");
result.add("faw-\tning", "f O:\tn I N");
result.add("fawkes", "f O: k s");
result.add("fawn", "f O: n");
result.add("fax", "f { k s");
result.add("faxed", "f { k s t");
result.add("fay", "f eI");
result.add("faye", "f eI");
result.add("fayed", "f eI d");
result.add("fayme", "f eI m");
result.add("fayne", "f eI n");
result.add("fay's", "f eI z");
result.add("faze", "f eI z");
result.add("fazed", "f eI z d");
result.add("fe", "f eI");
result.add("fe-\tal-\tty", "f i:\tV l\tt i:");
result.add("fe-\tcal", "f i:\tk V l");
result.add("fe-\tces", "f i:\ts i: z");
result.add("fe-\tdak", "f e\td V k");
result.add("fe-\tde-\tra-\tli-\tsm", "f e\td @r\tV\tl I\tz V m");
result.add("fe-\tde-\tra-\tli-\tzing", "f e\td @r\tV\tl aI\tz I N");
result.add("fe-\tde-\tra-\tlist", "f e\td @r\tV\tl V s t");
result.add("fe-\tde-\tra-\tlists", "f e\td @r\tV\tl V s t s");
result.add("fe-\tde-\tra-\tlize", "f e\td @r\tV\tl aI z");
result.add("fe-\tde-\tra-\tlized", "f e\td @r\tV\tl aI z d");
result.add("fe-\tde-\tra-\tted", "f e\td @r\teI\tt V d");
result.add("fe-\tde-\tra-\ttion", "f e\td @r\teI\tS V n");
result.add("fe-\tde-\tra-\ttions", "f e\td @r\teI\tS V n z");
result.add("fe-\tde-\tra-\ttion's", "f e\td @r\teI\tS V n z");
result.add("fe-\tde-\tra-\ttive", "f e\td @r\tV\tt I v");
result.add("fe-\tde-\tral", "f e\td @r\tV l");
result.add("fe-\tde-\tral-\tly", "f e\td @r\tV\tl i:");
result.add("fe-\tde-\trals", "f e\td @r\tV l z");
result.add("fe-\tde-\trate", "f e\td @r\teI t");
result.add("fe-\tde-\tri-\tca", "f e\td @r\ti:\tk V");
result.add("fe-\tde-\tri-\tco", "f e\td @r\ti:\tk @U");
result.add("fe-\tdex", "f e\td e k s");
result.add("fe-\tdo-\tra", "f V\td O@\tV");
result.add("fe-\tdor", "f e\td @r");
result.add("fe-\tli-\tci-\ttous", "f V\tl I\ts V\tt V s");
result.add("fe-\tli-\tci-\tty", "f V\tl I\ts V\tt i:");
result.add("fe-\tli-\tcia", "f V\tl i:\tS V");
result.add("fe-\tli-\tcia's", "f V\tl i:\tS V z");
result.add("fe-\tlice", "f V\tl i: s");
result.add("fe-\tline", "f i:\tl aI n");
result.add("fe-\tlines", "f i:\tl aI n z");
result.add("fe-\tlipe", "f V\tl i: p");
result.add("fe-\tlis", "f e\tl I s");
result.add("fe-\tlix", "f i:\tl I k s");
result.add("fe-\tlo-\tni-\tous", "f e\tl @U\tn i:\tV s");
result.add("fe-\tlo-\tnies", "f e\tl V\tn i: z");
result.add("fe-\tlo-\tny", "f e\tl V\tn i:");
result.add("fe-\tlon", "f e\tl V n");
result.add("fe-\tlons", "f e\tl V n z");
result.add("fe-\tluc-\tca", "f V\tl V\tk V");
result.add("fe-\tmale", "f i:\tm eI l");
result.add("fe-\tmales", "f i:\tm eI l z");
result.add("fe-\tmale's", "f i:\tm eI l z");
result.add("fe-\tne-\tlon", "f e\tn V\tl Q n");
result.add("fe-\tnel-\tla", "f e\tn e\tl V");
result.add("fe-\tni-\tan", "f i:\tn i:\tV n");
result.add("fe-\tnu-\tgreek", "f e\tn u: g\tr i: k");
result.add("fe-\to-\tdo-\tra", "f i:\tV\td O@\tV");
result.add("fe-\to-\tdor", "f i:\tV\td @r");
result.add("fe-\to-\tla", "f i:\tQ\tl V");
result.add("fe-\tra", "f e@\tV");
result.add("fe-\tral", "f e@\tV l");
result.add("fe-\trenc", "f @r\te n s");
result.add("fe-\tri-\ta", "f e@\ti:\tV");
result.add("fe-\tro-\tci-\tty", "f @r\tQ\ts I\tt i:");
result.add("fe-\tro-\tcious", "f @r\t@U\tS V s");
result.add("fe-\tro-\tcious-\tly", "f @r\t@U\tS V s\tl i:");
result.add("fe-\trul-\tlo", "f @r\tu:\tl @U");
result.add("fe-\ttal", "f i:\tt V l");
result.add("fe-\tted", "f eI\tt V d");
result.add("fe-\tti-\tshi-\tsm", "f e\tt I\tS I\tz V m");
result.add("fe-\tti-\tshist", "f e\tt I\tS I s t");
result.add("fe-\tti-\tshists", "f e\tt I\tS I s t s");
result.add("fe-\ttid", "f e\tt I d");
result.add("fe-\ttish", "f e\tt I S");
result.add("fe-\ttu-\tses", "f i:\tt V\ts V z");
result.add("fe-\ttus", "f i:\tt V s");
result.add("fe-\tve-\trish", "f i:\tv @r\tI S");
result.add("fe-\tve-\trish-\tly", "f e\tv @r\tI S\tl i:");
result.add("fe-\tver", "f i:\tv @r");
result.add("fe-\tver-\tfew", "f i:\tv @r f\tj u:");
result.add("fe-\tver-\tfews", "f i:\tv @r f\tj u: z");
result.add("fe-\tvered", "f i:\tv @r d");
result.add("fe-\tvers", "f i:\tv @r z");
result.add("fe-\twer", "f j u:\t@r");
result.add("fe-\twest", "f j u:\tV s t");
result.add("fea-\tring", "f I@\tI N");
result.add("fea-\tsi-\tbi-\tli-\tty", "f i:\tz I\tb I\tl I\tt i:");
result.add("fea-\tsi-\tble", "f i:\tz I\tb V l");
result.add("fea-\tsib-\tly", "f i:\tz I b\tl i:");
result.add("fea-\tthe-\tring", "f e\tD @r\tI N");
result.add("fea-\tthe-\try", "f e\tD @r\ti:");
result.add("fea-\tther", "f e\tD @r");
result.add("fea-\tther-\tbed", "f e\tD @r\tb e d");
result.add("fea-\tther-\tbed-\tding", "f e\tD @r\tb e\td I N");
result.add("fea-\tther-\tless", "f e\tD @r\tl V s");
result.add("fea-\tther-\tweight", "f e\tD @r\tw eI t");
result.add("fea-\tthered", "f e\tD @r d");
result.add("fea-\tthers", "f e\tD @r z");
result.add("fea-\tthers-\ttone", "f e\tD @r s\tt @U n");
result.add("fea-\ttu-\tring", "f i:\ttS @r\tI N");
result.add("fea-\tture", "f i:\ttS @r");
result.add("fea-\tture-\tless", "f i:\ttS @r\tl V s");
result.add("fea-\ttured", "f i:\ttS @r d");
result.add("fea-\ttures", "f i:\ttS @r z");
result.add("fear", "f I@");
result.add("fear-\tful", "f I@\tf V l");
result.add("fear-\tless", "f I@\tl V s");
result.add("fear-\tsome", "f I@\ts V m");
result.add("feared", "f I@ d");
result.add("fears", "f I@ z");
result.add("feas-\tted", "f i: s\tt V d");
result.add("feas-\tter", "f i: s\tt @r");
result.add("feas-\tting", "f i: s\tt I N");
result.add("feast", "f i: s t");
result.add("feasts", "f i: s t s");
result.add("feat", "f i: t");
result.add("feats", "f i: t s");
result.add("feb-\tres", "f e b\tr V s");
result.add("feb-\tru-\ta-\try", "f e b\tj V\tw e@\ti:");
result.add("feb-\tru-\ta-\try's", "f e b\tj V\tw e@\ti: z");
result.add("fech-\tner", "f e k\tn @r");
result.add("fech-\tter", "f e k\tt @r");
result.add("fecht", "f e k t");
result.add("feck", "f e k");
result.add("feck-\tless", "f e k\tl V s");
result.add("fed", "f e d");
result.add("fed-\tder-\ts's", "f e\td @r\tz V z");
result.add("fed-\tders", "f e\td @r z");
result.add("feds", "f e d z");
result.add("fed's", "f e d z");
result.add("fee", "f i:");
result.add("fee-\tder", "f i:\td @r");
result.add("fee-\tders", "f i:\td @r z");
result.add("fee-\tding", "f i:\td I N");
result.add("fee-\tdings", "f i:\td I N z");
result.add("fee-\tler", "f i:\tl @r");
result.add("fee-\tlers", "f i:\tl @r z");
result.add("fee-\tley", "f i:\tl i:");
result.add("fee-\tling", "f i:\tl I N");
result.add("fee-\tlings", "f i:\tl I N z");
result.add("fee-\tly", "f i:\tl i:");
result.add("fee-\tney", "f i:\tn i:");
result.add("feeb-\tle", "f i:\tb V l");
result.add("feeb-\tly", "f i: b\tl i:");
result.add("feed", "f i: d");
result.add("feed-\tback", "f i: d\tb { k");
result.add("feed-\tlot", "f i: d\tl Q t");
result.add("feed-\tlots", "f i: d\tl Q t s");
result.add("feed-\tstock", "f i: d\ts t Q k");
result.add("feed-\tstocks", "f i: d\ts t Q k s");
result.add("feeds", "f i: d z");
result.add("feel", "f i: l");
result.add("feels", "f i: l z");
result.add("fees", "f i: z");
result.add("feese", "f i: z");
result.add("feet", "f i: t");
result.add("fei-\tghan", "f eI\tg V n");
result.add("fei-\tgin", "f aI\tg I n");
result.add("feig-\tning", "f eI\tn I N");
result.add("feign", "f eI n");
result.add("feigned", "f eI n d");
result.add("feil", "f i: l");
result.add("fein", "f aI n");
result.add("fein-\tberg", "f aI n\tb @r g");
result.add("fein-\tgold", "f aI N\tg @U l d");
result.add("fein-\tstein", "f aI n\ts t aI n");
result.add("fein-\tstein's", "f aI n\ts t aI n z");
result.add("fein's", "f aI n z");
result.add("feint", "f eI n t");
result.add("feis", "f aI s");
result.add("feis-\tty", "f aI s\tt i:");
result.add("feist", "f aI s t");
result.add("fel-\tda", "f e l\td V");
result.add("fel-\tdene", "f e l\td i: n");
result.add("fel-\tder", "f e l\td @r");
result.add("fel-\tla", "f e\tl V");
result.add("fel-\tlas", "f e\tl V s");
result.add("fel-\tler", "f e\tl @r");
result.add("fel-\tlers", "f e\tl @r z");
result.add("fel-\tli-\tni", "f V\tl i:\tn i:");
result.add("fel-\tling", "f e\tl I N");
result.add("fel-\tlow", "f e\tl @U");
result.add("fel-\tlow-\tship", "f e\tl @U\tS I p");
result.add("fel-\tlow-\tships", "f e\tl @U\tS I p s");
result.add("fel-\tlows", "f e\tl @U z");
result.add("fel-\tlow's", "f e\tl @U z");
result.add("fel-\tten", "f e l\tt V n");
result.add("fel-\tter", "f e l\tt @r");
result.add("fel-\tton", "f e l\tt V n");
result.add("fel-\tty", "f e l\tt i:");
result.add("felch", "f e l tS");
result.add("feld", "f e l d");
result.add("feld-\tman", "f e l\td m V n");
result.add("feld-\tman's", "f e l\td m V n z");
result.add("feld-\tspar", "f e l\td s p Q@");
result.add("feld-\tspars", "f e l\td s p Q@ z");
result.add("feld-\tstein", "f e l\td s t aI n");
result.add("feld-\tstein's", "f e l\td s t i: n z");
result.add("feldt", "f e l t");
result.add("fell", "f e l");
result.add("fell-\tner", "f e l\tn @r");
result.add("felled", "f e l d");
result.add("fells", "f e l z");
result.add("fels", "f e l z");
result.add("felske", "f e l s k");
result.add("felt", "f e l t");
result.add("felt-\tman", "f e l\tt m V n");
result.add("felts", "f e l t s");
result.add("fen-\tces", "f e n\ts V z");
result.add("fen-\tcing", "f e n\ts I N");
result.add("fen-\tded", "f e n\td V d");
result.add("fen-\tder", "f e n\td @r");
result.add("fen-\tders", "f e n\td @r z");
result.add("fen-\tding", "f e n\td I N");
result.add("fen-\tnel", "f e\tn V l");
result.add("fen-\tnel-\tly", "f e\tn V\tl i:");
result.add("fen-\tnell", "f e\tn V l");
result.add("fen-\tner", "f e\tn @r");
result.add("fen-\tnes-\tsy", "f e\tn V\ts i:");
result.add("fen-\tni-\tmore", "f e\tn I\tm O@");
result.add("fen-\tter", "f e n\tt @r");
result.add("fen-\tton", "f e n\tt V n");
result.add("fen-\twick", "f e n\tw I k");
result.add("fence", "f e n s");
result.add("fend", "f e n d");
result.add("fends", "f e n d z");
result.add("fenn", "f e n");
result.add("fens-\tter", "f e n\ts t @r");
result.add("fent", "f e n t");
result.add("fent-\tress", "f e n\tt r V s");
result.add("fer", "f @r");
result.add("fer-\tber", "f @r\tb @r");
result.add("fer-\tdi-\tnan-\tda", "f @r\td i:\tn Q n\td V");
result.add("fer-\tdi-\tnand", "f @r\td I\tn { n d");
result.add("fer-\tdie", "f @r\td i:");
result.add("fer-\tgu-\tson", "f @r\tg V\ts V n");
result.add("fer-\tgu-\tson's", "f @r\tg V\ts V n z");
result.add("fer-\tgus", "f @r\tg V s");
result.add("fer-\tmen-\tta-\ttion", "f @r\tm V n\tt eI\tS V n");
result.add("fer-\tmen-\tted", "f @r\tm e n\tt V d");
result.add("fer-\tmen-\tting", "f @r\tm e n\tt I N");
result.add("fer-\tment", "f @r\tm e n t");
result.add("fer-\tments", "f @r\tm e n t s");
result.add("fer-\tmi", "f @r\tm i:");
result.add("fer-\tmi-\tum", "f e@\tm i:\tV m");
result.add("fer-\tmin", "f @r\tm I n");
result.add("fer-\tnald", "f @r\tn Q l d");
result.add("fer-\tnan-\tda", "f @r\tn { n\td V");
result.add("fer-\tnan-\tdes", "f @r\tn Q n\td e s");
result.add("fer-\tnan-\tdez", "f @r\tn { n\td e z");
result.add("fer-\tnan-\tdi-\tna", "f @r\tn V n\td i:\tn V");
result.add("fer-\tnan-\tdo", "f @r\tn { n\td @U");
result.add("fer-\tnand", "f @r\tn { n d");
result.add("fer-\tne-\try", "f @r\tn @r\ti:");
result.add("fer-\tra-\tra", "f @r\tQ@\tV");
result.add("fer-\tra-\tri", "f @r\tQ@\ti:");
result.add("fer-\tra-\tro", "f @r\tQ@\t@U");
result.add("fer-\tran-\tti", "f e@\t{ n\tt i:");
result.add("fer-\trand", "f e@\tV n d");
result.add("fer-\tre-\tro", "f e@\te@\t@U");
result.add("fer-\tre-\tted", "f e@\tV\tt V d");
result.add("fer-\tre-\tting", "f e@\tV\tt I N");
result.add("fer-\tree", "f @r\ti:");
result.add("fer-\trei-\tra", "f e@\teI\tr V");
result.add("fer-\trei-\tro", "f e@\te@\t@U");
result.add("fer-\trel", "f e@\te l");
result.add("fer-\trell", "f e@\te l");
result.add("fer-\tren", "f e@\tV n");
result.add("fer-\trer", "f e@\t@r");
result.add("fer-\tret", "f e@\tV t");
result.add("fer-\tret-\tti", "f @r\te\tt i:");
result.add("fer-\trets", "f e@\tV t s");
result.add("fer-\tri", "f e@\ti:");
result.add("fer-\tri-\ter", "f e@\ti:\t@r");
result.add("fer-\tri-\tter", "f e@\taI\tt @r");
result.add("fer-\trick", "f e@\tI k");
result.add("fer-\tried", "f e@\ti: d");
result.add("fer-\tries", "f e@\ti: z");
result.add("fer-\trig-\tno", "f @r\ti: g\tn @U");
result.add("fer-\tris", "f e@\tI s");
result.add("fer-\trite", "f e@\taI t");
result.add("fer-\tro", "f e@\t@U");
result.add("fer-\tro-\tmag-\tne-\tti-\tsm", "f e@\t@U\tm { g\tn V\tt I\tz V m");
result.add("fer-\tro-\tmag-\tne-\ttic", "f e@\t@U\tm { g\tn e\tt I k");
result.add("fer-\tro-\tmag-\tnet", "f e@\t@U\tm { g\tn V t");
result.add("fer-\tro-\tnic-\tkel", "f e@\tV\tn I\tk V l");
result.add("fer-\tro-\ttype", "f e@\tV\tt aI p");
result.add("fer-\troch-\trome", "f e@\tV k\tr @U m");
result.add("fer-\tron", "f e@\tV n");
result.add("fer-\trous", "f e@\tV s");
result.add("fer-\try", "f e@\ti:");
result.add("fer-\try-\tboat", "f e@\ti:\tb @U t");
result.add("fer-\try-\tboats", "f e@\ti:\tb @U t s");
result.add("fer-\try-\ting", "f e@\ti:\tI N");
result.add("fer-\try-\tman", "f e@\ti:\tm V n");
result.add("fer-\try's", "f e@\ti: z");
result.add("fer-\tti-\tli-\tty", "f @r\tt I\tl I\tt i:");
result.add("fer-\tti-\tli-\tza-\ttion", "f @r\tt I\tl aI\tz eI\tS V n");
result.add("fer-\tti-\tli-\tzer", "f @r\tt I\tl aI\tz @r");
result.add("fer-\tti-\tli-\tzers", "f @r\tt I\tl aI\tz @r z");
result.add("fer-\tti-\tli-\tzes", "f @r\tt I\tl aI\tz V z");
result.add("fer-\tti-\tli-\tzing", "f @r\tt I\tl aI\tz I N");
result.add("fer-\tti-\tlize", "f @r\tt I\tl aI z");
result.add("fer-\tti-\tlized", "f @r\tt I\tl aI z d");
result.add("fer-\ttile", "f @r\tt I l");
result.add("fer-\tvent", "f @r\tv V n t");
result.add("fer-\tvent-\tly", "f @r\tv V n\tt l i:");
result.add("fer-\tvid", "f @r\tv I d");
result.add("fer-\tvor", "f @r\tv @r");
result.add("ferd", "f @r d");
result.add("ferm", "f @r m");
result.add("fern", "f @r n");
result.add("fern-\tdale", "f @r n\td eI l");
result.add("fern-\tlike", "f @r n\tl aI k");
result.add("ferns", "f @r n z");
result.add("fe's", "f eI z");
result.add("fes-\tcue", "f e s\tk j u:");
result.add("fes-\tsen-\tden", "f e\ts V n\td V n");
result.add("fes-\tta", "f e s\tt V");
result.add("fes-\tte-\tring", "f e s\tt @r\tI N");
result.add("fes-\tter", "f e s\tt @r");
result.add("fes-\ttered", "f e s\tt @r d");
result.add("fes-\tti-\tval", "f e s\tt I\tv V l");
result.add("fes-\tti-\tvals", "f e s\tt I\tv V l z");
result.add("fes-\tti-\tval's", "f e s\tt I\tv V l z");
result.add("fes-\tti-\tvi-\tties", "f e s\tt I\tv I\tt i: z");
result.add("fes-\tti-\tvi-\tty", "f e s\tt I\tv I\tt i:");
result.add("fes-\ttive", "f e s\tt I v");
result.add("fes-\ttoon", "f e s\tt u: n");
result.add("fes-\ttooned", "f e s\tt u: n d");
result.add("fes-\ttus", "f e s\tt V s");
result.add("fess", "f e s");
result.add("fessed", "f e s t");
result.add("fest", "f e s t");
result.add("fests", "f e s t s");
result.add("fet-\tches", "f e\ttS V z");
result.add("fet-\tching", "f e\ttS I N");
result.add("fet-\tter", "f e\tt @r");
result.add("fet-\ttered", "f e\tt @r d");
result.add("fet-\tters", "f e\tt @r z");
result.add("fet-\tting", "f e\tt I N");
result.add("fet-\ttuc-\tci-\tne", "f e\tt V\ttS i:\tn i:");
result.add("fetch", "f e tS");
result.add("fetched", "f e tS t");
result.add("fete", "f eI t");
result.add("fett", "f e t");
result.add("fettes", "f e t s");
result.add("feu-\tda-\tli-\tsm", "f j u:\td V\tl I\tz V m");
result.add("feu-\tda-\tlis-\ttic", "f j u:\td V\tl I s\tt I k");
result.add("feu-\tdal", "f j u:\td V l");
result.add("feu-\tded", "f j u:\td V d");
result.add("feu-\tding", "f j u:\td I N");
result.add("feucht", "f OI k t");
result.add("feud", "f j u: d");
result.add("feuds", "f j u: d z");
result.add("few", "f j u:");
result.add("fey", "f eI");
result.add("feyn-\tman", "f eI n\tm V n");
result.add("fez", "f e z");
result.add("fi", "f aI");
result.add("fi-\tan-\tce", "f i:\tQ n\ts eI");
result.add("fi-\tan-\tcee", "f i:\t{ n\ts i:");
result.add("fi-\tan-\tna", "f i:\t{\tn V");
result.add("fi-\tas-\tco", "f i:\t{ s\tk @U");
result.add("fi-\tas-\tcos", "f i:\t{ s\tk @U z");
result.add("fi-\tat", "f aI\t{ t");
result.add("fi-\tat's", "f i:\t{ t s");
result.add("fi-\tbe-\trop-\ttic", "f aI\tb @r\tQ p\tt I k");
result.add("fi-\tber", "f aI\tb @r");
result.add("fi-\tber-\tboard", "f aI\tb @r\tb O@ d");
result.add("fi-\tber-\tglas", "f aI\tb @r g\tl { s");
result.add("fi-\tber-\tglass", "f aI\tb @r g\tl { s");
result.add("fi-\tbers", "f aI\tb @r z");
result.add("fi-\tber's", "f aI\tb @r z");
result.add("fi-\tbre", "f aI\tb @r");
result.add("fi-\tbre-\tboard", "f aI\tb @r\tb O@ d");
result.add("fi-\tbu-\tla", "f I b\tj V\tl V");
result.add("fi-\tchus", "f I\ttS V s");
result.add("fi-\tco", "f i:\tk @U");
result.add("fi-\tdal-\tgo", "f i:\td Q l\tg @U");
result.add("fi-\tde-\tli-\tties", "f V\td e\tl I\tt i: z");
result.add("fi-\tde-\tli-\tty", "f V\td e\tl I\tt i:");
result.add("fi-\tde-\tli-\tty's", "f V\td e\tl I\tt i: z");
result.add("fi-\tde-\tlia", "f V\td i: l\tj V");
result.add("fi-\tdel", "f V\td e l");
result.add("fi-\tdel's", "f V\td e l z");
result.add("fi-\tdo", "f aI\td @U");
result.add("fi-\tdu-\tci-\ta-\tries", "f V\td u:\tS i:\te@\ti: z");
result.add("fi-\tdu-\tci-\ta-\try", "f V\td u:\tS i:\te@\ti:");
result.add("fi-\te-\try", "f aI\t@r\ti:");
result.add("fi-\tes-\tta", "f i:\te s\tt V");
result.add("fi-\test", "f i:\tV s t");
result.add("fi-\tfer", "f aI\tf @r");
result.add("fi-\tfi", "f i:\tf i:");
result.add("fi-\tfield", "f I\tf i: l d");
result.add("fi-\tga-\tro", "f I\tg @r\t@U");
result.add("fi-\tgone", "f I\tg V n");
result.add("fi-\tgure", "f I g\tj @r");
result.add("fi-\tla-\tment", "f I\tl V\tm V n t");
result.add("fi-\tla-\tments", "f I\tl V\tm V n t s");
result.add("fi-\tler", "f aI\tl @r");
result.add("fi-\tlers", "f aI\tl @r z");
result.add("fi-\tlet", "f V\tl eI");
result.add("fi-\tlets", "f V\tl eI z");
result.add("fi-\tli-\tal", "f I\tl i:\tV l");
result.add("fi-\tli-\tbus-\tte-\tring", "f I\tl I\tb V s\tt @r\tI N");
result.add("fi-\tli-\tbus-\tter", "f I\tl I\tb V s\tt @r");
result.add("fi-\tli-\tbus-\ttered", "f I\tl I\tb V s\tt @r d");
result.add("fi-\tli-\tbus-\tters", "f I\tl I\tb V s\tt @r z");
result.add("fi-\tli-\tgree", "f I\tl I g\tr i:");
result.add("fi-\tli-\tgrees", "f I\tl I g\tr i: z");
result.add("fi-\tli-\tpi-\tno", "f I\tl I\tp i:\tn @U");
result.add("fi-\tli-\tpi-\tnos", "f I\tl I\tp i:\tn @U z");
result.add("fi-\tling", "f aI\tl I N");
result.add("fi-\tlings", "f aI\tl I N z");
result.add("fi-\tlion", "f I l\tj V n");
result.add("fi-\tlip", "f I\tl I p");
result.add("fi-\tlip-\tpi", "f V\tl I\tp i:");
result.add("fi-\tlip-\tpo", "f V\tl i:\tp @U");
result.add("fi-\tlo", "f i:\tl @U");
result.add("fi-\tlo-\tfax", "f I\tl @U\tf { k s");
result.add("fi-\tlo-\tme-\tna", "f I\tl V\tm i:\tn V");
result.add("fi-\tlo-\tsa", "f i:\tl @U\ts V");
result.add("fi-\tma", "f i:\tm V");
result.add("fi-\tna", "f aI\tn V");
result.add("fi-\tna-\tgle", "f V\tn eI\tg V l");
result.add("fi-\tna-\tle", "f V\tn {\tl i:");
result.add("fi-\tna-\tli-\tty", "f aI\tn {\tl I\tt i:");
result.add("fi-\tna-\tli-\tzing", "f aI\tn V\tl aI\tz I N");
result.add("fi-\tna-\tlist", "f aI\tn V\tl V s t");
result.add("fi-\tna-\tlists", "f aI\tn V\tl V s t s");
result.add("fi-\tna-\tlize", "f aI\tn V\tl aI z");
result.add("fi-\tna-\tlized", "f aI\tn V\tl aI z d");
result.add("fi-\tnag-\tler", "f V\tn eI g\tl @r");
result.add("fi-\tnal", "f aI\tn V l");
result.add("fi-\tnal-\tly", "f aI\tn V\tl i:");
result.add("fi-\tnals", "f aI\tn V l z");
result.add("fi-\tnan-\tcer", "f aI\tn { n\ts @r");
result.add("fi-\tnan-\tces", "f V\tn { n\ts V z");
result.add("fi-\tnan-\tcial", "f V\tn { n\tS V l");
result.add("fi-\tnan-\tcial-\tly", "f V\tn { n\tS V\tl i:");
result.add("fi-\tnan-\tcier", "f I\tn V n\ts I@");
result.add("fi-\tnan-\tciere", "f I\tn { n\ts I@");
result.add("fi-\tnan-\tciers", "f I\tn V n\ts I@ z");
result.add("fi-\tnan-\tcing", "f V\tn { n\ts I N");
result.add("fi-\tnan-\tcings", "f V\tn { n\ts I N z");
result.add("fi-\tnance", "f V\tn { n s");
result.add("fi-\tnanced", "f V\tn { n s t");
result.add("fi-\tne-\tgan", "f I\tn I\tg { n");
result.add("fi-\tne-\try", "f aI\tn @r\ti:");
result.add("fi-\tnel-\tla", "f V\tn e\tl V");
result.add("fi-\tner", "f aI\tn @r");
result.add("fi-\tnesse", "f V\tn e s");
result.add("fi-\tnessed", "f V\tn e s t");
result.add("fi-\tnest", "f aI\tn V s t");
result.add("fi-\tni", "f i:\tn i:");
result.add("fi-\tni-\tcky", "f I\tn I\tk i:");
result.add("fi-\tni-\tsher", "f I\tn I\tS @r");
result.add("fi-\tni-\tshers", "f I\tn I\tS @r z");
result.add("fi-\tni-\tshes", "f I\tn I\tS V z");
result.add("fi-\tni-\tshing", "f I\tn I\tS I N");
result.add("fi-\tning", "f aI\tn I N");
result.add("fi-\tnish", "f I\tn I S");
result.add("fi-\tnished", "f I\tn I S t");
result.add("fi-\tnite", "f aI\tn aI t");
result.add("fi-\tno", "f i:\tn @U");
result.add("fi-\tnoc-\tchi-\to", "f i:\tn @U\tk i:\t@U");
result.add("fi-\to-\tna", "f i:\t@U\tn V");
result.add("fi-\to-\tre", "f i:\tO@\ti:");
result.add("fi-\to-\trel-\tlo", "f i:\tO@\te\tl @U");
result.add("fi-\to-\tren-\tza", "f i:\tO@\te n\tz V");
result.add("fi-\to-\tret-\tti", "f i:\tO@\te\tt i:");
result.add("fi-\to-\tri", "f i:\tO@\ti:");
result.add("fi-\tre", "f aI\t@r");
result.add("fi-\tre-\tarm", "f aI\t@r\tQ@ m");
result.add("fi-\tre-\tarms", "f aI\t@r\tQ@ m z");
result.add("fi-\tre-\tball", "f aI\t@r\tb O: l");
result.add("fi-\tre-\tballs", "f aI\t@r\tb O: l z");
result.add("fi-\tre-\tbird", "f aI\t@r\tb @r d");
result.add("fi-\tre-\tbirds", "f aI\t@r\tb @r d z");
result.add("fi-\tre-\tbomb", "f aI\t@r\tb Q m");
result.add("fi-\tre-\tbomb-\ting", "f aI\t@r\tb Q\tm I N");
result.add("fi-\tre-\tbrand", "f aI\t@r b\tr { n d");
result.add("fi-\tre-\tbrands", "f aI\t@r b\tr { n d z");
result.add("fi-\tre-\tbrick", "f aI\t@r b\tr I k");
result.add("fi-\tre-\tbug", "f aI\t@r\tb V g");
result.add("fi-\tre-\tbush", "f aI\t@r\tb U S");
result.add("fi-\tre-\tcrac-\tker", "f aI\t@r k\tr {\tk @r");
result.add("fi-\tre-\tcrac-\tkers", "f aI\t@r k\tr {\tk @r z");
result.add("fi-\tre-\tdamp", "f aI\t@r\td { m p");
result.add("fi-\tre-\tfigh-\tters", "f aI\t@r\tf aI\tt @r z");
result.add("fi-\tre-\tflies", "f aI\t@r f\tl aI z");
result.add("fi-\tre-\tfly", "f aI\t@r f\tl aI");
result.add("fi-\tre-\thou-\tses", "f aI\t@r\th aU\ts V z");
result.add("fi-\tre-\thouse", "f aI\t@r\th aU s");
result.add("fi-\tre-\tpla-\tces", "f aI\t@r p\tl eI\ts V z");
result.add("fi-\tre-\tplace", "f aI\t@r p\tl eI s");
result.add("fi-\tre-\tproo-\tfing", "f aI\t@r p\tr u:\tf I N");
result.add("fi-\tre-\tproof", "f aI\t@r p\tr u: f");
result.add("fi-\tre-\tside", "f aI\t@r\ts aI d");
result.add("fi-\tre-\tweed", "f aI\t@r\tw i: d");
result.add("fi-\tre-\twood", "f aI\t@r\tw U d");
result.add("fi-\tred", "f aI\t@r d");
result.add("fi-\tres", "f aI\t@r z");
result.add("fi-\tre's", "f aI\t@r z");
result.add("fi-\tring", "f aI\tr I N");
result.add("fi-\trings", "f aI\tr I N z");
result.add("fi-\tshe-\tries", "f I\tS @r\ti: z");
result.add("fi-\tshe-\try", "f I\tS @r\ti:");
result.add("fi-\tsher", "f I\tS @r");
result.add("fi-\tsher-\tman", "f I\tS @r\tm { n");
result.add("fi-\tsher-\tman's", "f I\tS @r\tm V n z");
result.add("fi-\tsher-\tmen", "f I\tS @r\tm e n");
result.add("fi-\tshers", "f I\tS @r z");
result.add("fi-\tsher's", "f I\tS @r z");
result.add("fi-\tshes", "f I\tS V z");
result.add("fi-\tshing", "f I\tS I N");
result.add("fi-\tsh's", "f I\tS V z");
result.add("fi-\tshy", "f I\tS i:");
result.add("fi-\tthi-\tan", "f I\tT i:\tV n");
result.add("fi-\tu-\tma-\tra", "f i:\tu:\tm Q@\tV");
result.add("fi-\txa-\tble", "f I k\ts V\tb V l");
result.add("fi-\txa-\tted", "f I k\ts eI\tt V d");
result.add("fi-\txa-\ttion", "f I k\ts eI\tS V n");
result.add("fi-\txa-\ttive", "f I k\ts V\tt I v");
result.add("fi-\txa-\ttives", "f I k\ts V\tt I v z");
result.add("fi-\txate", "f I k\ts eI t");
result.add("fi-\txer", "f I k\ts @r");
result.add("fi-\txes", "f I k\ts V z");
result.add("fi-\txing", "f I k\ts I N");
result.add("fi-\txings", "f I k\ts I N z");
result.add("fib-\tril-\tla-\ttion", "f I b\tr I\tl eI\tS V n");
result.add("fib-\trin", "f aI b\tr I n");
result.add("fib-\tro-\tsis", "f aI b\tr @U\ts I s");
result.add("fib-\troid", "f aI b\tr OI d");
result.add("fib-\troids", "f aI b\tr OI d z");
result.add("fib-\trous", "f aI b\tr V s");
result.add("fic-\tkle", "f I\tk V l");
result.add("fic-\tkle-\tness", "f I\tk V l\tn V s");
result.add("fic-\tti-\ttious", "f I k\tt I\tS V s");
result.add("fic-\ttio-\tna-\tlize", "f I k\tS V\tn V\tl aI z");
result.add("fic-\ttio-\tna-\tlized", "f I k\tS V\tn V\tl aI z d");
result.add("fic-\ttio-\tnal", "f I k\tS V\tn V l");
result.add("fic-\ttion", "f I k\tS V n");
result.add("fic-\ttions", "f I k\tS V n z");
result.add("fick-\tling", "f I k\tl I N");
result.add("fid-\td-\tler", "f I\td V\tl @r");
result.add("fid-\td-\tlers", "f I\td V\tl @r z");
result.add("fid-\td-\tler's", "f I\td V\tl @r z");
result.add("fid-\tdle", "f I\td V l");
result.add("fid-\tdled", "f I\td V l d");
result.add("fid-\tdles", "f I\td V l z");
result.add("fid-\tge-\tting", "f I\tdZ V\tt I N");
result.add("fid-\tget", "f I\tdZ V t");
result.add("fidd-\tling", "f I d\tl I N");
result.add("fide", "f aI d");
result.add("fides", "f aI d z");
result.add("fied-\tler", "f i: d\tl @r");
result.add("fied-\tler's", "f i: d\tl @r z");
result.add("fief", "f i: f");
result.add("fief-\tdom", "f i: f\td V m");
result.add("fief-\tdoms", "f i: f\td V m z");
result.add("fiel", "f i: l");
result.add("fiel-\tded", "f i: l\td V d");
result.add("fiel-\tden", "f i: l\td V n");
result.add("fiel-\tder", "f i: l\td @r");
result.add("fiel-\tders", "f i: l\td @r z");
result.add("fiel-\tder's", "f i: l\td @r z");
result.add("fiel-\tding", "f i: l\td I N");
result.add("field", "f i: l d");
result.add("field-\twork", "f i: l\td w @r k");
result.add("fields", "f i: l d z");
result.add("field's", "f i: l d z");
result.add("fien-\tdish", "f i: n\td I S");
result.add("fiend", "f i: n d");
result.add("fiends", "f i: n d z");
result.add("fier", "f I@");
result.add("fier-\tcer", "f I@\ts @r");
result.add("fier-\tcest", "f I@\ts V s t");
result.add("fierce", "f I@ s");
result.add("fierce-\tly", "f I@ s\tl i:");
result.add("fif-\tteen", "f I f\tt i: n");
result.add("fif-\tteens", "f I f\tt i: n z");
result.add("fif-\tteen's", "f I f\tt i: n z");
result.add("fif-\tteenth", "f I f\tt i: n T");
result.add("fif-\tti-\teth", "f I f\tt i:\tV T");
result.add("fif-\tties", "f I f\tt i: z");
result.add("fif-\tty", "f I f\tt i:");
result.add("fif-\tty's", "f I f\tt i: z");
result.add("fife", "f aI f");
result.add("fifth", "f I f T");
result.add("fifths", "f I f T s");
result.add("fig", "f I g");
result.add("fig-\tment", "f I g\tm V n t");
result.add("fig-\tments", "f I g\tm V n t s");
result.add("figge", "f I g");
result.add("figh-\tter", "f aI\tt @r");
result.add("figh-\tters", "f aI\tt @r z");
result.add("figh-\tter's", "f aI\tt @r z");
result.add("figh-\tting", "f aI\tt I N");
result.add("figh-\ttings", "f aI\tt I N z");
result.add("fight", "f aI t");
result.add("fights", "f aI t s");
result.add("fil-\tbert", "f I l\tb @r t");
result.add("fil-\tberts", "f I l\tb @r t s");
result.add("fil-\tbert's", "f I l\tb @r t s");
result.add("fil-\tla", "f I\tl V");
result.add("fil-\tle-\tted", "f I\tl V\tt V d");
result.add("fil-\tler", "f I\tl @r");
result.add("fil-\tlers", "f I\tl @r z");
result.add("fil-\tlet", "f V\tl eI");
result.add("fil-\tlets", "f I\tl V t s");
result.add("fil-\tley", "f I\tl i:");
result.add("fil-\tlies", "f I\tl i: z");
result.add("fil-\tling", "f I\tl I N");
result.add("fil-\tlings", "f I\tl I N z");
result.add("fil-\tlip", "f I\tl I p");
result.add("fil-\tly", "f I\tl i:");
result.add("fil-\tmer", "f I l\tm @r");
result.add("fil-\tming", "f I l\tm I N");
result.add("fil-\tmore", "f I l\tm O@");
result.add("fil-\tte-\tring", "f I l\tt @r\tI N");
result.add("fil-\tter", "f I l\tt @r");
result.add("fil-\ttered", "f I l\tt @r d");
result.add("fil-\tters", "f I l\tt @r z");
result.add("fil-\tthy", "f I l\tT i:");
result.add("filch", "f I l tS");
result.add("filched", "f I l tS t");
result.add("file", "f aI l");
result.add("filed", "f aI l d");
result.add("files", "f aI l z");
result.add("fill", "f I l");
result.add("fill-\tmore", "f I l\tm O@");
result.add("filled", "f I l d");
result.add("fills", "f I l z");
result.add("film", "f I l m");
result.add("film-\tma-\tker", "f I l\tm eI\tk @r");
result.add("film-\tma-\tkers", "f I l\tm eI\tk @r z");
result.add("film-\tma-\tking", "f I l\tm eI\tk I N");
result.add("filmed", "f I l m d");
result.add("films", "f I l m z");
result.add("film's", "f I l m z");
result.add("filt-\tra-\ttion", "f V l\tt r eI\tS V n");
result.add("filth", "f I l T");
result.add("fin", "f I n");
result.add("fin-\tches", "f I n\ttS V z");
result.add("fin-\tder", "f aI n\td @r");
result.add("fin-\tders", "f aI n\td @r z");
result.add("fin-\tder's", "f aI n\td @r z");
result.add("fin-\tding", "f aI n\td I N");
result.add("fin-\tdings", "f aI n\td I N z");
result.add("fin-\tge-\tring", "f I N\tg @r\tI N");
result.add("fin-\tger", "f I N\tg @r");
result.add("fin-\tger-\tboard", "f I N\tg @r\tb O@ d");
result.add("fin-\tger-\tnail", "f I N\tg @r\tn eI l");
result.add("fin-\tger-\tnails", "f I N\tg @r\tn eI l z");
result.add("fin-\tger-\tpain-\tted", "f I N\tg @r\tp eI n\tt V d");
result.add("fin-\tger-\tpaint", "f I N\tg @r\tp eI n t");
result.add("fin-\tger-\tprin-\tted", "f I N\tg @r p\tr I n\tt V d");
result.add("fin-\tger-\tprin-\tting", "f I N\tg @r p\tr I n\tt I N");
result.add("fin-\tger-\tprint", "f I N\tg @r p\tr I n t");
result.add("fin-\tger-\tprints", "f I N\tg @r p\tr I n t s");
result.add("fin-\tger-\ttip", "f I N\tg @r\tt I p");
result.add("fin-\tger-\ttips", "f I N\tg @r\tt I p s");
result.add("fin-\tgered", "f I N\tg @r d");
result.add("fin-\tgers", "f I N\tg @r z");
result.add("fin-\tkel", "f I N\tk V l");
result.add("fin-\tkel-\tstein", "f I N\tk V l\ts t i: n");
result.add("fin-\tkel-\tstein's", "f I N\tk V l\ts t i: n z");
result.add("fin-\tlan-\tdi-\tza-\ttion", "f I n\tl { n\td I\tz eI\tS V n");
result.add("fin-\tland", "f I n\tl { n d");
result.add("fin-\tland's", "f I n\tl V n d z");
result.add("fin-\tlay", "f I n\tl i:");
result.add("fin-\tlay-\tson", "f I n\tl i:\ts V n");
result.add("fin-\tley", "f I n\tl i:");
result.add("fin-\tley's", "f I n\tl i: z");
result.add("fin-\tnan", "f I\tn V n");
result.add("fin-\tne-\tgan", "f I\tn V\tg V n");
result.add("fin-\tney", "f I\tn i:");
result.add("fin-\tni-\tgan", "f I\tn I\tg V n");
result.add("fin-\tnick", "f I\tn I k");
result.add("fin-\tnie", "f I\tn i:");
result.add("fin-\tning", "f I\tn I N");
result.add("fin-\tnish", "f I\tn I S");
result.add("fin-\tstad", "f I n\ts t V d");
result.add("finch", "f I n tS");
result.add("find", "f aI n d");
result.add("find-\tlay", "f I n\td l i:");
result.add("find-\tley", "f I n\td l i:");
result.add("finds", "f aI n d z");
result.add("fine", "f aI n");
result.add("fine-\tberg", "f aI n\tb @r g");
result.add("fine-\tly", "f aI n\tl i:");
result.add("fine-\tman", "f aI n\tm V n");
result.add("fined", "f aI n d");
result.add("fines", "f aI n z");
result.add("fink", "f I N k");
result.add("finks", "f I N k s");
result.add("fink's", "f I N k s");
result.add("finn", "f I n");
result.add("finns", "f I n z");
result.add("finn's", "f I n z");
result.add("fins", "f I n z");
result.add("fip-\tple", "f I\tp V l");
result.add("fir", "f @r");
result.add("fir-\tkins", "f @r\tk I n z");
result.add("fir-\tma", "f @r\tm V");
result.add("fir-\tman", "f @r\tm V n");
result.add("fir-\tmans", "f @r\tm V n z");
result.add("fir-\tmer", "f @r\tm @r");
result.add("fir-\tmest", "f @r\tm V s t");
result.add("fir-\tmin", "f @r\tm I n");
result.add("fir-\tming", "f @r\tm I N");
result.add("fire-\tbaugh", "f aI r\tb O:");
result.add("fire-\tbombed", "f aI r\tb Q m d");
result.add("fire-\tbombs", "f aI r\tb Q m z");
result.add("fire-\tfigh-\tter", "f aI r\tf aI\tt @r");
result.add("fire-\tfigh-\tting", "f aI r\tf aI\tt I N");
result.add("fire-\tfight", "f aI r\tf aI t");
result.add("fire-\tfights", "f aI r\tf aI t s");
result.add("fire-\tman", "f aI r\tm V n");
result.add("fire-\tman's", "f aI r\tm V n z");
result.add("fire-\tmen", "f aI r\tm V n");
result.add("fire-\tpo-\twer", "f aI r\tp aU\t@r");
result.add("fire-\tstone", "f aI r\ts t @U n");
result.add("fire-\tstone's", "f aI r\ts t @U n z");
result.add("fire-\tstorm", "f aI r\ts t O@ m");
result.add("fire-\twall", "f aI r\tw Q l");
result.add("fire-\twork", "f aI r\tw @r k");
result.add("fire-\tworks", "f aI r\tw @r k s");
result.add("firm", "f @r m");
result.add("firm-\tly", "f @r m\tl i:");
result.add("firm-\tness", "f @r m\tn V s");
result.add("firmed", "f @r m d");
result.add("firms", "f @r m z");
result.add("firm's", "f @r m z");
result.add("firs", "f @r z");
result.add("first", "f @r s t");
result.add("first-\tborn", "f @r s\tt b O@ n");
result.add("first-\thand", "f @r s\tt h { n d");
result.add("first-\tly", "f @r s\tt l i:");
result.add("firsts", "f @r s t s");
result.add("firth", "f @r T");
result.add("fis-\tcal", "f I s\tk V l");
result.add("fis-\tcal-\tly", "f I s\tk V\tl i:");
result.add("fis-\tcher", "f I\tS @r");
result.add("fis-\tcher's", "f I\tS @r z");
result.add("fis-\tcus", "f I s\tk V s");
result.add("fis-\tsile", "f I\ts V l");
result.add("fis-\tsio-\tna-\tble", "f I\tS V\tn V\tb V l");
result.add("fis-\tsion", "f I\tS V n");
result.add("fis-\tsure", "f I\tS @r");
result.add("fis-\tsured", "f I\tS @r d");
result.add("fis-\tsures", "f I\tS @r z");
result.add("fis-\tted", "f I s\tt V d");
result.add("fis-\tter", "f I s\tt @r");
result.add("fis-\tti-\tcuff", "f I s\tt I\tk V f");
result.add("fis-\tti-\tcuffs", "f I s\tt I\tk V f s");
result.add("fisc", "f I s k");
result.add("fisch", "f I S");
result.add("fisch-\tbein", "f I S\tb aI n");
result.add("fish", "f I S");
result.add("fish-\tback", "f I S\tb { k");
result.add("fish-\tbein", "f I S\tb aI n");
result.add("fish-\tbowl", "f I S\tb @U l");
result.add("fish-\tea-\tter", "f I\tS i:\tt @r");
result.add("fish-\tkill", "f I S\tk I l");
result.add("fish-\tman", "f I S\tm { n");
result.add("fish-\tmon-\tger", "f I S\tm Q N\tg @r");
result.add("fished", "f I S t");
result.add("fisk", "f I s k");
result.add("fiske", "f I s k");
result.add("fiske's", "f I s k s");
result.add("fisk's", "f I s k s");
result.add("fist", "f I s t");
result.add("fist-\tful", "f I s\tt f V l");
result.add("fists", "f I s t s");
result.add("fit", "f I t");
result.add("fit-\tful", "f I t\tf V l");
result.add("fit-\tful-\tly", "f I t\tf V\tl i:");
result.add("fit-\tness", "f I t\tn V s");
result.add("fit-\tted", "f I\tt V d");
result.add("fit-\tter", "f I\tt @r");
result.add("fit-\ttest", "f I\tt V s t");
result.add("fit-\tti-\tpal-\tdi", "f I\tt I\tp Q l\td i:");
result.add("fit-\tting", "f I\tt I N");
result.add("fit-\tting-\tly", "f I\tt I N\tl i:");
result.add("fit-\ttings", "f I\tt I N z");
result.add("fit-\tton", "f I\tt V n");
result.add("fitch", "f I tS");
result.add("fitch-\tburg", "f I tS\tb @r g");
result.add("fits", "f I t s");
result.add("fitt", "f I t");
result.add("fitts", "f I t s");
result.add("fitz", "f I t s");
result.add("fitz-\tge-\trald", "f I t\ts dZ e@\tV l d");
result.add("fitz-\tge-\trald's", "f I t\ts dZ e@\tV l d z");
result.add("fitz-\thugh", "f I t\ts h j u:");
result.add("fitz-\tpat-\trick", "f I t\ts p { t\tr I k");
result.add("fitz-\troy", "f I t\ts r OI");
result.add("fitz-\tsim-\tmons", "f I t\ts I\tm V n z");
result.add("fitz-\twil-\tliam", "f I t\ts w I l\tj V m");
result.add("five", "f aI v");
result.add("five-\tfold", "f aI v\tf @U l d");
result.add("fives", "f aI v z");
result.add("five's", "f aI v z");
result.add("fix", "f I k s");
result.add("fix-\tture", "f I k\ts tS @r");
result.add("fix-\ttures", "f I k\ts tS @r z");
result.add("fixed", "f I k s t");
result.add("fiz-\tz-\tling", "f I\tz V\tl I N");
result.add("fiz-\tzle", "f I\tz V l");
result.add("fiz-\tzled", "f I\tz V l d");
result.add("fiz-\tzles", "f I\tz V l z");
result.add("fizz", "f I z");
result.add("fjeld", "f j e l d");
result.add("fjord", "f j O@ d");
result.add("fjords", "f j O@ d z");
result.add("fla-\tgel-\tla", "f l V\tdZ e\tl V");
result.add("fla-\tgel-\tla-\tted", "f l {\tdZ V\tl eI\tt V d");
result.add("fla-\tgel-\tlate", "f l {\tdZ V\tl eI t");
result.add("fla-\tgel-\tlum", "f l V\tdZ e\tl V m");
result.add("fla-\tgeo-\tlet", "f l {\tdZ V\tl e t");
result.add("fla-\tmer", "f l eI\tm @r");
result.add("fla-\tmi-\tni-\tan", "f l V\tm I\tn i:\tV n");
result.add("fla-\tmin-\tgo", "f l V\tm I N\tg @U");
result.add("fla-\tmin-\tgos", "f l V\tm I N\tg @U z");
result.add("fla-\tming", "f l eI\tm I N");
result.add("fla-\tna-\tgan", "f l {\tn V\tg V n");
result.add("fla-\tni-\tgan", "f l {\tn I\tg V n");
result.add("fla-\tni-\tgan's", "f l {\tn I\tg V n z");
result.add("fla-\tring", "f l e@\tI N");
result.add("fla-\tsher", "f l {\tS @r");
result.add("fla-\tshers", "f l {\tS @r z");
result.add("fla-\tsher's", "f l {\tS @r z");
result.add("fla-\tshes", "f l {\tS V z");
result.add("fla-\tshi-\ter", "f l {\tS i:\t@r");
result.add("fla-\tshing", "f l {\tS I N");
result.add("fla-\tsh's", "f l {\tS V z");
result.add("fla-\tshy", "f l {\tS i:");
result.add("fla-\tthead", "f l { t\th e d");
result.add("fla-\ttheads", "f l { t\th e d z");
result.add("fla-\ttu-\tlent", "f l {\ttS V\tl V n t");
result.add("fla-\tvi-\ta", "f l {\tv i:\tV");
result.add("fla-\tvi-\to", "f l Q\tv i:\t@U");
result.add("fla-\tvi-\tus", "f l eI\tv i:\tV s");
result.add("fla-\tvin", "f l eI\tv I n");
result.add("fla-\tvo-\tring", "f l eI\tv @r\tI N");
result.add("fla-\tvo-\trings", "f l eI\tv @r\tI N z");
result.add("fla-\tvo-\trist", "f l eI\tv @r\tI s t");
result.add("fla-\tvo-\trists", "f l eI\tv @r\tI s t s");
result.add("fla-\tvor", "f l eI\tv @r");
result.add("fla-\tvor-\tful", "f l eI\tv @r\tf V l");
result.add("fla-\tvored", "f l eI\tv @r d");
result.add("fla-\tvors", "f l eI\tv @r z");
result.add("flab", "f l { b");
result.add("flab-\tber-\tgas-\tted", "f l {\tb @r\tg { s\tt V d");
result.add("flab-\tber-\tgast", "f l {\tb @r\tg { s t");
result.add("flab-\tby", "f l {\tb i:");
result.add("flac-\tcid", "f l { k\ts I d");
result.add("flack", "f l { k");
result.add("flag", "f l { g");
result.add("flag-\tging", "f l {\tg I N");
result.add("flag-\tler", "f l { g\tl @r");
result.add("flag-\tpole", "f l { g\tp @U l");
result.add("flag-\tpoles", "f l { g\tp @U l z");
result.add("flag-\trant", "f l eI g\tr V n t");
result.add("flag-\trant-\tly", "f l eI g\tr V n\tt l i:");
result.add("flag-\tship", "f l { g\tS I p");
result.add("flag-\tships", "f l { g\tS I p s");
result.add("flag-\tstaff", "f l { g\ts t { f");
result.add("flag-\tstone", "f l { g\ts t @U n");
result.add("flagg", "f l { g");
result.add("flagged", "f l { g d");
result.add("flags", "f l { g z");
result.add("flaher-\tty", "f l e@\tt i:");
result.add("flai-\tling", "f l eI\tl I N");
result.add("flail", "f l eI l");
result.add("flakes", "f l eI k s");
result.add("flam-\tma-\tbi-\tli-\tty", "f l {\tm V\tb I\tl V\tt i:");
result.add("flam-\tma-\tble", "f l {\tm V\tb V l");
result.add("flames", "f l eI m z");
result.add("flamm", "f l { m");
result.add("flan", "f l { n");
result.add("flan-\tders", "f l { n\td @r z");
result.add("flan-\tges", "f l { n\tdZ V z");
result.add("flan-\tking", "f l { N\tk I N");
result.add("flan-\tna", "f l {\tn V");
result.add("flan-\tne-\try", "f l {\tn @r\ti:");
result.add("flan-\tnel", "f l {\tn V l");
result.add("flan-\tneled", "f l {\tn V l d");
result.add("flan-\tnels", "f l {\tn V l z");
result.add("flange", "f l { n dZ");
result.add("flank", "f l { N k");
result.add("flanked", "f l { N k t");
result.add("flanks", "f l { N k s");
result.add("flann", "f l { n");
result.add("flap", "f l { p");
result.add("flap-\tper", "f l {\tp @r");
result.add("flap-\tpers", "f l {\tp @r z");
result.add("flap-\tping", "f l {\tp I N");
result.add("flapped", "f l { p t");
result.add("flaps", "f l { p s");
result.add("flare", "f l e@");
result.add("flared", "f l e@ d");
result.add("flares", "f l e@ z");
result.add("flash", "f l { S");
result.add("flash-\tback", "f l { S\tb { k");
result.add("flash-\tbacks", "f l { S\tb { k s");
result.add("flash-\tbulb", "f l { S\tb V l b");
result.add("flash-\tlight", "f l { S\tl aI t");
result.add("flash-\tlights", "f l { S\tl aI t s");
result.add("flash-\tpoint", "f l { S\tp OI n t");
result.add("flash-\tpoints", "f l { S\tp OI n t s");
result.add("flashed", "f l { S t");
result.add("flask", "f l { s k");
result.add("flasks", "f l { s k s");
result.add("flat", "f l { t");
result.add("flat-\tbed", "f l { t\tb e d");
result.add("flat-\tboat", "f l { t\tb @U t");
result.add("flat-\tfi-\tshes", "f l { t\tf I\tS V z");
result.add("flat-\tfish", "f l { t\tf I S");
result.add("flat-\tland", "f l { t\tl { n d");
result.add("flat-\tlands", "f l { t\tl { n d z");
result.add("flat-\tly", "f l { t\tl i:");
result.add("flat-\tness", "f l { t\tn V s");
result.add("flat-\tte-\tning", "f l {\tt V\tn I N");
result.add("flat-\tte-\tring", "f l {\tt @r\tI N");
result.add("flat-\tte-\try", "f l {\tt @r\ti:");
result.add("flat-\tten", "f l {\tt V n");
result.add("flat-\ttened", "f l {\tt V n d");
result.add("flat-\tter", "f l {\tt @r");
result.add("flat-\ttered", "f l {\tt @r d");
result.add("flat-\ttish", "f l {\tt I S");
result.add("flat-\tware", "f l { t\tw e@");
result.add("flat-\tworm", "f l { t\tw @r m");
result.add("flats", "f l { t s");
result.add("flatt", "f l { t");
result.add("flau-\tbert", "f l aU\tb @r t");
result.add("flaun-\tted", "f l O: n\tt V d");
result.add("flaun-\tting", "f l O: n\tt I N");
result.add("flaunt", "f l O: n t");
result.add("flaunts", "f l O: n t s");
result.add("flaw", "f l O:");
result.add("flaw-\tless", "f l O:\tl V s");
result.add("flaw-\tless-\tly", "f l O:\tl V s\tl i:");
result.add("flawed", "f l O: d");
result.add("flawn", "f l O: n");
result.add("flaws", "f l O: z");
result.add("flax", "f l { k s");
result.add("flax-\tman", "f l { k\ts m V n");
result.add("flax-\tseed", "f l { k\ts i: d");
result.add("flay", "f l eI");
result.add("flayed", "f l eI d");
result.add("fle-\tder-\tmaus", "f l e\td @r\tm aU s");
result.add("fle-\tming", "f l e\tm I N");
result.add("fle-\tming-\tton", "f l e\tm I N\tt V n");
result.add("fle-\tmings", "f l e\tm I N z");
result.add("fle-\tming's", "f l e\tm I N z");
result.add("fle-\tmish", "f l e\tm I S");
result.add("fle-\tsher", "f l e\tS @r");
result.add("fle-\tshy", "f l e\tS i:");
result.add("fle-\tta", "f l i:\tt V");
result.add("fle-\twel-\tling", "f l u:\te\tl I N");
result.add("fle-\txes", "f l e k\ts V z");
result.add("fle-\txi-\tbi-\tli-\tty", "f l e k\ts I\tb I\tl I\tt i:");
result.add("fle-\txi-\tble", "f l e k\ts I\tb V l");
result.add("fle-\txib-\tly", "f l e k\ts I b\tl i:");
result.add("fle-\txing", "f l e k\ts I N");
result.add("fle-\txion", "f l e k\tS V n");
result.add("flea", "f l i:");
result.add("fleas", "f l i: z");
result.add("fleck", "f l e k");
result.add("flecks", "f l e k s");
result.add("fled", "f l e d");
result.add("fled-\tging", "f l e\tdZ I N");
result.add("fledg-\tling", "f l e dZ\tl I N");
result.add("fledge", "f l e dZ");
result.add("fledged", "f l e dZ d");
result.add("flee", "f l i:");
result.add("flee-\tcy", "f l i:\ts i:");
result.add("flee-\ting", "f l i:\tI N");
result.add("flee-\tman", "f l i:\tm V n");
result.add("flee-\tting", "f l i:\tt I N");
result.add("flee-\tting-\tly", "f l i:\tt I N\tl i:");
result.add("fleece", "f l i: s");
result.add("fleeced", "f l i: s t");
result.add("fleer", "f l I@");
result.add("flees", "f l i: z");
result.add("fleet", "f l i: t");
result.add("fleet-\twood", "f l i: t\tw U d");
result.add("fleets", "f l i: t s");
result.add("fleet's", "f l i: t s");
result.add("flei-\tscher", "f l aI\tS @r");
result.add("flei-\tsher", "f l aI\tS @r");
result.add("fleisch-\tman", "f l aI S\tm V n");
result.add("flem-\tming", "f l e\tm I N");
result.add("flesh", "f l e S");
result.add("fleshed", "f l e S t");
result.add("flet-\tcher", "f l e\ttS @r");
result.add("fleu-\trette", "f l @r\te t");
result.add("fleu-\try", "f l U@\ti:");
result.add("fleur", "f l @r");
result.add("flew", "f l u:");
result.add("flex", "f l e k s");
result.add("flex-\ttime", "f l e k\ts t aI m");
result.add("flexed", "f l e k s t");
result.add("fli-\ter", "f l aI\t@r");
result.add("fli-\ters", "f l aI\t@r z");
result.add("flic-\tke-\tring", "f l I\tk @r\tI N");
result.add("flic-\tker", "f l I\tk @r");
result.add("flic-\tkered", "f l I\tk @r d");
result.add("flic-\tkers", "f l I\tk @r z");
result.add("flic-\tking", "f l I\tk I N");
result.add("flick", "f l I k");
result.add("flicks", "f l I k s");
result.add("flied", "f l aI d");
result.add("flies", "f l aI z");
result.add("fligh-\tty", "f l aI\tt i:");
result.add("flight", "f l aI t");
result.add("flight-\tless", "f l aI t\tl V s");
result.add("flights", "f l aI t s");
result.add("flight's", "f l aI t s");
result.add("flim-\tflam", "f l I m\tf l { m");
result.add("flim-\tsi-\test", "f l I m\tz i:\tV s t");
result.add("flim-\tsy", "f l I m\tz i:");
result.add("flin-\tching", "f l I n\ttS I N");
result.add("flin-\tders", "f l I n\td @r z");
result.add("flin-\tging", "f l I\tN I N");
result.add("flin-\tty", "f l I n\tt i:");
result.add("flinch", "f l I n tS");
result.add("flinched", "f l I n tS t");
result.add("fling", "f l I N");
result.add("flings", "f l I N z");
result.add("flinn", "f l I n");
result.add("flint", "f l I n t");
result.add("flint-\tlock", "f l I n\tt l Q k");
result.add("flint-\tlocks", "f l I n\tt l Q k s");
result.add("flint-\tstone", "f l I n\tt s t @U n");
result.add("flint-\tstones", "f l I n\tt s t @U n z");
result.add("flints", "f l I n t s");
result.add("flint's", "f l I n t s");
result.add("flip", "f l I p");
result.add("flip-\tpant", "f l I\tp V n t");
result.add("flip-\tper", "f l I\tp @r");
result.add("flip-\tpers", "f l I\tp @r z");
result.add("flip-\tpin", "f l I\tp I n");
result.add("flip-\tping", "f l I\tp I N");
result.add("flipped", "f l I p t");
result.add("flips", "f l I p s");
result.add("flir-\tta-\ttion", "f l @r\tt eI\tS V n");
result.add("flir-\tta-\ttions", "f l @r\tt eI\tS V n z");
result.add("flir-\tta-\ttious", "f l @r\tt eI\tS V s");
result.add("flir-\tted", "f l @r\tt V d");
result.add("flir-\tting", "f l @r\tt I N");
result.add("flirt", "f l @r t");
result.add("flirts", "f l @r t s");
result.add("flit", "f l I t");
result.add("flit-\tting", "f l I\tt I N");
result.add("flo", "f l @U");
result.add("flo-\tra", "f l O@\tV");
result.add("flo-\tral", "f l O@\tV l");
result.add("flo-\tral-\tly", "f l O@\tV\tl i:");
result.add("flo-\trance", "f l O@\tV n s");
result.add("flo-\tren-\tce's", "f l O@\tV n\ts V z");
result.add("flo-\tren-\tti-\tna", "f l O@\te n\tt i:\tn V");
result.add("flo-\tren-\ttine", "f l O@\tV n\tt i: n");
result.add("flo-\trence", "f l O@\tV n s");
result.add("flo-\tres", "f l O@\te z");
result.add("flo-\trey", "f l O@\ti:");
result.add("flo-\tri", "f l O@\ti:");
result.add("flo-\tri-\ta", "f l O@\ti:\tV");
result.add("flo-\tri-\tan", "f l O@\ti:\tV n");
result.add("flo-\tri-\tda", "f l O@\tI\td V");
result.add("flo-\tri-\tda's", "f l O@\tI\td V z");
result.add("flo-\tri-\tdi-\tan", "f l O@\tI\td i:\tV n");
result.add("flo-\tri-\tdi-\tans", "f l O@\tI\td i:\tV n z");
result.add("flo-\tri-\tne", "f l O@\ti:\tn i:");
result.add("flo-\tri-\to", "f l O@\ti:\t@U");
result.add("flo-\tri-\to's", "f l O@\ti:\t@U z");
result.add("flo-\trid", "f l O@\tI d");
result.add("flo-\trin", "f l O@\tI n");
result.add("flo-\trin-\tda", "f l O@\ti: n\td V");
result.add("flo-\tris", "f l O@\tI s");
result.add("flo-\trist", "f l Q@\tI s t");
result.add("flo-\trists", "f l O@\tI s t s");
result.add("flo-\tro", "f l O@\t@U");
result.add("flo-\try", "f l O@\ti:");
result.add("flo-\tta-\ttion", "f l @U\tt eI\tS V n");
result.add("flo-\ttil-\tla", "f l @U\tt I\tl V");
result.add("flo-\ttow", "f l Q\tt aU");
result.add("flo-\tur", "f l aU\t@r");
result.add("flo-\turs", "f l aU\t@r z");
result.add("flo-\twe-\tring", "f l aU\t@r\tI N");
result.add("flo-\twe-\try", "f l aU\t@r\ti:");
result.add("flo-\twer", "f l aU\t@r");
result.add("flo-\twer-\tpot", "f l aU\t@r\tp Q t");
result.add("flo-\twered", "f l aU\t@r d");
result.add("flo-\twers", "f l aU\t@r z");
result.add("flo-\twing", "f l @U\tI N");
result.add("floa-\tted", "f l @U\tt V d");
result.add("floa-\tter", "f l @U\tt @r");
result.add("floa-\tters", "f l @U\tt @r z");
result.add("floa-\tting", "f l @U\tt I N");
result.add("float", "f l @U t");
result.add("floats", "f l @U t s");
result.add("floc", "f l Q k");
result.add("floc-\tking", "f l Q\tk I N");
result.add("flock", "f l Q k");
result.add("flocked", "f l Q k t");
result.add("flocks", "f l Q k s");
result.add("floe", "f l @U");
result.add("flog", "f l Q g");
result.add("flog-\tging", "f l Q\tg I N");
result.add("flom", "f l Q m");
result.add("floo-\tded", "f l V\td V d");
result.add("floo-\tding", "f l V\td I N");
result.add("floo-\tring", "f l O@\tI N");
result.add("flood", "f l V d");
result.add("flood-\tgate", "f l V d\tg eI t");
result.add("flood-\tgates", "f l V d\tg eI t s");
result.add("flood-\tlight", "f l V d\tl aI t");
result.add("flood-\tlights", "f l V d\tl aI t s");
result.add("flood-\tplain", "f l V d\tp l eI n");
result.add("flood-\twa-\tter", "f l V d\tw O:\tt @r");
result.add("flood-\twa-\tters", "f l V d\tw O:\tt @r z");
result.add("floods", "f l V d z");
result.add("flook", "f l U k");
result.add("floor", "f l O@");
result.add("floor-\tboard", "f l O@\tb O@ d");
result.add("floor-\tboards", "f l O@\tb O@ d z");
result.add("floored", "f l O@ d");
result.add("floors", "f l O@ z");
result.add("flop", "f l Q p");
result.add("flop-\tping", "f l Q\tp I N");
result.add("flop-\tpy", "f l Q\tp i:");
result.add("flop-\tti-\tcal", "f l Q p\tt I\tk V l");
result.add("flopped", "f l Q p t");
result.add("flops", "f l Q p s");
result.add("flor", "f l O@");
result.add("flor-\trie", "f l O@\ti:");
result.add("flor-\try", "f l O@\ti:");
result.add("flor-\tsheim", "f l O@\tS aI m");
result.add("flore", "f l O@");
result.add("flos-\tsie", "f l O:\ts i:");
result.add("floss", "f l Q s");
result.add("flot-\tsam", "f l Q t\ts V m");
result.add("flou-\tri-\tshes", "f l @r\tI\tS V z");
result.add("flou-\tri-\tshing", "f l @r\tI\tS I N");
result.add("flou-\trish", "f l @r\tI S");
result.add("flou-\trished", "f l @r\tI S t");
result.add("flou-\tted", "f l aU\tt V d");
result.add("flou-\tting", "f l aU\tt I N");
result.add("floun-\tces", "f l aU n\ts V z");
result.add("floun-\tde-\tring", "f l aU n\td @r\tI N");
result.add("floun-\tder", "f l aU n\td @r");
result.add("floun-\tdered", "f l aU n\td @r d");
result.add("floun-\tders", "f l aU n\td @r z");
result.add("flounce", "f l aU n s");
result.add("flout", "f l aU t");
result.add("flow", "f l @U");
result.add("flowe", "f l @U");
result.add("flowed", "f l @U d");
result.add("flown", "f l @U n");
result.add("flows", "f l @U z");
result.add("floy", "f l OI");
result.add("floyd", "f l OI d");
result.add("flu", "f l u:");
result.add("flu-\ten-\tcy", "f l u:\tV n\ts i:");
result.add("flu-\tent", "f l u:\tV n t");
result.add("flu-\tent-\tly", "f l u:\tV n\tt l i:");
result.add("flu-\ti-\tdi-\tty", "f l u:\tI\td I\tt i:");
result.add("flu-\tid", "f l u:\tI d");
result.add("flu-\tids", "f l u:\tI d z");
result.add("flu-\tker", "f l u:\tk @r");
result.add("flu-\tor's", "f l u:\t@r z");
result.add("flu-\tshes", "f l V\tS V z");
result.add("flu-\tshing", "f l V\tS I N");
result.add("flu-\ttist", "f l u:\tt I s t");
result.add("flu-\tty", "f l u:\tt i:");
result.add("flu-\tvi-\tal", "f l u:\tv i:\tV l");
result.add("flu-\txio-\tnal", "f l V k\tS V\tn V l");
result.add("flubs", "f l V b z");
result.add("fluc-\ttu-\ta-\tted", "f l V k\ttS V\tw eI\tt V d");
result.add("fluc-\ttu-\ta-\tting", "f l V k\ttS V\tw eI\tt I N");
result.add("fluc-\ttu-\ta-\ttion", "f l V k\ttS u:\teI\tS V n");
result.add("fluc-\ttu-\ta-\ttions", "f l V k\ttS u:\teI\tS V n z");
result.add("fluc-\ttu-\tate", "f l V k\ttS V\tw eI t");
result.add("fluc-\ttu-\tates", "f l V k\ttS u:\teI t s");
result.add("flue", "f l u:");
result.add("fluf-\tfi-\ter", "f l V\tf i:\t@r");
result.add("fluf-\tfy", "f l V\tf i:");
result.add("fluff", "f l V f");
result.add("fluffed", "f l V f t");
result.add("fluffs", "f l V f s");
result.add("fluke", "f l u: k");
result.add("flukes", "f l u: k s");
result.add("fluo-\tri-\tda-\ttion", "f l U@\tI\td eI\tS V n");
result.add("fluo-\tride", "f l U@\taI d");
result.add("fluo-\trides", "f l U@\taI d z");
result.add("fluo-\trine", "f l U@\ti: n");
result.add("fluo-\trite", "f l U@\taI t");
result.add("fluo-\tro-\tcar-\tbon", "f l U@\t@U\tk Q@\tb V n");
result.add("fluo-\tro-\tcar-\tbons", "f l U@\t@U\tk Q@\tb V n z");
result.add("fluo-\tro-\tme-\tter", "f l U@\tQ\tm V\tt @r");
result.add("fluors-\tpar", "f l U@ s\tp Q@");
result.add("flur-\tried", "f l @r\ti: d");
result.add("flur-\tries", "f l @r\ti: z");
result.add("flur-\try", "f l @r\ti:");
result.add("flus", "f l u: z");
result.add("flus-\tter", "f l V s\tt @r");
result.add("flus-\ttered", "f l V s\tt @r d");
result.add("flush", "f l V S");
result.add("flushed", "f l V S t");
result.add("flut-\tte-\tring", "f l V\tt @r\tI N");
result.add("flut-\tter", "f l V\tt @r");
result.add("flut-\ttered", "f l V\tt @r d");
result.add("flut-\tters", "f l V\tt @r z");
result.add("flute", "f l u: t");
result.add("flutes", "f l u: t s");
result.add("flux", "f l V k s");
result.add("fly", "f l aI");
result.add("fly-\tby", "f l aI\tb aI");
result.add("fly-\tcat-\tcher", "f l aI\tk {\ttS @r");
result.add("fly-\ter", "f l aI\t@r");
result.add("fly-\ters", "f l aI\t@r z");
result.add("fly-\ting", "f l aI\tI N");
result.add("fly-\tpa-\tper", "f l aI\tp eI\tp @r");
result.add("fly-\tway", "f l aI\tw eI");
result.add("fly-\twheel", "f l aI\tw i: l");
result.add("flynn", "f l I n");
result.add("flyt-\trap", "f l aI t\tr { p");
result.add("fo-\tcal", "f @U\tk V l");
result.add("fo-\tcu-\tses", "f @U\tk V\ts V z");
result.add("fo-\tcu-\tsing", "f @U\tk V\ts I N");
result.add("fo-\tcus", "f @U\tk V s");
result.add("fo-\tcused", "f @U\tk V s t");
result.add("fo-\tcussed", "f @U\tk V s t");
result.add("fo-\tgar-\tty", "f Q\tg Q@\tt i:");
result.add("fo-\tgel", "f @U\tg V l");
result.add("fo-\tgle", "f @U\tg V l");
result.add("fo-\tgy", "f @U\tg i:");
result.add("fo-\tia", "f @U\tj V");
result.add("fo-\tley", "f @U\tl i:");
result.add("fo-\tley's", "f @U\tl i: z");
result.add("fo-\tli-\ta-\ttion", "f @U\tl i:\teI\tS V n");
result.add("fo-\tli-\tate", "f @U\tl i:\teI t");
result.add("fo-\tliage", "f @U\tl I dZ");
result.add("fo-\tlic", "f Q\tl I k");
result.add("fo-\tmen-\tted", "f @U\tm e n\tt V d");
result.add("fo-\tmen-\tting", "f @U\tm e n\tt I N");
result.add("fo-\tmen-\tto", "f @U\tm e n\tt @U");
result.add("fo-\tment", "f @U\tm e n t");
result.add("fo-\tra", "f O@\tV");
result.add("fo-\tra-\tges", "f O@\tV\tdZ V z");
result.add("fo-\tra-\tging", "f O@\tI\tdZ I N");
result.add("fo-\tra-\tker", "f O@\tV\tk @r");
result.add("fo-\tra-\tmen", "f @r\teI\tm V n");
result.add("fo-\trage", "f O@\tI dZ");
result.add("fo-\tray", "f O@\teI");
result.add("fo-\trays", "f O@\teI z");
result.add("fo-\trbad", "f @r\tb { d");
result.add("fo-\trbade", "f @r\tb eI d");
result.add("fo-\trearm", "f O@\tQ@ m");
result.add("fo-\treig-\tner", "f O@\tI\tn @r");
result.add("fo-\treig-\tners", "f Q@\tI\tn @r z");
result.add("fo-\treign", "f O@\tI n");
result.add("fo-\tres-\tted", "f O@\tV s\tt V d");
result.add("fo-\tres-\tter", "f O@\tV s\tt @r");
result.add("fo-\tres-\tters", "f O@\tV s\tt @r z");
result.add("fo-\trest", "f O@\tV s t");
result.add("fo-\trest-\try", "f O@\tV s\tt r i:");
result.add("fo-\trest-\tville", "f O@\te s\tt v I l");
result.add("fo-\trests", "f O@\tV s t s");
result.add("fo-\trest's", "f O@\tV s t s");
result.add("fo-\trex", "f O@\te k s");
result.add("fo-\trint", "f O@\tI n t");
result.add("fo-\trints", "f O@\tI n t s");
result.add("fo-\trum", "f O@\tV m");
result.add("fo-\trums", "f O@\tV m z");
result.add("fo-\trum's", "f O@\tV m z");
result.add("fo-\tsa-\tmax", "f Q\ts V\tm { k s");
result.add("fo-\txes", "f Q k\ts V z");
result.add("fo-\tx's", "f Q k\ts V z");
result.add("fo-\txy", "f Q k\ts i:");
result.add("fo-\tyer", "f OI\t@r");
result.add("foa-\tling", "f @U\tl I N");
result.add("foa-\tming", "f @U\tm I N");
result.add("foa-\tmy", "f @U\tm i:");
result.add("foal", "f @U l");
result.add("foam", "f @U m");
result.add("foams", "f @U m z");
result.add("fob", "f O: b");
result.add("fod-\tder", "f Q\td @r");
result.add("foe", "f @U");
result.add("foes", "f @U z");
result.add("fog", "f Q g");
result.add("fog-\tgi-\test", "f Q\tg i:\tV s t");
result.add("fog-\tgy", "f Q\tg i:");
result.add("fogg", "f Q g");
result.add("foi-\tble", "f OI\tb V l");
result.add("foi-\tbles", "f OI\tb V l z");
result.add("foi-\tling", "f OI\tl I N");
result.add("foie", "f OI");
result.add("foil", "f OI l");
result.add("foiled", "f OI l d");
result.add("foils", "f OI l z");
result.add("fois-\tted", "f OI s\tt V d");
result.add("fois-\tter", "f OI s\tt @r");
result.add("foist", "f OI s t");
result.add("fok-\tker", "f Q\tk @r");
result.add("fol-\tded", "f @U l\td V d");
result.add("fol-\tden", "f @U l\td V n");
result.add("fol-\tder", "f @U l\td @r");
result.add("fol-\tders", "f @U l\td @r z");
result.add("fol-\tding", "f @U l\td I N");
result.add("fol-\tger", "f @U l\tdZ @r");
result.add("fol-\tgers", "f @U l\tdZ @r z");
result.add("fol-\tger's", "f @U l\tdZ @r z");
result.add("fol-\tkish", "f @U\tk I S");
result.add("fol-\tlett", "f Q\tl V t");
result.add("fol-\tlette", "f Q\tl e t");
result.add("fol-\tli-\tcle", "f Q\tl I\tk V l");
result.add("fol-\tli-\tcles", "f Q\tl I\tk V l z");
result.add("fol-\tlies", "f Q\tl i: z");
result.add("fol-\tlis", "f Q\tl I s");
result.add("fol-\tlo-\twer", "f Q\tl @U\t@r");
result.add("fol-\tlo-\twers", "f Q\tl @U\t@r z");
result.add("fol-\tlo-\twing", "f Q\tl @U\tI N");
result.add("fol-\tlo-\twings", "f Q\tl @U\tI N z");
result.add("fol-\tlow", "f Q\tl @U");
result.add("fol-\tlow-\tup", "f Q\tl @U\tV p");
result.add("fol-\tlowed", "f Q\tl @U d");
result.add("fol-\tlows", "f Q\tl @U z");
result.add("fol-\tly", "f Q\tl i:");
result.add("fol-\tsom", "f @U l\ts V m");
result.add("fold", "f @U l d");
result.add("folds", "f @U l d z");
result.add("folk", "f @U k");
result.add("folk-\tlore", "f @U k\tl O@");
result.add("folk-\trock", "f @U k\tr Q k");
result.add("folk-\tsy", "f @U k\ts i:");
result.add("folk-\ttale", "f @U k\tt eI l");
result.add("folk-\tway", "f @U k\tw eI");
result.add("folk-\tways", "f @U k\tw eI z");
result.add("folks", "f @U k s");
result.add("foll-\tmer", "f Q l\tm @r");
result.add("fon-\td-\tling", "f Q n\td V\tl I N");
result.add("fon-\tda", "f Q n\td V");
result.add("fon-\tda's", "f Q n\td V z");
result.add("fon-\tder", "f Q n\td @r");
result.add("fon-\tdest", "f Q n\td V s t");
result.add("fon-\tdle", "f O: n\td V l");
result.add("fon-\tdled", "f O: n\td V l d");
result.add("fon-\tdue", "f Q n\td j u:");
result.add("fon-\tdues", "f Q n\td u: z");
result.add("fon-\tse-\tca", "f @U n\ts e\tk V");
result.add("fon-\tta-\tna", "f O: n\tt {\tn V");
result.add("fon-\ttaine", "f O: n\tt eI n");
result.add("fon-\ttes", "f @U n\tt e s");
result.add("fon-\tville", "f @U n\tv I l");
result.add("fond", "f Q n d");
result.add("fond-\tly", "f Q n\td l i:");
result.add("fond-\tness", "f Q n\td n V s");
result.add("fone", "f @U n");
result.add("fong", "f O: N");
result.add("fons", "f Q n z");
result.add("font", "f Q n t");
result.add("fonts", "f Q n t s");
result.add("foo", "f u:");
result.add("foo-\tle-\try", "f u:\tl @r\ti:");
result.add("foo-\tling", "f u:\tl I N");
result.add("foo-\tlish", "f u:\tl I S");
result.add("foo-\tlish-\tly", "f u:\tl I S\tl i:");
result.add("foo-\tlish-\tness", "f u:\tl I S\tn V s");
result.add("foo-\ttage", "f U\tt I dZ");
result.add("foo-\tted", "f U\tt V d");
result.add("foo-\tter", "f U\tt @r");
result.add("foo-\tting", "f U\tt I N");
result.add("food", "f u: d");
result.add("food-\tstuff", "f u: d\ts t V f");
result.add("food-\tstuffs", "f u: d\ts t V f s");
result.add("food-\tways", "f u: d\tw eI z");
result.add("foods", "f u: d z");
result.add("food's", "f u: d z");
result.add("fool", "f u: l");
result.add("fool-\thar-\tdy", "f u: l\th Q@\td i:");
result.add("fool-\tproof", "f u: l\tp r u: f");
result.add("fooled", "f u: l d");
result.add("fools", "f u: l z");
result.add("fool's", "f u: l z");
result.add("foos", "f u: z");
result.add("foot", "f U t");
result.add("foot-\tball", "f U t\tb O: l");
result.add("foot-\tballs", "f U t\tb O: l z");
result.add("foot-\tball's", "f U t\tb O: l z");
result.add("foot-\tfall", "f U t\tf O: l");
result.add("foot-\thill", "f U t\th I l");
result.add("foot-\thills", "f U t\th I l z");
result.add("foot-\thold", "f U t\th @U l d");
result.add("foot-\tholds", "f U t\th @U l d z");
result.add("foot-\tlight", "f U t\tl aI t");
result.add("foot-\tlights", "f U t\tl aI t s");
result.add("foot-\tloose", "f U t\tl u: s");
result.add("foot-\tman", "f U t\tm V n");
result.add("foot-\tno-\tted", "f U t\tn @U\tt V d");
result.add("foot-\tno-\tting", "f U t\tn @U\tt I N");
result.add("foot-\tnote", "f U t\tn @U t");
result.add("foot-\tnotes", "f U t\tn @U t s");
result.add("foot-\tpath", "f U t\tp { T");
result.add("foot-\tprint", "f U t\tp r I n t");
result.add("foot-\tprints", "f U t\tp r I n t s");
result.add("foot-\trace", "f U t\tr eI s");
result.add("foot-\tstep", "f U t\ts t e p");
result.add("foot-\tsteps", "f U t\ts t e p s");
result.add("foot-\twall", "f U t\tw O: l");
result.add("foot-\twear", "f U t\tw e@");
result.add("foot-\twork", "f U t\tw @r k");
result.add("foote", "f U t");
result.add("foote's", "f U t s");
result.add("fop", "f O: p");
result.add("for", "f O@");
result.add("for-\tbea-\trance", "f O@\tb e@\tV n s");
result.add("for-\tbid", "f @r\tb I d");
result.add("for-\tbid-\tden", "f O@\tb I\td V n");
result.add("for-\tbid-\tding", "f @r\tb I\td I N");
result.add("for-\tbids", "f @r\tb I d z");
result.add("for-\tceps", "f O@\ts e p s");
result.add("for-\tces", "f O@\ts V z");
result.add("for-\tce's", "f O@\ts V z");
result.add("for-\tci-\tble", "f O@\ts I\tb V l");
result.add("for-\tci-\ter", "f O@\tk i:\t@r");
result.add("for-\tcib-\tly", "f O@\ts I b\tl i:");
result.add("for-\tcing", "f O@\ts I N");
result.add("for-\tdham", "f O@\td V m");
result.add("for-\tdyce", "f O@\td aI s");
result.add("for-\te-\tver", "f @r\te\tv @r");
result.add("for-\tfei-\tta-\tble", "f O@\tf I\tt V\tb V l");
result.add("for-\tfei-\tted", "f O@\tf I\tt I d");
result.add("for-\tfei-\tting", "f O@\tf I\tt I N");
result.add("for-\tfei-\tture", "f O@\tf I\ttS @r");
result.add("for-\tfei-\ttures", "f O@\tf I\ttS @r z");
result.add("for-\tfeit", "f O@\tf I t");
result.add("for-\tgave", "f @r\tg eI v");
result.add("for-\tge-\tries", "f O@\tdZ @r\ti: z");
result.add("for-\tge-\try", "f O@\tdZ @r\ti:");
result.add("for-\tger", "f O@\tdZ @r");
result.add("for-\tgers", "f O@\tdZ @r z");
result.add("for-\tges", "f O@\tdZ V z");
result.add("for-\tget", "f @r\tg e t");
result.add("for-\tget-\tful", "f O@\tg e t\tf V l");
result.add("for-\tget-\tta-\tble", "f O@\tg e\tt V\tb V l");
result.add("for-\tget-\tting", "f @r\tg e\tt I N");
result.add("for-\tgets", "f @r\tg e t s");
result.add("for-\tgette", "f @r\tZ e t");
result.add("for-\tgi-\tva-\tble", "f O@\tg I\tv V\tb V l");
result.add("for-\tgi-\tven", "f @r\tg I\tv V n");
result.add("for-\tgi-\tving", "f @r\tg I\tv I N");
result.add("for-\tgie", "f O@\tdZ i:");
result.add("for-\tging", "f O@\tdZ I N");
result.add("for-\tgings", "f O:\tdZ I N z");
result.add("for-\tgive", "f @r\tg I v");
result.add("for-\tgive-\tness", "f @r\tg I v\tn V s");
result.add("for-\tgives", "f @r\tg I v z");
result.add("for-\tgo", "f O@\tg @U");
result.add("for-\tgo-\ting", "f O@\tg @U\tI N");
result.add("for-\tgoes", "f O@\tg @U z");
result.add("for-\tgone", "f O@\tg Q n");
result.add("for-\tgot", "f @r\tg Q t");
result.add("for-\tgot-\tten", "f @r\tg Q\tt V n");
result.add("for-\tker", "f O@\tk @r");
result.add("for-\tkey", "f O@\tk i:");
result.add("for-\tking", "f O@\tk I N");
result.add("for-\tlorn", "f @r\tl O@ n");
result.add("for-\tma", "f O@\tm V");
result.add("for-\tma-\tli-\tsm", "f O@\tm V\tl I\tz V m");
result.add("for-\tma-\tli-\tties", "f O@\tm {\tl I\tt i: z");
result.add("for-\tma-\tli-\tty", "f O@\tm {\tl I\tt i:");
result.add("for-\tma-\tli-\tza-\ttion", "f O@\tm V\tl I\tz eI\tS V n");
result.add("for-\tma-\tli-\tzes", "f O@\tm V\tl aI\tz V z");
result.add("for-\tma-\tli-\tzing", "f O@\tm V\tl aI\tz I N");
result.add("for-\tma-\tlist", "f O@\tm V\tl V s t");
result.add("for-\tma-\tlize", "f O@\tm V\tl aI z");
result.add("for-\tma-\tlized", "f O@\tm V\tl aI z d");
result.add("for-\tma-\ttion", "f O@\tm eI\tS V n");
result.add("for-\tma-\ttions", "f O@\tm eI\tS V n z");
result.add("for-\tma-\ttive", "f O@\tm V\tt I v");
result.add("for-\tmal", "f O@\tm V l");
result.add("for-\tmal-\tde-\thyde", "f O@\tm { l\td V\th aI d");
result.add("for-\tmal-\tly", "f O@\tm V\tl i:");
result.add("for-\tman", "f O@\tm { n");
result.add("for-\tmant", "f O@\tm V n t");
result.add("for-\tmants", "f O@\tm V n t s");
result.add("for-\tmat", "f O@\tm { t");
result.add("for-\tmats", "f O@\tm { t s");
result.add("for-\tmer", "f O@\tm @r");
result.add("for-\tmer-\tly", "f O@\tm @r\tl i:");
result.add("for-\tmi-\tca", "f O@\tm aI\tk V");
result.add("for-\tmi-\tca's", "f O@\tm aI\tk V z");
result.add("for-\tmi-\tda-\tble", "f O@\tm I\td V\tb V l");
result.add("for-\tmi-\tdab-\tly", "f O@\tm I\td V b\tl i:");
result.add("for-\tmic", "f O@\tm I k");
result.add("for-\tming", "f O@\tm I N");
result.add("for-\tmo-\tsa", "f O@\tm @U\ts V");
result.add("for-\tmo-\tso", "f O@\tm @U\ts @U");
result.add("for-\tmu-\tla", "f O@ m\tj V\tl V");
result.add("for-\tmu-\tla-\tic", "f O@ m\tj V\tl eI\tI k");
result.add("for-\tmu-\tla-\try", "f O@ m\tj V\tl e@\ti:");
result.add("for-\tmu-\tla-\tted", "f O@ m\tj V\tl eI\tt V d");
result.add("for-\tmu-\tla-\tting", "f O@ m\tj V\tl eI\tt I N");
result.add("for-\tmu-\tla-\ttion", "f O@ m\tj u:\tl eI\tS V n");
result.add("for-\tmu-\tla-\ttions", "f O@ m\tj u:\tl eI\tS V n z");
result.add("for-\tmu-\tlas", "f O@ m\tj V\tl V z");
result.add("for-\tmu-\tlate", "f O@ m\tj V\tl eI t");
result.add("for-\tmu-\tlates", "f O@ m\tj V\tl eI t s");
result.add("for-\tney", "f O@\tn i:");
result.add("for-\trer", "f O:\t@r r");
result.add("for-\tres-\ttal", "f O@\tV s\tt V l");
result.add("for-\tres-\tter", "f O@\tV s\tt @r");
result.add("for-\trest", "f O@\tV s t");
result.add("for-\tsa-\tken", "f O@\ts eI\tk V n");
result.add("for-\tsa-\tking", "f O@\ts eI\tk I N");
result.add("for-\tsake", "f O@\ts eI k");
result.add("for-\tsee", "f @r\ts i:");
result.add("for-\tsee-\ta-\tble", "f O@\ts i:\tV\tb V l");
result.add("for-\tsook", "f O@\ts U k");
result.add("for-\tsy-\tthi-\ta", "f O@\ts I\tT i:\tV");
result.add("for-\tsy-\tthi-\tas", "f O@\ts I\tT i:\tV z");
result.add("for-\tsyth", "f O@\ts aI T");
result.add("for-\tsythe", "f O@\ts aI D");
result.add("for-\ttas", "f O@\tt V s");
result.add("for-\tte", "f O@\tt eI");
result.add("for-\ttes", "f O@\tt eI z");
result.add("for-\tti-\ter", "f O@\tt i:\t@r");
result.add("for-\tti-\ter's", "f O@\tt i:\t@r z");
result.add("for-\tti-\teth", "f O@\tt i:\tV T");
result.add("for-\tti-\tfi-\tca-\ttion", "f O@\tt I\tf I\tk eI\tS V n");
result.add("for-\tti-\tfi-\tca-\ttions", "f O@\tt I\tf I\tk eI\tS V n z");
result.add("for-\tti-\tfi-\ter", "f O@\tt I\tf aI\t@r");
result.add("for-\tti-\tfi-\ters", "f O@\tt I\tf aI\t@r z");
result.add("for-\tti-\tfied", "f O@\tt I\tf aI d");
result.add("for-\tti-\tfy", "f O@\tt I\tf aI");
result.add("for-\tti-\tfy-\ting", "f O@\tt I\tf aI\tI N");
result.add("for-\tti-\ttude", "f O@\tt I\tt u: d");
result.add("for-\tties", "f O@\tt i: z");
result.add("for-\ttin", "f O@\tt I n");
result.add("for-\ttis", "f O@\tt I s");
result.add("for-\ttres-\tses", "f O@ t\tr V\ts V z");
result.add("for-\ttress", "f O@ t\tr V s");
result.add("for-\ttu-\ti-\ttous", "f O@\tt u:\tI\tt V s");
result.add("for-\ttu-\tna", "f O@\tt u:\tn V");
result.add("for-\ttu-\tna-\tto", "f O@\tt u:\tn Q\tt @U");
result.add("for-\ttu-\tnate", "f O@\ttS V\tn V t");
result.add("for-\ttu-\tnate-\tly", "f O@\ttS V\tn V t\tl i:");
result.add("for-\ttune", "f O@\ttS V n");
result.add("for-\ttunes", "f O@\ttS V n z");
result.add("for-\ttune's", "f O@\ttS V n z");
result.add("for-\tty", "f O@\tt i:");
result.add("for-\tty's", "f O@\tt i: z");
result.add("for-\twar-\tded", "f O@\tw @r\td V d");
result.add("for-\twar-\tder", "f O@\tw @r\td @r");
result.add("for-\twar-\tders", "f O@\tw @r\td @r z");
result.add("for-\twar-\tding", "f O@\tw @r\td I N");
result.add("for-\tward", "f O@\tw @r d");
result.add("for-\twards", "f O@\tw @r d z");
result.add("forbe-\ts's", "f O@ b\tz V z");
result.add("forbes", "f O@ b z");
result.add("force", "f O@ s");
result.add("force-\tful", "f O@ s\tf V l");
result.add("force-\tful-\tly", "f O@ s\tf V\tl i:");
result.add("force-\tful-\tness", "f O@ s\tf V l\tn V s");
result.add("forced", "f O@ s t");
result.add("ford", "f O@ d");
result.add("fords", "f O@ d z");
result.add("ford's", "f O@ d z");
result.add("fore", "f O@");
result.add("fore-\tbear", "f O@\tb e@");
result.add("fore-\tbears", "f O@\tb e@ z");
result.add("fore-\tbo-\tding", "f O@\tb @U\td I N");
result.add("fore-\tbode", "f O@\tb @U d");
result.add("fore-\tbrain", "f O@ b\tr eI n");
result.add("fore-\tcas-\tted", "f O@\tk { s\tt V d");
result.add("fore-\tcas-\tter", "f O@\tk { s\tt @r");
result.add("fore-\tcas-\tters", "f O@\tk { s\tt @r z");
result.add("fore-\tcas-\tting", "f O@\tk { s\tt I N");
result.add("fore-\tcast", "f O@\tk { s t");
result.add("fore-\tcasts", "f O@\tk { s t s");
result.add("fore-\tclo-\tses", "f O@ k\tl @U\tz V z");
result.add("fore-\tclo-\tsing", "f O@ k\tl @U\tz I N");
result.add("fore-\tclo-\tsure", "f O@ k\tl @U\tZ @r");
result.add("fore-\tclo-\tsures", "f O@ k\tl @U\tZ @r z");
result.add("fore-\tclose", "f O@ k\tl @U z");
result.add("fore-\tclosed", "f O@ k\tl @U z d");
result.add("fore-\tfa-\tther", "f O@\tf Q\tD @r");
result.add("fore-\tfa-\tthers", "f O@\tf Q\tD @r z");
result.add("fore-\tfin-\tger", "f O@\tf I N\tg @r");
result.add("fore-\tfin-\tgers", "f O@\tf I N\tg @r z");
result.add("fore-\tfoot", "f O@\tf U t");
result.add("fore-\tfront", "f O@ f\tr V n t");
result.add("fore-\tgo", "f O@\tg @U");
result.add("fore-\tgo-\ting", "f O@\tg @U\tI N");
result.add("fore-\tgone", "f O@\tg O: n");
result.add("fore-\tground", "f O@ g\tr aU n d");
result.add("fore-\thand", "f O@\th { n d");
result.add("fore-\thands", "f O@\th { n d z");
result.add("fore-\thead", "f O@\th e d");
result.add("fore-\theads", "f O@\th e d z");
result.add("fore-\tlimb", "f O@\tl I m");
result.add("fore-\tlimbs", "f O@\tl I m z");
result.add("fore-\tper-\tson", "f O@\tp @r\ts V n");
result.add("fore-\tplay", "f O@ p\tl eI");
result.add("fore-\trun-\tner", "f O@\tV\tn @r");
result.add("fore-\trun-\tners", "f O@\tV\tn @r z");
result.add("fore-\tsaw", "f O@\ts O:");
result.add("fore-\tsee", "f O@\ts i:");
result.add("fore-\tsee-\ta-\tble", "f O@\ts i:\tV\tb V l");
result.add("fore-\tsee-\ting", "f O@\ts i:\tI N");
result.add("fore-\tseen", "f O@\ts i: n");
result.add("fore-\tsees", "f O@\ts i: z");
result.add("fore-\tsha-\tdow", "f O@\tS {\td @U");
result.add("fore-\tsha-\tdow-\ting", "f O@\tS {\td @U\tI N");
result.add("fore-\tsha-\tdowed", "f O@\tS {\td @U d");
result.add("fore-\tsha-\tdows", "f O@\tS {\td @U z");
result.add("fore-\tsight", "f O@\ts aI t");
result.add("fore-\ttaste", "f O@\tt eI s t");
result.add("fore-\ttel-\tling", "f O@\tt e\tl I N");
result.add("fore-\ttell", "f O@\tt e l");
result.add("fore-\tthought", "f O@\tT O: t");
result.add("fore-\ttold", "f O@\tt @U l d");
result.add("fore-\twarned", "f O@\tw O@ n d");
result.add("fore-\twing", "f O@\tw I N");
result.add("fore-\twings", "f O@\tw I N z");
result.add("fore-\two-\tman", "f O@\tw u:\tm V n");
result.add("fore-\tword", "f O@\tw @r d");
result.add("fores-\ttal-\tling", "f O@ s\tt Q\tl I N");
result.add("fores-\ttall", "f O@ s\tt O: l");
result.add("fores-\ttalled", "f O@ s\tt Q l d");
result.add("foret", "f O@ t");
result.add("forge", "f O@ dZ");
result.add("forged", "f O@ dZ d");
result.add("fork", "f O@ k");
result.add("fork-\tlift", "f O@ k\tl I f t");
result.add("fork-\tlifts", "f O@ k\tl I f t s");
result.add("forked", "f O@ k t");
result.add("forks", "f O@ k s");
result.add("form", "f O@ m");
result.add("form-\tby", "f O@ m\tb i:");
result.add("formed", "f O@ m d");
result.add("forms", "f O@ m z");
result.add("fors-\tter", "f O@ s\tt @r");
result.add("fors-\twear", "f O@ s\tw e@");
result.add("fors-\tworn", "f O@ s\tw O@ n");
result.add("forst", "f O@ s t");
result.add("forst-\tner", "f O@ s\tt n @r");
result.add("fort", "f O@ t");
result.add("fort-\tman", "f O@ t\tm V n");
result.add("fort-\tna", "f O@ t\tn V");
result.add("fort-\tnight", "f O@ t\tn aI t");
result.add("fort-\tnight-\tly", "f O@ t\tn aI t\tl i:");
result.add("forth", "f O@ T");
result.add("forth-\tco-\tming", "f O@ T\tk V\tm I N");
result.add("forth-\tright", "f O@ T\tr aI t");
result.add("forth-\tright-\tly", "f O@ T\tr aI t\tl i:");
result.add("forth-\tright-\tness", "f O@ T\tr aI t\tn V s");
result.add("forth-\twith", "f O@ T\tw I T");
result.add("forts", "f O@ t s");
result.add("fos-\tdick", "f Q s\td I k");
result.add("fos-\tkett", "f Q s\tk V t");
result.add("fos-\tsi-\tli-\tfe-\trous", "f Q\ts I\tl I\tf @r\tV s");
result.add("fos-\tsi-\tlize", "f Q\ts I\tl aI z");
result.add("fos-\tsi-\tlized", "f Q\ts I\tl aI z d");
result.add("fos-\tsil", "f Q\ts V l");
result.add("fos-\tsils", "f Q\ts I l z");
result.add("fos-\tte-\tring", "f Q s\tt @r\tI N");
result.add("fos-\tter", "f Q s\tt @r");
result.add("fos-\ttered", "f Q s\tt @r d");
result.add("fos-\tters", "f Q s\tt @r z");
result.add("fos-\tter's", "f Q s\tt @r z");
result.add("foss", "f Q s");
result.add("fosse", "f Q s");
result.add("fou-\tgere", "f aU\tg @r");
result.add("fou-\tling", "f aU\tl I N");
result.add("fou-\tshee", "f aU\tS i:");
result.add("fou-\tty", "f aU\tt i:");
result.add("fought", "f O: t");
result.add("foul", "f aU l");
result.add("foul-\tness", "f aU l\tn V s");
result.add("fouled", "f aU l d");
result.add("foulk", "f aU l k");
result.add("fouls", "f aU l z");
result.add("foun-\tda-\ttio-\tnal", "f aU n\td eI\tS V\tn V l");
result.add("foun-\tda-\ttion", "f aU n\td eI\tS V n");
result.add("foun-\tda-\ttions", "f aU n\td eI\tS V n z");
result.add("foun-\tda-\ttion's", "f aU n\td eI\tS V n z");
result.add("foun-\tde-\tring", "f aU n\td @r\tI N");
result.add("foun-\tded", "f aU n\td V d");
result.add("foun-\tder", "f aU n\td @r");
result.add("foun-\tdered", "f aU n\td @r d");
result.add("foun-\tders", "f aU n\td @r z");
result.add("foun-\tder's", "f aU n\td @r z");
result.add("foun-\tders'", "f aU n\td @r z");
result.add("foun-\tding", "f aU n\td I N");
result.add("foun-\tdry", "f aU n\td r i:");
result.add("foun-\ttain", "f aU n\tt I n");
result.add("foun-\ttains", "f aU n\tt I n z");
result.add("found", "f aU n d");
result.add("found-\tling", "f aU n\td l I N");
result.add("found-\tries", "f aU n\td r i: z");
result.add("four", "f O@");
result.add("four-\tfold", "f O@\tf @U l d");
result.add("four-\tnet", "f U@\tn e t");
result.add("four-\tni-\ter", "f O@\tn i:\t@r");
result.add("four-\tsome", "f O@\ts V m");
result.add("four-\tsquare", "f O@ s\tk w e@");
result.add("four-\tteen", "f O@\tt i: n");
result.add("four-\tteens", "f O@\tt i: n z");
result.add("four-\tteenth", "f O@\tt i: n T");
result.add("fours", "f O@ z");
result.add("four's", "f O@ z");
result.add("fourth", "f O@ T");
result.add("fourth-\tly", "f O@ T\tl i:");
result.add("fourths", "f O@ T s");
result.add("fow-\tle", "f aU\tV l");
result.add("fow-\tler", "f aU\tl @r");
result.add("fow-\tler's", "f aU\tl @r z");
result.add("fow-\tles", "f aU\tV l z");
result.add("fowkes", "f aU k s");
result.add("fowl", "f aU l");
result.add("fowlkes", "f aU l k s");
result.add("fox", "f Q k s");
result.add("fox-\tbo-\tro", "f Q k\ts b @r\t@U");
result.add("fox-\tfire", "f Q k\ts f aI r");
result.add("fox-\tglove", "f Q k\ts g l V v");
result.add("fox-\thole", "f Q k\ts h @U l");
result.add("fox-\tholes", "f Q k\ts h @U l z");
result.add("fox-\thound", "f Q k\ts h aU n d");
result.add("fox-\ttail", "f Q k\ts t eI l");
result.add("fox-\twood", "f Q k\ts w U d");
result.add("fox-\tworth", "f Q k\ts w @r T");
result.add("foy", "f OI");
result.add("foyle", "f OI l");
result.add("fr-\tyer", "f r aI\t@r");
result.add("fr-\tyers", "f r aI\t@r z");
result.add("fra-\tcas", "f r eI\tk V s");
result.add("fra-\tger", "f r eI\tg @r");
result.add("fra-\tgi-\tli-\tty", "f r V\tdZ I\tl V\tt i:");
result.add("fra-\tgile", "f r {\tdZ V l");
result.add("fra-\tmer", "f r eI\tm @r");
result.add("fra-\tmers", "f r eI\tm @r z");
result.add("fra-\tming", "f r eI\tm I N");
result.add("fra-\tming-\tham", "f r eI\tm I N\th { m");
result.add("fra-\tnek", "f r {\tn I k");
result.add("fra-\try", "f r e@\ti:");
result.add("fra-\tser", "f r eI\tz @r");
result.add("fra-\tser's", "f r eI\tz @r z");
result.add("fra-\tsier", "f r eI\tZ @r");
result.add("fra-\tter", "f r eI\tt @r");
result.add("fra-\tter-\tnal", "f r V\tt @r\tn V l");
result.add("fra-\tter-\tni-\tties", "f r V\tt @r\tn V\tt i: z");
result.add("fra-\tter-\tni-\tty", "f r V\tt @r\tn V\tt i:");
result.add("fra-\tter-\tni-\tzing", "f r {\tt @r\tn aI\tz I N");
result.add("fra-\tter-\tnize", "f r {\tt @r\tn aI z");
result.add("fra-\ttri-\tcide", "f r { t\tr I\ts aI d");
result.add("fra-\ttri-\tcides", "f r { t\tr I\ts aI d z");
result.add("fra-\tying", "f r eI\tI N");
result.add("fra-\tzee", "f r V\tz i:");
result.add("fra-\tzer", "f r eI\tz @r");
result.add("fra-\tzier", "f r eI\tZ @r");
result.add("frac-\ttal", "f r { k\tt V l");
result.add("frac-\ttio-\tnal", "f r { k\tS V\tn V l");
result.add("frac-\ttio-\tnal-\tly", "f r { k\tS V\tn V\tl i:");
result.add("frac-\ttion", "f r { k\tS V n");
result.add("frac-\ttions", "f r { k\tS V n z");
result.add("frac-\ttious", "f r { k\tS V s");
result.add("frac-\ttious-\tness", "f r { k\tS V s\tn V s");
result.add("frac-\ttu-\tring", "f r { k\ttS @r\tI N");
result.add("frac-\tture", "f r { k\ttS @r");
result.add("frac-\ttured", "f r { k\ttS @r d");
result.add("frac-\ttures", "f r { k\ttS @r z");
result.add("frag-\tment", "f r { g\tm V n t");
result.add("frame", "f r eI m");
result.add("frame-\twork", "f r eI m\tw @r k");
result.add("framed", "f r eI m d");
result.add("frames", "f r eI m z");
result.add("fran", "f r { n");
result.add("fran-\tca", "f r { N\tk V");
result.add("fran-\tcaise", "f r Q n\ts e z");
result.add("fran-\tces", "f r { n\ts V s");
result.add("fran-\tce's", "f r { n\ts V z");
result.add("fran-\tces-\tca", "f r { n\ttS e s\tk V");
result.add("fran-\tces-\tco", "f r { n\ttS e s\tk @U");
result.add("fran-\tces-\tco's", "f r { n\ttS e s\tk @U z");
result.add("fran-\tchi-\tsee", "f r { n\ttS aI\tz i:");
result.add("fran-\tchi-\tsees", "f r { n\ttS aI\tz i: z");
result.add("fran-\tchi-\tser", "f r { n\ttS aI\tz @r");
result.add("fran-\tchi-\tsers", "f r { n\ttS aI\tz @r z");
result.add("fran-\tchi-\tses", "f r { n\ttS aI\tz V z");
result.add("fran-\tchi-\tse's", "f r { n\ttS aI\tz V z");
result.add("fran-\tchi-\tsing", "f r { n\ttS aI\tz I N");
result.add("fran-\tchise", "f r { n\ttS aI z");
result.add("fran-\tchised", "f r { n\ttS aI z d");
result.add("fran-\tchot", "f r { n\tk V t");
result.add("fran-\tcia", "f r Q n\ttS V");
result.add("fran-\tcie", "f r { N\tk i:");
result.add("fran-\tcine", "f r { n\ts i: n");
result.add("fran-\tcine's", "f r { n\ts i: n z");
result.add("fran-\tcis", "f r { n\ts I s");
result.add("fran-\tcis-\tcan", "f r { n\ts I s\tk V n");
result.add("fran-\tcis-\tcans", "f r { n\ts I s\tk V n z");
result.add("fran-\tcis-\tco", "f r { n\ts I s\tk @U");
result.add("fran-\tcis-\tco's", "f r { n\ts I s\tk @U z");
result.add("fran-\tco", "f r { N\tk @U");
result.add("fran-\tco-\tphile", "f r { N\tk V\tf aI l");
result.add("fran-\tcois", "f r Q n\ts w Q");
result.add("fran-\tcoise", "f r { n\ts w Q z");
result.add("fran-\tco's", "f r { N\tk @U z");
result.add("fran-\tcy", "f r { n\ts i:");
result.add("fran-\tcyne", "f r { n\ts aI n");
result.add("fran-\tgos", "f r { N\tg @U z");
result.add("fran-\tkel", "f r { N\tk V l");
result.add("fran-\tken-\tstein", "f r { N\tk V n\ts t aI n");
result.add("fran-\tken-\tstein's", "f r { N\tk V n\ts t aI n z");
result.add("fran-\tkie", "f r { N\tk i:");
result.add("fran-\tkin-\tcense", "f r { N\tk I n\ts e n s");
result.add("fran-\tking", "f r { N\tk I N");
result.add("fran-\tkish", "f r { N\tk I S");
result.add("fran-\tko", "f r { N\tk @U");
result.add("fran-\tnie", "f r {\tn i:");
result.add("fran-\tny", "f r {\tn i:");
result.add("fran-\tsen", "f r { n\ts V n");
result.add("fran-\tti-\tcal-\tly", "f r { n\tt I\tk V\tl i:");
result.add("fran-\ttic", "f r { n\tt I k");
result.add("fran-\tzen", "f r { n\tz V n");
result.add("fran-\tzo-\tni", "f r Q n\tz @U\tn i:");
result.add("franc", "f r { N k");
result.add("france", "f r { n s");
result.add("franck", "f r { N k");
result.add("franck-\tlin", "f r { N\tk l I n");
result.add("franck-\tlyn", "f r { N\tk l I n");
result.add("francs", "f r { N k s");
result.add("franc's", "f r { N k s");
result.add("frank", "f r { N k");
result.add("frank-\tfort", "f r { N\tk f @r t");
result.add("frank-\tfort's", "f r { N\tk f @r t s");
result.add("frank-\tfur-\tter", "f r { N\tk f @r\tt @r");
result.add("frank-\tfur-\tters", "f r { N\tk f @r\tt @r z");
result.add("frank-\tfurt", "f r { N\tk f @r t");
result.add("frank-\tfurt's", "f r { N\tk f @r t s");
result.add("frank-\tli-\tnite", "f r { N\tk l I\tn aI t");
result.add("frank-\tlin", "f r { N\tk l I n");
result.add("frank-\tlin-\tville", "f r { N\tk l I n\tv I l");
result.add("frank-\tlin's", "f r { N\tk l I n z");
result.add("frank-\tly", "f r { N\tk l i:");
result.add("frank-\tlyn", "f r { N\tk l I n");
result.add("frank-\tness", "f r { N\tk n V s");
result.add("franke", "f r { N k");
result.add("franked", "f r { N k t");
result.add("franks", "f r { N k s");
result.add("frank's", "f r { N k s");
result.add("frans", "f r { n z");
result.add("frantz", "f r { n t s");
result.add("franz", "f r { n z");
result.add("frap", "f r { p");
result.add("fras-\tco", "f r Q s\tk @U");
result.add("frasch", "f r { S");
result.add("frase", "f r eI z");
result.add("frate", "f r eI t");
result.add("frau", "f r aU");
result.add("frau-\tdu-\tlent", "f r O:\tdZ V\tl V n t");
result.add("frau-\tdu-\tlent-\tly", "f r O:\td u:\tl V n\tt l i:");
result.add("fraud", "f r O: d");
result.add("frauds", "f r O: d z");
result.add("frauds-\tter", "f r O: d\ts t @r");
result.add("frauds-\tters", "f r O: d\ts t @r z");
result.add("fraught", "f r O: t");
result.add("fray", "f r eI");
result.add("frayed", "f r eI d");
result.add("frayn", "f r eI n");
result.add("frayne", "f r eI n");
result.add("fraz-\tzle", "f r {\tz V l");
result.add("fraz-\tzled", "f r {\tz V l d");
result.add("fraze", "f r eI z");
result.add("fre-\tberg", "f r i:\tb @r g");
result.add("fre-\tchette", "f r e\tS e t");
result.add("fre-\tde-\tri-\tca", "f r e\td @r\ti:\tk V");
result.add("fre-\tde-\tri-\tco", "f r e\td @r\ti:\tk @U");
result.add("fre-\tde-\tri-\tka", "f r eI\td e@\ti:\tk V");
result.add("fre-\tde-\tric-\tka", "f r eI\td e@\ti:\tk V");
result.add("fre-\tde-\trik-\tsen", "f r e\td @r\tI k\ts V n");
result.add("fre-\tdel-\tla", "f r e\td e\tl V");
result.add("fre-\tden-\tburg", "f r i:\td V n\tb @r g");
result.add("fre-\tdette", "f r V\td e t");
result.add("fre-\ter", "f r i:\t@r");
result.add("fre-\test", "f r i:\tV s t");
result.add("fre-\tli-\tmo", "f r e\tl I\tm @U");
result.add("fre-\tmont", "f r i:\tm Q n t");
result.add("fre-\tne-\ttic", "f r V\tn e\tt I k");
result.add("fre-\tni", "f r e\tn i:");
result.add("fre-\ton", "f r i:\tQ n");
result.add("fre-\tons", "f r i:\tQ n z");
result.add("fre-\tquen-\tcies", "f r i: k\tw V n\ts i: z");
result.add("fre-\tquen-\tcy", "f r i: k\tw V n\ts i:");
result.add("fre-\tquen-\tted", "f r i: k\tw V n\tt V d");
result.add("fre-\tquent", "f r i: k\tw V n t");
result.add("fre-\tquent-\tly", "f r i: k\tw V n\tt l i:");
result.add("fre-\tquents", "f r i: k\tw V n t s");
result.add("fre-\trichs", "f r e@\tI k s");
result.add("fre-\tshe-\tner", "f r e\tS V\tn @r");
result.add("fre-\tshe-\tners", "f r e\tS V\tn @r z");
result.add("fre-\tshe-\tning", "f r e\tS V\tn I N");
result.add("fre-\tshen", "f r e\tS V n");
result.add("fre-\tsher", "f r e\tS @r");
result.add("fre-\tshest", "f r e\tS V s t");
result.add("fre-\tya", "f r eI\tV");
result.add("frea-\tking", "f r i:\tk I N");
result.add("frea-\tky", "f r i:\tk i:");
result.add("freak", "f r i: k");
result.add("freaked", "f r i: k t");
result.add("freaks", "f r i: k s");
result.add("frear", "f r I@");
result.add("frec-\tkle", "f r e\tk V l");
result.add("frec-\tkled", "f r e\tk V l d");
result.add("frec-\tkles", "f r e\tk V l z");
result.add("frech", "f r e k");
result.add("freck", "f r e k");
result.add("fred", "f r e d");
result.add("fred-\tdie", "f r e\td i:");
result.add("fred-\tdy", "f r e\td i:");
result.add("fred-\tdy's", "f r e\td i: z");
result.add("fred-\tkin", "f r e d\tk I n");
result.add("fred-\tric", "f r e d\tr I k");
result.add("fred-\trich", "f r e d\tr I k");
result.add("fred-\trick", "f r e d\tr I k");
result.add("fred-\trick-\tson", "f r e d\tr I k\ts V n");
result.add("freda", "f r e d");
result.add("frede-\tric", "f r e d\tr I k");
result.add("frede-\trick", "f r e d\tr I k");
result.add("frede-\tricks", "f r e d\tr I k s");
result.add("frede-\trick's", "f r e d\tr I k s");
result.add("frede-\tricks-\tburg", "f r e d\tr I k\ts b @r g");
result.add("fred's", "f r e d z");
result.add("free", "f r i:");
result.add("free-\tbie", "f r i:\tb i:");
result.add("free-\tbies", "f r i:\tb i: z");
result.add("free-\tborn", "f r i:\tb @r n");
result.add("free-\tburg", "f r i:\tb @r g");
result.add("free-\tburn", "f r i:\tb @r n");
result.add("free-\tdom", "f r i:\td V m");
result.add("free-\tdoms", "f r i:\td V m z");
result.add("free-\tdom's", "f r i:\td V m z");
result.add("free-\tfall", "f r i:\tf O: l");
result.add("free-\tform", "f r i:\tf O@ m");
result.add("free-\thand", "f r i:\th { n d");
result.add("free-\thol-\tder", "f r i:\th @U l\td @r");
result.add("free-\thol-\tders", "f r i:\th @U l\td @r z");
result.add("free-\thold", "f r i:\th @U l d");
result.add("free-\ting", "f r i:\tI N");
result.add("free-\tlan-\tcer", "f r i:\tl { n\ts @r");
result.add("free-\tlan-\tcers", "f r i:\tl { n\ts @r z");
result.add("free-\tlan-\tcing", "f r i:\tl { n\ts I N");
result.add("free-\tlance", "f r i:\tl { n s");
result.add("free-\tland", "f r i:\tl V n d");
result.add("free-\tloa-\tder", "f r i:\tl @U\td @r");
result.add("free-\tloa-\tders", "f r i:\tl @U\td @r z");
result.add("free-\tly", "f r i:\tl i:");
result.add("free-\tma-\tson", "f r i:\tm eI\ts V n");
result.add("free-\tma-\tson-\try", "f r i:\tm eI\ts V n\tr i:");
result.add("free-\tman", "f r i:\tm V n");
result.add("free-\tman's", "f r i:\tm V n z");
result.add("free-\tmen", "f r i:\tm e n");
result.add("free-\tmon", "f r i:\tm V n");
result.add("free-\tport", "f r i:\tp O@ t");
result.add("free-\tport's", "f r i:\tp O@ t s");
result.add("free-\tstan-\tding", "f r i: s\tt { n\td I N");
result.add("free-\tstone", "f r i: s\tt @U n");
result.add("free-\tstyle", "f r i: s\tt aI l");
result.add("free-\tthin-\tker", "f r i:\tT I N\tk @r");
result.add("free-\tthin-\tkers", "f r i:\tT I N\tk @r z");
result.add("free-\ttown", "f r i:\tt aU n");
result.add("free-\tway", "f r i:\tw eI");
result.add("free-\tways", "f r i:\tw eI z");
result.add("free-\twhee-\tling", "f r i:\tw i:\tl I N");
result.add("free-\tzer", "f r i:\tz @r");
result.add("free-\tzers", "f r i:\tz @r z");
result.add("free-\tzes", "f r i:\tz V z");
result.add("free-\tzing", "f r i:\tz I N");
result.add("freed", "f r i: d");
result.add("freed-\tman", "f r i: d\tm V n");
result.add("freed-\tman's", "f r i: d\tm V n z");
result.add("freen", "f r i: n");
result.add("frees", "f r i: z");
result.add("freet", "f r i: t");
result.add("freeze", "f r i: z");
result.add("frei", "f r aI");
result.add("frei-\ta", "f r i:\tV");
result.add("frei-\tman", "f r aI\tm V n");
result.add("freigh-\tter", "f r eI\tt @r");
result.add("freigh-\tters", "f r eI\tt @r z");
result.add("freight", "f r eI t");
result.add("freight-\tli-\tner", "f r eI t\tl aI\tn @r");
result.add("fremd", "f r e m d");
result.add("fren-\tch's", "f r e n\ttS V z");
result.add("fren-\tzied", "f r e n\tz i: d");
result.add("fren-\tzy", "f r e n\tz i:");
result.add("french", "f r e n tS");
result.add("french-\tman", "f r e n\ttS m { n");
result.add("french-\tmen", "f r e n\ttS m e n");
result.add("frentz", "f r e n t s");
result.add("frere", "f r I@");
result.add("fres-\tco", "f r e s\tk @U");
result.add("fres-\tcoed", "f r e s\tk @U d");
result.add("fres-\tcoes", "f r e s\tk @U z");
result.add("fres-\tco's", "f r e s\tk @U z");
result.add("fres-\tno", "f r e z\tn @U");
result.add("fres-\tno's", "f r e z\tn @U z");
result.add("fresh", "f r e S");
result.add("fresh-\tly", "f r e S\tl i:");
result.add("fresh-\tman", "f r e S\tm V n");
result.add("fresh-\tmen", "f r e S\tm e n");
result.add("fresh-\tness", "f r e S\tn V s");
result.add("fresh-\twa-\tter", "f r e S\tw O:\tt @r");
result.add("fret", "f r e t");
result.add("fret-\tful", "f r e t\tf V l");
result.add("fret-\tted", "f r e\tt V d");
result.add("fret-\tter", "f r e\tt @r");
result.add("fret-\tting", "f r e\tt I N");
result.add("fret-\twell", "f r e t\tw e l");
result.add("frets", "f r e t s");
result.add("frett", "f r e t");
result.add("freu-\tdi-\tan", "f r u:\td i:\tV n");
result.add("freud", "f r OI d");
result.add("freud's", "f r OI d z");
result.add("frey", "f r eI");
result.add("frey-\ttag", "f r eI\tt V g");
result.add("freyre", "f r e@");
result.add("fri-\ta-\try", "f r aI\t@r\ti:");
result.add("fri-\tar", "f r aI\t@r");
result.add("fri-\tars", "f r aI\t@r z");
result.add("fri-\tbourg", "f r aI\tb O@ g");
result.add("fri-\tda", "f r i:\td V");
result.add("fri-\tday", "f r aI\td i:");
result.add("fri-\tdays", "f r aI\td i: z");
result.add("fri-\tday's", "f r aI\td i: z");
result.add("fri-\ter", "f r aI\t@r");
result.add("fri-\tgate", "f r I\tg V t");
result.add("fri-\tgates", "f r I\tg V t s");
result.add("fri-\tgate's", "f r I\tg V t s");
result.add("fri-\tgid", "f r I\tdZ I d");
result.add("fri-\to-\tna", "f r i:\t@U\tn V");
result.add("fri-\tsa", "f r i:\tz V");
result.add("fri-\tson", "f r I\ts V n");
result.add("fri-\tto", "f r i:\tt @U");
result.add("fri-\tvo-\tli-\tty", "f r V\tv Q\tl V\tt i:");
result.add("fri-\tvo-\tlous", "f r I\tv V\tl V s");
result.add("fri-\tvo-\tlous-\tly", "f r I\tv V\tl V s\tl i:");
result.add("fric-\ttion", "f r I k\tS V n");
result.add("fric-\ttion-\tless", "f r I k\tS V n\tl V s");
result.add("fric-\ttions", "f r I k\tS V n z");
result.add("frick", "f r I k");
result.add("fricke", "f r I k");
result.add("frid-\tley", "f r I d\tl i:");
result.add("fridge", "f r I dZ");
result.add("frie-\tda", "f r i:\td V");
result.add("frie-\tdan", "f r i:\td V n");
result.add("frie-\tde-\trike", "f r i:\td @r\tI k");
result.add("frie-\tder", "f r aI\td @r");
result.add("fried", "f r aI d");
result.add("fried-\tberg", "f r aI d\tb @r g");
result.add("fried-\tlan-\tder", "f r i: d\tl V n\td @r");
result.add("fried-\tland", "f r i: d\tl V n d");
result.add("fried-\tly", "f r i: d\tl i:");
result.add("fried-\tman", "f r i: d\tm V n");
result.add("fried-\tman's", "f r i: d\tm V n z");
result.add("fried-\trich", "f r i: d\tr I k");
result.add("fried-\trick", "f r i: d\tr I k");
result.add("friede", "f r i: d");
result.add("friend", "f r e n d");
result.add("friend-\tli-\ter", "f r e n\td l i:\t@r");
result.add("friend-\tli-\test", "f r e n\td l i:\tV s t");
result.add("friend-\tli-\tness", "f r e n\td l i:\tn V s");
result.add("friend-\tly", "f r e n\td l i:");
result.add("friend-\tly's", "f r e n\td l i: z");
result.add("friend-\tship", "f r e n\td S I p");
result.add("friend-\tships", "f r e n\td S I p s");
result.add("friends", "f r e n d z");
result.add("friend's", "f r e n d z");
result.add("frier-\tson", "f r I@\ts V n");
result.add("fries", "f r aI z");
result.add("friese", "f r i: z");
result.add("friesz", "f r i: S");
result.add("frieze", "f r i: z");
result.add("frigh-\tte-\tning", "f r aI\tt V\tn I N");
result.add("frigh-\tte-\tning-\tly", "f r aI\tt V\tn I N\tl i:");
result.add("frigh-\tten", "f r aI\tt V n");
result.add("frigh-\ttened", "f r aI\tt V n d");
result.add("frigh-\ttens", "f r aI\tt V n z");
result.add("fright", "f r aI t");
result.add("fright-\tful", "f r aI t\tf V l");
result.add("fright-\tful-\tly", "f r aI t\tf V\tl i:");
result.add("fril-\tly", "f r I\tl i:");
result.add("frill", "f r I l");
result.add("frills", "f r I l z");
result.add("frin-\tges", "f r I n\tdZ V z");
result.add("fringe", "f r I n dZ");
result.add("frink", "f r I N k");
result.add("fris-\tbee", "f r I s\tb i:");
result.add("fris-\tco", "f r i: s\tk @U");
result.add("fris-\tkin", "f r I s\tk I n");
result.add("fris-\tky", "f r I s\tk i:");
result.add("frisch", "f r I S");
result.add("frisk", "f r I s k");
result.add("frisked", "f r I s k t");
result.add("frist", "f r I s t");
result.add("frit-\tte-\tring", "f r I\tt @r\tI N");
result.add("frit-\tter", "f r I\tt @r");
result.add("frit-\ttered", "f r I\tt @r d");
result.add("frit-\tzie", "f r I t\tz i:");
result.add("fritch", "f r I tS");
result.add("frith", "f r I T");
result.add("frits", "f r I t s");
result.add("fritts", "f r I t s");
result.add("fritz", "f r I t s");
result.add("fritze", "f r I t z");
result.add("fritzsche", "f r I t S");
result.add("fro", "f r @U");
result.add("fro-\tlic", "f r Q\tl I k");
result.add("fro-\tlic-\tking", "f r Q\tl I\tk I N");
result.add("fro-\tzen", "f r @U\tz V n");
result.add("frock", "f r Q k");
result.add("frocks", "f r Q k s");
result.add("froeh-\tlich", "f r @U\tl I k");
result.add("froem-\tming", "f r @U\tm I N");
result.add("frog", "f r Q g");
result.add("frog-\tman", "f r Q g\tm { n");
result.add("frog-\tmen", "f r Q g\tm e n");
result.add("frog-\tmouth", "f r Q g\tm aU T");
result.add("frog-\tmouths", "f r Q g\tm aU T s");
result.add("frogs", "f r Q g z");
result.add("frog's", "f r Q g z");
result.add("froh", "f r @U");
result.add("froh-\tlich", "f r @U\tl I k");
result.add("froh-\tman", "f r @U\tm V n");
result.add("from", "f r Q m");
result.add("frome", "f r @U m");
result.add("fromm", "f r Q m");
result.add("fron-\ttage", "f r V n\tt I dZ");
result.add("fron-\ttal", "f r V n\tt V l");
result.add("fron-\tte-\tra", "f r @U n\tt e@\tV");
result.add("fron-\tted", "f r V n\tt V d");
result.add("fron-\ttier", "f r V n\tt I@");
result.add("fron-\ttiers", "f r V n\tt I@ z");
result.add("fron-\ttier's", "f r V n\tt I@ z");
result.add("fron-\tting", "f r V n\tt I N");
result.add("frond", "f r Q n d");
result.add("fronde", "f r Q n d");
result.add("fronds", "f r Q n d z");
result.add("front", "f r V n t");
result.add("front-\tline", "f r V n\tt l aI n");
result.add("front-\trun-\tner", "f r V n\tt r V\tn @r");
result.add("front-\trun-\tners", "f r V n\tt r V\tn @r z");
result.add("fronts", "f r V n t s");
result.add("front's", "f r V n t s");
result.add("frost", "f r O: s t");
result.add("frost-\tbit-\tten", "f r O: s\tt b I\tt V n");
result.add("frost-\tbite", "f r O: s\tt b aI t");
result.add("frow-\tning", "f r aU\tn I N");
result.add("frow-\tning-\tly", "f r aU\tn I N\tl i:");
result.add("frowns", "f r aU n z");
result.add("froze", "f r @U z");
result.add("fru-\tga-\tli-\tty", "f r u:\tg {\tl I\tt i:");
result.add("fru-\tgal", "f r u:\tg V l");
result.add("fru-\tgal-\tly", "f r u:\tg V\tl i:");
result.add("fru-\ti-\ttion", "f r u:\tI\tS V n");
result.add("fru-\tin", "f r u:\tI n");
result.add("fruc-\ttose", "f r V k\tt @U s");
result.add("frue-\thauf", "f r u:\th O: f");
result.add("frui-\tting", "f r u:\tt I N");
result.add("frui-\tty", "f r u:\tt i:");
result.add("fruit", "f r u: t");
result.add("fruit-\tcake", "f r u: t\tk eI k");
result.add("fruit-\tcakes", "f r u: t\tk eI k s");
result.add("fruit-\tful", "f r u: t\tf V l");
result.add("fruit-\tless", "f r u: t\tl V s");
result.add("fruit-\tless-\tly", "f r u: t\tl V s\tl i:");
result.add("fruits", "f r u: t s");
result.add("frum", "f r V m");
result.add("frum-\tpy", "f r V m\tp i:");
result.add("frump", "f r V m p");
result.add("frunze", "f r V n z");
result.add("frush", "f r V S");
result.add("frust-\tra-\tted", "f r V s\tt r eI\tt V d");
result.add("frust-\tra-\tting", "f r V s\tt r eI\tt I N");
result.add("frust-\tra-\tting-\tly", "f r V s\tt r eI\tt I N\tl i:");
result.add("frust-\tra-\ttion", "f r V s\tt r eI\tS V n");
result.add("frust-\tra-\ttions", "f r V s\tt r eI\tS V n z");
result.add("frust-\trate", "f r V s\tt r eI t");
result.add("frust-\trates", "f r V s\tt r eI t s");
result.add("fry", "f r aI");
result.add("fry-\ting", "f r aI\tI N");
result.add("fry-\tmire", "f r i:\tm aI r");
result.add("frye", "f r aI");
result.add("fry's", "f r aI z");
result.add("f's", "e f s");
result.add("fsi", "f s i:");
result.add("fu", "f u:");
result.add("fu-\tel", "f j u:\tV l");
result.add("fu-\teled", "f j u:\tV l d");
result.add("fu-\telled", "f j u:\tV l d");
result.add("fu-\tels", "f j u:\tV l z");
result.add("fu-\tel's", "f j u:\tV l z");
result.add("fu-\tga-\tzy", "f j u:\tg V\tz i:");
result.add("fu-\tgard", "f j u:\tg Q@ d");
result.add("fu-\tgate", "f V\tg eI t");
result.add("fu-\tgere", "f j u:\tg @r");
result.add("fu-\tgi-\ttive", "f j u:\tdZ V\tt I v");
result.add("fu-\tgi-\ttives", "f j u:\tdZ V\tt I v z");
result.add("fu-\tji", "f u:\tdZ i:");
result.add("fu-\tji-\to", "f u:\tdZ i:\t@U");
result.add("fu-\tji-\ttsu", "f u:\tdZ I t\ts u:");
result.add("fu-\tji-\ttsu's", "f u:\tdZ I t\ts u: z");
result.add("fu-\tji-\twa-\tra", "f u:\tdZ i:\tw Q@\tV");
result.add("fu-\tji-\tya-\tma", "f u:\tdZ i:\tj Q\tm V");
result.add("fu-\tjis", "f j u:\tdZ I s");
result.add("fu-\tji's", "f u:\tdZ i: z");
result.add("fu-\tku-\tda", "f u:\tk u:\td V");
result.add("fu-\tku-\to-\tka", "f u:\tk u:\t@U\tk V");
result.add("fu-\tku-\tshi-\tma", "f u:\tk u:\tS i:\tm V");
result.add("fu-\tla-\tni", "f u:\tl Q\tn i:");
result.add("fu-\tma-\troles", "f j u:\tm @r\t@U l z");
result.add("fu-\tmi-\tga-\ttion", "f j u:\tm I\tg eI\tS V n");
result.add("fu-\tmi-\tgate", "f j u:\tm I\tg eI t");
result.add("fu-\tming", "f j u:\tm I N");
result.add("fu-\tne-\tra-\try", "f j u:\tn @r\te@\ti:");
result.add("fu-\tne-\tral", "f j u:\tn @r\tV l");
result.add("fu-\tne-\trals", "f j u:\tn @r\tV l z");
result.add("fu-\to-\tco", "f u:\t@U\tk @U");
result.add("fu-\tquay", "f u:\tk eI");
result.add("fu-\trey", "f j U@\ti:");
result.add("fu-\tri-\tou-\tser", "f j U@\ti:\tV\ts @r");
result.add("fu-\tri-\tous", "f j U@\ti:\tV s");
result.add("fu-\tri-\tous-\tly", "f j U@\ti:\tV s\tl i:");
result.add("fu-\tror", "f j U@\tO@");
result.add("fu-\try", "f j U@\ti:");
result.add("fu-\tse-\tla-\tges", "f j u:\ts V\tl Q\tdZ V z");
result.add("fu-\tse-\tlage", "f j u:\ts V\tl Q dZ");
result.add("fu-\tses", "f j u:\tz V z");
result.add("fu-\tsi-\tble", "f j u:\tz I\tb V l");
result.add("fu-\tsil-\tlade", "f j u:\ts I\tl eI d");
result.add("fu-\tsil-\tli", "f j u:\ts I\tl i:");
result.add("fu-\tsing", "f j u:\tz I N");
result.add("fu-\tsion", "f j u:\tZ V n");
result.add("fu-\tti-\tli-\tty", "f j u:\tt I\tl I\tt i:");
result.add("fu-\ttile", "f j u:\tt V l");
result.add("fu-\ttu-\tri-\tsm", "f j u:\ttS @r\tI\tz V m");
result.add("fu-\ttu-\tris-\ttic", "f j u:\ttS @r\tI s\tt I k");
result.add("fu-\ttu-\trist", "f j u:\ttS @r\tI s t");
result.add("fu-\ttu-\trists", "f j u:\ttS @r\tI s t s");
result.add("fu-\tture", "f j u:\ttS @r");
result.add("fu-\ttures", "f j u:\ttS @r z");
result.add("fu-\tture's", "f j u:\ttS @r z");
result.add("fu-\tzes", "f j u:\tz V z");
result.add("fuc-\tking", "f V\tk I N");
result.add("fuch-\tsias", "f j u:\tS V z");
result.add("fuchs", "f j u: k s");
result.add("fuck", "f V k");
result.add("fucked", "f V k t");
result.add("fucks", "f V k s");
result.add("fud-\tdy", "f V\td i:");
result.add("fud-\tging", "f V\tdZ I N");
result.add("fud-\tgy", "f V\tdZ i:");
result.add("fudge", "f V dZ");
result.add("fudged", "f V dZ d");
result.add("fue-\tling", "f j u:\tl I N");
result.add("fuel-\tling", "f j u:\tl I N");
result.add("fuen-\ttes", "f w e n\tt eI z");
result.add("fugue", "f j u: g");
result.add("fugues", "f j u: g z");
result.add("fuh-\trer", "f U@\t@r");
result.add("fuhr-\tman", "f U@\tm V n");
result.add("fuhr-\tman's", "f U@\tm V n z");
result.add("ful-\tbright", "f U l\tb r aI t");
result.add("ful-\tcher", "f U l\ttS @r");
result.add("ful-\tcrum", "f U l\tk r V m");
result.add("ful-\tfil-\tling", "f U l\tf I\tl I N");
result.add("ful-\tfill", "f U l\tf I l");
result.add("ful-\tfill-\tment", "f U l\tf I l\tm V n t");
result.add("ful-\tfilled", "f U l\tf I l d");
result.add("ful-\tfills", "f U l\tf I l z");
result.add("ful-\tlam", "f U\tl V m");
result.add("ful-\tler", "f U\tl @r");
result.add("ful-\tler-\tton", "f U\tl @r\tt V n");
result.add("ful-\tler's", "f U\tl @r z");
result.add("ful-\tlest", "f U\tl V s t");
result.add("ful-\tly", "f U\tl i:");
result.add("ful-\tmer", "f V l\tm @r");
result.add("ful-\tmi-\tnate", "f U l\tm I\tn eI t");
result.add("ful-\tsome", "f U l\ts V m");
result.add("ful-\tton", "f U l\tt V n");
result.add("ful-\tton's", "f U l\tt V n z");
result.add("ful-\tvi-\ta", "f U l\tv i:\tV");
result.add("fuld", "f U l d");
result.add("fulk", "f V l k");
result.add("fulks", "f V l k s");
result.add("full", "f U l");
result.add("full-\tback", "f U l\tb { k");
result.add("full-\tness", "f U l\tn V s");
result.add("full-\ttime", "f U l\tt aI m");
result.add("fults", "f U l t s");
result.add("fultz", "f U l t s");
result.add("fum-\tb-\tling", "f V m\tb V\tl I N");
result.add("fum-\tble", "f V m\tb V l");
result.add("fum-\tbled", "f V m\tb V l d");
result.add("fum-\tbles", "f V m\tb V l z");
result.add("fume", "f j u: m");
result.add("fumed", "f j u: m d");
result.add("fumes", "f j u: m z");
result.add("fun", "f V n");
result.add("fun-\tda-\tmen-\tta-\tli-\tsm", "f V n\td V\tm e n\tt V\tl I\tz V m");
result.add("fun-\tda-\tmen-\tta-\tlist", "f V n\td V\tm e n\tt V\tl V s t");
result.add("fun-\tda-\tmen-\tta-\tlists", "f V n\td V\tm e n\tt V\tl V s t s");
result.add("fun-\tda-\tmen-\ttal", "f V n\td V\tm e n\tt V l");
result.add("fun-\tda-\tmen-\ttal-\tly", "f V n\td V\tm e n\tt V\tl i:");
result.add("fun-\tda-\tmen-\ttals", "f V n\td V\tm e n\tt V l z");
result.add("fun-\tded", "f V n\td V d");
result.add("fun-\tder", "f V n\td @r");
result.add("fun-\tders", "f V n\td @r z");
result.add("fun-\tding", "f V n\td I N");
result.add("fun-\tgal", "f V N\tg V l");
result.add("fun-\tgi", "f V n\tdZ aI");
result.add("fun-\tgi-\tble", "f V n\tdZ I\tb V l");
result.add("fun-\tgi-\tcide", "f V n\tdZ I\ts aI d");
result.add("fun-\tgi-\tcides", "f V n\tdZ I\ts aI d z");
result.add("fun-\tgus", "f V N\tg V s");
result.add("fun-\tky", "f V N\tk i:");
result.add("fun-\tne-\tling", "f V\tn V\tl I N");
result.add("fun-\tnel", "f V\tn V l");
result.add("fun-\tneled", "f V\tn V l d");
result.add("fun-\tnels", "f V\tn V l z");
result.add("fun-\tnest", "f V\tn V s t");
result.add("fun-\tni-\ter", "f V\tn i:\t@r");
result.add("fun-\tni-\test", "f V\tn i:\tV s t");
result.add("fun-\tni-\tness", "f V\tn i:\tn V s");
result.add("fun-\tny", "f V\tn i:");
result.add("func-\ttio-\tna-\tli-\tty", "f V N\tk S V\tn {\tl I\tt i:");
result.add("func-\ttio-\tna-\tries", "f V N\tk S V\tn e@\ti: z");
result.add("func-\ttio-\tna-\try", "f V N\tk S V\tn e@\ti:");
result.add("func-\ttio-\tnal", "f V N\tk S V\tn V l");
result.add("func-\ttio-\tnal-\tly", "f V N\tk S V\tn V\tl i:");
result.add("func-\ttio-\tning", "f V N\tk S V\tn I N");
result.add("func-\ttion", "f V N\tk S V n");
result.add("func-\ttioned", "f V N\tk S V n d");
result.add("func-\ttions", "f V N\tk S V n z");
result.add("fund", "f V n d");
result.add("fund-\trai-\tser", "f V n\td r eI\tz @r");
result.add("fund-\trai-\tsers", "f V n\td r eI\tz @r z");
result.add("fund-\trai-\tser's", "f V n\td r eI\tz @r z");
result.add("fund-\trai-\tsing", "f V n\td r eI\ts I N");
result.add("funds", "f V n d z");
result.add("fund's", "f V n d z");
result.add("fung", "f V N");
result.add("funk", "f V N k");
result.add("funks", "f V N k s");
result.add("funs", "f V n z");
result.add("funs-\tton", "f V n\ts t V n");
result.add("fur", "f @r");
result.add("fur-\tbi-\tshing", "f @r\tb I\tS I N");
result.add("fur-\tbish", "f @r\tb I S");
result.add("fur-\tge-\tson", "f @r\tg V\ts V n");
result.add("fur-\tlan", "f @r\tl V n");
result.add("fur-\tlong", "f @r\tl O: N");
result.add("fur-\tlough", "f @r\tl @U");
result.add("fur-\tloughed", "f @r\tl @U d");
result.add("fur-\tloughs", "f @r\tl @U z");
result.add("fur-\tman", "f @r\tm { n");
result.add("fur-\tmark", "f @r\tm Q@ k");
result.add("fur-\tna-\tces", "f @r\tn V\ts V z");
result.add("fur-\tnace", "f @r\tn V s");
result.add("fur-\tner", "f @r\tn @r");
result.add("fur-\tness", "f @r\tn I s");
result.add("fur-\tni-\tshes", "f @r\tn I\tS V z");
result.add("fur-\tni-\tshing", "f @r\tn I\tS I N");
result.add("fur-\tni-\tshings", "f @r\tn I\tS I N z");
result.add("fur-\tni-\tture", "f @r\tn I\ttS @r");
result.add("fur-\tni-\tture's", "f @r\tn I\ttS @r z");
result.add("fur-\tnish", "f @r\tn I S");
result.add("fur-\tnished", "f @r\tn I S t");
result.add("fur-\tri-\ter", "f @r\ti:\t@r");
result.add("fur-\tri-\ters", "f @r\ti:\t@r z");
result.add("fur-\trow", "f @r\t@U");
result.add("fur-\trowed", "f @r\t@U d");
result.add("fur-\try", "f @r\ti:");
result.add("fur-\tthe-\trance", "f @r\tT @r\tV n s");
result.add("fur-\tthe-\tring", "f @r\tD @r\tI N");
result.add("fur-\tther", "f @r\tD @r");
result.add("fur-\tther-\tmore", "f @r\tD @r\tm O@");
result.add("fur-\tthered", "f @r\tD @r d");
result.add("fur-\tthers", "f @r\tD @r z");
result.add("fur-\tthest", "f @r\tT V s t");
result.add("fur-\ttive", "f @r\tt I v");
result.add("fur-\ttive-\tly", "f @r\tt I v\tl i:");
result.add("furr", "f @r");
result.add("furr's", "f @r z");
result.add("furs", "f @r z");
result.add("furth", "f @r T");
result.add("fus-\tco", "f u: s\tk @U");
result.add("fus-\tses", "f V\ts V z");
result.add("fus-\tsing", "f V\ts I N");
result.add("fus-\tsy", "f V\ts i:");
result.add("fuse", "f j u: z");
result.add("fused", "f j u: z d");
result.add("fuss", "f V s");
result.add("fussed", "f V s t");
result.add("fust", "f V s t");
result.add("fuz-\tzi-\ter", "f V\tz i:\t@r");
result.add("fuz-\tzy", "f V\tz i:");
result.add("fuzz", "f V z");
result.add("fyffe", "f aI f");
result.add("fyke", "f aI k");
result.add("fyo-\tdor", "f j @U\td @r");
result.add("fyo-\tdor's", "f j @U\td @r z");
result.add("g", "dZ i:");
result.add("g-\tdansk", "gh V\td { n s k");
result.add("ga", "gh Q");
result.add("ga-\tb-\tler", "gh eI\tb V\tl @r");
result.add("ga-\tba", "gh Q\tb V");
result.add("ga-\tbar-\tdine", "gh {\tb @r\td i: n");
result.add("ga-\tbar-\tdines", "gh {\tb @r\td i: n z");
result.add("ga-\tbel", "gh V\tb e l");
result.add("ga-\tbert", "gh {\tb @r t");
result.add("ga-\tbie", "gh {\tb i:");
result.add("ga-\tble", "gh eI\tb V l");
result.add("ga-\tbles", "gh eI\tb V l z");
result.add("ga-\tbon", "gh V\tb Q n");
result.add("ga-\tbor", "gh V\tb O@");
result.add("ga-\tbri-\te-\tla", "gh Q b\tr i:\te\tl V");
result.add("ga-\tbri-\tel", "gh eI b\tr i:\tV l");
result.add("ga-\tbri-\tel-\tla", "gh Q b\tr i:\te\tl V");
result.add("ga-\tbri-\tele", "gh Q b\tr i:\te l");
result.add("ga-\tga-\trin", "gh V\tg {\tr V n");
result.add("ga-\tger", "gh eI\tg @r");
result.add("ga-\than", "gh {\th V n");
result.add("ga-\tla", "gh {\tl V");
result.add("ga-\tla-\thad", "gh {\tl V\th { d");
result.add("ga-\tla-\tpa-\tgos", "gh V\tl Q\tp V\tg @U z");
result.add("ga-\tla-\tte-\ta", "gh {\tl V\tt i:\tV");
result.add("ga-\tla-\tti", "gh Q\tl Q\tt i:");
result.add("ga-\tla-\txies", "gh {\tl V k\ts i: z");
result.add("ga-\tla-\txy", "gh {\tl V k\ts i:");
result.add("ga-\tla-\txy's", "gh {\tl V k\ts i: z");
result.add("ga-\tlac-\ttic", "gh V\tl { k\tt I k");
result.add("ga-\tlac-\ttose", "gh V\tl { k\tt @U s");
result.add("ga-\tlan", "gh eI\tl V n");
result.add("ga-\tlan-\tte", "gh Q\tl Q n\tt i:");
result.add("ga-\tlan-\tti", "gh V\tl { n\tt i:");
result.add("ga-\tlang", "gh {\tl V N");
result.add("ga-\tlant", "gh Q\tl V n t");
result.add("ga-\tlas", "gh eI\tl V z");
result.add("ga-\tlax", "gh {\tl { k s");
result.add("ga-\tle-\ta", "gh eI\tl i:\tV");
result.add("ga-\tle-\tna", "gh V\tl i:\tn V");
result.add("ga-\tle-\tni-\tcal", "gh V\tl e\tn I\tk V l");
result.add("ga-\tlen", "gh eI\tl V n");
result.add("ga-\tlen's", "gh eI\tl V n z");
result.add("ga-\tler", "gh eI\tl @r");
result.add("ga-\tley", "gh eI\tl i:");
result.add("ga-\tli", "gh Q\tl i:");
result.add("ga-\tli-\tci-\ta", "gh V\tl I\tS i:\tV");
result.add("ga-\tli-\tle-\tan", "gh {\tl I\tl i:\tV n");
result.add("ga-\tli-\tle-\to", "gh {\tl I\tl i:\t@U");
result.add("ga-\tli-\tle-\to's", "gh {\tl I\tl i:\t@U z");
result.add("ga-\tli-\tlee", "gh {\tl I\tl i:");
result.add("ga-\tlik", "gh {\tl I k");
result.add("ga-\tlo-\tshes", "gh V\tl Q\tS V z");
result.add("ga-\tlore", "gh V\tl O@");
result.add("ga-\tlosh", "gh V\tl Q S");
result.add("ga-\tlu-\tsha", "gh {\tl I\tS V");
result.add("ga-\tma", "gh Q\tm V");
result.add("ga-\tmal", "gh V\tm Q l");
result.add("ga-\tme-\tlin", "gh {\tm V\tl I n");
result.add("ga-\tme-\ttan-\tgi-\ta", "gh {\tm V\tt { n\tdZ i:\tV");
result.add("ga-\tme-\tto-\tphyte", "gh V\tm i:\tt V\tf aI t");
result.add("ga-\tmer", "gh eI\tm @r");
result.add("ga-\tmers", "gh eI\tm @r z");
result.add("ga-\tmete", "gh {\tm i: t");
result.add("ga-\tming", "gh eI\tm I N");
result.add("ga-\tming's", "gh eI\tm I N z");
result.add("ga-\tmut", "gh {\tm V t");
result.add("ga-\tny-\tmede", "gh {\tn V\tm i: d");
result.add("ga-\tping", "gh eI\tp I N");
result.add("ga-\tra", "gh {\tr V");
result.add("ga-\tra-\tges", "gh @r\tQ\tZ V z");
result.add("ga-\trage", "gh @r\tQ Z");
result.add("ga-\trand", "gh {\tr V n d");
result.add("ga-\trard", "gh @r\tQ@ d");
result.add("ga-\tri", "gh Q@\ti:");
result.add("ga-\tri-\tbal-\tdi", "gh {\tr I\tb O: l\td i:");
result.add("ga-\trie-\tpy", "gh @r\ti:\tp i:");
result.add("ga-\trin", "gh e@\tI n");
result.add("ga-\trish", "gh e@\tI S");
result.add("ga-\tro", "gh e@\t@U");
result.add("ga-\tro-\tfa-\tlo", "gh Q@\t@U\tf Q\tl @U");
result.add("ga-\tron", "gh Q@\tO: n");
result.add("ga-\tru-\tda", "gh V\tr u:\td V");
result.add("ga-\try", "gh e@\ti:");
result.add("ga-\try's", "gh e@\ti: z");
result.add("ga-\tse-\tous", "gh {\ts i:\tV s");
result.add("ga-\tses", "gh {\ts V z");
result.add("ga-\tshes", "gh {\tS V z");
result.add("ga-\tsi-\tfi-\tca-\ttion", "gh {\ts I\tf I\tk eI\tS V n");
result.add("ga-\tsi-\tfy", "gh {\ts I\tf aI");
result.add("ga-\tso-\thol", "gh {\ts V\th O: l");
result.add("ga-\tso-\tline", "gh {\ts V\tl i: n");
result.add("ga-\tso-\tlines", "gh {\ts V\tl i: n z");
result.add("ga-\ts's", "gh {\ts V z");
result.add("ga-\tted", "gh eI\tt V d");
result.add("ga-\tthe-\trer", "gh {\tD @r\t@r");
result.add("ga-\tthe-\trers", "gh {\tD @r\t@r z");
result.add("ga-\tthe-\tring", "gh {\tD @r\tI N");
result.add("ga-\tthe-\trings", "gh {\tD @r\tI N z");
result.add("ga-\tther", "gh {\tD @r");
result.add("ga-\tthered", "gh {\tD @r d");
result.add("ga-\tthers", "gh {\tD @r z");
result.add("ga-\tthings", "gh {\tT I N z");
result.add("ga-\tto-\trade", "gh {\tt @r\teI d");
result.add("ga-\ttor", "gh eI\tt @r");
result.add("ga-\ttors", "gh eI\tt @r z");
result.add("ga-\ttos", "gh Q\tt @U s");
result.add("ga-\tvan", "gh eI\tv V n");
result.add("ga-\tvel", "gh {\tv V l");
result.add("ga-\tven", "gh eI\tv V n");
result.add("ga-\tvin", "gh {\tv I n");
result.add("ga-\twain", "gh Q\tw I n");
result.add("ga-\twen", "gh O:\tV n");
result.add("ga-\tyer", "gh eI\t@r");
result.add("ga-\tza", "gh Q\tz V");
result.add("ga-\tzans", "gh Q\tz V n z");
result.add("ga-\tza's", "gh Q\tz V z");
result.add("ga-\tzel-\tla", "gh V\tz e\tl V");
result.add("ga-\tzelle", "gh V\tz e l");
result.add("ga-\tzelles", "gh V\tz e l z");
result.add("ga-\tzes", "gh eI\tz V z");
result.add("ga-\tzette", "gh V\tz e t");
result.add("ga-\tzing", "gh eI\tz I N");
result.add("gaal", "gh Q l");
result.add("gab", "gh { b");
result.add("gab-\tbard", "gh V\tb Q@ d");
result.add("gab-\tbert", "gh {\tb @r t");
result.add("gab-\tbing", "gh {\tb I N");
result.add("gab-\tbro-\tic", "gh { b\tr @U\tI k");
result.add("gab-\tby", "gh {\tb i:");
result.add("gabb-\tro", "gh { b\tr @U");
result.add("gabe", "gh eI b");
result.add("gads", "gh { d z");
result.add("gads-\tden", "gh { d\tz d V n");
result.add("gae", "gh aI");
result.add("gae-\ta", "gh i:\tV");
result.add("gae-\tlic", "gh eI\tl I k");
result.add("gae-\tta", "gh i:\tt V");
result.add("gae-\tta-\tno", "gh aI\tt Q\tn @U");
result.add("gael", "gh eI l");
result.add("gaf", "gh { f");
result.add("gaff", "gh { f");
result.add("gaff-\tney", "gh { f\tn i:");
result.add("gaffe", "gh { f");
result.add("gaffes", "gh { f s");
result.add("gag", "gh { g");
result.add("gag-\tgle", "gh {\tg V l");
result.add("gag-\tli-\ta-\tno", "gh Q g\tl i:\tQ\tn @U");
result.add("gag-\tne", "gh eI\tn i:");
result.add("gag-\tnon", "gh { n\tj V n");
result.add("gage", "gh eI dZ");
result.add("gagged", "gh { g d");
result.add("gags", "gh { g z");
result.add("gai-\ta", "gh aI\tV");
result.add("gai-\tly", "gh eI\tl i:");
result.add("gai-\tner", "gh eI\tn @r");
result.add("gai-\tners", "gh eI\tn @r z");
result.add("gai-\tning", "gh eI\tn I N");
result.add("gai-\tnor", "gh eI\tn @r");
result.add("gai-\tser", "gh eI\tz @r");
result.add("gai-\tter", "gh eI\tt @r");
result.add("gai-\tther", "gh eI\tT @r");
result.add("gai-\tthers-\tburg", "gh eI\tT @r z\tb @r g");
result.add("gaige", "gh eI dZ");
result.add("gail", "gh eI l");
result.add("gail-\tlard", "gh eI\tl @r d");
result.add("gaile", "gh eI l");
result.add("gail's", "gh eI l z");
result.add("gain", "gh eI n");
result.add("gain-\tful", "gh eI n\tf V l");
result.add("gain-\tful-\tly", "gh eI n\tf V\tl i:");
result.add("gain-\tsay", "gh eI n\ts eI");
result.add("gained", "gh eI n d");
result.add("gaines", "gh eI n z");
result.add("gaines-\tville", "gh eI n\tz v I l");
result.add("gains", "gh eI n z");
result.add("gair", "gh e@");
result.add("gait", "gh eI t");
result.add("gaj-\tda", "gh aI\td V");
result.add("gal", "gh { l");
result.add("gal-\tban", "gh { l\tb V n");
result.add("gal-\tbraith", "gh { l\tb r eI T");
result.add("gal-\tbreath", "gh { l\tb r e T");
result.add("gal-\tla", "gh {\tl V");
result.add("gal-\tla-\tger", "gh O:\tl I\tdZ @r");
result.add("gal-\tla-\tgher", "gh {\tl V\tg @r");
result.add("gal-\tla-\ttin", "gh {\tl V\tt I n");
result.add("gal-\tla-\tway", "gh O:\tl V\tw eI");
result.add("gal-\tlant", "gh {\tl V n t");
result.add("gal-\tlant-\try", "gh {\tl V n\tt r i:");
result.add("gal-\tlard", "gh V\tl Q@ d");
result.add("gal-\tlas", "gh {\tl V z");
result.add("gal-\tlau-\tdet", "gh {\tl V\td e t");
result.add("gal-\tle-\tgos", "gh {\tl I\tg @U z");
result.add("gal-\tle-\ton", "gh {\tl i:\tV n");
result.add("gal-\tle-\tons", "gh {\tl i:\tV n z");
result.add("gal-\tle-\tri-\ta", "gh {\tl @r\ti:\tV");
result.add("gal-\tle-\tries", "gh {\tl @r\ti: z");
result.add("gal-\tle-\try", "gh {\tl @r\ti:");
result.add("gal-\tle-\try's", "gh {\tl @r\ti: z");
result.add("gal-\tlen", "gh O:\tl V n");
result.add("gal-\tler", "gh O:\tl @r");
result.add("gal-\tlet", "gh {\tl e t");
result.add("gal-\tley", "gh {\tl i:");
result.add("gal-\tleys", "gh {\tl i: z");
result.add("gal-\tli", "gh {\tl i:");
result.add("gal-\tli-\ta-\tno", "gh Q\tl i:\tQ\tn @U");
result.add("gal-\tli-\tgan", "gh {\tl I\tg V n");
result.add("gal-\tli-\tna", "gh Q\tl i:\tn V");
result.add("gal-\tli-\tum", "gh {\tl i:\tV m");
result.add("gal-\tlia", "gh { l\tj V");
result.add("gal-\tlic", "gh {\tl I k");
result.add("gal-\tling", "gh O:\tl I N");
result.add("gal-\tlion", "gh { l\tj V n");
result.add("gal-\tlo", "gh {\tl @U");
result.add("gal-\tlo-\tping", "gh {\tl V\tp I N");
result.add("gal-\tlo-\tway", "gh {\tl @U\tw eI");
result.add("gal-\tlo-\tways", "gh {\tl @U\tw eI z");
result.add("gal-\tlon", "gh {\tl V n");
result.add("gal-\tlons", "gh {\tl V n z");
result.add("gal-\tloon", "gh V\tl u: n");
result.add("gal-\tlop", "gh {\tl V p");
result.add("gal-\tloped", "gh {\tl V p t");
result.add("gal-\tlo's", "gh {\tl @U z");
result.add("gal-\tlow", "gh {\tl @U");
result.add("gal-\tlows", "gh {\tl @U z");
result.add("gal-\tlup", "gh {\tl V p");
result.add("gal-\tlus", "gh {\tl V s");
result.add("gal-\tton", "gh { l\tt V n");
result.add("gal-\tva-\tni-\tzes", "gh { l\tv V\tn aI\tz V z");
result.add("gal-\tva-\tni-\tzing", "gh { l\tv V\tn aI\tz I N");
result.add("gal-\tva-\tnic", "gh { l\tv {\tn I k");
result.add("gal-\tva-\tnize", "gh { l\tv V\tn aI z");
result.add("gal-\tva-\tnized", "gh { l\tv V\tn aI z d");
result.add("gal-\tvan", "gh Q l\tv Q n");
result.add("gal-\tven", "gh Q l\tv V n");
result.add("gal-\tves-\tton", "gh { l\tv V s\tt V n");
result.add("gal-\tvin", "gh { l\tv I n");
result.add("gal-\tvin's", "gh { l\tv I n z");
result.add("gal-\tway", "gh Q l\tw eI");
result.add("gale", "gh eI l");
result.add("gales", "gh eI l z");
result.add("gale's", "gh eI l z");
result.add("gales-\tburg", "gh eI l\tz b @r g");
result.add("gall", "gh O: l");
result.add("gall-\tblad-\tder", "gh O: l\tb l {\td @r");
result.add("gall-\tman", "gh O: l\tm V n");
result.add("gall-\tstone", "gh O: l\ts t @U n");
result.add("gall-\tstones", "gh Q l\ts t @U n z");
result.add("galle", "gh eI l");
result.add("galls", "gh O: l z");
result.add("gals", "gh { l z");
result.add("gals-\twor-\tthy", "gh { l\tz w @r\tD i:");
result.add("galt", "gh O: l t");
result.add("gam-\tb-\tling", "gh { m\tb V\tl I N");
result.add("gam-\tba", "gh { m\tb V");
result.add("gam-\tber", "gh { m\tb @r");
result.add("gam-\tbi-\ta", "gh { m\tb i:\tV");
result.add("gam-\tbit", "gh { m\tb I t");
result.add("gam-\tbits", "gh { m\tb I t s");
result.add("gam-\tble", "gh { m\tb V l");
result.add("gam-\tbled", "gh { m\tb V l d");
result.add("gam-\tbles", "gh { m\tb V l z");
result.add("gam-\tble's", "gh { m\tb V l z");
result.add("gam-\tbone", "gh Q m\tb @U n");
result.add("gam-\tma", "gh {\tm V");
result.add("gam-\tmon", "gh {\tm V n");
result.add("gam-\tmons", "gh {\tm V n z");
result.add("gamb-\tler", "gh { m\tb l @r");
result.add("gamb-\tlers", "gh { m\tb l @r z");
result.add("gamb-\tler's", "gh { m\tb l @r z");
result.add("gamb-\trel", "gh { m\tb r V l");
result.add("gamb-\trell", "gh { m\tb r V l");
result.add("gamb-\trill", "gh { m\tb r I l");
result.add("game", "gh eI m");
result.add("game-\tly", "gh eI m\tl i:");
result.add("game-\tshow", "gh eI m\tS @U");
result.add("games", "gh eI m z");
result.add("game's", "gh eI m z");
result.add("games-\tman-\tship", "gh eI m\tz m V n\tS I p");
result.add("gamp", "gh { m p");
result.add("gan", "gh { n");
result.add("gan-\tda", "gh { n\td V");
result.add("gan-\tdalf", "gh { n\td O: l f");
result.add("gan-\tder", "gh { n\td @r");
result.add("gan-\tdhi", "gh Q n\td i:");
result.add("gan-\tdhi's", "gh Q n\td i: z");
result.add("gan-\tdol-\tfo", "gh Q n\td @U l\tf @U");
result.add("gan-\tdy", "gh { n\td i:");
result.add("gan-\tger", "gh {\tN @r");
result.add("gan-\tges", "gh { n\tdZ i: z");
result.add("gan-\tging", "gh {\tN I N");
result.add("gan-\tley", "gh { n\tl i:");
result.add("gan-\tnett", "gh {\tn V t");
result.add("gan-\tnett's", "gh {\tn V t s");
result.add("gan-\tnon", "gh {\tn V n");
result.add("gan-\tser", "gh { n\ts @r");
result.add("gang", "gh { N");
result.add("gang-\tban-\tger", "gh { N\tb { N\tg @r");
result.add("gang-\tban-\tgers", "gh { N\tb { N\tg @r z");
result.add("gang-\tbus-\tter", "gh { N\tb V s\tt @r");
result.add("gang-\tbus-\tters", "gh { N\tb V s\tt @r z");
result.add("gang-\tli-\ta", "gh { N\tg l i:\tV");
result.add("gang-\tli-\to-\tnic", "gh { N\tg l i:\tQ\tn I k");
result.add("gang-\tly", "gh { N\tl i:");
result.add("gange", "gh { n dZ");
result.add("gangp-\tlank", "gh { N\tp l { N k");
result.add("gangs", "gh { N z");
result.add("gang's", "gh { N z");
result.add("gangs-\tta", "gh { N\ts t V");
result.add("gangs-\tter", "gh { N\ts t @r");
result.add("gangs-\tters", "gh { N\ts t @r z");
result.add("gans", "gh { n z");
result.add("gant", "gh { n t");
result.add("gant-\tlet", "gh O: n\tt l V t");
result.add("gant-\try", "gh { n\tt r i:");
result.add("gantt", "gh { n t");
result.add("gap", "gh { p");
result.add("gape", "gh eI p");
result.add("gaps", "gh { p s");
result.add("gap's", "gh { p s");
result.add("gar", "gh Q@");
result.add("gar-\tbage", "gh Q@\tb I dZ");
result.add("gar-\tber", "gh Q@\tb @r");
result.add("gar-\tbers", "gh Q@\tb @r z");
result.add("gar-\tble", "gh Q@\tb V l");
result.add("gar-\tbled", "gh Q@\tb V l d");
result.add("gar-\tbo", "gh Q@\tb @U");
result.add("gar-\tceau", "gh Q@\ts @U");
result.add("gar-\tci-\ta", "gh Q@\ts i:\tV");
result.add("gar-\tci-\ta's", "gh Q@\ts i:\tV z");
result.add("gar-\tda", "gh Q@\td V");
result.add("gar-\tde-\tna", "gh Q@\td i:\tn V");
result.add("gar-\tde-\tner", "gh Q@\td V\tn @r");
result.add("gar-\tde-\tners", "gh Q@\td V\tn @r z");
result.add("gar-\tde-\tner's", "gh Q@\td V\tn @r z");
result.add("gar-\tde-\tnia", "gh Q@\td i: n\tj V");
result.add("gar-\tde-\tnias", "gh Q@\td i: n\tj V z");
result.add("gar-\tde-\tning", "gh Q@\td V\tn I N");
result.add("gar-\tden", "gh Q@\td V n");
result.add("gar-\tdened", "gh Q@\td V n d");
result.add("gar-\tdens", "gh Q@\td V n z");
result.add("gar-\tlan", "gh Q@\tl V n");
result.add("gar-\tland", "gh Q@\tl V n d");
result.add("gar-\tli-\tcky", "gh Q@\tl I\tk i:");
result.add("gar-\tlic", "gh Q@\tl I k");
result.add("gar-\tling", "gh Q@\tl I N");
result.add("gar-\tment", "gh Q@\tm V n t");
result.add("gar-\tments", "gh Q@\tm V n t s");
result.add("gar-\tne-\tring", "gh Q@\tn @r\tI N");
result.add("gar-\tneau", "gh Q@\tn @U");
result.add("gar-\tner", "gh Q@\tn @r");
result.add("gar-\tnered", "gh Q@\tn @r d");
result.add("gar-\tners", "gh Q@\tn @r z");
result.add("gar-\tnet", "gh Q@\tn V t");
result.add("gar-\tnett", "gh Q@\tn e t");
result.add("gar-\tnette", "gh Q@\tn e t");
result.add("gar-\tni-\tshes", "gh Q@\tn I\tS V z");
result.add("gar-\tnish", "gh Q@\tn I S");
result.add("gar-\tnish-\tment", "gh Q@\tn I S\tm V n t");
result.add("gar-\tnished", "gh Q@\tn I S t");
result.add("gar-\trard", "gh {\tr @r d");
result.add("gar-\tratt", "gh e@\tV t");
result.add("gar-\tret", "gh e@\tV t");
result.add("gar-\tret-\tson", "gh {\tr V t\ts V n");
result.add("gar-\trets", "gh e@\tV t s");
result.add("gar-\tret's", "gh e@\tV t s");
result.add("gar-\trett", "gh e@\tV t");
result.add("gar-\trett's", "gh e@\tV t z");
result.add("gar-\tri-\tgues", "gh Q@\ti:\tg e s");
result.add("gar-\tri-\tson", "gh {\tr I\ts V n");
result.add("gar-\tri-\tsoned", "gh {\tr I\ts V n d");
result.add("gar-\tri-\tty", "gh e@\tI\tt i:");
result.add("gar-\trick", "gh e@\tI k");
result.add("gar-\tris", "gh {\tr I s");
result.add("gar-\tron", "gh {\tr V n");
result.add("gar-\trott", "gh {\tr V t");
result.add("gar-\tru-\tlous", "gh e@\tV\tl V s");
result.add("gar-\try", "gh {\tr i:");
result.add("gar-\tson", "gh Q@\ts V n");
result.add("gar-\tten", "gh Q@\tt V n");
result.add("gar-\tter", "gh Q@\tt @r");
result.add("gar-\tters", "gh Q@\tt @r z");
result.add("gar-\tvey", "gh Q@\tv i:");
result.add("gar-\tvie", "gh Q@\tv i:");
result.add("gar-\tvin", "gh Q@\tv I n");
result.add("gar-\twin", "gh Q@\tw I n");
result.add("gar-\twood", "gh Q@\tw U d");
result.add("gar-\tza", "gh Q@\tz V");
result.add("gar-\tzon", "gh Q@\tz V n");
result.add("garb", "gh Q@ b");
result.add("garbe", "gh Q@ b");
result.add("garbed", "gh Q@ b d");
result.add("gard", "gh Q@ d");
result.add("garde", "gh Q@ d");
result.add("garn", "gh Q@ n");
result.add("garnes", "gh Q@ n z");
result.add("gars", "gh Q@ z");
result.add("gars-\tton", "gh Q@ s\tt V n");
result.add("gart-\tner", "gh Q@ t\tn @r");
result.add("garth", "gh Q@ T");
result.add("gas", "gh { s");
result.add("gas-\tcon", "gh { s\tk V n");
result.add("gas-\tcons", "gh { s\tk V n z");
result.add("gas-\tkell", "gh { s\tk V l");
result.add("gas-\tket", "gh { s\tk V t");
result.add("gas-\tkets", "gh { s\tk V t s");
result.add("gas-\tkill", "gh { s\tk I l");
result.add("gas-\tkin", "gh { s\tk I n");
result.add("gas-\tkins", "gh { s\tk I n z");
result.add("gas-\tlight", "gh { s\tl aI t");
result.add("gas-\tpar", "gh { s\tp @r");
result.add("gas-\tpard", "gh V s\tp Q@ d");
result.add("gas-\tpe", "gh { s\tp i:");
result.add("gas-\tper", "gh { s\tp @r");
result.add("gas-\tping", "gh { s\tp I N");
result.add("gas-\tsa-\tway", "gh {\ts V\tw eI");
result.add("gas-\tser", "gh {\ts @r");
result.add("gas-\tses", "gh {\ts V z");
result.add("gas-\tsing", "gh {\ts I N");
result.add("gas-\tter", "gh { s\tt @r");
result.add("gas-\tti-\tneau", "gh { s\tt I\tn @U");
result.add("gas-\tto-\tni-\ta", "gh V s\tt @U\tn i:\tV");
result.add("gas-\tton", "gh { s\tt V n");
result.add("gas-\tton's", "gh { s\tt V n z");
result.add("gash", "gh { S");
result.add("gashed", "gh { S t");
result.add("gasp", "gh { s p");
result.add("gasped", "gh { s p t");
result.add("gasps", "gh { s p s");
result.add("gass", "gh { s");
result.add("gass-\tman", "gh { s\tm V n");
result.add("gassed", "gh { s t");
result.add("gast", "gh { s t");
result.add("gast-\tri-\ttis", "gh { s\tt r aI\tt I s");
result.add("gast-\tric", "gh { s\tt r I k");
result.add("gast-\tro-\tin-\ttes-\tti-\tnal", "gh { s\tt r @U\tI n\tt e s\tt I\tn V l");
result.add("gast-\tro-\tno-\tmic", "gh V s\tt r Q\tn Q\tm I k");
result.add("gast-\tro-\tno-\tmy", "gh { s\tt r Q\tn V\tm i:");
result.add("gast-\tro-\tscope", "gh { s\tt r V s\tk @U p");
result.add("gast-\tro-\tvas-\tcu-\tlar", "gh { s\tt r @U\tv { s\tk j V\tl @r");
result.add("gast-\tru-\tla-\ttion", "gh { s\tt r V\tl eI\tS V n");
result.add("gast-\tru-\tlate", "gh { s\tt r V\tl eI t");
result.add("gat", "gh { t");
result.add("gat-\tling", "gh { t\tl I N");
result.add("gat-\tling's", "gh { t\tl I N z");
result.add("gat-\tten", "gh {\tt V n");
result.add("gat-\tting", "gh {\tt I N");
result.add("gat-\twick", "gh { t\tw I k");
result.add("gatch", "gh { tS");
result.add("gate", "gh eI t");
result.add("gate-\tkee-\tper", "gh eI t\tk i:\tp @r");
result.add("gate-\tkee-\tpers", "gh eI t\tk i:\tp @r z");
result.add("gate-\tway", "gh eI t\tw eI");
result.add("gate-\tways", "gh eI t\tw eI z");
result.add("gate-\tway's", "gh eI t\tw eI z");
result.add("gate-\twood", "gh eI t\tw U d");
result.add("gates", "gh eI t s");
result.add("gath", "gh { T");
result.add("gats-\tby", "gh { t\ts b i:");
result.add("gatt", "gh { t");
result.add("gatzke", "gh { t s k");
result.add("gau", "gh @U");
result.add("gau-\tcher", "gh @U\tS @r");
result.add("gau-\tcho", "gh aU\ttS @U");
result.add("gau-\tchos", "gh aU\ttS @U z");
result.add("gau-\tdet", "gh @U\td e t");
result.add("gau-\tdette", "gh @U\td e t");
result.add("gau-\tdy", "gh O:\td i:");
result.add("gau-\tger", "gh eI\tdZ @r");
result.add("gau-\tges", "gh eI\tdZ V z");
result.add("gau-\tghan", "gh O:\tV n");
result.add("gau-\tging", "gh eI\tdZ I N");
result.add("gau-\tguin", "gh O: g\tw I n");
result.add("gau-\tlin", "gh @U\tl { n");
result.add("gau-\tthi-\ter", "gh aU\tT i:\t@r");
result.add("gau-\tti-\ter", "gh aU\tt i:\t@r");
result.add("gaub", "gh O: b");
result.add("gauche", "gh @U S");
result.add("gauge", "gh eI dZ");
result.add("gauged", "gh eI dZ d");
result.add("gaul", "gh O: l");
result.add("gaul-\tding", "gh O: l\td I N");
result.add("gaul-\tlist", "gh O:\tl I s t");
result.add("gaul-\ttier", "gh @U l\tt j eI");
result.add("gaulle", "gh O: l");
result.add("gauls", "gh O: l z");
result.add("gault", "gh O: l t");
result.add("gaunt", "gh O: n t");
result.add("gaunt-\tlet", "gh O: n\tt l V t");
result.add("gaunt-\tness", "gh O: n\tt n V s");
result.add("gaus", "gh O: z");
result.add("gaus-\tman", "gh aU s\tm V n");
result.add("gause", "gh O: z");
result.add("gauss", "gh aU s");
result.add("gaut", "gh O: t");
result.add("gauze", "gh O: z");
result.add("gave", "gh eI v");
result.add("gaw", "gh O:");
result.add("gaw-\tker", "gh Q\tk @r");
result.add("gaw-\tkers", "gh Q\tk @r z");
result.add("gaw-\tking", "gh O:\tk I N");
result.add("gaw-\tky", "gh O:\tk i:");
result.add("gawk", "gh O: k");
result.add("gay", "gh eI");
result.add("gay-\tler", "gh eI\tl @r");
result.add("gay-\tlor", "gh eI\tl @r");
result.add("gay-\tlord", "gh eI\tl O@ d");
result.add("gay-\tner", "gh eI\tn @r");
result.add("gay-\tness", "gh eI\tn V s");
result.add("gay-\tnor", "gh eI\tn @r");
result.add("gaye", "gh eI");
result.add("gayle", "gh eI l");
result.add("gays", "gh eI z");
result.add("gaz", "gh Q z");
result.add("gaze", "gh eI z");
result.add("gazed", "gh eI z d");
result.add("ge-\tb-\tler", "gh e\tb V\tl @r");
result.add("ge-\tbel", "gh e\tb V l");
result.add("ge-\tla-\tsi-\ta", "dZ e\tl Q\ts i:\tV");
result.add("ge-\tla-\tti-\tnous", "dZ V\tl {\tt V\tn V s");
result.add("ge-\tla-\ttin", "dZ e\tl V\tt V n");
result.add("ge-\tla-\ttine", "dZ e\tl V\tt i: n");
result.add("ge-\tlett", "dZ e\tl e t");
result.add("ge-\tmi-\tna", "gh e\tm i:\tn V");
result.add("ge-\tmi-\tnate", "dZ e\tm I\tn eI t");
result.add("ge-\tmi-\tni", "dZ e\tm I\tn aI");
result.add("ge-\tne-\tra", "dZ e\tn @r\tV");
result.add("ge-\tne-\tra-\tli-\tties", "dZ e\tn @r\t{\tl I\tt i: z");
result.add("ge-\tne-\tra-\tli-\tty", "dZ e\tn @r\t{\tl I\tt i:");
result.add("ge-\tne-\tra-\tli-\tza-\ttion", "dZ e\tn @r\tV\tl V\tz eI\tS V n");
result.add("ge-\tne-\tra-\tli-\tza-\ttions", "dZ e\tn @r\tV\tl V\tz eI\tS V n z");
result.add("ge-\tne-\tra-\tli-\tzing", "dZ e\tn @r\tV\tl aI\tz I N");
result.add("ge-\tne-\tra-\tlis-\tsi-\tmo", "dZ e\tn e@\tV\tl I\ts V\tm @U");
result.add("ge-\tne-\tra-\tlist", "dZ e\tn @r\tV\tl V s t");
result.add("ge-\tne-\tra-\tlists", "dZ e\tn @r\tV\tl V s t s");
result.add("ge-\tne-\tra-\tlize", "dZ e\tn @r\tV\tl aI z");
result.add("ge-\tne-\tra-\tlized", "dZ e\tn @r\tV\tl aI z d");
result.add("ge-\tne-\tra-\tted", "dZ e\tn @r\teI\tt V d");
result.add("ge-\tne-\tra-\tting", "dZ e\tn @r\teI\tt I N");
result.add("ge-\tne-\tra-\ttio-\tnal", "dZ e\tn @r\teI\tS V\tn V l");
result.add("ge-\tne-\tra-\ttio-\tnal-\tly", "dZ e\tn @r\teI\tS V\tn V\tl i:");
result.add("ge-\tne-\tra-\ttion", "dZ e\tn @r\teI\tS V n");
result.add("ge-\tne-\tra-\ttions", "dZ e\tn @r\teI\tS V n z");
result.add("ge-\tne-\tra-\ttion's", "dZ e\tn @r\teI\tS V n z");
result.add("ge-\tne-\tra-\ttive", "dZ e\tn @r\tV\tt I v");
result.add("ge-\tne-\tra-\ttor", "dZ e\tn @r\teI\tt @r");
result.add("ge-\tne-\tra-\ttors", "dZ e\tn @r\teI\tt @r z");
result.add("ge-\tne-\tral", "dZ e\tn @r\tV l");
result.add("ge-\tne-\tral-\tly", "dZ e\tn @r\tV\tl i:");
result.add("ge-\tne-\tral-\tship", "dZ e\tn @r\tV l\tS I p");
result.add("ge-\tne-\trale", "dZ e\tn @r\t{ l");
result.add("ge-\tne-\trals", "dZ e\tn @r\tV l z");
result.add("ge-\tne-\tral's", "dZ e\tn @r\tV l z");
result.add("ge-\tne-\trate", "dZ e\tn @r\teI t");
result.add("ge-\tne-\trates", "dZ e\tn @r\teI t s");
result.add("ge-\tne-\tric", "dZ V\tn e@\tI k");
result.add("ge-\tne-\trical-\tly", "dZ V\tn e@\tI k\tl i:");
result.add("ge-\tne-\trics", "dZ V\tn e@\tI k s");
result.add("ge-\tne-\tro-\tsi-\tty", "dZ e\tn @r\tQ\ts I\tt i:");
result.add("ge-\tne-\trous", "dZ e\tn @r\tV s");
result.add("ge-\tne-\trous-\tly", "dZ e\tn @r\tV s\tl i:");
result.add("ge-\tne-\tsee", "dZ e\tn V\ts i:");
result.add("ge-\tne-\tsis", "dZ e\tn V\ts V s");
result.add("ge-\tne-\tti-\tcist", "dZ V\tn e\tt V\ts V s t");
result.add("ge-\tne-\tti-\tcists", "dZ V\tn e\tt V\ts V s t s");
result.add("ge-\tne-\ttic", "dZ V\tn e\tt I k");
result.add("ge-\tne-\ttical-\tly", "dZ V\tn e\tt I k\tl i:");
result.add("ge-\tne-\ttics", "dZ V\tn e\tt I k s");
result.add("ge-\tne-\tva", "dZ V\tn i:\tv V");
result.add("ge-\tne-\tvieve", "dZ e\tn V\tv i: v");
result.add("ge-\tneen", "dZ V\tn i: n");
result.add("ge-\tnes-\tco", "dZ e\tn e s\tk @U");
result.add("ge-\tnet", "dZ e\tn e t");
result.add("ge-\tneve", "dZ V\tn i: v");
result.add("ge-\tni-\ta-\tli-\tty", "dZ i:\tn i:\t{\tl I\tt i:");
result.add("ge-\tni-\tta-\tlia", "dZ e\tn I\tt Q l\tj V");
result.add("ge-\tni-\ttal", "dZ e\tn I\tt V l");
result.add("ge-\tni-\ttals", "dZ e\tn I\tt V l z");
result.add("ge-\tnial", "dZ i: n\tj V l");
result.add("ge-\tnie", "dZ i:\tn i:");
result.add("ge-\tniu-\tses", "dZ i: n\tj V\ts V z");
result.add("ge-\tnius", "dZ i: n\tj V s");
result.add("ge-\tno", "dZ i:\tn @U");
result.add("ge-\tno-\ta", "dZ e\tn @U\tV");
result.add("ge-\tno-\tci-\tdal", "dZ e\tn V\ts aI\td V l");
result.add("ge-\tno-\tcide", "dZ e\tn V\ts aI d");
result.add("ge-\tno-\ttype", "dZ e\tn V\tt aI p");
result.add("ge-\tno-\ttypes", "dZ e\tn V\tt aI p s");
result.add("ge-\tno-\tva", "dZ e\tn @U\tv V");
result.add("ge-\tno-\tvese", "dZ e\tn V\tv i: z");
result.add("ge-\tnoese", "dZ e\tn @U s");
result.add("ge-\tnome", "dZ i:\tn @U m");
result.add("ge-\tnu-\tine", "dZ e n\tj V\tw V n");
result.add("ge-\tnu-\tine-\tly", "dZ e n\tj V\tw V n\tl i:");
result.add("ge-\tnu-\tine-\tness", "dZ e n\tj V\tw V\tn V s");
result.add("ge-\tnus", "dZ i:\tn V s");
result.add("ge-\to", "dZ i:\t@U");
result.add("ge-\to-\tcent-\tric", "dZ i:\t@U\ts e n\tt r I k");
result.add("ge-\to-\tche-\tmis-\ttry", "dZ i:\t@U\tk e\tm I s\tt r i:");
result.add("ge-\to-\tde-\tsic", "dZ i:\tV\td e\ts I k");
result.add("ge-\to-\tde-\tsy", "dZ i:\tQ\td V\ts i:");
result.add("ge-\to-\tgra-\tpher", "dZ i:\tQ g\tr V\tf @r");
result.add("ge-\to-\tgra-\tphi-\tcal", "dZ i:\tV g\tr {\tf I\tk V l");
result.add("ge-\to-\tgra-\tphi-\tcal-\tly", "dZ i:\tV g\tr {\tf I\tk V\tl i:");
result.add("ge-\to-\tgra-\tphic", "dZ i:\tV g\tr {\tf I k");
result.add("ge-\to-\tgra-\tphy", "dZ i:\tQ g\tr V\tf i:");
result.add("ge-\to-\tlo-\tgi-\tcal", "dZ i:\tV\tl Q\tdZ I\tk V l");
result.add("ge-\to-\tlo-\tgic", "dZ i:\tV\tl Q\tdZ I k");
result.add("ge-\to-\tlo-\tgist", "dZ i:\tQ\tl V\tdZ V s t");
result.add("ge-\to-\tlo-\tgists", "dZ i:\tQ\tl V\tdZ V s t s");
result.add("ge-\to-\tlo-\tgy", "dZ i:\tQ\tl V\tdZ i:");
result.add("ge-\to-\tmag-\tne-\ttic", "dZ i:\t@U\tm { g\tn e\tt I k");
result.add("ge-\to-\tmet-\tri-\tcal", "dZ i:\tV\tm e t\tr I\tk V l");
result.add("ge-\to-\tmet-\tric", "dZ i:\tV\tm e t\tr I k");
result.add("ge-\to-\tmet-\trical-\tly", "dZ i:\tV\tm e t\tr I k\tl i:");
result.add("ge-\to-\tmet-\trics", "dZ i:\tV\tm e t\tr I k s");
result.add("ge-\to-\tmet-\tries", "dZ i:\tQ\tm V t\tr i: z");
result.add("ge-\to-\tmet-\try", "dZ i:\tQ\tm V t\tr i:");
result.add("ge-\to-\tmor-\tpho-\tlo-\tgy", "dZ i:\tV\tm O@\tf Q\tl V\tdZ i:");
result.add("ge-\to-\tphy-\tsi-\tcal", "dZ i:\t@U\tf I\tz I\tk V l");
result.add("ge-\to-\tpo-\tli-\tti-\tcal", "dZ i:\t@U\tp V\tl I\tt I\tk V l");
result.add("ge-\to-\tpo-\tli-\ttic", "dZ i:\t@U\tp Q\tl I\tt I k");
result.add("ge-\to-\tpo-\tli-\ttical-\tly", "dZ i:\t@U\tp V\tl I\tt I k\tl i:");
result.add("ge-\to-\tpo-\tli-\ttics", "dZ i:\t@U\tp Q\tl I\tt I k s");
result.add("ge-\to-\tsyn-\tcline", "dZ i:\t@U\ts I n\tk l aI n");
result.add("ge-\to-\tta-\txis", "dZ i:\t@U\tt { k\ts I s");
result.add("ge-\to-\tther-\tmal", "dZ i:\t@U\tT @r\tm V l");
result.add("ge-\to-\ttro-\tpi-\tsm", "dZ i:\tQ t\tr V\tp I\tz V m");
result.add("ge-\to-\ttro-\tpic", "dZ i:\tV t\tr Q\tp I k");
result.add("ge-\toid", "dZ i:\tOI d");
result.add("ge-\ton", "dZ i:\tQ n");
result.add("ge-\tor-\tdie", "dZ i:\t@r\td i:");
result.add("ge-\tor-\tgi", "dZ i:\tQ@\tdZ i:");
result.add("ge-\torg", "gh eI\tO@ g");
result.add("ge-\tos-\ttro-\tphic", "dZ i:\t@U s\tt r Q\tf I k");
result.add("ge-\tra", "dZ e@\tV");
result.add("ge-\tra-\tni-\tum", "dZ @r\teI\tn i:\tV m");
result.add("ge-\tra-\tni-\tums", "dZ @r\teI\tn i:\tV m z");
result.add("ge-\trais", "dZ @r\teI");
result.add("ge-\tral-\tdi-\tna", "dZ @r\tQ l\td i:\tn V");
result.add("ge-\tral-\tdine", "dZ e@\tV l\td i: n");
result.add("ge-\trald", "dZ e@\tV l d");
result.add("ge-\trar-\tdo", "dZ @r\tQ@\td @U");
result.add("ge-\trard", "dZ @r\tQ@ d");
result.add("ge-\tri-\tat-\tri-\tcian", "dZ e@\ti:\tV t\tr I\tS V n");
result.add("ge-\tri-\tat-\tri-\tcians", "dZ e@\ti:\tV t\tr I\tS V n z");
result.add("ge-\tri-\tat-\tric", "dZ e@\ti:\t{ t\tr I k");
result.add("ge-\tri-\tat-\trics", "dZ e@\ti:\t{ t\tr I k s");
result.add("ge-\tring", "gh I@\tI N");
result.add("ge-\tro-\tni-\tmo", "dZ V\tr O:\tn V\tm @U");
result.add("ge-\trome", "gh e@\tV m");
result.add("ge-\tron-\tto-\tlo-\tgist", "dZ e@\tV n\tt Q\tl V\tdZ V s t");
result.add("ge-\tron-\tto-\tlo-\tgy", "dZ e@\tV n\tt Q\tl V\tdZ i:");
result.add("ge-\try", "dZ e@\ti:");
result.add("ge-\tsell", "gh e\ts V l");
result.add("ge-\tsell-\tschaft", "gh V\ts e l\tS { f t");
result.add("ge-\tsell's", "gh e\ts V l z");
result.add("ge-\tta-\tway", "gh e\tt V\tw eI");
result.add("ge-\tta-\tways", "gh e\tt V\tw eI z");
result.add("ge-\tvaert", "gh V\tv e@ t");
result.add("ge-\twirtz", "gh u:\t@r t s");
result.add("ge-\tyer", "gh eI\t@r");
result.add("gea-\tring", "gh I@\tI N");
result.add("gea-\try", "gh I@\ti:");
result.add("gean", "dZ i: n");
result.add("gear", "gh I@");
result.add("gear-\tbo-\txes", "gh I@\tb Q k\ts V z");
result.add("gear-\tbox", "gh I@\tb Q k s");
result.add("gear-\thart", "gh I@\th Q@ t");
result.add("geared", "gh I@ d");
result.add("gears", "gh I@ z");
result.add("gear's", "gh I@ z");
result.add("geb-\tbie", "dZ e\tb i:");
result.add("geb-\thardt", "gh e b\th Q@ t");
result.add("gec-\tko", "gh e\tk @U");
result.add("gec-\tkos", "gh e\tk @U z");
result.add("geck", "dZ e k");
result.add("ged", "gh e d");
result.add("ged-\tdes", "gh e\td V s");
result.add("gee", "dZ i:");
result.add("gee-\ting", "dZ i:\tI N");
result.add("gee-\tky", "gh i:\tk i:");
result.add("gee-\tsey", "gh i:\ts i:");
result.add("geek", "gh i: k");
result.add("geeks", "gh i: k s");
result.add("geer", "gh I@");
result.add("geerts", "gh I@ t s");
result.add("gees", "dZ i: s");
result.add("gee's", "dZ i: z");
result.add("geese", "gh i: s");
result.add("geez", "dZ i: z");
result.add("gef-\tfen", "gh e\tf V n");
result.add("geff-\tner", "gh e f\tn @r");
result.add("gegg", "dZ e g");
result.add("geh-\tman", "gh e\tm V n");
result.add("geh-\trig", "gh e@\tI g");
result.add("geh-\trig's", "gh e@\tI g z");
result.add("gei-\tbel", "gh aI\tb V l");
result.add("gei-\ter", "gh aI\t@r");
result.add("gei-\tger", "gh aI\tg @r");
result.add("gei-\tgy", "gh aI\tg i:");
result.add("gei-\tgy's", "gh aI\tg i: z");
result.add("gei-\tsel", "gh aI\ts V l");
result.add("gei-\tsha", "gh eI\tS V");
result.add("geis", "gh aI z");
result.add("geiss", "gh aI s");
result.add("geiss-\tler", "gh aI s\tl @r");
result.add("geist", "gh aI s t");
result.add("gek-\tko", "gh e\tk @U");
result.add("gel", "dZ e l");
result.add("gel-\tder", "gh e l\td @r");
result.add("gel-\tler", "gh e\tl @r");
result.add("gel-\tlert", "gh e\tl @r t");
result.add("gel-\tman", "gh e l\tm V n");
result.add("gelb", "dZ e l b");
result.add("gell", "dZ e l");
result.add("gell-\tman", "gh e l\tm V n");
result.add("gels", "dZ e l z");
result.add("gem", "dZ e m");
result.add("gem-\tma", "dZ e\tm V");
result.add("gem-\tmell", "gh e\tm V l");
result.add("gem-\tmer", "gh e\tm @r");
result.add("gen-\tghis", "dZ e N\th I s");
result.add("gen-\tna", "dZ e\tn V");
result.add("gen-\tna-\tro", "dZ V\tn Q@\t@U");
result.add("gen-\tni-\tfer", "dZ e\tn I\tf @r");
result.add("gen-\tre", "Z Q n\tr V");
result.add("gen-\tres", "Z Q n\tr V z");
result.add("gen-\ts-\tler", "gh e n\ts V\tl @r");
result.add("gen-\tson", "dZ e n\ts V n");
result.add("gen-\tt-\tlest", "dZ e n\tt V\tl V s t");
result.add("gen-\tteel", "dZ e n\tt i: l");
result.add("gen-\tti-\tli-\tty", "dZ e n\tt I\tl I\tt i:");
result.add("gen-\ttian", "dZ e n\tS V n");
result.add("gen-\ttile", "dZ e n\tt aI l");
result.add("gen-\ttiles", "dZ e n\tt aI l z");
result.add("gen-\ttile's", "dZ e n\tt aI l z");
result.add("gen-\ttle", "dZ e n\tt V l");
result.add("gen-\ttle-\tman", "dZ e n\tt V l\tm V n");
result.add("gen-\ttle-\tman-\tly", "dZ e n\tt V l\tm V n\tl i:");
result.add("gen-\ttle-\tman's", "dZ e n\tt V l\tm V n z");
result.add("gen-\ttle-\tmen", "dZ e n\tt V l\tm e n");
result.add("gen-\ttle-\tmen's", "dZ e n\tt V l\tm e n z");
result.add("gen-\ttle-\tness", "dZ e n\tt V l\tn V s");
result.add("gen-\ttle-\two-\tman", "dZ e n\tt V l\tw U\tm V n");
result.add("gen-\ttle-\two-\tman's", "dZ e n\tt V l\tw U\tm V n z");
result.add("gen-\ttle-\two-\tmen", "dZ e n\tt V l\tw I\tm V n");
result.add("gen-\ttle-\two-\tmen's", "dZ e n\tt V l\tw I\tm V n z");
result.add("gen-\ttles", "dZ e n\tt V l z");
result.add("genes", "dZ i: n z");
result.add("gene's", "dZ i: n z");
result.add("genk", "dZ e N k");
result.add("gens", "dZ e n z");
result.add("gent", "dZ e n t");
result.add("gent-\tler", "dZ e n\tt l @r");
result.add("gent-\tly", "dZ e n\tt l i:");
result.add("gent-\tri-\tfi-\tca-\ttion", "dZ e n\tt r I\tf I\tk eI\tS V n");
result.add("gent-\tri-\tfied", "dZ e n\tt r I\tf aI d");
result.add("gent-\tri-\tfy", "dZ e n\tt r I\tf aI");
result.add("gent-\tri-\tfy-\ting", "dZ e n\tt r I\tf aI\tI N");
result.add("gent-\try", "dZ e n\tt r i:");
result.add("geof-\tfrey", "dZ e f\tr i:");
result.add("geof-\tfrey's", "dZ e f\tr i: z");
result.add("geoff", "dZ e f");
result.add("geor-\tgann", "dZ O@\tdZ { n");
result.add("geor-\tgene", "dZ O@\tdZ i: n");
result.add("geor-\tges", "dZ O@\tdZ V z");
result.add("geor-\tge's", "dZ O@\tdZ V z");
result.add("geor-\tgette", "dZ O@\tdZ e t");
result.add("geor-\tgi-\ta-\tna", "dZ O@\tdZ i:\t{\tn V");
result.add("geor-\tgi-\tna", "dZ O@\tdZ i:\tn V");
result.add("geor-\tgia", "dZ O@\tdZ V");
result.add("geor-\tgian", "dZ O@\tdZ V n");
result.add("geor-\tgians", "dZ O@\tdZ V n z");
result.add("geor-\tgia's", "dZ O@\tdZ V z");
result.add("geor-\tgie", "dZ O@\tdZ i:");
result.add("geor-\tgine", "dZ O@\tdZ i: n");
result.add("geor-\tgy", "dZ O@\tdZ i:");
result.add("george", "dZ O@ dZ");
result.add("george-\ttown", "dZ O@ dZ\tt aU n");
result.add("ger-\tber", "gh @r\tb @r");
result.add("ger-\tber's", "gh @r\tb @r z");
result.add("ger-\tda", "gh @r\td V");
result.add("ger-\tger", "gh @r\tg @r");
result.add("ger-\thard", "gh @r\th Q@ d");
result.add("ger-\thardt", "gh @r\th Q@ t");
result.add("ger-\thart", "gh @r\th Q@ t");
result.add("ger-\tkin", "dZ @r\tk I n");
result.add("ger-\tlach", "gh @r\tl V k");
result.add("ger-\tma-\tni-\ta", "dZ @r\tm eI\tn i:\tV");
result.add("ger-\tma-\tnic", "dZ @r\tm {\tn I k");
result.add("ger-\tma-\tno", "dZ @r\tm Q\tn @U");
result.add("ger-\tma-\tny", "dZ @r\tm V\tn i:");
result.add("ger-\tma-\tny's", "dZ @r\tm V\tn i: z");
result.add("ger-\tmain", "dZ @r\tm eI n");
result.add("ger-\tmaine", "Z @r\tm eI n");
result.add("ger-\tmain's", "dZ @r\tm eI n z");
result.add("ger-\tman", "dZ @r\tm V n");
result.add("ger-\tman-\ttown", "dZ @r\tm V n\tt aU n");
result.add("ger-\tmane", "dZ @r\tm eI n");
result.add("ger-\tmann", "gh @r\tm V n");
result.add("ger-\tmans", "dZ @r\tm V n z");
result.add("ger-\tman's", "dZ @r\tm V n z");
result.add("ger-\tmi-\tcide", "dZ @r\tm I\ts aI d");
result.add("ger-\tmi-\tna-\tted", "dZ @r\tm I\tn eI\tt I d");
result.add("ger-\tmi-\tna-\ttion", "dZ @r\tm I\tn eI\tS V n");
result.add("ger-\tmi-\tnate", "dZ @r\tm I\tn eI t");
result.add("ger-\tmi-\tston", "dZ @r\tm I s\tt Q n");
result.add("ger-\tmi-\tston's", "dZ @r\tm I s\tt Q n z");
result.add("ger-\trald", "dZ e@\tV l d");
result.add("ger-\tri", "dZ e@\ti:");
result.add("ger-\trie", "dZ e@\ti:");
result.add("ger-\trit", "dZ e@\tI t");
result.add("ger-\try", "dZ e@\ti:");
result.add("ger-\try-\tman-\tde-\tring", "dZ e@\ti:\tm { n\td @r\tI N");
result.add("ger-\try-\tman-\tder", "dZ e@\ti:\tm { n\td @r");
result.add("ger-\try-\tman-\tdered", "dZ e@\ti:\tm { n\td @r d");
result.add("ger-\try-\tman-\tders", "dZ e@\ti:\tm { n\td @r z");
result.add("ger-\try's", "dZ e@\ti: z");
result.add("ger-\tshon", "gh @r\tS V n");
result.add("ger-\tson", "dZ @r\ts V n");
result.add("ger-\ttie", "dZ @r\tt i:");
result.add("ger-\tty", "dZ @r\tt i:");
result.add("ger-\tvais", "Z @r\tv eI");
result.add("ger-\tvase", "gh @r\tv V s");
result.add("gerd", "gh @r d");
result.add("gere", "dZ I@");
result.add("germ", "dZ @r m");
result.add("germs", "dZ @r m z");
result.add("gers-\ttein", "gh @r s\tt aI n");
result.add("gersh-\twin", "gh @r S\tw I n");
result.add("gersh-\twin's", "gh @r S\tw I n z");
result.add("gerst-\tner", "gh @r s\tt n @r");
result.add("gerst-\tner's", "gh @r s\tt n @r z");
result.add("gert", "gh @r t");
result.add("gert-\tner", "gh @r t\tn @r");
result.add("gert-\trud", "gh @r t\tr u: d");
result.add("gert-\trude", "gh @r t\tr u: d");
result.add("ges-\tner", "gh e s\tn @r");
result.add("ges-\tta-\tpo", "gh V s\tt Q\tp @U");
result.add("ges-\tta-\ttion", "dZ e s\tt eI\tS V n");
result.add("ges-\ttate", "dZ e s\tt eI t");
result.add("ges-\ttu-\tring", "dZ e s\ttS @r\tI N");
result.add("ges-\tture", "dZ e s\ttS @r");
result.add("ges-\ttured", "dZ e s\ttS @r d");
result.add("ges-\ttures", "dZ e s\ttS @r z");
result.add("gess", "dZ e s");
result.add("gess-\tner", "gh e s\tn @r");
result.add("gest", "dZ e s t");
result.add("get", "gh e t");
result.add("get-\tter", "gh e\tt @r");
result.add("get-\tters", "gh e\tt @r z");
result.add("get-\tting", "gh e\tt I N");
result.add("get-\ttings", "gh e\tt I N z");
result.add("get-\tto-\tge-\tther", "gh e t\tt V\tg e\tD @r");
result.add("get-\tty", "gh e\tt i:");
result.add("get-\tty's", "gh e\tt i: z");
result.add("get-\ttys-\tburg", "gh e\tt i: z\tb @r g");
result.add("get-\twell", "gh e t\tw e l");
result.add("gets", "gh e t s");
result.add("getz", "gh e t s");
result.add("gey-\tser", "gh aI\tz @r");
result.add("gey-\tsers", "gh aI\tz @r z");
result.add("gha-\tna", "gh {\tn V");
result.add("gha-\tnai-\tan", "gh V\tn aI\tV n");
result.add("gha-\tnai-\tans", "gh V\tn aI\tV n z");
result.add("gha-\tna's", "gh {\tn V z");
result.add("ghast-\tli-\tness", "gh { s\tt l i:\tn V s");
result.add("ghast-\tly", "gh { s\tt l i:");
result.add("ghe-\trar-\tdi", "gh @r\tQ@\td i:");
result.add("ghee", "gh i:");
result.add("gheen", "gh i: n");
result.add("ghent", "gh e n t");
result.add("ghet-\tto", "gh e\tt @U");
result.add("ghet-\ttos", "gh e\tt @U z");
result.add("ghost", "gh @U s t");
result.add("gi-\tan", "dZ i:\tQ n");
result.add("gi-\tant", "dZ aI\tV n t");
result.add("gi-\tants", "dZ aI\tV n t s");
result.add("gi-\tant's", "dZ aI\tV n t s");
result.add("gi-\tants'", "dZ aI\tV n t s");
result.add("gi-\tbert", "gh I\tb @r t");
result.add("gi-\tbral-\ttar", "dZ V b\tr O: l\tt @r");
result.add("gi-\tde-\ton", "gh I\td i:\tV n");
result.add("gi-\tg-\tgly", "gh I\tg V\tl i:");
result.add("gi-\tga-\tbyte", "gh I\tg V\tb aI t");
result.add("gi-\tga-\tbytes", "gh I\tg V\tb aI t s");
result.add("gi-\tga-\tflop", "gh I\tg V f\tl Q p");
result.add("gi-\tga-\tflops", "gh I\tg V f\tl Q p s");
result.add("gi-\tgan-\tte", "dZ i:\tg Q n\tt i:");
result.add("gi-\tgan-\ttic", "dZ aI\tg { n\tt I k");
result.add("gi-\tgi", "dZ i:\tdZ i:");
result.add("gi-\tgot", "dZ I\tg V t");
result.add("gi-\tgot's", "dZ I\tg V t s");
result.add("gi-\tgu-\tere", "dZ i:\tg e@\teI");
result.add("gi-\tlead", "gh I\tl i: d");
result.add("gi-\tna", "dZ i:\tn V");
result.add("gi-\tna's", "dZ i:\tn V z");
result.add("gi-\tnev-\tra", "dZ V\tn e v\tr V");
result.add("gi-\tno", "dZ i:\tn @U");
result.add("gi-\to-\tvan-\tni", "dZ i:\t@U\tv Q\tn i:");
result.add("gi-\to-\tvan-\tni's", "dZ i:\t@U\tv Q\tn i: z");
result.add("gi-\tral-\tdo", "dZ I@\tQ l\td @U");
result.add("gi-\trar-\tdi", "dZ I@\tQ@\td i:");
result.add("gi-\trard", "dZ @r\tQ@ d");
result.add("gi-\traud", "Z aI\tr @U");
result.add("gi-\tro-\tla-\tmo", "dZ I@\t@U\tl Q\tm @U");
result.add("gi-\tron", "gh O@\tV n");
result.add("gi-\ts-\tler", "gh I\ts V\tl @r");
result.add("gi-\tse-\tla", "gh i:\tz V\tl V");
result.add("gi-\tsel-\tla", "dZ I\ts e\tl V");
result.add("gi-\tselle", "Z I\ts e l");
result.add("gi-\tta-\tna", "dZ i:\tt {\tn V");
result.add("gi-\tta-\tno", "gh I\tt Q\tn @U");
result.add("gi-\tthens", "gh I\tT V n z");
result.add("gi-\tvea-\tway", "gh I\tv V\tw eI");
result.add("gi-\tvea-\tways", "gh I\tv V\tw eI z");
result.add("gi-\tven", "gh I\tv V n");
result.add("gi-\tven-\tchy", "gh I\tv e n\ttS i:");
result.add("gi-\tven-\tness", "gh I\tv V\tn V s");
result.add("gi-\tvens", "gh I\tv V n z");
result.add("gi-\tver", "gh I\tv @r");
result.add("gi-\tvers", "gh I\tv @r z");
result.add("gi-\tveth", "gh I\tv e T");
result.add("gi-\tving", "gh I\tv I N");
result.add("gi-\tza", "gh I\tz V");
result.add("gia-\tcin-\tta", "dZ Q\ttS i: n\tt V");
result.add("gia-\tco-\tmet-\tti", "dZ V\tk V\tm e\tt i:");
result.add("gia-\tco-\tmo", "dZ Q\tk V\tm @U");
result.add("giai-\tmo", "dZ eI\tm @U");
result.add("gian-\tni", "dZ Q\tn i:");
result.add("gian-\tni-\tni", "dZ V\tn i:\tn i:");
result.add("gib", "gh I b");
result.add("gib-\tbe-\trish", "gh I\tb @r\tI S");
result.add("gib-\tbon", "gh I\tb V n");
result.add("gib-\tbons", "gh I\tb V n z");
result.add("gib-\tby", "dZ I\tb i:");
result.add("gib-\tlet", "dZ I b\tl V t");
result.add("gib-\tson", "gh I b\ts V n");
result.add("gib-\tson's", "gh I b\ts V n z");
result.add("gibb", "dZ I b");
result.add("gibbs", "gh I b z");
result.add("gibb's", "gh I b z");
result.add("gibe", "dZ aI b");
result.add("gid-\tdings", "gh I\td I N z");
result.add("gid-\tdy", "gh I\td i:");
result.add("gie-\tfer", "gh i:\tf @r");
result.add("gie-\tsecke", "gh i:\ts I k");
result.add("giel-\tgud", "gh i: l\tg V d");
result.add("gies", "gh i: z");
result.add("gies-\tsen", "gh i: z\ts V n");
result.add("gif-\tfard", "gh I\tf @r d");
result.add("gif-\tferd", "gh I\tf @r d");
result.add("gif-\tford", "gh I\tf @r d");
result.add("gif-\tford's", "gh I\tf @r d z");
result.add("gif-\tfy", "gh I\tf i:");
result.add("gif-\tted", "gh I f\tt V d");
result.add("gif-\tting", "gh I f\tt I N");
result.add("giff", "gh I f");
result.add("gift", "gh I f t");
result.add("gift-\tware", "gh I f\tt w e@");
result.add("gifts", "gh I f t s");
result.add("gig", "gh I g");
result.add("gig-\tg-\tling", "gh I\tg V\tl I N");
result.add("gig-\tging", "gh I\tg I N");
result.add("gig-\tgle", "gh I\tg V l");
result.add("gig-\tgled", "gh I\tg V l d");
result.add("gig-\tgles", "gh I\tg V l z");
result.add("gig-\tli-\to", "dZ I g\tl i:\t@U");
result.add("gig-\tnac", "gh I g\tn V k");
result.add("gigs", "gh I g z");
result.add("gil", "gh I l");
result.add("gil-\tber-\tta", "dZ i: l\tb e@\tt V");
result.add("gil-\tber-\tti-\tna", "dZ i: l\tb @r\tt i:\tn V");
result.add("gil-\tber-\tti-\tne", "dZ i: l\tb @r\tt i:\tn i:");
result.add("gil-\tber-\tto", "gh I l\tb e@\tt @U");
result.add("gil-\tbert", "gh I l\tb @r t");
result.add("gil-\tbert-\tson", "gh I l\tb @r t\ts V n");
result.add("gil-\tberte", "gh I l\tb @r t");
result.add("gil-\tbert's", "gh I l\tb @r t s");
result.add("gil-\tby", "gh I l\tb i:");
result.add("gil-\tcr-\test", "gh I l\tk @r\tI s t");
result.add("gil-\tda", "gh I l\td V");
result.add("gil-\tde-\ta", "dZ i: l\td i:\tV");
result.add("gil-\tded", "gh I l\td V d");
result.add("gil-\tden", "gh I l\td V n");
result.add("gil-\tder", "gh I l\td @r");
result.add("gil-\tder's", "gh I l\td @r z");
result.add("gil-\tding", "gh I l\td I N");
result.add("gil-\tford", "gh I l\tf @r d");
result.add("gil-\tlan", "gh I\tl V n");
result.add("gil-\tler", "gh I\tl @r");
result.add("gil-\tlers", "gh I\tl @r z");
result.add("gil-\tles-\tpie", "gh V\tl e s\tp i:");
result.add("gil-\tlet", "gh I\tl e t");
result.add("gil-\tlett", "dZ I\tl I t");
result.add("gil-\tlette", "dZ V\tl e t");
result.add("gil-\tlette's", "dZ V\tl e t s");
result.add("gil-\tley", "gh I\tl i:");
result.add("gil-\tli-\tam", "gh I\tl i:\tV m");
result.add("gil-\tli-\tan", "dZ I\tl i:\tV n");
result.add("gil-\tli-\tgan", "gh I\tl I\tg V n");
result.add("gil-\tli-\tgan's", "gh I\tl I\tg V n z");
result.add("gil-\tlie", "gh I\tl i:");
result.add("gil-\tlies", "gh I\tl i: z");
result.add("gil-\tlin-\tgham", "gh I\tl I N\th { m");
result.add("gil-\tly", "gh I\tl i:");
result.add("gil-\tman", "gh I l\tm V n");
result.add("gil-\tmer", "gh I l\tm @r");
result.add("gil-\tmore", "gh I l\tm O@");
result.add("gil-\tmour", "Z I l\tm U@");
result.add("gil-\tpin", "gh I l\tp I n");
result.add("gil-\troy", "gh I l\tr OI");
result.add("gil-\tson", "gh I l\ts V n");
result.add("gilch-\trist", "gh I l\tk r I s t");
result.add("gild", "gh I l d");
result.add("gile", "gh aI l");
result.add("giles", "dZ aI l z");
result.add("gill", "gh I l");
result.add("gill-\tham", "gh I l\th V m");
result.add("gill-\tman", "gh I l\tm V n");
result.add("gill-\tmore", "dZ i: l\tm O@");
result.add("gilles", "Z i: l");
result.add("gills", "gh I l z");
result.add("gill's", "gh I l z");
result.add("gilt", "gh I l t");
result.add("gilt-\tner", "gh I l\tt n @r");
result.add("gilts", "gh I l t s");
result.add("gim-\tbel", "gh I m\tb V l");
result.add("gim-\tme", "gh I\tm i:");
result.add("gim-\tmic-\tky", "gh I\tm I\tk i:");
result.add("gim-\tmick", "gh I\tm I k");
result.add("gim-\tmick-\try", "gh I\tm I k\tr i:");
result.add("gim-\tmicks", "gh I\tm I k s");
result.add("gim-\tpel", "gh I m\tp V l");
result.add("gin", "dZ I n");
result.add("gin-\tder", "gh aI n\td @r");
result.add("gin-\tge-\try", "dZ I n\tdZ @r\ti:");
result.add("gin-\tger", "dZ I n\tdZ @r");
result.add("gin-\tger-\tbread", "dZ I n\tdZ @r b\tr e d");
result.add("gin-\tger-\tly", "dZ I n\tdZ @r\tl i:");
result.add("gin-\tgles", "dZ I N\tg V l z");
result.add("gin-\tnie", "dZ I\tn i:");
result.add("gin-\tning", "dZ I\tn I N");
result.add("gin-\tny", "dZ I\tn i:");
result.add("gin-\tseng", "dZ I n\ts e N");
result.add("gin-\tsu", "gh I n\ts u:");
result.add("gin-\tsu's", "gh I n\ts u: z");
result.add("gin-\tza", "gh I n\tz V");
result.add("ging", "dZ I N");
result.add("ging-\tham", "gh I\tN V m");
result.add("ging-\thams", "gh I\tN V m z");
result.add("ging-\tras", "gh I N\tg r V z");
result.add("ging-\tri-\tch's", "gh I N\tg r I\ttS V z");
result.add("ging-\trich", "gh I N\tg r I tS");
result.add("ginn", "dZ I n");
result.add("ginned", "dZ I n d");
result.add("gins-\tberg", "gh I n\ts b @r g");
result.add("gins-\tburg", "gh I n\tz b @r g");
result.add("gins-\tburg's", "gh I n\tz b @r g z");
result.add("gintz", "gh I n t s");
result.add("ginz-\tberg", "gh I n\tz b @r g");
result.add("gior-\tda-\tno", "dZ O@\td Q\tn @U");
result.add("gior-\tgi", "dZ O@\tdZ i:");
result.add("gior-\tgi-\to", "dZ O@\tdZ i:\t@U");
result.add("gior-\tgia", "dZ O@\tdZ V");
result.add("gip-\tper", "gh I\tp @r");
result.add("gip-\tson", "gh i: p\ts V n");
result.add("gir-\taffe", "dZ @r\t{ f");
result.add("gir-\taffes", "dZ @r\t{ f s");
result.add("gir-\td-\tler", "gh @r\td V\tl @r");
result.add("gir-\tder", "gh @r\td @r");
result.add("gir-\tders", "gh @r\td @r z");
result.add("gir-\tding", "gh @r\td I N");
result.add("gir-\tdle", "gh @r\td V l");
result.add("gir-\tgen-\tti", "dZ I@\tdZ e n\tt i:");
result.add("gir-\tlie", "gh @r\tl i:");
result.add("gir-\tlish", "gh @r\tl I S");
result.add("gir-\tlish-\tly", "gh @r\tl I S\tl i:");
result.add("gir-\tton", "gh @r\tt V n");
result.add("gir-\tvin", "gh @r\tv I n");
result.add("gird", "gh @r d");
result.add("girds", "gh @r d z");
result.add("gire", "gh aI r");
result.add("girl", "gh @r l");
result.add("girl-\tfriend", "gh @r l\tf r e n d");
result.add("girl-\tfriends", "gh @r l\tf r e n d z");
result.add("girl-\thood", "gh @r l\th U d");
result.add("girls", "gh @r l z");
result.add("girl's", "gh @r l z");
result.add("girt", "gh @r t");
result.add("girth", "gh @r T");
result.add("gis-\tcard", "gh I s\tk Q@ d");
result.add("gish", "dZ I S");
result.add("gist", "dZ I s t");
result.add("git-\tter", "gh I\tt @r");
result.add("giu-\tli-\ta-\tni", "dZ u:\tl i:\tQ\tn i:");
result.add("giu-\tli-\ta-\tni's", "dZ u:\tl i:\tQ\tn i: z");
result.add("giu-\tli-\ta-\tno", "dZ u:\tl i:\tQ\tn @U");
result.add("giu-\tli-\to", "dZ u:\tl i:\t@U");
result.add("giu-\tsep-\tpe", "dZ V\ts e\tp i:");
result.add("giun-\tta", "dZ u: n\tt V");
result.add("gius-\tto", "dZ u: s\tt @U");
result.add("give", "gh I v");
result.add("give-\tback", "gh aI v\tb { k");
result.add("give-\tbacks", "gh aI v\tb { k s");
result.add("gives", "gh I v z");
result.add("giz-\tmo", "gh I z\tm @U");
result.add("giz-\tmos", "gh I z\tm @U z");
result.add("giz-\tzard", "gh I\tz @r d");
result.add("gla-\tci-\ta-\tted", "gh l eI\tS i:\teI\tt V d");
result.add("gla-\tci-\ta-\ttion", "gh l eI\tS i:\teI\tS V n");
result.add("gla-\tci-\tate", "gh l eI\tS i:\teI t");
result.add("gla-\tcial", "gh l eI\tS V l");
result.add("gla-\tcier", "gh l eI\tS @r");
result.add("gla-\tciers", "gh l eI\tS @r z");
result.add("gla-\tcier's", "gh l eI\tS @r z");
result.add("gla-\tcis", "gh l eI\ts I s");
result.add("gla-\tdi-\ta-\ttor", "gh l {\td i:\teI\tt @r");
result.add("gla-\tdi-\ta-\ttors", "gh l {\td i:\teI\tt @r z");
result.add("gla-\tdi-\to-\tlus", "gh l {\td i:\t@U\tl V s");
result.add("gla-\tdis", "gh l {\td I s");
result.add("gla-\tdys", "gh l {\td I s");
result.add("gla-\tmo-\tri-\tzing", "gh l {\tm @r\taI\tz I N");
result.add("gla-\tmo-\trize", "gh l {\tm @r\taI z");
result.add("gla-\tmo-\trized", "gh l {\tm @r\taI z d");
result.add("gla-\tmo-\trous", "gh l {\tm @r\tV s");
result.add("gla-\tmor", "gh l {\tm @r");
result.add("gla-\tmour", "gh l {\tm @r");
result.add("gla-\tring", "gh l e@\tI N");
result.add("gla-\tser", "gh l eI\tz @r");
result.add("gla-\tvin", "gh l {\tv I n");
result.add("gla-\txo", "gh l { k\ts @U");
result.add("gla-\txo's", "gh l { k\ts @U z");
result.add("gla-\tzer", "gh l eI\tz @r");
result.add("gla-\tzes", "gh l eI\tz V z");
result.add("gla-\tzi-\ter", "gh l eI\tz i:\t@r");
result.add("gla-\tzing", "gh l eI\tz I N");
result.add("gla-\tzu-\tnov", "gh l {\tz u:\tn Q v");
result.add("glaab", "gh l Q b");
result.add("glace", "gh l eI s");
result.add("glad", "gh l { d");
result.add("glad-\tden", "gh l {\td V n");
result.add("glad-\tding", "gh l {\td I N");
result.add("glad-\tly", "gh l { d\tl i:");
result.add("glad-\twin", "gh l { d\tw I n");
result.add("glade", "gh l eI d");
result.add("glades", "gh l eI d z");
result.add("glads-\ttone", "gh l { d\ts t @U n");
result.add("glads-\ttones", "gh l { d\ts t @U n z");
result.add("glan-\tces", "gh l { n\ts V z");
result.add("glan-\tcing", "gh l { n\ts I N");
result.add("glan-\tder", "gh l { n\td @r");
result.add("glan-\tdu-\tlar", "gh l { n\tdZ V\tl @r");
result.add("glan-\tville", "gh l { n\tv I l");
result.add("glance", "gh l { n s");
result.add("glanced", "gh l { n s t");
result.add("gland", "gh l { n d");
result.add("glands", "gh l { n d z");
result.add("glantz", "gh l { n t s");
result.add("glare", "gh l e@");
result.add("glared", "gh l e@ d");
result.add("glares", "gh l e@ z");
result.add("glas-\tco", "gh l Q s\tk @U");
result.add("glas-\tgow", "gh l { s\tk @U");
result.add("glas-\tnost", "gh l { s\tn Q s t");
result.add("glas-\tser", "gh l {\ts @r");
result.add("glas-\tses", "gh l {\ts V z");
result.add("glas-\ts's", "gh l {\ts V z");
result.add("glas-\tsy", "gh l {\ts i:");
result.add("glass", "gh l { s");
result.add("glass-\tblo-\twer", "gh l { s\tb l @U\t@r");
result.add("glass-\tblo-\twers", "gh l { s\tb l @U\t@r z");
result.add("glass-\tblo-\twing", "gh l { s\tb l @U\tI N");
result.add("glass-\tblow-\ting", "gh l { s\tb l @U\tI N");
result.add("glass-\tco", "gh l { s\tk @U");
result.add("glass-\tlike", "gh l { s\tl aI k");
result.add("glass-\tma-\tker", "gh l { s\tm eI\tk @r");
result.add("glass-\tma-\tking", "gh l { s\tm eI\tk I N");
result.add("glass-\tman", "gh l { s\tm { n");
result.add("glass-\tware", "gh l { s\tw e@");
result.add("glassed", "gh l { s t");
result.add("glau-\tber", "gh l aU\tb @r");
result.add("glau-\tco-\tma", "gh l O:\tk @U\tm V");
result.add("glaze", "gh l eI z");
result.add("glazed", "gh l eI z d");
result.add("gle-\tba", "gh l i:\tb V");
result.add("gle-\tda", "gh l eI\td V");
result.add("glea-\tming", "gh l i:\tm I N");
result.add("glea-\tson", "gh l i:\ts V n");
result.add("glea-\tson's", "gh l i:\ts V n z");
result.add("gleam", "gh l i: m");
result.add("gleamed", "gh l i: m d");
result.add("gleams", "gh l i: m z");
result.add("glean", "gh l i: n");
result.add("gleaned", "gh l i: n d");
result.add("gleave", "gh l i: v");
result.add("gleaves", "gh l i: v z");
result.add("glee", "gh l i:");
result.add("glee-\tful", "gh l i:\tf V l");
result.add("glee-\tful-\tly", "gh l i:\tf V\tl i:");
result.add("glee-\tson", "gh l i:\tz V n");
result.add("gleich", "gh l aI k");
result.add("glen", "gh l e n");
result.add("glen-\tbrook", "gh l e n\tb r U k");
result.add("glen-\tview", "gh l e n\tv j u:");
result.add("glen-\tville", "gh l e n\tv I l");
result.add("glen-\twood", "gh l e n\tw U d");
result.add("glen-\twood's", "gh l e n\tw U d z");
result.add("glens", "gh l e n z");
result.add("glew", "gh l u:");
result.add("gli-\tded", "gh l aI\td V d");
result.add("gli-\tder", "gh l aI\td @r");
result.add("gli-\tders", "gh l aI\td @r z");
result.add("gli-\tding", "gh l aI\td I N");
result.add("gli-\tste-\tning", "gh l I\ts V\tn I N");
result.add("gli-\tsten", "gh l I\ts V n");
result.add("gli-\tstened", "gh l I\ts V n d");
result.add("glib", "gh l I b");
result.add("glib-\tly", "gh l I b\tl i:");
result.add("glick", "gh l I k");
result.add("glick-\tman", "gh l I k\tm V n");
result.add("glid-\tden", "gh l I\td V n");
result.add("glide", "gh l aI d");
result.add("glides", "gh l aI d z");
result.add("glim-\tme-\tring", "gh l I\tm @r\tI N");
result.add("glim-\tmer", "gh l I\tm @r");
result.add("glim-\tmers", "gh l I\tm @r z");
result.add("glimp-\tses", "gh l I m\tp s V z");
result.add("glimpse", "gh l I m p s");
result.add("glimpsed", "gh l I m p s t");
result.add("glin-\tka", "gh l I N\tk V");
result.add("glin-\tting", "gh l I n\tt I N");
result.add("glint", "gh l I n t");
result.add("glis-\tsan-\tdi", "gh l V\ts Q n\td i:");
result.add("glit-\tches", "gh l I\ttS V z");
result.add("glit-\tte-\tring", "gh l I\tt @r\tI N");
result.add("glit-\tte-\try", "gh l I\tt @r\ti:");
result.add("glit-\tter", "gh l I\tt @r");
result.add("glit-\ttered", "gh l I\tt @r d");
result.add("glit-\tters", "gh l I\tt @r z");
result.add("glit-\tzy", "gh l I t\ts i:");
result.add("glitch", "gh l I tS");
result.add("glitz", "gh l I t s");
result.add("glo-\tba-\tli-\tza-\ttion", "gh l @U\tb V\tl V\tz eI\tS V n");
result.add("glo-\tba-\tlize", "gh l @U\tb V\tl aI z");
result.add("glo-\tba-\tlized", "gh l @U\tb V\tl aI z d");
result.add("glo-\tbal", "gh l @U\tb V l");
result.add("glo-\tbal-\tly", "gh l @U\tb V\tl i:");
result.add("glo-\tbu-\tlar", "gh l Q b\tj V\tl @r");
result.add("glo-\tbu-\tlin", "gh l Q b\tj V\tl V n");
result.add("glo-\tbu-\tlins", "gh l Q b\tj V\tl V n z");
result.add("glo-\tbus", "gh l @U\tb V s");
result.add("glo-\tcken-\tspiel", "gh l Q\tk V n\ts p i: l");
result.add("glo-\tri", "gh l O@\ti:");
result.add("glo-\tri-\ta", "gh l O@\ti:\tV");
result.add("glo-\tri-\ta-\tna", "gh l O@\ti:\t{\tn V");
result.add("glo-\tri-\tane", "gh l O@\ti:\t{ n");
result.add("glo-\tri-\tfi-\tca-\ttion", "gh l O@\tI\tf I\tk eI\tS V n");
result.add("glo-\tri-\tfied", "gh l O@\tI\tf aI d");
result.add("glo-\tri-\tfies", "gh l O@\tI\tf aI z");
result.add("glo-\tri-\tfy", "gh l O@\tI\tf aI");
result.add("glo-\tri-\tfy-\ting", "gh l O@\tI\tf aI\tI N");
result.add("glo-\tri-\to-\tso", "gh l O@\ti:\t@U\ts @U");
result.add("glo-\tri-\tous", "gh l O@\ti:\tV s");
result.add("glo-\tri-\tous-\tly", "gh l O@\ti:\tV s\tl i:");
result.add("glo-\tries", "gh l O@\ti: z");
result.add("glo-\try", "gh l O@\ti:");
result.add("glo-\tver", "gh l V\tv @r");
result.add("glo-\twe-\tring", "gh l aU\t@r\tI N");
result.add("glo-\twer", "gh l aU\t@r");
result.add("glo-\twered", "gh l aU\t@r d");
result.add("glo-\twing", "gh l @U\tI N");
result.add("glo-\twing-\tly", "gh l @U\tI N\tl i:");
result.add("gloa-\tming", "gh l @U\tm I N");
result.add("gloa-\tted", "gh l @U\tt V d");
result.add("gloa-\tting", "gh l @U\tt I N");
result.add("gloat", "gh l @U t");
result.add("gloats", "gh l @U t s");
result.add("glob", "gh l Q b");
result.add("globe", "gh l @U b");
result.add("globes", "gh l @U b z");
result.add("globe's", "gh l @U b z");
result.add("globet-\trot-\tter", "gh l @U b\tt r O:\tt @r");
result.add("globet-\trot-\tters", "gh l @U b\tt r O:\tt @r z");
result.add("globs", "gh l Q b z");
result.add("glock", "gh l Q k");
result.add("glod", "gh l Q d");
result.add("gloo-\tmi-\ter", "gh l u:\tm i:\t@r");
result.add("gloo-\tmi-\tly", "gh l u:\tm I\tl i:");
result.add("gloo-\tmy", "gh l u:\tm i:");
result.add("gloom", "gh l u: m");
result.add("glop", "gh l Q p");
result.add("glop-\tpy", "gh l Q\tp i:");
result.add("glor", "gh l O@");
result.add("glore", "gh l O@");
result.add("glos-\tsa-\try", "gh l O:\ts @r\ti:");
result.add("glos-\tser", "gh l O:\ts @r");
result.add("glos-\tses", "gh l O:\ts V z");
result.add("glos-\tsi-\ter", "gh l O:\ts i:\t@r");
result.add("glos-\tsy", "gh l O:\ts i:");
result.add("glos-\tter", "gh l Q s\tt @r");
result.add("gloss", "gh l O: s");
result.add("glossed", "gh l O: s t");
result.add("glot-\ttal", "gh l Q\tt V l");
result.add("glot-\ttis", "gh l Q\tt I s");
result.add("glouces-\tter", "gh l O: s\tt @r");
result.add("glove", "gh l V v");
result.add("gloved", "gh l V v d");
result.add("gloves", "gh l V v z");
result.add("glow", "gh l @U");
result.add("glowed", "gh l @U d");
result.add("glows", "gh l @U z");
result.add("glu-\tco-\tside", "gh l u:\tk V\ts aI d");
result.add("glu-\tco-\tsides", "gh l u:\tk V\ts aI d z");
result.add("glu-\tcose", "gh l u:\tk @U s");
result.add("glu-\tta-\tmate", "gh l u:\tt V\tm eI t");
result.add("glu-\tta-\tmic", "gh l u:\tt {\tm I k");
result.add("glu-\tta-\tric", "gh l u:\tt {\tr I k");
result.add("glu-\tten", "gh l u:\tt V n");
result.add("gluck", "gh l V k");
result.add("gluck's", "gh l V k s");
result.add("glue", "gh l u:");
result.add("glued", "gh l u: d");
result.add("glues", "gh l u: z");
result.add("glum", "gh l V m");
result.add("glum-\tly", "gh l V m\tl i:");
result.add("glut", "gh l V t");
result.add("glut-\tted", "gh l V\tt V d");
result.add("glut-\tto-\tnous", "gh l V\tt V\tn V s");
result.add("glut-\tto-\tny", "gh l V\tt V\tn i:");
result.add("glut-\ttons", "gh l V\tt V n z");
result.add("gluts", "gh l V t s");
result.add("gly-\tce-\trol", "gh l I\ts @r\t@U l");
result.add("gly-\tcine", "gh l aI\ts i: n");
result.add("gly-\tco-\tgen", "gh l aI\tk V\tdZ V n");
result.add("gly-\tco-\tlic", "gh l aI\tk O:\tl I k");
result.add("gly-\tco-\tside", "gh l aI\tk V\ts aI d");
result.add("gly-\tcol", "gh l aI\tk O: l");
result.add("gly-\tnis", "gh l I\tn I s");
result.add("glyn", "gh l I n");
result.add("glyn-\tnis", "gh l I\tn I s");
result.add("glynde-\tbourne", "gh l I n\td b O@ n");
result.add("glynn", "gh l I n");
result.add("gmbh", "gh V m");
result.add("gna-\tshing", "n {\tS I N");
result.add("gna-\twing", "n O:\tI N");
result.add("gnar-\tly", "n Q@\tl i:");
result.add("gnarl", "n Q@ l");
result.add("gnarled", "n Q@ l d");
result.add("gnash", "n { S");
result.add("gnat", "n { t");
result.add("gnat-\tcat-\tcher", "n { t\tk {\ttS @r");
result.add("gnats", "n { t s");
result.add("gnaw", "n O:");
result.add("gnawed", "n O: d");
result.add("gnaws", "n O: z");
result.add("gneiss", "n aI s");
result.add("gno-\tmic", "n @U\tm I k");
result.add("gno-\tmo-\tnic", "n @U\tm Q\tn I k");
result.add("gno-\tsti-\tci-\tsm", "n Q s\tt I\ts I\tz V m");
result.add("gnomes", "n @U m z");
result.add("gnu", "n u:");
result.add("go", "gh @U");
result.add("go-\ta", "gh @U\tV");
result.add("go-\tber", "gh @U\tb @r");
result.add("go-\tbert", "gh Q\tb @r t");
result.add("go-\tbi", "gh @U\tb i:");
result.add("go-\tcart", "gh @U\tk Q@ t");
result.add("go-\tda", "gh @U\td V");
result.add("go-\tdard", "gh V\td Q@ d");
result.add("go-\tdart", "gh Q\td Q@ t");
result.add("go-\tdi-\tva", "gh V\td aI\tv V");
result.add("go-\tdin", "gh @U\td I n");
result.add("go-\tdot", "gh @U\td V t");
result.add("go-\tdown", "gh @U\td aU n");
result.add("go-\tdu-\tnov", "gh @U\td u:\tn Q v");
result.add("go-\te-\tring", "gh @U\t@r\tI N");
result.add("go-\ter", "gh @U\t@r");
result.add("go-\ters", "gh @U\t@r z");
result.add("go-\tgo", "gh @U\tg @U");
result.add("go-\ting", "gh @U\tI N");
result.add("go-\tings", "gh @U\tI N z");
result.add("go-\tkey", "gh @U\tk i:");
result.add("go-\tla", "gh @U\tl V");
result.add("go-\tlan", "gh @U\tl V n");
result.add("go-\tlem", "gh @U\tl V m");
result.add("go-\tli-\tath", "gh V\tl aI\tV T");
result.add("go-\tli-\taths", "gh @U\tl i:\t{ T s");
result.add("go-\tlight-\tly", "gh @U\tl aI t\tl i:");
result.add("go-\tlub", "gh @U\tl V b");
result.add("go-\tma", "gh @U\tm V");
result.add("go-\tmer", "gh @U\tm @r");
result.add("go-\tmez", "gh @U\tm e z");
result.add("go-\tmor-\trah", "gh V\tm O@\tV");
result.add("go-\tnaives", "gh @U\tn aI v z");
result.add("go-\tner", "gh Q\tn @r");
result.add("go-\tni-\ta", "gh @U\tn i:\tV");
result.add("go-\tni-\to-\tme-\tter", "gh @U\tn i:\tQ\tm V\tt @r");
result.add("go-\tni-\tum", "gh @U\tn i:\tV m");
result.add("go-\tno-\tcoc-\tcal", "gh Q\tn V\tk Q\tk V l");
result.add("go-\tnor-\trhe-\ta", "gh Q\tn @r\ti:\tV");
result.add("go-\tpher", "gh @U\tf @r");
result.add("go-\tphers", "gh @U\tf @r z");
result.add("go-\tra", "gh O@\tV");
result.add("go-\tral", "gh O@\tV l");
result.add("go-\tree", "gh O@\ti:");
result.add("go-\tren", "gh O@\tV n");
result.add("go-\trey", "gh O@\ti:");
result.add("go-\tril-\tla", "gh @r\tI\tl V");
result.add("go-\tril-\tlas", "gh @r\tI\tl V z");
result.add("go-\trin", "gh O@\tI n");
result.add("go-\tring", "gh O@\tI N");
result.add("go-\trum", "gh O@\tV m");
result.add("go-\try", "gh O@\ti:");
result.add("go-\tshawk", "gh Q s\th O: k");
result.add("go-\tshen", "gh @U\tS V n");
result.add("go-\ttham", "gh Q\tT V m");
result.add("go-\tthard", "gh Q\tT @r d");
result.add("go-\tthen-\tburg", "gh @U\tt V n\tb @r g");
result.add("go-\tthic", "gh Q\tT I k");
result.add("go-\tto", "gh @U\tt u:");
result.add("go-\tver-\tnance", "gh V\tv @r\tn V n s");
result.add("go-\tver-\tness", "gh V\tv @r\tn V s");
result.add("go-\tver-\tning", "gh V\tv @r\tn I N");
result.add("go-\tver-\tnor", "gh V\tv @r\tn @r");
result.add("go-\tver-\tnor-\tship", "gh V\tv @r\tn @r\tS I p");
result.add("go-\tver-\tnor-\tships", "gh V\tv @r\tn @r\tS I p s");
result.add("go-\tver-\tnors", "gh V\tv @r\tn @r z");
result.add("go-\tver-\tnor's", "gh V\tv @r\tn @r z");
result.add("go-\tvern", "gh V\tv @r n");
result.add("go-\tvern-\tmen-\ttal", "gh V\tv @r\tm e n\tt V l");
result.add("go-\tvern-\tmen-\ttal-\tly", "gh V\tv @r\tm e n\tt V\tl i:");
result.add("go-\tvern-\tment", "gh V\tv @r\tm V n t");
result.add("go-\tvern-\tments", "gh V\tv @r\tm V n t s");
result.add("go-\tvern-\tment's", "gh V\tv @r\tm V n t s");
result.add("go-\tverned", "gh V\tv @r n d");
result.add("go-\tverns", "gh V\tv @r n z");
result.add("go-\twan", "gh aU\tV n");
result.add("go-\twans", "gh aU\tV n z");
result.add("go-\twen", "gh aU\tV n");
result.add("go-\twer", "gh aU\t@r");
result.add("go-\tya", "gh OI\tV");
result.add("go-\tyim", "gh OI\tI m");
result.add("goa-\tded", "gh @U\td V d");
result.add("goa-\tding", "gh @U\td I N");
result.add("goa-\tlie", "gh @U\tl i:");
result.add("goa-\ttee", "gh @U\tt i:");
result.add("goad", "gh @U d");
result.add("goal", "gh @U l");
result.add("goal-\tkee-\tper", "gh @U l\tk i:\tp @r");
result.add("goal-\tpost", "gh @U l\tp @U s t");
result.add("goals", "gh @U l z");
result.add("goan", "gh @U n");
result.add("goans", "gh @U n z");
result.add("goar", "gh O@");
result.add("goat", "gh @U t");
result.add("goats", "gh @U t s");
result.add("goat's", "gh @U t s");
result.add("gob", "gh Q b");
result.add("gob-\tb-\tling", "gh Q\tb V\tl I N");
result.add("gob-\tbl-\ter", "gh Q\tb V\tl @r");
result.add("gob-\tbl-\ters", "gh Q\tb V\tl @r z");
result.add("gob-\tble", "gh Q\tb V l");
result.add("gob-\tble-\tdy-\tgook", "gh Q\tb V l\td i:\tg U k");
result.add("gob-\tbled", "gh Q\tb V l d");
result.add("gob-\tlet", "gh Q b\tl V t");
result.add("gob-\tlin", "gh Q b\tl I n");
result.add("gob-\tlins", "gh Q b\tl I n z");
result.add("gobs", "gh Q b z");
result.add("god", "gh Q d");
result.add("god-\tdam", "gh Q d\td { m");
result.add("god-\tdamn", "gh Q d\td { m");
result.add("god-\tdard", "gh Q\td @r d");
result.add("god-\tdart", "gh Q\td Q@ t");
result.add("god-\tden", "gh Q\td V n");
result.add("god-\tdes-\tses", "gh Q\td V\ts V z");
result.add("god-\tdess", "gh Q\td V s");
result.add("god-\tding", "gh Q\td I N");
result.add("god-\tfa-\tther", "gh Q d\tf Q\tD @r");
result.add("god-\tfa-\tther's", "gh Q d\tf Q\tD @r z");
result.add("god-\tfrey", "gh Q d\tf r i:");
result.add("god-\thead", "gh Q d\th e d");
result.add("god-\tkin", "gh Q d\tk I n");
result.add("god-\tless", "gh Q d\tl V s");
result.add("god-\tley", "gh Q d\tl i:");
result.add("god-\tly", "gh Q d\tl i:");
result.add("god-\tman", "gh Q d\tm V n");
result.add("god-\tmo-\tther", "gh Q d\tm V\tD @r");
result.add("god-\tsend", "gh Q d\ts e n d");
result.add("god-\tspeed", "gh Q d\ts p i: d");
result.add("god-\twin", "gh Q d\tw I n");
result.add("god-\tzil-\tla", "gh Q d\tz I\tl V");
result.add("gods", "gh Q d z");
result.add("god's", "gh Q d z");
result.add("goe", "gh @U");
result.add("goe-\tbel", "gh @U\tb V l");
result.add("goe-\tthals", "gh @U\tT V l z");
result.add("goeb-\tbels", "gh @U\tb V l z");
result.add("goeh-\tner", "gh @U\tn @r");
result.add("goen", "gh @U n");
result.add("goer-\tlitz", "gh O@\tl I t s");
result.add("goerke", "gh O@ k");
result.add("goes", "gh @U z");
result.add("goethe", "gh @U T");
result.add("goetz", "gh e t s");
result.add("goff", "gh O: f");
result.add("gog-\tgin", "gh Q\tg I n");
result.add("gog-\tgle", "gh Q\tg V l");
result.add("gog-\tgles", "gh Q\tg V l z");
result.add("gogh", "gh @U");
result.add("goi-\tter", "gh OI\tt @r");
result.add("goines", "gh OI n z");
result.add("gol-\tcon-\tda", "gh Q l\tk Q n\td V");
result.add("gol-\tda", "gh @U l\td V");
result.add("gol-\tdy", "gh @U l\td i:");
result.add("gol-\tfer", "gh Q l\tf @r");
result.add("gol-\tfers", "gh Q l\tf @r z");
result.add("gol-\tfer's", "gh Q l\tf @r z");
result.add("gol-\tfing", "gh Q l\tf I N");
result.add("gol-\tgi", "gh @U l\tdZ i:");
result.add("gol-\tler", "gh Q\tl @r");
result.add("gol-\tly", "gh Q\tl i:");
result.add("gold", "gh @U l d");
result.add("gold-\tbach", "gh @U l\td b Q k");
result.add("gold-\tberg", "gh @U l\td b @r g");
result.add("gold-\tberg's", "gh @U l\td b @r g z");
result.add("gold-\tblum", "gh @U l\td b l V m");
result.add("gold-\tcrest", "gh @U l\td k r e s t");
result.add("gold-\tmark", "gh @U l\td m Q@ k");
result.add("gold-\tmine", "gh @U l\td m aI n");
result.add("gold-\tner", "gh @U l\td n @r");
result.add("gold-\tstar", "gh @U l\td s t Q@");
result.add("gold-\tstein", "gh @U l\td s t aI n");
result.add("gold-\tstein's", "gh @U l\td s t aI n z");
result.add("gold-\tston", "gh @U l\td s t V n");
result.add("gold-\tstone", "gh @U l\td s t @U n");
result.add("gold-\tswor-\tthy", "gh @U l\td z w @r\tD i:");
result.add("gold-\twa-\tter", "gh @U l\td w O:\tt @r");
result.add("gold-\twa-\tter's", "gh @U l\td w O:\tt @r z");
result.add("gold-\twas-\tser", "gh @U l\td w O:\ts @r");
result.add("gold-\twin", "gh @U l\td w I n");
result.add("gold-\twyn", "gh @U l\td w I n");
result.add("golds", "gh @U l d z");
result.add("gold's", "gh @U l d z");
result.add("golds-\tmith", "gh @U l\td s m I T");
result.add("golds-\tmith's", "gh @U l\td s m I T s");
result.add("goldsch-\tmidt", "gh @U l\td S m I t");
result.add("goldth-\twaite", "gh @U l\td T w eI t");
result.add("golf", "gh Q l f");
result.add("golfed", "gh Q l f t");
result.add("golfs", "gh Q l f s");
result.add("golf's", "gh Q l f s");
result.add("goll", "gh Q l");
result.add("goltz", "gh @U l t s");
result.add("gom-\tberg", "gh Q m\tb @r g");
result.add("gom-\tbos", "gh @U m\tb @U z");
result.add("gon-\tcha-\trov", "gh Q n\ttS @r\tQ v");
result.add("gon-\tdo-\tla", "gh Q n\td V\tl V");
result.add("gon-\tdo-\tlas", "gh Q n\td V\tl V z");
result.add("gon-\tdo-\tlier", "gh Q n\td V\tl I@");
result.add("gon-\tdo-\tliers", "gh Q n\td V\tl I@ z");
result.add("gon-\tna", "gh Q\tn V");
result.add("gon-\tnel-\tla", "gh @U\tn e\tl V");
result.add("gon-\tyea", "gh @U n\tj e");
result.add("gon-\tza-\tle-\tz's", "gh Q n\tz Q\tl V\tz V z");
result.add("gon-\tza-\tles", "gh Q n\tz Q\tl V s");
result.add("gon-\tza-\tlez", "gh Q n\tz Q\tl V z");
result.add("gon-\tza-\tlo", "gh Q n\tz Q\tl @U");
result.add("gon-\tzo", "gh Q n\tz @U");
result.add("gond", "gh Q n d");
result.add("gone", "gh Q n");
result.add("gong", "gh O: N");
result.add("gongs", "gh O: N z");
result.add("goo", "gh u:");
result.add("goo-\tdall", "gh U\td O: l");
result.add("goo-\tdell", "gh U\td e l");
result.add("goo-\tder", "gh U\td @r");
result.add("goo-\tders", "gh U\td @r z");
result.add("goo-\tdie", "gh U\td i:");
result.add("goo-\tdies", "gh U\td i: z");
result.add("goo-\tding", "gh U\td I N");
result.add("goo-\tding's", "gh U\td I N z");
result.add("goo-\tdy", "gh U\td i:");
result.add("goo-\tdy's", "gh U\td i: z");
result.add("goo-\tey", "gh u:\ti:");
result.add("goo-\tfing", "gh u:\tf I N");
result.add("goo-\tfy", "gh u:\tf i:");
result.add("goo-\tgins", "gh u:\tg I n z");
result.add("goo-\tley", "gh u:\tl i:");
result.add("goo-\tsey", "gh u:\ts i:");
result.add("goo-\ttee", "gh u:\tt i:");
result.add("gooch", "gh u: tS");
result.add("good", "gh U d");
result.add("good-\tby", "gh U d\tb aI");
result.add("good-\tbye", "gh U d\tb aI");
result.add("good-\tbyes", "gh U d\tb aI z");
result.add("good-\tfel-\tlow", "gh U d\tf e\tl @U");
result.add("good-\tfel-\tlows", "gh U d\tf e\tl @U z");
result.add("good-\thear-\tted-\tly", "gh U d\th Q@\tt V d\tl i:");
result.add("good-\thue", "gh U d\th j u:");
result.add("good-\tkin", "gh U d\tk I n");
result.add("good-\tland", "gh U d\tl V n d");
result.add("good-\tly", "gh U d\tl i:");
result.add("good-\tman", "gh U d\tm V n");
result.add("good-\tman's", "gh U d\tm { n z");
result.add("good-\tna-\ttured-\tly", "gh U d\tn eI\ttS @r d\tl i:");
result.add("good-\tness", "gh U d\tn V s");
result.add("good-\tnight", "gh U d\tn aI t");
result.add("good-\tri-\tch's", "gh U d\tr I\ttS V z");
result.add("good-\trich", "gh U d\tr I tS");
result.add("good-\trow", "gh U d\tr @U");
result.add("good-\tson", "gh U d\ts V n");
result.add("good-\tson's", "gh U d\ts V n z");
result.add("good-\tspeed", "gh U d\ts p i: d");
result.add("good-\tspeed's", "gh U d\ts p i: d z");
result.add("good-\twill", "gh U d\tw I l");
result.add("good-\twin", "gh U d\tw I n");
result.add("good-\twine", "gh U d\tw aI n");
result.add("good-\tyear", "gh U d\tj I@");
result.add("good-\tyear's", "gh U d\tj I@ z");
result.add("goode", "gh U d");
result.add("goods", "gh U d z");
result.add("good's", "gh U d z");
result.add("goof", "gh u: f");
result.add("goofed", "gh u: f t");
result.add("goofs", "gh u: f s");
result.add("gook", "gh U k");
result.add("goold", "gh u: l d");
result.add("goon", "gh u: n");
result.add("goons", "gh u: n z");
result.add("goop", "gh u: p");
result.add("goos", "gh u: z");
result.add("goos-\tsens", "gh u:\ts V n z");
result.add("goose", "gh u: s");
result.add("goose-\tber-\try", "gh u: s\tb e@\ti:");
result.add("goose-\tfish", "gh u: s\tf I S");
result.add("goose-\tfoot", "gh u: s\tf U t");
result.add("gor-\tba-\tchev", "gh O@\tb V\ttS e v");
result.add("gor-\tda", "gh O@\td V");
result.add("gor-\tdan", "gh O@\td V n");
result.add("gor-\tden", "gh O@\td V n");
result.add("gor-\tdi-\tan", "gh O@\td i:\tV n");
result.add("gor-\tdie", "gh O@\td i:");
result.add("gor-\tdon", "gh O@\td V n");
result.add("gor-\tdon's", "gh O@\td V n z");
result.add("gor-\tdy", "gh O@\td i:");
result.add("gor-\tgas", "gh O@\tg V z");
result.add("gor-\tgeous", "gh O@\tdZ V s");
result.add("gor-\tges", "gh O@\tdZ V z");
result.add("gor-\tgo-\tni-\tan", "gh O@\tg @U\tn i:\tV n");
result.add("gor-\tgon", "gh O@\tg V n");
result.add("gor-\tgons", "gh O@\tg V n z");
result.add("gor-\tham", "gh O@\tV m");
result.add("gor-\tki", "gh O@\tk i:");
result.add("gor-\tky", "gh O@\tk i:");
result.add("gor-\tky's", "gh O@\tk i: z");
result.add("gor-\tman", "gh O@\tm V n");
result.add("gor-\tski", "gh O@ s\tk i:");
result.add("gor-\tton", "gh O@\tt V n");
result.add("gore", "gh O@");
result.add("gored", "gh O@ d");
result.add("gores", "gh O@ z");
result.add("gore's", "gh O@ z");
result.add("gorge", "gh O@ dZ");
result.add("gos-\tnell", "gh Q s\tn V l");
result.add("gos-\tney", "gh Q s\tn i:");
result.add("gos-\tpel", "gh Q s\tp V l");
result.add("gos-\tpels", "gh Q s\tp V l z");
result.add("gos-\tplan", "gh O: s\tp l { n");
result.add("gos-\tsa-\tmer", "gh Q\ts V\tm @r");
result.add("gos-\tsard", "gh V\ts Q@ d");
result.add("gos-\tse-\tlin", "gh Q\ts V\tl I n");
result.add("gos-\tser", "gh O:\ts @r");
result.add("gos-\tsi-\tper", "gh Q\ts V\tp @r");
result.add("gos-\tsi-\tpers", "gh Q\ts V\tp @r z");
result.add("gos-\tsi-\tping", "gh Q\ts V\tp I N");
result.add("gos-\tsi-\tpy", "gh Q\ts I\tp i:");
result.add("gos-\tsip", "gh Q\ts V p");
result.add("gos-\tsips", "gh Q\ts I p s");
result.add("gosh", "gh Q S");
result.add("goss", "gh O: s");
result.add("gosse", "gh Q s");
result.add("got", "gh Q t");
result.add("got-\tcha", "gh Q\ttS V");
result.add("got-\tcher", "gh Q\ttS @r");
result.add("got-\tta", "gh Q\tt V");
result.add("got-\tten", "gh Q\tt V n");
result.add("got-\tter-\tdam-\tme-\trung", "gh Q\tt @r\td {\tm @r\tV N");
result.add("gotch", "gh Q tS");
result.add("goth", "gh Q T");
result.add("gott", "gh Q t");
result.add("gott-\tfried", "gh O: t\tf r i: d");
result.add("gott-\thelf", "gh Q t\th e l f");
result.add("gott-\tlieb", "gh Q t\tl i: b");
result.add("gott-\tlieb's", "gh Q t\tl i: b z");
result.add("gott-\tschalk", "gh Q\ttS V k");
result.add("gott-\twald", "gh Q t\tw V l d");
result.add("gotz", "gh Q t s");
result.add("gou-\tcher", "gh aU\tk @r");
result.add("gou-\tdeau", "gh u:\td @U");
result.add("gou-\tdy", "gh aU\td i:");
result.add("gou-\tger", "gh aU\tdZ @r");
result.add("gou-\tging", "gh aU\tdZ I N");
result.add("gou-\tlash", "gh u:\tl Q S");
result.add("gou-\tlet", "gh u:\tl e t");
result.add("gou-\tlette", "gh u:\tl e t");
result.add("gou-\tty", "gh aU\tt i:");
result.add("gouge", "gh aU dZ");
result.add("gouged", "gh aU dZ d");
result.add("gough", "gh O: f");
result.add("goul-\tden", "gh U\td V n");
result.add("gould", "gh u: l d");
result.add("gould's", "gh u: l d z");
result.add("gour-\tdine", "gh U@\td aI n");
result.add("gour-\tmet", "gh U@\tm eI");
result.add("gour-\tmets", "gh U@\tm eI z");
result.add("gourd", "gh O@ d");
result.add("gourds", "gh O@ d z");
result.add("gout", "gh aU t");
result.add("gov", "gh V v");
result.add("gove", "gh @U v");
result.add("govs", "gh Q v z");
result.add("gow", "gh aU");
result.add("gow-\tdy", "gh aU\td i:");
result.add("gown", "gh aU n");
result.add("gowns", "gh aU n z");
result.add("goy", "gh OI");
result.add("gra-\tben", "gh r {\tb V n");
result.add("gra-\tbens", "gh r Q\tb V n z");
result.add("gra-\tbill", "gh r V\tb I l");
result.add("gra-\tble", "gh r eI\tb V l");
result.add("gra-\tces", "gh r eI\ts V z");
result.add("gra-\tce's", "gh r eI\ts V z");
result.add("gra-\tcey", "gh r eI\ts i:");
result.add("gra-\tcia", "gh r Q\ttS V");
result.add("gra-\tcie", "gh r eI\ts i:");
result.add("gra-\tcile", "gh r {\ts I l");
result.add("gra-\tcious", "gh r eI\tS V s");
result.add("gra-\tcious-\tly", "gh r eI\tS V s\tl i:");
result.add("gra-\tcious-\tness", "gh r eI\tS V s\tn V s");
result.add("gra-\tckle", "gh r {\tk V l");
result.add("gra-\tckles", "gh r {\tk V l z");
result.add("gra-\tcy", "gh r eI\ts i:");
result.add("gra-\tda-\ttion", "gh r eI\td eI\tS V n");
result.add("gra-\tda-\ttions", "gh r eI\td eI\tS V n z");
result.add("gra-\tded", "gh r eI\td V d");
result.add("gra-\tder", "gh r eI\td @r");
result.add("gra-\tders", "gh r eI\td @r z");
result.add("gra-\tding", "gh r eI\td I N");
result.add("gra-\tdu-\ta-\tli-\tsm", "gh r {\tdZ V\tw V\tl I\tz V m");
result.add("gra-\tdu-\ta-\tlist", "gh r {\tdZ V\tw V\tl I s t");
result.add("gra-\tdu-\ta-\tted", "gh r {\tdZ u:\teI\tt V d");
result.add("gra-\tdu-\ta-\tting", "gh r {\tdZ V\tw eI\tt I N");
result.add("gra-\tdu-\ta-\ttion", "gh r {\tdZ u:\teI\tS V n");
result.add("gra-\tdu-\ta-\ttions", "gh r {\tdZ u:\teI\tS V n z");
result.add("gra-\tdu-\tal", "gh r {\tdZ u:\tV l");
result.add("gra-\tdu-\tal-\tly", "gh r {\tdZ u:\tV\tl i:");
result.add("gra-\tdu-\tate", "gh r {\tdZ V\tw V t");
result.add("gra-\tdu-\tates", "gh r {\tdZ V\tw V t s");
result.add("gra-\tdus", "gh r eI\td V s");
result.add("gra-\tdy", "gh r eI\td i:");
result.add("gra-\tna", "gh r {\tn V");
result.add("gra-\tna-\tda", "gh r V\tn Q\td V");
result.add("gra-\tna-\tda's", "gh r V\tn Q\td V z");
result.add("gra-\tna-\tdo", "gh r Q\tn Q\td @U");
result.add("gra-\tna-\tdos", "gh r Q\tn Q\td @U z");
result.add("gra-\tnat", "gh r {\tn V t");
result.add("gra-\tner", "gh r eI\tn @r");
result.add("gra-\tnese", "gh r {\tn i: z");
result.add("gra-\tni-\ttic", "gh r V\tn I\tt I k");
result.add("gra-\tnite", "gh r {\tn I t");
result.add("gra-\tno", "gh r Q\tn @U");
result.add("gra-\tno-\tla", "gh r V\tn @U\tl V");
result.add("gra-\tnoff", "gh r {\tn O: f");
result.add("gra-\tnu-\tla-\ttion", "gh r { n\tj V\tl eI\tS V n");
result.add("gra-\tnu-\tlar", "gh r { n\tj V\tl @r");
result.add("gra-\tnu-\tlo-\tcyte", "gh r V\tn u:\tl @U\ts aI t");
result.add("gra-\tnule", "gh r { n\tj V l");
result.add("gra-\tnules", "gh r { n\tj V l z");
result.add("gra-\tnum", "gh r {\tn V m");
result.add("gra-\tphi-\tcal", "gh r {\tf I\tk V l");
result.add("gra-\tphic", "gh r {\tf I k");
result.add("gra-\tphical-\tly", "gh r {\tf I k\tl i:");
result.add("gra-\tphics", "gh r {\tf I k s");
result.add("gra-\tphite", "gh r {\tf aI t");
result.add("gra-\tpho-\tlo-\tgy", "gh r V\tf Q\tl V\tdZ i:");
result.add("gra-\tta", "gh r Q\tt V");
result.add("gra-\tted", "gh r eI\tt V d");
result.add("gra-\tter", "gh r eI\tt @r");
result.add("gra-\tti-\tfi-\tca-\ttion", "gh r {\tt I\tf I\tk eI\tS V n");
result.add("gra-\tti-\tfied", "gh r {\tt I\tf aI d");
result.add("gra-\tti-\tfy", "gh r {\tt I\tf aI");
result.add("gra-\tti-\tfy-\ting", "gh r {\tt I\tf aI\tI N");
result.add("gra-\tti-\ttude", "gh r {\tt I\tt u: d");
result.add("gra-\tting", "gh r eI\tt I N");
result.add("gra-\ttis", "gh r {\tt I s");
result.add("gra-\ttu-\ti-\tties", "gh r V\tt u:\tV\tt i: z");
result.add("gra-\ttu-\ti-\ttous", "gh r V\tt u:\tV\tt V s");
result.add("gra-\ttu-\ti-\ttous-\tly", "gh r V\tt u:\tV\tt V s\tl i:");
result.add("gra-\ttu-\ti-\tty", "gh r V\tt u:\tV\tt i:");
result.add("gra-\tvel", "gh r {\tv V l");
result.add("gra-\tvel-\tly", "gh r {\tv V\tl i:");
result.add("gra-\tven", "gh r eI\tv V n");
result.add("gra-\tver", "gh r eI\tv @r");
result.add("gra-\tvest", "gh r {\tv V s t");
result.add("gra-\tvette", "gh r V\tv e t");
result.add("gra-\tvi-\tme-\tter", "gh r {\tv I\tm i:\tt @r");
result.add("gra-\tvi-\tmet-\tric", "gh r {\tv I\tm e t\tr I k");
result.add("gra-\tvi-\tta-\tted", "gh r {\tv I\tt eI\tt I d");
result.add("gra-\tvi-\tta-\tting", "gh r {\tv I\tt eI\tt I N");
result.add("gra-\tvi-\tta-\ttio-\tnal", "gh r {\tv I\tt eI\tS V\tn V l");
result.add("gra-\tvi-\tta-\ttion", "gh r {\tv I\tt eI\tS V n");
result.add("gra-\tvi-\ttas", "gh r {\tv I\tt V s");
result.add("gra-\tvi-\ttate", "gh r {\tv I\tt eI t");
result.add("gra-\tvi-\ttates", "gh r {\tv I\tt eI t s");
result.add("gra-\tvi-\ttatio-\tnal-\tly", "gh r {\tv I\tt eI S\tn V\tl i:");
result.add("gra-\tvi-\tty", "gh r {\tv I\tt i:");
result.add("gra-\tvies", "gh r eI\tv i: z");
result.add("gra-\tvy", "gh r eI\tv i:");
result.add("gra-\tyer", "gh r eI\t@r");
result.add("gra-\tyest", "gh r eI\tV s t");
result.add("gra-\tying", "gh r eI\tI N");
result.add("gra-\tyish", "gh r eI\tI S");
result.add("gra-\tzer", "gh r eI\tz @r");
result.add("gra-\tzi-\ter", "gh r eI\tz i:\t@r");
result.add("gra-\tzing", "gh r eI\tz I N");
result.add("grab", "gh r { b");
result.add("grab-\tber", "gh r {\tb @r");
result.add("grab-\tbers", "gh r {\tb @r z");
result.add("grab-\tbing", "gh r {\tb I N");
result.add("grabbed", "gh r { b d");
result.add("grabs", "gh r { b z");
result.add("grace", "gh r eI s");
result.add("grace-\tful", "gh r eI s\tf V l");
result.add("grace-\tful-\tly", "gh r eI s\tf V\tl i:");
result.add("grace-\tland", "gh r eI s\tl { n d");
result.add("grace-\tless", "gh r eI s\tl V s");
result.add("graced", "gh r eI s t");
result.add("grad", "gh r { d");
result.add("grade", "gh r eI d");
result.add("grades", "gh r eI d z");
result.add("grads", "gh r { d z");
result.add("graeme", "gh r eI m");
result.add("graf", "gh r { f");
result.add("graf-\tfi-\tti", "gh r V\tf i:\tt i:");
result.add("graf-\tted", "gh r { f\tt V d");
result.add("graf-\tting", "gh r { f\tt I N");
result.add("graf-\tton", "gh r { f\tt V n");
result.add("graff", "gh r { f");
result.add("graft", "gh r { f t");
result.add("gram-\tling", "gh r { m\tl I N");
result.add("gram-\tma-\tti-\tcal", "gh r V\tm {\tt V\tk V l");
result.add("gram-\tmar", "gh r {\tm @r");
result.add("gram-\tmies", "gh r {\tm i: z");
result.add("gram-\tmy", "gh r {\tm i:");
result.add("gram-\tmys", "gh r {\tm i: z");
result.add("grams", "gh r { m z");
result.add("gran", "gh r { n");
result.add("gran-\tdad", "gh r { n\td { d");
result.add("gran-\tder", "gh r { n\td @r");
result.add("gran-\tdest", "gh r { n\td V s t");
result.add("gran-\tdeur", "gh r { n\td u: r");
result.add("gran-\tdi-\tlo-\tquent", "gh r { n\td I\tl V k\tw V n t");
result.add("gran-\tdi-\tose", "gh r { n\td i:\t@U s");
result.add("gran-\tdis", "gh r { n\td I s");
result.add("gran-\tdun-\tcle", "gh r { n\td V N\tk V l");
result.add("gran-\tger", "gh r eI n\tdZ @r");
result.add("gran-\tgers", "gh r eI n\tdZ @r z");
result.add("gran-\tges", "gh r eI n\tdZ V z");
result.add("gran-\tlund", "gh r { n\tl V n d");
result.add("gran-\tnis", "gh r {\tn I s");
result.add("gran-\tny", "gh r {\tn i:");
result.add("gran-\tted", "gh r { n\tt V d");
result.add("gran-\ttham", "gh r { n\tT V m");
result.add("gran-\tting", "gh r { n\tt I N");
result.add("gran-\ttor", "gh r { n\tt @r");
result.add("gran-\ttors", "gh r { n\tt @r z");
result.add("gran-\tville", "gh r { n\tv I l");
result.add("gran-\tville's", "gh r { n\tv I l z");
result.add("grand", "gh r { n d");
result.add("grand-\tba-\tby", "gh r { n\td b eI\tb i:");
result.add("grand-\tchild", "gh r { n\td tS aI l d");
result.add("grand-\tchild-\tren", "gh r { n\ttS I l\td r V n");
result.add("grand-\tdad-\tdy", "gh r { n\td {\td i:");
result.add("grand-\tdaugh-\tter", "gh r { n\td O:\tt @r");
result.add("grand-\tdaugh-\tters", "gh r { n\td O:\tt @r z");
result.add("grand-\tdaugh-\tter's", "gh r { n\td O:\tt @r z");
result.add("grand-\tfa-\tthe-\tring", "gh r { n\td f Q\tD @r\tI N");
result.add("grand-\tfa-\tther", "gh r { n\td f Q\tD @r");
result.add("grand-\tfa-\tther-\tly", "gh r { n\td f Q\tD @r\tl i:");
result.add("grand-\tfa-\tthered", "gh r { n\td f Q\tD @r d");
result.add("grand-\tfa-\tthers", "gh r { n\td f Q\tD @r z");
result.add("grand-\tfa-\tther's", "gh r { n\td f Q\tD @r z");
result.add("grand-\tkid", "gh r { n\td k I d");
result.add("grand-\tkids", "gh r { n\td k I d z");
result.add("grand-\tly", "gh r { n\td l i:");
result.add("grand-\tma", "gh r {\tm Q");
result.add("grand-\tmas", "gh r { n\td m Q z");
result.add("grand-\tma's", "gh r { n\td m Q z");
result.add("grand-\tmas-\tter", "gh r { n\td m { s\tt @r");
result.add("grand-\tmo-\tther", "gh r { n\td m V\tD @r");
result.add("grand-\tmo-\tther-\tly", "gh r { n\td m V\tD @r\tl i:");
result.add("grand-\tmo-\tthers", "gh r { n\td m V\tD @r z");
result.add("grand-\tmo-\tther's", "gh r { n\td m V\tD @r z");
result.add("grand-\tne-\tphew", "gh r { n\td n e f\tj u:");
result.add("grand-\tpa", "gh r { n\td p Q");
result.add("grand-\tpa-\trent", "gh r { n\td p e@\tV n t");
result.add("grand-\tpa-\trents", "gh r { n\td p e@\tV n t s");
result.add("grand-\tson", "gh r { n\td s V n");
result.add("grand-\tsons", "gh r { n\td s V n z");
result.add("grand-\tson's", "gh r { n\td s V n z");
result.add("grand-\tstan-\tding", "gh r { n\td s t { n\td I N");
result.add("grand-\tstand", "gh r { n\td s t { n d");
result.add("grand-\tview", "gh r { n\td v j u:");
result.add("grande", "gh r { n d");
result.add("grands", "gh r { n d z");
result.add("grand's", "gh r { n d z");
result.add("grange", "gh r eI n dZ");
result.add("grant", "gh r { n t");
result.add("grant-\tland", "gh r { n\tt l V n d");
result.add("grants", "gh r { n t s");
result.add("grant's", "gh r { n t s");
result.add("grap-\tple", "gh r {\tp V l");
result.add("grap-\tpled", "gh r {\tp V l d");
result.add("grap-\tples", "gh r {\tp V l z");
result.add("grape", "gh r eI p");
result.add("grape-\tfruit", "gh r eI p\tf r u: t");
result.add("grape-\tfruits", "gh r eI p\tf r u: t s");
result.add("grape-\tshot", "gh r eI p\tS Q t");
result.add("grape-\tvine", "gh r eI p\tv aI n");
result.add("grape-\tvines", "gh r eI p\tv aI n z");
result.add("grapes", "gh r eI p s");
result.add("graph", "gh r { f");
result.add("graphs", "gh r { f s");
result.add("grapp-\tling", "gh r { p\tl I N");
result.add("gras", "gh r { s");
result.add("gras-\tping", "gh r { s\tp I N");
result.add("gras-\tser", "gh r {\ts @r");
result.add("gras-\tsers", "gh r {\ts @r z");
result.add("gras-\tses", "gh r {\ts V z");
result.add("gras-\tsi", "gh r {\ts i:");
result.add("gras-\tsy", "gh r {\ts i:");
result.add("grasp", "gh r { s p");
result.add("grasped", "gh r { s p t");
result.add("grasps", "gh r { s p s");
result.add("grass", "gh r { s");
result.add("grass-\tgreen", "gh r { s\tg r i: n");
result.add("grass-\thop-\tper", "gh r { s\th Q\tp @r");
result.add("grass-\thop-\tpers", "gh r { s\th Q\tp @r z");
result.add("grass-\tland", "gh r { s\tl { n d");
result.add("grass-\tlands", "gh r { s\tl { n d z");
result.add("grass-\tlike", "gh r { s\tl aI k");
result.add("grass-\tman", "gh r { s\tm V n");
result.add("grass-\troot", "gh r { s\tr u: t");
result.add("grass-\troots", "gh r { s\tr u: t s");
result.add("grasse", "gh r { s");
result.add("grassed", "gh r { s t");
result.add("grat-\ttan", "gh r {\tt V n");
result.add("grat-\tton", "gh r {\tt V n");
result.add("grate", "gh r eI t");
result.add("grate-\tful", "gh r eI t\tf V l");
result.add("grate-\tful-\tly", "gh r eI t\tf V\tl i:");
result.add("grates", "gh r eI t s");
result.add("gratz", "gh r { t s");
result.add("grave", "gh r eI v");
result.add("grave-\tly", "gh r eI v\tl i:");
result.add("grave-\tside", "gh r eI v\ts aI d");
result.add("grave-\tsite", "gh r eI v\ts aI t");
result.add("grave-\ts's", "gh r eI v\tz V z");
result.add("grave-\tstone", "gh r eI v\ts t @U n");
result.add("grave-\tstones", "gh r eI v\ts t @U n z");
result.add("grave-\tyard", "gh r eI v\tj Q@ d");
result.add("grave-\tyards", "gh r eI v\tj Q@ d z");
result.add("graves", "gh r eI v z");
result.add("gray", "gh r eI");
result.add("gray-\tbeard", "gh r eI\tb i: r d");
result.add("gray-\tbeards", "gh r eI\tb i: r d z");
result.add("gray-\tbill", "gh r eI\tb I l");
result.add("gray-\tdon", "gh r eI\td V n");
result.add("gray-\tling", "gh r eI\tl I N");
result.add("gray-\tson", "gh r eI\ts V n");
result.add("grays", "gh r eI z");
result.add("gray's", "gh r eI z");
result.add("graze", "gh r eI z");
result.add("grazed", "gh r eI z d");
result.add("gre-\tcian", "gh r i:\tS V n");
result.add("gre-\tco", "gh r e\tk @U");
result.add("gre-\tdel", "gh r e\td V l");
result.add("gre-\tga", "gh r i:\tg V");
result.add("gre-\tga-\tri-\tous", "gh r V\tg e@\ti:\tV s");
result.add("gre-\tgo", "gh r e\tg @U");
result.add("gre-\tgo-\tri-\tan", "gh r V\tg O@\ti:\tV n");
result.add("gre-\tgo-\tri-\to", "gh r I\tg O@\ti:\t@U");
result.add("gre-\tgo-\try", "gh r e\tg @r\ti:");
result.add("gre-\tgo-\try's", "gh r e\tg @r\ti: z");
result.add("gre-\tgoire", "gh r I g\tw Q@");
result.add("gre-\tgor", "gh r e\tg @r");
result.add("gre-\tna-\tda", "gh r V\tn eI\td V");
result.add("gre-\tnade", "gh r V\tn eI d");
result.add("gre-\tnades", "gh r V\tn eI d z");
result.add("gre-\tni-\ter", "gh r i:\tn i:\t@r");
result.add("gre-\tno-\tble", "gh r V\tn @U\tb V l");
result.add("gre-\tsham", "gh r e\tS V m");
result.add("gre-\tsham's", "gh r e\tS V m z");
result.add("gre-\tta", "gh r i:\tt V");
result.add("gre-\ttal", "gh r e\tt V l");
result.add("gre-\tta's", "gh r i:\tt V z");
result.add("gre-\ttel", "gh r e\tt V l");
result.add("gre-\tthel", "gh r e\tT V l");
result.add("grea-\tser", "gh r i:\ts @r");
result.add("grea-\tsing", "gh r i:\ts I N");
result.add("grea-\tsy", "gh r i:\ts i:");
result.add("grea-\tter", "gh r eI\tt @r");
result.add("grea-\ttest", "gh r eI\tt V s t");
result.add("grease", "gh r i: s");
result.add("grease-\twood", "gh r i: s\tw U d");
result.add("greased", "gh r i: s t");
result.add("great", "gh r eI t");
result.add("great-\tcir-\tcle", "gh r eI t\ts @r\tk V l");
result.add("great-\tly", "gh r eI t\tl i:");
result.add("great-\tness", "gh r eI t\tn V s");
result.add("greats", "gh r eI t s");
result.add("great's", "gh r eI t s");
result.add("greave", "gh r i: v");
result.add("greaves", "gh r i: v z");
result.add("greb", "gh r e b");
result.add("grebe", "gh r i: b");
result.add("gree-\tce's", "gh r i:\ts V z");
result.add("gree-\tdi-\ter", "gh r i:\td i:\t@r");
result.add("gree-\tdi-\test", "gh r i:\td i:\tV s t");
result.add("gree-\tdi-\tly", "gh r i:\td I\tl i:");
result.add("gree-\tdy", "gh r i:\td i:");
result.add("gree-\tley", "gh r i:\tl i:");
result.add("gree-\tley-\tville", "gh r i:\tl i:\tv I l");
result.add("gree-\tly", "gh r i:\tl i:");
result.add("gree-\tna-\tway", "gh r i:\tn V\tw eI");
result.add("gree-\tne-\try", "gh r i:\tn @r\ti:");
result.add("gree-\tner", "gh r i:\tn @r");
result.add("gree-\tnest", "gh r i:\tn V s t");
result.add("gree-\tning", "gh r i:\tn I N");
result.add("gree-\tnish", "gh r i:\tn I S");
result.add("gree-\tnough", "gh r i:\tn V f");
result.add("gree-\tnup", "gh r i:\tn V p");
result.add("gree-\tson", "gh r i:\ts V n");
result.add("gree-\tted", "gh r i:\tt V d");
result.add("gree-\tting", "gh r i:\tt I N");
result.add("gree-\ttings", "gh r i:\tt I N z");
result.add("greece", "gh r i: s");
result.add("greed", "gh r i: d");
result.add("greek", "gh r i: k");
result.add("greeks", "gh r i: k s");
result.add("green", "gh r i: n");
result.add("green-\tback", "gh r i: n\tb { k");
result.add("green-\tbacks", "gh r i: n\tb { k s");
result.add("green-\tback's", "gh r i: n\tb { k s");
result.add("green-\tbelt", "gh r i: n\tb e l t");
result.add("green-\tberg", "gh r i: n\tb @r g");
result.add("green-\tberg's", "gh r i: n\tb @r g z");
result.add("green-\tblatt", "gh r i: n\tb l V t");
result.add("green-\tburg", "gh r i: n\tb @r g");
result.add("green-\tbush", "gh r i: n\tb U S");
result.add("green-\tca-\tstle", "gh r i: n\tk {\ts V l");
result.add("green-\tfeld", "gh r i: n\tf e l d");
result.add("green-\tfield", "gh r i: n\tf i: l d");
result.add("green-\tfield's", "gh r i: n\tf i: l d z");
result.add("green-\thalgh", "gh r i: n\th V l g");
result.add("green-\tham", "gh r i:\tn V m");
result.add("green-\thou-\tses", "gh r i: n\th aU\ts V z");
result.add("green-\thouse", "gh r i: n\th aU s");
result.add("green-\tland", "gh r i: n\tl V n d");
result.add("green-\tleaf", "gh r i: n\tl i: f");
result.add("green-\tlee", "gh r i: n\tl i:");
result.add("green-\tly", "gh r i: n\tl i:");
result.add("green-\tmai-\tler", "gh r i: n\tm eI\tl @r");
result.add("green-\tmail", "gh r i: n\tm eI l");
result.add("green-\tman", "gh r i: n\tm V n");
result.add("green-\tness", "gh r i: n\tn V s");
result.add("green-\tpea-\tce's", "gh r i: n\tp i:\ts V z");
result.add("green-\tpeace", "gh r i: n\tp i: s");
result.add("green-\tslade", "gh r i: n\ts l V d");
result.add("green-\tspan", "gh r i: n\ts p { n");
result.add("green-\tspan's", "gh r i: n\ts p { n z");
result.add("green-\tstein", "gh r i: n\ts t aI n");
result.add("green-\tstone", "gh r i: n\ts t @U n");
result.add("green-\tvale", "gh r i: n\tv eI l");
result.add("green-\tville", "gh r i: n\tv I l");
result.add("green-\twald", "gh r i: n\tw O: l d");
result.add("green-\twald's", "gh r i: n\tw O: l d z");
result.add("green-\tway", "gh r i: n\tw eI");
result.add("green-\twell", "gh r i: n\tw e l");
result.add("green-\twi-\tch's", "gh r e\tn I\ttS V z");
result.add("green-\twich", "gh r e\tn I tS");
result.add("green-\twood", "gh r i: n\tw U d");
result.add("greene", "gh r i: n");
result.add("greened", "gh r i: n d");
result.add("greene's", "gh r i: n z");
result.add("greens", "gh r i: n z");
result.add("green's", "gh r i: n z");
result.add("greens-\tbo-\tro", "gh r i: n\tz b @r\tr @U");
result.add("greens-\tburg", "gh r i: n\tz b @r g");
result.add("greer", "gh r I@");
result.add("greet", "gh r i: t");
result.add("greets", "gh r i: t s");
result.add("grefe", "gh r i: f");
result.add("greff", "gh r e f");
result.add("greg", "gh r e g");
result.add("greg-\tson", "gh r e g\ts V n");
result.add("gregg", "gh r e g");
result.add("greggs", "gh r e g z");
result.add("greg's", "gh r e g z");
result.add("grei-\tner", "gh r aI\tn @r");
result.add("greig", "gh r i: g");
result.add("grein", "gh r eI n");
result.add("grem-\tlin", "gh r e m\tl I n");
result.add("grem-\tlins", "gh r e m\tl I n z");
result.add("gren", "gh r e n");
result.add("gren-\tdel", "gh r e n\td V l");
result.add("gren-\tdel's", "gh r e n\td V l z");
result.add("gren-\tfell", "gh r e n\tf V l");
result.add("gret-\tchen", "gh r e\ttS V n");
result.add("gret-\tna", "gh r e t\tn V");
result.add("gret-\tna's", "gh r e t\tn V z");
result.add("grete", "gh r i: t");
result.add("gretz-\tky", "gh r e t\ts k i:");
result.add("greve", "gh r i: v");
result.add("grew", "gh r u:");
result.add("grey", "gh r eI");
result.add("grey-\thound", "gh r eI\th aU n d");
result.add("grey-\thound's", "gh r eI\th aU n d z");
result.add("grey-\tlag", "gh r eI\tl { g");
result.add("grey-\tstone", "gh r eI s\tt @U n");
result.add("grey's", "gh r eI z");
result.add("gri-\tma-\tces", "gh r I\tm V\ts V z");
result.add("gri-\tma-\tcing", "gh r I\tm V\ts I N");
result.add("gri-\tmace", "gh r I\tm V s");
result.add("gri-\tmaced", "gh r I\tm V s t");
result.add("gri-\tmal-\tdi", "gh r i:\tm Q l\td i:");
result.add("gri-\tmy", "gh r aI\tm i:");
result.add("gri-\tping", "gh r aI\tp I N");
result.add("gri-\tshil-\tda", "gh r I\tS I l\td V");
result.add("gri-\tstle", "gh r I\ts V l");
result.add("gri-\tzel-\tda", "gh r i:\tz e l\td V");
result.add("grib-\tble", "gh r I\tb V l");
result.add("grib-\tbles", "gh r I\tb V l z");
result.add("grice", "gh r aI s");
result.add("grif-\tfin's", "gh r I\tf I n z");
result.add("grif-\tfis", "gh r I\tf I s");
result.add("grif-\tfith", "gh r I\tf I T");
result.add("grif-\tfiths", "gh r I\tf I T s");
result.add("grif-\tfith's", "gh r I\tf I T s");
result.add("grif-\tfon", "gh r I\tf V n");
result.add("grif-\tfy", "gh r I\tf i:");
result.add("griggs", "gh r I g z");
result.add("gril-\tling", "gh r I\tl I N");
result.add("grill", "gh r I l");
result.add("grille", "gh r I l");
result.add("grilled", "gh r I l d");
result.add("grills", "gh r I l z");
result.add("grim", "gh r I m");
result.add("grim-\tly", "gh r I m\tl i:");
result.add("grim-\tmer", "gh r I\tm @r");
result.add("grim-\tmest", "gh r I\tm V s t");
result.add("grim-\tness", "gh r I m\tn V s");
result.add("grim-\tshaw", "gh r I m\tS O:");
result.add("grime", "gh r aI m");
result.add("grimes", "gh r aI m z");
result.add("grimm", "gh r I m");
result.add("grimme", "gh r I m");
result.add("grimm's", "gh r I m z");
result.add("grims-\tley", "gh r I m\tz l i:");
result.add("grin", "gh r I n");
result.add("grin-\tder", "gh r aI n\td @r");
result.add("grin-\tders", "gh r aI n\td @r z");
result.add("grin-\tding", "gh r aI n\td I N");
result.add("grin-\tdle", "gh r I n\td V l");
result.add("grin-\tgo", "gh r I N\tg @U");
result.add("grin-\tgos", "gh r I N\tg @U z");
result.add("grin-\tnell", "gh r I\tn e l");
result.add("grin-\tning", "gh r I\tn I N");
result.add("grinch", "gh r I n tS");
result.add("grind", "gh r aI n d");
result.add("grind-\tlay", "gh r aI n\td l eI");
result.add("grind-\tstone", "gh r aI n\td s t @U n");
result.add("grinds", "gh r aI n d z");
result.add("gring", "gh r I N");
result.add("grinned", "gh r I n d");
result.add("grins", "gh r I n z");
result.add("grip", "gh r I p");
result.add("grip-\tping", "gh r I\tp I N");
result.add("gripe", "gh r aI p");
result.add("griped", "gh r aI p t");
result.add("gripes", "gh r aI p s");
result.add("gripped", "gh r I p t");
result.add("grips", "gh r I p s");
result.add("gris-\tcom", "gh r I s\tk V m");
result.add("gris-\tly", "gh r I z\tl i:");
result.add("gris-\tsom", "gh r I\ts V m");
result.add("gris-\twold", "gh r I s\tw @U l d");
result.add("grise", "gh r aI z");
result.add("grist", "gh r I s t");
result.add("grit", "gh r I t");
result.add("grit-\tter", "gh r I\tt @r");
result.add("grit-\tting", "gh r I\tt I N");
result.add("grit-\tty", "gh r I\tt i:");
result.add("grits", "gh r I t s");
result.add("griz", "gh r I z");
result.add("griz-\tzle", "gh r I\tz V l");
result.add("griz-\tzled", "gh r I\tz V l d");
result.add("grizz-\tlies", "gh r I z\tl i: z");
result.add("grizz-\tly", "gh r I z\tl i:");
result.add("gro", "gh r @U");
result.add("gro-\tbi-\tan", "gh r @U\tb i:\tV n");
result.add("gro-\tce-\tries", "gh r @U\ts @r\ti: z");
result.add("gro-\tce-\try", "gh r @U\ts @r\ti:");
result.add("gro-\tcer", "gh r @U\ts @r");
result.add("gro-\tcers", "gh r @U\ts @r z");
result.add("gro-\tcer's", "gh r @U\ts @r z");
result.add("gro-\tdin", "gh r @U\td I n");
result.add("gro-\tgan", "gh r @U\tg V n");
result.add("gro-\tlier", "gh r @U l\tj @r");
result.add("gro-\tma", "gh r Q\tm V");
result.add("gro-\tmy-\tko", "gh r @U\tm i:\tk @U");
result.add("gro-\tping", "gh r @U\tp I N");
result.add("gro-\ttesque", "gh r @U\tt e s k");
result.add("gro-\ttesque-\tly", "gh r @U\tt e s\tk l i:");
result.add("gro-\tton", "gh r Q\tt V n");
result.add("gro-\tve-\tling", "gh r O:\tv V\tl I N");
result.add("gro-\tvel", "gh r Q\tv V l");
result.add("gro-\tver", "gh r @U\tv @r");
result.add("gro-\tvers", "gh r @U\tv @r z");
result.add("gro-\tver's", "gh r @U\tv @r z");
result.add("gro-\twer", "gh r @U\t@r");
result.add("gro-\twers", "gh r @U\t@r z");
result.add("gro-\twing", "gh r @U\tI N");
result.add("groa-\tning", "gh r @U\tn I N");
result.add("groan", "gh r @U n");
result.add("groaned", "gh r @U n d");
result.add("groans", "gh r @U n z");
result.add("groat", "gh r @U t");
result.add("grobe", "gh r @U b");
result.add("groes-\tbeck", "gh r @U s\tb e k");
result.add("groff", "gh r O: f");
result.add("grog-\tgy", "gh r Q\tg i:");
result.add("groh", "gh r @U");
result.add("groin", "gh r OI n");
result.add("groined", "gh r OI n d");
result.add("groins", "gh r OI n z");
result.add("gron-\tdin", "gh r Q n\td I n");
result.add("gron-\tseth", "gh r Q n\ts e T");
result.add("grone", "gh r @U n");
result.add("groo-\tmer", "gh r u:\tm @r");
result.add("groo-\tmers", "gh r u:\tm @r z");
result.add("groo-\tming", "gh r u:\tm I N");
result.add("groo-\tver", "gh r u:\tv @r");
result.add("groo-\tvi-\test", "gh r u:\tv i:\tV s t");
result.add("groo-\tvy", "gh r u:\tv i:");
result.add("groom", "gh r u: m");
result.add("groome", "gh r u: m");
result.add("groomed", "gh r u: m d");
result.add("grooms", "gh r u: m z");
result.add("groos", "gh r u: z");
result.add("groot", "gh r u: t");
result.add("groove", "gh r u: v");
result.add("grooves", "gh r u: v z");
result.add("grop-\tper", "gh r Q\tp @r");
result.add("grope", "gh r @U p");
result.add("groped", "gh r @U p t");
result.add("gros", "gh r @U s");
result.add("gros-\tbeak", "gh r @U s\tb i: k");
result.add("gros-\tbeaks", "gh r @U s\tb i: k s");
result.add("gros-\tser", "gh r @U\ts @r");
result.add("gros-\tses", "gh r @U\ts V z");
result.add("gros-\tsi", "gh r @U\ts i:");
result.add("gros-\tsing", "gh r @U\ts I N");
result.add("gros-\tso", "gh r @U\ts @U");
result.add("grose", "gh r @U z");
result.add("gross", "gh r @U s");
result.add("gross-\tly", "gh r @U s\tl i:");
result.add("gross-\tman", "gh r @U s\tm V n");
result.add("gross-\tman's", "gh r @U s\tm V n z");
result.add("grosse", "gh r Q s");
result.add("grossed", "gh r @U s t");
result.add("grosve-\tnor", "gh r @U v\tn @r");
result.add("grosz", "gh r @U s");
result.add("grot-\tto", "gh r Q\tt @U");
result.add("grote", "gh r @U t");
result.add("grou-\tcho", "gh r aU\ttS @U");
result.add("grou-\tper", "gh r u:\tp @r");
result.add("grou-\tpers", "gh r u:\tp @r z");
result.add("grou-\tpie", "gh r u:\tp i:");
result.add("grou-\tpies", "gh r u:\tp i: z");
result.add("grou-\tping", "gh r u:\tp I N");
result.add("grou-\tpings", "gh r u:\tp I N z");
result.add("grou-\tses", "gh r aU\ts V z");
result.add("grou-\tsing", "gh r aU\ts I N");
result.add("grou-\tting", "gh r aU\tt I N");
result.add("grouch", "gh r aU tS");
result.add("groun-\tded", "gh r aU n\td V d");
result.add("groun-\tding", "gh r aU n\td I N");
result.add("ground", "gh r aU n d");
result.add("ground-\tbrea-\tking", "gh r aU n\td b r eI\tk I N");
result.add("ground-\thog", "gh r aU n\td h Q g");
result.add("ground-\tless", "gh r aU n\td l V s");
result.add("ground-\tling", "gh r aU n\td l I N");
result.add("ground-\tnut", "gh r aU n\td n V t");
result.add("ground-\tnuts", "gh r aU n\td n V t s");
result.add("ground-\tskee-\tper", "gh r aU n\td s k i:\tp @r");
result.add("ground-\tskee-\tpers", "gh r aU n\td s k i:\tp @r z");
result.add("ground-\tswell", "gh r aU n\td s w e l");
result.add("ground-\twa-\tter", "gh r aU n\td w Q\tt @r");
result.add("ground-\twork", "gh r aU n\td w @r k");
result.add("grounds", "gh r aU n d z");
result.add("group", "gh r u: p");
result.add("group-\tware", "gh r u: p\tw e@");
result.add("grouped", "gh r u: p t");
result.add("groups", "gh r u: p s");
result.add("group's", "gh r u: p s");
result.add("grouse", "gh r aU s");
result.add("groused", "gh r aU s t");
result.add("grout", "gh r aU t");
result.add("grove", "gh r @U v");
result.add("grove-\tman", "gh r @U v\tm V n");
result.add("groves", "gh r @U v z");
result.add("grove's", "gh r @U v z");
result.add("grow", "gh r @U");
result.add("grow-\tling", "gh r @U\tl I N");
result.add("grow-\tnup", "gh r @U\tn V p");
result.add("grow-\tnups", "gh r @U\tn V p s");
result.add("growl", "gh r aU l");
result.add("growled", "gh r aU l d");
result.add("growls", "gh r aU l z");
result.add("grown", "gh r @U n");
result.add("grown-\tup", "gh r @U\tn V p");
result.add("grows", "gh r @U z");
result.add("growth", "gh r @U T");
result.add("growths", "gh r @U T s");
result.add("groz-\tny", "gh r @U z\tn i:");
result.add("groz-\tny's", "gh r @U z\tn i: z");
result.add("gru-\tber", "gh r u:\tb @r");
result.add("gru-\te-\tling", "gh r u:\tV\tl I N");
result.add("gru-\tel", "gh r u:\tV l");
result.add("gru-\tis", "gh r u:\tI z");
result.add("gru-\tne-\twald", "gh r V\tn V\tw O: l d");
result.add("gru-\tnion", "gh r V n\tj V n");
result.add("gru-\tver", "gh r u:\tv @r");
result.add("grub", "gh r V b");
result.add("grub-\tby", "gh r V\tb i:");
result.add("grub-\tman", "gh r V b\tm V n");
result.add("grubb", "gh r V b");
result.add("grubbs", "gh r V b z");
result.add("grube", "gh r u: b");
result.add("grubs", "gh r V b z");
result.add("grud-\tges", "gh r V\tdZ V z");
result.add("grud-\tging", "gh r V\tdZ I N");
result.add("grud-\tging-\tly", "gh r V\tdZ I N\tl i:");
result.add("grudge", "gh r V dZ");
result.add("grue-\tsome", "gh r u:\ts V m");
result.add("gruen-\tberg", "gh r U n\tb @r g");
result.add("gruff", "gh r V f");
result.add("grum", "gh r V m");
result.add("grum-\tb-\tling", "gh r V m\tb V\tl I N");
result.add("grum-\tb-\tlings", "gh r V m\tb V\tl I N z");
result.add("grum-\tble", "gh r V m\tb V l");
result.add("grum-\tbled", "gh r V m\tb V l d");
result.add("grum-\tbles", "gh r V m\tb V l z");
result.add("grum-\tman", "gh r V\tm V n");
result.add("grum-\tman's", "gh r V\tm V n z");
result.add("grum-\tpi-\ter", "gh r V m\tp i:\t@r");
result.add("grum-\tpy", "gh r V m\tp i:");
result.add("grump", "gh r V m p");
result.add("grun", "gh r V n");
result.add("grun-\tberg", "gh r V n\tb @r g");
result.add("grun-\tdy", "gh r V n\td i:");
result.add("grun-\tgy", "gh r V n\tdZ i:");
result.add("grun-\tted", "gh r V n\tt V d");
result.add("grun-\tting", "gh r V n\tt I N");
result.add("grunge", "gh r V n dZ");
result.add("grunt", "gh r V n t");
result.add("grunts", "gh r V n t s");
result.add("grup-\tpo", "gh r u:\tp @U");
result.add("grus-\tsing", "gh r V\ts I N");
result.add("grush", "gh r V S");
result.add("gruss", "gh r V s");
result.add("gry-\tphons", "gh r I\tf V n z");
result.add("g's", "dZ i: z");
result.add("gu", "gh u:");
result.add("gu-\tber-\tna-\tto-\tri-\tal", "gh u:\tb @r\tn V\tt O@\ti:\tV l");
result.add("gu-\tja-\trat", "gh j u:\tdZ @r\t{ t");
result.add("gu-\tla", "gh j u:\tl V");
result.add("gu-\tlag", "gh j u:\tl { g");
result.add("gu-\tlas", "gh j u:\tl V z");
result.add("gu-\tlick", "gh j u:\tl I k");
result.add("gu-\tmi", "gh u:\tm i:");
result.add("gu-\tre-\tvich", "gh j u:\tr I\tv I tS");
result.add("gu-\tri-\tan", "gh j U@\ti:\tV n");
result.add("gu-\tru", "gh u:\tr u:");
result.add("gu-\trus", "gh u:\tr u: z");
result.add("gu-\tru's", "gh u:\tr u: z");
result.add("gu-\tsel-\tla", "gh j u:\ts e\tl V");
result.add("gu-\tsher", "gh V\tS @r");
result.add("gu-\tshers", "gh V\tS @r z");
result.add("gu-\tshes", "gh V\tS V z");
result.add("gu-\tshing", "gh V\tS I N");
result.add("gu-\tten-\tberg", "gh u:\tt V n\tb @r g");
result.add("gu-\ttier-\trez", "gh u: t\tj e@\te z");
result.add("gu-\tya-\tna", "gh aI\tQ\tn V");
result.add("gu-\tyer", "gh aI\t@r");
result.add("gu-\tyon", "gh aI\tV n");
result.add("gu-\tyot", "gh aI\tV t");
result.add("gua-\tca-\tmo-\tle", "gh w Q\tk V\tm @U\tl i:");
result.add("gua-\tda-\tla-\tja-\tra", "gh w Q\td V\tl V\th Q@\tV");
result.add("gua-\tda-\tlupe", "gh w Q\td V\tl u: p");
result.add("gua-\tdal-\tca-\tnal", "gh w Q\td V l\tk V\tn { l");
result.add("gua-\tde-\tloupe", "gh w Q\td V\tl u: p");
result.add("gua-\tna-\tco", "gh w V\tn Q\tk @U");
result.add("gua-\tnine", "gh w Q\tn i: n");
result.add("gua-\tno", "gh w Q\tn @U");
result.add("gua-\tra-\tni", "gh w Q@\tV\tn i:");
result.add("gua-\tran-\ttee", "gh e@\tV n\tt i:");
result.add("gua-\tran-\ttee-\ting", "gh e@\tV n\tt i:\tI N");
result.add("gua-\tran-\tteed", "gh e@\tV n\tt i: d");
result.add("gua-\tran-\ttees", "gh e@\tV n\tt i: z");
result.add("gua-\tran-\ttee's", "gh e@\tV n\tt i: z");
result.add("gua-\tran-\tties", "gh e@\tV n\tt i: z");
result.add("gua-\tran-\ttor", "gh e@\tV n\tt O@");
result.add("gua-\tran-\ttors", "gh e@\tV n\tt O@ z");
result.add("gua-\tran-\tty", "gh e@\tV n\tt i:");
result.add("gua-\tran-\tty's", "gh e@\tV n\tt i: z");
result.add("gua-\tri-\tni", "gh Q@\ti:\tn i:");
result.add("gua-\tri-\tno", "gh Q@\ti:\tn @U");
result.add("gua-\tte-\tma-\tla", "gh w Q\tt V\tm Q\tl V");
result.add("gua-\tte-\tma-\tlan", "gh w Q\tt V\tm Q\tl V n");
result.add("gua-\tte-\tma-\tlans", "gh w Q\tt V\tm Q\tl V n z");
result.add("gua-\tte-\tma-\tla's", "gh w Q\tt V\tm Q\tl V z");
result.add("gua-\tva", "gh w Q\tv V");
result.add("gua-\tvas", "gh w Q\tv V z");
result.add("gua-\tya-\tbe-\tra", "gh w aI\tV\tb e@\tV");
result.add("guam", "gh w Q m");
result.add("guan-\tta-\tna-\tmo", "gh w Q n\tt Q\tn V\tm @U");
result.add("guan-\tta-\tna-\tmo's", "gh w Q n\tt Q\tn V\tm @U z");
result.add("guang-\tzhou", "gh w { N\tz u:");
result.add("guar-\tded", "gh Q@\td V d");
result.add("guar-\tded-\tly", "gh Q@\td V d\tl i:");
result.add("guar-\tdi-\ta", "gh w Q@\td i:\tV");
result.add("guar-\tdi-\tan", "gh Q@\td i:\tV n");
result.add("guar-\tdi-\tan-\tship", "gh Q@\td i:\tV n\tS I p");
result.add("guar-\tdi-\tans", "gh Q@\td i:\tV n z");
result.add("guar-\tdi-\tan's", "gh Q@\td i:\tV n z");
result.add("guar-\tding", "gh Q@\td I N");
result.add("guar-\tne-\tri", "gh Q@\tn e@\ti:");
result.add("guar-\tnie-\tri", "gh Q@\tn I@\ti:");
result.add("guard", "gh Q@ d");
result.add("guard-\tfish", "gh Q@ d\tf I S");
result.add("guard-\trail", "gh Q@ d\tr eI l");
result.add("guard-\trails", "gh Q@ d\tr eI l z");
result.add("guards", "gh Q@ d z");
result.add("guard's", "gh Q@ d z");
result.add("guards-\tman", "gh Q@ d\tz m { n");
result.add("guards-\tmen", "gh Q@ d\tz m I n");
result.add("gub-\tbins", "gh V\tb I n z");
result.add("guc-\tci", "gh u:\ttS i:");
result.add("guck", "gh V k");
result.add("gud-\tgeon", "gh V\tdZ V n");
result.add("gude", "gh j u: d");
result.add("gue", "gh j u:");
result.add("gue-\tril-\tla", "gh @r\tI\tl V");
result.add("gue-\tril-\tlas", "gh @r\tI\tl V z");
result.add("gue-\trin", "gh e@\tI n");
result.add("gue-\tva-\tra", "gh eI\tv Q@\tV");
result.add("guen-\tna", "gh eI\tn V");
result.add("guen-\tther", "gh U n\tT @r");
result.add("guer-\tne-\tville", "gh @r\tn V\tv I l");
result.add("guer-\tra", "gh w e@\tV");
result.add("guer-\trant", "gh e@\tV n t");
result.add("guer-\tre-\tro", "gh @r\te@\t@U");
result.add("guer-\tril-\tla", "gh @r\tI\tl V");
result.add("guer-\tril-\tlas", "gh @r\tI\tl V z");
result.add("guern-\tsey", "gh @r n\tz i:");
result.add("guerre", "gh e@");
result.add("gues-\tser", "gh e\ts @r");
result.add("gues-\tsers", "gh e\ts @r z");
result.add("gues-\tses", "gh e\ts V z");
result.add("gues-\tsing", "gh e\ts I N");
result.add("gues-\tted", "gh e s\tt V d");
result.add("guess", "gh e s");
result.add("guess-\tti-\tmate", "gh e s\tt I\tm V t");
result.add("guess-\tti-\tmates", "gh e s\tt I\tm V t s");
result.add("guess-\twork", "gh e s\tw @r k");
result.add("guessed", "gh e s t");
result.add("guest", "gh e s t");
result.add("guest-\thou-\tses", "gh e s\tt h aU\ts V z");
result.add("guest-\thouse", "gh e s\tt h aU s");
result.add("guests", "gh e s t s");
result.add("guest's", "gh e s t s");
result.add("guf-\tfaw", "gh V\tf O:");
result.add("guf-\tfaws", "gh V\tf O: z");
result.add("guf-\tfey", "gh V\tf i:");
result.add("guf-\tfin", "gh V\tf I n");
result.add("guf-\tfy", "gh V\tf i:");
result.add("guff", "gh V f");
result.add("gug-\tgen-\theim", "gh u:\tg V n\th aI m");
result.add("gug-\tli-\tel-\tmo", "gh u: g\tl i:\te l\tm @U");
result.add("gui-\ta-\tna", "gh i:\tQ\tn V");
result.add("gui-\tdance", "gh aI\td V n s");
result.add("gui-\tded", "gh aI\td V d");
result.add("gui-\tder", "gh aI\td @r");
result.add("gui-\tding", "gh aI\td I N");
result.add("gui-\tdo", "gh w i:\td @U");
result.add("gui-\tdot-\tti", "gh i:\td @U\tt i:");
result.add("gui-\ttar", "gh V\tt Q@");
result.add("guide", "gh aI d");
result.add("guide-\tbook", "gh aI d\tb U k");
result.add("guide-\tbooks", "gh aI d\tb U k s");
result.add("guide-\tline", "gh aI d\tl aI n");
result.add("guide-\tlines", "gh aI d\tl aI n z");
result.add("guide-\tpost", "gh aI d\tp @U s t");
result.add("guide-\tposts", "gh aI d\tp @U s t s");
result.add("guides", "gh aI d z");
result.add("guide's", "gh aI d z");
result.add("guil-\tbert", "gh I l\tb @r t");
result.add("guil-\tder", "gh I l\td @r");
result.add("guil-\tders", "gh I l\td @r z");
result.add("guil-\tder's", "gh I l\td @r z");
result.add("guil-\tford", "gh I l\tf @r d");
result.add("guil-\tford's", "gh I l\tf @r d z");
result.add("guil-\tlaume", "gh I\tl aU m");
result.add("guil-\tle-\tmette", "gh I\tl V\tm e t");
result.add("guil-\tlen", "gh I\tl V n");
result.add("guil-\tler-\tmo", "gh w V l\tj e@\tm @U");
result.add("guild", "gh I l d");
result.add("guild-\thall", "gh I l\td h O: l");
result.add("guilds", "gh I l d z");
result.add("guild's", "gh I l d z");
result.add("guile", "gh aI l");
result.add("guile-\tless", "gh aI l\tl V s");
result.add("guiles", "gh aI l z");
result.add("gul", "gh V l");
result.add("gul-\tlah", "gh V\tl V");
result.add("gul-\tlet", "gh V\tl V t");
result.add("gul-\tley", "gh V\tl i:");
result.add("gul-\tli-\tbi-\tli-\tty", "gh V\tl I\tb I\tl I\tt i:");
result.add("gul-\tli-\tble", "gh V\tl I\tb V l");
result.add("gul-\tli-\tver", "gh V\tl I\tv @r");
result.add("gul-\tlies", "gh V\tl i: z");
result.add("gul-\tlion", "gh V l\tj V n");
result.add("gul-\tly", "gh V\tl i:");
result.add("gul-\tping", "gh V l\tp I N");
result.add("gul-\tyas", "gh u: l\tj V s");
result.add("gulch", "gh V l tS");
result.add("gulf", "gh V l f");
result.add("gulf-\tport", "gh V l\tf p O@ t");
result.add("gulf's", "gh V l f s");
result.add("gull", "gh V l");
result.add("gulls", "gh V l z");
result.add("gull's", "gh V l z");
result.add("gulp", "gh V l p");
result.add("gulped", "gh V l p t");
result.add("gulps", "gh V l p s");
result.add("gum", "gh V m");
result.add("gum-\tbel", "gh V m\tb V l");
result.add("gum-\tbo", "gh V m\tb @U");
result.add("gum-\tmy", "gh V\tm i:");
result.add("gum-\tshoe", "gh V m\tS u:");
result.add("gummed", "gh V m d");
result.add("gump", "gh V m p");
result.add("gump-\ttion", "gh V m\tp S V n");
result.add("gump's", "gh V m p s");
result.add("gums", "gh V m z");
result.add("gun", "gh V n");
result.add("gun-\tboat", "gh V n\tb @U t");
result.add("gun-\tboats", "gh V n\tb @U t s");
result.add("gun-\tcot-\tton", "gh V n\tk Q\tt V n");
result.add("gun-\td-\try", "gh V n\td @r\ti:");
result.add("gun-\tder-\tson", "gh V n\td @r\ts V n");
result.add("gun-\tdog", "gh V n\td O: g");
result.add("gun-\tdy", "gh V n\td i:");
result.add("gun-\tfi-\tre", "gh V n\tf aI\t@r");
result.add("gun-\tfigh-\tter", "gh V n\tf aI\tt @r");
result.add("gun-\tfigh-\tters", "gh V n\tf aI\tt @r z");
result.add("gun-\tfigh-\tter's", "gh V n\tf aI\tt @r z");
result.add("gun-\tfigh-\tting", "gh V n\tf aI\tt I N");
result.add("gun-\tfight", "gh V n\tf aI t");
result.add("gun-\tfights", "gh V n\tf aI t s");
result.add("gun-\tflint", "gh V n\tf l I n t");
result.add("gun-\tman", "gh V n\tm V n");
result.add("gun-\tman's", "gh V n\tm V n z");
result.add("gun-\tmen", "gh V n\tm e n");
result.add("gun-\tnar", "gh V\tn @r");
result.add("gun-\tne-\try", "gh V\tn @r\ti:");
result.add("gun-\tnels", "gh V\tn V l z");
result.add("gun-\tner", "gh V\tn @r");
result.add("gun-\tners", "gh V\tn @r z");
result.add("gun-\tni-\tson", "gh V\tn I\ts V n");
result.add("gun-\tning", "gh V\tn I N");
result.add("gun-\tny", "gh V\tn i:");
result.add("gun-\tny-\tsack", "gh V\tn i:\ts { k");
result.add("gun-\tny-\tsacks", "gh V\tn i:\ts { k s");
result.add("gun-\tpoint", "gh V n\tp OI n t");
result.add("gun-\tpow-\tder", "gh V n\tp aU\td @r");
result.add("gun-\trun-\tner", "gh V n\tr V\tn @r");
result.add("gun-\tship", "gh V n\tS I p");
result.add("gun-\tships", "gh V n\tS I p s");
result.add("gun-\tshot", "gh V n\tS Q t");
result.add("gun-\tshots", "gh V n\tS Q t s");
result.add("gun-\tslin-\tger", "gh V n\ts l I\tN @r");
result.add("gun-\tslin-\tgers", "gh V n\ts l I\tN @r z");
result.add("gun-\tter", "gh V n\tt @r");
result.add("gun-\tther", "gh V n\tT @r");
result.add("gun-\ttur", "gh V n\tt @r");
result.add("gung", "gh V N");
result.add("gunn", "gh V n");
result.add("gunned", "gh V n d");
result.add("gunn's", "gh V n z");
result.add("guns", "gh V n z");
result.add("gun's", "gh V n z");
result.add("gup-\tpies", "gh V\tp i: z");
result.add("gup-\tpy", "gh V\tp i:");
result.add("gup-\tta", "gh U p\tt V");
result.add("gur-\tg-\tling", "gh @r\tg V\tl I N");
result.add("gur-\tgle", "gh @r\tg V l");
result.add("gur-\tley", "gh @r\tl i:");
result.add("gur-\tnards", "gh @r\tn @r d z");
result.add("gur-\tnee", "gh @r\tn i:");
result.add("gur-\tney", "gh @r\tn i:");
result.add("gur-\tney's", "gh @r\tn i: z");
result.add("gur-\try", "gh @r\ti:");
result.add("gurr", "gh @r");
result.add("gurt-\tner", "gh @r t\tn @r");
result.add("gus", "gh V s");
result.add("gus-\tsie", "gh V\ts i:");
result.add("gus-\tsied", "gh V\ts i: d");
result.add("gus-\tsy", "gh V\ts i:");
result.add("gus-\tta-\tve", "gh u: s\tt Q\tv i:");
result.add("gus-\tta-\tvo", "gh V s\tt Q\tv @U");
result.add("gus-\ttaf", "gh u: s\tt Q f");
result.add("gus-\ttaf-\tson", "gh V s\tt V f\ts V n");
result.add("gus-\ttafs-\tson", "gh u: s\tt Q f\ts V n");
result.add("gus-\ttav", "gh U s\tt Q f");
result.add("gus-\tted", "gh V s\tt V d");
result.add("gus-\ttin", "gh V s\tt I n");
result.add("gus-\tting", "gh V s\tt I N");
result.add("gus-\tto", "gh V s\tt @U");
result.add("gus-\tton", "gh V s\tt V n");
result.add("gus-\ttus", "gh V s\tt V s");
result.add("gus-\tty", "gh V s\tt i:");
result.add("gush", "gh V S");
result.add("gushed", "gh V S t");
result.add("guss", "gh V s");
result.add("guss-\tman", "gh V s\tm V n");
result.add("gust", "gh V s t");
result.add("gusts", "gh V s t s");
result.add("gut", "gh V t");
result.add("gut-\tless", "gh V t\tl e s");
result.add("gut-\tsy", "gh V t\ts i:");
result.add("gut-\tte-\tring", "gh V\tt @r\tI N");
result.add("gut-\tted", "gh V\tt V d");
result.add("gut-\tten-\tberg", "gh V\tt V n\tb @r g");
result.add("gut-\tter", "gh V\tt @r");
result.add("gut-\tter-\tman", "gh V\tt @r\tm V n");
result.add("gut-\ttered", "gh V\tt @r d");
result.add("gut-\tters", "gh V\tt @r z");
result.add("gut-\tting", "gh V\tt I N");
result.add("gut-\ttu-\tral", "gh V\tt @r\tV l");
result.add("guth-\trie", "gh V T\tr i:");
result.add("guth-\trie's", "gh V T\tr i: z");
result.add("guts", "gh V t s");
result.add("gutt", "gh V t");
result.add("guy", "gh aI");
result.add("guy-\tmon", "gh aI\tm V n");
result.add("guy-\tton", "gh aI\tt V n");
result.add("guys", "gh aI z");
result.add("guy's", "gh aI z");
result.add("guz-\tman", "gh V z\tm V n");
result.add("guz-\tz-\tlers", "gh V\tz V\tl @r z");
result.add("guz-\tz-\tling", "gh V\tz V\tl I N");
result.add("guz-\tzle", "gh V\tz V l");
result.add("guz-\tzles", "gh V\tz V l z");
result.add("guzz-\tler", "gh V z\tl @r");
result.add("gwe-\tnore", "gh w e\tn @r");
result.add("gwen", "gh w e n");
result.add("gwen-\tda", "gh w e n\td V");
result.add("gwen-\tdo-\tlyn", "gh w e n\td V\tl V n");
result.add("gwen-\tnie", "gh w e\tn i:");
result.add("gwin", "gh w I n");
result.add("gwin-\tner", "gh w I\tn @r");
result.add("gwin-\tnett", "gh w I\tn e t");
result.add("gwinn", "gh w I n");
result.add("gwyn", "gh w I n");
result.add("gwynn", "gh w I n");
result.add("gwynne", "gh w I n");
result.add("gy-\tne-\tco-\tlo-\tgi-\tcal", "gh aI\tn V\tk V\tl Q\tdZ I\tk V l");
result.add("gy-\tne-\tco-\tlo-\tgic", "gh aI\tn V\tk V\tl Q\tdZ I k");
result.add("gy-\tne-\tco-\tlo-\tgist", "gh aI\tn V\tk Q\tl V\tdZ V s t");
result.add("gy-\tne-\tco-\tlo-\tgists", "gh aI\tn V\tk Q\tl V\tdZ V s t s");
result.add("gy-\tne-\tco-\tlo-\tgy", "gh aI\tn V\tk Q\tl V\tdZ i:");
result.add("gy-\tra-\tted", "dZ aI\tr eI\tt V d");
result.add("gy-\tra-\tting", "dZ aI\tr eI\tt I N");
result.add("gy-\tra-\ttion", "dZ aI\tr eI\tS V n");
result.add("gy-\tra-\ttions", "dZ aI\tr eI\tS V n z");
result.add("gy-\trate", "dZ aI\tr eI t");
result.add("gy-\tro", "dZ aI\tr @U");
result.add("gy-\tro-\tcom-\tpass", "dZ aI\tr @U\tk V m\tp V s");
result.add("gy-\tro-\tpi-\tlot", "dZ aI\tr @U\tp aI\tl V t");
result.add("gy-\tros", "dZ aI\tr @U z");
result.add("gy-\tros-\tco-\tpic", "dZ aI\tr V s\tk Q\tp I k");
result.add("gy-\tros-\tcope", "dZ aI\tr V s\tk @U p");
result.add("gy-\tros-\tcopes", "dZ aI\tr V s\tk @U p s");
result.add("gym", "dZ I m");
result.add("gym-\tna-\tsi-\ta", "dZ I m\tn eI\tz i:\tV");
result.add("gym-\tna-\tsi-\tum", "dZ I m\tn eI\tz i:\tV m");
result.add("gym-\tna-\tsi-\tums", "dZ I m\tn eI\tz i:\tV m z");
result.add("gym-\tnas-\ttic", "dZ I m\tn { s\tt I k");
result.add("gym-\tnas-\ttics", "dZ I m\tn { s\tt I k s");
result.add("gym-\tnast", "dZ I m\tn V s t");
result.add("gym-\tnasts", "dZ I m\tn { s t s");
result.add("gyms", "dZ I m z");
result.add("gym's", "dZ I m z");
result.add("gyn", "gh I n");
result.add("gyp", "dZ I p");
result.add("gyp-\tsies", "dZ I p\ts i: z");
result.add("gyp-\tsum", "dZ I p\ts V m");
result.add("gyp-\tsum's", "dZ I p\ts V m z");
result.add("gyp-\tsy", "dZ I p\ts i:");
result.add("gypped", "dZ I p t");
result.add("h", "eI tS");
result.add("h-\tf-\td-\tf", "eI\ttS e f\td i:\te f");
result.add("h-\tg-\th", "eI tS\tdZ i:\teI tS");
result.add("h-\tjerpe", "h V\tdZ @r p");
result.add("h'-\ts", "eI\ttS V z");
result.add("h-\tya-\tcin-\ttha", "h aI\tV\ts I n\tT V");
result.add("h-\tya-\tcin-\tthi-\ta", "h aI\tV\ts I n\tT i:\tV");
result.add("h-\tya-\tcin-\tthie", "h aI\tV\ts I n\tT i:");
result.add("h-\tya-\tcinth", "h aI\tV\ts I n T");
result.add("h-\tya-\tcinthe", "h aI\tV\ts I n T");
result.add("h-\tya-\tcinths", "h aI\tV\ts I n T s");
result.add("h-\tya-\tdes", "h aI\tV\td i: z");
result.add("h-\tya-\tlu-\tro-\tnic", "h aI\tV\tl @r\tQ\tn I k");
result.add("h-\tyams", "h aI\tV m z");
result.add("h-\tyan-\tni-\tsport", "h aI\t{\tn I s\tp O@ t");
result.add("h-\tyan-\tnis", "h aI\t{\tn I s");
result.add("h-\tyatt", "h aI\tV t");
result.add("h-\tyatt's", "h aI\tV t s");
result.add("h.", "eI tS");
result.add("ha", "h Q");
result.add("ha-\tbe-\tas", "h {\tb i:\tV s");
result.add("ha-\tber", "h eI\tb @r");
result.add("ha-\tber-\tda-\tshe-\try", "h {\tb @r\td {\tS @r\ti:");
result.add("ha-\tber-\tman", "h eI\tb @r\tm V n");
result.add("ha-\tbi-\tta-\tble", "h {\tb I\tt V\tb V l");
result.add("ha-\tbi-\tta-\ttion", "h {\tb I\tt eI\tS V n");
result.add("ha-\tbi-\ttat", "h {\tb I\tt { t");
result.add("ha-\tbi-\ttats", "h {\tb I\tt { t s");
result.add("ha-\tbi-\ttat's", "h {\tb I\tt { t s");
result.add("ha-\tbi-\ttu-\tal", "h V\tb I\ttS u:\tV l");
result.add("ha-\tbi-\ttu-\tal-\tly", "h V\tb I\ttS u:\tV\tl i:");
result.add("ha-\tbi-\ttues", "h {\tb I\ttS u: z");
result.add("ha-\tbib", "h V\tb i: b");
result.add("ha-\tbit", "h {\tb I t");
result.add("ha-\tbits", "h {\tb I t s");
result.add("ha-\tble", "h eI\tb V l");
result.add("ha-\tci-\ten-\tda", "h {\ts i:\te n\td V");
result.add("ha-\tda-\tway", "h Q\td V\tw eI");
result.add("ha-\tden", "h eI\td V n");
result.add("ha-\tga-\tman", "h {\tg V\tm V n");
result.add("ha-\tgan", "h eI\tg V n");
result.add("ha-\tgar", "h eI\tg Q@");
result.add("ha-\tgen", "h eI\tg V n");
result.add("ha-\tger", "h eI\tg @r");
result.add("ha-\tger-\tman", "h eI\tg @r\tm V n");
result.add("ha-\tger-\tstown", "h eI\tg @r z\tt aU n");
result.add("ha-\tgi-\to-\tgra-\tphy", "h {\tg i:\tQ g\tr V\tf i:");
result.add("ha-\tgood", "h {\tg U d");
result.add("ha-\tkan", "h eI\tk V n");
result.add("ha-\tkim", "h Q\tk i: m");
result.add("ha-\tkim's", "h Q\tk i: m z");
result.add("ha-\tkon", "h {\tk V n");
result.add("ha-\tlas", "h Q\tl V z");
result.add("ha-\tley", "h eI\tl i:");
result.add("ha-\tley's", "h eI\tl i: z");
result.add("ha-\tli-\tbut", "h {\tl I\tb V t");
result.add("ha-\tli-\tfax", "h {\tl I\tf { k s");
result.add("ha-\tli-\tma", "h V\tl i:\tm V");
result.add("ha-\tli-\tme-\tda", "h Q\tl i:\tm eI\td V");
result.add("ha-\tlide", "h {\tl aI d");
result.add("ha-\tlite", "h {\tl aI t");
result.add("ha-\tlo", "h eI\tl @U");
result.add("ha-\tlo-\tge-\tna-\tted", "h {\tl V\tdZ V\tn eI\tt V d");
result.add("ha-\tlo-\tge-\tnate", "h {\tl V\tdZ V\tn eI t");
result.add("ha-\tlo-\tgen", "h {\tl V\tdZ V n");
result.add("ha-\tlo-\tphy-\ttic", "h {\tl V\tf I\tt I k");
result.add("ha-\tlon", "h eI\tl Q n");
result.add("ha-\tlos", "h eI\tl @U z");
result.add("ha-\tm-\tler", "h {\tm V\tl @r");
result.add("ha-\tma", "h Q\tm V");
result.add("ha-\tma-\tda", "h Q\tm Q\td V");
result.add("ha-\tmal", "h eI\tm V l");
result.add("ha-\tman", "h eI\tm V n");
result.add("ha-\tmann", "h Q\tm V n");
result.add("ha-\tmas", "h Q\tm Q s");
result.add("ha-\tmi-\ttic", "h {\tm I\tt I k");
result.add("ha-\tmil-\tton", "h {\tm I l\tt V n");
result.add("ha-\tmil-\tton's", "h {\tm I l\tt V n z");
result.add("ha-\tmish", "h {\tm I S");
result.add("ha-\tmon", "h {\tm V n");
result.add("ha-\tna", "h {\tn V");
result.add("ha-\tnan", "h eI\tn V n");
result.add("ha-\tney", "h eI\tn i:");
result.add("ha-\tni", "h {\tn i:");
result.add("ha-\tno", "h Q\tn @U");
result.add("ha-\tno-\tve-\tri-\tan", "h {\tn @U\tv I@\ti:\tV n");
result.add("ha-\tno-\tver", "h {\tn @U\tv @r");
result.add("ha-\tno-\tver's", "h {\tn @U\tv @r z");
result.add("ha-\tnoi", "h {\tn OI");
result.add("ha-\tnoi's", "h V\tn OI z");
result.add("ha-\tnuk-\tkahs", "h Q\tn V\tk V z");
result.add("ha-\tnuk-\tkah's", "h Q\tn V\tk V z");
result.add("ha-\tnus", "h eI\tn V s");
result.add("ha-\tra", "h e@\tV");
result.add("ha-\tra-\than", "h {\tr V\th { n");
result.add("ha-\tra-\tki-\tri", "h Q@\tI\tk I@\ti:");
result.add("ha-\tra-\tre", "h @r\tQ@\ti:");
result.add("ha-\tral-\tson", "h {\tr V l\ts V n");
result.add("ha-\trald", "h Q@\tV l d");
result.add("ha-\trangu-\ting", "h @r\t{\tN I N");
result.add("ha-\trangue", "h @r\t{ N");
result.add("ha-\trangued", "h @r\t{ N d");
result.add("ha-\trangues", "h @r\t{ N z");
result.add("ha-\tras-\tser", "h @r\t{\ts @r");
result.add("ha-\tras-\tsers", "h @r\t{\ts @r z");
result.add("ha-\tras-\tsing", "h @r\t{\ts I N");
result.add("ha-\trass", "h @r\t{ s");
result.add("ha-\trass-\tment", "h @r\t{ s\tm V n t");
result.add("ha-\trassed", "h @r\t{ s t");
result.add("ha-\trem", "h e@\tV m");
result.add("ha-\tri", "h Q@\ti:");
result.add("ha-\tring", "h e@\tI N");
result.add("ha-\tro", "h Q@\t@U");
result.add("ha-\trold", "h e@\tV l d");
result.add("ha-\trold-\tson", "h {\tr @U l\td s V n");
result.add("ha-\trold's", "h e@\tV l d z");
result.add("ha-\tsn't", "h {\tz V n t");
result.add("ha-\tste-\tning", "h eI\ts V\tn I N");
result.add("ha-\tsten", "h eI\ts V n");
result.add("ha-\tstened", "h eI\ts V n d");
result.add("ha-\tstens", "h eI\ts V n z");
result.add("ha-\tted", "h eI\tt V d");
result.add("ha-\tter", "h eI\tt @r");
result.add("ha-\tters", "h eI\tt @r z");
result.add("ha-\ttha-\tway", "h {\tT V\tw eI");
result.add("ha-\ttha-\tway's", "h {\tT V\tw eI z");
result.add("ha-\tthorne", "h {\tT @r n");
result.add("ha-\tting", "h eI\tt I N");
result.add("ha-\tva-\tna", "h V\tv {\tn V");
result.add("ha-\tva-\tna's", "h V\tv {\tn V z");
result.add("ha-\tvard", "h {\tv @r d");
result.add("ha-\tve-\tner", "h {\tv i:\tn @r");
result.add("ha-\tvel", "h {\tv V l");
result.add("ha-\tven", "h eI\tv V n");
result.add("ha-\tvens", "h eI\tv V n z");
result.add("ha-\tven't", "h {\tv V n t");
result.add("ha-\tver", "h e\tv @r");
result.add("ha-\tver-\tford", "h {\tv @r\tf @r d");
result.add("ha-\tvi-\tland", "h eI\tv i:\tl V n d");
result.add("ha-\tvil-\tland", "h {\tv V\tl V n d");
result.add("ha-\tving", "h {\tv I N");
result.add("ha-\tvoc", "h {\tv V k");
result.add("ha-\twa-\tii", "h V\tw aI\ti:");
result.add("ha-\twa-\tii's", "h V\tw aI\ti: z");
result.add("ha-\twaii-\tan", "h V\tw aI\tV n");
result.add("ha-\twaii-\tans", "h V\tw aI\tV n z");
result.add("ha-\twing", "h O:\tI N");
result.add("ha-\tworth", "h {\tw @r T");
result.add("ha-\tya-\tshi", "h Q\tj Q\tS i:");
result.add("ha-\tyer", "h eI\t@r");
result.add("ha-\tzan", "h eI\tz V n");
result.add("ha-\tzar-\tdous", "h {\tz @r\td V s");
result.add("ha-\tzard", "h {\tz @r d");
result.add("ha-\tzards", "h {\tz @r d z");
result.add("ha-\tzel", "h eI\tz V l");
result.add("ha-\tzel-\tnut", "h eI\tz V l\tn V t");
result.add("ha-\tzel-\ttine", "h eI\tz V l\tt aI n");
result.add("ha-\tzel-\tton", "h eI\tz V l\tt V n");
result.add("ha-\tzel-\twood", "h eI\tz V l\tw U d");
result.add("ha-\tzel-\twood's", "h eI\tz V l\tw U d z");
result.add("ha-\tzen", "h eI\tz V n");
result.add("ha-\tzing", "h eI\tz I N");
result.add("ha-\tzle", "h eI\tz V l");
result.add("ha-\tzle-\tton", "h eI\tz V l\tt V n");
result.add("ha-\tzy", "h eI\tz i:");
result.add("haab", "h Q b");
result.add("haaf", "h Q f");
result.add("haag", "h Q g");
result.add("haak", "h Q k");
result.add("haar", "h Q@");
result.add("haas", "h Q s");
result.add("haase", "h Q s");
result.add("habs-\tburg", "h { p\ts b @r g");
result.add("hac-\tk-\tler", "h {\tk V\tl @r");
result.add("hac-\tkat-\thorn", "h {\tk V\tT @r n");
result.add("hac-\tken-\tsack", "h {\tk V n\ts { k");
result.add("hac-\tker", "h {\tk @r");
result.add("hac-\tkers", "h {\tk @r z");
result.add("hac-\tker's", "h {\tk @r z");
result.add("hac-\tkett", "h {\tk e t");
result.add("hac-\tking", "h {\tk I N");
result.add("hac-\tkle", "h {\tk V l");
result.add("hac-\tkles", "h {\tk V l z");
result.add("hach", "h { tS");
result.add("hack", "h { k");
result.add("hack-\tber-\try", "h { k\tb e@\ti:");
result.add("hack-\tma-\ttack", "h { k\tm V\tt { k");
result.add("hack-\tman", "h { k\tm { n");
result.add("hack-\tney", "h { k\tn i:");
result.add("hack-\tneyed", "h { k\tn i: d");
result.add("hack-\tsaw", "h { k\ts O:");
result.add("hack-\tstaff", "h { k\ts t { f");
result.add("hacked", "h { k t");
result.add("hacks", "h { k s");
result.add("had", "h { d");
result.add("had-\tdad", "h {\td V d");
result.add("had-\tden", "h {\td V n");
result.add("had-\tdock", "h {\td V k");
result.add("had-\tdon", "h {\td V n");
result.add("hade", "h eI d");
result.add("haen", "h i: n");
result.add("haf-\tni-\ta", "h { f\tn i:\tV");
result.add("haf-\tni-\tum", "h { f\tn i:\tV m");
result.add("haff", "h { f");
result.add("haft", "h { f t");
result.add("hafts", "h { f t s");
result.add("haft's", "h { f t s");
result.add("hag", "h { g");
result.add("hag-\tfish", "h { g\tf I S");
result.add("hag-\tg-\tling", "h {\tg V\tl I N");
result.add("hag-\tga-\tdah", "h V\tg V\td V");
result.add("hag-\tgar", "h {\tg @r");
result.add("hag-\tgard", "h {\tg @r d");
result.add("hag-\tger-\tty", "h {\tg @r\tt i:");
result.add("hag-\tgle", "h {\tg V l");
result.add("hag-\tgled", "h {\tg V l d");
result.add("hagg", "h { g");
result.add("hagst-\trom", "h { g\ts t r V m");
result.add("hague", "h eI g");
result.add("hah", "h Q");
result.add("hahn", "h Q n");
result.add("hahs", "h Q s");
result.add("hai-\tdee", "h eI\td i:");
result.add("hai-\tfa", "h aI\tf V");
result.add("hai-\tku", "h aI\tk u:");
result.add("hai-\tley", "h eI\tl i:");
result.add("hai-\tling", "h eI\tl I N");
result.add("hai-\tnan", "h eI\tn V n");
result.add("hai-\tri-\tness", "h e@\ti:\tn V s");
result.add("hai-\try", "h e@\ti:");
result.add("hai-\tti", "h eI\tt i:");
result.add("hai-\ttian", "h eI\tS V n");
result.add("hai-\ttians", "h eI\tS V n z");
result.add("hai-\tti's", "h eI\tt i: z");
result.add("haig", "h eI g");
result.add("haig-\tler", "h eI g\tl @r");
result.add("haig's", "h eI g z");
result.add("haik", "h eI k");
result.add("hail", "h eI l");
result.add("hail-\tstone", "h eI l\ts t @U n");
result.add("hail-\tstones", "h eI l\ts t @U n z");
result.add("hail-\tstorm", "h eI l\ts t O@ m");
result.add("haile", "h eI l");
result.add("hailed", "h eI l d");
result.add("hailes", "h eI l z");
result.add("hails", "h eI l z");
result.add("haim", "h aI m");
result.add("haimes", "h eI m z");
result.add("hain", "h eI n");
result.add("haines", "h eI n z");
result.add("hains", "h eI n z");
result.add("hair", "h e@");
result.add("hair-\tcut", "h e@\tk V t");
result.add("hair-\tcuts", "h e@\tk V t s");
result.add("hair-\tdo", "h e@\td u:");
result.add("hair-\tdos", "h e@\td u: z");
result.add("hair-\tdres-\tser", "h e@ d\tr e\ts @r");
result.add("hair-\tdres-\tsers", "h e@ d\tr e\ts @r z");
result.add("hair-\tdres-\tsing", "h e@ d\tr e\ts I N");
result.add("hair-\tless", "h e@\tl V s");
result.add("hair-\tline", "h e@\tl aI n");
result.add("hair-\tspray", "h e@ s\tp r eI");
result.add("hair-\tstyle", "h e@ s\tt aI l");
result.add("haire", "h e@");
result.add("haired", "h e@ d");
result.add("hairs", "h e@ z");
result.add("hair's", "h e@ z");
result.add("hait", "h eI t");
result.add("haith", "h eI T");
result.add("hajj", "h { dZ");
result.add("hake", "h eI k");
result.add("hakes", "h eI k s");
result.add("hal", "h { l");
result.add("hal-\tbert", "h { l\tb @r t");
result.add("hal-\tbur", "h { l\tb @r");
result.add("hal-\tci-\ton", "h { l\ts i:\tV n");
result.add("hal-\tcy-\ton", "h { l\ts i:\tV n");
result.add("hal-\tcy-\tone", "h { l\ts i:\t@U n");
result.add("hal-\tdan", "h { l\td V n");
result.add("hal-\tden", "h O: l\td V n");
result.add("hal-\tford", "h {\tf @r d");
result.add("hal-\tla", "h {\tl V");
result.add("hal-\tlam", "h {\tl V m");
result.add("hal-\tlan-\tdale", "h {\tl V n\td eI l");
result.add("hal-\tle-\tlu-\tjah", "h {\tl V\tl u:\tj V");
result.add("hal-\tleck", "h {\tl I k");
result.add("hal-\tler", "h O:\tl @r");
result.add("hal-\tlett", "h {\tl e t");
result.add("hal-\tley", "h {\tl i:");
result.add("hal-\tli-\tbur-\tton", "h {\tl I\tb @r\tt V n");
result.add("hal-\tli-\tday", "h {\tl I\td eI");
result.add("hal-\tli-\tnan", "h {\tl I\tn V n");
result.add("hal-\tlie", "h O:\tl i:");
result.add("hal-\tling", "h O:\tl I N");
result.add("hal-\tlo-\tween", "h {\tl V\tw i: n");
result.add("hal-\tlo-\twe'en", "h {\tl V\tw i: n");
result.add("hal-\tlo-\twell", "h {\tl V\tw e l");
result.add("hal-\tlock", "h {\tl V k");
result.add("hal-\tlow", "h {\tl @U");
result.add("hal-\tlowed", "h {\tl @U d");
result.add("hal-\tlows", "h {\tl @U z");
result.add("hal-\tlu-\tci-\tna-\tted", "h V\tl u:\ts V\tn eI\tt V d");
result.add("hal-\tlu-\tci-\tna-\tting", "h V\tl u:\ts V\tn eI\tt I N");
result.add("hal-\tlu-\tci-\tna-\ttion", "h V\tl u:\ts V\tn eI\tS V n");
result.add("hal-\tlu-\tci-\tna-\ttions", "h V\tl u:\ts V\tn eI\tS V n z");
result.add("hal-\tlu-\tci-\tna-\tto-\try", "h V\tl u:\ts V\tn V\tt O@\ti:");
result.add("hal-\tlu-\tci-\tnate", "h V\tl u:\ts V\tn eI t");
result.add("hal-\tlu-\tci-\tnates", "h V\tl u:\ts V\tn eI t s");
result.add("hal-\tlu-\tci-\tno-\tge-\tnic", "h V\tl u:\ts V\tn V\tdZ e\tn I k");
result.add("hal-\tly", "h {\tl i:");
result.add("hal-\tper", "h { l\tp @r");
result.add("hal-\tpern", "h { l\tp @r n");
result.add("hal-\tsey", "h { l\ts i:");
result.add("hal-\tstead", "h { l\ts t e d");
result.add("hal-\tsted", "h { l\ts t V d");
result.add("hal-\tted", "h O: l\tt V d");
result.add("hal-\tter", "h O: l\tt @r");
result.add("hal-\tters", "h O: l\tt @r z");
result.add("hal-\tting", "h O: l\tt I N");
result.add("hal-\tting-\tly", "h O: l\tt I N\tl i:");
result.add("hal-\ttom", "h { l\tt V m");
result.add("hal-\tver-\tson", "h { l\tv @r\ts V n");
result.add("hal-\tving", "h {\tv I N");
result.add("halde-\tman", "h Q l\td m V n");
result.add("halde-\tman's", "h Q l\td m V n z");
result.add("hale", "h eI l");
result.add("hales", "h eI l z");
result.add("hale's", "h eI l z");
result.add("half", "h { f");
result.add("half-\ta-\tcre", "h {\tf eI\tk @r");
result.add("half-\tback", "h { f\tb { k");
result.add("half-\tdan", "h { l\tf d V n");
result.add("half-\thear-\tted", "h { f\th Q@\tt V d");
result.add("half-\tman", "h { f\tm V n");
result.add("half-\ttime", "h { f\tt aI m");
result.add("half-\ttone", "h { f\tt @U n");
result.add("half-\tway", "h { f\tw eI");
result.add("half's", "h { f s");
result.add("hall", "h O: l");
result.add("hall-\tman", "h O: l\tm V n");
result.add("hall-\tmark", "h Q l\tm Q@ k");
result.add("hall-\tmarks", "h O: l\tm Q@ k s");
result.add("hall-\tmark's", "h O: l\tm Q@ k s");
result.add("hall-\tway", "h O: l\tw eI");
result.add("hall-\tways", "h O: l\tw eI z");
result.add("hall-\twood", "h O: l\tw U d");
result.add("halle", "h { l");
result.add("halls", "h O: l z");
result.add("hall's", "h O: l z");
result.add("halm", "h Q m");
result.add("halm-\tstad", "h Q l\tm s t { d");
result.add("hal's", "h { l z");
result.add("halt", "h O: l t");
result.add("halts", "h O: l t s");
result.add("halve", "h { v");
result.add("halved", "h { v d");
result.add("halves", "h { v z");
result.add("ham", "h { m");
result.add("ham-\tlet", "h { m\tl V t");
result.add("ham-\tlets", "h { m\tl V t s");
result.add("ham-\tlin", "h { m\tl I N");
result.add("ham-\tme-\tring", "h {\tm @r\tI N");
result.add("ham-\tmel", "h {\tm V l");
result.add("ham-\tmer", "h {\tm @r");
result.add("ham-\tmer-\tlock", "h {\tm @r\tl Q k");
result.add("ham-\tmer-\tman", "h {\tm @r\tm V n");
result.add("ham-\tmer-\tsmith", "h {\tm @r s\tm I T");
result.add("ham-\tmer-\tstein", "h {\tm @r s\tt i: n");
result.add("ham-\tmer-\tstein's", "h {\tm @r s\tt i: n z");
result.add("ham-\tmered", "h {\tm @r d");
result.add("ham-\tmers", "h {\tm @r z");
result.add("ham-\tmer's", "h {\tm @r z");
result.add("ham-\tmett", "h {\tm e t");
result.add("ham-\tmock", "h {\tm V k");
result.add("ham-\tmocks", "h {\tm V k s");
result.add("ham-\tmon", "h {\tm V n");
result.add("ham-\tmond", "h {\tm V n d");
result.add("ham-\tner", "h { m\tn @r");
result.add("ham-\tpe-\tring", "h { m\tp @r\tI N");
result.add("ham-\tper", "h { m\tp @r");
result.add("ham-\tpered", "h { m\tp @r d");
result.add("ham-\tpers", "h { m\tp @r z");
result.add("ham-\tster", "h { m\ts t @r");
result.add("ham-\tsters", "h { m\ts t @r z");
result.add("ham-\ttra-\tmck", "h { m\tt r {\tm I k");
result.add("hamm", "h { m");
result.add("hamp-\tshi-\trites", "h { m\tp S @r\taI t s");
result.add("hamp-\tshire", "h { m\tp S @r");
result.add("hamp-\tshire's", "h { m\tp S @r z");
result.add("hamp-\tstead", "h { m\tp s t e d");
result.add("hamp-\tton", "h { m\tp t V n");
result.add("hamp-\tton's", "h { m\tp t V n z");
result.add("hams", "h { m z");
result.add("hamst-\tring", "h { m\ts t r I N");
result.add("hamst-\trings", "h { m\ts t r I N z");
result.add("hamst-\trung", "h { m\ts t r V N");
result.add("han", "h Q n");
result.add("han-\tbu-\try", "h { n\tb e@\ti:");
result.add("han-\tcock", "h { n\tk Q k");
result.add("han-\tcock's", "h { n\tk Q k s");
result.add("han-\tded", "h { n\td V d");
result.add("han-\tded-\tly", "h { n\td V d\tl i:");
result.add("han-\tded-\tness", "h { n\td V d\tn V s");
result.add("han-\tdel", "h { n\td V l");
result.add("han-\tdel's", "h { n\td V l z");
result.add("han-\tder", "h { n\td @r");
result.add("han-\tders", "h { n\td @r z");
result.add("han-\tdi-\tcap", "h { n\td i:\tk { p");
result.add("han-\tdi-\tcap-\tper", "h { n\td i:\tk {\tp @r");
result.add("han-\tdi-\tcap-\tpers", "h { n\td i:\tk {\tp @r z");
result.add("han-\tdi-\tcap-\tping", "h { n\td i:\tk {\tp I N");
result.add("han-\tdi-\tcapped", "h { n\td i:\tk { p t");
result.add("han-\tdi-\tcaps", "h { n\td i:\tk { p s");
result.add("han-\tdi-\tcraft", "h { n\td i: k\tr { f t");
result.add("han-\tdi-\tcrafts", "h { n\td i: k\tr { f t s");
result.add("han-\tdi-\ter", "h { n\td i:\t@r");
result.add("han-\tdi-\tly", "h { n\td I\tl i:");
result.add("han-\tdi-\twork", "h { n\td i:\tw @r k");
result.add("han-\tding", "h { n\td I N");
result.add("han-\tdle", "h { n\td V l");
result.add("han-\tdle-\tbar", "h { n\td V l\tb Q@");
result.add("han-\tdle-\tbars", "h { n\td V l\tb Q@ z");
result.add("han-\tdled", "h { n\td V l d");
result.add("han-\tdles", "h { n\td V l z");
result.add("han-\tdo-\tver", "h { n\td @U\tv @r");
result.add("han-\tdy", "h { n\td i:");
result.add("han-\tdy-\tman", "h { n\td i:\tm { n");
result.add("han-\tdy-\tmen", "h { n\td i:\tm e n");
result.add("han-\tford", "h { n\tf @r d");
result.add("han-\tgar", "h {\tN @r");
result.add("han-\tgars", "h {\tN @r z");
result.add("han-\tger", "h {\tN @r");
result.add("han-\tgers", "h {\tN @r z");
result.add("han-\tging", "h {\tN I N");
result.add("han-\tgings", "h { N\tg I N z");
result.add("han-\tgup", "h { N\tg V p");
result.add("han-\tgups", "h { N\tg V p s");
result.add("han-\tke-\tring", "h { N\tk @r\tI N");
result.add("han-\tkel", "h { N\tk V l");
result.add("han-\tker", "h { N\tk @r");
result.add("han-\tkey", "h { N\tk i:");
result.add("han-\tkin-\tson", "h { N\tk I n\ts V n");
result.add("han-\tkins", "h { N\tk I n z");
result.add("han-\tky", "h { N\tk i:");
result.add("han-\tley", "h { n\tl i:");
result.add("han-\tley's", "h { n\tl i: z");
result.add("han-\tlon", "h { n\tl V n");
result.add("han-\tna", "h {\tn V");
result.add("han-\tna-\tford", "h {\tn V\tf @r d");
result.add("han-\tnah", "h {\tn V");
result.add("han-\tnan", "h {\tn V n");
result.add("han-\tna's", "h {\tn V z");
result.add("han-\tnay", "h {\tn eI");
result.add("han-\tni", "h {\tn i:");
result.add("han-\tni-\tbal", "h {\tn I\tb V l");
result.add("han-\tnie", "h {\tn i:");
result.add("han-\tnis", "h {\tn I s");
result.add("han-\tnon", "h {\tn V n");
result.add("han-\tny", "h {\tn i:");
result.add("han-\trat-\tty", "h { n\tr V\tt i:");
result.add("han-\tsa", "h { n\ts V");
result.add("han-\tsard", "h { n\ts @r d");
result.add("han-\tse-\ta-\ttic", "h { n\ts i:\t{\tt I k");
result.add("han-\tsel", "h { n\ts V l");
result.add("han-\tsell", "h { n\ts V l");
result.add("han-\tsen", "h { n\ts V n");
result.add("han-\tsen's", "h { n\ts V n z");
result.add("han-\tser", "h Q n\ts @r");
result.add("han-\tshaw", "h { n\tS O:");
result.add("han-\tsom", "h { n\ts V m");
result.add("han-\tson", "h { n\ts V n");
result.add("han-\tson's", "h { n\ts V n z");
result.add("han-\tta-\tvi-\trus", "h { n\tt V\tv aI\tr V s");
result.add("han-\tuk-\tkah", "h Q\tn V\tk V");
result.add("han-\tway", "h { n\tw eI");
result.add("hance", "h { n s");
result.add("hand", "h { n d");
result.add("hand-\tbag", "h { n\td b { g");
result.add("hand-\tbags", "h { n\td b { g z");
result.add("hand-\tball", "h { n\td b O: l");
result.add("hand-\tbill", "h { n\td b I l");
result.add("hand-\tbills", "h { n\td b I l z");
result.add("hand-\tbook", "h { n\td b U k");
result.add("hand-\tbooks", "h { n\td b U k s");
result.add("hand-\tclasp", "h { n\td k l { s p");
result.add("hand-\tcraf-\tted", "h { n\td k r { f\tt V d");
result.add("hand-\tcraft", "h { n\td k r { f t");
result.add("hand-\tcrafts", "h { n\td k r { f t s");
result.add("hand-\tcuff", "h { n\td k V f");
result.add("hand-\tcuffed", "h { n\td k V f t");
result.add("hand-\tcuffs", "h { n\td k V f s");
result.add("hand-\tful", "h { n\td f U l");
result.add("hand-\tfuls", "h { n\td f U l z");
result.add("hand-\tgun", "h { n\td g V n");
result.add("hand-\tguns", "h { n\td g V n z");
result.add("hand-\theld", "h { n\td h e l d");
result.add("hand-\thol-\tding", "h { n\td h @U l\td I N");
result.add("hand-\thold", "h { n\td h @U l d");
result.add("hand-\tker-\tchief", "h { N\tk @r\ttS I f");
result.add("hand-\tker-\tchiefs", "h { N\tk @r\ttS I f s");
result.add("hand-\tler", "h { n\td l @r");
result.add("hand-\tlers", "h { n\td l @r z");
result.add("hand-\tley", "h { n\td l i:");
result.add("hand-\tling", "h { n\td l I N");
result.add("hand-\tloom", "h { n\td l u: m");
result.add("hand-\tlooms", "h { n\td l u: m z");
result.add("hand-\tmade", "h { n\td m eI d");
result.add("hand-\tout", "h { n\td aU t");
result.add("hand-\touts", "h { n\td aU t s");
result.add("hand-\tpick", "h { n\td p I k");
result.add("hand-\tpicked", "h { n\td p I k t");
result.add("hand-\trail", "h { n\td r eI l");
result.add("hand-\tsaw", "h { n\td s O:");
result.add("hand-\tset", "h { n\td s e t");
result.add("hand-\tsets", "h { n\td s e t s");
result.add("hand-\tsha-\tking", "h { n\td S eI\tk I N");
result.add("hand-\tshake", "h { n\td S eI k");
result.add("hand-\tshakes", "h { n\td S eI k s");
result.add("hand-\tsome", "h { n\ts V m");
result.add("hand-\tsome-\tly", "h { n\ts V m\tl i:");
result.add("hand-\tstand", "h { n\td s t { n d");
result.add("hand-\tstands", "h { n\td s t { n d z");
result.add("hand-\two-\tven", "h { n\td w @U\tv V n");
result.add("hand-\twri-\tting", "h { n\td r aI\tt I N");
result.add("hand-\twrit-\tten", "h { n\td r I\tt V n");
result.add("hands", "h { n d z");
result.add("hang", "h { N");
result.add("hang-\tman", "h { N\tm V n");
result.add("hang-\to-\tver", "h {\tN @U\tv @r");
result.add("hang-\to-\tvers", "h {\tN @U\tv @r z");
result.add("hang-\tout", "h {\tN aU t");
result.add("hang-\touts", "h {\tN aU t s");
result.add("hang-\tup", "h { N\tg V p");
result.add("hanged", "h { N d");
result.add("hangs", "h { N z");
result.add("hank", "h { N k");
result.add("hanks", "h { N k s");
result.add("hank's", "h { n k s");
result.add("hans", "h Q n s");
result.add("han's", "h Q n z");
result.add("hans-\tber-\try", "h { n\ts b e@\ti:");
result.add("hans-\tford", "h { n\ts f @r d");
result.add("hao", "h aU");
result.add("hap", "h { p");
result.add("hap-\tgood", "h { p\tg U d");
result.add("hap-\tha-\tzard", "h { p\th {\tz @r d");
result.add("hap-\tha-\tzard-\tly", "h { p\th {\tz @r d\tl i:");
result.add("hap-\tless", "h { p\tl V s");
result.add("hap-\tloid", "h { p\tl OI d");
result.add("hap-\tpe-\tning", "h {\tp V\tn I N");
result.add("hap-\tpe-\tnings", "h {\tp V\tn I N z");
result.add("hap-\tpen", "h {\tp V n");
result.add("hap-\tpen-\tstance", "h {\tp V n\ts t { n s");
result.add("hap-\tpened", "h {\tp V n d");
result.add("hap-\tpens", "h {\tp V n z");
result.add("hap-\tpi-\ter", "h {\tp i:\t@r");
result.add("hap-\tpi-\test", "h {\tp i:\tV s t");
result.add("hap-\tpi-\tly", "h {\tp I\tl i:");
result.add("hap-\tpi-\tness", "h {\tp i:\tn V s");
result.add("hap-\tpy", "h {\tp i:");
result.add("happ", "h { p");
result.add("haps-\tburg", "h { p\ts b @r g");
result.add("haq", "h { k");
result.add("har-\tbe-\tson", "h Q@\tb V\ts V n");
result.add("har-\tbert", "h Q@\tb @r t");
result.add("har-\tbi-\tson", "h Q@\tb I\ts V n");
result.add("har-\tbin", "h Q@\tb I n");
result.add("har-\tbin-\tger", "h Q@\tb I n\tdZ @r");
result.add("har-\tbin-\tgers", "h Q@\tb I n\tdZ @r z");
result.add("har-\tbo-\tring", "h Q@\tb @r\tI N");
result.add("har-\tbor", "h Q@\tb @r");
result.add("har-\tbor-\tside", "h Q@\tb @r\ts aI d");
result.add("har-\tbored", "h Q@\tb @r d");
result.add("har-\tbors", "h Q@\tb @r z");
result.add("har-\tbor's", "h Q@\tb @r z");
result.add("har-\tbour", "h Q@\tb @r");
result.add("har-\tcourt", "h Q@\tk O@ t");
result.add("har-\tcourt's", "h Q@\tk @r t s");
result.add("har-\tda-\tway", "h Q@\td V\tw eI");
result.add("har-\tde-\tner", "h Q@\td V\tn @r");
result.add("har-\tde-\tning", "h Q@\td V\tn I N");
result.add("har-\tden", "h Q@\td V n");
result.add("har-\tdened", "h Q@\td V n d");
result.add("har-\tdens", "h Q@\td V n z");
result.add("har-\tden's", "h Q@\td V n z");
result.add("har-\tder", "h Q@\td @r");
result.add("har-\tdes-\tty", "h Q@\td V s\tt i:");
result.add("har-\tdest", "h Q@\td V s t");
result.add("har-\tdi-\ter", "h Q@\td i:\t@r");
result.add("har-\tdie", "h Q@\td i:");
result.add("har-\tdin", "h Q@\td I n");
result.add("har-\tding", "h Q@\td I N");
result.add("har-\tding's", "h Q@\td I N s");
result.add("har-\tdy", "h Q@\td i:");
result.add("har-\tdy's", "h Q@\td i: z");
result.add("har-\tford", "h Q@\tf @r d");
result.add("har-\tgreaves", "h Q@ g\tr i: v z");
result.add("har-\tken", "h Q@\tk V n");
result.add("har-\tking", "h Q@\tk I N");
result.add("har-\tkins", "h Q@\tk I n z");
result.add("har-\tlan", "h Q@\tl V n");
result.add("har-\tland", "h Q@\tl V n d");
result.add("har-\tle", "h Q@\tV l");
result.add("har-\tle-\tquin", "h Q@\tl V k\tw V n");
result.add("har-\tlem", "h Q@\tl V m");
result.add("har-\tlem's", "h Q@\tl V m z");
result.add("har-\tley", "h Q@\tl i:");
result.add("har-\tley's", "h Q@\tl i: z");
result.add("har-\tleys-\tville", "h Q@\tl i: z\tv I l");
result.add("har-\tlin", "h Q@\tl I n");
result.add("har-\tlin-\tgen", "h Q@\tl I\tN V n");
result.add("har-\tling", "h Q@\tl I N");
result.add("har-\tlin's", "h Q@\tl I n z");
result.add("har-\tlot", "h Q@\tl V t");
result.add("har-\tlow", "h Q@\tl @U");
result.add("har-\tman", "h Q@\tm V n");
result.add("har-\tmat-\ttan", "h Q@\tm V\tt { n");
result.add("har-\tmel", "h Q@\tm V l");
result.add("har-\tmer", "h Q@\tm @r");
result.add("har-\tming", "h Q@\tm I N");
result.add("har-\tmo-\tni-\ta", "h Q@\tm @U\tn i:\tV");
result.add("har-\tmo-\tni-\tca", "h Q@\tm Q\tn I\tk V");
result.add("har-\tmo-\tni-\tous", "h Q@\tm @U\tn i:\tV s");
result.add("har-\tmo-\tni-\tous-\tly", "h Q@\tm @U\tn i:\tV s\tl i:");
result.add("har-\tmo-\tni-\tum", "h Q@\tm @U\tn i:\tV m");
result.add("har-\tmo-\tni-\tza-\ttion", "h Q@\tm V\tn V\tz eI\tS V n");
result.add("har-\tmo-\tni-\tzing", "h Q@\tm V\tn aI\tz I N");
result.add("har-\tmo-\tnic", "h Q@\tm Q\tn I k");
result.add("har-\tmo-\tnics", "h Q@\tm Q\tn I k s");
result.add("har-\tmo-\tnie", "h Q@\tm V\tn i:");
result.add("har-\tmo-\tnies", "h Q@\tm V\tn i: z");
result.add("har-\tmo-\tnize", "h Q@\tm V\tn aI z");
result.add("har-\tmo-\tnized", "h Q@\tm V\tn aI z d");
result.add("har-\tmo-\tny", "h Q@\tm V\tn i:");
result.add("har-\tmon", "h Q@\tm V n");
result.add("har-\tmon's", "h Q@\tm V n z");
result.add("har-\tnack", "h Q@\tn V k");
result.add("har-\tnes-\tses", "h Q@\tn V\ts V z");
result.add("har-\tnes-\tsing", "h Q@\tn V\ts I N");
result.add("har-\tness", "h Q@\tn V s");
result.add("har-\tnessed", "h Q@\tn V s t");
result.add("har-\tnett", "h Q@\tn e t");
result.add("har-\tney", "h Q@\tn i:");
result.add("har-\tper", "h Q@\tp @r");
result.add("har-\tpers", "h Q@\tp @r z");
result.add("har-\tper's", "h Q@\tp @r z");
result.add("har-\tpin", "h Q@\tp { n");
result.add("har-\tping", "h Q@\tp I N");
result.add("har-\tpist", "h Q@\tp I s t");
result.add("har-\tpists", "h Q@\tp I s t s");
result.add("har-\tpo", "h Q@\tp @U");
result.add("har-\tpole", "h Q@\tp @U l");
result.add("har-\tpoon", "h Q@\tp u: n");
result.add("har-\tpoons", "h Q@\tp u: n z");
result.add("har-\tque-\tbus", "h Q@ k\tw V\tb V s");
result.add("har-\trah", "h {\tr V");
result.add("har-\trah's", "h e@\tV z");
result.add("har-\trell", "h e@\tV l");
result.add("har-\trell's", "h {\tr V l z");
result.add("har-\tri-\ter", "h e@\ti:\t@r");
result.add("har-\tri-\tet", "h e@\ti:\tV t");
result.add("har-\tri-\tette", "h {\tr i:\te t");
result.add("har-\tri-\tman", "h e@\tI\tm V n");
result.add("har-\tri-\tott", "h {\tr i:\tV t");
result.add("har-\tri-\tson", "h e@\tI\ts V n");
result.add("har-\tri-\tson's", "h e@\tI\ts V n z");
result.add("har-\tried", "h e@\ti: d");
result.add("har-\tries", "h e@\ti: z");
result.add("har-\tring-\tton", "h e@\tI N\tt V n");
result.add("har-\tris", "h e@\tI s");
result.add("har-\tris-\tburg", "h {\tr I s\tb @r g");
result.add("har-\tris-\tburg's", "h {\tr I s\tb @r g z");
result.add("har-\tro-\twer", "h {\tr @U\tw @r");
result.add("har-\tro-\twing", "h e@\t@U\tI N");
result.add("har-\trod", "h e@\tV d");
result.add("har-\trods", "h e@\tV d z");
result.add("har-\trod's", "h e@\tV d z");
result.add("har-\trold", "h e@\tV l d");
result.add("har-\trow", "h {\tr @U");
result.add("har-\try", "h e@\ti:");
result.add("har-\try's", "h e@\ti: z");
result.add("har-\tshaw", "h Q@\tS O:");
result.add("har-\tsher", "h Q@\tS @r");
result.add("har-\tshest", "h Q@\tS V s t");
result.add("har-\tten", "h Q@\tt V n");
result.add("har-\ttin", "h Q@\tt I n");
result.add("har-\tty", "h Q@\tt i:");
result.add("har-\tvard", "h Q@\tv @r d");
result.add("har-\tvard's", "h Q@\tv @r d z");
result.add("har-\tvel", "h Q@\tv V l");
result.add("har-\tves-\tta-\tble", "h Q@\tv V s\tt V\tb V l");
result.add("har-\tves-\tted", "h Q@\tv V s\tt V d");
result.add("har-\tves-\tter", "h Q@\tv V s\tt @r");
result.add("har-\tves-\tters", "h Q@\tv V s\tt @r z");
result.add("har-\tves-\tting", "h Q@\tv V s\tt I N");
result.add("har-\tvest", "h Q@\tv V s t");
result.add("har-\tvests", "h Q@\tv V s t s");
result.add("har-\tvey", "h Q@\tv i:");
result.add("harb", "h Q@ b");
result.add("hard", "h Q@ d");
result.add("hard-\tback", "h Q@ d\tb { k");
result.add("hard-\tball", "h Q@ d\tb O: l");
result.add("hard-\tboard", "h Q@ d\tb O@ d");
result.add("hard-\tco-\tver", "h Q@ d\tk V\tv @r");
result.add("hard-\tcore", "h Q@ d\tk O@");
result.add("hard-\tgoods", "h Q@ d\tg U d z");
result.add("hard-\thea-\tded", "h Q@ d\th e\td V d");
result.add("hard-\thead", "h Q@ d\th e d");
result.add("hard-\tli-\tner", "h Q@ d\tl aI\tn @r");
result.add("hard-\tli-\tners", "h Q@ d\tl aI\tn @r z");
result.add("hard-\tline", "h Q@ d\tl aI n");
result.add("hard-\tly", "h Q@ d\tl i:");
result.add("hard-\tman", "h Q@ d\tm V n");
result.add("hard-\tness", "h Q@ d\tn V s");
result.add("hard-\tpressed", "h Q@ d\tp r e s t");
result.add("hard-\tscrab-\tble", "h Q@ d\ts k r {\tb V l");
result.add("hard-\tship", "h Q@ d\tS I p");
result.add("hard-\tships", "h Q@ d\tS I p s");
result.add("hard-\tware", "h Q@ d\tw e@");
result.add("hard-\tway", "h Q@ d\tw eI");
result.add("hard-\twick", "h Q@ d\tw I k");
result.add("hard-\twicke", "h Q@ d\tw I k");
result.add("hard-\twood", "h Q@ d\tw U d");
result.add("hard-\twoods", "h Q@ d\tw U d z");
result.add("hard-\twor-\tking", "h Q@ d\tw @r\tk I N");
result.add("hards", "h Q@ d z");
result.add("hare", "h e@");
result.add("hare-\tbrained", "h e@ b\tr eI n d");
result.add("hare-\twood", "h e@\tw U d");
result.add("hares", "h e@ z");
result.add("hare's", "h e@ z");
result.add("hark", "h Q@ k");
result.add("hark-\tness", "h Q@ k\tn V s");
result.add("harks", "h Q@ k s");
result.add("harl", "h Q@ l");
result.add("harm", "h Q@ m");
result.add("harm-\tful", "h Q@ m\tf V l");
result.add("harm-\tful-\tness", "h Q@ m\tf V l\tn V s");
result.add("harm-\tless", "h Q@ m\tl V s");
result.add("harm-\tless-\tly", "h Q@ m\tl V s\tl i:");
result.add("harmed", "h Q@ m d");
result.add("harms", "h Q@ m z");
result.add("harm's", "h Q@ m z");
result.add("harn", "h Q@ n");
result.add("harned", "h Q@ n d");
result.add("harp", "h Q@ p");
result.add("harp-\tsi-\tchord", "h Q@ p\ts I\tk O@ d");
result.add("harped", "h Q@ p t");
result.add("harps", "h Q@ p s");
result.add("harps-\tter", "h Q@ p\ts t @r");
result.add("harr", "h { r");
result.add("harre", "h { r");
result.add("hars-\ttad", "h Q@ s\tt V d");
result.add("harsh", "h Q@ S");
result.add("harsh-\tly", "h Q@ S\tl i:");
result.add("harsh-\tman", "h Q@ S\tm V n");
result.add("harsh-\tness", "h Q@ S\tn V s");
result.add("hart", "h Q@ t");
result.add("hart-\tfield", "h Q@ t\tf i: l d");
result.add("hart-\tford", "h Q@ t\tf @r d");
result.add("hart-\tford's", "h Q@ t\tf @r d z");
result.add("hart-\tke", "h Q@ t\tk i:");
result.add("hart-\tland", "h Q@ t\tl V n d");
result.add("hart-\tley", "h Q@ t\tl i:");
result.add("hart-\tline", "h Q@ t\tl aI n");
result.add("hart-\tman", "h Q@ t\tm V n");
result.add("hart-\tmann", "h Q@ t\tm V n");
result.add("hart-\tnell", "h Q@ t\tn V l");
result.add("hart-\tnett", "h Q@ t\tn e t");
result.add("hart-\tshorne", "h Q@\ttS @r n");
result.add("hart-\twell", "h Q@ t\tw e l");
result.add("hart-\twick", "h Q@ t\tw I k");
result.add("hart-\twood", "h Q@ t\tw U d");
result.add("hart-\tzel", "h Q@ t\tz V l");
result.add("hart-\tzell", "h Q@ t\tz V l");
result.add("harte", "h Q@ t");
result.add("harts", "h Q@ t s");
result.add("hart's", "h Q@ t s");
result.add("harts-\tfield", "h Q@ t\ts f i: l d");
result.add("harts-\thorn", "h Q@ t\ts h O@ n");
result.add("harts-\tville", "h Q@ t\ts v I l");
result.add("harv", "h Q@ v");
result.add("harve", "h Q@ v");
result.add("has-\tkell", "h { s\tk V l");
result.add("has-\tkins", "h { s\tk I n z");
result.add("has-\tlam", "h { s\tl V m");
result.add("has-\tlett", "h { s\tl e t");
result.add("has-\ts-\tling", "h {\ts V\tl I N");
result.add("has-\tsan", "h V\ts Q n");
result.add("has-\tsel", "h {\ts V l");
result.add("has-\tsell", "h {\ts V l");
result.add("has-\tsett", "h {\ts e t");
result.add("has-\tsing", "h {\ts I N");
result.add("has-\tsle", "h {\ts V l");
result.add("has-\tsled", "h {\ts V l d");
result.add("has-\tsles", "h {\ts V l z");
result.add("has-\tta", "h { s\tt V");
result.add("has-\tti-\tly", "h eI s\tt I\tl i:");
result.add("has-\ttie", "h eI s\tt i:");
result.add("has-\tting", "h eI s\tt I N");
result.add("has-\ttings", "h eI s\tt I N z");
result.add("has-\tty", "h eI s\tt i:");
result.add("has-\twell", "h { s\tw e l");
result.add("hass-\tler", "h { s\tl @r");
result.add("hasse", "h Q s");
result.add("hast", "h { s t");
result.add("haste", "h eI s t");
result.add("hat", "h { t");
result.add("hat-\tche-\tries", "h {\ttS @r\ti: z");
result.add("hat-\tche-\try", "h {\ttS @r\ti:");
result.add("hat-\tchel", "h {\ttS V l");
result.add("hat-\tcher", "h {\ttS @r");
result.add("hat-\tches", "h {\ttS V z");
result.add("hat-\tchet", "h {\ttS V t");
result.add("hat-\tchets", "h {\ttS V t s");
result.add("hat-\tching", "h {\ttS I N");
result.add("hat-\tch's", "h {\ttS V z");
result.add("hat-\tfield", "h { t\tf i: l d");
result.add("hat-\tfield's", "h { t\tf i: l d z");
result.add("hat-\tley", "h { t\tl i:");
result.add("hat-\tma-\tker", "h { t\tm eI\tk @r");
result.add("hat-\tred", "h eI t\tr V d");
result.add("hat-\treds", "h eI t\tr V d z");
result.add("hat-\tte-\tras", "h {\tt @r\tV s");
result.add("hat-\tte-\try", "h {\tt @r\ti:");
result.add("hat-\tter", "h {\tt @r");
result.add("hat-\tters-\tley", "h {\tt @r z\tl i:");
result.add("hat-\ttie", "h {\tt i:");
result.add("hat-\tton", "h {\tt V n");
result.add("hat-\ttu-\tsas", "h V\tt u:\ts V s");
result.add("hat-\tty", "h {\tt i:");
result.add("hatch", "h { tS");
result.add("hatch-\tback", "h { tS\tb { k");
result.add("hatched", "h { tS t");
result.add("hate", "h eI t");
result.add("hate-\tful", "h eI t\tf V l");
result.add("hates", "h eI t s");
result.add("hath", "h { T");
result.add("hath-\tcock", "h { T\tk V k");
result.add("hats", "h { t s");
result.add("hat's", "h { t s");
result.add("hatt", "h { t");
result.add("hau", "h aU");
result.add("hau-\tgen", "h aU\tg V n");
result.add("hau-\tger", "h aU\tg @r");
result.add("hau-\tghey", "h O:\tk i:");
result.add("hau-\tler", "h O:\tl @r");
result.add("hau-\tlers", "h O:\tl @r z");
result.add("hau-\tling", "h O:\tl I N");
result.add("hau-\tsa", "h aU\ts V");
result.add("hau-\tsen", "h aU\tz V n");
result.add("hau-\tser", "h aU\tz @r");
result.add("hauck", "h O: k");
result.add("hauge", "h O: dZ");
result.add("haugh", "h O:");
result.add("haugh-\tti-\tly", "h O:\tt I\tl i:");
result.add("haugh-\tton", "h O:\tt V n");
result.add("haugh-\tty", "h O:\tt i:");
result.add("haught", "h O: t");
result.add("haul", "h O: l");
result.add("hauled", "h O: l d");
result.add("hauls", "h O: l z");
result.add("haun-\tted", "h O:\tn V d");
result.add("haun-\tting", "h O: n\tt I N");
result.add("haun-\tting-\tly", "h O: n\tt I N\tl i:");
result.add("haunt", "h O: n t");
result.add("haunts", "h O: n t s");
result.add("haup-\tpauge", "h aU\tp O: dZ");
result.add("haupt-\tmann", "h aU p\tt m V n");
result.add("haus-\tmann", "h aU s\tm V n");
result.add("haus-\tner", "h aU s\tn @r");
result.add("hause", "h aU s");
result.add("hauss-\tmann", "h aU s\tm V n");
result.add("haut", "h O: t");
result.add("haute", "h @U t");
result.add("have", "h { v");
result.add("have-\tlock", "h { v\tl Q k");
result.add("have-\tman", "h eI v\tm V n");
result.add("haves", "h { v z");
result.add("haw", "h O:");
result.add("haw-\tken", "h O:\tk V n");
result.add("haw-\tker", "h O:\tk @r");
result.add("haw-\tkers", "h O:\tk @r z");
result.add("haw-\tkey", "h O:\tk i:");
result.add("haw-\tkeye", "h O:\tk aI");
result.add("haw-\tkeye's", "h O:\tk aI z");
result.add("haw-\tking", "h O:\tk I N");
result.add("haw-\tkins", "h O:\tk I n z");
result.add("haw-\tkish", "h O:\tk I S");
result.add("haw-\tley", "h O:\tl i:");
result.add("haw-\tley's", "h O:\tl i: z");
result.add("haw-\tthorn", "h O:\tT O@ n");
result.add("haw-\tthorne", "h O:\tT O@ n");
result.add("haw-\tthorns", "h O:\tT O@ n z");
result.add("hawes", "h O: z");
result.add("hawk", "h O: k");
result.add("hawk-\tbill", "h O: k\tb I l");
result.add("hawk-\tbill's", "h O: k\tb I l z");
result.add("hawke", "h O: k");
result.add("hawked", "h O: k t");
result.add("hawke's", "h O: k s");
result.add("hawks", "h O: k s");
result.add("haws", "h O: z");
result.add("hay", "h eI");
result.add("hay-\tcock", "h eI\tk Q k");
result.add("hay-\tden", "h eI\td V n");
result.add("hay-\tdn", "h aI\td V n");
result.add("hay-\tdn's", "h aI\td V n z");
result.add("hay-\tdon", "h eI\td V n");
result.add("hay-\tfield", "h eI\tf i: l d");
result.add("hay-\tfields", "h eI\tf i: l d z");
result.add("hay-\ting", "h eI\tI N");
result.add("hay-\tley", "h eI\tl i:");
result.add("hay-\tloft", "h eI\tl O: f t");
result.add("hay-\tma-\tker", "h eI\tm eI\tk @r");
result.add("hay-\tman", "h eI\tm V n");
result.add("hay-\tmar-\tket", "h eI\tm Q@\tk e t");
result.add("hay-\tton", "h eI\tt V n");
result.add("hay-\tward", "h eI\tw @r d");
result.add("hay-\tward's", "h eI\tw @r d z");
result.add("hay-\twire", "h eI\tw aI r");
result.add("hay-\twood", "h eI\tw U d");
result.add("hay-\tworth", "h eI\tw @r T");
result.add("haye", "h eI");
result.add("hayes", "h eI z");
result.add("hayles", "h eI l z");
result.add("haymes", "h eI m z");
result.add("hayne", "h eI n");
result.add("haynes", "h eI n z");
result.add("hays", "h eI z");
result.add("hays-\ttack", "h eI s\tt { k");
result.add("hayse", "h eI z");
result.add("haz-\tlett", "h { z\tl e t");
result.add("haze", "h eI z");
result.add("he", "h i:");
result.add("he-\tbel", "h e\tb V l");
result.add("he-\tber", "h i:\tb @r");
result.add("he-\tbert", "h e\tb @r t");
result.add("he-\tbri-\tdes", "h e b\tr I\td i: z");
result.add("he-\tcu-\tba", "h e k\tj V\tb V");
result.add("he-\tdo-\tni-\tsm", "h i:\td V\tn I\tz V m");
result.add("he-\tdo-\tnis-\ttic", "h i:\td V\tn I s\tt I k");
result.add("he-\tdy", "h i:\td i:");
result.add("he-\ter", "h i:\t@r");
result.add("he-\tgar-\tty", "h e\tg Q@\tt i:");
result.add("he-\tge-\tli-\tan", "h i:\tdZ i:\tl i:\tV n");
result.add("he-\tge-\tmo-\tnic", "h e\tg V\tm Q\tn I k");
result.add("he-\tge-\tmo-\tny", "h i:\tdZ e\tm V\tn i:");
result.add("he-\tgel", "h e\tg V l");
result.add("he-\tger", "h i:\tg @r");
result.add("he-\tle-\tna", "h e\tl V\tn V");
result.add("he-\tle-\tna's", "h e\tl V\tn V z");
result.add("he-\tlen", "h e\tl V n");
result.add("he-\tlens", "h e\tl V n z");
result.add("he-\tlen's", "h e\tl V n z");
result.add("he-\tli-\tcal", "h e\tl I\tk V l");
result.add("he-\tli-\tcon", "h e\tl I\tk Q n");
result.add("he-\tli-\tcons", "h e\tl I\tk Q n z");
result.add("he-\tli-\tcop-\tter", "h e\tl I\tk Q p\tt @r");
result.add("he-\tli-\tcop-\tters", "h e\tl I\tk Q p\tt @r z");
result.add("he-\tli-\tcop-\tter's", "h e\tl I\tk Q p\tt @r z");
result.add("he-\tli-\to-\tpo-\tlis", "h i:\tl i:\tQ\tp V\tl V s");
result.add("he-\tli-\to-\ttrope", "h i:\tl i:\tV t\tr @U p");
result.add("he-\tli-\tos", "h i:\tl i:\tQ s");
result.add("he-\tli-\tum", "h i:\tl i:\tV m");
result.add("he-\tlice", "h e\tl I s");
result.add("he-\tling", "h i:\tl I N");
result.add("he-\tlix", "h i:\tl I k s");
result.add("he-\tlo-\tti-\tsm", "h e\tl V\tt I\tz V m");
result.add("he-\tlot", "h e\tl V t");
result.add("he-\tlot-\try", "h e\tl V t\tr i:");
result.add("he-\tlots", "h e\tl V t s");
result.add("he-\tma-\ttite", "h e\tm V\tt aI t");
result.add("he-\tma-\tto-\tlo-\tgy", "h e\tm V\tt Q\tl I\tdZ i:");
result.add("he-\tman", "h i:\tm V n");
result.add("he-\tmel", "h e\tm V l");
result.add("he-\tmi-\tmor-\tphite", "h e\tm I\tm O@\tf aI t");
result.add("he-\tmi-\tple-\tgi-\ta", "h e\tm I p\tl i:\tdZ i:\tV");
result.add("he-\tming-\tway", "h e\tm I N\tw eI");
result.add("he-\tming-\tway's", "h e\tm I N\tw eI z");
result.add("he-\tmis-\tphe-\tric", "h e\tm I s\tf I@\tI k");
result.add("he-\tmis-\tphere", "h e\tm I s\tf I@");
result.add("he-\tmo-\tc-\tya-\tnin", "h i:\tm V\ts aI\tV\tn V n");
result.add("he-\tmo-\tdy-\tna-\tmic", "h e\tm @U\td aI\tn {\tm I k");
result.add("he-\tmo-\tdy-\tna-\tmics", "h e\tm @U\td aI\tn {\tm I k s");
result.add("he-\tmo-\tglo-\tbin", "h i:\tm V g\tl @U\tb V n");
result.add("he-\tmo-\tly-\ttic", "h i:\tm V\tl I\tt I k");
result.add("he-\tmo-\tphi-\tli-\ta", "h i:\tm V\tf i:\tl i:\tV");
result.add("he-\tmo-\tphi-\tli-\tac", "h i:\tm V\tf I\tl i:\t{ k");
result.add("he-\tmo-\tphi-\tli-\tacs", "h i:\tm V\tf I\tl i:\t{ k s");
result.add("he-\tmor-\trha-\tgic", "h e\tm @r\t{\tg I k");
result.add("he-\tmor-\trha-\tging", "h e\tm @r\tI\tdZ I N");
result.add("he-\tmor-\trhage", "h e\tm @r\tI dZ");
result.add("he-\tmor-\trhaged", "h e\tm @r\tI dZ d");
result.add("he-\tmorr-\thoid", "h e\tm @r\tOI d");
result.add("he-\tmorr-\thoids", "h e\tm @r\tOI d z");
result.add("he-\tn-\trie", "h e\tn @r\ti:");
result.add("he-\tnie", "h e\tn i:");
result.add("he-\tnle", "h e\tn V l");
result.add("he-\tpa-\trin", "h e\tp @r\tI n");
result.add("he-\tpa-\tti-\ttis", "h e\tp V\tt aI\tt V s");
result.add("he-\tpa-\ttic", "h V\tp {\tt I k");
result.add("he-\tra", "h I@\tV");
result.add("he-\tral-\tded", "h e@\tV l\td V d");
result.add("he-\tral-\tdic", "h e@\t{ l\td I k");
result.add("he-\tral-\tding", "h e@\tV l\td I N");
result.add("he-\trald", "h e@\tV l d");
result.add("he-\trald-\try", "h e@\tV l\td r i:");
result.add("he-\tralds", "h e@\tV l d z");
result.add("he-\trald's", "h e@\tV l d z");
result.add("he-\tre-\tdi-\ta", "h @r\te\td i:\tV");
result.add("he-\tre-\tdi-\tta-\try", "h @r\te\td I\tt e@\ti:");
result.add("he-\tre-\tdi-\tty", "h @r\te\td I\tt i:");
result.add("he-\tre-\tford", "h e@\tV\tf @r d");
result.add("he-\tre-\tsy", "h e@\tV\ts i:");
result.add("he-\tre-\tti-\tcal", "h @r\te\tt I\tk V l");
result.add("he-\tre-\ttic", "h e@\tV\tt I k");
result.add("he-\trein", "h I@\tI n");
result.add("he-\tri-\tta-\tble", "h e@\tI\tt V\tb V l");
result.add("he-\tri-\tta-\tges", "h e@\tI\tt I\tdZ V z");
result.add("he-\tri-\tta-\tge's", "h e@\tI\tt I\tdZ V z");
result.add("he-\tri-\ttage", "h e@\tI\tt V dZ");
result.add("he-\trin-\tger", "h e@\tI n\tdZ @r");
result.add("he-\tring", "h @r\tI N");
result.add("he-\tring-\tton", "h e@\tI N\tt V n");
result.add("he-\tro", "h I@\t@U");
result.add("he-\tro-\ti-\tsm", "h e@\t@U\tI\tz V m");
result.add("he-\tro-\tic", "h I@\t@U\tI k");
result.add("he-\tro-\tical-\tly", "h I@\t@U\tI k\tl i:");
result.add("he-\tro-\tics", "h I@\t@U\tI k s");
result.add("he-\tro-\tin", "h e@\t@U\tI n");
result.add("he-\tro-\tine", "h e@\t@U\tI n");
result.add("he-\tro-\tines", "h e@\t@U\tI n z");
result.add("he-\tro-\tin's", "h e@\t@U\tI n z");
result.add("he-\tro-\tize", "h i:\tr @U\taI z");
result.add("he-\tro-\tized", "h i:\tr @U\taI z d");
result.add("he-\trod", "h e@\tV d");
result.add("he-\troes", "h I@\t@U z");
result.add("he-\trold", "h e@\tV l d");
result.add("he-\tron", "h e@\tV n");
result.add("he-\trons", "h e@\tV n z");
result.add("he-\tron's", "h e@\tV n z");
result.add("he-\tros", "h I@\t@U z");
result.add("he-\tro's", "h I@\t@U z");
result.add("he-\ts-\tler", "h e\ts V\tl @r");
result.add("he-\tsel-\ttine", "h e\ts V l\tt i: n");
result.add("he-\tsi-\tod", "h i:\ts i:\tV d");
result.add("he-\tsi-\tta-\tted", "h e\tz I\tt eI\tt V d");
result.add("he-\tsi-\tta-\tting", "h e\tz I\tt eI\tt I N");
result.add("he-\tsi-\tta-\ttion", "h e\tz I\tt eI\tS V n");
result.add("he-\tsi-\tta-\ttions", "h e\tz I\tt eI\tS V n z");
result.add("he-\tsi-\ttan-\tcy", "h e\tz I\tt V n\ts i:");
result.add("he-\tsi-\ttant", "h e\tz I\tt V n t");
result.add("he-\tsi-\ttant-\tly", "h e\tz I\tt V n\tt l i:");
result.add("he-\tsi-\ttate", "h e\tz I\tt eI t");
result.add("he-\tsi-\ttates", "h e\tz I\tt eI t s");
result.add("he-\tte-\tro-\tcer-\tcal", "h e\tt @r\t@U\ts @r\tk V l");
result.add("he-\tte-\tro-\tdo-\txy", "h e\tt @r\tV\td Q k\ts i:");
result.add("he-\tte-\tro-\tdox", "h e\tt @r\tV\td Q k s");
result.add("he-\tte-\tro-\tdyne", "h e\tt @r\tV\td aI n");
result.add("he-\tte-\tro-\tge-\tne-\ti-\tty", "h e\tt @r\tV\tdZ V\tn eI\tV\tt i:");
result.add("he-\tte-\tro-\tge-\tneous", "h e\tt @r\tV\tdZ i: n\tj V s");
result.add("he-\tte-\tro-\tse-\txu-\ta-\tli-\tty", "h e\tt @r\t@U\ts e k\tS V\tw {\tl V\tt i:");
result.add("he-\tte-\tro-\tse-\txu-\tal", "h e\tt @r\t@U\ts e k\tS V\tw V l");
result.add("he-\tte-\tro-\tse-\txu-\tals", "h e\tt @r\t@U\ts e k\tS V\tw V l z");
result.add("he-\tte-\tro-\tsis", "h e\tt @r\t@U\ts I s");
result.add("he-\tte-\tro-\ttro-\tphic", "h e\tt @r\tV t\tr Q\tf I k");
result.add("he-\tte-\tros-\tpo-\trous", "h e\tt @r\tQ s\tp @r\tV s");
result.add("he-\twer", "h j u:\t@r");
result.add("he-\twett", "h j u:\te t");
result.add("he-\twing", "h j u:\tI N");
result.add("he-\twitt", "h j u:\tI t");
result.add("he-\twitt's", "h j u:\tI t s");
result.add("he-\txa-\tgo-\tnal", "h e k\ts {\tg V\tn V l");
result.add("he-\txa-\tgon", "h e k\ts V\tg Q n");
result.add("he-\txach-\tlo-\tro-\tphene", "h e k\ts V k\tl O@\tV\tf i: n");
result.add("he-\tyer", "h eI\t@r");
result.add("hea-\tdache", "h e\td eI k");
result.add("hea-\tdaches", "h e\td eI k s");
result.add("hea-\tded", "h e\td V d");
result.add("hea-\tder", "h e\td @r");
result.add("hea-\tding", "h e\td I N");
result.add("hea-\tdings", "h e\td I N z");
result.add("hea-\tdy", "h e\td i:");
result.add("hea-\tler", "h i:\tl @r");
result.add("hea-\tlers", "h i:\tl @r z");
result.add("hea-\tley", "h i:\tl i:");
result.add("hea-\tling", "h i:\tl I N");
result.add("hea-\tly", "h i:\tl i:");
result.add("hea-\tly's", "h i:\tl i: z");
result.add("hea-\tney", "h i:\tn i:");
result.add("hea-\tping", "h i:\tp I N");
result.add("hea-\trer", "h I@\t@r");
result.add("hea-\trers", "h I@\t@r z");
result.add("hea-\tring", "h I@\tI N");
result.add("hea-\trings", "h I@\tI N z");
result.add("hea-\tring's", "h I@\tI N z");
result.add("hea-\tted", "h i:\tt V d");
result.add("hea-\tted-\tly", "h i:\tt V d\tl i:");
result.add("hea-\tter", "h i:\tt @r");
result.add("hea-\tters", "h i:\tt @r z");
result.add("hea-\tthen", "h i:\tD V n");
result.add("hea-\tther", "h e\tD @r");
result.add("hea-\tthers", "h e\tD @r z");
result.add("hea-\tther's", "h e\tD @r z");
result.add("hea-\tting", "h i:\tt I N");
result.add("hea-\tton", "h i:\tt V n");
result.add("hea-\tve-\tner", "h e\tv V\tn @r");
result.add("hea-\tven", "h e\tv V n");
result.add("hea-\tven-\tly", "h e\tv V n\tl i:");
result.add("hea-\tvens", "h e\tv V n z");
result.add("hea-\tven's", "h e\tv V n z");
result.add("hea-\tvi-\ter", "h e\tv i:\t@r");
result.add("hea-\tvi-\test", "h e\tv i:\tV s t");
result.add("hea-\tvi-\tly", "h e\tv I\tl i:");
result.add("hea-\tvies", "h e\tv i: z");
result.add("hea-\tving", "h i:\tv I N");
result.add("hea-\tvy", "h e\tv i:");
result.add("hea-\tvy-\than-\tded", "h e\tv i:\th { n\td V d");
result.add("hea-\tvy-\tset", "h e\tv i:\ts e t");
result.add("hea-\tvy-\tweight", "h e\tv i:\tw eI t");
result.add("hea-\tvy-\tweights", "h e\tv i:\tw eI t s");
result.add("head", "h e d");
result.add("head-\tband", "h e d\tb { n d");
result.add("head-\tbands", "h e d\tb { n d z");
result.add("head-\tboard", "h e d\tb O@ d");
result.add("head-\tcheese", "h e d\ttS i: z");
result.add("head-\tcount", "h e d\tk aU n t");
result.add("head-\tdres-\tses", "h e d\td r e\ts V z");
result.add("head-\tdress", "h e d\tr e s");
result.add("head-\tfirst", "h e d\tf @r s t");
result.add("head-\tgear", "h e d\tg I@");
result.add("head-\thun-\tter", "h e d\th V n\tt @r");
result.add("head-\thun-\tters", "h e d\th V n\tt @r z");
result.add("head-\tless", "h e d\tl V s");
result.add("head-\tli-\tner", "h e d\tl aI\tn @r");
result.add("head-\tli-\tning", "h e d\tl aI\tn I N");
result.add("head-\tlight", "h e d\tl aI t");
result.add("head-\tlights", "h e d\tl aI t s");
result.add("head-\tline", "h e d\tl aI n");
result.add("head-\tlined", "h e d\tl aI n d");
result.add("head-\tlines", "h e d\tl aI n z");
result.add("head-\tlong", "h e d\tl O: N");
result.add("head-\tman", "h e d\tm V n");
result.add("head-\tmas-\tter", "h e d\tm { s\tt @r");
result.add("head-\tmist-\tress", "h e d\tm I s\tt r V s");
result.add("head-\tphone", "h e d\tf @U n");
result.add("head-\tphones", "h e d\tf @U n z");
result.add("head-\tquar-\tter", "h e d\tk w O@\tt @r");
result.add("head-\tquar-\ttered", "h e d\tk O@\tt @r d");
result.add("head-\tquar-\tters", "h e d\tk w O@\tt @r z");
result.add("head-\trest", "h e d\tr e s t");
result.add("head-\trests", "h e d\tr e s t s");
result.add("head-\trick", "h e d\tr I k");
result.add("head-\troom", "h e d\tr u: m");
result.add("head-\tset", "h e d\ts e t");
result.add("head-\tsets", "h e d\ts e t s");
result.add("head-\tship", "h e d\tS I p");
result.add("head-\tstart", "h e d\ts t Q@ t");
result.add("head-\tstone", "h e d\ts t @U n");
result.add("head-\tstones", "h e d\ts t @U n z");
result.add("head-\tstrong", "h e d\ts t r O: N");
result.add("head-\twa-\tter", "h e d\tw O:\tt @r");
result.add("head-\twa-\tters", "h e d\tw O:\tt @r z");
result.add("head-\tway", "h e d\tw eI");
result.add("head-\twind", "h e d\tw I n d");
result.add("heads", "h e d z");
result.add("head's", "h e d z");
result.add("heads-\tman", "h e d\tz m V n");
result.add("heal", "h i: l");
result.add("heal-\tthi-\ter", "h e l\tT i:\t@r");
result.add("heal-\tthi-\test", "h e l\tT i:\tV s t");
result.add("heal-\tthy", "h e l\tT i:");
result.add("heald", "h i: l d");
result.add("healed", "h i: l d");
result.add("heals", "h i: l z");
result.add("health", "h e l T");
result.add("health-\tcare", "h e l\tT k e@");
result.add("health-\tful", "h e l\tT f V l");
result.add("health's", "h e l T s");
result.add("heap", "h i: p");
result.add("heaped", "h i: p t");
result.add("heaps", "h i: p s");
result.add("hear", "h I@");
result.add("hear-\tsay", "h I@\ts eI");
result.add("hear-\ttache", "h Q@\tt eI k");
result.add("hear-\tte-\tning", "h Q@\tt V\tn I N");
result.add("hear-\tted", "h Q@\tt V d");
result.add("hear-\tted-\tly", "h Q@\tt V d\tl i:");
result.add("hear-\tten", "h Q@\tt V n");
result.add("hear-\ttened", "h Q@\tt V n d");
result.add("hear-\tti-\tly", "h Q@\tt V\tl i:");
result.add("hear-\tty", "h Q@\tt i:");
result.add("heard", "h @r d");
result.add("hearn", "h @r n");
result.add("hearne", "h @r n");
result.add("hears", "h I@ z");
result.add("hearse", "h @r s");
result.add("hearst", "h @r s t");
result.add("hearst's", "h @r s t s");
result.add("heart", "h Q@ t");
result.add("heart-\tbeat", "h Q@ t\tb i: t");
result.add("heart-\tbeats", "h Q@ t\tb i: t s");
result.add("heart-\tbrea-\tking", "h Q@ t\tb r eI\tk I N");
result.add("heart-\tbreak", "h Q@ t\tb r eI k");
result.add("heart-\tbro-\tken", "h Q@ t\tb r @U\tk V n");
result.add("heart-\tburn", "h Q@ t\tb @r n");
result.add("heart-\tfelt", "h Q@ t\tf e l t");
result.add("heart-\tland", "h Q@ t\tl { n d");
result.add("heart-\tless", "h Q@ t\tl V s");
result.add("heart-\tthrob", "h Q@ t\tT r Q b");
result.add("heart-\twar-\tming", "h Q@ t\tw O@\tm I N");
result.add("heart-\twise", "h Q@ t\tw aI z");
result.add("heart-\twood", "h Q@ t\tw U d");
result.add("hearth", "h Q@ T");
result.add("hearths", "h Q@ T s");
result.add("hearts", "h Q@ t s");
result.add("heart's", "h Q@ t s");
result.add("heat", "h i: t");
result.add("heath", "h i: T");
result.add("heath-\tcock", "h e T\tk V k");
result.add("heath-\tcote", "h e T\tk V t");
result.add("heath-\tman", "h i: T\tm V n");
result.add("heath-\trow", "h i: T\tr @U");
result.add("heath's", "h i: T s");
result.add("heats", "h i: t s");
result.add("heat's", "h i: t s");
result.add("heave", "h i: v");
result.add("heaved", "h i: v d");
result.add("heaves", "h i: v z");
result.add("heb-\tner", "h e b\tn @r");
result.add("heb-\trew", "h i: b\tr u:");
result.add("heb-\tron", "h e b\tr V n");
result.add("hebe", "h i: b");
result.add("hec-\tco", "h e\tk @U");
result.add("hec-\tker", "h e\tk @r");
result.add("hec-\tkle", "h e\tk V l");
result.add("hec-\tkled", "h e\tk V l d");
result.add("hec-\tku-\tva", "h e k\tj u:\tv V");
result.add("hec-\tla", "h e k\tl V");
result.add("hec-\tla's", "h e k\tl V z");
result.add("hec-\ttare", "h e k\tt Q@");
result.add("hec-\ttares", "h e k\tt Q@ z");
result.add("hec-\ttic", "h e k\tt I k");
result.add("hec-\tto-\tgraph", "h e k\tt V g\tr { f");
result.add("hec-\tto-\tring", "h e k\tt @r\tI N");
result.add("hec-\ttor", "h e k\tt @r");
result.add("hec-\ttor's", "h e k\tt @r z");
result.add("hecht", "h e k t");
result.add("hecht's", "h e k t s");
result.add("heck", "h e k");
result.add("heck-\tler", "h e k\tl @r");
result.add("heck-\tlers", "h e k\tl @r z");
result.add("heck-\tling", "h e k\tl I N");
result.add("heck-\tman", "h e k\tm V n");
result.add("heck's", "h e k s");
result.add("he'd", "h i: d");
result.add("hed-\trick", "h e d\tr I k");
result.add("hed-\twi-\tga", "h e d\tw I\tg V");
result.add("hed-\twig", "h e d\tw I g");
result.add("hee", "h i:");
result.add("hee-\tded", "h i:\td V d");
result.add("hee-\tding", "h i:\td I N");
result.add("hee-\tnan", "h i:\tn V n");
result.add("heed", "h i: d");
result.add("heeds", "h i: d z");
result.add("heel", "h i: l");
result.add("heeled", "h i: l d");
result.add("heels", "h i: l z");
result.add("hef-\tlin", "h e f\tl I n");
result.add("hef-\tner", "h e f\tn @r");
result.add("hef-\tner's", "h e f\tn @r z");
result.add("hef-\tter", "h e f\tt @r");
result.add("hef-\tti-\ter", "h e f\tt i:\t@r");
result.add("hef-\tti-\test", "h e f\tt i:\tV s t");
result.add("hef-\tty", "h e f\tt i:");
result.add("heff-\tron", "h e f\tr V n");
result.add("heft", "h e f t");
result.add("hege", "h i: dZ");
result.add("heh", "h e");
result.add("hei-\tdel-\tberg", "h aI\td V l\tb @r g");
result.add("hei-\tdi", "h aI\td i:");
result.add("hei-\tdi's", "h aI\td i: s");
result.add("hei-\tdrick", "h aI d\tr I k");
result.add("hei-\tfer", "h aI\tf @r");
result.add("hei-\tfers", "h aI\tf @r z");
result.add("hei-\tfetz", "h aI\tf I t s");
result.add("hei-\tgl", "h aI\tg V l");
result.add("hei-\tmer", "h aI\tm @r");
result.add("hei-\tne-\tken", "h aI\tn V\tk V n");
result.add("hei-\tner", "h aI\tn @r");
result.add("hei-\tney", "h aI\tn i:");
result.add("hei-\tnous", "h eI\tn V s");
result.add("hei-\tress", "e@\tV s");
result.add("hei-\tsel", "h aI\ts V l");
result.add("hei-\tser", "h aI\ts @r");
result.add("heid", "h aI d");
result.add("heide", "h aI d");
result.add("heidt", "h aI d t");
result.add("heigh-\tten", "h aI\tt V n");
result.add("heigh-\tten-\ting", "h aI\tt V\tn I N");
result.add("heigh-\ttened", "h aI\tt V n d");
result.add("heigh-\ttens", "h aI\tt V n z");
result.add("height", "h aI t");
result.add("heighth", "h aI T");
result.add("heights", "h aI t s");
result.add("heil", "h aI l");
result.add("heil-\tman", "h aI l\tm V n");
result.add("heim", "h aI m");
result.add("heim-\tlich", "h aI m\tl I k");
result.add("hein", "h aI n");
result.add("hein-\tkel", "h aI N\tk V l");
result.add("hein-\tlein", "h aI n\tl aI n");
result.add("hein-\trich", "h aI n\tr I k");
result.add("heine", "h aI n");
result.add("heins", "h aI n z");
result.add("heintz", "h aI n t s");
result.add("heinz", "h aI n z");
result.add("heinze", "h aI n z");
result.add("heir", "e@");
result.add("heir-\tloom", "e@\tl u: m");
result.add("heir-\tlooms", "e@\tl u: m z");
result.add("heirs", "e@ z");
result.add("heis-\tkell", "h aI s\tk V l");
result.add("heis-\tman", "h aI s\tm V n");
result.add("heis-\tman's", "h aI s\tm V n z");
result.add("heis-\tter", "h aI s\tt @r");
result.add("heise", "h aI s");
result.add("heist", "h aI s t");
result.add("hek-\tker", "h e\tk @r");
result.add("hel-\tden-\tte-\tnor", "h e l\td e n\tt e\tn @r");
result.add("hel-\tder", "h e l\td @r");
result.add("hel-\tfand", "h e l\tf V n d");
result.add("hel-\tga", "h e l\tg V");
result.add("hel-\tge-\tson", "h e l\tg V\ts V n");
result.add("hel-\tla-\tcious", "h e\tl eI\tS V s");
result.add("hel-\tla-\tcious-\tly", "h e\tl eI\tS V s\tl i:");
result.add("hel-\tle-\tni-\tsm", "h e\tl V\tn I\tz V m");
result.add("hel-\tle-\tnic", "h V\tl e\tn I k");
result.add("hel-\tle-\tnis-\ttic", "h e\tl V\tn I s\tt I k");
result.add("hel-\tle-\tnize", "h e\tl V\tn aI z");
result.add("hel-\tle-\tnized", "h e\tl V\tn aI z d");
result.add("hel-\tlen", "h e\tl V n");
result.add("hel-\tler", "h e\tl @r");
result.add("hel-\tler's", "h e\tl @r z");
result.add("hel-\tling", "h e\tl I N");
result.add("hel-\tlish", "h e\tl I S");
result.add("hel-\tlo", "h V\tl @U");
result.add("hel-\tlu-\tva", "h e\tl u:\tv V");
result.add("hel-\tman", "h e l\tm V n");
result.add("hel-\tme-\tted", "h e l\tm V\tt V d");
result.add("hel-\tmer", "h e l\tm @r");
result.add("hel-\tmet", "h e l\tm V t");
result.add("hel-\tmets", "h e l\tm V t s");
result.add("hel-\tming", "h e l\tm I N");
result.add("hel-\tminth", "h e l\tm I n T");
result.add("hel-\tmont", "h e l\tm Q n t");
result.add("hel-\tmut", "h e l\tm V t");
result.add("hel-\tmuth", "h e l\tm u: T");
result.add("hel-\tper", "h e l\tp @r");
result.add("hel-\tpers", "h e l\tp @r z");
result.add("hel-\tping", "h e l\tp I N");
result.add("hel-\tpings", "h e l\tp I N z");
result.add("hel-\tsin-\tki", "h e l\ts I N\tk i:");
result.add("held", "h e l d");
result.add("hele-\tne", "h V\tl i: n");
result.add("hell", "h e l");
result.add("he'll", "h i: l");
result.add("hell-\tfire", "h e l\tf aI r");
result.add("hell-\tman", "h e l\tm V n");
result.add("hell-\trai-\tser", "h e l\tr eI\tz @r");
result.add("helle", "h e l");
result.add("hell's", "h e l z");
result.add("helm", "h e l m");
result.add("helms", "h e l m z");
result.add("helms-\tman", "h e l\tm z m { n");
result.add("help", "h e l p");
result.add("help-\tful", "h e l\tp f V l");
result.add("help-\tful-\tly", "h e l\tp f V\tl i:");
result.add("help-\tless", "h e l\tp l V s");
result.add("help-\tless-\tly", "h e l\tp l V s\tl i:");
result.add("help-\tless-\tness", "h e l\tp l V s\tn V s");
result.add("help-\trin", "h e l\tp r I n");
result.add("helped", "h e l p t");
result.add("helps", "h e l p s");
result.add("hem", "h e m");
result.add("hem-\tline", "h e m\tl aI n");
result.add("hem-\tlines", "h e m\tl aI n z");
result.add("hem-\tlock", "h e m\tl Q k");
result.add("hem-\tmer", "h e\tm @r");
result.add("hem-\tmin-\tger", "h e\tm I\tN @r");
result.add("hem-\tming", "h e\tm I N");
result.add("hem-\tmings", "h e\tm I N z");
result.add("hem-\tpel", "h e m\tp V l");
result.add("hem-\tpen", "h e m\tp V n");
result.add("hem-\tphill", "h e m\tp h I l");
result.add("hemb-\tree", "h e m\tb r i:");
result.add("hemmed", "h e m d");
result.add("hemp", "h e m p");
result.add("hemp-\tstead", "h e m\tp s t e d");
result.add("hems", "h e m z");
result.add("hen-\td-\tren", "h e n\td @r\tV n");
result.add("hen-\tdon", "h e n\td @U n");
result.add("hen-\tdy", "h e n\td i:");
result.add("hen-\tgel", "h e N\tg V l");
result.add("hen-\thouse", "h e n\th aU s");
result.add("hen-\tley", "h e n\tl i:");
result.add("hen-\tleys", "h e n\tl i: z");
result.add("hen-\tley's", "h e n\tl i: z");
result.add("hen-\tman", "h e n\tm V n");
result.add("hen-\tna", "h e\tn V");
result.add("hen-\tne-\tpin", "h e\tn V\tp I n");
result.add("hen-\tner", "h e\tn @r");
result.add("hen-\tnes-\tsey", "h e\tn V\ts i:");
result.add("hen-\tnes-\tsey's", "h e\tn V\ts i: z");
result.add("hen-\tnes-\tsy", "h e\tn V\ts i:");
result.add("hen-\tnig", "h e\tn I g");
result.add("hen-\tning", "h e\tn I N");
result.add("hen-\tpeck", "h e n\tp e k");
result.add("hen-\tpecked", "h e n\tp e k t");
result.add("hen-\tri", "h e n\tr i:");
result.add("hen-\tri-\tet-\tta", "h e n\tr i:\te\tt V");
result.add("hen-\tri-\tette", "h e n\tr i:\te t");
result.add("hen-\tri-\tka", "h e n\tr I\tk V");
result.add("hen-\tri-\tques", "h e n\tr i:\tk e z");
result.add("hen-\tricks", "h e n\tr I k s");
result.add("hen-\trik", "h e n\tr I k");
result.add("hen-\trique", "Q n\tr i: k");
result.add("hen-\try", "h e n\tr i:");
result.add("hen-\try's", "h e n\tr i: z");
result.add("hen-\ts-\tler", "h e n\ts V\tl @r");
result.add("hen-\tsel", "h e n\ts V l");
result.add("hen-\tson", "h e n\ts V n");
result.add("hend-\tley", "h e n\td l i:");
result.add("hend-\trick", "h e n\td r I k");
result.add("hend-\trick-\tson", "h e n\td r I k\ts V n");
result.add("hend-\tricks", "h e n\td r I k s");
result.add("hend-\trik", "h e n\td r I k");
result.add("hend-\trix", "h e n\td r I k s");
result.add("hend-\try", "h e n\td r i:");
result.add("hend-\try's", "h e n\td r i: z");
result.add("heng", "h e N");
result.add("henke", "h e N k");
result.add("henn", "h e n");
result.add("hennes", "h e n z");
result.add("hens", "h e n z");
result.add("hen's", "h e n z");
result.add("hens-\tley", "h e n\tz l i:");
result.add("henze", "h e n z");
result.add("hep", "h e p");
result.add("hep-\tburn", "h e p\tb @r n");
result.add("hep-\tburn's", "h e p\tb @r n z");
result.add("hep-\tler", "h e p\tl @r");
result.add("hep-\tper", "h e\tp @r");
result.add("hep-\ttath-\tlon", "h e p\tt { T\tl Q n");
result.add("hep-\tworth", "h e p\tw @r T");
result.add("hepp-\tner", "h e p\tn @r");
result.add("her", "h @r");
result.add("her-\tba-\tceous", "@r\tb eI\tS V s");
result.add("her-\tba-\tlist", "@r\tb V\tl V s t");
result.add("her-\tba-\tlists", "@r\tb V\tl V s t s");
result.add("her-\tba-\tlist's", "@r\tb V\tl V s t s");
result.add("her-\tba-\tri-\tum", "h @r\tb e@\ti:\tV m");
result.add("her-\tba-\tri-\tums", "h @r\tb e@\ti:\tV m z");
result.add("her-\tbal", "@r\tb V l");
result.add("her-\tber", "h @r\tb @r");
result.add("her-\tber-\tger", "h @r\tb @r\tg @r");
result.add("her-\tbert", "h @r\tb @r t");
result.add("her-\tbert's", "h @r\tb @r t s");
result.add("her-\tbi-\tcide", "h @r\tb I\ts aI d");
result.add("her-\tbi-\tcides", "@r\tb I\ts aI d z");
result.add("her-\tbi-\tvo-\trous", "h @r\tb I\tv @r\tV s");
result.add("her-\tbi-\tvore", "h @r\tb I\tv O@");
result.add("her-\tbie", "h @r\tb i:");
result.add("her-\tce-\tgo-\tvi-\tna", "h e@ t\ts V\tg @U\tv i:\tn V");
result.add("her-\tce-\tgo-\tvi-\tna's", "h e@ t\ts V\tg @U\tv i:\tn V z");
result.add("her-\tcu-\tle-\tan", "h @r k\tj u:\tl i:\tV n");
result.add("her-\tcu-\tles", "h @r k\tj V\tl i: z");
result.add("her-\tded", "h @r\td V d");
result.add("her-\tder", "h e@\td @r");
result.add("her-\tders", "h @r\td @r z");
result.add("her-\tding", "h @r\td I N");
result.add("her-\tling", "h @r\tl I N");
result.add("her-\tlong", "h @r\tl O: N");
result.add("her-\tman", "h @r\tm V n");
result.add("her-\tmann", "h @r\tm V n");
result.add("her-\tman's", "h @r\tm V n z");
result.add("her-\tmaph-\tro-\tdi-\ttic", "h @r\tm { f\tr V\td I\tt I k");
result.add("her-\tmaph-\tro-\tdite", "h @r\tm { f\tr V\td aI t");
result.add("her-\tme-\tti-\tcal-\tly", "h @r\tm e\tt I\tk V\tl i:");
result.add("her-\tmes", "h @r\tm i: z");
result.add("her-\tmi-\ta", "h @r\tm i:\tV");
result.add("her-\tmi-\tna", "h @r\tm I\tn V");
result.add("her-\tmi-\tni-\ta", "h e@\tm i:\tn i:\tV");
result.add("her-\tmi-\tnie", "h @r\tm I\tn i:");
result.add("her-\tmi-\ttage", "h @r\tm I\tt V dZ");
result.add("her-\tmie", "h @r\tm i:");
result.add("her-\tmine", "h @r\tm I n");
result.add("her-\tmit", "h @r\tm I t");
result.add("her-\tmits", "h @r\tm I t s");
result.add("her-\tmo-\tsa", "h e@\tm @U\ts V");
result.add("her-\tmo-\tsil-\tlo", "h @r\tm V\ts I\tl @U");
result.add("her-\tmon", "h @r\tm V n");
result.add("her-\tnan", "h @r\tn V n");
result.add("her-\tnan-\tdez", "h @r\tn { n\td e z");
result.add("her-\tnan-\tdo", "h @r\tn Q n\td @U");
result.add("her-\tni-\ta", "h @r\tn i:\tV");
result.add("her-\tni-\tate", "h @r\tn i:\teI t");
result.add("her-\tni-\tates", "h @r\tn i:\teI t s");
result.add("her-\tpes", "h @r\tp i: z");
result.add("her-\tre-\tra", "h @r\te@\tV");
result.add("her-\treid", "h e@\taI d");
result.add("her-\tren", "h e@\tV n");
result.add("her-\tri-\tott", "h e@\ti:\tQ t");
result.add("her-\trick", "h e@\tI k");
result.add("her-\trin", "h e@\tI n");
result.add("her-\tring", "h e@\tI N");
result.add("her-\tring-\tton", "h e@\tI N\tt V n");
result.add("her-\tring-\tton's", "h e@\tI N\tt V n z");
result.add("her-\trings", "h e@\tI N z");
result.add("her-\trle", "h e@\tV l");
result.add("her-\trod", "h e@\tV d");
result.add("her-\tron", "h e@\tV n");
result.add("her-\tschel", "h @r\tS V l");
result.add("her-\tschel's", "h @r\tS V l z");
result.add("her-\tself", "h @r\ts e l f");
result.add("her-\tsey", "h @r\ts i:");
result.add("her-\tshey", "h @r\tS i:");
result.add("her-\tshey's", "h @r\tS i: z");
result.add("her-\tson", "h @r\ts V n");
result.add("her-\tta", "h @r\tt V");
result.add("her-\ttel", "h @r\tt V l");
result.add("her-\tter", "h @r\tt @r");
result.add("her-\ttha", "h @r\tT V");
result.add("her-\tvey", "h @r\tv eI");
result.add("her-\twick", "h @r\tw I k");
result.add("her-\twig", "h @r\tw I g");
result.add("her-\tze-\tgo-\tvi-\tna", "h e@ t\ts V\tg @U\tv i:\tn V");
result.add("her-\tze-\tgo-\tvi-\tna's", "h e@ t\ts V\tg @U\tv i:\tn V z");
result.add("her-\tzig", "h @r\tz I g");
result.add("her-\tzog", "h @r\tz Q g");
result.add("herb", "@r b");
result.add("herb-\tster", "h @r b\ts t @r");
result.add("herbs", "@r b z");
result.add("herb's", "@r b z");
result.add("herbst", "h @r b s t");
result.add("herd", "h @r d");
result.add("herd-\tman", "h @r d\tm V n");
result.add("herds", "h @r d z");
result.add("herds-\tmen", "h @r d\tz m e n");
result.add("here", "h I@");
result.add("here-\ta-\tbout", "h I@\tV\tb aU t");
result.add("here-\ta-\tbouts", "h I@\tV\tb aU t s");
result.add("here-\taf-\tter", "h I@\t{ f\tt @r");
result.add("here-\tby", "h I@\tb aI");
result.add("here-\tto-\tfore", "h I@\tt V\tf O@");
result.add("here-\twith", "h I@\tw I T");
result.add("here's", "h I@ z");
result.add("herl", "h @r l");
result.add("herm", "h @r m");
result.add("herms", "h @r m z");
result.add("hern", "h @r n");
result.add("hern-\tdon", "h @r n\td V n");
result.add("herne", "h @r n");
result.add("herr", "h e@");
result.add("herr-\tmann", "h e@\tm V n");
result.add("hers", "h @r z");
result.add("hers-\tko-\twitz", "h @r s\tk V\tw I t s");
result.add("hersch", "h @r S");
result.add("hersh", "h @r S");
result.add("hert", "h @r t");
result.add("hert-\tzog", "h @r t\tz V g");
result.add("hertz", "h e@ t s");
result.add("herve", "h @r v");
result.add("herz-\tberg", "h @r z\tb @r g");
result.add("he's", "h i: z");
result.add("hes-\tketh", "h e s\tk e T");
result.add("hes-\tpe-\tra", "h eI s\tp e@\tV");
result.add("hes-\tper", "h e s\tp @r");
result.add("hes-\tsel", "h e\ts V l");
result.add("hes-\tse's", "h e\ts V z");
result.add("hes-\tsian", "h e\tS V n");
result.add("hes-\tsite", "h e\ts aI t");
result.add("hes-\ttand", "h e s\tt V n d");
result.add("hes-\tter", "h e s\tt @r");
result.add("hes-\tther", "h e s\tD @r");
result.add("hes-\tti-\ta", "h e s\tt i:\tV");
result.add("hes-\tton", "h e s\tt V n");
result.add("hess", "h e s");
result.add("hess-\tler", "h e s\tl @r");
result.add("hess-\tton", "h e s\tt V n");
result.add("hess-\tton's", "h e s\tt V n z");
result.add("hesse", "h e s");
result.add("hew", "h j u:");
result.add("hew-\tlett", "h j u:\tl e t");
result.add("hewe", "h j u:");
result.add("hewes", "h j u: z");
result.add("hewn", "h j u: n");
result.add("hews", "h j u: z");
result.add("hext", "h e k s t");
result.add("hey", "h eI");
result.add("hey-\tday", "h eI\td eI");
result.add("hey-\tdon", "h eI\td V n");
result.add("hey-\ting", "h eI\tI N");
result.add("hey-\tman", "h eI\tm V n");
result.add("hey-\tmann", "h eI\tm V n");
result.add("hey-\tmann's", "h eI\tm V n z");
result.add("hey-\tman's", "h eI\tm V n z");
result.add("hey-\tward", "h eI\tw @r d");
result.add("hey-\twood", "h eI\tw U d");
result.add("heyde", "h eI d");
result.add("heys", "h eI z");
result.add("heyse", "h eI s");
result.add("hez-\tbol-\tlah", "h e z\tb Q\tl V");
result.add("hez-\tbol-\tlah's", "h e z\tb Q\tl V z");
result.add("hi", "h aI");
result.add("hi-\ta-\tle-\tah", "h aI\tV\tl i:\tV");
result.add("hi-\ta-\ttus", "h aI\teI\tt V s");
result.add("hi-\ta-\twa-\ttha", "h aI\tV\tw Q\tT V");
result.add("hi-\tatt", "h aI\tV t");
result.add("hi-\tatt's", "h aI\tV t s");
result.add("hi-\tba-\tchi", "h V\tb Q\ttS i:");
result.add("hi-\tber-\tna-\ttion", "h aI\tb @r\tn eI\tS V n");
result.add("hi-\tber-\tnate", "h aI\tb @r\tn eI t");
result.add("hi-\tber-\tni-\ta", "h aI\tb @r\tn i:\tV");
result.add("hi-\tber-\tni-\ta's", "h aI\tb @r\tn i:\tV z");
result.add("hi-\tchens", "h I\tk V n z");
result.add("hi-\tdal-\tgo", "h V\td { l\tg @U");
result.add("hi-\tde-\tous", "h I\td i:\tV s");
result.add("hi-\tde-\tous-\tly", "h I\td i:\tV s\tl i:");
result.add("hi-\tdea-\tway", "h aI\td V\tw eI");
result.add("hi-\tdeout", "h aI\td aU t");
result.add("hi-\tdeouts", "h aI\td aU t s");
result.add("hi-\tder", "h aI\td @r");
result.add("hi-\tding", "h aI\td I N");
result.add("hi-\tdy", "h aI\td i:");
result.add("hi-\tfi", "h aI\tf aI");
result.add("hi-\tgin-\tbo-\ttham", "h I\tg I n\tb V\tT V m");
result.add("hi-\tjac-\tker", "h aI\tdZ {\tk @r");
result.add("hi-\tjac-\tkers", "h aI\tdZ {\tk @r z");
result.add("hi-\tjac-\tking", "h aI\tdZ {\tk I N");
result.add("hi-\tjac-\tkings", "h aI\tdZ {\tk I N z");
result.add("hi-\tjack", "h aI\tdZ { k");
result.add("hi-\tjacked", "h aI\tdZ { k t");
result.add("hi-\tjinks", "h I\tdZ I N k s");
result.add("hi-\tker", "h aI\tk @r");
result.add("hi-\tkers", "h aI\tk @r z");
result.add("hi-\tking", "h aI\tk I N");
result.add("hi-\tla-\tri-\ta", "h i:\tl Q@\ti:\tV");
result.add("hi-\tla-\tri-\to", "h i:\tl Q@\ti:\t@U");
result.add("hi-\tla-\tri-\tous", "h V\tl e@\ti:\tV s");
result.add("hi-\tla-\tri-\tous-\tly", "h V\tl e@\ti:\tV s\tl i:");
result.add("hi-\tla-\tri-\tty", "h V\tl e@\tV\tt i:");
result.add("hi-\tla-\try", "h I\tl @r\ti:");
result.add("hi-\tland", "h I\tl V n d");
result.add("hi-\tlo", "h i:\tl @U");
result.add("hi-\tma-\tla-\tya", "h I\tm V\tl aI\tV");
result.add("hi-\tma-\tla-\tyan", "h I\tm V\tl eI\tV n");
result.add("hi-\tma-\tla-\tyas", "h I\tm V\tl aI\tV s");
result.add("hi-\tney", "h I\tn i:");
result.add("hi-\tra-\ti", "h I@\tQ\ti:");
result.add("hi-\tram", "h aI\tr V m");
result.add("hi-\tre", "h aI\t@r");
result.add("hi-\tred", "h aI\t@r d");
result.add("hi-\tres", "h aI\t@r z");
result.add("hi-\tring", "h aI\tr I N");
result.add("hi-\trings", "h aI\tr I N z");
result.add("hi-\tro", "h I@\t@U");
result.add("hi-\tro-\thi-\tto", "h I@\t@U\th i:\tt @U");
result.add("hi-\tro-\thi-\tto's", "h I@\t@U\th i:\tt @U z");
result.add("hi-\tro-\tshi", "h I@\t@U\tS i:");
result.add("hi-\tro-\tshi-\tma", "h I@\t@U\tS i:\tm V");
result.add("hi-\tta-\tchi", "h V\tt Q\ttS i:");
result.add("hi-\tto-\tshi", "h V\tt @U\tS i:");
result.add("hib-\tbard", "h I\tb @r d");
result.add("hib-\tben", "h I\tb V n");
result.add("hib-\tbert", "h I\tb @r t");
result.add("hib-\tbitts", "h I\tb I t s");
result.add("hibbs", "h I b z");
result.add("hic-\tcup", "h I\tk V p");
result.add("hic-\tcups", "h I\tk V p s");
result.add("hic-\tkey", "h I\tk i:");
result.add("hic-\tko-\tries", "h I\tk @r\ti: z");
result.add("hic-\tko-\try", "h I\tk @r\ti:");
result.add("hic-\tkok", "h I\tk V k");
result.add("hic-\tkox", "h I\tk Q k s");
result.add("hick", "h I k");
result.add("hick-\tman", "h I k\tm V n");
result.add("hicks", "h I k s");
result.add("hicks-\tville", "h I k\ts v I l");
result.add("hid", "h I d");
result.add("hid-\tden", "h I\td V n");
result.add("hide", "h aI d");
result.add("hide-\tbound", "h aI d\tb aU n d");
result.add("hide-\tout", "h aI\td aU t");
result.add("hides", "h aI d z");
result.add("hie-\tr-\tar-\tchy", "h aI\t@r\tQ@\tk i:");
result.add("hie-\trar-\tchi-\tcal", "h aI\tr Q@\tk I\tk V l");
result.add("hie-\trar-\tchies", "h aI\tr Q@\tk i: z");
result.add("hie-\trog-\tly-\tphic", "h aI\tr @U g\tl I\tf I k");
result.add("hie-\trog-\tly-\tphics", "h aI\tr @U g\tl I\tf I k s");
result.add("hie-\tstand", "h i: s\tt V n d");
result.add("hiems", "h i: m z");
result.add("hiett", "h aI t");
result.add("hig-\tbee", "h I g\tb i:");
result.add("hig-\tdon", "h I g\td V n");
result.add("hig-\tgin-\tbo-\ttham", "h I\tg I n\tb Q\tT V m");
result.add("hig-\tgin-\tson", "h I\tg I n\ts V n");
result.add("hig-\tgins", "h I\tg I n z");
result.add("hig-\tley", "h I g\tl i:");
result.add("higgs", "h I g z");
result.add("high", "h aI");
result.add("high-\tboy", "h aI\tb OI");
result.add("high-\tbrow", "h aI b\tr aU");
result.add("high-\tbrows", "h aI b\tr aU z");
result.add("high-\ter", "h aI\t@r");
result.add("high-\test", "h aI\tV s t");
result.add("high-\tfa-\tlu-\ttin", "h aI\tf V\tl u:\tt V n");
result.add("high-\tfield", "h aI\tf i: l d");
result.add("high-\tfli-\ter", "h aI f\tl aI\t@r");
result.add("high-\tfli-\ters", "h aI f\tl aI\t@r z");
result.add("high-\tfly-\ting", "h aI f\tl aI\tI N");
result.add("high-\tlan-\tder", "h aI\tl { n\td @r");
result.add("high-\tlan-\tders", "h aI\tl { n\td @r z");
result.add("high-\tland", "h aI\tl V n d");
result.add("high-\tlands", "h aI\tl V n d z");
result.add("high-\tligh-\tted", "h aI\tl aI\tt V d");
result.add("high-\tligh-\tting", "h aI\tl aI\tt I N");
result.add("high-\tlight", "h aI\tl aI t");
result.add("high-\tlights", "h aI\tl aI t s");
result.add("high-\tly", "h aI\tl i:");
result.add("high-\tman", "h aI\tm V n");
result.add("high-\tness", "h aI\tn V s");
result.add("high-\tri-\tses", "h aI\tr aI\tz V z");
result.add("high-\trise", "h aI\tr aI z");
result.add("high-\tschool", "h aI s\tk u: l");
result.add("high-\tsmith", "h aI s\tm I T");
result.add("high-\tspeed", "h aI s\tp i: d");
result.add("high-\tspi-\tri-\tted", "h aI s\tp I@\tI\td I d");
result.add("high-\tspi-\tri-\tted-\tness", "h aI s\tp I@\tI\td I d\tn V s");
result.add("high-\ttech", "h aI\tt e k");
result.add("high-\tto-\twer", "h aI\tt aU\t@r");
result.add("high-\tto-\twer's", "h aI\tt aU\t@r z");
result.add("high-\tway", "h aI\tw eI");
result.add("high-\tways", "h aI\tw eI z");
result.add("high-\tway's", "h aI\tw eI z");
result.add("highs", "h aI z");
result.add("hight", "h aI t");
result.add("hike", "h aI k");
result.add("hiked", "h aI k t");
result.add("hikes", "h aI k s");
result.add("hil-\tbert", "h I l\tb @r t");
result.add("hil-\tborn", "h I l\tb @r n");
result.add("hil-\tda", "h I l\td V");
result.add("hil-\tde-\tbran", "h I l\td V b\tr V n");
result.add("hil-\tde-\tbrand", "h I l\td V b\tr { n d");
result.add("hil-\tde-\tbrandt", "h I l\td V b\tr V n t");
result.add("hil-\tde-\tgard", "h I l\td V\tg Q@ d");
result.add("hil-\tde-\tgarde", "h I l\td I\tg Q@ d");
result.add("hil-\tdie", "h aI l\td i:");
result.add("hil-\tdreth", "h I l\td r e T");
result.add("hil-\tdy", "h I l\td i:");
result.add("hil-\tfi-\tger", "h I l\tf aI\tg @r");
result.add("hil-\tger", "h I l\tg @r");
result.add("hil-\tl-\tyer", "h I\tl i:\t@r");
result.add("hil-\tla", "h I\tl V");
result.add("hil-\tla-\try", "h I\tl @r\ti:");
result.add("hil-\tla-\try's", "h I\tl @r\ti: z");
result.add("hil-\tlard", "h I\tl @r d");
result.add("hil-\tlard's", "h I\tl @r d z");
result.add("hil-\tle-\tgass", "h I\tl I\tg V s");
result.add("hil-\tle-\try", "h I\tl @r\ti:");
result.add("hil-\tlea-\try", "h I\tl @r\ti:");
result.add("hil-\tlel", "h I\tl e l");
result.add("hil-\tler", "h I\tl @r");
result.add("hil-\tli-\ter", "h I\tl i:\t@r");
result.add("hil-\tliard", "h I l\tj Q@ d");
result.add("hil-\tling", "h I\tl I N");
result.add("hil-\tlis", "h I\tl I s");
result.add("hil-\tlock", "h I\tl V k");
result.add("hil-\tly", "h I\tl i:");
result.add("hil-\tton", "h I l\tt V n");
result.add("hil-\tton's", "h I l\tt V n z");
result.add("hild", "h I l d");
result.add("hilde", "h I l d");
result.add("hile", "h aI l");
result.add("hill", "h I l");
result.add("hill-\tbil-\tlies", "h I l\tb I\tl i: z");
result.add("hill-\tbil-\tly", "h I l\tb I\tl i:");
result.add("hill-\tcrest", "h I l\tk r e s t");
result.add("hill-\thouse", "h I l\th aU s");
result.add("hill-\tman", "h I l\tm { n");
result.add("hill-\tside", "h I l\ts aI d");
result.add("hill-\tsides", "h I l\ts aI d z");
result.add("hill-\ttop", "h I l\tt Q p");
result.add("hill-\ttops", "h I l\tt Q p s");
result.add("hills", "h I l z");
result.add("hill's", "h I l z");
result.add("hills-\tbo-\tro", "h I l\tz b @r\t@U");
result.add("hills-\tbo-\trough", "h I l\tz b @r\t@U");
result.add("hills-\tdale", "h I l\tz d eI l");
result.add("hills-\tman", "h I l\ts m V n");
result.add("hilt", "h I l t");
result.add("hilt-\tner", "h I l\tt n @r");
result.add("hilts", "h I l t s");
result.add("him", "h I m");
result.add("him-\tself", "h I m\ts e l f");
result.add("hime", "h aI m");
result.add("himm-\tler", "h I m\tl @r");
result.add("hin-\tde-\trer", "h I n\td @r\t@r");
result.add("hin-\tde-\tring", "h I n\td @r\tI N");
result.add("hin-\tder", "h I n\td @r");
result.add("hin-\tdered", "h I n\td @r d");
result.add("hin-\tders", "h I n\td @r z");
result.add("hin-\tdi", "h I n\td i:");
result.add("hin-\tdu", "h I n\td u:");
result.add("hin-\tdu-\ti-\tsm", "h I n\tdZ u:\tI\tz V m");
result.add("hin-\tdus", "h I n\td u: z");
result.add("hin-\tdus-\ttan", "h I n\td u: s\tt { n");
result.add("hin-\tger", "h I n\tdZ @r");
result.add("hin-\tges", "h I n\tdZ V z");
result.add("hin-\tgle", "h I N\tg V l");
result.add("hin-\tkel", "h I N\tk V l");
result.add("hin-\tkle", "h I N\tk V l");
result.add("hin-\tman", "h I n\tm V n");
result.add("hin-\tny", "h I\tn i:");
result.add("hin-\tson", "h I n\ts V n");
result.add("hin-\tted", "h I n\tt V d");
result.add("hin-\tter-\tland", "h I n\tt @r\tl { n d");
result.add("hin-\tter-\tlands", "h I n\tt @r\tl { n d z");
result.add("hin-\tting", "h I n\tt I N");
result.add("hin-\tton", "h I n\tt V n");
result.add("hinch", "h I n tS");
result.add("hinck-\tley", "h I N\tk l i:");
result.add("hind", "h aI n d");
result.add("hind-\tman", "h aI n\td m V n");
result.add("hind-\tquar-\tter", "h aI n\td w O@\tt @r");
result.add("hind-\tquar-\tters", "h aI n\td w O@\tt @r z");
result.add("hind-\tran-\tces", "h I n\td r V n\ts V z");
result.add("hind-\trance", "h I n\td r V n s");
result.add("hind-\tsight", "h aI n\td s aI t");
result.add("hind-\tsight's", "h aI n\td s aI t s");
result.add("hinds", "h aI n d z");
result.add("hine", "h aI n");
result.add("hines", "h aI n z");
result.add("hing", "h I N");
result.add("hing-\tham", "h I\tN V m");
result.add("hinge", "h I n dZ");
result.add("hinged", "h I n dZ d");
result.add("hink-\tley", "h I N\tk l i:");
result.add("hins-\tdale", "h I n\ts d eI l");
result.add("hint", "h I n t");
result.add("hints", "h I n t s");
result.add("hintze", "h I n t z");
result.add("hinze", "h I n z");
result.add("hip", "h I p");
result.add("hip-\tbone", "h I p\tb @U n");
result.add("hip-\tbones", "h I p\tb @U n z");
result.add("hip-\tpen", "h I\tp V n");
result.add("hip-\tper", "h I\tp @r");
result.add("hip-\tpest", "h I\tp V s t");
result.add("hip-\tpie", "h I\tp i:");
result.add("hip-\tpies", "h I\tp i: z");
result.add("hip-\tple", "h I\tp V l");
result.add("hip-\tpo", "h I\tp @U");
result.add("hip-\tpo-\tcra-\ttic", "h I\tp V k\tr {\tt I k");
result.add("hip-\tpo-\tcrates", "h I\tp V k\tr eI t s");
result.add("hip-\tpo-\tly-\ttus", "h V\tp Q\tl V\tt V s");
result.add("hip-\tpo-\tpo-\tta-\tmu-\tses", "h I\tp V\tp Q\tt V\tm V\ts V z");
result.add("hip-\tpo-\tpo-\tta-\tmus", "h I\tp V\tp Q\tt V\tm V s");
result.add("hip-\tpod-\trome", "h I\tp V d\tr @U m");
result.add("hip-\tpos", "h I\tp @U z");
result.add("hips", "h I p s");
result.add("hir-\tsch's", "h @r\tS V z");
result.add("hirsch", "h @r S");
result.add("hirsch-\tfeld", "h @r S\tf e l d");
result.add("hirsh", "h @r S");
result.add("hirst", "h @r s t");
result.add("his", "h I z");
result.add("his-\tpa-\tnic", "h V s\tp {\tn I k");
result.add("his-\tpa-\tnics", "h V s\tp {\tn I k s");
result.add("his-\tpa-\tno", "h V s\tp Q\tn @U");
result.add("his-\tself", "h I\ts e l f");
result.add("his-\tses", "h I\ts V z");
result.add("his-\tsing", "h I\ts I N");
result.add("his-\ts's", "h I\ts V z");
result.add("his-\tta-\tmine", "h I s\tt V\tm i: n");
result.add("his-\ttad-\trut", "h I s\tt V d\tr V t");
result.add("his-\tti-\tdine", "h I s\tt I\td i: n");
result.add("his-\tto-\tgram", "h I s\tt V g\tr { m");
result.add("his-\tto-\tgrams", "h I s\tt V g\tr { m z");
result.add("his-\tto-\tlo-\tgy", "h I s\tt Q\tl V\tdZ i:");
result.add("his-\tto-\tri-\tan", "h I s\tt O@\ti:\tV n");
result.add("his-\tto-\tri-\tans", "h I s\tt O@\ti:\tV n z");
result.add("his-\tto-\tri-\tcal", "h I s\tt O@\tI\tk V l");
result.add("his-\tto-\tri-\tcal-\tly", "h I s\tt O@\tI\tk V\tl i:");
result.add("his-\tto-\tric", "h I s\tt O@\tI k");
result.add("his-\tto-\try", "h I s\tt @r\ti:");
result.add("his-\tto-\try's", "h I s\tt @r\ti: z");
result.add("hiss", "h I s");
result.add("hissed", "h I s t");
result.add("hist-\tri-\to-\tnic", "h I s\tt r i:\tQ\tn I k");
result.add("hist-\tri-\to-\tnics", "h I s\tt r i:\tQ\tn I k s");
result.add("hit", "h I t");
result.add("hit-\tches", "h I\ttS V z");
result.add("hit-\tching", "h I\ttS I N");
result.add("hit-\tchins", "h I\ttS I n z");
result.add("hit-\ther", "h I\tD @r");
result.add("hit-\ther-\tto", "h I\tD @r\tt u:");
result.add("hit-\tler", "h I t\tl @r");
result.add("hit-\tler's", "h I t\tl @r z");
result.add("hit-\tman", "h I t\tm { n");
result.add("hit-\tter", "h I\tt @r");
result.add("hit-\tters", "h I\tt @r z");
result.add("hit-\tting", "h I\tt I N");
result.add("hit-\ttite", "h I\tt aI t");
result.add("hitch", "h I tS");
result.add("hitch-\tcock", "h I tS\tk Q k");
result.add("hitch-\tcock's", "h I tS\tk Q k s");
result.add("hitch-\thi-\tking", "h I tS\th aI\tk I N");
result.add("hitch-\thike", "h I tS\th aI k");
result.add("hitched", "h I tS t");
result.add("hite", "h aI t");
result.add("hits", "h I t s");
result.add("hitt", "h I t");
result.add("hive", "h aI v");
result.add("hives", "h aI v z");
result.add("hix-\tson", "h I k\ts V n");
result.add("hiz-\tbol-\tlah", "h I z\tb @U\tl V");
result.add("hmong", "m O: N");
result.add("ho", "h @U");
result.add("ho-\tban", "h @U\tb V n");
result.add("ho-\tbart", "h @U\tb Q@ t");
result.add("ho-\tbo", "h @U\tb @U");
result.add("ho-\tbo-\tken", "h @U\tb @U\tk V n");
result.add("ho-\tboes", "h @U\tb @U z");
result.add("ho-\tcus", "h @U\tk V s");
result.add("ho-\tey", "h @U\ti:");
result.add("ho-\tfer", "h @U\tf @r");
result.add("ho-\tgan", "h @U\tg Q n");
result.add("ho-\tgans", "h @U\tg Q n z");
result.add("ho-\tgan's", "h @U\tg Q n z");
result.add("ho-\tgarth", "h @U\tg Q@ T");
result.add("ho-\tge-\tland", "h Q\tg V\tl V n d");
result.add("ho-\tgen", "h Q\tg V n");
result.add("ho-\tgle", "h @U\tg V l");
result.add("ho-\tkan-\tson", "h Q\tk V n\ts V n");
result.add("ho-\tkey", "h @U\tk i:");
result.add("ho-\tkum", "h @U\tk V m");
result.add("ho-\tli-\tday", "h Q\tl I\td eI");
result.add("ho-\tli-\tdays", "h Q\tl I\td eI z");
result.add("ho-\tli-\tday's", "h Q\tl I\td eI z");
result.add("ho-\tli-\ter", "h @U\tl i:\t@r");
result.add("ho-\tli-\test", "h @U\tl i:\tV s t");
result.add("ho-\tli-\tness", "h @U\tl i:\tn V s");
result.add("ho-\tling", "h @U\tl I N");
result.add("ho-\tlis-\ttic", "h @U\tl I s\tt I k");
result.add("ho-\tlo-\tcaust", "h Q\tl V\tk O: s t");
result.add("ho-\tlo-\tgra-\tphic", "h Q\tl V g\tr {\tf I k");
result.add("ho-\tlo-\tgram", "h Q\tl V g\tr { m");
result.add("ho-\tlo-\tgrams", "h Q\tl V g\tr { m z");
result.add("ho-\tlub", "h @U\tl V b");
result.add("ho-\tly", "h @U\tl i:");
result.add("ho-\tly-\toke", "h @U\tl i:\t@U k");
result.add("ho-\tmage", "Q\tm V dZ");
result.add("ho-\tmans", "h @U\tm V n z");
result.add("ho-\tme-\to-\tpa-\tthic", "h @U\tm i:\t@U\tp {\tT I k");
result.add("ho-\tme-\to-\tpa-\tthy", "h @U\tm i:\t@U\tp {\tT i:");
result.add("ho-\tme-\tos-\tta-\tsis", "h @U\tm i:\t@U s\tt eI\ts I s");
result.add("ho-\tme-\tos-\tta-\ttic", "h @U\tm i:\t@U s\tt {\tt I k");
result.add("ho-\tme-\tric", "h @U\tm e@\tI k");
result.add("ho-\tmer", "h @U\tm @r");
result.add("ho-\tmers", "h @U\tm @r z");
result.add("ho-\tmer's", "h @U\tm @r z");
result.add("ho-\tmey", "h @U\tm i:");
result.add("ho-\tmi-\tci-\tdal", "h Q\tm I\ts aI\td V l");
result.add("ho-\tmi-\tcide", "h Q\tm I\ts aI d");
result.add("ho-\tmi-\tcides", "h Q\tm I\ts aI d z");
result.add("ho-\tmi-\tle-\ttic", "h Q\tm I\tl e\tt I k");
result.add("ho-\tmi-\tlies", "h @U\tm I\tl i: z");
result.add("ho-\tmi-\tly", "h Q\tm I\tl i:");
result.add("ho-\tmi-\tnem", "h Q\tm I\tn e m");
result.add("ho-\tmi-\tnid", "h Q\tm I\tn I d");
result.add("ho-\tmi-\tny", "h Q\tm I\tn i:");
result.add("ho-\tming", "h @U\tm I N");
result.add("ho-\tmo", "h @U\tm @U");
result.add("ho-\tmo-\tge-\tne-\ti-\tty", "h Q\tm V\tdZ V\tn i:\tV\tt i:");
result.add("ho-\tmo-\tge-\tne-\tous", "h @U\tm V\tdZ i:\tn i:\tV s");
result.add("ho-\tmo-\tge-\tni-\tza-\ttion", "h @U\tm Q\tdZ V\tn V\tz eI\tS V n");
result.add("ho-\tmo-\tge-\tnize", "h @U\tm Q\tdZ V\tn aI z");
result.add("ho-\tmo-\tge-\tnized", "h @U\tm Q\tdZ V\tn aI z d");
result.add("ho-\tmo-\tge-\tnous", "h V\tm Q\tdZ V\tn V s");
result.add("ho-\tmo-\tge-\tny", "h @U\tm Q\tdZ V\tn i:");
result.add("ho-\tmo-\tpho-\tbi-\ta", "h @U\tm V\tf @U\tb i:\tV");
result.add("ho-\tmo-\tpho-\tbic", "h @U\tm V\tf @U\tb I k");
result.add("ho-\tmo-\tse-\txu-\ta-\tli-\tty", "h @U\tm @U\ts e k\tS V\tw {\tl V\tt i:");
result.add("ho-\tmo-\tse-\txu-\tal", "h @U\tm @U\ts e k\tS V\tw V l");
result.add("ho-\tmo-\tse-\txu-\tals", "h @U\tm @U\ts e k\tS V\tw V l z");
result.add("ho-\tmo-\tspo-\trous", "h V\tm Q s\tp @r\tV s");
result.add("ho-\tmo-\tzy-\tgote", "h @U\tm @U\tz aI\tg @U t");
result.add("ho-\tmo-\tzy-\tgous", "h @U\tm @U\tz aI\tg V s");
result.add("ho-\tna-\tker", "h Q\tn V\tk @r");
result.add("ho-\tnan", "h @U\tn V n");
result.add("ho-\tne-\ta", "h Q\tn i:\tV");
result.add("ho-\tnec-\tker", "h @U\tn e\tk @r");
result.add("ho-\tnec-\tker's", "h @U\tn e\tk @r z");
result.add("ho-\tner", "h @U\tn @r");
result.add("ho-\tnes-\tty", "Q\tn V s\tt i:");
result.add("ho-\tnest", "Q\tn V s t");
result.add("ho-\tnest-\tly", "Q\tn V s\tt l i:");
result.add("ho-\tney", "h V\tn i:");
result.add("ho-\tney-\tbee", "h V\tn i:\tb i:");
result.add("ho-\tney-\tbees", "h V\tn i:\tb i: z");
result.add("ho-\tney-\tcomb", "h V\tn i:\tk @U m");
result.add("ho-\tney-\tdew", "h V\tn i:\td u:");
result.add("ho-\tney-\tman", "h Q\tn i:\tm V n");
result.add("ho-\tney-\tmoo-\tner", "h V\tn i:\tm u:\tn @r");
result.add("ho-\tney-\tmoo-\tners", "h V\tn i:\tm u:\tn @r z");
result.add("ho-\tney-\tmoon", "h V\tn i:\tm u: n");
result.add("ho-\tney-\tmooned", "h V\tn i:\tm u: n d");
result.add("ho-\tney-\tmoons", "h V\tn i:\tm u: n z");
result.add("ho-\tney-\tsuc-\tkle", "h V\tn i:\ts V\tk V l");
result.add("ho-\tney-\tsuc-\tkles", "h V\tn i:\ts V\tk V l z");
result.add("ho-\tney-\twell", "h V\tn i:\tw e l");
result.add("ho-\tney-\twell's", "h V\tn i:\tw e l z");
result.add("ho-\tneys", "h V\tn i: z");
result.add("ho-\tnig", "h Q\tn I g");
result.add("ho-\tning", "h @U\tn I N");
result.add("ho-\tno-\tlu-\tlu", "h Q\tn V\tl u:\tl u:");
result.add("ho-\tno-\tlu-\tlu's", "h Q\tn V\tl u:\tl u: z");
result.add("ho-\tno-\tra", "O:\tn O@\tV");
result.add("ho-\tno-\tra-\tble", "Q\tn @r\tV\tb V l");
result.add("ho-\tno-\tra-\tri-\ta", "Q\tn @r\te@\ti:\tV");
result.add("ho-\tno-\tra-\tri-\tum", "Q\tn @r\te@\ti:\tV m");
result.add("ho-\tno-\tra-\tri-\tums", "Q\tn @r\te@\ti:\tV m z");
result.add("ho-\tno-\tra-\try", "Q\tn @r\te@\ti:");
result.add("ho-\tno-\trab-\tly", "Q\tn @r\tV b\tl i:");
result.add("ho-\tno-\tree", "Q\tn @r\ti:");
result.add("ho-\tno-\trees", "Q\tn @r\ti: z");
result.add("ho-\tno-\tri-\ta", "Q\tn @r\ti:\tV");
result.add("ho-\tno-\tri-\tfic", "Q\tn @r\tI\tf I k");
result.add("ho-\tno-\tring", "Q\tn @r\tI N");
result.add("ho-\tnor", "Q\tn @r");
result.add("ho-\tnore", "Q\tn @r");
result.add("ho-\tnored", "Q\tn @r d");
result.add("ho-\tnors", "Q\tn @r z");
result.add("ho-\tnor's", "Q\tn @r z");
result.add("ho-\tpi", "h @U\tp i:");
result.add("ho-\tping", "h @U\tp I N");
result.add("ho-\tra", "h O@\tV");
result.add("ho-\tra-\tce's", "h O@\tV\ts V z");
result.add("ho-\tra-\tci-\to", "h O@\teI\ts i:\t@U");
result.add("ho-\tra-\tti-\to's", "h O@\teI\tS i:\t@U z");
result.add("ho-\tra-\ttia", "h O@\tQ\tS V");
result.add("ho-\tra-\ttian", "h @r\teI\tS V n");
result.add("ho-\tra-\ttio", "h @r\teI\tS @U");
result.add("ho-\tra-\ttius", "h O@\teI\tS V s");
result.add("ho-\trace", "h O@\tV s");
result.add("ho-\tran", "h O@\tV n");
result.add("ho-\tren-\tstein", "h O@\tV n\ts t aI n");
result.add("ho-\tri-\tzon", "h @r\taI\tz V n");
result.add("ho-\tri-\tzon-\ttal", "h O@\tI\tz Q n\tt V l");
result.add("ho-\tri-\tzon-\ttal-\tly", "h O@\tI\tz Q n\tt V\tl i:");
result.add("ho-\tri-\tzons", "h @r\taI\tz V n z");
result.add("ho-\tri-\tzon's", "h @r\taI\tz V n z");
result.add("ho-\tro-\tscope", "h O@\tV s\tk @U p");
result.add("ho-\tro-\tscopes", "h O@\tV s\tk @U p s");
result.add("ho-\tro-\twitz", "h O@\t@U\tI t s");
result.add("ho-\trus", "h O@\tV s");
result.add("ho-\tse-\ta", "h @U\tz i:\tV");
result.add("ho-\tse-\ta's", "h @U\tz i:\tV z");
result.add("ho-\tses", "h @U\tz V z");
result.add("ho-\tsey", "h @U\tz i:");
result.add("ho-\tsie-\try", "h @U\tZ @r\ti:");
result.add("ho-\tsing", "h @U\tz I N");
result.add("ho-\tte-\tlier", "h @U\tt e l\tj @r");
result.add("ho-\tte-\tliers", "h @U\tt e l\tj @r z");
result.add("ho-\ttel", "h @U\tt e l");
result.add("ho-\ttels", "h @U\tt e l z");
result.add("ho-\ttel's", "h @U\tt e l z");
result.add("ho-\tur", "aU\t@r");
result.add("ho-\tur-\tglass", "aU\t@r g\tl { s");
result.add("ho-\tur's", "aU\t@r z");
result.add("ho-\tve-\tring", "h V\tv @r\tI N");
result.add("ho-\tvel", "h V\tv V l");
result.add("ho-\tvels", "h V\tv V l z");
result.add("ho-\tven", "h @U\tv V n");
result.add("ho-\tver", "h V\tv @r");
result.add("ho-\tver-\tcraft", "h V\tv @r k\tr { f t");
result.add("ho-\tvered", "h V\tv @r d");
result.add("ho-\tvers", "h V\tv @r z");
result.add("ho-\tvey", "h @U\tv i:");
result.add("ho-\tving", "h @U\tv I N");
result.add("ho-\tward", "h aU\t@r d");
result.add("ho-\tward's", "h aU\t@r d z");
result.add("ho-\twarth", "h aU\tQ@ T");
result.add("ho-\twell", "h aU\tV l");
result.add("ho-\twells", "h aU\tV l z");
result.add("ho-\twell's", "h aU\tV l z");
result.add("ho-\twey", "h aU\ti:");
result.add("ho-\twi-\tson", "h aU\tI\ts V n");
result.add("ho-\twie", "h aU\ti:");
result.add("ho-\twie's", "h aU\ti: z");
result.add("ho-\twit-\tzer", "h aU\tI t\ts @r");
result.add("ho-\twit-\tzers", "h aU\tI t\ts @r z");
result.add("ho-\txie", "h Q k\ts i:");
result.add("hoa-\tgie", "h @U\tg i:");
result.add("hoa-\tgy", "h @U\tg i:");
result.add("hoa-\try", "h O@\ti:");
result.add("hoa-\txes", "h @U k\ts V z");
result.add("hoag", "h @U g");
result.add("hoag-\tland", "h @U g\tl V n d");
result.add("hoang", "h @U N");
result.add("hoar", "h O@");
result.add("hoar-\tded", "h O@\td V d");
result.add("hoar-\tding", "h O@\td I N");
result.add("hoard", "h O@ d");
result.add("hoards", "h O@ d z");
result.add("hoare", "h O@");
result.add("hoarse", "h O@ s");
result.add("hoarse-\tness", "h O@ s\tn V s");
result.add("hoax", "h @U k s");
result.add("hob", "h Q b");
result.add("hob-\tb-\tling", "h Q\tb V\tl I N");
result.add("hob-\tbes", "h Q\tb i: z");
result.add("hob-\tbie", "h Q\tb i:");
result.add("hob-\tbies", "h Q\tb i: z");
result.add("hob-\tbing", "h Q\tb I N");
result.add("hob-\tble", "h Q\tb V l");
result.add("hob-\tbled", "h Q\tb V l d");
result.add("hob-\tbles", "h Q\tb V l z");
result.add("hob-\tby", "h Q\tb i:");
result.add("hob-\tby-\tist", "h Q\tb i:\tI s t");
result.add("hob-\tby-\tists", "h Q\tb i:\tI s t s");
result.add("hob-\tday", "h Q b\td eI");
result.add("hob-\tgood", "h Q b\tg U d");
result.add("hob-\tnail", "h Q b\tn eI l");
result.add("hob-\tnob", "h Q b\tn Q b");
result.add("hob-\tnob-\tbing", "h Q b\tn Q\tb I N");
result.add("hob-\tson", "h Q b\ts V n");
result.add("hob-\tson's", "h Q b\ts V n z");
result.add("hobbs", "h Q b z");
result.add("hobs", "h Q b z");
result.add("hoc", "h Q k");
result.add("hoc-\tka-\tday", "h Q\tk V\td eI");
result.add("hoc-\tker", "h Q\tk @r");
result.add("hoc-\tkey", "h Q\tk i:");
result.add("hoc-\tkey's", "h Q\tk i: z");
result.add("hoc-\tking", "h Q\tk I N");
result.add("hoch", "h Q k");
result.add("hoch-\tman", "h Q k\tm V n");
result.add("hock", "h Q k");
result.add("hock-\tley", "h Q k\tl i:");
result.add("hock-\tney", "h Q k\tn i:");
result.add("hock-\tney's", "h Q k\tn i: z");
result.add("hod-\tder", "h Q\td @r");
result.add("hod-\tding", "h Q\td I N");
result.add("hod-\tgen", "h Q\tdZ V n");
result.add("hod-\tges", "h Q\tdZ V z");
result.add("hod-\tge's", "h Q\tdZ V z");
result.add("hodg-\tkin", "h Q dZ\tk I n");
result.add("hodg-\tkin-\tson", "h Q dZ\tk I n\ts V n");
result.add("hodg-\tkin's", "h Q dZ\tk I n z");
result.add("hodg-\tson", "h Q dZ\ts V n");
result.add("hodge", "h Q dZ");
result.add("hodge-\tpodge", "h Q dZ\tp Q dZ");
result.add("hoe", "h @U");
result.add("hoe-\tdown", "h @U\td aU n");
result.add("hoe-\ting", "h @U\tI N");
result.add("hoe-\tne", "h Q\ti: n");
result.add("hoeg", "h @U g");
result.add("hoehne", "h @U n");
result.add("hoek", "h @U k");
result.add("hoes", "h @U z");
result.add("hof-\tfa", "h O:\tf V");
result.add("hof-\tfarth", "h O:\tf Q@ T");
result.add("hof-\tfa's", "h O:\tf V z");
result.add("hof-\tfer", "h Q\tf @r");
result.add("hof-\tfert", "h O:\tf @r t");
result.add("hof-\tmann", "h Q f\tm V n");
result.add("hof-\tstet-\tter", "h Q f\ts t e\tt @r");
result.add("hoff", "h O: f");
result.add("hoff-\tman", "h O: f\tm V n");
result.add("hoff-\tmann", "h O: f\tm V n");
result.add("hoff-\tman's", "h O: f\tm V n z");
result.add("hoff-\tmeis-\tter", "h O: f\tm aI s\tt @r");
result.add("hog", "h Q g");
result.add("hog-\tging", "h O:\tg I N");
result.add("hog-\tnose", "h Q g\tn @U z");
result.add("hog-\twash", "h Q g\tw Q S");
result.add("hogg", "h Q g");
result.add("hogs", "h Q g z");
result.add("hogue", "h @U g");
result.add("hoh", "h @U");
result.add("hoi", "h OI");
result.add("hoi-\tsing-\tton", "h OI\tz I N\tt V n");
result.add("hois-\tted", "h OI s\tt V d");
result.add("hois-\tting", "h OI s\tt I N");
result.add("hoist", "h OI s t");
result.add("hoists", "h OI s t s");
result.add("hoit", "h OI t");
result.add("hok-\tkai-\tdo", "h @U\tk aI\td @U");
result.add("hoke", "h @U k");
result.add("hol-\tbein", "h @U l\tb aI n");
result.add("hol-\tberg", "h @U l\tb @r g");
result.add("hol-\tbrook", "h @U l\tb r U k");
result.add("hol-\tbrooke", "h @U l\tb r U k");
result.add("hol-\tcomb", "h @U l\tk V m");
result.add("hol-\tcombe", "h @U l\tk V m");
result.add("hol-\tden", "h @U l\td V n");
result.add("hol-\tden's", "h @U l\td V n z");
result.add("hol-\tder", "h @U l\td @r");
result.add("hol-\tder-\tness", "h @U l\td @r\tn V s");
result.add("hol-\tders", "h @U l\td @r z");
result.add("hol-\tder's", "h @U l\td @r z");
result.add("hol-\tding", "h @U l\td I N");
result.add("hol-\tdings", "h @U l\td I N z");
result.add("hol-\tding's", "h @U l\td I N z");
result.add("hol-\tdo-\tver", "h @U l\td @U\tv @r");
result.add("hol-\tdo-\tvers", "h @U l\td @U\tv @r z");
result.add("hol-\tdout", "h @U l\td aU t");
result.add("hol-\tdouts", "h @U l\td aU t s");
result.add("hol-\tdup", "h @U l\td V p");
result.add("hol-\tdups", "h @U l\td V p s");
result.add("hol-\tgate", "h @U l\tg eI t");
result.add("hol-\tguin", "h @U l\tg I n");
result.add("hol-\tla-\tday", "h Q\tl I\td eI");
result.add("hol-\tlan-\tder", "h Q\tl V n\td @r");
result.add("hol-\tlan-\tders", "h Q\tl V n\td @r z");
result.add("hol-\tland", "h Q\tl V n d");
result.add("hol-\tlands", "h Q\tl V n d z");
result.add("hol-\tland's", "h Q\tl V n d z");
result.add("hol-\tle-\tran", "h Q\tl @r\tV n");
result.add("hol-\tle-\tring", "h Q\tl @r\tI N");
result.add("hol-\tlen-\tbeck", "h Q\tl V n\tb e k");
result.add("hol-\tlen-\tberg", "h Q\tl V n\tb @r g");
result.add("hol-\tler", "h Q\tl @r");
result.add("hol-\tlered", "h Q\tl @r d");
result.add("hol-\tlers", "h Q\tl @r z");
result.add("hol-\tley", "h Q\tl i:");
result.add("hol-\tli-\tday", "h Q\tl I\td eI");
result.add("hol-\tli-\tday's", "h Q\tl I\td eI z");
result.add("hol-\tli-\tston", "h Q\tl I s\tt V n");
result.add("hol-\tlie", "h Q\tl i:");
result.add("hol-\tlies", "h Q\tl i: z");
result.add("hol-\tlin", "h Q\tl I n");
result.add("hol-\tlin-\tger", "h Q\tl I\tN @r");
result.add("hol-\tling-\tshead", "h Q\tl I N\tz h e d");
result.add("hol-\tling-\tsworth", "h Q\tl I N\tz w @r T");
result.add("hol-\tlins", "h Q\tl I n z");
result.add("hol-\tlis", "h Q\tl I s");
result.add("hol-\tlis-\tter", "h Q\tl I s\tt @r");
result.add("hol-\tlo", "h Q\tl @U");
result.add("hol-\tlo-\tman", "h Q\tl @U\tm V n");
result.add("hol-\tlo-\tway", "h Q\tl @U\tw eI");
result.add("hol-\tlo-\twing", "h Q\tl @U\tI N");
result.add("hol-\tlow", "h Q\tl @U");
result.add("hol-\tlowed", "h Q\tl @U d");
result.add("hol-\tlows", "h Q\tl @U z");
result.add("hol-\tly", "h Q\tl i:");
result.add("hol-\tly-\thock", "h Q\tl i:\th Q k");
result.add("hol-\tly-\thocks", "h Q\tl i:\th Q k s");
result.add("hol-\tly-\twood", "h Q\tl i:\tw U d");
result.add("hol-\tly-\twood's", "h Q\tl i:\tw U d z");
result.add("hol-\tly's", "h Q\tl i: z");
result.add("hol-\tman", "h Q l\tm V n");
result.add("hol-\tmen", "h Q l\tm e n");
result.add("hol-\tmi-\tum", "h @U l\tm i:\tV m");
result.add("hol-\tton", "h @U l\tt V n");
result.add("hol-\ttorf", "h @U l\tt @r f");
result.add("hold", "h @U l d");
result.add("hold-\tfast", "h @U l\tf { s t");
result.add("hold-\tman", "h @U l\td m V n");
result.add("hold-\tup", "h @U l\td V p");
result.add("holds", "h @U l d z");
result.add("hole", "h @U l");
result.add("hole-\tman", "h @U l\tm V n");
result.add("holed", "h @U l d");
result.add("holes", "h @U l z");
result.add("holl", "h Q l");
result.add("holle", "h Q l");
result.add("holm", "h @U m");
result.add("holme", "h @U l m");
result.add("holmes", "h @U m z");
result.add("hols-\ttein", "h @U l\ts t i: n");
result.add("hols-\tter", "h @U l\ts t @r");
result.add("hols-\tworth", "h @U l\ts w @r T");
result.add("holst", "h @U l s t");
result.add("holt", "h @U l t");
result.add("holt-\tz's", "h @U l\tt s V z");
result.add("holts", "h @U l t s");
result.add("holt's", "h @U l t s");
result.add("holtz", "h @U l t s");
result.add("holz-\tman", "h @U l\tz m V n");
result.add("hom", "h Q m");
result.add("hom-\tbre", "h Q m\tb r V");
result.add("hom-\tburg", "h Q m\tb @r g");
result.add("hom-\tmel", "h Q\tm V l");
result.add("home", "h @U m");
result.add("home-\tbound", "h @U m\tb aU n d");
result.add("home-\tboys", "h @U m\tb OI z");
result.add("home-\tbuil-\tder", "h @U m\tb I l\td @r");
result.add("home-\tbuil-\tders", "h @U m\tb I l\td @r z");
result.add("home-\tbuil-\tding", "h @U m\tb I l\td I N");
result.add("home-\tbuy-\ter", "h @U m\tb aI\t@r");
result.add("home-\tbuy-\ters", "h @U m\tb aI\t@r z");
result.add("home-\tco-\tming", "h @U m\tk V\tm I N");
result.add("home-\tgrown", "h @U m\tg r @U n");
result.add("home-\tland", "h @U m\tl { n d");
result.add("home-\tlands", "h @U m\tl { n d z");
result.add("home-\tland's", "h @U m\tl { n d z");
result.add("home-\tless", "h @U m\tl V s");
result.add("home-\tless-\tness", "h @U m\tl V s\tn V s");
result.add("home-\tlike", "h @U m\tl aI k");
result.add("home-\tly", "h @U m\tl i:");
result.add("home-\tma-\tker", "h @U m\tm eI\tk @r");
result.add("home-\tma-\tkers", "h @U m\tm eI\tk @r z");
result.add("home-\tma-\tking", "h @U m\tm eI\tk I N");
result.add("home-\tmade", "h @U m\tm eI d");
result.add("home-\tow-\tner", "h @U\tm @U\tn @r");
result.add("home-\tow-\tner-\tship", "h @U\tm @U\tn @r\tS I p");
result.add("home-\tow-\tners", "h @U\tm @U\tn @r z");
result.add("home-\tpor-\tting", "h @U m\tp O@\tt I N");
result.add("home-\trun", "h @U m\tr V n");
result.add("home-\tschool", "h @U m\ts k u: l");
result.add("home-\tsick", "h @U m\ts I k");
result.add("home-\tsick-\tness", "h @U m\ts I k\tn V s");
result.add("home-\tstea-\tded", "h @U m\ts t e\td V d");
result.add("home-\tstea-\tder", "h @U m\ts t e\td @r");
result.add("home-\tstea-\tders", "h @U m\ts t e\td @r z");
result.add("home-\tstead", "h @U m\ts t e d");
result.add("home-\tstead's", "h @U m\ts t e d z");
result.add("home-\tstretch", "h @U m\ts t r e tS");
result.add("home-\ttown", "h @U m\tt aU n");
result.add("home-\tward", "h @U m\tw @r d");
result.add("home-\twood", "h @U m\tw U d");
result.add("home-\twor-\tker", "h @U m\tw @r\tk @r");
result.add("home-\twor-\tkers", "h @U m\tw @r\tk @r z");
result.add("home-\twork", "h @U m\tw @r k");
result.add("homed", "h @U m d");
result.add("homes", "h @U m z");
result.add("home's", "h @U m z");
result.add("homes-\tpun", "h @U m\ts p V n");
result.add("homme", "h Q m");
result.add("hommes", "h Q m z");
result.add("homs", "h Q m z");
result.add("hon", "h Q n");
result.add("hon-\tcho", "h O: n\ttS @U");
result.add("hon-\tda", "h O: n\td V");
result.add("hon-\tdas", "h Q n\td V s");
result.add("hon-\tda's", "h Q n\td V z");
result.add("hon-\tdo", "h Q n\td @U");
result.add("hon-\tdu-\tran", "h Q n\td U@\tV n");
result.add("hon-\tdu-\trans", "h Q n\td U@\tV n z");
result.add("hon-\tdu-\tras", "h Q n\td U@\tV s");
result.add("hon-\tking", "h O: N\tk I N");
result.add("hon-\tky", "h O: N\tk i:");
result.add("hon-\tshu", "h Q n\tS u:");
result.add("hone", "h @U n");
result.add("honed", "h @U n d");
result.add("hong", "h O: N");
result.add("hong-\tkong", "h O: N\tk O: N");
result.add("honk", "h Q N k");
result.add("hons", "h Q n z");
result.add("hoo", "h u:");
result.add("hoo-\tded", "h U\td V d");
result.add("hoo-\tdlum", "h U d\tl V m");
result.add("hoo-\tdlums", "h u: d\tl V m z");
result.add("hoo-\tey", "h u:\ti:");
result.add("hoo-\tker", "h U\tk @r");
result.add("hoo-\tkers", "h U\tk @r z");
result.add("hoo-\tker's", "h U\tk @r z");
result.add("hoo-\tking", "h U\tk I N");
result.add("hoo-\tkup", "h U\tk V p");
result.add("hoo-\tkups", "h U\tk V p s");
result.add("hoo-\tky", "h U\tk i:");
result.add("hoo-\tley", "h u:\tl i:");
result.add("hoo-\tli-\tga-\tni-\tsm", "h u:\tl I\tg V\tn I\tz V m");
result.add("hoo-\tli-\tgan", "h u:\tl I\tg V n");
result.add("hoo-\tli-\tgans", "h u:\tl I\tg V n z");
result.add("hoo-\tli-\than", "h u:\tl I\th { n");
result.add("hoo-\tper", "h u:\tp @r");
result.add("hoo-\tper-\tman", "h u:\tp @r\tm V n");
result.add("hoo-\tpoe", "h u:\tp u:");
result.add("hoo-\tray", "h U@\teI");
result.add("hoo-\tsier", "h u:\tZ @r");
result.add("hoo-\tsiers", "h u: z\tj @r z");
result.add("hoo-\tted", "h u:\tt V d");
result.add("hoo-\tter", "h u:\tt @r");
result.add("hoo-\tters", "h u:\tt @r z");
result.add("hoo-\tton", "h u:\tt V n");
result.add("hoo-\tven", "h u:\tv V n");
result.add("hoo-\tver", "h u:\tv @r");
result.add("hoo-\tver's", "h u:\tv @r z");
result.add("hooch", "h u: tS");
result.add("hood", "h U d");
result.add("hood-\twink", "h U d\tw I N k");
result.add("hood-\twinked", "h U d\tw I N k t");
result.add("hoods", "h U d z");
result.add("hoof", "h u: f");
result.add("hoofed", "h U f t");
result.add("hoofs", "h U f s");
result.add("hooge", "h u: dZ");
result.add("hook", "h U k");
result.add("hook-\tup", "h U\tk V p");
result.add("hook-\tworm", "h U k\tw @r m");
result.add("hooke", "h U k");
result.add("hooked", "h U k t");
result.add("hooks", "h U k s");
result.add("hook's", "h U k s");
result.add("hoon", "h u: n");
result.add("hoop", "h u: p");
result.add("hoop-\tla", "h u: p\tl Q");
result.add("hoopes", "h u: p s");
result.add("hoops", "h u: p s");
result.add("hoos", "h u: z");
result.add("hoose", "h u: s");
result.add("hoot", "h u: t");
result.add("hoot-\tman", "h u: t\tm V n");
result.add("hoots", "h u: t s");
result.add("hooves", "h U v z");
result.add("hop", "h Q p");
result.add("hop-\tfin-\tger", "h Q p\tf I\tN @r");
result.add("hop-\tkin-\tson", "h Q p\tk I n\ts V n");
result.add("hop-\tkin-\tton", "h Q p\tk I n\tt V n");
result.add("hop-\tkins", "h Q p\tk I n z");
result.add("hop-\tper", "h Q\tp @r");
result.add("hop-\tpers", "h Q\tp @r z");
result.add("hop-\tper's", "h Q\tp @r z");
result.add("hop-\tping", "h Q\tp I N");
result.add("hop-\tple", "h Q\tp V l");
result.add("hop-\tpy", "h O:\tp i:");
result.add("hop-\tscotch", "h Q p\ts k Q tS");
result.add("hop-\twood", "h Q p\tw U d");
result.add("hope", "h @U p");
result.add("hope-\tful", "h @U p\tf V l");
result.add("hope-\tful-\tly", "h @U p\tf V\tl i:");
result.add("hope-\tful-\tness", "h @U p\tf V l\tn V s");
result.add("hope-\tfuls", "h @U p\tf V l z");
result.add("hope-\tless", "h @U p\tl V s");
result.add("hope-\tless-\tly", "h @U p\tl V s\tl i:");
result.add("hope-\tless-\tness", "h @U p\tl V s\tn V s");
result.add("hope-\twell", "h @U p\tw e l");
result.add("hoped", "h @U p t");
result.add("hopes", "h @U p s");
result.add("hope's", "h @U p s");
result.add("hoppe", "h Q p");
result.add("hopped", "h Q p t");
result.add("hops", "h Q p s");
result.add("hor-\tgan", "h O@\tg V n");
result.add("hor-\tkey", "h O@\tk i:");
result.add("hor-\tla-\tcher", "h O@\tl V\tk @r");
result.add("hor-\tmel", "h O@\tm e l");
result.add("hor-\tmo-\tnal", "h O@\tm @U\tn V l");
result.add("hor-\tmone", "h O@\tm @U n");
result.add("hor-\tmones", "h O@\tm @U n z");
result.add("hor-\tmuz", "h O@\tm u: z");
result.add("hor-\tnell", "h O@\tn e l");
result.add("hor-\tner", "h O@\tn @r");
result.add("hor-\tnet", "h O@\tn V t");
result.add("hor-\tnets", "h O@\tn V t s");
result.add("hor-\tnet's", "h O@\tn V t s");
result.add("hor-\tney", "h O@\tn i:");
result.add("hor-\tnick", "h O@\tn I k");
result.add("hor-\tning", "h O@\tn I N");
result.add("hor-\tny", "h O@\tn i:");
result.add("hor-\tren-\tdous", "h O@\te n\td V s");
result.add("hor-\tren-\tdous-\tly", "h O@\te n\td V s\tl i:");
result.add("hor-\tri-\tble", "h O@\tI\tb V l");
result.add("hor-\tri-\tfic", "h O@\tI\tf I k");
result.add("hor-\tri-\tfied", "h O@\tI\tf aI d");
result.add("hor-\tri-\tfy", "h O@\tI\tf aI");
result.add("hor-\tri-\tfy-\ting", "h O@\tI\tf aI\tI N");
result.add("hor-\trib-\tly", "h O@\tI b\tl i:");
result.add("hor-\trid", "h O@\tI d");
result.add("hor-\trocks", "h O@\tV k s");
result.add("hor-\tror", "h O@\t@r");
result.add("hor-\trors", "h O@\t@r z");
result.add("hor-\tses", "h O@\ts V z");
result.add("hor-\tse's", "h O@\ts V z");
result.add("hor-\tsey", "h O@\ts i:");
result.add("hor-\tsing", "h O@\ts I N");
result.add("hor-\tta", "h O@\tt V");
result.add("hor-\tten", "h O@\tt V n");
result.add("hor-\tter", "h O@\tt @r");
result.add("hor-\tti-\tcul-\ttu-\tral", "h O@\tt I\tk V l\ttS @r\tV l");
result.add("hor-\tti-\tcul-\ttu-\trist", "h O@\tt I\tk V l\ttS @r\tI s t");
result.add("hor-\tti-\tcul-\tture", "h O@\tt I\tk V l\ttS @r");
result.add("hor-\tton", "h O@\tt V n");
result.add("hor-\tvitz", "h O@\tv I t s");
result.add("hor-\twath", "h O@\tw O: T");
result.add("hor-\twitz", "h O@\tw I t s");
result.add("hord", "h O@ d");
result.add("horde", "h O@ d");
result.add("hordes", "h O@ d z");
result.add("hore-\thound", "h Q@\th aU n d");
result.add("horn", "h O@ n");
result.add("horn-\tbeak", "h O@ n\tb V k");
result.add("horn-\tbeck", "h O@ n\tb e k");
result.add("horn-\tbill", "h O@ n\tb I l");
result.add("horn-\tbills", "h O@ n\tb I l z");
result.add("horn-\tblende", "h O@ n\tb l e n d");
result.add("horn-\tblo-\twer", "h O@ n\tb l @U\t@r");
result.add("horn-\tbook", "h O@ n\tb U k");
result.add("horn-\tbrook", "h O@ n\tb r U k");
result.add("horn-\tby", "h O@ n\tb i:");
result.add("horn-\tless", "h O@ n\tl V s");
result.add("horn-\tlike", "h O@ n\tl aI k");
result.add("horn-\tstein", "h O@ n\ts t aI n");
result.add("horne", "h O@ n");
result.add("horned", "h O@ n d");
result.add("horns", "h O@ n z");
result.add("horn's", "h O@ n z");
result.add("horns-\tby", "h O@ n\tz b i:");
result.add("hors", "h O@ z");
result.add("hors-\tham", "h O@\tS V m");
result.add("hors-\tham's", "h O@\tS V m z");
result.add("horse", "h O@ s");
result.add("horse-\tback", "h O@ s\tb { k");
result.add("horse-\tflesh", "h O@ s\tf l e S");
result.add("horse-\thead", "h O@ s\th e d");
result.add("horse-\tly", "h O@ s\tl i:");
result.add("horse-\tman", "h O@ s\tm V n");
result.add("horse-\tman-\tship", "h O@ s\tm V n\tS I p");
result.add("horse-\tmen", "h O@ s\tm V n");
result.add("horse-\tplay", "h O@ s\tp l eI");
result.add("horse-\tpo-\twer", "h O@ s\tp aU\t@r");
result.add("horse-\tra-\tdish", "h O@ s\tr {\td I S");
result.add("horse-\tshoe", "h O@ s\tS u:");
result.add("horse-\tshoes", "h O@ s\tS u: z");
result.add("horse-\ttail", "h O@ s\tt eI l");
result.add("horse-\ttails", "h O@ s\tt eI l z");
result.add("horst", "h O@ s t");
result.add("ho's", "h @U z");
result.add("hos-\tford", "h Q s\tf @r d");
result.add("hos-\tkin-\tson", "h Q s\tk I n\ts V n");
result.add("hos-\tkins", "h Q s\tk I n z");
result.add("hos-\tpi-\tces", "h Q s\tp I\ts V z");
result.add("hos-\tpi-\tce's", "h Q s\tp I\ts V z");
result.add("hos-\tpi-\tta-\tble", "h Q s\tp I\tt V\tb V l");
result.add("hos-\tpi-\tta-\tli-\tty", "h Q s\tp I\tt {\tl I\tt i:");
result.add("hos-\tpi-\tta-\tli-\tza-\ttion", "h Q s\tp I\tt V\tl I\tz eI\tS V n");
result.add("hos-\tpi-\tta-\tli-\tza-\ttions", "h Q s\tp I\tt V\tl I\tz eI\tS V n z");
result.add("hos-\tpi-\tta-\tlize", "h Q s\tp I\tt V\tl aI z");
result.add("hos-\tpi-\tta-\tlized", "h Q s\tp I\tt V\tl aI z d");
result.add("hos-\tpi-\ttal", "h Q s\tp I\tt V l");
result.add("hos-\tpi-\ttals", "h Q s\tp I\tt V l z");
result.add("hos-\tpi-\ttal's", "h Q s\tp I\tt V l z");
result.add("hos-\tpice", "h Q s\tp I s");
result.add("hos-\tta-\tges", "h Q s\tt I\tdZ V z");
result.add("hos-\ttage", "h Q s\tt I dZ");
result.add("hos-\tted", "h @U s\tt V d");
result.add("hos-\ttel", "h Q s\tt V l");
result.add("hos-\ttels", "h Q s\tt V l z");
result.add("hos-\tter", "h @U s\tt @r");
result.add("hos-\ttes-\tses", "h @U s\tt V\ts V z");
result.add("hos-\ttess", "h @U s\tt V s");
result.add("hos-\ttet-\tter", "h Q s\tt e\tt @r");
result.add("hos-\tti-\tli-\tties", "h Q s\tt I\tl I\tt i: z");
result.add("hos-\tti-\tli-\tty", "h Q s\tt I\tl I\tt i:");
result.add("hos-\ttile", "h Q s\tt I l");
result.add("hos-\tting", "h @U s\tt I N");
result.add("hose", "h @U z");
result.add("hosed", "h @U z d");
result.add("hoss", "h Q s");
result.add("host", "h @U s t");
result.add("host-\tler", "h Q s\tl @r");
result.add("hosts", "h @U s t s");
result.add("host's", "h @U s t s");
result.add("hot", "h Q t");
result.add("hot-\tbed", "h Q t\tb e d");
result.add("hot-\tbeds", "h Q t\tb e d z");
result.add("hot-\tcake", "h Q t\tk eI k");
result.add("hot-\tcakes", "h Q t\tk eI k s");
result.add("hot-\tdog", "h Q t\td O: g");
result.add("hot-\tdogs", "h Q t\td O: g z");
result.add("hot-\thouse", "h Q t\th aU s");
result.add("hot-\tline", "h Q t\tl aI n");
result.add("hot-\tlines", "h Q t\tl aI n z");
result.add("hot-\tly", "h Q t\tl i:");
result.add("hot-\tshot", "h Q\ttS Q t");
result.add("hot-\tter", "h Q\tt @r");
result.add("hot-\ttest", "h Q\tt V s t");
result.add("hot-\ttle", "h Q\tt V l");
result.add("hot-\twi-\tre", "h Q t\tw aI\t@r");
result.add("hotch-\tkiss", "h Q tS\tk I s");
result.add("hoth", "h Q T");
result.add("hots", "h Q t s");
result.add("hotze", "h @U t z");
result.add("hou-\tdaille", "h u:\td eI l");
result.add("hou-\tdi-\tni", "h u:\td i:\tn i:");
result.add("hou-\tdi-\tni's", "h u:\td i:\tn i: z");
result.add("hou-\tri-\tgan", "aU\tr I\tg { n");
result.add("hou-\tri-\than", "aU\tr i:\th Q n");
result.add("hou-\trs", "aU\t@r z");
result.add("hou-\tsel", "h aU\ts V l");
result.add("hou-\tser", "h aU\tz @r");
result.add("hou-\tses", "h aU\ts V z");
result.add("hou-\tse's", "h aU\ts V z");
result.add("houck", "h aU k");
result.add("houff", "h @U f");
result.add("hough", "h V f");
result.add("hough-\tton", "h O:\tt V n");
result.add("hough-\tton's", "h O:\tt V n z");
result.add("houghs", "h aU z");
result.add("houl-\tton", "h @U l\tt V n");
result.add("houn-\tded", "h aU n\td V d");
result.add("houn-\tding", "h aU n\td I N");
result.add("hound", "h aU n d");
result.add("hounds", "h aU n d z");
result.add("hour-\tlong", "aU r\tl O: N");
result.add("hour-\tly", "aU r\tl i:");
result.add("house", "h aU s");
result.add("house-\tboat", "h aU s\tb @U t");
result.add("house-\tbro-\tken", "h aU s\tb r @U\tk V n");
result.add("house-\tclea-\tning", "h aU s\tk l i:\tn I N");
result.add("house-\tful", "h aU s\tf V l");
result.add("house-\tguest", "h aU s\tg e s t");
result.add("house-\thol-\tder", "h aU s\th @U l\td @r");
result.add("house-\thol-\tders", "h aU s\th @U l\td @r z");
result.add("house-\thold", "h aU s\th @U l d");
result.add("house-\tholds", "h aU s\th @U l d z");
result.add("house-\thold's", "h aU s\th @U l d z");
result.add("house-\tkee-\tper", "h aU s\tk i:\tp @r");
result.add("house-\tkee-\tpers", "h aU s\tk i:\tp @r z");
result.add("house-\tkee-\tping", "h aU s\tk i:\tp I N");
result.add("house-\tman", "h aU s\tm V n");
result.add("house-\tman's", "h aU s\tm V n z");
result.add("housed", "h aU z d");
result.add("hov-\tha-\tness", "h O: v\th {\tn V s");
result.add("hov-\tland", "h Q v\tl V n d");
result.add("hove", "h @U v");
result.add("how", "h aU");
result.add("how-\tdy", "h aU\td i:");
result.add("how-\te-\tver", "h aU\te\tv @r");
result.add("how-\tland", "h aU\tl V n d");
result.add("how-\tler", "h aU\tl @r");
result.add("how-\tling", "h aU\tl I N");
result.add("howe", "h aU");
result.add("howes", "h aU z");
result.add("howe's", "h aU z");
result.add("howk", "h aU k");
result.add("howl", "h aU l");
result.add("howled", "h aU l d");
result.add("howls", "h aU l z");
result.add("how's", "h aU z");
result.add("hox-\tsie", "h Q k\ts i:");
result.add("hoy", "h OI");
result.add("hoy-\ting", "h OI\tI N");
result.add("hoy-\tlake", "h OI\tl eI k");
result.add("hoye", "h OI");
result.add("hoyle", "h OI l");
result.add("hoyt", "h OI t");
result.add("hrd-\tlic-\tka", "h @r d\tl I s\tk V");
result.add("hru-\tska", "h r V s\tk V");
result.add("hsia", "S Q");
result.add("hsu", "S u:");
result.add("hu", "h u:");
result.add("hu-\ta", "h u:\tV");
result.add("hu-\tber", "h j u:\tb @r");
result.add("hu-\tber-\tman", "h u:\tb @r\tm V n");
result.add("hu-\tber-\tto", "h u:\tb e@\tt @U");
result.add("hu-\tber-\tty", "h V\tb @r\tt i:");
result.add("hu-\tbert", "h j u:\tb @r t");
result.add("hu-\tbert's", "h j u:\tb @r t s");
result.add("hu-\tgel", "h u:\tg V l");
result.add("hu-\tgest", "h j u:\tdZ V s t");
result.add("hu-\tghett", "h j u:\te t");
result.add("hu-\tghie", "h j u:\ti:");
result.add("hu-\tgo", "h j u:\tg @U");
result.add("hu-\tgo-\tton", "h j u:\tg @U\tt V n");
result.add("hu-\tgo's", "h j u:\tg @U z");
result.add("hu-\tgue-\tnot", "h j u:\tg V\tn Q t");
result.add("hu-\tgue-\tnots", "h j u:\tg V\tn Q t s");
result.add("hu-\ti", "h u:\tI");
result.add("hu-\tkill", "h j u:\tk I l");
result.add("hu-\tla", "h u:\tl V");
result.add("hu-\tlen", "h V\tl V n");
result.add("hu-\tlett", "h j u:\tl e t");
result.add("hu-\tma-\tna", "h j u:\tm {\tn V");
result.add("hu-\tma-\tni-\tsm", "h j u:\tm V\tn I\tz V m");
result.add("hu-\tma-\tni-\tta-\tri-\tan", "h j u:\tm {\tn I\tt e@\ti:\tV n");
result.add("hu-\tma-\tni-\tta-\tri-\tans", "h j u:\tm {\tn I\tt e@\ti:\tV n z");
result.add("hu-\tma-\tni-\tties", "h j u:\tm {\tn I\tt i: z");
result.add("hu-\tma-\tni-\tty", "h j u:\tm {\tn I\tt i:");
result.add("hu-\tma-\tni-\tty's", "h j u:\tm {\tn I\tt i: z");
result.add("hu-\tma-\tni-\tzes", "h j u:\tm V\tn aI\tz V z");
result.add("hu-\tma-\tni-\tzing", "h j u:\tm V\tn aI\tz I N");
result.add("hu-\tma-\tnis-\ttic", "h j u:\tm V\tn I s\tt I k");
result.add("hu-\tma-\tnist", "h j u:\tm V\tn I s t");
result.add("hu-\tma-\tnists", "h j u:\tm V\tn V s t s");
result.add("hu-\tma-\tnize", "h j u:\tm V\tn aI z");
result.add("hu-\tma-\tnized", "h j u:\tm V\tn aI z d");
result.add("hu-\tman", "h j u:\tm V n");
result.add("hu-\tman-\tkind", "h j u:\tm V n\tk aI n d");
result.add("hu-\tman-\tkind's", "h j u:\tm V n\tk aI n d z");
result.add("hu-\tman-\tly", "h j u:\tm V n\tl i:");
result.add("hu-\tman-\tness", "h j u:\tm V n\tn V s");
result.add("hu-\tmane", "h j u:\tm eI n");
result.add("hu-\tmane-\tly", "h j u:\tm eI n\tl i:");
result.add("hu-\tmans", "h j u:\tm V n z");
result.add("hu-\tme-\trus", "h j u:\tm @r\tV s");
result.add("hu-\tmi-\tdi-\tfi-\ter", "h j u:\tm I\td I\tf aI\t@r");
result.add("hu-\tmi-\tdi-\tfi-\ters", "h j u:\tm I\td I\tf aI\t@r z");
result.add("hu-\tmi-\tdi-\tty", "h j u:\tm I\td I\tt i:");
result.add("hu-\tmi-\tdi-\tty's", "h j u:\tm I\td I\tt i: z");
result.add("hu-\tmi-\tdor", "h j u:\tm I\td O@");
result.add("hu-\tmi-\tli-\ta-\tted", "h j u:\tm I\tl i:\teI\tt V d");
result.add("hu-\tmi-\tli-\ta-\tting", "h j u:\tm I\tl i:\teI\tt I N");
result.add("hu-\tmi-\tli-\ta-\ttion", "h j u:\tm I\tl i:\teI\tS V n");
result.add("hu-\tmi-\tli-\ta-\ttions", "h j u:\tm I\tl i:\teI\tS V n z");
result.add("hu-\tmi-\tli-\tate", "h j u:\tm I\tl i:\teI t");
result.add("hu-\tmi-\tli-\tty", "h j u:\tm I\tl I\tt i:");
result.add("hu-\tmid", "h j u:\tm I d");
result.add("hu-\tmo-\tral", "h j u:\tm @r\tV l");
result.add("hu-\tmo-\trist", "h j u:\tm @r\tI s t");
result.add("hu-\tmo-\trists", "h j u:\tm @r\tI s t s");
result.add("hu-\tmo-\trous", "h j u:\tm @r\tV s");
result.add("hu-\tmo-\trous-\tly", "h j u:\tm @r\tV s\tl i:");
result.add("hu-\tmon-\tgous", "h j u:\tm O: N\tg V s");
result.add("hu-\tmor", "h j u:\tm @r");
result.add("hu-\tmor-\tless", "h j u:\tm @r\tl V s");
result.add("hu-\tmored", "h j u:\tm @r d");
result.add("hu-\tmus", "h j u:\tm V s");
result.add("hu-\tnan", "h u:\tn Q n");
result.add("hu-\tron", "h j u:\tr Q n");
result.add("hu-\tsain", "h V\ts aI n");
result.add("hu-\tst-\tling", "h V\ts V\tl I N");
result.add("hu-\tstles", "h V\ts V l z");
result.add("hu-\tta", "h u:\tt V");
result.add("hu-\ttu", "h u:\tt u:");
result.add("hu-\ttus", "h u:\tt u: z");
result.add("hu-\ttu's", "h u:\tt u: z");
result.add("hua-\tchu-\tca", "h w Q\ttS u:\tk V");
result.add("huan", "h w Q n");
result.add("huang", "h w { N");
result.add("hub", "h V b");
result.add("hub-\tbard", "h V\tb @r d");
result.add("hub-\tbard's", "h V\tb @r d z");
result.add("hub-\tbell", "h V\tb V l");
result.add("hub-\tbell's", "h V\tb V l z");
result.add("hub-\tble", "h V\tb V l");
result.add("hub-\tble's", "h V\tb V l z");
result.add("hub-\tbub", "h V\tb V b");
result.add("hub-\tby", "h V\tb i:");
result.add("hub-\tcap", "h V b\tk { p");
result.add("hub-\tcaps", "h V b\tk { p s");
result.add("hub-\tris", "h j u: b\tr I s");
result.add("hube", "h j u: b");
result.add("hubs", "h V b z");
result.add("huc-\tka-\tby", "h V\tk V\tb i:");
result.add("huc-\tkle", "h V\tk V l");
result.add("huc-\tkle-\tber-\try", "h V\tk V l\tb e@\ti:");
result.add("huck", "h V k");
result.add("huck-\tster", "h V k\ts t @r");
result.add("huck-\tsters", "h V k\ts t @r z");
result.add("hucks", "h V k s");
result.add("hud", "h V d");
result.add("hud-\td-\tling", "h V\td V\tl I N");
result.add("hud-\tdie", "h V\td i:");
result.add("hud-\tdle", "h V\td V l");
result.add("hud-\tdle-\tston", "h V\td V l\ts t V n");
result.add("hud-\tdled", "h V\td V l d");
result.add("hud-\tdles", "h V\td V l z");
result.add("hud-\tdy", "h V\td i:");
result.add("hud-\tgens", "h V\tdZ V n z");
result.add("hud-\tgins", "h V\tdZ I n z");
result.add("hud-\tnut", "h V d\tn V t");
result.add("hud-\tson", "h V d\ts V n");
result.add("hud-\tson's", "h V d\ts V n z");
result.add("hud's", "h V d z");
result.add("hue", "h j u:");
result.add("hue-\ty", "h j u:\ti:");
result.add("hueb-\tner", "h j u: b\tn @r");
result.add("hued", "h j u: d");
result.add("huer-\tta", "h w e@\tt V");
result.add("hues", "h j u: z");
result.add("hues-\tman", "h U s\tm V n");
result.add("hues-\tton", "h U s\tt V n");
result.add("huf-\tfa-\tker", "h V\tf V\tk @r");
result.add("huf-\tfer", "h V\tf @r");
result.add("huf-\tfing", "h V\tf I N");
result.add("huf-\tfy", "h V\tf i:");
result.add("huf-\tna-\tgel", "h V f\tn eI\tg V l");
result.add("huff", "h V f");
result.add("huff-\tman", "h V f\tm V n");
result.add("huffed", "h V f t");
result.add("huffs", "h V f s");
result.add("huff's", "h V f s");
result.add("hug", "h V g");
result.add("hug-\tger", "h V\tg @r");
result.add("hug-\tging", "h V\tg I N");
result.add("hug-\tgins", "h V\tg I n z");
result.add("huge", "h j u: dZ");
result.add("huge-\tly", "h j u: dZ\tl i:");
result.add("hugged", "h V g d");
result.add("hugh", "h j u:");
result.add("hugh-\tson", "h V g\ts V n");
result.add("hughes", "h j u: z");
result.add("hugs", "h V g z");
result.add("huh", "h V");
result.add("hul-\tbard", "h V l\tb @r d");
result.add("hul-\tbert", "h V l\tb @r t");
result.add("hul-\tbert's", "h V l\tb @r t s");
result.add("hul-\tburt", "h V l\tb @r t");
result.add("hul-\tking", "h V l\tk I N");
result.add("hul-\tla-\tba-\tloo", "h V\tl V\tb V\tl u:");
result.add("hul-\tton", "h V l\tt V n");
result.add("hulk", "h V l k");
result.add("hulks", "h V l k s");
result.add("hull", "h V l");
result.add("hulled", "h V l d");
result.add("hulls", "h V l z");
result.add("hull's", "h V l z");
result.add("hulme", "h V l m");
result.add("hult-\tgren", "h V l\tt g r e n");
result.add("hum", "h V m");
result.add("hum-\tb-\tler", "h V m\tb V\tl @r");
result.add("hum-\tb-\tlest", "h V m\tb V\tl V s t");
result.add("hum-\tb-\tling", "h V m\tb V\tl I N");
result.add("hum-\tber", "h V m\tb @r");
result.add("hum-\tber-\tto", "h V m\tb @r\tt @U");
result.add("hum-\tbert", "h V m\tb @r t");
result.add("hum-\tble", "h V m\tb V l");
result.add("hum-\tbled", "h V m\tb V l d");
result.add("hum-\tbles", "h V m\tb V l z");
result.add("hum-\tboldt", "h V m\tb @U l t");
result.add("hum-\tbug", "h V m\tb V g");
result.add("hum-\tdin-\tger", "h V m\td I\tN @r");
result.add("hum-\tdrum", "h V m\td r V m");
result.add("hum-\tfrey", "h V m\tf r i:");
result.add("hum-\tmel", "h V\tm V l");
result.add("hum-\tmer", "h V\tm @r");
result.add("hum-\tming", "h V\tm I N");
result.add("hum-\tming-\tbird", "h V\tm I N\tb @r d");
result.add("hum-\tming-\tbirds", "h V\tm I N\tb @r d z");
result.add("hum-\tphr-\teys", "h V m\tf @r\ti: z");
result.add("hum-\tphr-\ties", "h V m\tf @r\ti: z");
result.add("hum-\tphry", "h V m\tf r i:");
result.add("hum-\tvee", "h V m\tv i:");
result.add("hum-\tvees", "h V m\tv i: z");
result.add("humb-\tly", "h V m\tb l i:");
result.add("hume", "h j u: m");
result.add("hump", "h V m p");
result.add("hump-\tback", "h V m\tp b { k");
result.add("hump-\tty", "h V m\tp t i:");
result.add("humped", "h V m p t");
result.add("humph", "h V m f");
result.add("humph-\trey's", "h V m\tf r i: z");
result.add("hums", "h V m z");
result.add("hun", "h V n");
result.add("hun-\tches", "h V n\ttS V z");
result.add("hun-\tdred-\tweight", "h V n\td r V d\tw eI t");
result.add("hun-\tdreds", "h V n\td r V d z");
result.add("hun-\tdredth", "h V n\td r V d T");
result.add("hun-\tdredths", "h V n\td r V d T s");
result.add("hun-\tga-\tri-\tan", "h V N\tg e@\ti:\tV n");
result.add("hun-\tga-\tri-\tans", "h V N\tg e@\ti:\tV n z");
result.add("hun-\tga-\try", "h V N\tg @r\ti:");
result.add("hun-\tga-\try's", "h V N\tg @r\ti: z");
result.add("hun-\tge-\tring", "h V N\tg @r\tI N");
result.add("hun-\tger", "h V N\tg @r");
result.add("hun-\tger-\tford", "h V N\tg @r\tf @r d");
result.add("hun-\tke-\tring", "h V N\tk @r\tI N");
result.add("hun-\tker", "h V N\tk @r");
result.add("hun-\tkered", "h V N\tk @r d");
result.add("hun-\tky", "h V N\tk i:");
result.add("hun-\tley", "h V n\tl i:");
result.add("hun-\tne-\twell", "h V\tn V\tw e l");
result.add("hun-\tsin-\tger", "h V n\ts I\tN @r");
result.add("hun-\tted", "h V n\tt V d");
result.add("hun-\tter", "h V n\tt @r");
result.add("hun-\tters", "h V n\tt @r z");
result.add("hun-\tter's", "h V n\tt @r z");
result.add("hun-\tting", "h V n\tt I N");
result.add("hun-\tting-\tdon", "h V n\tt I N\td V n");
result.add("hun-\tting-\tton", "h V n\tt I N\tt V n");
result.add("hun-\tting-\tton's", "h V n\tt I N\tt V n z");
result.add("hunch", "h V n tS");
result.add("hunch-\tback", "h V n\ttS b { k");
result.add("hunched", "h V n tS t");
result.add("hund", "h V n d");
result.add("hund-\tred", "h V n\td r V d");
result.add("hund-\tred's", "h V n\td r V d z");
result.add("hung", "h V N");
result.add("hung-\tri-\ter", "h V N\tg r i:\t@r");
result.add("hung-\tri-\tly", "h V N\tg r I\tl i:");
result.add("hung-\try", "h V N\tg r i:");
result.add("hunk", "h V N k");
result.add("hunks", "h V N k s");
result.add("hunt", "h V n t");
result.add("hunt-\tley", "h V n\tt l i:");
result.add("hunt-\tly", "h V n\tt l i:");
result.add("hunt-\tress", "h V n\tt r V s");
result.add("hunts", "h V n t s");
result.add("hunt's", "h V n t s");
result.add("hunts-\tman", "h V n\tt s m V n");
result.add("hunts-\tville", "h V n\tt s v I l");
result.add("hup-\tpert", "h V\tp @r t");
result.add("hur", "h @r");
result.add("hur-\td-\tler", "h @r\td V\tl @r");
result.add("hur-\td-\tling", "h @r\td V\tl I N");
result.add("hur-\tdle", "h @r\td V l");
result.add("hur-\tdles", "h @r\td V l z");
result.add("hur-\tless", "h @r\tl V s");
result.add("hur-\tley", "h @r\tl i:");
result.add("hur-\tling", "h @r\tl I N");
result.add("hur-\tlock", "h @r\tl V k");
result.add("hur-\tly", "h @r\tl i:");
result.add("hur-\trah", "h U@\tQ");
result.add("hur-\tray", "h V\tr eI");
result.add("hur-\tri-\tcane", "h @r\tI\tk eI n");
result.add("hur-\tri-\tcanes", "h @r\tI\tk eI n z");
result.add("hur-\tri-\tcane's", "h @r\tI\tk eI n z");
result.add("hur-\tried", "h @r\ti: d");
result.add("hur-\tried-\tly", "h @r\ti: d\tl i:");
result.add("hur-\tries", "h @r\ti: z");
result.add("hur-\try", "h @r\ti:");
result.add("hur-\try-\ting", "h @r\ti:\tI N");
result.add("hur-\tting", "h @r\tt I N");
result.add("hur-\ttle", "h @r\tt V l");
result.add("hur-\twitz", "h @r\tw I t s");
result.add("hurd", "h @r d");
result.add("hurl", "h @r l");
result.add("hurl-\tbut", "h @r l\tb V t");
result.add("hurled", "h @r l d");
result.add("hurs-\tton", "h @r s\tt V n");
result.add("hurst", "h @r s t");
result.add("hurt", "h @r t");
result.add("hurt-\tful", "h @r t\tf V l");
result.add("hurt-\tling", "h @r t\tl I N");
result.add("hurts", "h @r t s");
result.add("hus-\tband", "h V z\tb V n d");
result.add("hus-\tband-\try", "h V z\tb V n\td r i:");
result.add("hus-\tbands", "h V z\tb V n d z");
result.add("hus-\tband's", "h V z\tb V n d z");
result.add("hus-\tkey", "h V s\tk i:");
result.add("hus-\tky", "h V s\tk i:");
result.add("hus-\tsar", "h V\ts @r");
result.add("hus-\tsein", "h u:\ts eI n");
result.add("hus-\tsein's", "h u:\ts eI n z");
result.add("hus-\tser", "h V\ts @r");
result.add("hus-\tsey", "h V\ts i:");
result.add("hus-\tsite", "h V\ts aI t");
result.add("hus-\tsy", "h V\ts i:");
result.add("hus-\tt-\tler", "h V\ts V\tl @r");
result.add("hus-\tt-\tlers", "h V\ts V\tl @r z");
result.add("hus-\ttings", "h V s\tt I N z");
result.add("hus-\ttle", "h V\ts V l");
result.add("hus-\ttled", "h V\ts V l d");
result.add("hus-\tton", "h V s\tt V n");
result.add("huse", "h j u: z");
result.add("hush", "h V S");
result.add("hushed", "h V S t");
result.add("husk", "h V s k");
result.add("husks", "h V s k s");
result.add("huss", "h V s");
result.add("hust", "h V s t");
result.add("hut", "h V t");
result.add("hut-\tche-\tson", "h V\ttS V\ts V n");
result.add("hut-\tchi-\tson", "h V\ttS I\ts V n");
result.add("hut-\tchi-\tson's", "h V\ttS I\ts V n z");
result.add("hut-\tchin-\tson", "h V\ttS I n\ts V n");
result.add("hut-\tchings", "h V\ttS I N z");
result.add("hut-\tchins", "h V t\ttS I n z");
result.add("hut-\tson", "h V t\ts V n");
result.add("hut-\tto", "h u:\tt @U");
result.add("hut-\tton", "h V\tt V n");
result.add("hut-\tton's", "h V\tt V n z");
result.add("hutch", "h V tS");
result.add("huts", "h V t s");
result.add("hut's", "h V t s");
result.add("hutt", "h V t");
result.add("hux", "h V k s");
result.add("hux-\tford", "h V k\ts f @r d");
result.add("hux-\tley", "h V k\ts l i:");
result.add("hux-\tta-\tble", "h V k\ts t V\tb V l");
result.add("hwan", "h w Q n");
result.add("hwang", "h w { N");
result.add("hwan's", "h w Q n z");
result.add("hy", "h aI");
result.add("hy-\tbri-\tdi-\tza-\ttion", "h aI b\tr I\td V\tz eI\tS V n");
result.add("hy-\tbri-\tdize", "h aI b\tr I\td aI z");
result.add("hy-\tbrid", "h aI b\tr I d");
result.add("hy-\tbrids", "h aI b\tr I d z");
result.add("hy-\tde-\tra-\tbad", "h aI\td e@\tV\tb { d");
result.add("hy-\tden", "h aI\td V n");
result.add("hy-\tder", "h aI\td @r");
result.add("hy-\te-\tna", "h aI\ti:\tn V");
result.add("hy-\te-\tnas", "h aI\ti:\tn V z");
result.add("hy-\tgei-\ta", "h aI\tdZ eI\tV");
result.add("hy-\tgie-\tnist", "h aI\tg i:\tn I s t");
result.add("hy-\tgie-\tnists", "h aI\tg i:\tn I s t s");
result.add("hy-\tgiene", "h aI\tdZ i: n");
result.add("hy-\tgro-\tme-\tter", "h aI g\tr Q\tm V\tt @r");
result.add("hy-\tland", "h aI\tl V n d");
result.add("hy-\tman", "h aI\tm V n");
result.add("hy-\tmen", "h aI\tm V n");
result.add("hy-\tmie", "h aI\tm i:");
result.add("hy-\tmies", "h aI\tm i: z");
result.add("hy-\tnek", "h aI\tn I k");
result.add("hy-\tpe-\trac-\tti-\tvi-\tty", "h aI\tp @r\t{ k\tt I\tv I\tt i:");
result.add("hy-\tpe-\trac-\ttive", "h aI\tp @r\t{ k\tt I v");
result.add("hy-\tpe-\tri-\ton", "h aI\tp I@\ti:\tV n");
result.add("hy-\tpe-\tro-\tpi-\ta", "h aI\tp @r\t@U\tp i:\tV");
result.add("hy-\tper", "h aI\tp @r");
result.add("hy-\tper-\tba-\tric", "h aI\tp @r\tb Q@\tI k");
result.add("hy-\tper-\tbo-\tla", "h aI\tp @r\tb V\tl V");
result.add("hy-\tper-\tbo-\tle", "h aI\tp @r\tb V\tl i:");
result.add("hy-\tper-\tbo-\tlic", "h aI\tp @r\tb Q\tl I k");
result.add("hy-\tper-\tbo-\tre-\tan", "h aI\tp @r\tb O@\ti:\tV n");
result.add("hy-\tper-\tcri-\tti-\tcal", "h aI\tp @r k\tr I\tt I\tk V l");
result.add("hy-\tper-\tki-\tne-\ttic", "h aI\tp @r\tk I\tn e\tt I k");
result.add("hy-\tper-\tlink", "h aI\tp @r\tl I N k");
result.add("hy-\tper-\tlinks", "h aI\tp @r\tl I N k s");
result.add("hy-\tper-\tmar-\tket", "h aI\tp @r\tm Q@\tk V t");
result.add("hy-\tper-\tmar-\tkets", "h aI\tp @r\tm Q@\tk V t s");
result.add("hy-\tper-\tsen-\tsi-\tti-\tvi-\tty", "h aI\tp @r\ts e n\ts I\tt I\tv I\tt i:");
result.add("hy-\tper-\tsen-\tsi-\ttive", "h aI\tp @r\ts e n\ts I\tt I v");
result.add("hy-\tper-\tso-\tnic", "h aI\tp @r\ts Q\tn I k");
result.add("hy-\tper-\tten-\tsion", "h aI\tp @r\tt e n\tS V n");
result.add("hy-\tper-\tten-\tsive", "h aI\tp @r\tt e n\ts I v");
result.add("hy-\tper-\ttext", "h aI\tp @r\tt e k s t");
result.add("hy-\tper-\tto-\tnic", "h aI\tp @r\tt Q\tn I k");
result.add("hy-\tphae", "h aI\tf i:");
result.add("hy-\tphe-\tna-\tted", "h aI\tf V\tn eI\tt V d");
result.add("hy-\tphe-\tnate", "h aI\tf V\tn eI t");
result.add("hy-\tphen", "h aI\tf V n");
result.add("hy-\tping", "h aI\tp I N");
result.add("hy-\tpo", "h aI\tp @U");
result.add("hy-\tpo-\tchond-\tri-\ta", "h aI\tp V\tk Q n\td r i:\tV");
result.add("hy-\tpo-\tchond-\tri-\tac", "h aI\tp V\tk Q n\td r i:\t{ k");
result.add("hy-\tpo-\tcri-\tti-\tcal", "h I\tp I k\tr I\tt I\tk V l");
result.add("hy-\tpo-\tcrite", "h I\tp I k\tr I t");
result.add("hy-\tpo-\tcrites", "h I\tp I k\tr I t s");
result.add("hy-\tpo-\tder-\tmic", "h aI\tp V\td @r\tm I k");
result.add("hy-\tpo-\tgly-\tce-\tmi-\ta", "h aI\tp @U g\tl aI\ts i:\tm i:\tV");
result.add("hy-\tpo-\tgly-\tce-\tmic", "h aI\tp @U g\tl aI\ts i:\tm I k");
result.add("hy-\tpo-\tlite", "h aI\tp V\tl aI t");
result.add("hy-\tpo-\tten-\tsion", "h aI\tp @U\tt e n\tS V n");
result.add("hy-\tpo-\ttha-\tla-\tmic", "h aI\tp @U\tT V\tl {\tm I k");
result.add("hy-\tpo-\tthe-\tses", "h aI\tp Q\tT V\ts i: z");
result.add("hy-\tpo-\tthe-\tsis", "h aI\tp Q\tT V\ts V s");
result.add("hy-\tpo-\tthe-\tsize", "h aI\tp Q\tT V\ts aI z");
result.add("hy-\tpo-\tthe-\tsized", "h aI\tp Q\tT V\ts aI z d");
result.add("hy-\tpo-\tthe-\tti-\tcal", "h aI\tp V\tT e\tt V\tk V l");
result.add("hy-\tpo-\tthe-\tti-\tcals", "h aI\tp V\tT e\tt V\tk V l z");
result.add("hy-\tpo-\tthe-\ttical-\tly", "h aI\tp V\tT e\tt I k\tl i:");
result.add("hy-\tpo-\tther-\tmi-\ta", "h aI\tp V\tT @r\tm i:\tV");
result.add("hy-\tpo-\txi-\ta", "h aI\tp Q k\ts i:\tV");
result.add("hy-\tpoc-\tri-\tsy", "h V\tp Q k\tr V\ts i:");
result.add("hy-\tra-\txes", "h aI\tr { k\ts V z");
result.add("hy-\tson", "h aI\ts V n");
result.add("hyd-\tra", "h aI d\tr V");
result.add("hyd-\trant", "h aI d\tr V n t");
result.add("hyd-\tride", "h aI d\tr aI d");
result.add("hyd-\tro", "h aI d\tr @U");
result.add("hyd-\tro-\tcar-\tbon", "h aI d\tr @U\tk Q@\tb V n");
result.add("hyd-\tro-\tcar-\tbons", "h aI d\tr @U\tk Q@\tb V n z");
result.add("hyd-\tro-\te-\tlect-\tric", "h aI d\tr @U\tV\tl e k\tt r I k");
result.add("hyd-\tro-\tfoil", "h aI d\tr V\tf OI l");
result.add("hyd-\tro-\tge-\tna-\tted", "h aI d\tr V\tdZ V\tn eI\tt V d");
result.add("hyd-\tro-\tge-\tna-\tting", "h aI d\tr V\tdZ V\tn eI\tt I N");
result.add("hyd-\tro-\tge-\tna-\ttion", "h aI d\tr Q\tdZ V\tn eI\tS V n");
result.add("hyd-\tro-\tge-\tnate", "h aI d\tr V\tdZ V\tn eI t");
result.add("hyd-\tro-\tge-\tnates", "h aI d\tr V\tdZ V\tn eI t s");
result.add("hyd-\tro-\tgen", "h aI d\tr V\tdZ V n");
result.add("hyd-\tro-\tgens", "h aI d\tr V\tdZ V n z");
result.add("hyd-\tro-\tgra-\tphic", "h aI d\tr V g\tr {\tf I k");
result.add("hyd-\tro-\tly-\tsis", "h aI d\tr Q\tl V\ts V s");
result.add("hyd-\tro-\tly-\tzing", "h aI d\tr V\tl aI\tz I N");
result.add("hyd-\tro-\tlyze", "h aI d\tr V\tl aI z");
result.add("hyd-\tro-\tlyzed", "h aI d\tr V\tl aI z d");
result.add("hyd-\tro-\tme-\tter", "h aI d\tr Q\tm V\tt @r");
result.add("hyd-\tro-\tphi-\tlic", "h aI d\tr V\tf I\tl I k");
result.add("hyd-\tro-\tpo-\tnic", "h aI d\tr V\tp Q\tn I k");
result.add("hyd-\tro-\tpower", "h aI d\tr @U\tp aU r");
result.add("hyd-\tro-\tsol", "h aI d\tr V\ts Q l");
result.add("hyd-\tro-\tsul-\tfide", "h aI d\tr @U\ts V l\tf aI d");
result.add("hyd-\tro-\tthe-\tra-\tpy", "h aI d\tr @U\tT e@\tV\tp i:");
result.add("hyd-\tro-\tther-\tmal", "h aI d\tr @U\tT @r\tm V l");
result.add("hyd-\tro-\txide", "h aI d\tr Q k\ts aI d");
result.add("hyd-\tro-\txides", "h aI d\tr Q k\ts aI d z");
result.add("hyd-\tro-\txy", "h aI d\tr O: k\ts i:");
result.add("hyd-\tro's", "h aI d\tr @U z");
result.add("hyd-\trous", "h aI d\tr V s");
result.add("hyde", "h aI d");
result.add("hyde's", "h aI d z");
result.add("hye", "h aI");
result.add("hykes", "h aI k s");
result.add("hyle", "h aI l");
result.add("hym-\tnal", "h I m\tn V l");
result.add("hym-\tnals", "h I m\tn V l z");
result.add("hym-\tno-\tlo-\tgy", "h I m\tn Q\tl V\tdZ i:");
result.add("hymn", "h I m");
result.add("hymns", "h I m z");
result.add("hynd", "h I n d");
result.add("hynd-\tman", "h I n\td m V n");
result.add("hyne-\ts's", "h aI n\tz V z");
result.add("hynes", "h aI n z");
result.add("hyp-\tno-\tsis", "h I p\tn @U\ts I s");
result.add("hyp-\tno-\tti-\tsm", "h I p\tn V\tt I\tz V m");
result.add("hyp-\tno-\tti-\tsm's", "h I p\tn V\tt I\tz V m z");
result.add("hyp-\tno-\ttic", "h I p\tn Q\tt I k");
result.add("hyp-\tno-\ttics", "h I p\tn Q\tt I k s");
result.add("hyp-\tno-\ttize", "h I p\tn V\tt aI z");
result.add("hyp-\tno-\ttized", "h I p\tn V\tt aI z d");
result.add("hype", "h aI p");
result.add("hyped", "h aI p t");
result.add("hypes", "h aI p s");
result.add("hys-\tsop", "h I\ts V p");
result.add("hys-\tte-\trec-\tto-\tmies", "h I s\tt @r\te k\tt V\tm i:");
result.add("hys-\tte-\trec-\tto-\tmy", "h I s\tt @r\te k\tt V\tm i:");
result.add("hys-\tte-\tri-\ta", "h I s\tt e@\ti:\tV");
result.add("hys-\tte-\tri-\tcal", "h I s\tt e@\tI\tk V l");
result.add("hys-\tte-\tric", "h I s\tt e@\tI k");
result.add("hys-\tte-\trical-\tly", "h I s\tt e@\tI k\tl i:");
result.add("hys-\tte-\trics", "h I s\tt e@\tI k s");
result.add("hyun-\tdai", "h j V n\td eI");
result.add("hyun-\tdai's", "h V n\td eI z");
result.add("i", "aI");
result.add("i-\ta", "i:\tV");
result.add("i-\ta-\tcoc-\tca", "aI\tV\tk @U\tk V");
result.add("i-\ta-\tcoc-\tca's", "aI\tV\tk @U\tk V z");
result.add("i-\ta-\tgo", "i:\tQ\tg @U");
result.add("i-\tain", "i:\teI n");
result.add("i-\tams", "i:\tQ m z");
result.add("i-\tan", "i:\tV n");
result.add("i-\tan-\tthe", "i:\tQ n\tT eI");
result.add("i-\tan-\tthi-\tna", "i:\tV n\tT i:\tn V");
result.add("i-\tba", "i:\tb V");
result.add("i-\tba-\tnez", "I\tb Q\tn e z");
result.add("i-\tba-\tra-\tki", "aI\tb @r\tQ\tk i:");
result.add("i-\tbe-\tri-\ta", "aI\tb I@\ti:\tV");
result.add("i-\tbe-\tri-\tan", "aI\tb I@\ti:\tV n");
result.add("i-\tbe-\tri-\ta's", "aI\tb I@\ti:\tV z");
result.add("i-\tbex", "aI\tb e k s");
result.add("i-\tbis", "aI\tb I s");
result.add("i-\tbn", "I\tb V n");
result.add("i-\tbo-\tgaine", "aI\tb @U\tg eI n");
result.add("i-\tbup-\tro-\tfen", "aI b\tj u: p\tr @U\tf V n");
result.add("i-\tca-\trus", "I\tk @r\tV s");
result.add("i-\tcahn", "aI\tk Q n");
result.add("i-\tcahn's", "aI\tk Q n z");
result.add("i-\tcard", "I\tk Q@ d");
result.add("i-\tces", "aI\ts V z");
result.add("i-\tco-\tno-\tclas-\ttic", "aI\tk V\tn V k\tl { s\tt I k");
result.add("i-\tco-\tno-\tclast", "aI\tk Q\tn V k\tl { s t");
result.add("i-\tco-\tno-\tgra-\tphy", "aI\tk V\tn Q g\tr V\tf i:");
result.add("i-\tco-\tnoc-\tla-\tsm", "aI\tk Q\tn V k\tl {\tz V m");
result.add("i-\tcon", "aI\tk Q n");
result.add("i-\tcons", "aI\tk Q n z");
result.add("i-\tcy", "aI\ts i:");
result.add("i-\td-\tler", "aI\td V\tl @r");
result.add("i-\td-\tling", "aI\td V\tl I N");
result.add("i-\tda", "aI\td V");
result.add("i-\tda-\tho", "aI\td V\th @U");
result.add("i-\tda-\tho's", "aI\td V\th @U z");
result.add("i-\tda-\tli-\tna", "V\td Q\tl i:\tn V");
result.add("i-\tda-\tlia", "V\td Q l\tj V");
result.add("i-\tda-\tline", "I\td V\tl aI n");
result.add("i-\tde-\ta", "aI\td i:\tV");
result.add("i-\tde-\ta-\tlis-\ttic", "aI\td i:\tV\tl I s\tt I k");
result.add("i-\tde-\ta-\tlized", "aI\td i:\tV\tl aI z d");
result.add("i-\tde-\tas", "aI\td i:\tV z");
result.add("i-\tde-\ta's", "aI\td i:\tV z");
result.add("i-\tde-\to-\tlo-\tgi-\tcal", "aI\td i:\tV\tl Q\tdZ I\tk V l");
result.add("i-\tde-\to-\tlo-\tgical-\tly", "aI\td i:\tV\tl Q\tdZ I k\tl i:");
result.add("i-\tde-\to-\tlo-\tgies", "aI\td i:\tQ\tl V\tdZ i: z");
result.add("i-\tde-\to-\tlo-\tgist", "aI\td i:\tQ\tl V\tdZ V s t");
result.add("i-\tde-\to-\tlo-\tgists", "aI\td i:\tQ\tl V\tdZ V s t s");
result.add("i-\tde-\to-\tlo-\tgy", "aI\td i:\tQ\tl V\tdZ i:");
result.add("i-\tde-\to-\tlogue", "aI\td i:\tV\tl @U g");
result.add("i-\tde-\to-\tlogues", "aI\td i:\tV\tl O: g z");
result.add("i-\tdea-\tli-\tsm", "aI\td i:\tl I\tz V m");
result.add("i-\tdea-\tlist", "aI\td i:\tl I s t");
result.add("i-\tdea-\tlists", "aI\td i:\tl I s t s");
result.add("i-\tdea-\tlize", "aI\td i:\tl aI z");
result.add("i-\tdeal", "aI\td i: l");
result.add("i-\tdeal-\tly", "aI\td i:\tl i:");
result.add("i-\tdeals", "aI\td i: l z");
result.add("i-\tdeal's", "aI\td i: l z");
result.add("i-\tden", "aI\td V n");
result.add("i-\tden-\tti-\tcal", "aI\td e n\tt I\tk V l");
result.add("i-\tden-\tti-\tfi-\ta-\tble", "aI\td e n\tt I\tf aI\tV\tb V l");
result.add("i-\tden-\tti-\tfi-\tca-\ttion", "aI\td e n\tt I\tf V\tk eI\tS V n");
result.add("i-\tden-\tti-\tfi-\tca-\ttions", "aI\td e n\tt I\tf I\tk eI\tS V n z");
result.add("i-\tden-\tti-\tfi-\ter", "aI\td e n\tt I\tf aI\t@r");
result.add("i-\tden-\tti-\tfied", "aI\td e n\tt I\tf aI d");
result.add("i-\tden-\tti-\tfies", "aI\td e n\tt I\tf aI z");
result.add("i-\tden-\tti-\tfy", "aI\td e n\tt I\tf aI");
result.add("i-\tden-\tti-\tfy-\ting", "aI\td e n\tt I\tf aI\tI N");
result.add("i-\tden-\tti-\tkit", "aI\td e n\tt I\tk I t");
result.add("i-\tden-\tti-\tties", "aI\td e n\tt I\tt i: z");
result.add("i-\tden-\tti-\tty", "aI\td e n\tt I\tt i:");
result.add("i-\tdette", "aI\td e t");
result.add("i-\tdi-\to-\tcy", "I\td i:\tV\ts i:");
result.add("i-\tdi-\to-\tma-\ttic", "I\td i:\tV\tm {\tt I k");
result.add("i-\tdi-\to-\tsyn-\tcra-\tsies", "I\td i:\t@U\ts I n\tk r V\ts i: z");
result.add("i-\tdi-\to-\tsyn-\tcra-\tsy", "I\td i:\t@U\ts I n\tk r V\ts i:");
result.add("i-\tdi-\to-\tsyn-\tcra-\ttic", "I\td i:\t@U\ts I n\tk r {\tt I k");
result.add("i-\tdi-\to-\ttic", "I\td i:\tQ\tt I k");
result.add("i-\tdi-\to-\ttical-\tly", "I\td i:\tQ\tt I k\tl i:");
result.add("i-\tdi-\tom", "I\td i:\tV m");
result.add("i-\tdi-\toms", "I\td i:\tV m z");
result.add("i-\tdi-\tot", "I\td i:\tV t");
result.add("i-\tdi-\tots", "I\td i:\tV t s");
result.add("i-\tdi-\tta-\trod", "I\td I\tt V\tr O: d");
result.add("i-\tdle", "aI\td V l");
result.add("i-\tdle-\tman", "aI\td V l\tm V n");
result.add("i-\tdle-\tness", "aI\td V l\tn V s");
result.add("i-\tdle-\twild", "aI\td V l\tw aI l d");
result.add("i-\tdled", "aI\td V l d");
result.add("i-\tdles", "aI\td V l z");
result.add("i-\tdo", "i:\td @U");
result.add("i-\tdo-\tla", "V\td @U\tl V");
result.add("i-\tdo-\tlat-\trous", "aI\td Q\tl V t\tr V s");
result.add("i-\tdo-\tlat-\try", "aI\td Q\tl V t\tr i:");
result.add("i-\tdo-\tli-\tzes", "aI\td V\tl aI\tz V z");
result.add("i-\tdo-\tli-\tzing", "aI\td V\tl aI\tz I N");
result.add("i-\tdo-\tlize", "aI\td V\tl aI z");
result.add("i-\tdo-\tlized", "aI\td V\tl aI z d");
result.add("i-\tdo-\tna", "V\td @U\tn V");
result.add("i-\tdol", "aI\td V l");
result.add("i-\tdols", "aI\td V l z");
result.add("i-\tdu-\tna", "V\td u:\tn V");
result.add("i-\tdyl-\tlic", "aI\td I\tl I k");
result.add("i-\tdyll", "aI\td V l");
result.add("i-\tfill", "I\tf i: l");
result.add("i-\tfint", "aI\tf I n t");
result.add("i-\tgo", "i:\tg @U");
result.add("i-\tgor", "I\tg O@");
result.add("i-\tgua-\tna", "aI g\tw Q\tn V");
result.add("i-\tgua-\tnas", "I g\tw Q\tn V z");
result.add("i-\tke-\ta", "aI\tk i:\tV");
result.add("i-\tke-\tda", "I\tk eI\td V");
result.add("i-\tkey", "I\tk i:");
result.add("i-\tla", "i:\tl V");
result.add("i-\tlan", "i:\tl Q n");
result.add("i-\tle-\ta-\tna", "I\tl i:\t{\tn V");
result.add("i-\tlene", "I\tl i: n");
result.add("i-\tli-\tad", "I\tl i:\tV d");
result.add("i-\tliff", "I\tl I f");
result.add("i-\tlo", "aI\tl @U");
result.add("i-\tlo-\tna", "I\tl @U\tn V");
result.add("i-\tma-\tges", "I\tm V\tdZ V z");
result.add("i-\tma-\tgi-\tna-\tble", "I\tm {\tdZ I\tn V\tb V l");
result.add("i-\tma-\tgi-\tna-\try", "I\tm {\tdZ I\tn e@\ti:");
result.add("i-\tma-\tgi-\tna-\ttion", "I\tm {\tdZ I\tn eI\tS V n");
result.add("i-\tma-\tgi-\tna-\ttions", "I\tm {\tdZ I\tn eI\tS V n z");
result.add("i-\tma-\tgi-\tna-\ttive", "I\tm {\tdZ I\tn V\tt I v");
result.add("i-\tma-\tgi-\tna-\ttive-\tly", "I\tm {\tdZ I\tn V\tt I v\tl i:");
result.add("i-\tma-\tgi-\tning", "I\tm {\tdZ I\tn I N");
result.add("i-\tma-\tgine", "I\tm {\tdZ I n");
result.add("i-\tma-\tgined", "I\tm {\tdZ I n d");
result.add("i-\tma-\tgines", "I\tm {\tdZ I n z");
result.add("i-\tma-\tging", "I\tm I\tdZ I N");
result.add("i-\tma-\tri", "i:\tm Q@\ti:");
result.add("i-\tmage", "I\tm V dZ");
result.add("i-\tmage-\tries", "I\tm I dZ\tr i: z");
result.add("i-\tmage-\try", "I\tm V dZ\tr i:");
result.add("i-\tmai", "I\tm aI");
result.add("i-\tmam", "aI\tm { m");
result.add("i-\tman", "aI\tm V n");
result.add("i-\tmax", "aI\tm { k s");
result.add("i-\tmel-\tda", "I\tm e l\td V");
result.add("i-\tmi-\tta-\tble", "I\tm I\tt V\tb V l");
result.add("i-\tmi-\tta-\tted", "I\tm I\tt eI\tt I d");
result.add("i-\tmi-\tta-\tting", "I\tm I\tt eI\tt I N");
result.add("i-\tmi-\tta-\ttion", "I\tm I\tt eI\tS V n");
result.add("i-\tmi-\ttate", "I\tm I\tt eI t");
result.add("i-\tmi-\ttates", "I\tm I\tt eI t s");
result.add("i-\tmo", "aI\tm @U");
result.add("i-\tmo-\tgen", "I\tm V\tg V n");
result.add("i-\tmo-\tgene", "I\tm V\tdZ i: n");
result.add("i-\tmus", "aI\tm V s");
result.add("i-\tna", "i:\tn V");
result.add("i-\tna-\tbi-\tli-\tty", "I\tn V\tb I\tl V\tt i:");
result.add("i-\tna-\tlie-\tna-\tble", "I\tn eI l\tj V\tn V\tb V l");
result.add("i-\tna-\tni-\tmate", "I\tn {\tn I\tm V t");
result.add("i-\tnac-\tces-\tsi-\tbi-\tli-\tty", "I\tn V k\ts e\ts V\tb I\tl V\tt i:");
result.add("i-\tnac-\tces-\tsi-\tble", "I\tn V k\ts e\ts V\tb V l");
result.add("i-\tnac-\tcu-\tra-\tcies", "I\tn { k\tj @r\t{\ts i: z");
result.add("i-\tnac-\tcu-\tra-\tcy", "I\tn { k\tj @r\tV\ts i:");
result.add("i-\tnac-\tcu-\trate", "I\tn { k\tj @r\tV t");
result.add("i-\tnac-\tcu-\trate-\tly", "I\tn { k\tj @r\tV t\tl i:");
result.add("i-\tnad-\tver-\ttent-\tly", "I\tn V d\tv @r\tt V n\tt l i:");
result.add("i-\tnad-\tvi-\tsa-\tble", "I\tn V d\tv aI\tz V\tb V l");
result.add("i-\tnane", "I\tn eI n");
result.add("i-\tnap-\tpli-\tca-\tble", "I\tn { p\tl I\tk V\tb V l");
result.add("i-\tnap-\tpro-\tpri-\tate", "I\tn V p\tr @U p\tr i:\tV t");
result.add("i-\tnap-\tpro-\tpri-\tate-\tly", "I\tn V p\tr Q p\tr i:\tV t\tl i:");
result.add("i-\tnar-\tti-\tcu-\tlate", "I\tn Q@\tt I k\tj V\tl V t");
result.add("i-\tnas-\tmuch", "I\tn { s\tm V k");
result.add("i-\tnat-\tten-\ttion", "I\tn V\tt e n\ttS V n");
result.add("i-\tnat-\tten-\ttive", "I\tn V\tt e n\tt I v");
result.add("i-\tnau-\tdi-\tble", "I\tn O:\td I\tb V l");
result.add("i-\tnau-\tgu-\tra-\tted", "I\tn O:\tg @r\teI\tt V d");
result.add("i-\tnau-\tgu-\tra-\tting", "I\tn O: g\tj @r\teI\tt I N");
result.add("i-\tnau-\tgu-\tra-\ttion", "I\tn O: g\tj @r\teI\tS V n");
result.add("i-\tnau-\tgu-\tra-\ttions", "I\tn O: g\tj @r\teI\tS V n z");
result.add("i-\tnau-\tgu-\tral", "I\tn O:\tg @r\tV l");
result.add("i-\tnau-\tgu-\trate", "I\tn O: g\tj @r\teI t");
result.add("i-\tnau-\tgu-\trates", "I\tn O: g\tj @r\tV t s");
result.add("i-\tnau-\tspi-\tcious", "I\tn aU s\tp I\tS V s");
result.add("i-\tne-\tdi-\tble", "I\tn e\td I\tb V l");
result.add("i-\tne-\tlas-\ttic", "I\tn V\tl { s\tt I k");
result.add("i-\tne-\tli-\tgi-\tble", "I\tn e\tl I\tdZ I\tb V l");
result.add("i-\tne-\tqua-\tli-\tties", "I\tn I k\tw Q\tl I\tt i: z");
result.add("i-\tne-\tqua-\tli-\tty", "I\tn I k\tw Q\tl I\tt i:");
result.add("i-\tne-\tqui-\tta-\tble", "I\tn e k\tw V\tt V\tb V l");
result.add("i-\tne-\tqui-\tties", "I\tn e k\tw V\tt i: z");
result.add("i-\tne-\tqui-\tty", "I\tn e k\tw V\tt i:");
result.add("i-\tne-\tvi-\tta-\tbi-\tli-\tty", "I\tn e\tv I\tt V\tb I\tl I\tt i:");
result.add("i-\tne-\tvi-\tta-\tble", "I\tn e\tv I\tt V\tb V l");
result.add("i-\tne-\tvi-\ttab-\tly", "I\tn e\tv I\tt V b\tl i:");
result.add("i-\tne-\txact", "I\tn I g\tz { k t");
result.add("i-\tne-\txo-\tra-\tble", "I\tn e k\ts @r\tV\tb V l");
result.add("i-\tne-\txo-\trab-\tly", "I\tn e k\ts @r\tV b\tl i:");
result.add("i-\tnef-\tfa-\tble", "I\tn e\tf V\tb V l");
result.add("i-\tnef-\tfec-\ttive", "I\tn V\tf e k\tt I v");
result.add("i-\tnef-\tfec-\ttive-\tness", "I\tn V\tf e k\tt I v\tn V s");
result.add("i-\tnef-\tfec-\ttu-\tal", "I\tn V\tf e k\ttS u:\tV l");
result.add("i-\tnef-\tfi-\tcien-\tcies", "I\tn V\tf I\tS V n\ts i: z");
result.add("i-\tnef-\tfi-\tcien-\tcy", "I\tn V\tf I\tS V n\ts i:");
result.add("i-\tnef-\tfi-\tcient", "I\tn V\tf I\tS V n t");
result.add("i-\tnef-\tfi-\tcient-\tly", "I\tn V\tf I\tS V n\tt l i:");
result.add("i-\tnep-\tti-\ttude", "I\tn e p\tt I\tt u: d");
result.add("i-\tnept", "I\tn e p t");
result.add("i-\tnept-\tly", "I\tn e p\tt l i:");
result.add("i-\tnept-\tness", "I\tn e p\tt n V s");
result.add("i-\tner-\ttia", "I\tn @r\tS V");
result.add("i-\tner-\ttial", "I\tn @r\tS V l");
result.add("i-\tnert", "I\tn @r t");
result.add("i-\tnert-\tness", "I\tn @r t\tn V s");
result.add("i-\tnes", "I\tn I s");
result.add("i-\tnes-\tca-\tpa-\tble", "I\tn V s\tk eI\tp V\tb V l");
result.add("i-\tnex-\tcu-\tsa-\tble", "I\tn I k\ts k j u:\tz V\tb V l");
result.add("i-\tnex-\thaus-\tti-\tble", "I\tn I g\tz O: s\tt I\tb V l");
result.add("i-\tnex-\tpe-\tri-\tence", "I\tn I k\ts p I@\ti:\tV n s");
result.add("i-\tnex-\tpe-\tri-\tenced", "I\tn I k\ts p I@\ti:\tV n s t");
result.add("i-\tnex-\tpen-\tsive", "I\tn I k\ts p e n\ts I v");
result.add("i-\tnex-\tpen-\tsive-\tly", "I\tn V k\ts p e n\ts I v\tl i:");
result.add("i-\tnex-\tpli-\tca-\tble", "I\tn V k\ts p l I\ts V\tb V l");
result.add("i-\tnex-\tpli-\tca-\tbly", "I\tn I k\ts p l I\tk V b\tl i:");
result.add("i-\tnex-\ttri-\tca-\tbly", "I\tn e k\ts t r I\tk V b\tl i:");
result.add("i-\tnez", "I\tn e z");
result.add("i-\tni-\tmi-\tcal", "I\tn I\tm I\tk V l");
result.add("i-\tni-\tmi-\tta-\tble", "I\tn I\tm I\tt V\tb V l");
result.add("i-\tni-\tti-\ta-\tted", "I\tn I\tS i:\teI\tt V d");
result.add("i-\tni-\tti-\ta-\tting", "I\tn I\tS i:\teI\tt I N");
result.add("i-\tni-\tti-\ta-\ttion", "I\tn I\tS i:\teI\tS V n");
result.add("i-\tni-\tti-\ta-\ttor", "I\tn I\tS i:\teI\tt @r");
result.add("i-\tni-\tti-\ta-\ttors", "I\tn I\tS i:\teI\tt @r z");
result.add("i-\tni-\tti-\tate", "I\tn I\tS i:\teI t");
result.add("i-\tni-\tti-\tates", "I\tn I\tS i:\tV t s");
result.add("i-\tni-\tti-\to", "I\tn I\tt i:\t@U");
result.add("i-\tni-\ttia-\tling", "I\tn I\tS V\tl I N");
result.add("i-\tni-\ttia-\ttive", "I\tn I\tS V\tt I v");
result.add("i-\tni-\ttia-\ttives", "I\tn I\tS V\tt I v z");
result.add("i-\tni-\ttial", "I\tn I\tS V l");
result.add("i-\tni-\ttial-\tly", "I\tn I\tS V\tl i:");
result.add("i-\tni-\ttialed", "I\tn I\tS V l d");
result.add("i-\tni-\ttials", "I\tn I\tS V l z");
result.add("i-\tno-\tcu-\tla-\tted", "I\tn Q k\tj V\tl eI\tt V d");
result.add("i-\tno-\tcu-\tla-\ttion", "I\tn Q k\tj V\tl eI\tS V n");
result.add("i-\tno-\tcu-\tla-\ttions", "I\tn Q k\tj V\tl eI\tS V n z");
result.add("i-\tno-\tcu-\tlate", "I\tn Q k\tj V\tl eI t");
result.add("i-\tno-\tpe-\tra-\tble", "I\tn Q\tp @r\tV\tb V l");
result.add("i-\tno-\tpe-\tra-\ttive", "I\tn Q\tp @r\tV\tt I v");
result.add("i-\tnof-\tfen-\tsive", "I\tn V\tf e n\ts I v");
result.add("i-\tnop-\tpor-\ttune", "I\tn Q\tp @r\tt u: n");
result.add("i-\tnor-\tdi-\tnate", "I\tn O@\td V\tn V t");
result.add("i-\tnor-\tdi-\tnate-\tly", "I\tn O@\td V\tn V t\tl i:");
result.add("i-\tnor-\tga-\tnic", "I\tn O@\tg {\tn I k");
result.add("i-\tnou-\te", "I\tn @U\teI");
result.add("i-\tnuit", "I\tn u: t");
result.add("i-\tnun-\tda-\tted", "I\tn V n\td eI\tt V d");
result.add("i-\tnun-\tda-\tting", "I\tn V n\td eI\tt I N");
result.add("i-\tnun-\tda-\ttion", "I\tn V n\td eI\tS V n");
result.add("i-\tnun-\tda-\ttions", "I\tn V n\td eI\tS V n z");
result.add("i-\tnun-\tdate", "I\tn V n\td eI t");
result.add("i-\tnure", "I n\tj U@");
result.add("i-\tnured", "I n\tj U@ d");
result.add("i-\tny", "I\tn i:");
result.add("i-\to", "aI\t@U");
result.add("i-\to-\tdide", "aI\tV\td aI d");
result.add("i-\to-\tdides", "aI\tV\td aI d z");
result.add("i-\to-\tdide's", "aI\tV\td aI d z");
result.add("i-\to-\tdine", "aI\tV\td aI n");
result.add("i-\to-\tla", "aI\t@U\tl V");
result.add("i-\to-\tlan-\tde", "i:\t@U\tl Q n\td i:");
result.add("i-\to-\tle", "i:\t@U\tl i:");
result.add("i-\to-\tna", "aI\t@U\tn V");
result.add("i-\to-\tne", "aI\t@U\tn i:");
result.add("i-\to-\tni-\tza-\ttion", "aI\tV\tn V\tz eI\tS V n");
result.add("i-\to-\tni-\tzer", "aI\tV\tn aI\tz @r");
result.add("i-\to-\tni-\tzers", "aI\tV\tn aI\tz @r z");
result.add("i-\to-\tni-\tzing", "aI\tV\tn aI\tz I N");
result.add("i-\to-\tnic", "aI\tQ\tn I k");
result.add("i-\to-\tnics", "aI\tQ\tn I k s");
result.add("i-\to-\tnize", "aI\tV\tn aI z");
result.add("i-\to-\tnos-\tphe-\tric", "aI\tQ\tn V s\tf e@\tI k");
result.add("i-\to-\tnos-\tphere", "aI\tj Q\tn V s\tf i: r");
result.add("i-\to-\tri-\to", "i:\tO@\ti:\t@U");
result.add("i-\to-\tsif", "aI\tV\ts I f");
result.add("i-\to-\tta", "aI\t@U\tt V");
result.add("i-\to-\tu", "aI\t@U\tj u:");
result.add("i-\to-\twa", "aI\tV\tw V");
result.add("i-\to-\twan", "aI\tV\tw V n");
result.add("i-\to-\twans", "aI\tV\tw V n z");
result.add("i-\to-\twa's", "aI\tV\tw V z");
result.add("i-\ton", "aI\tV n");
result.add("i-\tons", "aI\tV n z");
result.add("i-\tos", "i:\t@U s");
result.add("i-\tra", "aI\tr V");
result.add("i-\tra-\tni", "I@\tQ\tn i:");
result.add("i-\tra-\tni-\tan", "I@\tQ\tn i:\tV n");
result.add("i-\tra-\tni-\tans", "aI\tr eI\tn i:\tV n z");
result.add("i-\tra-\tqi", "I@\t{\tk i:");
result.add("i-\tra-\tqis", "I@\t{\tk i: z");
result.add("i-\tra-\tqi's", "I@\t{\tk i: z");
result.add("i-\tran", "I@\tQ n");
result.add("i-\tran-\tgate", "I@\tQ n\tg eI t");
result.add("i-\tran's", "I@\t{ n z");
result.add("i-\traq", "I@\tQ k");
result.add("i-\traq's", "I@\tQ k s");
result.add("i-\tras", "aI\tr V z");
result.add("i-\tra's", "aI\tr V z");
result.add("i-\tras-\tci-\tble", "I@\t{\ts I\tb V l");
result.add("i-\trate", "aI\tr eI t");
result.add("i-\tre-\tland", "aI\t@r\tl V n d");
result.add("i-\tre-\tna", "I@\teI\tn V");
result.add("i-\tre-\tton", "I@\tI\tt Q n");
result.add("i-\trene", "aI\tr i: n");
result.add("i-\trene's", "aI\tr i: n z");
result.add("i-\tri-\tan", "aI\tr i:\tV n");
result.add("i-\tri-\tde-\tscent", "I@\tI\td e\ts V n t");
result.add("i-\tri-\tdi-\tum", "I@\tI\td i:\tV m");
result.add("i-\tri-\tna", "I@\ti:\tn V");
result.add("i-\tri-\tses", "aI\tr I\ts V z");
result.add("i-\tris", "aI\tr I s");
result.add("i-\trish", "aI\tr I S");
result.add("i-\trish-\tman", "aI\tr I S\tm V n");
result.add("i-\tro-\tny", "aI\tr V\tn i:");
result.add("i-\tro-\tquois", "I@\tV k\tw OI");
result.add("i-\tron", "aI\t@r n");
result.add("i-\tron-\tside", "aI\t@r n\ts aI d");
result.add("i-\tron-\tsides", "aI\t@r n\ts aI d z");
result.add("i-\tron-\twood", "aI\t@r n\tw U d");
result.add("i-\tron-\twood's", "aI\t@r n\tw U d z");
result.add("i-\tsa", "i:\ts V");
result.add("i-\tsa-\tbel", "I\tz V\tb e l");
result.add("i-\tsa-\tbel-\tla", "I\tz V\tb e\tl V");
result.add("i-\tsa-\tbelle", "I\tz V\tb e l");
result.add("i-\tsa-\tdo-\tre", "I\ts Q\td O@\teI");
result.add("i-\tsaac", "aI\tz V k");
result.add("i-\tsaac-\tson", "aI\tz I k\ts V n");
result.add("i-\tsaacs", "aI\tz I k s");
result.add("i-\tsaak", "I\ts Q k");
result.add("i-\tsai-\tah", "aI\tz eI\tV");
result.add("i-\tse-\tlin", "I\ts V\tl V n");
result.add("i-\tsher-\twood", "I\tS @r\tw U d");
result.add("i-\tshi", "I\tS i:");
result.add("i-\tshi-\tha-\tra", "I\tS i:\th Q@\tV");
result.add("i-\tshi-\ti", "I\tS i:\ti:");
result.add("i-\tsi-\tdore", "I\tz I\td O@");
result.add("i-\tsis", "aI\ts I s");
result.add("i-\tsm", "I\tz V m");
result.add("i-\tsms", "I\tz V m z");
result.add("i-\tsn't", "I\tz V n t");
result.add("i-\tso-\tcy-\ta-\tnate", "aI\ts V\ts aI\tV\tn eI t");
result.add("i-\tso-\te-\tlec-\ttro-\tnic", "aI\ts @U\tV\tl e k\tt r Q\tn I k");
result.add("i-\tso-\tla", "aI\ts Q\tl V");
result.add("i-\tso-\tla-\tted", "aI\ts V\tl eI\tt V d");
result.add("i-\tso-\tla-\tting", "aI\ts V\tl eI\tt I N");
result.add("i-\tso-\tla-\ttio-\tni-\tsm", "aI\ts V\tl eI\tS V\tn I\tz V m");
result.add("i-\tso-\tla-\ttio-\tnist", "aI\ts V\tl eI\tS V\tn V s t");
result.add("i-\tso-\tla-\ttio-\tnists", "aI\ts V\tl eI\tS V\tn V s t s");
result.add("i-\tso-\tla-\ttion", "aI\ts V\tl eI\tS V n");
result.add("i-\tso-\tlate", "aI\ts V\tl eI t");
result.add("i-\tso-\tlates", "aI\ts V\tl eI t s");
result.add("i-\tso-\tmer", "aI\ts V\tm @r");
result.add("i-\tso-\tmers", "aI\ts V\tm @r z");
result.add("i-\tso-\tmor-\tphi-\tsm", "aI\ts V\tm O@\tf I\tz V m");
result.add("i-\tso-\tther-\tmal", "aI\ts V\tT @r\tm V l");
result.add("i-\tso-\tto-\tnic", "aI\ts V\tt Q\tn I k");
result.add("i-\tso-\tto-\tpic", "aI\ts V\tt Q\tp I k");
result.add("i-\tso-\ttope", "aI\ts V\tt @U p");
result.add("i-\tso-\ttopes", "aI\ts V\tt @U p s");
result.add("i-\tsol-\tde", "I\ts @U l\td V");
result.add("i-\tsom", "aI\ts V m");
result.add("i-\tsop-\tri-\tno-\tsine", "I\ts V p\tr I\tn V\ts i: n");
result.add("i-\tsos-\tce-\tles", "aI\ts O:\ts V\tl i: z");
result.add("i-\tsu-\tzu", "I\ts u:\tz u:");
result.add("i-\tta", "aI\tt V");
result.add("i-\tta-\tli-\ta", "i:\tt {\tl i:\tV");
result.add("i-\tta-\tlia-\tnate", "V\tt { l\tj V\tn eI t");
result.add("i-\tta-\tlian", "V\tt { l\tj V n");
result.add("i-\tta-\tly", "I\tt V\tl i:");
result.add("i-\tta-\tly's", "I\tt V\tl i: z");
result.add("i-\ttas-\tca", "aI\tt { s\tk V");
result.add("i-\tt'd", "I\tt V d");
result.add("i-\tte-\tmi-\tzer", "aI\tt V\tm aI\tz @r");
result.add("i-\tte-\tmi-\tzers", "aI\tt V\tm aI\tz @r z");
result.add("i-\tte-\tmi-\tzing", "aI\tt V\tm aI\tz I N");
result.add("i-\tte-\tmize", "aI\tt V\tm aI z");
result.add("i-\tte-\tmized", "aI\tt V\tm aI z d");
result.add("i-\tte-\tra-\ttive", "I\tt @r\teI\tt I v");
result.add("i-\ttel", "aI\tt e l");
result.add("i-\ttem", "aI\tt V m");
result.add("i-\ttems", "aI\tt V m z");
result.add("i-\tten", "aI\tt V n");
result.add("i-\ttha-\tca", "I\tT V\tk V");
result.add("i-\tti-\tne-\tra-\tries", "aI\tt I\tn @r\te@\ti: z");
result.add("i-\tti-\tne-\tra-\try", "aI\tt I\tn @r\te@\ti:");
result.add("i-\tti-\tne-\trant", "aI\tt I\tn @r\tV n t");
result.add("i-\tt'll", "I\tt V l");
result.add("i-\tto", "i:\tt @U");
result.add("i-\tto's", "i:\tt @U z");
result.add("i-\tva", "i:\tv V");
result.add("i-\tva-\tna", "I\tv Q\tn V");
result.add("i-\tva-\tnov", "I\tv V\tn Q v");
result.add("i-\tvan", "aI\tv V n");
result.add("i-\tvan-\thoe", "aI\tv V n\th @U");
result.add("i-\tvan-\tna", "I\tv Q\tn V");
result.add("i-\tvar", "I\tv @r");
result.add("i-\tvens", "aI\tv V n z");
result.add("i-\tver", "aI\tv @r");
result.add("i-\tver-\tson", "aI\tv @r\ts V n");
result.add("i-\tvers", "aI\tv @r z");
result.add("i-\tvey", "aI\tv i:");
result.add("i-\tvie", "aI\tv i:");
result.add("i-\tvins", "I\tv I n z");
result.add("i-\tvo", "aI\tv @U");
result.add("i-\tvo-\tri-\tan", "aI\tv O@\ti:\tV n");
result.add("i-\tvo-\tri-\tans", "aI\tv O@\ti:\tV n z");
result.add("i-\tvo-\try", "aI\tv @r\ti:");
result.add("i-\tvor", "aI\tv @r");
result.add("i-\tvy", "aI\tv i:");
result.add("i-\two", "aI\tw @U");
result.add("i-\txi-\ton", "I k\ts aI\tV n");
result.add("i-\tzard", "I\tz @r d");
result.add("i-\tzod", "aI\tz Q d");
result.add("i.", "aI");
result.add("ib", "I b");
result.add("ib-\tra-\thim", "I b\tr Q\th i: m");
result.add("ib-\tsen", "I b\ts V n");
result.add("ice", "aI s");
result.add("ice-\tberg", "aI s\tb @r g");
result.add("ice-\tbergs", "aI s\tb @r g z");
result.add("ice-\tbox", "aI s\tb Q k s");
result.add("ice-\tbrea-\tker", "aI s\tb r eI\tk @r");
result.add("ice-\tbrea-\tkers", "aI s\tb r eI\tk @r z");
result.add("ice-\tfish", "aI s\tf I S");
result.add("ice-\tlan-\tdic", "aI s\tl { n\td I k");
result.add("ice-\tland", "aI s\tl V n d");
result.add("ice-\tman", "aI s\tm { n");
result.add("ice-\tska-\tting", "aI s\ts k eI\tt I N");
result.add("ice-\tskate", "aI s\ts k eI t");
result.add("iced", "aI s t");
result.add("ich", "I tS");
result.add("id", "I d");
result.add("i'd", "aI d");
result.add("id-\tly", "aI d\tl i:");
result.add("ide", "aI d");
result.add("ierne", "I@ n");
result.add("if", "I f");
result.add("if-\tfy", "I\tf i:");
result.add("ifs", "I f s");
result.add("ig-\tle-\tsi-\ta", "i: g\tl eI\ts i:\tV");
result.add("ig-\tle-\tsi-\tas", "I g\tl eI\ts i:\tV s");
result.add("ig-\tloo", "I g\tl u:");
result.add("ig-\tna-\tci-\to", "I g\tn Q\ts i:\t@U");
result.add("ig-\tna-\tci-\to's", "I g\tn Q\ts i:\t@U z");
result.add("ig-\tna-\ttia", "I g\tn Q\tS V");
result.add("ig-\tna-\ttius", "I g\tn eI\tS V s");
result.add("ig-\tnace", "I g\tn V s");
result.add("ig-\tnatz", "I g\tn V t s");
result.add("ig-\tne-\tous", "I g\tn i:\tV s");
result.add("ig-\tni-\tted", "I g\tn aI\tt V d");
result.add("ig-\tni-\tting", "I g\tn aI\tt I N");
result.add("ig-\tni-\ttion", "I g\tn I\tS V n");
result.add("ig-\tnite", "I g\tn aI t");
result.add("ig-\tnites", "I g\tn aI t s");
result.add("ig-\tno-\tble", "I g\tn @U\tb V l");
result.add("ig-\tno-\tmi-\tni-\tous", "I g\tn V\tm I\tn i:\tV s");
result.add("ig-\tno-\tmi-\tny", "I g\tn @U\tm I\tn i:");
result.add("ig-\tno-\tra-\tmus", "I g\tn @r\teI\tm V s");
result.add("ig-\tno-\trance", "I g\tn @r\tV n s");
result.add("ig-\tno-\trant", "I g\tn @r\tV n t");
result.add("ig-\tno-\tring", "I g\tn O@\tI N");
result.add("ig-\tnore", "I g\tn O@");
result.add("ig-\tnored", "I g\tn O@ d");
result.add("ig-\tnores", "I g\tn O@ z");
result.add("ige", "aI dZ");
result.add("ii-\te", "i:\ti:");
result.add("ike", "aI k");
result.add("ike's", "aI k s");
result.add("il", "I l");
result.add("il-\tka", "I l\tk V");
result.add("il-\tle-\tga-\tli-\tties", "I\tl i:\tg {\tl I\tt i: z");
result.add("il-\tle-\tga-\tli-\tty", "I\tl i:\tg {\tl I\tt i:");
result.add("il-\tle-\tgal", "I\tl i:\tg V l");
result.add("il-\tle-\tgal-\tly", "I\tl i:\tg V\tl i:");
result.add("il-\tle-\tgals", "I\tl i:\tg V l z");
result.add("il-\tle-\tgi-\tble", "I\tl e\tdZ I\tb V l");
result.add("il-\tle-\tgi-\tti-\tma-\tcy", "I\tl I\tdZ I\tt I\tm V\ts i:");
result.add("il-\tle-\tgi-\tti-\tmate", "I\tl I\tdZ I\tt I\tm V t");
result.add("il-\tli-\tcit", "I\tl I\ts I t");
result.add("il-\tli-\tcit-\tly", "I\tl I\ts I t\tl i:");
result.add("il-\tli-\tnois", "I\tl I\tn OI");
result.add("il-\tli-\tnois's", "I\tl I\tn OI z");
result.add("il-\tli-\tqui-\tdi-\tty", "I\tl I k\tw I\td I\tt i:");
result.add("il-\tli-\tquid", "I\tl I k\tw V d");
result.add("il-\tli-\tte-\tra-\tcy", "I\tl I\tt @r\tV\ts i:");
result.add("il-\tli-\tte-\trate", "I\tl I\tt @r\tV t");
result.add("il-\tli-\tte-\trates", "I\tl I\tt @r\tV t s");
result.add("il-\tling-\tworth", "I\tl I N\tw @r T");
result.add("il-\tlo-\tgi-\tcal", "I\tl Q\tdZ I\tk V l");
result.add("il-\tlo-\tgic", "I\tl Q\tdZ I k");
result.add("il-\tlu-\tmi-\tna-\tted", "I\tl u:\tm I\tn eI\tt I d");
result.add("il-\tlu-\tmi-\tna-\tting", "I\tl u:\tm I\tn eI\tt I N");
result.add("il-\tlu-\tmi-\tna-\ttion", "I\tl u:\tm I\tn eI\tS V n");
result.add("il-\tlu-\tmi-\tna-\ttor", "I\tl u:\tm I\tn eI\tt @r");
result.add("il-\tlu-\tmi-\tnate", "I\tl u:\tm I\tn eI t");
result.add("il-\tlu-\tmi-\tnates", "I\tl u:\tm I\tn eI t s");
result.add("il-\tlu-\tmine", "I\tl u:\tm I n");
result.add("il-\tlu-\tmined", "I\tl u:\tm I n d");
result.add("il-\tlu-\tsio-\tna-\try", "I\tl u:\tZ V\tn e@\ti:");
result.add("il-\tlu-\tsio-\tni-\tsm", "I\tl u:\tZ V\tn I\tz V m");
result.add("il-\tlu-\tsio-\tnist", "I\tl u:\tZ V\tn I s t");
result.add("il-\tlu-\tsio-\tnists", "I\tl u:\tZ V\tn I s t s");
result.add("il-\tlu-\tsio-\tnist's", "I\tl u:\tZ V\tn I s t s");
result.add("il-\tlu-\tsion", "I\tl u:\tZ V n");
result.add("il-\tlu-\tsions", "I\tl u:\tZ V n z");
result.add("il-\tlu-\tsive", "I\tl u:\ts I v");
result.add("il-\tlu-\tso-\try", "I\tl u:\ts @r\ti:");
result.add("il-\tlust-\tra-\tted", "I\tl V s\tt r eI\tt V d");
result.add("il-\tlust-\tra-\tting", "I\tl V s\tt r eI\tt I N");
result.add("il-\tlust-\tra-\ttion", "I\tl V s\tt r eI\tS V n");
result.add("il-\tlust-\tra-\ttions", "I\tl V s\tt r eI\tS V n z");
result.add("il-\tlust-\tra-\ttive", "I\tl V s\tt r V\tt I v");
result.add("il-\tlust-\tra-\ttor", "I\tl V s\tt r eI\tt @r");
result.add("il-\tlust-\tra-\ttors", "I\tl V s\tt r eI\tt @r z");
result.add("il-\tlust-\trate", "I\tl V s\tt r eI t");
result.add("il-\tlust-\trates", "I\tl V s\tt r eI t s");
result.add("il-\tlust-\tri-\tous", "V\tl V s\tt r i:\tV s");
result.add("il-\tly-\tri-\tan", "V\tl I@\ti:\tV n");
result.add("il-\tsa", "I l\ts V");
result.add("il-\tya", "I l\tj V");
result.add("iles", "aI l z");
result.add("ilk", "I l k");
result.add("ill", "I l");
result.add("i'll", "aI l");
result.add("ill-\tnes-\tses", "I l\tn V\ts V z");
result.add("ill-\tness", "I l\tn V s");
result.add("ills", "I l z");
result.add("ilse", "I l s");
result.add("im", "I m");
result.add("i'm", "aI m");
result.add("im-\tba-\tlan-\tces", "I m\tb {\tl V n\ts V z");
result.add("im-\tba-\tlance", "I m\tb {\tl V n s");
result.add("im-\tbe-\tcile", "I m\tb V\ts V l");
result.add("im-\tbed", "I m\tb e d");
result.add("im-\tbed-\tded", "I m\tb e\td V d");
result.add("im-\tber", "I m\tb @r");
result.add("im-\tbibe", "I m\tb aI b");
result.add("im-\tbibed", "I m\tb aI b d");
result.add("im-\tbo-\tden", "I m\tb @U\td V n");
result.add("im-\tbro-\tglio", "I m\tb r @U l\tj @U");
result.add("im-\tbue", "I m\tb j u:");
result.add("im-\tbued", "I m\tb j u: d");
result.add("im-\tma-\ttu-\tri-\tty", "I\tm V\ttS U@\tV\tt i:");
result.add("im-\tma-\tture", "I\tm V t\tj U@");
result.add("im-\tme-\tdi-\ta-\tcy", "I\tm i:\td i:\tV\ts i:");
result.add("im-\tme-\tdi-\tate", "I\tm i:\td i:\tV t");
result.add("im-\tme-\tdi-\tate-\tly", "I\tm i:\td i:\tV t\tl i:");
result.add("im-\tme-\tmo-\tri-\tal", "I\tm V\tm O@\ti:\tV l");
result.add("im-\tmea-\tsu-\tra-\tble", "I\tm e\tZ @r\t{\tb V l");
result.add("im-\tmea-\tsu-\trab-\tly", "I\tm e\tZ @r\t{ b\tl i:");
result.add("im-\tmense", "I\tm e n s");
result.add("im-\tmense-\tly", "I\tm e n\ts l i:");
result.add("im-\tmer-\tsion", "I\tm @r\tZ V n");
result.add("im-\tmerse", "I\tm @r s");
result.add("im-\tmersed", "I\tm @r s t");
result.add("im-\tmi-\tnence", "I\tm I\tn V n s");
result.add("im-\tmi-\tnent", "I\tm I\tn V n t");
result.add("im-\tmi-\tnent-\tly", "I\tm I\tn V n\tt l i:");
result.add("im-\tmig-\tra-\tted", "I\tm I g\tr eI\tt I d");
result.add("im-\tmig-\tra-\ttion", "I\tm I g\tr eI\tS V n");
result.add("im-\tmig-\trant", "I\tm I g\tr V n t");
result.add("im-\tmig-\trants", "I\tm I g\tr V n t s");
result.add("im-\tmig-\trant's", "I\tm I g\tr V n t s");
result.add("im-\tmig-\trate", "I\tm I g\tr eI t");
result.add("im-\tmis-\tci-\tble", "I\tm I\ts V\tb V l");
result.add("im-\tmo-\tbi-\tli-\tty", "I\tm @U\tb I\tl I\tt i:");
result.add("im-\tmo-\tbi-\tli-\tzing", "I\tm @U\tb I\tl aI\tz I N");
result.add("im-\tmo-\tbi-\tlize", "I\tm @U\tb I\tl aI z z");
result.add("im-\tmo-\tbi-\tlized", "I\tm @U\tb I\tl aI z d");
result.add("im-\tmo-\tbile", "I\tm @U\tb V l");
result.add("im-\tmo-\tra-\tli-\tty", "I\tm @r\t{\tl I\tt i:");
result.add("im-\tmo-\tral", "I\tm O@\tV l");
result.add("im-\tmo-\ttile", "I\tm @U\tt I l");
result.add("im-\tmo-\tva-\tble", "I\tm u:\tv V\tb V l");
result.add("im-\tmor-\tta-\tli-\tty", "I\tm O@\tt {\tl I\tt i:");
result.add("im-\tmor-\tta-\tli-\tzes", "I\tm O@\tt V\tl aI\tz V z");
result.add("im-\tmor-\tta-\tli-\tzing", "I\tm O@\tt V\tl aI\tz I N");
result.add("im-\tmor-\tta-\tlize", "I\tm O@\tt V\tl aI z");
result.add("im-\tmor-\tta-\tlized", "I\tm O@\tt V\tl aI z d");
result.add("im-\tmor-\ttal", "I\tm O@\tt V l");
result.add("im-\tmor-\ttals", "I\tm O@\tt V l z");
result.add("im-\tmu-\tni-\tties", "I m\tj u:\tn I\tt i: z");
result.add("im-\tmu-\tni-\tty", "I m\tj u:\tn I\tt i:");
result.add("im-\tmu-\tni-\tza-\ttion", "I m\tj u:\tn I\tz eI\tS V n");
result.add("im-\tmu-\tni-\tza-\ttions", "I m\tj u:\tn I\tz eI\tS V n z");
result.add("im-\tmu-\tni-\tzes", "I m\tj V\tn aI\tz V z");
result.add("im-\tmu-\tni-\tzing", "I m\tj V\tn aI\tz I N");
result.add("im-\tmu-\tnize", "I m\tj u:\tn aI z");
result.add("im-\tmu-\tnized", "I m\tj V\tn aI z d");
result.add("im-\tmu-\tno-\tde-\tfi-\tcien-\tcy", "I m\tj u:\tn @U\td I\tf I\tS V n\ts i:");
result.add("im-\tmu-\tno-\tlo-\tgi-\tcal", "I m\tj u:\tn V\tl Q\tdZ I\tk V l");
result.add("im-\tmu-\tno-\tlo-\tgist", "I m\tj u:\tn Q\tl V\tdZ V s t");
result.add("im-\tmu-\tno-\tlo-\tgy", "I m\tj u:\tn Q\tl V\tdZ i:");
result.add("im-\tmu-\tno-\tthe-\tra-\tpy", "I m\tj u:\tn @U\tT e@\tV\tp i:");
result.add("im-\tmu-\tta-\tble", "I m\tj u:\tt V\tb V l");
result.add("im-\tmune", "I m\tj u: n");
result.add("im-\tpa-\tla", "I m\tp Q\tl V");
result.add("im-\tpa-\tnel", "I m\tp {\tn V l");
result.add("im-\tpa-\tneled", "I m\tp {\tn V l d");
result.add("im-\tpa-\ttience", "I m\tp eI\tS e n s");
result.add("im-\tpa-\ttiens", "I m\tp eI\tS e n z");
result.add("im-\tpa-\ttient", "I m\tp eI\tS e n t");
result.add("im-\tpa-\ttient-\tly", "I m\tp eI\tS e n\tt l i:");
result.add("im-\tpac-\tted", "I m\tp { k\tt V d");
result.add("im-\tpac-\tting", "I m\tp { k\tt I N");
result.add("im-\tpact", "I m\tp { k t");
result.add("im-\tpacts", "I m\tp { k t s");
result.add("im-\tpai-\tring", "I m\tp e@\tI N");
result.add("im-\tpair", "I m\tp e@");
result.add("im-\tpair-\tment", "I m\tp e@\tm V n t");
result.add("im-\tpair-\tments", "I m\tp e@\tm V n t s");
result.add("im-\tpaired", "I m\tp e@ d");
result.add("im-\tpairs", "I m\tp e@ z");
result.add("im-\tpale", "I m\tp eI l");
result.add("im-\tpaled", "I m\tp eI l d");
result.add("im-\tpar-\tted", "I m\tp Q@\tt V d");
result.add("im-\tpar-\tti-\ta-\tli-\tty", "I m\tp Q@\tS i:\t{\tl I\tt i:");
result.add("im-\tpar-\ttial", "I m\tp Q@\tS V l");
result.add("im-\tpar-\ttial-\tly", "I m\tp Q@\tS V\tl i:");
result.add("im-\tpar-\tting", "I m\tp Q@\tt I N");
result.add("im-\tpart", "I m\tp Q@ t");
result.add("im-\tparts", "I m\tp Q@ t s");
result.add("im-\tpas-\tsa-\tble", "I m\tp {\ts V\tb V l");
result.add("im-\tpas-\tsion", "I m\tp {\tS V n");
result.add("im-\tpas-\tsioned", "I m\tp {\tS V n d");
result.add("im-\tpas-\tsive", "I m\tp {\ts I v");
result.add("im-\tpas-\tsive-\tly", "I m\tp {\ts I v\tl i:");
result.add("im-\tpasse", "I m\tp { s");
result.add("im-\tpe-\tdance", "I m\tp i:\td V n s");
result.add("im-\tpe-\tded", "I m\tp i:\td V d");
result.add("im-\tpe-\tdi-\tment", "I m\tp e\td I\tm e n t");
result.add("im-\tpe-\tdi-\tments", "I m\tp e\td I\tm e n t s");
result.add("im-\tpe-\tding", "I m\tp i:\td I N");
result.add("im-\tpe-\tnet-\tra-\tble", "I m\tp e\tn V t\tr V\tb V l");
result.add("im-\tpe-\tra-\ttive", "I m\tp e@\tV\tt I v");
result.add("im-\tpe-\tra-\ttives", "I m\tp e@\tV\tt I v z");
result.add("im-\tpe-\tri-\ta", "I m\tp i:\tr i:\tV");
result.add("im-\tpe-\tri-\ta-\tli-\tsm", "I m\tp I@\ti:\tV\tl I\tz V m");
result.add("im-\tpe-\tri-\ta-\tlis-\ttic", "I m\tp i:\tr i:\tV\tl I s\tt I k");
result.add("im-\tpe-\tri-\ta-\tlist", "I m\tp I@\ti:\tV\tl V s t");
result.add("im-\tpe-\tri-\ta-\tlists", "I m\tp I@\ti:\tV\tl V s t s");
result.add("im-\tpe-\tri-\tal", "I m\tp I@\ti:\tV l");
result.add("im-\tpe-\tri-\tling", "I m\tp e@\tI\tl I N");
result.add("im-\tpe-\tri-\tous", "I m\tp I@\ti:\tV s");
result.add("im-\tpe-\tril", "I m\tp e@\tI l");
result.add("im-\tpe-\triled", "I m\tp e@\tI l d");
result.add("im-\tpe-\trils", "I m\tp e@\tI l z");
result.add("im-\tpe-\ttuous", "I m\tp e tS\tw V s");
result.add("im-\tpe-\ttus", "I m\tp V\tt V s");
result.add("im-\tpea-\tcha-\tble", "I m\tp i:\ttS V\tb V l");
result.add("im-\tpea-\tches", "I m\tp i:\ttS V z");
result.add("im-\tpea-\tching", "I m\tp i:\ttS I N");
result.add("im-\tpeach", "I m\tp i: tS");
result.add("im-\tpeach-\tment", "I m\tp i: tS\tm V n t");
result.add("im-\tpeach-\tments", "I m\tp i: tS\tm V n t s");
result.add("im-\tpeached", "I m\tp i: tS t");
result.add("im-\tpec-\tca-\tble", "I m\tp e\tk V\tb V l");
result.add("im-\tpec-\tcab-\tly", "I m\tp e\tk V b\tl i:");
result.add("im-\tpede", "I m\tp i: d");
result.add("im-\tpedes", "I m\tp i: d z");
result.add("im-\tpel", "I m\tp e l");
result.add("im-\tpelled", "I m\tp e l d");
result.add("im-\tpen-\tding", "I m\tp e n\td I N");
result.add("im-\tpend", "I m\tp e n d");
result.add("im-\tper-\tcep-\tti-\tble", "I m\tp @r\ts e p\tt I\tb V l");
result.add("im-\tper-\tcep-\ttib-\tly", "I m\tp @r\ts e p\tt I b\tl i:");
result.add("im-\tper-\tfec-\ttion", "I m\tp @r\tf e k\tS V n");
result.add("im-\tper-\tfec-\ttions", "I m\tp @r\tf e k\tS V n z");
result.add("im-\tper-\tfect", "I m\tp @r\tf I k t");
result.add("im-\tper-\tfect-\tly", "I m\tp @r\tf I k\tt l i:");
result.add("im-\tper-\tmis-\tsi-\tble", "I m\tp @r\tm I\ts I\tb V l");
result.add("im-\tper-\tso-\tna-\tli-\tty", "I m\tp @r\ts V\tn {\tl V\tt i:");
result.add("im-\tper-\tso-\tna-\tted", "I m\tp @r\ts V\tn eI\tt V d");
result.add("im-\tper-\tso-\tna-\tting", "I m\tp @r\ts V\tn eI\tt I N");
result.add("im-\tper-\tso-\tna-\ttion", "I m\tp @r\ts V\tn eI\tS V n");
result.add("im-\tper-\tso-\tna-\ttor", "I m\tp @r\ts V\tn eI\tt @r");
result.add("im-\tper-\tso-\tna-\ttors", "I m\tp @r\ts V\tn eI\tt @r z");
result.add("im-\tper-\tso-\tnal", "I m\tp @r\ts V\tn V l");
result.add("im-\tper-\tso-\tnate", "I m\tp @r\ts V\tn eI t");
result.add("im-\tper-\tti-\tnent", "I m\tp @r\tt I\tn e n t");
result.add("im-\tper-\tvi-\tous", "I m\tp @r\tv i:\tV s");
result.add("im-\tpin-\tges", "I m\tp I n\tdZ V z");
result.add("im-\tpinge", "I m\tp I n dZ");
result.add("im-\tpish", "I m\tp I S");
result.add("im-\tpla-\tca-\tble", "I m\tp l {\tk V\tb V l");
result.add("im-\tplan-\tta-\tble", "I m\tp l { n\tt V\tb V l");
result.add("im-\tplan-\tta-\ttion", "I m\tp l { n\tt eI\tS V n");
result.add("im-\tplan-\tted", "I m\tp l { n\tt V d");
result.add("im-\tplan-\tting", "I m\tp l { n\tt I N");
result.add("im-\tplant", "I m\tp l { n t");
result.add("im-\tplants", "I m\tp l { n t s");
result.add("im-\tplau-\tsi-\tble", "I m\tp l O:\tz I\tb V l");
result.add("im-\tplau-\tsib-\tly", "I m\tp l O:\tz I b\tl i:");
result.add("im-\tple-\tmen-\tta-\ttion", "I m\tp l V\tm e n\tt eI\tS V n");
result.add("im-\tple-\tmen-\tted", "I m\tp l V\tm e n\tt V d");
result.add("im-\tple-\tmen-\tting", "I m\tp l V\tm e n\tt I N");
result.add("im-\tple-\tment", "I m\tp l V\tm V n t");
result.add("im-\tple-\tments", "I m\tp l V\tm V n t s");
result.add("im-\tpli-\tca-\tted", "I m\tp l I\tk eI\tt V d");
result.add("im-\tpli-\tca-\tting", "I m\tp l I\tk eI\tt I N");
result.add("im-\tpli-\tca-\ttion", "I m\tp l I\tk eI\tS V n");
result.add("im-\tpli-\tca-\ttions", "I m\tp l I\tk eI\tS V n z");
result.add("im-\tpli-\tcate", "I m\tp l I\tk eI t");
result.add("im-\tpli-\tcates", "I m\tp l I\tk eI t s");
result.add("im-\tpli-\tcit", "I m\tp l I\ts I t");
result.add("im-\tpli-\tcit-\tly", "I m\tp l I\ts I t\tl i:");
result.add("im-\tply", "I m\tp l aI");
result.add("im-\tply-\ting", "I m\tp l aI\tI N");
result.add("im-\tpo-\tli-\ttic", "I m\tp O:\tl I\tt I k");
result.add("im-\tpo-\tlite", "I m\tp V\tl aI t");
result.add("im-\tpo-\tses", "I m\tp @U\tz V z");
result.add("im-\tpo-\tsi-\ttion", "I m\tp V\tz I\tS V n");
result.add("im-\tpo-\tsing", "I m\tp @U\tz I N");
result.add("im-\tpo-\ttence", "I m\tp V\tt V n s");
result.add("im-\tpo-\ttent", "I m\tp V\tt V n t");
result.add("im-\tpon-\tde-\tra-\tble", "I m\tp Q n\td @r\tV\tb V l");
result.add("im-\tpon-\tde-\tra-\tbles", "I m\tp Q n\td @r\tV\tb V l z");
result.add("im-\tpor-\tta-\ttion", "I m\tp O@\tt eI\tS V n");
result.add("im-\tpor-\ttance", "I m\tp O@\tt V n s");
result.add("im-\tpor-\ttant", "I m\tp O@\tt V n t");
result.add("im-\tpor-\ttant-\tly", "I m\tp O@\tt V n\tt l i:");
result.add("im-\tpor-\tted", "I m\tp O@\tt V d");
result.add("im-\tpor-\tter", "I m\tp O@\tt @r");
result.add("im-\tpor-\tters", "I m\tp O@\tt @r z");
result.add("im-\tpor-\tting", "I m\tp O@\tt I N");
result.add("im-\tport", "I m\tp O@ t");
result.add("im-\tports", "I m\tp O@ t s");
result.add("im-\tpos-\tsi-\tbi-\tli-\tty", "I m\tp O:\ts I\tb I\tl I\tt i:");
result.add("im-\tpos-\tsi-\tble", "I m\tp Q\ts I\tb V l");
result.add("im-\tpos-\tsib-\tly", "I m\tp Q\ts I b\tl i:");
result.add("im-\tpos-\tter", "I m\tp O: s\tt @r");
result.add("im-\tpos-\ttor", "I m\tp O: s\tt @r");
result.add("im-\tpos-\ttors", "I m\tp O: s\tt @r z");
result.add("im-\tpose", "I m\tp @U z");
result.add("im-\tposed", "I m\tp @U z d");
result.add("im-\tpoun-\tded", "I m\tp aU n\td V d");
result.add("im-\tpound", "I m\tp aU n d");
result.add("im-\tpound-\tment", "I m\tp aU n\td m V n t");
result.add("im-\tpound-\tments", "I m\tp aU n\td m V n t s");
result.add("im-\tpove-\tri-\tshes", "I m\tp Q v\tr I\tS V z");
result.add("im-\tpove-\trish", "I m\tp Q v\tr I S");
result.add("im-\tpove-\trish-\tment", "I m\tp Q v\tr I S\tm V n t");
result.add("im-\tpove-\trished", "I m\tp Q v\tr I S t");
result.add("im-\tpu-\tni-\tty", "I m\tp j u:\tn I\tt i:");
result.add("im-\tpu-\tri-\tties", "I m\tp j U@\tI\tt i: z");
result.add("im-\tpu-\tri-\tty", "I m\tp j U@\tI\tt i:");
result.add("im-\tpu-\tta-\ttion", "I m\tp j V\tt eI\tS V n");
result.add("im-\tpu-\tted", "I m\tp j u:\tt V d");
result.add("im-\tpug-\tning", "I m\tp j u:\tn I N");
result.add("im-\tpugn", "I m\tp j u: n");
result.add("im-\tpugned", "I m\tp j u: n d");
result.add("im-\tpul-\tses", "I m\tp V l\ts V z");
result.add("im-\tpul-\tsive", "I m\tp V l\ts I v");
result.add("im-\tpul-\tsive-\tly", "I m\tp V l\ts I v\tl i:");
result.add("im-\tpulse", "I m\tp V l s");
result.add("im-\tpure", "I m\tp j U@");
result.add("im-\tpute", "I m\tp j u: t");
result.add("im-\tre", "I m\tr V");
result.add("imp", "I m p");
result.add("imp-\tlied", "I m\tp l aI d");
result.add("imp-\tlies", "I m\tp l aI z");
result.add("imp-\tlo-\tded", "I m\tp l @U\td V d");
result.add("imp-\tlo-\tding", "I m\tp l @U\td I N");
result.add("imp-\tlo-\tring", "I m\tp l O@\tI N");
result.add("imp-\tlo-\tsion", "I m\tp l @U\tZ V n");
result.add("imp-\tlode", "I m\tp l @U d");
result.add("imp-\tlodes", "I m\tp l @U d z");
result.add("imp-\tlore", "I m\tp l O@");
result.add("imp-\tlored", "I m\tp l O@ d");
result.add("imp-\tlores", "I m\tp l O@ z");
result.add("imp-\trac-\tti-\tca-\tble", "I m\tp r { k\tt I\tk V\tb V l");
result.add("imp-\trac-\tti-\tcal", "I m\tp r { k\tt I\tk V l");
result.add("imp-\tre-\tcise", "I m\tp r V\ts aI s");
result.add("imp-\tre-\tsa-\tri-\to", "I m\tp r e\ts Q@\ti:\t@U");
result.add("imp-\treg-\tna-\tble", "I m\tp r e g\tn V\tb V l");
result.add("imp-\treg-\tna-\tted", "I m\tp r e g\tn eI\tt V d");
result.add("imp-\treg-\tna-\ttion", "I m\tp r e g\tn eI\tS V n");
result.add("imp-\treg-\tnate", "I m\tp r e g\tn eI t");
result.add("imp-\tres-\tses", "I m\tp r e\ts V z");
result.add("imp-\tres-\tsing", "I m\tp r e\ts I N");
result.add("imp-\tres-\tsio-\tna-\tble", "I m\tp r e\tS V\tn V\tb V l");
result.add("imp-\tres-\tsio-\tni-\tsm", "I m\tp r e\tS V\tn I\tz V m");
result.add("imp-\tres-\tsio-\tnis-\ttic", "I m\tp r e\tS V\tn I s\tt I k");
result.add("imp-\tres-\tsio-\tnist", "I m\tp r e\tS V\tn I s t");
result.add("imp-\tres-\tsio-\tnists", "I m\tp r e\tS V\tn I s t s");
result.add("imp-\tres-\tsion", "I m\tp r e\tS V n");
result.add("imp-\tres-\tsions", "I m\tp r e\tS V n z");
result.add("imp-\tres-\tsive", "I m\tp r e\ts I v");
result.add("imp-\tres-\tsive-\tly", "I m\tp r e\ts I v\tl i:");
result.add("imp-\tress", "I m\tp r e s");
result.add("imp-\tress-\tment", "I m\tp r e s\tm V n t");
result.add("imp-\tressed", "I m\tp r e s t");
result.add("imp-\tri-\tma-\ttur", "I m\tp r I\tm Q\tt @r");
result.add("imp-\tri-\tmis", "I m\tp r i:\tm I s");
result.add("imp-\tri-\tso-\tning", "I m\tp r I\tz V\tn I N");
result.add("imp-\tri-\tson", "I m\tp r I\tz V n");
result.add("imp-\tri-\tson-\tment", "I m\tp r I\tz V n\tm V n t");
result.add("imp-\tri-\tsoned", "I m\tp r I\tz V n d");
result.add("imp-\trin-\tted", "I m\tp r I n\tt V d");
result.add("imp-\trin-\tting", "I m\tp r I n\tt I N");
result.add("imp-\trint", "I m\tp r I n t");
result.add("imp-\trints", "I m\tp r I n t s");
result.add("imp-\tro-\tba-\tble", "I m\tp r Q\tb V\tb V l");
result.add("imp-\tro-\tbab-\tly", "I m\tp r Q\tb V b\tl i:");
result.add("imp-\tro-\tper", "I m\tp r Q\tp @r");
result.add("imp-\tro-\tper-\tly", "I m\tp r Q\tp @r\tl i:");
result.add("imp-\tro-\tvi-\tsa-\ttio-\tnal", "I m\tp r Q\tv I\tz eI\tS V\tn V l");
result.add("imp-\tro-\tvi-\tsa-\ttion", "I m\tp r Q\tv I\tz eI\tS V n");
result.add("imp-\tro-\tvi-\tsa-\ttions", "I m\tp r Q\tv I\tz eI\tS V n z");
result.add("imp-\tro-\tvi-\tsing", "I m\tp r V\tv aI\tz I N");
result.add("imp-\tro-\tving", "I m\tp r u:\tv I N");
result.add("imp-\tro-\tvise", "I m\tp r V\tv aI z");
result.add("imp-\tro-\tvised", "I m\tp r V\tv aI z d");
result.add("imp-\tromp-\ttu", "I m\tp r Q m\tp t u:");
result.add("imp-\trop-\tri-\te-\tties", "I m\tp r V p\tr aI\tV\tt i: z");
result.add("imp-\trop-\tri-\te-\tty", "I m\tp r V p\tr aI\tV\tt i:");
result.add("imp-\trov", "I m\tp r Q v");
result.add("imp-\trove", "I m\tp r u: v");
result.add("imp-\trove-\tment", "I m\tp r u: v\tm V n t");
result.add("imp-\trove-\tments", "I m\tp r u: v\tm V n t s");
result.add("imp-\troved", "I m\tp r u: v d");
result.add("imp-\troves", "I m\tp r u: v z");
result.add("imp-\tru-\tdence", "I m\tp r u:\td V n s");
result.add("imp-\tru-\tdent", "I m\tp r u:\td V n t");
result.add("imp-\tru-\tdent-\tly", "I m\tp r u:\td V n\tt l i:");
result.add("in", "I n");
result.add("in-\tbo-\tdy", "I n\tb Q\td i:");
result.add("in-\tboard", "I n\tb O@ d");
result.add("in-\tborn", "I n\tb O@ n");
result.add("in-\tbound", "I n\tb aU n d");
result.add("in-\tbred", "I n\tb r e d");
result.add("in-\tbree-\tding", "I n\tb r i:\td I N");
result.add("in-\tbreed", "I n\tb r i: d");
result.add("in-\tca", "I N\tk V");
result.add("in-\tca-\tpa-\tble", "I n\tk eI\tp V\tb V l");
result.add("in-\tca-\tpa-\tci-\tta-\tted", "I n\tk V\tp {\ts V\tt eI\tt V d");
result.add("in-\tca-\tpa-\tci-\tta-\tting", "I n\tk V\tp {\ts V\tt eI\tt I N");
result.add("in-\tca-\tpa-\tci-\tta-\ttion", "I n\tk V\tp {\ts V\tt eI\tS V n");
result.add("in-\tca-\tpa-\tci-\ttate", "I n\tk V\tp {\ts V\tt eI t");
result.add("in-\tca-\tpa-\tci-\tty", "I n\tk V\tp {\ts V\tt i:");
result.add("in-\tcal-\tcu-\tla-\tble", "I n\tk { l\tk j V\tl V\tb V l");
result.add("in-\tcan-\tdes-\tcent", "I n\tk V n\td e\ts V n t");
result.add("in-\tcan-\tta-\ttion", "I n\tk V n\tt eI\tS V n");
result.add("in-\tcan-\tta-\tto-\try", "I n\tk { n\tt V\tt O@\ti:");
result.add("in-\tcant", "I n\tk { n t");
result.add("in-\tcar-\tce-\tra-\tted", "I n\tk Q@\ts @r\teI\tt V d");
result.add("in-\tcar-\tce-\tra-\tting", "I n\tk Q@\ts @r\teI\tt I N");
result.add("in-\tcar-\tce-\tra-\ttion", "I n\tk Q@\ts @r\teI\tS V n");
result.add("in-\tcar-\tce-\trate", "I n\tk Q@\ts @r\teI t");
result.add("in-\tcar-\tna-\ttion", "I n\tk Q@\tn eI\tS V n");
result.add("in-\tcar-\tna-\ttions", "I n\tk Q@\tn eI\tS V n z");
result.add("in-\tcar-\tnate", "I n\tk Q@\tn V t");
result.add("in-\tcas", "I N\tk V z");
result.add("in-\tcase", "I n\tk eI s");
result.add("in-\tcen-\tdi-\ta-\try", "I n\ts e n\td i:\te@\ti:");
result.add("in-\tcen-\ttive", "I n\ts e n\tt I v");
result.add("in-\tcen-\ttives", "I n\ts e n\tt I v z");
result.add("in-\tcense", "I n\ts e n s");
result.add("in-\tcensed", "I n\ts e n s t");
result.add("in-\tcep-\ttion", "I n\ts e p\tS V n");
result.add("in-\tces-\tsant", "I n\ts e\ts V n t");
result.add("in-\tces-\tsant-\tly", "I n\ts e\ts V n\tt l i:");
result.add("in-\tces-\ttuous", "I n\ts e s\ttS w V s");
result.add("in-\tcest", "I n\ts e s t");
result.add("in-\tches", "I n\ttS V z");
result.add("in-\tching", "I n\ttS I N");
result.add("in-\tchon", "I n\ttS V n");
result.add("in-\tci-\tden-\tces", "I n\ts I\td e n\ts V z");
result.add("in-\tci-\tden-\ttal", "I n\ts I\td e n\tt V l");
result.add("in-\tci-\tden-\ttal-\tly", "I n\ts I\td e n\tt V\tl i:");
result.add("in-\tci-\tden-\ttals", "I n\ts I\td e n\tt V l z");
result.add("in-\tci-\tdence", "I n\ts I\td e n s");
result.add("in-\tci-\tdent", "I n\ts I\td e n t");
result.add("in-\tci-\tdents", "I n\ts I\td e n t s");
result.add("in-\tci-\tne-\tra-\tted", "I n\ts I\tn @r\teI\tt I d");
result.add("in-\tci-\tne-\tra-\tting", "I n\ts I\tn @r\teI\tt I N");
result.add("in-\tci-\tne-\tra-\ttion", "I n\ts I\tn @r\teI\tS V n");
result.add("in-\tci-\tne-\tra-\ttor", "I n\ts I\tn @r\teI\tt @r");
result.add("in-\tci-\tne-\tra-\ttors", "I n\ts I\tn @r\teI\tt @r z");
result.add("in-\tci-\tne-\trate", "I n\ts I\tn @r\teI t");
result.add("in-\tci-\tpi-\tent", "I n\ts I\tp i:\te n t");
result.add("in-\tci-\tsion", "I n\ts I\tZ V n");
result.add("in-\tci-\tsions", "I n\ts I\tZ V n z");
result.add("in-\tci-\tsive", "I n\ts aI\ts I v");
result.add("in-\tci-\tsor", "I n\ts aI\tz @r");
result.add("in-\tci-\tsors", "I n\ts aI\tz @r z");
result.add("in-\tci-\tted", "I n\ts aI\tt V d");
result.add("in-\tci-\tting", "I n\ts aI\tt I N");
result.add("in-\tci-\tvi-\tli-\tty", "I n\ts I\tv I\tl I\tt i:");
result.add("in-\tcise", "I n\ts aI z");
result.add("in-\tcised", "I n\ts aI z d");
result.add("in-\tcite", "I n\ts aI t");
result.add("in-\tcite-\tment", "I n\ts aI t\tm V n t");
result.add("in-\tcite-\tments", "I n\ts aI t\tm V n t s");
result.add("in-\tcites", "I n\ts aI t s");
result.add("in-\tcle-\tment", "I n\tk l e\tm V n t");
result.add("in-\tcli-\tna-\ttion", "I n\tk l I\tn eI\tS V n");
result.add("in-\tcli-\tna-\ttions", "I n\tk l I\tn eI\tS V n z");
result.add("in-\tco-\the-\trence", "I n\tk @U\th I@\tV n s");
result.add("in-\tco-\the-\trent", "I n\tk @U\th I@\tV n t");
result.add("in-\tco-\the-\trent-\tly", "I n\tk @U\th I@\tV n\tt l i:");
result.add("in-\tco-\tming", "I n\tk V\tm I N");
result.add("in-\tco-\tor-\tdi-\tna-\ttion", "I n\tk @U\tO@\td I\tn eI\tS V n");
result.add("in-\tcog-\tni-\tto", "I n\tk O: g\tn i:\tt @U");
result.add("in-\tcom-\tmu-\tni-\tca-\tdo", "I n\tk V m\tj u:\tn V\tk Q\td @U");
result.add("in-\tcom-\tpa-\tra-\tble", "I n\tk Q m\tp @r\tV\tb V l");
result.add("in-\tcom-\tpa-\trab-\tly", "I n\tk Q m\tp @r\tV b\tl i:");
result.add("in-\tcom-\tpa-\tti-\tbi-\tli-\tty", "I n\tk Q m\tp V\tt V\tb I\tl V\tt i:");
result.add("in-\tcom-\tpa-\tti-\tble", "I n\tk V m\tp {\tt V\tb V l");
result.add("in-\tcom-\tpe-\tten-\tcy", "I n\tk Q m\tp V\tt V n\ts i:");
result.add("in-\tcom-\tpe-\ttence", "I n\tk Q m\tp V\tt V n s");
result.add("in-\tcom-\tpe-\ttent", "I n\tk Q m\tp V\tt V n t");
result.add("in-\tcom-\tpe-\ttent-\tly", "I n\tk Q m\tp V\tt V n\tt l i:");
result.add("in-\tcom-\tpe-\ttents", "I N\tk Q m\tp V\tt V n t s");
result.add("in-\tcom-\tpre-\then-\tsi-\tble", "I N\tk Q m\tp r V\th e n\ts V\tb V l");
result.add("in-\tcom-\tpres-\tsi-\tble", "I n\tk V m\tp r e\ts V\tb V l");
result.add("in-\tcome", "I n\tk V m");
result.add("in-\tcomes", "I n\tk V m z");
result.add("in-\tcomp-\tlete", "I n\tk V m\tp l i: t");
result.add("in-\tcon-\tcei-\tva-\tble", "I n\tk V n\ts i:\tv V\tb V l");
result.add("in-\tcon-\tclu-\tsive", "I n\tk V n\tk l u:\ts I v");
result.add("in-\tcon-\tclu-\tsive-\tly", "I N\tk Q n\tk l u:\ts I v\tl i:");
result.add("in-\tcon-\tse-\tquen-\ttial", "I N\tk Q n\ts V k\tw e n\ttS V l");
result.add("in-\tcon-\tsis-\tten-\tcies", "I N\tk Q n\ts I s\tt e n\ts i: z");
result.add("in-\tcon-\tsis-\tten-\tcy", "I n\tk V n\ts I s\tt V n\ts i:");
result.add("in-\tcon-\tsis-\ttent", "I n\tk V n\ts I s\tt V n t");
result.add("in-\tcon-\tspi-\tcuous", "I N\tk Q n\ts p I k\tw V s");
result.add("in-\tcon-\tti-\tnence", "I n\tk Q n\tt I\tn e n s");
result.add("in-\tcon-\tti-\tnent", "I n\tk Q n\tt I\tn e n t");
result.add("in-\tcon-\tve-\tnient", "I n\tk V n\tv i: n\tj V n t");
result.add("in-\tcon-\tveni-\ten-\tces", "I n\tk V n\tv i: n\tj V n\ts V z");
result.add("in-\tcon-\tveni-\tence", "I n\tk V n\tv i: n\tj V n s");
result.add("in-\tcon-\tveni-\tenced", "I n\tk V n\tv i: n\tj V n s t");
result.add("in-\tcong-\tru-\ti-\tty", "I N\tk O: N\tr u:\tI\tt i:");
result.add("in-\tcong-\tru-\tous", "I N\tk O: N\tr u:\tV s");
result.add("in-\tcong-\tru-\tous-\tly", "I N\tk O: N\tr u:\tV s\tl i:");
result.add("in-\tcons-\ttan-\tcy", "I n\tk Q n\ts t V n\ts i:");
result.add("in-\tcont-\tro-\tver-\tti-\tble", "I N\tk Q n\tt r @U\tv @r\tt I\tb V l");
result.add("in-\tcor-\tpo-\tra-\tted", "I n\tk O@\tp @r\teI\tt V d");
result.add("in-\tcor-\tpo-\tra-\tting", "I n\tk O@\tp @r\teI\tt I N");
result.add("in-\tcor-\tpo-\tra-\ttion", "I n\tk O@\tp @r\teI\tS V n");
result.add("in-\tcor-\tpo-\tra-\ttions", "I n\tk O@\tp @r\teI\tS V n z");
result.add("in-\tcor-\tpo-\tra-\ttion's", "I n\tk O@\tp @r\teI\tS V n z");
result.add("in-\tcor-\tpo-\trate", "I n\tk O@\tp @r\teI t");
result.add("in-\tcor-\tpo-\trates", "I n\tk O@\tp @r\teI t s");
result.add("in-\tcor-\trect", "I n\tk @r\te k t");
result.add("in-\tcor-\trect-\tly", "I n\tk @r\te k\tt l i:");
result.add("in-\tcor-\tri-\tgi-\tble", "I n\tk Q@\tI\tdZ I\tb V l");
result.add("in-\tcre-\tdi-\tble", "I n\tk r e\td I\tb V l");
result.add("in-\tcre-\tdib-\tly", "I n\tk r e\td I b\tl i:");
result.add("in-\tcre-\tdu-\tli-\tty", "I n\tk r V\td u:\tl V\tt i:");
result.add("in-\tcre-\tdu-\tlous", "I n\tk r e\tdZ V\tl V s");
result.add("in-\tcre-\tmen-\tta-\tli-\tsm", "I n\tk r V\tm e n\tt V\tl I\tz V m");
result.add("in-\tcre-\tmen-\ttal", "I n\tk r V\tm e n\tt V l");
result.add("in-\tcre-\tmen-\ttal-\tly", "I n\tk r V\tm e n\tt V\tl i:");
result.add("in-\tcre-\tment", "I n\tk r V\tm V n t");
result.add("in-\tcre-\tments", "I N\tk r V\tm V n t s");
result.add("in-\tcrea-\tses", "I n\tk r i:\ts V z");
result.add("in-\tcrea-\tsing", "I n\tk r i:\ts I N");
result.add("in-\tcrea-\tsing-\tly", "I n\tk r i:\ts I N\tl i:");
result.add("in-\tcrease", "I n\tk r i: s");
result.add("in-\tcreased", "I n\tk r i: s t");
result.add("in-\tcri-\tmi-\tna-\tting", "I n\tk r I\tm I\tn eI\tt I N");
result.add("in-\tcri-\tmi-\tna-\ttion", "I n\tk r I\tm I\tn eI\tS V n");
result.add("in-\tcri-\tmi-\tnate", "I n\tk r I\tm I\tn eI t");
result.add("in-\tcrus-\tta-\ttion", "I n\tk r V s\tt eI\tS V n");
result.add("in-\tcrust", "I n\tk r V s t");
result.add("in-\tcu-\tba-\tting", "I n\tk j V\tb eI\tt I N");
result.add("in-\tcu-\tba-\ttion", "I N\tk j u:\tb eI\tS V n");
result.add("in-\tcu-\tba-\ttor", "I N\tk j V\tb eI\tt @r");
result.add("in-\tcu-\tba-\ttors", "I N\tk j u:\tb eI\tt @r z");
result.add("in-\tcu-\tbate", "I n\tk j V\tb eI t");
result.add("in-\tcu-\tra-\tble", "I n\tk j U@\tV\tb V l");
result.add("in-\tcul-\tca-\tted", "I N\tk V l\tk eI\tt V d");
result.add("in-\tcul-\tcate", "I N\tk V l\tk eI t");
result.add("in-\tcul-\tcates", "I N\tk V l\tk eI t s");
result.add("in-\tcum-\tben-\tcy", "I n\tk V m\tb V n\ts i:");
result.add("in-\tcum-\tbent", "I n\tk V m\tb V n t");
result.add("in-\tcum-\tbents", "I n\tk V m\tb V n t s");
result.add("in-\tcur", "I n\tk @r");
result.add("in-\tcur-\tring", "I n\tk @r\tI N");
result.add("in-\tcur-\tsion", "I n\tk @r\tZ V n");
result.add("in-\tcur-\tsions", "I n\tk @r\tZ V n z");
result.add("in-\tcurred", "I n\tk @r d");
result.add("in-\tcurs", "I n\tk @r z");
result.add("in-\tda-\tba", "I n\td Q\tb V");
result.add("in-\tde-\tcen-\tcy", "I n\td i:\ts V n\ts i:");
result.add("in-\tde-\tcent", "I n\td i:\ts V n t");
result.add("in-\tde-\tci-\tsion", "I n\td V\ts I\tZ V n");
result.add("in-\tde-\tci-\tsive", "I n\td V\ts aI\ts I v");
result.add("in-\tde-\tci-\tsive-\tness", "I n\td e\ts aI\ts I v\tn V s");
result.add("in-\tde-\tfa-\tti-\tga-\tble", "I n\td V\tf {\tt I\tg V\tb V l");
result.add("in-\tde-\tfen-\tsi-\tble", "I n\td V\tf e n\ts V\tb V l");
result.add("in-\tde-\tfi-\tna-\tble", "I n\td V\tf aI\tn V\tb V l");
result.add("in-\tde-\tfi-\tnite", "I n\td e\tf I\tn I t");
result.add("in-\tde-\tfi-\tnite-\tly", "I n\td e\tf I\tn I t\tl i:");
result.add("in-\tde-\tli-\tble", "I n\td e\tl I\tb V l");
result.add("in-\tde-\tli-\tbly", "I n\td e\tl I b\tl i:");
result.add("in-\tde-\tli-\tcate", "I n\td e\tl I\tk V t");
result.add("in-\tde-\tpen-\tden-\tce's", "I n\td V\tp e n\td V n\ts V z");
result.add("in-\tde-\tpen-\tdence", "I n\td V\tp e n\td V n s");
result.add("in-\tde-\tpen-\tdent", "I n\td V\tp e n\td V n t");
result.add("in-\tde-\tpen-\tdent-\tly", "I n\td V\tp e n\td V n\tt l i:");
result.add("in-\tde-\tpen-\tdents", "I n\td V\tp e n\td V n t s");
result.add("in-\tde-\tral", "I n\td @r\tV l");
result.add("in-\tde-\tter-\tmi-\tnate", "I n\td V\tt @r\tm V\tn V t");
result.add("in-\tde-\txa-\ttion", "I n\td e k\ts eI\tS V n");
result.add("in-\tde-\txer", "I n\td e k\ts @r");
result.add("in-\tde-\txers", "I n\td e k\ts @r z");
result.add("in-\tde-\txes", "I n\td e k\ts V z");
result.add("in-\tde-\txing", "I n\td e k\ts I N");
result.add("in-\tde-\tx's", "I n\td e k\ts V z");
result.add("in-\tdeb-\tted", "I n\td e\tt V d");
result.add("in-\tdeb-\tted-\tness", "I n\td e\tt V d\tn V s");
result.add("in-\tdeed", "I n\td i: d");
result.add("in-\tdem-\tni-\tfi-\tca-\ttion", "I n\td e m\tn I\tf I\tk eI\tS V n");
result.add("in-\tdem-\tni-\tfied", "I n\td e m\tn I\tf aI d");
result.add("in-\tdem-\tni-\tfy", "I n\td e m\tn I\tf aI");
result.add("in-\tdem-\tni-\tfy-\ting", "I n\td e m\tn I\tf aI\tI N");
result.add("in-\tdem-\tni-\tties", "I n\td e m\tn I\tt i: z");
result.add("in-\tdem-\tni-\tty", "I n\td e m\tn I\tt i:");
result.add("in-\tden-\tta-\ttion", "I n\td e n\tt eI\tS V n");
result.add("in-\tden-\tture", "I n\td e n\ttS @r");
result.add("in-\tden-\ttured", "I n\td e n\ttS @r d");
result.add("in-\tden-\ttures", "I n\td e n\ttS @r z");
result.add("in-\tdent", "I n\td e n t");
result.add("in-\tdes-\tcri-\tba-\tble", "I n\td V s\tk r aI\tb V\tb V l");
result.add("in-\tdes-\ttruc-\tti-\tbi-\tli-\tty", "I n\td V s\tt r V k\tt V\tb I\tl V\tt i:");
result.add("in-\tdes-\ttruc-\tti-\tble", "I n\td V s\tt r V k\tt V\tb V l");
result.add("in-\tdex", "I n\td e k s");
result.add("in-\tdexed", "I n\td e k s t");
result.add("in-\tdi-\ta", "I n\td i:\tV");
result.add("in-\tdi-\ta-\tna", "I n\td i:\t{\tn V");
result.add("in-\tdi-\ta-\tna-\tpo-\tli-\ts's", "I n\td i:\tV\tn {\tp V\tl I\ts V z");
result.add("in-\tdi-\ta-\tna-\tpo-\tlis", "I n\td i:\tV\tn {\tp V\tl I s");
result.add("in-\tdi-\ta-\tna's", "I n\td i:\t{\tn V z");
result.add("in-\tdi-\ta-\tni-\tan", "I n\td i:\t{\tn i:\tV n");
result.add("in-\tdi-\ta-\tni-\tans", "I n\td i:\t{\tn i:\tV n z");
result.add("in-\tdi-\ta-\tno-\tla", "I n\td i:\tV\tn @U\tl V");
result.add("in-\tdi-\tan", "I n\td i:\tV n");
result.add("in-\tdi-\tans", "I n\td i:\tV n z");
result.add("in-\tdi-\tan's", "I n\td i:\tV n z");
result.add("in-\tdi-\ta's", "I n\td i:\tV z");
result.add("in-\tdi-\tca-\tted", "I n\td I\tk eI\tt I d");
result.add("in-\tdi-\tca-\tting", "I n\td I\tk eI\tt I N");
result.add("in-\tdi-\tca-\ttion", "I n\td I\tk eI\tS V n");
result.add("in-\tdi-\tca-\ttions", "I n\td I\tk eI\tS V n z");
result.add("in-\tdi-\tca-\ttive", "I n\td I\tk V\tt I v");
result.add("in-\tdi-\tca-\ttor", "I n\td I\tk eI\tt @r");
result.add("in-\tdi-\tca-\ttors", "I n\td I\tk eI\tt @r z");
result.add("in-\tdi-\tcate", "I n\td I\tk eI t");
result.add("in-\tdi-\tcates", "I n\td I\tk eI t s");
result.add("in-\tdi-\tces", "I n\td I\ts i: z");
result.add("in-\tdi-\tcia", "I n\td I s\tj V");
result.add("in-\tdi-\tge-\tnous", "I n\td I\tdZ V\tn V s");
result.add("in-\tdi-\tge-\tnous-\tly", "I n\td I\tdZ V\tn V s\tl i:");
result.add("in-\tdi-\tgent", "I n\td I\tdZ V n t");
result.add("in-\tdi-\tgents", "I n\td I\tdZ V n t s");
result.add("in-\tdi-\tges-\ttion", "I n\td aI\tdZ e s\ttS V n");
result.add("in-\tdi-\tgest", "I n\td aI\tdZ e s t");
result.add("in-\tdi-\tgo", "I n\td I\tg @U");
result.add("in-\tdi-\tted", "I n\td aI\tt V d");
result.add("in-\tdi-\tum", "I n\td i:\tV m");
result.add("in-\tdi-\tvi-\tdu-\ta-\tli-\tsm", "I n\td I\tv I\td u:\tV\tl I\tz V m");
result.add("in-\tdi-\tvi-\tdu-\ta-\tli-\tty", "I n\td I\tv I\tdZ u:\t{\tl I\tt i:");
result.add("in-\tdi-\tvi-\tdu-\ta-\tlis-\ttic", "I n\td I\tv I\tdZ u:\tV\tl I s\tt I k");
result.add("in-\tdi-\tvi-\tdu-\ta-\tlist", "I n\td I\tv I\td u:\tV\tl I s t");
result.add("in-\tdi-\tvi-\tdu-\ta-\tlists", "I n\td I\tv I\tdZ u:\tV\tl I s t s");
result.add("in-\tdi-\tvi-\tdu-\ta-\tlize", "I n\td I\tv I\tdZ u:\tV\tl aI z");
result.add("in-\tdi-\tvi-\tdu-\ta-\tlized", "I n\td I\tv I\tdZ u:\tV\tl aI z d");
result.add("in-\tdi-\tvi-\tdu-\tal", "I n\td I\tv I\tdZ V\tw V l");
result.add("in-\tdi-\tvi-\tdu-\tal-\tly", "I n\td I\tv I\tdZ u:\tV\tl i:");
result.add("in-\tdi-\tvi-\tdu-\tals", "I n\td I\tv I\tdZ V\tw V l z");
result.add("in-\tdi-\tvi-\tdu-\tal's", "I n\td I\tv I\tdZ V\tw V l z");
result.add("in-\tdi-\tvi-\tsi-\tble", "I n\td I\tv I\tz I\tb V l");
result.add("in-\tdic", "I n\td I k");
result.add("in-\tdic-\tted", "I n\td aI\tt V d");
result.add("in-\tdic-\tting", "I n\td aI\tt I N");
result.add("in-\tdict", "I n\td aI t");
result.add("in-\tdict-\tment", "I n\td aI t\tm V n t");
result.add("in-\tdict-\tments", "I n\td aI t\tm V n t s");
result.add("in-\tdies", "I n\td i: z");
result.add("in-\tdif-\tfe-\trence", "I n\td I\tf @r\tV n s");
result.add("in-\tdiffe-\trent", "I n\td I f\tr V n t");
result.add("in-\tdig-\tna-\ttion", "I n\td I g\tn eI\tS V n");
result.add("in-\tdig-\tnant", "I n\td I g\tn V n t");
result.add("in-\tdig-\tnant-\tly", "I n\td I g\tn V n\tt l i:");
result.add("in-\tdig-\tni-\tties", "I n\td I g\tn I\tt i: z");
result.add("in-\tdig-\tni-\tty", "I n\td I g\tn I\tt i:");
result.add("in-\tdis-\tpen-\tsa-\tble", "I n\td I s\tp e n\ts V\tb V l");
result.add("in-\tdis-\tpu-\tta-\tble", "I n\td I s\tp j u:\tt V\tb V l");
result.add("in-\tdis-\tpu-\tta-\tbly", "I n\td I s\tp j u:\tt V b\tl i:");
result.add("in-\tdis-\ttin-\tgui-\tsha-\tble", "I n\td I s\tt I N\tg w I\tS V\tb V l");
result.add("in-\tdis-\ttinct", "I n\td I s\tt I N k t");
result.add("in-\tdisc-\tre-\ttion", "I n\td I s\tk r e\tS V n");
result.add("in-\tdisc-\tre-\ttions", "I n\td V s\tk r e\tS V n z");
result.add("in-\tdisc-\tri-\tmi-\tnate", "I n\td I s\tk r I\tm I\tn V t");
result.add("in-\tdisc-\tri-\tmi-\tnate-\tly", "I n\td I s\tk r I\tm I\tn V t\tl i:");
result.add("in-\tdite", "I n\td aI t");
result.add("in-\tdo", "I n\td @U");
result.add("in-\tdo-\tchi-\tna", "I n\td @U\ttS aI\tn V");
result.add("in-\tdo-\tchi-\tnese", "I n\td @U\ttS aI\tn i: z");
result.add("in-\tdo-\teu-\tro-\tpe-\tan", "I n\td @U\tj U@\tV\tp i:\tV n");
result.add("in-\tdo-\tlent", "I n\td V\tl V n t");
result.add("in-\tdo-\tmi-\tta-\tble", "I n\td Q\tm I\tt V\tb V l");
result.add("in-\tdo-\tne-\tsia", "I n\td @U\tn i:\tZ V");
result.add("in-\tdo-\tne-\tsian", "I n\td @U\tn i:\tZ V n");
result.add("in-\tdo-\tne-\tsians", "I n\td @U\tn i:\tZ V n z");
result.add("in-\tdo-\tne-\tsia's", "I n\td @U\tn i:\tZ V z");
result.add("in-\tdoc-\ttri-\tna-\tted", "I n\td Q k\tt r I\tn eI\tt I d");
result.add("in-\tdoc-\ttri-\tna-\ttion", "I n\td Q k\tt r I\tn eI\tS V n");
result.add("in-\tdoc-\ttri-\tnate", "I n\td Q k\tt r I\tn eI t");
result.add("in-\tdoor", "I n\td O@");
result.add("in-\tdoors", "I n\td O@ z");
result.add("in-\tdri", "I n\td r i:");
result.add("in-\tdu-\tces", "I n\td u:\ts V z");
result.add("in-\tdu-\tcing", "I n\td u:\ts I N");
result.add("in-\tduc-\ttance", "I n\td V k\tt V n s");
result.add("in-\tduc-\tted", "I n\td V k\tt V d");
result.add("in-\tduc-\ttee", "I n\td V k\tt i:");
result.add("in-\tduc-\ttees", "I n\td V k\tt i: z");
result.add("in-\tduc-\ttion", "I n\td V k\tS V n");
result.add("in-\tduc-\ttor", "I n\td V k\tt @r");
result.add("in-\tduce", "I n\td u: s");
result.add("in-\tduce-\tment", "I n\td u: s\tm V n t");
result.add("in-\tduce-\tments", "I n\td u: s\tm V n t s");
result.add("in-\tduced", "I n\td u: s t");
result.add("in-\tduct", "I n\td V k t");
result.add("in-\tdul-\tgen-\tces", "I n\td V l\tdZ V n\ts V z");
result.add("in-\tdul-\tgence", "I n\td V l\tdZ V n s");
result.add("in-\tdul-\tgent", "I n\td V l\tdZ V n t");
result.add("in-\tdul-\tges", "I n\td V l\tdZ V z");
result.add("in-\tdul-\tging", "I n\td V l\tdZ I N");
result.add("in-\tdulge", "I n\td V l dZ");
result.add("in-\tdulged", "I n\td V l dZ d");
result.add("in-\tdus", "I n\td V s");
result.add("in-\tdus-\ttri-\ta-\tli-\tza-\ttion", "I n\td V s\tt r i:\tV\tl V\tz eI\tS V n");
result.add("in-\tdus-\ttri-\ta-\tli-\tzing", "I n\td V s\tt r i:\tV\tl aI\tz I N");
result.add("in-\tdus-\ttri-\ta-\tlist", "I n\td V s\tt r i:\tV\tl V s t");
result.add("in-\tdus-\ttri-\ta-\tlists", "I n\td V s\tt r i:\tV\tl V s t s");
result.add("in-\tdus-\ttri-\ta-\tlize", "I n\td V s\tt r i:\tV\tl aI z");
result.add("in-\tdus-\ttri-\ta-\tlized", "I n\td V s\tt r i:\tV\tl aI z d");
result.add("in-\tdus-\ttri-\tal", "I n\td V s\tt r i:\tV l");
result.add("in-\tdus-\ttri-\tal-\tly", "I n\td V s\tt r i:\tV\tl i:");
result.add("in-\tdus-\ttri-\tals", "I n\td V s\tt r i:\tV l z");
result.add("in-\tdus-\ttri-\tous", "I n\td V s\tt r i:\tV s");
result.add("in-\tdus-\ttries", "I n\td V s\tt r i: z");
result.add("in-\tdust-\try", "I n\td V s\tt r i:");
result.add("in-\tdust-\try's", "I n\td V s\tt r i: z");
result.add("in-\tdy", "I n\td i:");
result.add("in-\tfa-\tmous", "I n\tf V\tm V s");
result.add("in-\tfa-\tmy", "I n\tf V\tm i:");
result.add("in-\tfa-\ttu-\ta-\tted", "I n\tf {\ttS u:\teI\tt V d");
result.add("in-\tfa-\ttu-\ta-\tting", "I n\tf {\ttS u:\teI\tt I N");
result.add("in-\tfa-\ttu-\ta-\ttion", "I n\tf {\ttS u:\teI\tS V n");
result.add("in-\tfa-\ttu-\tate", "I n\tf {\ttS u:\teI t");
result.add("in-\tfal-\tli-\tbi-\tli-\tty", "I n\tf {\tl I\tb I\tl I\tt i:");
result.add("in-\tfal-\tli-\tble", "I n\tf {\tl I\tb V l");
result.add("in-\tfan-\tcy", "I n\tf V n\ts i:");
result.add("in-\tfan-\tte", "I n\tf Q n\tt eI");
result.add("in-\tfan-\tti-\tcide", "I n\tf { n\tt I\ts aI d");
result.add("in-\tfan-\ttile", "I n\tf V n\tt V l");
result.add("in-\tfant", "I n\tf V n t");
result.add("in-\tfant-\try", "I n\tf V n\tt r i:");
result.add("in-\tfant-\try-\tman", "I n\tf { n\tt r i:\tm V n");
result.add("in-\tfant-\try-\tmen", "I n\tf { n\tt r i:\tm e n");
result.add("in-\tfants", "I n\tf V n t s");
result.add("in-\tfant's", "I n\tf V n t s");
result.add("in-\tfants'", "I n\tf V n t s");
result.add("in-\tfarc-\ttion", "I n\tf Q@ k\tS V n");
result.add("in-\tfe-\tren-\tces", "I n\tf @r\te n\ts V z");
result.add("in-\tfe-\trence", "I n\tf @r\tV n s");
result.add("in-\tfe-\tri-\to-\tri-\tty", "I n\tf I@\ti:\tO@\tI\tt i:");
result.add("in-\tfe-\tri-\tor", "I n\tf I@\ti:\t@r");
result.add("in-\tfea-\tsi-\tble", "I n\tf i:\tz I\tb V l");
result.add("in-\tfec-\tted", "I n\tf e k\tt V d");
result.add("in-\tfec-\tting", "I n\tf e k\tt I N");
result.add("in-\tfec-\ttion", "I n\tf e k\tS V n");
result.add("in-\tfec-\ttions", "I n\tf e k\tS V n z");
result.add("in-\tfec-\ttious", "I n\tf e k\tS V s");
result.add("in-\tfec-\ttive", "I n\tf e k\tt I v");
result.add("in-\tfect", "I n\tf e k t");
result.add("in-\tfects", "I n\tf e k t s");
result.add("in-\tfer", "I n\tf @r");
result.add("in-\tfer-\tnal", "I n\tf @r\tn V l");
result.add("in-\tfer-\tno", "I n\tf @r\tn @U");
result.add("in-\tfer-\tring", "I n\tf @r\tI N");
result.add("in-\tfer-\tti-\tli-\tty", "I n\tf @r\tt I\tl I\tt i:");
result.add("in-\tfer-\ttile", "I n\tf @r\tt I l");
result.add("in-\tferred", "I n\tf @r d");
result.add("in-\tfers", "I n\tf @r z");
result.add("in-\tfes-\tta-\ttion", "I n\tf e s\tt eI\tS V n");
result.add("in-\tfes-\tta-\ttions", "I n\tf e s\tt eI\tS V n z");
result.add("in-\tfes-\tted", "I n\tf e s\tt V d");
result.add("in-\tfest", "I n\tf e s t");
result.add("in-\tfests", "I n\tf e s t s");
result.add("in-\tfi-\tde-\tli-\tties", "I n\tf I\td e\tl I\tt i: z");
result.add("in-\tfi-\tde-\tli-\tty", "I n\tf I\td e\tl I\tt i:");
result.add("in-\tfi-\tdel", "I n\tf I\td e l");
result.add("in-\tfi-\tdels", "I n\tf I\td e l z");
result.add("in-\tfi-\tni-\tte-\tsi-\tmal", "I n\tf I\tn I\tt e\ts I\tm V l");
result.add("in-\tfi-\tni-\ttive", "I n\tf I\tn I\tt I v");
result.add("in-\tfi-\tni-\ttum", "I n\tf I\tn I\tt V m");
result.add("in-\tfi-\tni-\tty", "I n\tf I\tn I\tt i:");
result.add("in-\tfi-\tnite", "I n\tf I\tn I t");
result.add("in-\tfi-\tnite-\tly", "I n\tf I\tn I t\tl i:");
result.add("in-\tfiel-\tder", "I n\tf i: l\td @r");
result.add("in-\tfiel-\tders", "I n\tf i: l\td @r z");
result.add("in-\tfield", "I n\tf i: l d");
result.add("in-\tfigh-\tting", "I n\tf aI\tt I N");
result.add("in-\tfilt-\tra-\tted", "I n\tf I l\tt r eI\tt V d");
result.add("in-\tfilt-\tra-\tting", "I n\tf I l\tt r eI\tt I N");
result.add("in-\tfilt-\tra-\ttion", "I n\tf I l\tt r eI\tS V n");
result.add("in-\tfilt-\tra-\ttor", "I n\tf I l\tt r eI\tt @r");
result.add("in-\tfilt-\tra-\ttors", "I n\tf I l\tt r eI\tt @r z");
result.add("in-\tfilt-\trate", "I n\tf I l\tt r eI t");
result.add("in-\tfir-\tma-\try", "I n\tf @r\tm @r\ti:");
result.add("in-\tfir-\tmi-\tties", "I n\tf @r\tm I\tt i: z");
result.add("in-\tfir-\tmi-\tty", "I n\tf @r\tm I\tt i:");
result.add("in-\tfirm", "I n\tf @r m");
result.add("in-\tfirmed", "I n\tf @r m d");
result.add("in-\tfla-\tming", "I n\tf l eI\tm I N");
result.add("in-\tfla-\tta-\tble", "I n\tf l eI\tt V\tb V l");
result.add("in-\tfla-\tted", "I n\tf l eI\tt V d");
result.add("in-\tfla-\tting", "I n\tf l eI\tt I N");
result.add("in-\tfla-\ttio-\tna-\try", "I n\tf l eI\tS V\tn e@\ti:");
result.add("in-\tfla-\ttion", "I n\tf l eI\tS V n");
result.add("in-\tfla-\ttion's", "I n\tf l eI\tS V n z");
result.add("in-\tfla-\ttor", "I n\tf l eI\tt @r");
result.add("in-\tflam-\tma-\tble", "I n\tf l {\tm V\tb V l");
result.add("in-\tflam-\tma-\ttion", "I n\tf l V\tm eI\tS V n");
result.add("in-\tflam-\tma-\tto-\try", "I n\tf l {\tm V\tt O@\ti:");
result.add("in-\tflame", "I n\tf l eI m");
result.add("in-\tflamed", "I n\tf l eI m d");
result.add("in-\tflames", "I n\tf l eI m z");
result.add("in-\tflate", "I n\tf l eI t");
result.add("in-\tflates", "I n\tf l eI t s");
result.add("in-\tfle-\txi-\tbi-\tli-\tty", "I n\tf l e k\ts I\tb I\tl I\tt i:");
result.add("in-\tfle-\txi-\tble", "I n\tf l e k\ts I\tb V l");
result.add("in-\tflec-\tted", "I n\tf l e k\tt V d");
result.add("in-\tflec-\ttion", "I n\tf l e k\tS V n");
result.add("in-\tflec-\ttions", "I n\tf l e k\tS V n z");
result.add("in-\tflect", "I n\tf l e k t");
result.add("in-\tflic-\tted", "I n\tf l I k\tt V d");
result.add("in-\tflic-\tting", "I n\tf l I k\tt I N");
result.add("in-\tflic-\ttion", "I n\tf l I k\tS V n");
result.add("in-\tflict", "I n\tf l I k t");
result.add("in-\tflicts", "I n\tf l I k t s");
result.add("in-\tflight", "I n\tf l aI t");
result.add("in-\tflow", "I n\tf l @U");
result.add("in-\tflows", "I n\tf l @U z");
result.add("in-\tflu-\ten-\tces", "I n\tf l u:\tV n\ts V z");
result.add("in-\tflu-\ten-\tcing", "I n\tf l u:\tV n\ts I N");
result.add("in-\tflu-\ten-\ttial", "I n\tf l u:\te n\ttS V l");
result.add("in-\tflu-\ten-\tza", "I n\tf l u:\te n\tz V");
result.add("in-\tflu-\tence", "I n\tf l u:\tV n s");
result.add("in-\tflu-\tenced", "I n\tf l u:\tV n s t");
result.add("in-\tflux", "I n\tf l V k s");
result.add("in-\tfo", "I n\tf @U");
result.add("in-\tfo-\tmer-\tcial", "I n\tf @U\tm @r\tS V l");
result.add("in-\tfo-\tmer-\tcials", "I n\tf @U\tm @r\tS V l z");
result.add("in-\tfo-\ttain-\tment", "I n\tf @U\tt eI n\tm V n t");
result.add("in-\tfor-\tma-\tli-\tty", "I n\tf @r\tm {\tl I\tt i:");
result.add("in-\tfor-\tma-\ttics", "I n\tf @r\tm {\tt I k s");
result.add("in-\tfor-\tma-\ttio-\tnal", "I n\tf @r\tm eI\tS V\tn V l");
result.add("in-\tfor-\tma-\ttion", "I n\tf @r\tm eI\tS V n");
result.add("in-\tfor-\tma-\ttions", "I n\tf @r\tm eI\tS V n z");
result.add("in-\tfor-\tma-\ttion's", "I n\tf @r\tm eI\tS V n z");
result.add("in-\tfor-\tma-\ttive", "I n\tf O@\tm V\tt I v");
result.add("in-\tfor-\tmal", "I n\tf O@\tm V l");
result.add("in-\tfor-\tmal-\tly", "I n\tf O@\tm V\tl i:");
result.add("in-\tfor-\tmant", "I n\tf O@\tm V n t");
result.add("in-\tfor-\tmants", "I n\tf O@\tm V n t s");
result.add("in-\tfor-\tmer", "I n\tf O@\tm @r");
result.add("in-\tfor-\tmers", "I n\tf O@\tm @r z");
result.add("in-\tfor-\tming", "I n\tf O@\tm I N");
result.add("in-\tform", "I n\tf O@ m");
result.add("in-\tformed", "I n\tf O@ m d");
result.add("in-\tforms", "I n\tf O@ m z");
result.add("in-\tfra", "I n\tf r V");
result.add("in-\tfrac-\ttion", "I n\tf r { k\tS V n");
result.add("in-\tfrac-\ttions", "I n\tf r { k\tS V n z");
result.add("in-\tfre-\tquen-\tcy", "I n\tf r i: k\tw V n\ts i:");
result.add("in-\tfre-\tquent", "I n\tf r i: k\tw V n t");
result.add("in-\tfre-\tquent-\tly", "I n\tf r i: k\tw V n\tt l i:");
result.add("in-\tfrin-\tges", "I n\tf r I n\tdZ V z");
result.add("in-\tfrin-\tging", "I n\tf r I n\tdZ I N");
result.add("in-\tfringe", "I n\tf r I n dZ");
result.add("in-\tfringe-\tment", "I n\tf r I n\tdZ m V n t");
result.add("in-\tfringe-\tments", "I n\tf r I n\tdZ m V n t s");
result.add("in-\tfringed", "I n\tf r I n dZ d");
result.add("in-\tfu-\tri-\ta-\tted", "I n\tf j U@\ti:\teI\tt V d");
result.add("in-\tfu-\tri-\ta-\tting", "I n\tf j U@\ti:\teI\tt I N");
result.add("in-\tfu-\tri-\tate", "I n\tf j U@\ti:\teI t");
result.add("in-\tfu-\tri-\tates", "I n\tf j U@\ti:\teI t s");
result.add("in-\tfu-\tses", "I n\tf j u:\tz V z");
result.add("in-\tfu-\tsing", "I n\tf j u:\tz I N");
result.add("in-\tfu-\tsion", "I n\tf j u:\tZ V n");
result.add("in-\tfu-\tsions", "I n\tf j u:\tZ V n z");
result.add("in-\tfuse", "I n\tf j u: z");
result.add("in-\tfused", "I n\tf j u: z d");
result.add("in-\tga", "i: N\tg V");
result.add("in-\tgalls", "I N\tg O: l z");
result.add("in-\tgar", "I N\tg @r");
result.add("in-\tge-\tmar", "I N\tg e\tm Q@");
result.add("in-\tge-\tnious", "I n\tdZ i: n\tj V s");
result.add("in-\tge-\tnious-\tly", "I n\tdZ i: n\tj V s\tl i:");
result.add("in-\tge-\tnu-\ti-\tty", "I n\tdZ V\tn u:\tV\tt i:");
result.add("in-\tge-\tnu-\tous", "I n\tdZ e n\tj u:\tV s");
result.add("in-\tge-\tnue", "I n\tdZ e n\tj u:");
result.add("in-\tger", "I\tN @r");
result.add("in-\tger-\tsoll", "I N\tg @r\ts O: l");
result.add("in-\tges-\tted", "I n\tdZ e s\tt V d");
result.add("in-\tges-\tting", "I n\tdZ e s\tt I N");
result.add("in-\tges-\ttion", "I n\tdZ e s\ttS V n");
result.add("in-\tgest", "I n\tdZ e s t");
result.add("in-\tgham", "I\tN V m");
result.add("in-\tgle", "I N\tg V l");
result.add("in-\tgle-\tbert", "I N\tg V l\tb @r t");
result.add("in-\tgle-\tnook", "I N\tg V l\tn U k");
result.add("in-\tgle-\twood", "I N\tg V l\tw U d");
result.add("in-\tgles", "I N\tg V l z");
result.add("in-\tgo", "I N\tg @U");
result.add("in-\tgold", "I N\tg @U l d");
result.add("in-\tgot", "I N\tg V t");
result.add("in-\tgots", "I N\tg V t s");
result.add("in-\tgra-\tham", "I N\tg r V\th { m");
result.add("in-\tgrain", "I n\tg r eI n");
result.add("in-\tgrained", "I n\tg r eI n d");
result.add("in-\tha-\tbi-\tta-\ttion", "I n\th {\tb I\tt eI\tS V n");
result.add("in-\tha-\tbi-\ttant", "I n\th {\tb I\tt V n t");
result.add("in-\tha-\tbi-\ttants", "I n\th {\tb I\tt V n t s");
result.add("in-\tha-\tbi-\tted", "I n\th {\tb I\tt I d");
result.add("in-\tha-\tbi-\tting", "I n\th {\tb I\tt I N");
result.add("in-\tha-\tbit", "I n\th {\tb I t");
result.add("in-\tha-\tbits", "I n\th {\tb I t s");
result.add("in-\tha-\tla-\ttion", "I\tn V\tl eI\tS V n");
result.add("in-\tha-\tlant", "I n\th eI\tl V n t");
result.add("in-\tha-\tlants", "I n\th eI\tl V n t s");
result.add("in-\tha-\tler", "I n\th eI\tl @r");
result.add("in-\tha-\tling", "I n\th eI\tl I N");
result.add("in-\thale", "I n\th eI l");
result.add("in-\thaled", "I n\th eI l d");
result.add("in-\the-\trent", "I n\th I@\tV n t");
result.add("in-\the-\trent-\tly", "I n\th I@\tV n\tt l i:");
result.add("in-\the-\tri-\tta-\tble", "I n\th e@\tI\tt V\tb V l");
result.add("in-\the-\trit", "I n\th e@\tI t");
result.add("in-\thu-\tma-\tni-\tty", "I n\th j u:\tm {\tn I\tt i:");
result.add("in-\tjec-\tta-\tble", "I n\tdZ e k\tt V\tb V l");
result.add("in-\tjec-\tted", "I n\tdZ e k\tt V d");
result.add("in-\tjec-\tting", "I n\tdZ e k\tt I N");
result.add("in-\tjec-\ttion", "I n\tdZ e k\tS V n");
result.add("in-\tjec-\ttions", "I n\tdZ e k\tS V n z");
result.add("in-\tjec-\ttor", "I n\tdZ e k\tt @r");
result.add("in-\tjec-\ttors", "I n\tdZ e k\tt @r z");
result.add("in-\tject", "I n\tdZ e k t");
result.add("in-\tjects", "I n\tdZ e k t s");
result.add("in-\tju-\tdi-\tcious", "I n\tdZ V\td I\tS V s");
result.add("in-\tju-\tri-\tous", "I n\tdZ U@\ti:\tV s");
result.add("in-\tju-\tries", "I n\tdZ @r\ti: z");
result.add("in-\tju-\tring", "I n\tdZ @r\tI N");
result.add("in-\tju-\try", "I n\tdZ @r\ti:");
result.add("in-\tjunc-\ttion", "I n\tdZ V N\tk S V n");
result.add("in-\tjunc-\ttions", "I n\tdZ V N\tk S V n z");
result.add("in-\tjunc-\ttive", "I n\tdZ V N\tk t I v");
result.add("in-\tjure", "I n\tdZ @r");
result.add("in-\tjured", "I n\tdZ @r d");
result.add("in-\tjures", "I n\tdZ @r z");
result.add("in-\tjus-\tti-\tces", "I n\tdZ V s\tt I\ts V z");
result.add("in-\tjus-\ttice", "I n\tdZ V s\tt I s");
result.add("in-\tka-\ttha", "I N\tk {\tT V");
result.add("in-\tka-\ttha's", "I N\tk {\tT V z");
result.add("in-\tky", "I N\tk i:");
result.add("in-\tlaid", "I n\tl eI d");
result.add("in-\tland", "I n\tl { n d");
result.add("in-\tland's", "I n\tl V n d z");
result.add("in-\tlaw", "I n\tl O:");
result.add("in-\tlaws", "I n\tl O: z");
result.add("in-\tlay", "I n\tl eI");
result.add("in-\tlet", "I n\tl e t");
result.add("in-\tlets", "I n\tl e t s");
result.add("in-\tman", "I n\tm V n");
result.add("in-\tman's", "I n\tm V n z");
result.add("in-\tmate", "I n\tm eI t");
result.add("in-\tmates", "I n\tm eI t s");
result.add("in-\tmate's", "I n\tm eI t s");
result.add("in-\tnard", "I\tn @r d");
result.add("in-\tnards", "I\tn @r d z");
result.add("in-\tnate", "I\tn eI t");
result.add("in-\tnate-\tly", "I\tn eI t\tl i:");
result.add("in-\tner", "I\tn @r");
result.add("in-\tner-\tmost", "I\tn @r\tm @U s t");
result.add("in-\tnes", "I\tn V s");
result.add("in-\tness", "I\tn V s");
result.add("in-\tning", "I\tn I N");
result.add("in-\tnings", "I\tn I N z");
result.add("in-\tnis", "I\tn I s");
result.add("in-\tno-\tcence", "I\tn V\ts V n s");
result.add("in-\tno-\tcent", "I\tn V\ts V n t");
result.add("in-\tno-\tcent-\tly", "I\tn V\ts V n\tt l i:");
result.add("in-\tno-\tcents", "I\tn V\ts V n t s");
result.add("in-\tno-\tcu-\tous", "I\tn Q k\tj u:\tV s");
result.add("in-\tno-\tmi-\tnate", "I\tn Q\tm I\tn V t");
result.add("in-\tno-\tva-\tted", "I\tn V\tv eI\tt V d");
result.add("in-\tno-\tva-\tting", "I\tn V\tv eI\tt I N");
result.add("in-\tno-\tva-\ttion", "I\tn V\tv eI\tS V n");
result.add("in-\tno-\tva-\ttions", "I\tn V\tv eI\tS V n z");
result.add("in-\tno-\tva-\ttive", "I\tn V\tv eI\tt I v");
result.add("in-\tno-\tva-\ttor", "I\tn V\tv eI\tt @r");
result.add("in-\tno-\tva-\ttors", "I\tn V\tv eI\tt @r z");
result.add("in-\tno-\tvate", "I\tn V\tv eI t");
result.add("in-\tnu-\ten-\tdo", "I n\tj u:\te n\td @U");
result.add("in-\tnu-\ten-\tdoes", "I n\tj u:\te n\td @U z");
result.add("in-\tnu-\ten-\tdos", "I n\tj u:\te n\td @U z");
result.add("in-\tnu-\tme-\tra-\tble", "I\tn u:\tm @r\tV\tb V l");
result.add("in-\tpa-\ttient", "I n\tp eI\tS e n t");
result.add("in-\tpa-\ttients", "I n\tp eI\tS e n t s");
result.add("in-\tput", "I n\tp U t");
result.add("in-\tputs", "I n\tp U t s");
result.add("in-\tquest", "I n\tk w e s t");
result.add("in-\tqui-\tr-\ties", "I n\tk w aI\t@r\ti: z");
result.add("in-\tqui-\tr-\ting", "I n\tk w aI\t@r\tI N");
result.add("in-\tqui-\tred", "I n\tk w aI\t@r d");
result.add("in-\tqui-\trer", "I n\tk w aI\tr @r");
result.add("in-\tqui-\tres", "I n\tk w aI\t@r z");
result.add("in-\tqui-\try", "I n\tk w aI\tr i:");
result.add("in-\tqui-\tsi-\ttion", "I n\tk w I\tz I\tS V n");
result.add("in-\tqui-\tsi-\ttive", "I n\tk w I\tz I\tt I v");
result.add("in-\tqui-\tsi-\ttor", "I n\tk w I\tz I\tt @r");
result.add("in-\tqui-\tsi-\ttors", "I n\tk w I\tz I\tt @r z");
result.add("in-\tquire", "I n\tk w aI r");
result.add("in-\troad", "I n\tr @U d");
result.add("in-\troads", "I n\tr @U d z");
result.add("in-\tsa-\tni-\tty", "I n\ts {\tn I\tt i:");
result.add("in-\tsa-\ttia-\tble", "I n\ts eI\tS V\tb V l");
result.add("in-\tsane", "I n\ts eI n");
result.add("in-\tse-\tcu-\tri-\tties", "I n\ts I k\tj U@\tI\tt i: z");
result.add("in-\tse-\tcu-\tri-\tty", "I n\ts I k\tj U@\tI\tt i:");
result.add("in-\tse-\tcure", "I n\ts V k\tj @r");
result.add("in-\tse-\tmi-\tna-\ttion", "I n\ts e\tm I\tn eI\tS V n");
result.add("in-\tse-\tmi-\tnate", "I n\ts e\tm I\tn eI t");
result.add("in-\tse-\tpa-\tra-\tble", "I n\ts e\tp @r\tV\tb V l");
result.add("in-\tse-\tpa-\trab-\tly", "I n\ts e\tp @r\tV b\tl i:");
result.add("in-\tsec-\tti-\tcide", "I n\ts e k\tt I\ts aI d");
result.add("in-\tsec-\tti-\tcides", "I n\ts e k\tt I\ts aI d z");
result.add("in-\tsec-\tti-\tvo-\trous", "I n\ts e k\tt I\tv @r\tV s");
result.add("in-\tsect", "I n\ts e k t");
result.add("in-\tsects", "I n\ts e k t s");
result.add("in-\tsect's", "I n\ts e k t s");
result.add("in-\tsen-\tsi-\tti-\tvi-\tty", "I n\ts e n\ts I\tt I\tv I\tt i:");
result.add("in-\tsen-\tsi-\ttive", "I n\ts e n\ts I\tt I v");
result.add("in-\tser-\tted", "I n\ts @r\tt V d");
result.add("in-\tser-\tting", "I n\ts @r\tt I N");
result.add("in-\tser-\ttion", "I n\ts @r\tS V n");
result.add("in-\tsert", "I n\ts @r t");
result.add("in-\tserts", "I n\ts @r t s");
result.add("in-\tset", "I n\ts e t");
result.add("in-\tshore", "I n\tS O@");
result.add("in-\tsi-\tder", "I n\ts aI\td @r");
result.add("in-\tsi-\tders", "I n\ts aI\td @r z");
result.add("in-\tsi-\tder's", "I n\ts aI\td @r z");
result.add("in-\tsi-\tdi-\tous", "I n\ts I\td i:\tV s");
result.add("in-\tsi-\tnu-\ta-\tted", "I n\ts I n\tj u:\teI\tt V d");
result.add("in-\tsi-\tnu-\ta-\tting", "I n\ts I n\tj u:\teI\tt I N");
result.add("in-\tsi-\tnu-\ta-\ttion", "I n\ts I n\tj u:\teI\tS V n");
result.add("in-\tsi-\tnu-\ta-\ttions", "I n\ts I n\tj u:\teI\tS V n z");
result.add("in-\tsi-\tnu-\tate", "I n\ts I n\tj u:\teI t");
result.add("in-\tsi-\tnu-\tates", "I n\ts I n\tj u:\teI t s");
result.add("in-\tside", "I n\ts aI d");
result.add("in-\tsides", "I n\ts aI d z");
result.add("in-\tsig-\tni-\ta", "I n\ts I g\tn i:\tV");
result.add("in-\tsig-\tni-\tfi-\tcance", "I n\ts I g\tn j I\tf I\tk V n s");
result.add("in-\tsig-\tni-\tfi-\tcant", "I n\ts I g\tn j I\tf I\tk V n t");
result.add("in-\tsight", "I n\ts aI t");
result.add("in-\tsight-\tful", "I n\ts aI t\tf V l");
result.add("in-\tsights", "I n\ts aI t s");
result.add("in-\tsin-\tcere", "I n\ts I n\ts I@");
result.add("in-\tsis-\tted", "I n\ts I s\tt V d");
result.add("in-\tsis-\ttence", "I n\ts I s\tt V n s");
result.add("in-\tsis-\ttent", "I n\ts I s\tt V n t");
result.add("in-\tsis-\ttent-\tly", "I n\ts I s\tt V n\tt l i:");
result.add("in-\tsis-\tting", "I n\ts I s\tt I N");
result.add("in-\tsist", "I n\ts I s t");
result.add("in-\tsists", "I n\ts I s t s");
result.add("in-\tso-\tfar", "I n\ts V\tf Q@");
result.add("in-\tso-\tlence", "I n\ts V\tl V n s");
result.add("in-\tso-\tlent", "I n\ts V\tl V n t");
result.add("in-\tso-\tlu-\tble", "I n\ts Q l\tj V\tb V l");
result.add("in-\tsol-\tven-\tcies", "I n\ts Q l\tv V n\ts i: z");
result.add("in-\tsol-\tven-\tcy", "I n\ts Q l\tv V n\ts i:");
result.add("in-\tsol-\tvent", "I n\ts Q l\tv V n t");
result.add("in-\tsom-\tni-\ta", "I n\ts Q m\tn i:\tV");
result.add("in-\tsom-\tni-\tac", "I n\ts Q m\tn i:\t{ k");
result.add("in-\tspec-\tted", "I n\ts p e k\tt V d");
result.add("in-\tspec-\tting", "I n\ts p e k\tt I N");
result.add("in-\tspec-\ttion", "I n\ts p e k\tS V n");
result.add("in-\tspec-\ttions", "I n\ts p e k\tS V n z");
result.add("in-\tspec-\tto-\trate", "I n\ts p e k\tt @r\tV t");
result.add("in-\tspec-\ttor", "I n\ts p e k\tt @r");
result.add("in-\tspec-\ttors", "I n\ts p e k\tt @r z");
result.add("in-\tspec-\ttor's", "I n\ts p e k\tt @r z");
result.add("in-\tspect", "I n\ts p e k t");
result.add("in-\tsu-\tbor-\tdi-\tna-\ttion", "I n\ts V\tb O@\td V\tn eI\tS V n");
result.add("in-\tsu-\tbor-\tdi-\tnate", "I n\ts V\tb O@\td V\tn eI t");
result.add("in-\tsu-\tla-\tri-\tty", "I n\ts V\tl e@\tV\tt i:");
result.add("in-\tsu-\tla-\tted", "I n\ts V\tl eI\tt V d");
result.add("in-\tsu-\tla-\tting", "I n\ts V\tl eI\tt I N");
result.add("in-\tsu-\tla-\ttion", "I n\ts V\tl eI\tS V n");
result.add("in-\tsu-\tla-\ttor", "I n\ts V\tl eI\tt @r");
result.add("in-\tsu-\tla-\ttors", "I n\ts V\tl eI\tt @r z");
result.add("in-\tsu-\tlar", "I n\ts V\tl @r");
result.add("in-\tsu-\tlate", "I n\ts V\tl eI t");
result.add("in-\tsu-\tlin", "I n\ts V\tl V n");
result.add("in-\tsu-\tran-\tces", "I n\tS U@\tV n\ts V z");
result.add("in-\tsu-\tran-\tce's", "I n\tS U@\tV n\ts V z");
result.add("in-\tsu-\trance", "I n\tS U@\tV n s");
result.add("in-\tsu-\tring", "I n\tS U@\tI N");
result.add("in-\tsub-\tstan-\tti-\tate", "I n\ts V b\ts t { n\ttS i:\teI t");
result.add("in-\tsub-\tstan-\ttial", "I n\ts V b\ts t { n\ttS V l");
result.add("in-\tsuf-\tfe-\tra-\tble", "I n\ts V\tf @r\tV\tb V l");
result.add("in-\tsuf-\tfi-\tcient", "I n\ts V\tf I\tS V n t");
result.add("in-\tsuf-\tfi-\tcient-\tly", "I n\ts V\tf I\tS V n\tt l i:");
result.add("in-\tsul-\tted", "I n\ts V l\tt V d");
result.add("in-\tsul-\tting", "I n\ts V l\tt I N");
result.add("in-\tsult", "I n\ts V l t");
result.add("in-\tsults", "I n\ts V l t s");
result.add("in-\tsup-\tpor-\tta-\tble", "I n\ts V\tp O@\tt V\tb V l");
result.add("in-\tsur-\ter", "I n\tS U@\t@r");
result.add("in-\tsur-\ters", "I n\tS U@\t@r z");
result.add("in-\tsur-\ter's", "I n\tS U@\t@r z");
result.add("in-\tsur-\tgen-\tcies", "I n\ts @r\tdZ V n\ts i: z");
result.add("in-\tsur-\tgen-\tcy", "I n\ts @r\tdZ V n\ts i:");
result.add("in-\tsur-\tgent", "I n\ts @r\tdZ V n t");
result.add("in-\tsur-\tgents", "I n\ts @r\tdZ V n t s");
result.add("in-\tsur-\tmoun-\tta-\tble", "I n\ts @r\tm aU n\tt V\tb V l");
result.add("in-\tsur-\trec-\ttion", "I n\ts @r\te k\tS V n");
result.add("in-\tsure", "I n\tS U@");
result.add("in-\tsured", "I n\tS U@ d");
result.add("in-\tsures", "I n\tS U@ z");
result.add("in-\ttact", "I n\tt { k t");
result.add("in-\ttag-\tlio", "I n\tt { l\tj @U");
result.add("in-\ttake", "I n\tt eI k");
result.add("in-\ttan-\tgi-\tble", "I n\tt { n\tdZ V\tb V l");
result.add("in-\ttan-\tgi-\tbles", "I n\tt { n\tdZ V\tb V l z");
result.add("in-\tte-\tger", "I n\tt V\tdZ @r");
result.add("in-\tte-\tgers", "I n\tt V\tdZ @r z");
result.add("in-\tte-\tgu-\tment", "I n\tt e g\tj V\tm V n t");
result.add("in-\tte-\tra-\tgen-\tcy", "I n\tt @r\teI\tdZ V n\ts i:");
result.add("in-\tte-\trac-\tted", "I n\tt @r\t{ k\tt V d");
result.add("in-\tte-\trac-\tti-\tvi-\tty", "I n\tt @r\t{ k\tt I\tv V\tt i:");
result.add("in-\tte-\trac-\tting", "I n\tt @r\t{ k\tt I N");
result.add("in-\tte-\trac-\ttion", "I n\tt @r\t{ k\tS V n");
result.add("in-\tte-\trac-\ttions", "I n\tt @r\t{ k\tS V n z");
result.add("in-\tte-\trac-\ttive", "I n\tt @r\t{ k\tt I v");
result.add("in-\tte-\tract", "I n\tt @r\t{ k t");
result.add("in-\tte-\tracts", "I n\tt @r\t{ k t s");
result.add("in-\tte-\tres-\tting-\tly", "I n\tt @r\te s\tt I N\tl i:");
result.add("in-\tte-\tri-\tor", "I n\tt I@\ti:\t@r");
result.add("in-\tte-\tri-\tors", "I n\tt I@\ti:\t@r z");
result.add("in-\tte-\trim", "I n\tt @r\tV m");
result.add("in-\tte-\trof-\tfice", "I n\tt @r\tO:\tf V s");
result.add("in-\tteg-\tra-\tted", "I n\tt V g\tr eI\tt V d");
result.add("in-\tteg-\tra-\tting", "I n\tt V g\tr eI\tt I N");
result.add("in-\tteg-\tra-\ttion", "I n\tt V g\tr eI\tS V n");
result.add("in-\tteg-\tra-\ttions", "I n\tt V g\tr eI\tS V n z");
result.add("in-\tteg-\tra-\ttor", "I n\tt V g\tr eI\tt @r");
result.add("in-\tteg-\tra-\ttors", "I n\tt V g\tr eI\tt @r z");
result.add("in-\tteg-\tral", "I n\tt V g\tr V l");
result.add("in-\tteg-\trate", "I n\tt V g\tr eI t");
result.add("in-\tteg-\trates", "I n\tt V g\tr eI t s");
result.add("in-\tteg-\tri-\tty", "I n\tt e g\tr V\tt i:");
result.add("in-\ttel", "I n\tt e l");
result.add("in-\ttel-\tlec-\ttu-\ta-\tli-\tsm", "I n\tt e\tl V k\ttS u:\tV\tl I\tz V m");
result.add("in-\ttel-\tlec-\ttu-\tal", "I n\tt V\tl e k\ttS u:\tV l");
result.add("in-\ttel-\tlect", "I n\tt V\tl e k t");
result.add("in-\ttel-\tlects", "I n\tt V\tl e k t s");
result.add("in-\ttel-\tli-\tgence", "I n\tt e\tl V\tdZ V n s");
result.add("in-\ttem-\tpe-\trate", "I n\tt e m\tp @r\tV t");
result.add("in-\tten-\tded", "I n\tt e n\td V d");
result.add("in-\tten-\tding", "I n\tt e n\td I N");
result.add("in-\tten-\tsi-\tfi-\tca-\ttion", "I n\tt e n\ts V\tf V\tk eI\tS V n");
result.add("in-\tten-\tsi-\tfied", "I n\tt e n\ts V\tf aI d");
result.add("in-\tten-\tsi-\tfies", "I n\tt e n\ts V\tf aI z");
result.add("in-\tten-\tsi-\tfy", "I n\tt e n\ts V\tf aI");
result.add("in-\tten-\tsi-\tfy-\ting", "I n\tt e n\ts V\tf aI\tI N");
result.add("in-\tten-\tsi-\tties", "I n\tt e n\ts V\tt i: z");
result.add("in-\tten-\tsi-\tty", "I n\tt e n\ts V\tt i:");
result.add("in-\tten-\tsive", "I n\tt e n\ts V v");
result.add("in-\tten-\tsive-\tly", "I n\tt e n\ts I v\tl i:");
result.add("in-\tten-\ttio-\tnal", "I n\tt e n\tS V\tn V l");
result.add("in-\tten-\ttio-\tnal-\tly", "I n\tt e n\tS V\tn V\tl i:");
result.add("in-\tten-\ttion", "I n\tt e n\ttS V n");
result.add("in-\tten-\ttioned", "I n\tt e n\ttS V n d");
result.add("in-\tten-\ttions", "I n\tt e n\ttS V n z");
result.add("in-\ttend", "I n\tt e n d");
result.add("in-\ttends", "I n\tt e n d z");
result.add("in-\ttense", "I n\tt e n s");
result.add("in-\ttense-\tly", "I n\tt e n\ts l i:");
result.add("in-\ttent", "I n\tt e n t");
result.add("in-\ttent-\tly", "I n\tt e n\tt l i:");
result.add("in-\ttents", "I n\tt e n t s");
result.add("in-\tter", "I n\tt @r");
result.add("in-\tter-\tbank", "I n\tt @r\tb { N k");
result.add("in-\tter-\tbred", "I n\tt @r b\tr e d");
result.add("in-\tter-\tce-\tded", "I n\tt @r\ts i:\td V d");
result.add("in-\tter-\tce-\tding", "I n\tt @r\ts i:\td I N");
result.add("in-\tter-\tcede", "I n\tt @r\ts i: d");
result.add("in-\tter-\tcel-\tlu-\tlar", "I n\tt @r\ts e l\tj V\tl @r");
result.add("in-\tter-\tcep-\tted", "I n\tt @r\ts e p\tt V d");
result.add("in-\tter-\tcep-\tting", "I n\tt @r\ts e p\tt I N");
result.add("in-\tter-\tcep-\ttion", "I n\tt @r\ts e p\tS V n");
result.add("in-\tter-\tcep-\ttions", "I n\tt @r\ts e p\tS V n z");
result.add("in-\tter-\tcep-\ttor", "I n\tt @r\ts e p\tt @r");
result.add("in-\tter-\tcep-\ttors", "I n\tt @r\ts e p\tt @r z");
result.add("in-\tter-\tcept", "I n\tt @r\ts e p t");
result.add("in-\tter-\tcepts", "I n\tt @r\ts e p t s");
result.add("in-\tter-\tces-\tsion", "I n\tt @r\ts e\tS V n");
result.add("in-\tter-\tchan-\tgea-\tble", "I n\tt @r\ttS eI n\tdZ V\tb V l");
result.add("in-\tter-\tchan-\tgeab-\tly", "I n\tt @r\ttS eI n\tdZ V b\tl i:");
result.add("in-\tter-\tchan-\tges", "I n\tt @r\ttS eI n\tdZ V z");
result.add("in-\tter-\tchange", "I n\tt @r\ttS eI n dZ");
result.add("in-\tter-\tci-\tty", "I n\tt @r\ts I\tt i:");
result.add("in-\tter-\tcol-\tle-\tgiate", "I n\tt @r\tk V\tl i:\tdZ V t");
result.add("in-\tter-\tcom", "I n\tt @r\tk Q m");
result.add("in-\tter-\tcom-\tpa-\tny", "I n\tt @r\tk V m\tp V\tn i:");
result.add("in-\tter-\tcon-\tnec-\tted", "I n\tt @r\tk V\tn e k\tt V d");
result.add("in-\tter-\tcon-\tnec-\ttion", "I n\tt @r\tk V\tn e k\tS V n");
result.add("in-\tter-\tcon-\tnec-\ttions", "I n\tt @r\tk V\tn e k\tS V n z");
result.add("in-\tter-\tcon-\tnect", "I n\tt @r\tk V\tn e k t");
result.add("in-\tter-\tcon-\tti-\tnen-\ttal", "I n\tt @r\tk Q n\tt V\tn e n\tt V l");
result.add("in-\tter-\tcourse", "I n\tt @r\tk O@ s");
result.add("in-\tter-\tcul-\ttu-\tral", "I n\tt @r\tk V l\ttS @r\tV l");
result.add("in-\tter-\tcur-\trent", "I n\tt @r\tk @r\tV n t");
result.add("in-\tter-\tde-\tpen-\tdence", "I n\tt @r\td V\tp e n\td V n s");
result.add("in-\tter-\tde-\tpen-\tdent", "I n\tt @r\td V\tp e n\td V n t");
result.add("in-\tter-\tdea-\tler", "I n\tt @r\td i:\tl @r");
result.add("in-\tter-\tdi-\tgi-\ttal", "I n\tt @r\td I\tdZ V\tt V l");
result.add("in-\tter-\tdic-\tted", "I n\tt @r\td I k\tt V d");
result.add("in-\tter-\tdic-\tting", "I n\tt @r\td I k\tt I N");
result.add("in-\tter-\tdic-\ttion", "I n\tt @r\td I k\tS V n");
result.add("in-\tter-\tdict", "I n\tt @r\td I k t");
result.add("in-\tter-\tdis-\tcip-\tli-\tna-\try", "I n\tt @r\td I\ts V p\tl V\tn e@\ti:");
result.add("in-\tter-\tfa-\tces", "I n\tt @r\tf eI\ts V z");
result.add("in-\tter-\tface", "I n\tt @r\tf eI s");
result.add("in-\tter-\tfaith", "I n\tt @r\tf eI T");
result.add("in-\tter-\tfe-\trence", "I n\tt @r\tf I@\tV n s");
result.add("in-\tter-\tfe-\tring", "I n\tt @r\tf I@\tI N");
result.add("in-\tter-\tfe-\tro-\tme-\tter", "I n\tt @r\tf @r\tQ\tm V\tt @r");
result.add("in-\tter-\tfe-\tron", "I n\tt @r\tf I@\tQ n");
result.add("in-\tter-\tfe-\trons", "I n\tt @r\tf I@\tQ n z");
result.add("in-\tter-\tfere", "I n\tt @r\tf I@");
result.add("in-\tter-\tfered", "I n\tt @r\tf I@ d");
result.add("in-\tter-\tferes", "I n\tt @r\tf I@ z");
result.add("in-\tter-\tge-\tne-\tra-\ttio-\tnal", "I n\tt @r\tdZ e\tn @r\teI\tS V\tn V l");
result.add("in-\tter-\tgo-\tvern-\tmen-\ttal", "I n\tt @r\tg V\tv @r n\tm e n\tt V l");
result.add("in-\tter-\tgroup", "I n\tt @r g\tr u: p");
result.add("in-\tter-\tjec-\tted", "I n\tt @r\tdZ e k\tt V d");
result.add("in-\tter-\tjec-\ttion", "I n\tt @r\tdZ e k\tS V n");
result.add("in-\tter-\tjec-\ttions", "I n\tt @r\tdZ e k\tS V n z");
result.add("in-\tter-\tject", "I n\tt @r\tdZ e k t");
result.add("in-\tter-\tjects", "I n\tt @r\tdZ e k t s");
result.add("in-\tter-\tlace", "I n\tt @r\tl eI s");
result.add("in-\tter-\tlaced", "I n\tt @r\tl eI s t");
result.add("in-\tter-\tlake", "I n\tt @r\tl eI k");
result.add("in-\tter-\tlea-\tving", "I n\tt @r\tl i:\tv I N");
result.add("in-\tter-\tleaf", "I n\tt @r\tl i: f");
result.add("in-\tter-\tleave", "I n\tt @r\tl i: v");
result.add("in-\tter-\tleu-\tkin", "I n\tt @r\tl u:\tk V n");
result.add("in-\tter-\tlink", "I n\tt @r\tl I N k");
result.add("in-\tter-\tlinked", "I n\tt @r\tl I N k t");
result.add("in-\tter-\tlo-\tcu-\ttor", "I n\tt @r\tl Q k\tj V\tt @r");
result.add("in-\tter-\tlo-\tcu-\ttors", "I n\tt @r\tl Q k\tj V\tt @r z");
result.add("in-\tter-\tlo-\tper", "I n\tt @r\tl @U\tp @r");
result.add("in-\tter-\tlo-\tpers", "I n\tt @r\tl @U\tp @r z");
result.add("in-\tter-\tloc-\tking", "I n\tt @r\tl Q\tk I N");
result.add("in-\tter-\tlock", "I n\tt @r\tl Q k");
result.add("in-\tter-\tlocked", "I n\tt @r\tl Q k d");
result.add("in-\tter-\tlude", "I n\tt @r\tl u: d");
result.add("in-\tter-\tludes", "I n\tt @r\tl u: d z");
result.add("in-\tter-\tmar-\triage", "I n\tt @r\tm e@\tI dZ");
result.add("in-\tter-\tmar-\tried", "I n\tt @r\tm {\tr i: d");
result.add("in-\tter-\tmar-\try", "I n\tt @r\tm {\tr i:");
result.add("in-\tter-\tme-\tdi-\ta", "I n\tt @r\tm i:\td i:\tV");
result.add("in-\tter-\tme-\tdi-\ta-\tries", "I n\tt @r\tm i:\td i:\te@\ti: z");
result.add("in-\tter-\tme-\tdi-\ta-\try", "I n\tt @r\tm i:\td i:\te@\ti:");
result.add("in-\tter-\tme-\tdi-\tate", "I n\tt @r\tm i:\td i:\tV t");
result.add("in-\tter-\tme-\tdi-\tates", "I n\tt @r\tm i:\td i:\tV t s");
result.add("in-\tter-\tmet", "I n\tt @r\tm e t");
result.add("in-\tter-\tmi-\tna-\tble", "I n\tt @r\tm V\tn V\tb V l");
result.add("in-\tter-\tmi-\tnab-\tly", "I n\tt @r\tm V\tn V b\tl i:");
result.add("in-\tter-\tmin-\tg-\tling", "I n\tt @r\tm I N\tg V\tl I N");
result.add("in-\tter-\tmin-\tgle", "I n\tt @r\tm I N\tg V l");
result.add("in-\tter-\tmin-\tgled", "I n\tt @r\tm I N\tg V l d");
result.add("in-\tter-\tmis-\tsion", "I n\tt @r\tm I\tS V n");
result.add("in-\tter-\tmis-\tsions", "I n\tt @r\tm I\tS V n z");
result.add("in-\tter-\tmit-\ttent", "I n\tt @r\tm I\tt V n t");
result.add("in-\tter-\tmit-\ttent-\tly", "I n\tt @r\tm I\tt V n\tt l i:");
result.add("in-\tter-\tmix", "I n\tt @r\tm I k s");
result.add("in-\tter-\tmix-\ting", "I n\tt @r\tm I k\ts I N");
result.add("in-\tter-\tmixed", "I n\tt @r\tm I k s t");
result.add("in-\tter-\tmo-\tdal", "I n\tt @r\tm @U\td V l");
result.add("in-\tter-\tmo-\tle-\tcu-\tlar", "I n\tt @r\tm V\tl e k\tj V\tl @r");
result.add("in-\tter-\tmoun-\ttain", "I n\tt @r\tm aU n\tt V n");
result.add("in-\tter-\tna-\tlize", "I n\tt @r\tn V\tl aI z");
result.add("in-\tter-\tna-\tlized", "I n\tt @r\tn V\tl aI z d");
result.add("in-\tter-\tna-\ttio-\tna-\tle", "I n\tt @r\tn {\tS V\tn Q\tl i:");
result.add("in-\tter-\tna-\ttio-\tna-\tli-\tsm", "I n\tt @r\tn {\tS V\tn V\tl I\tz V m");
result.add("in-\tter-\tna-\ttio-\tna-\tli-\tza-\ttion", "I n\tt @r\tn {\tS V\tn V\tl V\tz eI\tS V n");
result.add("in-\tter-\tna-\ttio-\tna-\tlist", "I n\tt @r\tn {\tS V\tn V\tl V s t");
result.add("in-\tter-\tna-\ttio-\tna-\tlists", "I n\tt @r\tn {\tS V\tn V\tl V s t s");
result.add("in-\tter-\tna-\ttio-\tna-\tlize", "I n\tt @r\tn {\tS V\tn V\tl aI z");
result.add("in-\tter-\tna-\ttio-\tna-\tlized", "I n\tt @r\tn {\tS V\tn V\tl aI z d");
result.add("in-\tter-\tna-\ttio-\tnal", "I n\tt @r\tn {\tS V\tn V l");
result.add("in-\tter-\tna-\ttio-\tnal-\tly", "I n\tt @r\tn {\tS V\tn V\tl i:");
result.add("in-\tter-\tna-\ttio-\tnals", "I n\tt @r\tn {\tS V\tn V l z");
result.add("in-\tter-\tna-\ttio-\tnal's", "I n\tt @r\tn {\tS V\tn V l z");
result.add("in-\tter-\tnal", "I n\tt @r\tn V l");
result.add("in-\tter-\tnal-\tly", "I n\tt @r\tn V\tl i:");
result.add("in-\tter-\tne-\tcine", "I n\tt @r\tn V\ts i: n");
result.add("in-\tter-\tnee", "I n\tt @r\tn i:");
result.add("in-\tter-\tnees", "I n\tt @r\tn i: z");
result.add("in-\tter-\tnet", "I n\tt @r\tn e t");
result.add("in-\tter-\tnet's", "I n\tt @r\tn e t s");
result.add("in-\tter-\tnist", "I n\tt @r\tn V s t");
result.add("in-\tter-\tnists", "I n\tt @r\tn V s t s");
result.add("in-\tter-\tper-\tso-\tnal", "I n\tt @r\tp @r\ts V\tn V l");
result.add("in-\tter-\tpla-\tne-\tta-\try", "I n\tt @r p\tl {\tn V\tt e@\ti:");
result.add("in-\tter-\tplay", "I n\tt @r p\tl eI");
result.add("in-\tter-\tpo-\tla-\tted", "I\tt @r\tp V\tl eI\tt V d");
result.add("in-\tter-\tpo-\tlate", "I\tt @r\tp V\tl eI t");
result.add("in-\tter-\tpol", "I n\tt @r\tp @U l");
result.add("in-\tter-\tpose", "I n\tt @r\tp @U z");
result.add("in-\tter-\tra-\tcial", "I n\tt @r\tr eI\tS V l");
result.add("in-\tter-\tre-\tla-\tted", "I n\tt @r\tr V\tl eI\tt V d");
result.add("in-\tter-\tre-\tla-\ttion-\tship", "I n\tt @r\tr i:\tl eI\tS V n\tS I p");
result.add("in-\tter-\tre-\tlate", "I n\tt @r\tr V\tl eI t");
result.add("in-\tter-\treg-\tnum", "I n\tt @r\tr e g\tn V m");
result.add("in-\tter-\tro-\tga-\tted", "I n\tt e@\tV\tg eI\tt V d");
result.add("in-\tter-\tro-\tga-\tting", "I n\tt e@\tV\tg eI\tt I N");
result.add("in-\tter-\tro-\tga-\ttion", "I n\tt e@\tV\tg eI\tS V n");
result.add("in-\tter-\tro-\tga-\ttions", "I n\tt e@\tV\tg eI\tS V n z");
result.add("in-\tter-\tro-\tga-\tto-\tries", "I n\tt e@\tQ\tg V\tt O@\ti: z");
result.add("in-\tter-\tro-\tga-\tto-\try", "I n\tt e@\tQ\tg V\tt O@\ti:");
result.add("in-\tter-\tro-\tga-\ttor", "I n\tt e@\tV\tg eI\tt @r");
result.add("in-\tter-\tro-\tga-\ttors", "I n\tt e@\tV\tg eI\tt @r z");
result.add("in-\tter-\tro-\tgate", "I n\tt e@\tV\tg eI t");
result.add("in-\tter-\trup-\tted", "I n\tt @r\tV p\tt V d");
result.add("in-\tter-\trup-\tti-\tble", "I n\tt @r\tr V p\tt V\tb V l");
result.add("in-\tter-\trup-\tting", "I n\tt @r\tV p\tt I N");
result.add("in-\tter-\trup-\ttion", "I n\tt @r\tV p\tS V n");
result.add("in-\tter-\trup-\ttions", "I n\tt @r\tV p\tS V n z");
result.add("in-\tter-\trupt", "I n\tt @r\tV p t");
result.add("in-\tter-\trupts", "I n\tt @r\tV p t s");
result.add("in-\tter-\tscho-\tlas-\ttic", "I n\tt @r s\tk V\tl { s\tt I k");
result.add("in-\tter-\tsec-\tted", "I n\tt @r\ts e k\tt V d");
result.add("in-\tter-\tsec-\tting", "I n\tt @r\ts e k\tt I N");
result.add("in-\tter-\tsec-\ttion", "I n\tt @r\ts e k\tS V n");
result.add("in-\tter-\tsec-\ttions", "I n\tt @r\ts e k\tS V n z");
result.add("in-\tter-\tsect", "I n\tt @r\ts e k t");
result.add("in-\tter-\tsects", "I n\tt @r\ts e k t s");
result.add("in-\tter-\tseg-\tment", "I n\tt @r\ts e g\tm V n t");
result.add("in-\tter-\tsper-\tses", "I n\tt @r s\tp @r\ts V z");
result.add("in-\tter-\tsperse", "I n\tt @r s\tp @r s");
result.add("in-\tter-\tspersed", "I n\tt @r s\tp @r s t");
result.add("in-\tter-\tti-\tdal", "I n\tt @r\tt aI\td V l");
result.add("in-\tter-\tur-\tban", "I n\tt @r\t@r\tb V n");
result.add("in-\tter-\tval", "I n\tt @r\tv V l");
result.add("in-\tter-\tvals", "I n\tt @r\tv V l z");
result.add("in-\tter-\tve-\tning", "I n\tt @r\tv i:\tn I N");
result.add("in-\tter-\tve-\tnor", "I n\tt @r\tv i:\tn @r");
result.add("in-\tter-\tve-\tnors", "I n\tt @r\tv i:\tn @r z");
result.add("in-\tter-\tven-\ttio-\tni-\tsm", "I n\tt @r\tv e n\ttS V\tn I\tz V m");
result.add("in-\tter-\tven-\ttio-\tnist", "I n\tt @r\tv e n\tS V\tn V s t");
result.add("in-\tter-\tven-\ttio-\tnists", "I n\tt @r\tv e n\ttS V\tn V s t s");
result.add("in-\tter-\tven-\ttion", "I n\tt @r\tv e n\ttS V n");
result.add("in-\tter-\tven-\ttions", "I n\tt @r\tv e n\ttS V n z");
result.add("in-\tter-\tvene", "I n\tt @r\tv i: n");
result.add("in-\tter-\tvened", "I n\tt @r\tv i: n d");
result.add("in-\tter-\tvenes", "I n\tt @r\tv i: n z");
result.add("in-\tter-\tvie-\twee", "I n\tt @r v\tj u:\ti:");
result.add("in-\tter-\tvie-\twees", "I n\tt @r v\tj u:\ti: z");
result.add("in-\tter-\tvie-\twer", "I n\tt @r v\tj u:\t@r");
result.add("in-\tter-\tvie-\twers", "I n\tt @r v\tj u:\t@r z");
result.add("in-\tter-\tview", "I n\tt @r v\tj u:");
result.add("in-\tter-\tview-\ting", "I n\tt @r v\tj u:\tI N");
result.add("in-\tter-\tviewed", "I n\tt @r v\tj u: d");
result.add("in-\tter-\tviews", "I n\tt @r v\tj u: z");
result.add("in-\tter-\twea-\tving", "I n\tt @r\tw i:\tv I N");
result.add("in-\tter-\tweave", "I n\tt @r\tw i: v");
result.add("in-\tter-\two-\tven", "I n\tt @r\tw @U\tv V n");
result.add("in-\tterm", "I n\tt @r m");
result.add("in-\ttern", "I n\tt @r n");
result.add("in-\ttern-\tment", "I n\tt @r n\tm V n t");
result.add("in-\ttern-\tship", "I n\tt @r n\tS I p");
result.add("in-\ttern-\tships", "I n\tt @r n\tS I p s");
result.add("in-\tterned", "I n\tt @r n d");
result.add("in-\tterns", "I n\tt @r n z");
result.add("in-\tterp-\tre-\tta-\ttion", "I n\tt @r p\tr V\tt eI\tS V n");
result.add("in-\tterp-\tre-\tta-\ttions", "I n\tt @r p\tr V\tt eI\tS V n z");
result.add("in-\tterp-\tre-\tted", "I n\tt @r p\tr V\tt V d");
result.add("in-\tterp-\tre-\tter", "I n\tt @r p\tr V\tt @r");
result.add("in-\tterp-\tre-\tters", "I n\tt @r p\tr V\tt @r z");
result.add("in-\tterp-\tre-\tting", "I n\tt @r p\tr e\tt I N");
result.add("in-\tterp-\tre-\ttive", "I n\tt @r p\tr V\tt I v");
result.add("in-\tterp-\tret", "I n\tt @r p\tr V t");
result.add("in-\tterp-\trets", "I n\tt @r p\tr V t s");
result.add("in-\tterp-\tro-\tvin-\tcial", "I n\tt @r p\tr V\tv I n\tS V l");
result.add("in-\tterred", "I n\tt @r d");
result.add("in-\ttert-\tri-\tbal", "I n\tt @r t\tr aI\tb V l");
result.add("in-\ttert-\twi-\tning", "I n\tt @r t\tw aI\tn I N");
result.add("in-\ttert-\twine", "I n\tt @r t\tw aI n");
result.add("in-\ttert-\twined", "I n\tt @r t\tw aI n d");
result.add("in-\ttes-\tti-\tnal", "I n\tt e s\tt I\tn V l");
result.add("in-\ttes-\ttine", "I n\tt e s\tt I n");
result.add("in-\ttes-\ttines", "I n\tt e s\tt I n z");
result.add("in-\tti", "I n\tt i:");
result.add("in-\tti-\tfa-\tda", "I n\tt I\tf Q\td V");
result.add("in-\tti-\tma-\tcy", "I n\tt I\tm V\ts i:");
result.add("in-\tti-\tma-\tted", "I n\tt I\tm eI\tt I d");
result.add("in-\tti-\tma-\ttion", "I n\tt I\tm eI\tS V n");
result.add("in-\tti-\tma-\ttions", "I n\tt I\tm eI\tS V n z");
result.add("in-\tti-\tmate", "I n\tt I\tm V t");
result.add("in-\tti-\tmate-\tly", "I n\tt I\tm V t\tl i:");
result.add("in-\tti-\tmates", "I n\tt I\tm V t s");
result.add("in-\tti-\tmi-\tda-\tted", "I n\tt I\tm I\td eI\tt I d");
result.add("in-\tti-\tmi-\tda-\tting", "I n\tt I\tm I\td eI\tt I N");
result.add("in-\tti-\tmi-\tda-\ttion", "I n\tt I\tm I\td eI\tS V n");
result.add("in-\tti-\tmi-\tdate", "I n\tt I\tm I\td eI t");
result.add("in-\tti-\tmi-\tdates", "I n\tt I\tm I\td eI t s");
result.add("in-\ttis", "I n\tt I s");
result.add("in-\tto", "I n\tt u:");
result.add("in-\tto-\tle-\tra-\tble", "I n\tt Q\tl @r\tV\tb V l");
result.add("in-\tto-\tle-\trab-\tly", "I n\tt Q\tl @r\tV b\tl i:");
result.add("in-\tto-\tle-\trance", "I n\tt Q\tl @r\tV n s");
result.add("in-\tto-\tle-\trant", "I n\tt Q\tl @r\tV n t");
result.add("in-\tto-\tna-\ttion", "I n\tt V\tn eI\tS V n");
result.add("in-\tto-\tning", "I n\tt @U\tn I N");
result.add("in-\tto-\txi-\tca-\tted", "I n\tt Q k\ts I\tk eI\tt V d");
result.add("in-\tto-\txi-\tca-\tting", "I n\tt Q k\ts I\tk eI\tt I N");
result.add("in-\tto-\txi-\tca-\ttion", "I n\tt Q k\ts I\tk eI\tS V n");
result.add("in-\tto-\txi-\tcate", "I n\tt Q k\ts I\tk eI t");
result.add("in-\ttone", "I n\tt @U n");
result.add("in-\ttoned", "I n\tt @U n d");
result.add("in-\ttones", "I n\tt @U n z");
result.add("in-\ttou-\trist", "I n\tt U@\tI s t");
result.add("in-\ttu-\ti-\ttion", "I n\tt u:\tI\tS V n");
result.add("in-\ttu-\ti-\ttive", "I n\tt u:\tI\tt I v");
result.add("in-\ttu-\ti-\ttive-\tly", "I n\tt u:\tI\tt I v\tl i:");
result.add("in-\ttu-\tit", "I n\tt u:\tI t");
result.add("in-\tva-\tded", "I n\tv eI\td V d");
result.add("in-\tva-\tder", "I n\tv eI\td @r");
result.add("in-\tva-\tders", "I n\tv eI\td @r z");
result.add("in-\tva-\tding", "I n\tv eI\td I N");
result.add("in-\tva-\tli-\tda-\tted", "I n\tv {\tl I\td eI\tt I d");
result.add("in-\tva-\tli-\tda-\tting", "I n\tv {\tl I\td eI\tt I N");
result.add("in-\tva-\tli-\tda-\ttion", "I n\tv {\tl I\td eI\tS V n");
result.add("in-\tva-\tli-\tdate", "I n\tv {\tl I\td eI t");
result.add("in-\tva-\tlid", "I n\tv V\tl V d");
result.add("in-\tva-\tlids", "I n\tv V\tl I d z");
result.add("in-\tva-\tlua-\tble", "I n\tv { l\tj V\tb V l");
result.add("in-\tva-\tri-\tab-\tly", "I n\tv e@\ti:\tV b\tl i:");
result.add("in-\tva-\tri-\tance", "I n\tv e@\ti:\tV n s");
result.add("in-\tva-\tri-\tant", "I n\tv e@\ti:\tV n t");
result.add("in-\tva-\tsion", "I n\tv eI\tZ V n");
result.add("in-\tva-\tsions", "I n\tv eI\tZ V n z");
result.add("in-\tva-\tsive", "I n\tv eI\ts I v");
result.add("in-\tvade", "I n\tv eI d");
result.add("in-\tvades", "I n\tv eI d z");
result.add("in-\tve-\tte-\trate", "I n\tv e\tt @r\tV t");
result.add("in-\tvec-\ttive", "I n\tv e k\tt I v");
result.add("in-\tven-\tted", "I n\tv e n\tt V d");
result.add("in-\tven-\tting", "I n\tv e n\tt I N");
result.add("in-\tven-\ttion", "I n\tv e n\tS V n");
result.add("in-\tven-\ttions", "I n\tv e n\tS V n z");
result.add("in-\tven-\ttive", "I n\tv e n\tt I v");
result.add("in-\tven-\ttive-\tness", "I n\tv e n\tt I v\tn V s");
result.add("in-\tven-\tto-\tried", "I n\tv V n\tt O@\ti: d");
result.add("in-\tven-\tto-\tries", "I n\tv V n\tt O@\ti: z");
result.add("in-\tven-\tto-\try", "I n\tv V n\tt O@\ti:");
result.add("in-\tven-\tto-\try's", "I n\tv V n\tt O@\ti: z");
result.add("in-\tven-\ttor", "I n\tv e n\tt @r");
result.add("in-\tven-\ttors", "I n\tv e n\tt @r z");
result.add("in-\tvent", "I n\tv e n t");
result.add("in-\tvents", "I n\tv e n t s");
result.add("in-\tver-\tness", "I n\tv @r\tn e s");
result.add("in-\tver-\tsion", "I n\tv @r\tZ V n");
result.add("in-\tver-\tteb-\trate", "I n\tv @r\tt V b\tr V t");
result.add("in-\tver-\tteb-\trates", "I n\tv @r\tt V b\tr V t s");
result.add("in-\tver-\tted", "I n\tv @r\tt V d");
result.add("in-\tverse", "I n\tv @r s");
result.add("in-\tverse-\tly", "I n\tv @r s\tl i:");
result.add("in-\tvert", "I n\tv @r t");
result.add("in-\tves-\tta-\tble", "I n\tv e s\tt V\tb V l");
result.add("in-\tves-\tted", "I n\tv e s\tt V d");
result.add("in-\tves-\tti-\tga-\tted", "I n\tv e s\tt I\tg eI\tt I d");
result.add("in-\tves-\tti-\tga-\tting", "I n\tv e s\tt I\tg eI\tt I N");
result.add("in-\tves-\tti-\tga-\ttio-\tnal", "I n\tv e s\tt I\tg eI\tS V\tn V l");
result.add("in-\tves-\tti-\tga-\ttion", "I n\tv e s\tt I\tg eI\tS V n");
result.add("in-\tves-\tti-\tga-\ttions", "I n\tv e s\tt I\tg eI\tS V n z");
result.add("in-\tves-\tti-\tga-\ttive", "I n\tv e s\tt I\tg eI\tt I v");
result.add("in-\tves-\tti-\tga-\tto-\try", "I n\tv e s\tt I\tg V\tt O@\ti:");
result.add("in-\tves-\tti-\tga-\ttor", "I n\tv e s\tt I\tg eI\tt @r");
result.add("in-\tves-\tti-\tga-\ttors", "I n\tv e s\tt I\tg eI\tt @r z");
result.add("in-\tves-\tti-\tga-\ttor's", "I n\tv e s\tt I\tg eI\tt @r z");
result.add("in-\tves-\tti-\tgate", "I n\tv e s\tt I\tg eI t");
result.add("in-\tves-\tti-\tgates", "I n\tv e s\tt I\tg eI t s");
result.add("in-\tves-\tti-\tture", "I n\tv e s\tt V\ttS @r");
result.add("in-\tves-\tting", "I n\tv e s\tt I N");
result.add("in-\tves-\ttor", "I n\tv e s\tt @r");
result.add("in-\tves-\ttors", "I n\tv e s\tt @r z");
result.add("in-\tves-\ttor's", "I n\tv e s\tt @r z");
result.add("in-\tvest", "I n\tv e s t");
result.add("in-\tvest-\tment", "I n\tv e s\tt m V n t");
result.add("in-\tvest-\tments", "I n\tv e s\tt m V n t s");
result.add("in-\tvest-\tment's", "I n\tv e s\tt m V n t s");
result.add("in-\tvests", "I n\tv e s t s");
result.add("in-\tvi-\tdi-\tous", "I n\tv I\td i:\tV s");
result.add("in-\tvi-\tgo-\tra-\tted", "I n\tv I\tg @r\teI\tt V d");
result.add("in-\tvi-\tgo-\tra-\tting", "I n\tv I\tg @r\teI\tt I N");
result.add("in-\tvi-\tgo-\trate", "I n\tv I\tg @r\teI t");
result.add("in-\tvi-\to-\tla-\tble", "I n\tv aI\tV\tl V\tb V l");
result.add("in-\tvi-\to-\tlate", "I n\tv aI\tV\tl V t");
result.add("in-\tvi-\tsi-\tbi-\tli-\tty", "I n\tv I\tz I\tb I\tl I\tt i:");
result.add("in-\tvi-\tsi-\tble", "I n\tv I\tz I\tb V l");
result.add("in-\tvi-\tsi-\tbles", "I n\tv I\tz I\tb V l z");
result.add("in-\tvi-\tta-\ttio-\tnal", "I n\tv I\tt eI\tS V\tn V l");
result.add("in-\tvi-\tta-\ttion", "I n\tv I\tt eI\tS V n");
result.add("in-\tvi-\tta-\ttions", "I n\tv I\tt eI\tS V n z");
result.add("in-\tvi-\tted", "I n\tv aI\tt V d");
result.add("in-\tvi-\tting", "I n\tv aI\tt I N");
result.add("in-\tvin-\tci-\tbi-\tli-\tty", "I n\tv I n\ts I\tb I\tl I\tt i:");
result.add("in-\tvin-\tci-\tble", "I n\tv I n\ts I\tb V l");
result.add("in-\tvite", "I n\tv aI t");
result.add("in-\tvites", "I n\tv aI t s");
result.add("in-\tvo-\tca-\ttion", "I n\tv V\tk eI\tS V n");
result.add("in-\tvo-\tking", "I n\tv @U\tk I N");
result.add("in-\tvo-\tlun-\tta-\tri-\tly", "I n\tv Q\tl V n\tt @r\tV\tl i:");
result.add("in-\tvo-\tlun-\tta-\try", "I n\tv Q\tl V n\tt e@\ti:");
result.add("in-\tvoi-\tces", "I n\tv OI\ts V z");
result.add("in-\tvoi-\tcing", "I n\tv OI\ts I N");
result.add("in-\tvoice", "I n\tv OI s");
result.add("in-\tvoke", "I n\tv @U k");
result.add("in-\tvoked", "I n\tv @U k t");
result.add("in-\tvokes", "I n\tv @U k s");
result.add("in-\tvol-\tving", "I n\tv Q l\tv I N");
result.add("in-\tvolve", "I n\tv Q l v");
result.add("in-\tvolve-\tment", "I n\tv Q l\tv m V n t");
result.add("in-\tvolve-\tments", "I n\tv Q l\tv m V n t s");
result.add("in-\tvolved", "I n\tv Q l v d");
result.add("in-\tvolves", "I n\tv Q l v z");
result.add("in-\tvul-\tne-\tra-\tbi-\tli-\tty", "I n\tv V l\tn @r\tV\tb I\tl V\tt i:");
result.add("in-\tvul-\tne-\tra-\tble", "I n\tv V l\tn @r\tV\tb V l");
result.add("in-\tward", "I n\tw @r d");
result.add("in-\tward-\tly", "I n\tw @r d\tl i:");
result.add("in-\twood", "I n\tw U d");
result.add("in.", "I n");
result.add("inc", "I N k");
result.add("inc-\tline", "I n\tk l aI n");
result.add("inc-\tlined", "I n\tk l aI n d");
result.add("inc-\tlines", "I n\tk l aI n z");
result.add("inc-\tlo-\tsure", "I n\tk l @U\tZ @r");
result.add("inc-\tlu-\tded", "I n\tk l u:\td V d");
result.add("inc-\tlu-\tding", "I n\tk l u:\td I N");
result.add("inc-\tlu-\tsion", "I n\tk l u:\tZ V n");
result.add("inc-\tlu-\tsions", "I n\tk l u:\tZ V n z");
result.add("inc-\tlu-\tsive", "I n\tk l u:\ts I v");
result.add("inc-\tlu-\tsive-\tness", "I n\tk l u:\ts I v\tn V s");
result.add("inc-\tlude", "I n\tk l u: d");
result.add("inc-\tludes", "I n\tk l u: d z");
result.add("inc.", "I N k");
result.add("inch", "I n tS");
result.add("inched", "I n tS t");
result.add("inf-\tra-\tred", "I n\tf r @r\te d");
result.add("inf-\tra-\tstruc-\ttu-\tral", "I n\tf r V s\tt r V k\ttS @r\tV l");
result.add("inf-\tra-\tstruc-\tture", "I n\tf r V s\tt r V k\ttS @r");
result.add("inf-\tra-\tstruc-\ttures", "I n\tf r V s\tt r V k\ttS @r z");
result.add("ing", "I N");
result.add("ing-\tlis", "I N\tg l I s");
result.add("ing-\tlo-\tri-\tous", "I n\tg l O@\ti:\tV s");
result.add("ing-\tmar", "I N\tm Q@");
result.add("ing-\tra-\tti-\ta-\tting", "I N\tg r eI\tS i:\teI\tt I N");
result.add("ing-\tra-\tti-\tate", "I N\tg r eI\tS i:\teI t");
result.add("ing-\tram", "I N\tg r V m");
result.add("ing-\tre-\tdi-\tent", "I N\tg r i:\td i:\tV n t");
result.add("ing-\tre-\tdi-\tents", "I N\tg r i:\td i:\tV n t s");
result.add("ing-\trid", "I N\tg r I d");
result.add("ing-\trum", "I N\tg r V m");
result.add("ing-\tvar", "I N\tv Q@");
result.add("inge", "I n dZ");
result.add("ink", "I N k");
result.add("ink-\tblot", "I N\tk b l Q t");
result.add("ink-\tjet", "I N\tk dZ e t");
result.add("ink-\tling", "I N\tk l I N");
result.add("inks", "I N k s");
result.add("inn", "I n");
result.add("inn-\tkee-\tper", "I n\tk i:\tp @r");
result.add("inn-\tkee-\tpers", "I n\tk i:\tp @r z");
result.add("inns", "I n z");
result.add("inn's", "I n z");
result.add("ins", "I n z");
result.add("ins-\tcribe", "I n\ts k r aI b");
result.add("ins-\tcribed", "I n\ts k r aI b d");
result.add("ins-\tcrip-\ttion", "I n\ts k r I p\tS V n");
result.add("ins-\tcrip-\ttions", "I n\ts k r I p\tS V n z");
result.add("ins-\tcru-\tta-\tble", "I n\ts k r u:\tt V\tb V l");
result.add("ins-\tko", "I n\ts k @U");
result.add("ins-\tpects", "I n\ts p e k t s");
result.add("ins-\tpi-\tra-\ttio-\tnal", "I n\ts p @r\teI\tS V\tn V l");
result.add("ins-\tpi-\tra-\ttion", "I n\ts p @r\teI\tS V n");
result.add("ins-\tpi-\tra-\ttions", "I n\ts p @r\teI\tS V n z");
result.add("ins-\tpi-\tred", "I n\ts p aI\t@r d");
result.add("ins-\tpi-\tring", "I n\ts p aI\tr I N");
result.add("ins-\tpire", "I n\ts p aI r");
result.add("ins-\tpires", "I n\ts p aI r z");
result.add("ins-\tta-\tbi-\tli-\tties", "I n\ts t V\tb I\tl V\tt i: z");
result.add("ins-\tta-\tbi-\tli-\tty", "I n\ts t V\tb I\tl V\tt i:");
result.add("ins-\ttal-\tla-\ttion", "I n\ts t V\tl eI\tS V n");
result.add("ins-\ttal-\tla-\ttions", "I n\ts t V\tl eI\tS V n z");
result.add("ins-\ttal-\tler", "I n\ts t O:\tl @r");
result.add("ins-\ttal-\tlers", "I n\ts t O:\tl @r z");
result.add("ins-\ttal-\tling", "I n\ts t O:\tl I N");
result.add("ins-\ttall", "I n\ts t O: l");
result.add("ins-\ttall-\tment", "I n\ts t O: l\tm V n t");
result.add("ins-\ttall-\tments", "I n\ts t O: l\tm V n t s");
result.add("ins-\ttalled", "I n\ts t O: l d");
result.add("ins-\ttalls", "I n\ts t O: l z");
result.add("ins-\ttan-\tces", "I n\ts t V n\ts V z");
result.add("ins-\ttan-\tta-\tne-\tous", "I n\ts t V n\tt {\tn i:\tV s");
result.add("ins-\ttan-\tta-\tne-\tous-\tly", "I n\ts t V n\tt {\tn i:\tV s\tl i:");
result.add("ins-\ttance", "I n\ts t V n s");
result.add("ins-\ttant", "I n\ts t V n t");
result.add("ins-\ttant-\tly", "I n\ts t V n\tt l i:");
result.add("ins-\ttead", "I n\ts t e d");
result.add("ins-\tti-\tga-\tted", "I n\ts t I\tg eI\tt I d");
result.add("ins-\tti-\tga-\tting", "I n\ts t I\tg eI\tt I N");
result.add("ins-\tti-\tga-\ttion", "I n\ts t I\tg eI\tS V n");
result.add("ins-\tti-\tga-\ttor", "I n\ts t I\tg eI\tt @r");
result.add("ins-\tti-\tga-\ttors", "I n\ts t I\tg eI\tt @r z");
result.add("ins-\tti-\tgate", "I n\ts t I\tg eI t");
result.add("ins-\tti-\ttu-\tted", "I n\ts t I\tt u:\tt I d");
result.add("ins-\tti-\ttu-\tting", "I n\ts t I\tt u:\tt I N");
result.add("ins-\tti-\ttu-\ttio-\tna-\tli-\tza-\ttion", "I n\ts t I\tt u:\tS V\tn V\tl I\tz eI\tS V n");
result.add("ins-\tti-\ttu-\ttio-\tna-\tli-\tzes", "I n\ts t I\tt u:\tS V\tn V\tl aI\tz V z");
result.add("ins-\tti-\ttu-\ttio-\tna-\tli-\tzing", "I n\ts t I\tt u:\tS V\tn V\tl aI\tz I N");
result.add("ins-\tti-\ttu-\ttio-\tna-\tlist", "I n\ts t I\tt u:\tS V\tn V\tl I s t");
result.add("ins-\tti-\ttu-\ttio-\tna-\tlists", "I n\ts t I\tt u:\tS V\tn V\tl I s t s");
result.add("ins-\tti-\ttu-\ttio-\tna-\tlize", "I n\ts t I\tt u:\tS V\tn V\tl aI z");
result.add("ins-\tti-\ttu-\ttio-\tna-\tlized", "I n\ts t I\tt u:\tS V\tn V\tl aI z d");
result.add("ins-\tti-\ttu-\ttio-\tnal", "I n\ts t I\tt u:\tS V\tn V l");
result.add("ins-\tti-\ttu-\ttio-\tnal-\tly", "I n\ts t I\tt u:\tS V\tn V\tl i:");
result.add("ins-\tti-\ttu-\ttion", "I n\ts t I\tt u:\tS V n");
result.add("ins-\tti-\ttu-\ttions", "I n\ts t I\tt u:\tS V n z");
result.add("ins-\tti-\ttu-\ttion's", "I n\ts t I\tt u:\tS V n z");
result.add("ins-\tti-\ttute", "I n\ts t I\tt u: t");
result.add("ins-\tti-\ttutes", "I n\ts t I\tt u: t s");
result.add("ins-\ttil-\tling", "I n\ts t I\tl I N");
result.add("ins-\ttill", "I n\ts t I l");
result.add("ins-\ttilled", "I n\ts t I l d");
result.add("ins-\ttills", "I n\ts t I l z");
result.add("ins-\ttinc-\ttive", "I n\ts t I N\tk t I v");
result.add("ins-\ttinc-\ttive-\tly", "I n\ts t I N\tk t I v\tl i:");
result.add("ins-\ttinct", "I n\ts t I N k t");
result.add("ins-\ttincts", "I n\ts t I N k t s");
result.add("inst-\tru-\tmen-\tta-\tli-\tty", "I n\ts t r U\tm e n\tt {\tl I\tt i:");
result.add("inst-\tru-\tmen-\tta-\tlist", "I n\ts t r U\tm e n\tt V\tl I s t");
result.add("inst-\tru-\tmen-\tta-\tlists", "I n\ts t r U\tm e n\tt V\tl I s t s");
result.add("inst-\tru-\tmen-\tta-\ttion", "I n\ts t r U\tm e n\tt eI\tS V n");
result.add("inst-\tru-\tmen-\ttal", "I n\ts t r U\tm e n\tt V l");
result.add("inst-\tru-\tmen-\ttals", "I n\ts t r U\tm e n\tt V l z");
result.add("inst-\tru-\tment", "I n\ts t r V\tm V n t");
result.add("inst-\tru-\tments", "I n\ts t r U\tm V n t s");
result.add("inst-\tru-\tment's", "I n\ts t r V\tm V n t s");
result.add("inst-\truc-\tted", "I n\ts t r V k\tt I d");
result.add("inst-\truc-\tting", "I n\ts t r V k\tt I N");
result.add("inst-\truc-\ttio-\tnal", "I n\ts t r V k\tS V\tn V l");
result.add("inst-\truc-\ttion", "I n\ts t r V k\tS V n");
result.add("inst-\truc-\ttions", "I n\ts t r V k\tS V n z");
result.add("inst-\truc-\ttive", "I n\ts t r V k\tt I v");
result.add("inst-\truc-\ttor", "I n\ts t r V k\tt @r");
result.add("inst-\truc-\ttors", "I n\ts t r V k\tt @r z");
result.add("inst-\truct", "I n\ts t r V k t");
result.add("inst-\tructs", "I n\ts t r V k t s");
result.add("int-\tra", "I n\tt r V");
result.add("int-\tra-\tcom-\tpa-\tny", "I n\tt r V\tk Q m\tp V\tn i:");
result.add("int-\tra-\tday", "I n\tt r V\td eI");
result.add("int-\tra-\tmar-\tgi-\tnal", "I n\tt r V\tm Q@\tdZ V\tn V l");
result.add("int-\tra-\tmu-\tral", "I n\tt r V m\tj U@\tV l");
result.add("int-\tra-\to-\tcu-\tlar", "I n\tt r V\t@U k\tj u:\tl @r");
result.add("int-\tra-\tpar-\tty", "I n\tt r V\tp Q@\tt i:");
result.add("int-\tra-\tu-\tte-\trine", "I n\tt r V\tj u:\tt @r\tV n");
result.add("int-\tra-\tve-\tnous", "I n\tt r V\tv i:\tn V s");
result.add("int-\tra-\tve-\tnous-\tly", "I n\tt r V\tv i:\tn V s\tl i:");
result.add("int-\trac-\tra-\tni-\tal", "I n\tt r V k\tr eI\tn i:\tV l");
result.add("int-\trac-\tta-\tble", "I n\tt r { k\tt V\tb V l");
result.add("int-\tran-\tsi-\tgence", "I n\tt r { n\ts I\tdZ V n s");
result.add("int-\tran-\tsi-\tgent", "I n\tt r { n\ts I\tdZ e n t");
result.add("int-\tras-\ttate", "I n\tt r V s\tt eI t");
result.add("int-\tre-\tpid", "I n\tt r e\tp I d");
result.add("int-\tri-\tca-\tcies", "I n\tt r I\tk V\ts i: z");
result.add("int-\tri-\tca-\tcy", "I n\tt r I\tk V\ts i:");
result.add("int-\tri-\tcate", "I n\tt r I\tk e t");
result.add("int-\tri-\tcate-\tly", "I n\tt r I\tk e t\tl i:");
result.add("int-\tri-\tguing", "I n\tt r i:\tg I N");
result.add("int-\tri-\tguing-\tly", "I n\tt r i:\tg I N\tl i:");
result.add("int-\trigue", "I n\tt r i: g");
result.add("int-\trigued", "I n\tt r i: g d");
result.add("int-\trigues", "I n\tt r i: g z");
result.add("int-\trin-\tsi-\tcal-\tly", "I n\tt r I n\ts I\tk V\tl i:");
result.add("int-\trin-\tsic", "I n\tt r I n\ts I k");
result.add("int-\tro", "I n\tt r @U");
result.add("int-\tro-\tdu-\tces", "I n\tt r V\td u:\ts V z");
result.add("int-\tro-\tdu-\tcing", "I n\tt r V\td u:\ts I N");
result.add("int-\tro-\tduc-\ttion", "I n\tt r V\td V k\tS V n");
result.add("int-\tro-\tduc-\ttions", "I n\tt r V\td V k\tS V n z");
result.add("int-\tro-\tduc-\tto-\try", "I n\tt r V\td V k\tt @r\ti:");
result.add("int-\tro-\tduce", "I n\tt r V\td u: s");
result.add("int-\tro-\tduced", "I n\tt r V\td u: s t");
result.add("int-\tro-\tver-\tted", "I n\tt r @U\tv @r\tt V d");
result.add("int-\tro-\tvert", "I n\tt r @U\tv @r t");
result.add("int-\tron", "I n\tt r V n");
result.add("int-\tros", "I n\tt r @U z");
result.add("int-\tros-\tpec-\ttion", "I n\tt r V s\tp e k\tS V n");
result.add("int-\tros-\tpec-\ttive", "I n\tt r V s\tp e k\tt I v");
result.add("int-\tros-\tpect", "I n\tt r V s\tp e k t");
result.add("int-\tru-\tded", "I n\tt r u:\td V d");
result.add("int-\tru-\tder", "I n\tt r u:\td @r");
result.add("int-\tru-\tders", "I n\tt r u:\td @r z");
result.add("int-\tru-\tding", "I n\tt r u:\td I N");
result.add("int-\tru-\tsion", "I n\tt r u:\tZ V n");
result.add("int-\tru-\tsions", "I n\tt r u:\tZ V n z");
result.add("int-\tru-\tsive", "I n\tt r u:\ts I v");
result.add("int-\tru-\tsive-\tness", "I n\tt r u:\ts I v\tn V s");
result.add("int-\trude", "I n\tt r u: d");
result.add("int-\trudes", "I n\tt r u: d z");
result.add("inte-\tres-\tted", "I n\tt r V s\tt V d");
result.add("inte-\tres-\tting", "I n\tt r V s\tt I N");
result.add("inte-\trest", "I n\tt r V s t");
result.add("inte-\trests", "I n\tt r V s t s");
result.add("ip", "I p");
result.add("iq-\tbal", "I k\tb V l");
result.add("ir-\tby", "@r\tb i:");
result.add("ir-\tkutsk", "@r\tk U t s k");
result.add("ir-\tma", "@r\tm V");
result.add("ir-\tma's", "@r\tm V z");
result.add("ir-\tra-\tdi-\ta-\tted", "I@\teI\td i:\teI\tt I d");
result.add("ir-\tra-\tdi-\ta-\ttion", "I@\teI\td i:\teI\tS V n");
result.add("ir-\tra-\tdi-\tate", "I@\teI\td i:\teI t");
result.add("ir-\tra-\ttio-\tna-\tli-\tty", "I@\t{\tS V\tn {\tl I\tt i:");
result.add("ir-\tra-\ttio-\tnal", "I@\t{\tS V\tn V l");
result.add("ir-\tra-\ttio-\tnal-\tly", "I@\t{\tS V\tn V\tl i:");
result.add("ir-\tre-\tcon-\tci-\tla-\tble", "I@\te\tk V n\ts aI\tl V\tb V l");
result.add("ir-\tre-\tden-\tti-\tsm", "I@\tV\td e n\tt I\tz V m");
result.add("ir-\tre-\tfu-\tta-\tble", "I@\tV f\tj u:\tt V\tb V l");
result.add("ir-\tre-\tgard-\tless", "I@\tV\tg Q d\tl V s");
result.add("ir-\tre-\tgu-\tla-\tri-\tties", "I@\te g\tj V\tl e@\tV\tt i: z");
result.add("ir-\tre-\tgu-\tla-\tri-\tty", "I@\te g\tj V\tl e@\tV\tt i:");
result.add("ir-\tre-\tgu-\tlar", "I@\te g\tj V\tl @r");
result.add("ir-\tre-\tgu-\tlar-\tly", "I@\te g\tj V\tl @r\tl i:");
result.add("ir-\tre-\tgu-\tlars", "I@\te g\tj V\tl @r z");
result.add("ir-\tre-\tle-\tvan-\tcy", "I@\te\tl V\tv V n\ts i:");
result.add("ir-\tre-\tle-\tvance", "I@\te\tl V\tv V n s");
result.add("ir-\tre-\tle-\tvant", "I@\te\tl V\tv V n t");
result.add("ir-\tre-\tme-\tdi-\ta-\tble", "I@\tV\tm i:\td i:\tV\tb V l");
result.add("ir-\tre-\tpa-\tra-\tble", "I@\te\tp @r\tV\tb V l");
result.add("ir-\tre-\tpa-\trab-\tly", "I@\te\tp @r\tV b\tl i:");
result.add("ir-\tre-\tpla-\tcea-\tble", "I@\tV p\tl eI\ts V\tb V l");
result.add("ir-\tre-\tpres-\tsi-\tble", "I@\tV p\tr e\ts V\tb V l");
result.add("ir-\tre-\tsis-\tti-\tble", "I@\tV\tz I s\tt V\tb V l");
result.add("ir-\tre-\tsis-\ttib-\tly", "I@\tV\tz I s\tt V b\tl i:");
result.add("ir-\tre-\tspec-\ttive", "I@\tV s\tp e k\tt I v");
result.add("ir-\tre-\tve-\trence", "I@\te\tv @r\tV n s");
result.add("ir-\tre-\tve-\trent", "I@\te\tv @r\tV n t");
result.add("ir-\tre-\tver-\tsi-\tble", "I@\tI\tv @r\ts I\tb V l");
result.add("ir-\tre-\tver-\tsib-\tly", "I@\tI\tv @r\ts I b\tl i:");
result.add("ir-\tre-\tvo-\tca-\tble", "I@\te\tv V\tk V\tb V l");
result.add("ir-\tre-\tvo-\tcab-\tly", "I@\te\tv V\tk V b\tl i:");
result.add("ir-\tres-\tpon-\tsi-\tbi-\tli-\tty", "I@\tV s\tp Q n\ts V\tb I\tl V\tt i:");
result.add("ir-\tres-\tpon-\tsi-\tble", "I@\tV s\tp Q n\ts V\tb V l");
result.add("ir-\tres-\tpon-\tsib-\tly", "I@\tV s\tp Q n\ts V b\tl i:");
result.add("ir-\tret-\trie-\tvab-\tly", "I@\tV t\tr i:\tv V b\tl i:");
result.add("ir-\tri-\tga-\tted", "I@\tI\tg eI\tt I d");
result.add("ir-\tri-\tga-\ttion", "I@\tI\tg eI\tS V n");
result.add("ir-\tri-\tga-\ttor", "I@\tI\tg eI\tt @r");
result.add("ir-\tri-\tga-\ttors", "I@\tI\tg eI\tt @r z");
result.add("ir-\tri-\tgate", "I@\tI\tg eI t");
result.add("ir-\tri-\tta-\tbi-\tli-\tty", "I@\tI\tt V\tb I\tl I\tt i:");
result.add("ir-\tri-\tta-\tble", "I@\tI\tt V\tb V l");
result.add("ir-\tri-\tta-\tted", "I@\tI\tt eI\tt I d");
result.add("ir-\tri-\tta-\tting", "I@\tI\tt eI\tt I N");
result.add("ir-\tri-\tta-\ttion", "I@\tI\tt eI\tS V n");
result.add("ir-\tri-\tta-\ttions", "I@\tI\tt eI\tS V n z");
result.add("ir-\tri-\ttant", "I@\tI\tt V n t");
result.add("ir-\tri-\ttants", "I@\tI\tt V n t s");
result.add("ir-\tri-\ttate", "I@\tI\tt eI t");
result.add("ir-\tri-\ttates", "I@\tI\tt eI t s");
result.add("ir-\tvin", "@r\tv I n");
result.add("ir-\tvine", "@r\tv aI n");
result.add("ir-\tving", "@r\tv I N");
result.add("ir-\tving's", "@r\tv I N z");
result.add("ir-\twin", "@r\tw I n");
result.add("ire", "aI r");
result.add("ire-\tland's", "aI r\tl V n d z");
result.add("irk", "@r k");
result.add("irk-\tsome", "@r k\ts V m");
result.add("irked", "@r k t");
result.add("irks", "@r k s");
result.add("iron-\tton", "aI r\tn t V n");
result.add("irv", "@r v");
result.add("is", "I z");
result.add("i's", "aI z");
result.add("is-\tca-\tri-\tot", "I s\tk e@\ti:\tV t");
result.add("is-\tche-\tmi-\ta", "I s\tk e\tm i:\tV");
result.add("is-\tla-\tma-\tbad", "I s\tl {\tm V\tb { d");
result.add("is-\tla-\tma-\tbad's", "I s\tl {\tm V\tb { d z");
result.add("is-\tla-\tmi-\tza-\ttion", "I z\tl Q\tm I\tz eI\tS V n");
result.add("is-\tla-\tmic", "I z\tl Q\tm I k");
result.add("is-\tla-\tmist", "I s\tl V\tm V s t");
result.add("is-\tla-\tmists", "I s\tl V\tm V s t s");
result.add("is-\tlam", "I s\tl Q m");
result.add("is-\tlam's", "I s\tl Q m z");
result.add("is-\tlan-\tder", "aI\tl V n\td @r");
result.add("is-\tlan-\tders", "aI\tl V n\td @r z");
result.add("is-\tlan-\tdi-\ta", "aI\tl { n\td i:\tV");
result.add("is-\tland", "aI\tl V n d");
result.add("is-\tlands", "aI\tl V n d z");
result.add("is-\tland's", "aI\tl V n d z");
result.add("is-\tlas", "aI\tl V z");
result.add("is-\tleen", "aI\tl i: n");
result.add("is-\tlets", "aI\tl V t s");
result.add("is-\tlip", "aI s\tl I p");
result.add("is-\tmael", "I s\tm eI l");
result.add("is-\tmail", "I s\tm eI l");
result.add("is-\tra-\tel", "I z\tr i:\tV l");
result.add("is-\trae-\tli", "I z\tr eI\tl i:");
result.add("is-\trae-\tlis", "I z\tr eI\tl i: z");
result.add("is-\trae-\tli's", "I z\tr eI\tl i: z");
result.add("is-\trae-\tlite", "I z\tr V\tl aI t");
result.add("is-\trae-\tlites", "I z\tr V\tl aI t s");
result.add("is-\trael's", "I z\tr eI l z");
result.add("is-\tsac", "I\ts V k");
result.add("is-\tsie", "I\ts i:");
result.add("is-\tsu-\ta-\tble", "I\tS u:\tV\tb V l");
result.add("is-\tsu-\tan-\tces", "I\tS u:\tV n\ts V z");
result.add("is-\tsu-\tance", "I\tS u:\tV n s");
result.add("is-\tsu-\ter", "I\tS u:\t@r");
result.add("is-\tsu-\ters", "I\tS u:\t@r z");
result.add("is-\tsu-\ter's", "I\tS u:\t@r z");
result.add("is-\tsu-\ting", "I\tS u:\tI N");
result.add("is-\tsue", "I\tS u:");
result.add("is-\tsue-\tless", "I\tS u:\tl V s");
result.add("is-\tsued", "I\tS u: d");
result.add("is-\tsues", "I\tS u: z");
result.add("is-\tsue's", "I\tS u: z");
result.add("is-\tsy", "I\ts i:");
result.add("is-\ttan-\tbul", "I s\tt Q n\tb u: l");
result.add("isch", "I S");
result.add("ise", "aI z");
result.add("ish", "I S");
result.add("ish-\tmael", "I S\tm i: l");
result.add("ish-\ttar", "I S\tt Q@");
result.add("isle", "aI l");
result.add("isles", "aI l z");
result.add("isth-\tmus", "I s\tm V s");
result.add("it", "I t");
result.add("it-\tches", "I\ttS V z");
result.add("it-\tching", "I\ttS I N");
result.add("it-\tchy", "I\ttS i:");
result.add("it-\tself", "V t\ts e l f");
result.add("it-\tsy", "I t\ts i:");
result.add("it-\tzhak", "I t\ts Q k");
result.add("itch", "I tS");
result.add("its", "I t s");
result.add("it's", "I t s");
result.add("i've", "aI v");
result.add("ives", "aI v z");
result.add("iz-\tves-\tti-\ta", "I z\tv e s\tt i:\tV");
result.add("iz-\tzard", "I\tz @r d");
result.add("iz-\tzy", "I\tz i:");
result.add("iz-\tzy's", "I\tz i: z");
result.add("j", "dZ eI");
result.add("j-\tr", "dZ u: n\tj @r");
result.add("j.", "dZ eI");
result.add("ja", "j Q");
result.add("ja-\tcin-\tda", "dZ V\ts I n\td V");
result.add("ja-\tcin-\tta", "dZ V\ts I n\tt V");
result.add("ja-\tcin-\ttha", "dZ V\ts I n\tT V");
result.add("ja-\tcin-\tto", "dZ V\ts I n\tt @U");
result.add("ja-\tcinth", "dZ {\ts I n T");
result.add("ja-\tcinthe", "dZ {\ts I n T");
result.add("ja-\tco", "j Q\tk @U");
result.add("ja-\tco-\tba", "j Q\tk @U\tb V");
result.add("ja-\tco-\tbe-\tan", "dZ {\tk V\tb i:\tV n");
result.add("ja-\tco-\tbi", "j Q\tk @U\tb i:");
result.add("ja-\tco-\tbi-\tna", "j V\tk V\tb aI\tn V");
result.add("ja-\tco-\tbin", "dZ {\tk V\tb V n");
result.add("ja-\tco-\tbine", "dZ {\tk V\tb aI n");
result.add("ja-\tco-\tbite", "dZ {\tk V\tb aI t");
result.add("ja-\tco-\tbites", "dZ {\tk V\tb aI t s");
result.add("ja-\tco-\tbo", "j Q\tk @U\tb @U");
result.add("ja-\tco-\tbus", "dZ V\tk @U\tb V s");
result.add("ja-\tco-\tby", "dZ V\tk @U\tb i:");
result.add("ja-\tcob", "dZ eI\tk V b");
result.add("ja-\tcob-\tsen", "dZ eI\tk V b\ts V n");
result.add("ja-\tcob-\tson", "dZ eI\tk V b\ts V n");
result.add("ja-\tcob-\tson's", "dZ eI\tk V b\ts V n z");
result.add("ja-\tcobs", "dZ eI\tk V b z");
result.add("ja-\tcob's", "dZ eI\tk V b z");
result.add("ja-\tcuz-\tzi", "dZ V k\tj u:\tz i:");
result.add("ja-\tded", "dZ eI\td V d");
result.add("ja-\tdeite", "dZ eI\td aI t");
result.add("ja-\tger", "dZ eI\tg @r");
result.add("ja-\tgiel-\tlo", "dZ Q\tdZ e\tl @U");
result.add("ja-\tgo", "j Q\tg @U");
result.add("ja-\tguar", "dZ { g\tw Q@");
result.add("ja-\tguars", "dZ { g\tw Q@ z");
result.add("ja-\tguar's", "dZ { g\tw Q@ z");
result.add("ja-\tkar-\tta", "dZ V\tk Q@\tt V");
result.add("ja-\tkar-\tta's", "dZ V\tk Q@\tt V z");
result.add("ja-\tkie", "dZ {\tk i:");
result.add("ja-\tkob", "dZ {\tk V b");
result.add("ja-\tla-\tla-\tbad", "dZ V\tl {\tl V\tb { d");
result.add("ja-\tla-\tpe-\tno", "h {\tl V\tp i: n\tj @U");
result.add("ja-\tlo-\tpy", "dZ V\tl Q\tp i:");
result.add("ja-\tma", "dZ {\tm V");
result.add("ja-\tmai-\tca", "dZ V\tm eI\tk V");
result.add("ja-\tmai-\tcan", "dZ V\tm eI\tk V n");
result.add("ja-\tmai-\tcans", "dZ V\tm eI\tk V n z");
result.add("ja-\tmai-\tca's", "dZ V\tm eI\tk V z");
result.add("ja-\tmal", "dZ V\tm Q l");
result.add("ja-\tmal's", "dZ V\tm Q l z");
result.add("ja-\tmar", "j Q\tm Q@");
result.add("ja-\tmi", "dZ eI\tm i:");
result.add("ja-\tmi-\tla", "dZ V\tm I\tl V");
result.add("ja-\tmi-\tson", "dZ eI\tm V\ts V n");
result.add("ja-\tmie", "dZ eI\tm i:");
result.add("ja-\tmie-\tson", "dZ eI\tm I\ts V n");
result.add("ja-\tmie's", "dZ eI\tm i: z");
result.add("ja-\tna", "dZ {\tn V");
result.add("ja-\tna-\tcek", "j {\tn V\ttS e k");
result.add("ja-\tna-\tta", "dZ V\tn Q\tt V");
result.add("ja-\tnei-\tro", "dZ V\tn e@\t@U");
result.add("ja-\tnek", "j {\tn e k");
result.add("ja-\tnel", "dZ {\tn V l");
result.add("ja-\tnel-\tla", "dZ V\tn e\tl V");
result.add("ja-\tnelle", "Z V\tn e l");
result.add("ja-\tnet", "dZ {\tn e t");
result.add("ja-\tnet's", "dZ {\tn e t s");
result.add("ja-\tnette", "dZ V\tn e t");
result.add("ja-\tney", "dZ eI\tn i:");
result.add("ja-\tni-\tna", "dZ V\tn i:\tn V");
result.add("ja-\tni-\tto-\tri-\tal", "dZ {\tn I\tt O@\ti:\tV l");
result.add("ja-\tni-\ttor", "dZ {\tn I\tt @r");
result.add("ja-\tni-\ttors", "dZ {\tn I\tt @r z");
result.add("ja-\tnic-\tki", "dZ V\tn I\tk i:");
result.add("ja-\tnice", "dZ {\tn I s");
result.add("ja-\tnie", "dZ eI\tn i:");
result.add("ja-\tnik", "j {\tn I k");
result.add("ja-\tnine", "dZ V\tn i: n");
result.add("ja-\tnis", "dZ {\tn I s");
result.add("ja-\tno-\twitz", "j {\tn V\tw I t s");
result.add("ja-\tnos", "dZ {\tn @U s");
result.add("ja-\tnu-\ta-\try", "dZ { n\tj u:\te@\ti:");
result.add("ja-\tnu-\ta-\try's", "dZ { n\tj u:\te@\ti: z");
result.add("ja-\tnus", "dZ eI\tn V s");
result.add("ja-\tpa-\tnese", "dZ {\tp V\tn i: z");
result.add("ja-\tpan", "dZ V\tp { n");
result.add("ja-\tpans", "dZ V\tp { n z");
result.add("ja-\tpan's", "dZ V\tp { n z");
result.add("ja-\tpo-\tni-\tca", "dZ V\tp Q\tn V\tk V");
result.add("ja-\tquith", "dZ { k\tw I T");
result.add("ja-\tra", "dZ Q@\tV");
result.add("ja-\tred", "dZ e@\tV d");
result.add("ja-\tru-\tzel-\tski", "dZ e@\tV\tz e l\ts k i:");
result.add("ja-\tson", "dZ eI\ts V n");
result.add("ja-\tson's", "dZ eI\ts V n z");
result.add("ja-\tva", "dZ Q\tv V");
result.add("ja-\tva-\tnese", "dZ Q\tv V\tn i: z");
result.add("ja-\tvan", "dZ V\tv Q n");
result.add("ja-\tve-\tlin", "dZ {\tv V\tl I n");
result.add("ja-\tvi-\ter", "h Q\tv i:\te@");
result.add("jaan", "j Q n");
result.add("jab", "dZ { b");
result.add("jab-\tbing", "dZ {\tb I N");
result.add("jab-\tlon", "dZ { b\tl V n");
result.add("jab-\tlon-\tsky", "j V b\tl Q n\ts k i:");
result.add("jabbed", "dZ { b d");
result.add("jabs", "dZ { b z");
result.add("jac", "dZ { k");
result.add("jac-\tkal", "dZ {\tk V l");
result.add("jac-\tkass", "dZ {\tk { s");
result.add("jac-\tke-\tlyn", "dZ {\tk V\tl I n");
result.add("jac-\tke-\tted", "dZ {\tk V\tt V d");
result.add("jac-\tket", "dZ {\tk V t");
result.add("jac-\tkets", "dZ {\tk V t s");
result.add("jac-\tki", "dZ {\tk i:");
result.add("jac-\tkie", "dZ {\tk i:");
result.add("jac-\tkie's", "dZ {\tk i: z");
result.add("jac-\tking", "dZ {\tk I N");
result.add("jac-\tki's", "dZ {\tk i: z");
result.add("jac-\tko", "dZ {\tk @U");
result.add("jac-\tky", "dZ {\tk i:");
result.add("jac-\tky's", "dZ {\tk i: z");
result.add("jac-\tlyn", "dZ { k\tl I n");
result.add("jac-\tque-\tline", "dZ { k\tw V\tl I n");
result.add("jac-\tque-\tlyn", "dZ { k\tw V\tl I n");
result.add("jac-\tquet", "j Q\tk eI t");
result.add("jac-\tquet-\tta", "dZ Q\tk e\tt V");
result.add("jac-\tquie", "dZ { k\tw i:");
result.add("jack", "dZ { k");
result.add("jack-\tham-\tmer", "dZ { k\th {\tm @r");
result.add("jack-\tham-\tmers", "dZ { k\th {\tm @r z");
result.add("jack-\tlin", "dZ { k\tl I n");
result.add("jack-\tman", "dZ { k\tm V n");
result.add("jack-\tpot", "dZ { k\tp Q t");
result.add("jack-\tpots", "dZ { k\tp Q t s");
result.add("jack-\trab-\tbit", "dZ { k\tr {\tb I t");
result.add("jack-\tso-\tni-\tan", "dZ { k\ts @U\tn i:\tV n");
result.add("jack-\tso-\tni-\tans", "dZ { k\ts @U\tn i:\tV n z");
result.add("jack-\tson", "dZ { k\ts V n");
result.add("jack-\tson-\tville", "dZ { k\ts V n\tv I l");
result.add("jack-\tson-\tville's", "dZ { k\ts V n\tv I l z");
result.add("jack-\tsons", "dZ { k\ts V n z");
result.add("jack-\tson's", "dZ { k\ts V n z");
result.add("jacked", "dZ { k t");
result.add("jacks", "dZ { k s");
result.add("jack's", "dZ { k s");
result.add("jacque", "Z eI k");
result.add("jacques", "Z Q k");
result.add("jad-\twin", "dZ { d\tw I n");
result.add("jade", "dZ eI d");
result.add("jades", "dZ eI d z");
result.add("jae", "dZ eI");
result.add("jae-\tger", "j e\tg @r");
result.add("jae-\tgers", "j e\tg @r z");
result.add("jae-\tnicke", "j e\tn I k");
result.add("jae's", "dZ eI z");
result.add("jaf-\tfa", "dZ {\tf V");
result.add("jaf-\tfe", "dZ {\tf i:");
result.add("jaff-\tna", "dZ { f\tn V");
result.add("jaff-\trey", "dZ { f\tr i:");
result.add("jag-\tger", "dZ {\tg @r");
result.add("jag-\tgers", "dZ {\tg @r z");
result.add("jag-\tger's", "dZ {\tg @r z");
result.add("jagged", "dZ { g d");
result.add("jags", "dZ { g z");
result.add("jahn", "dZ { n");
result.add("jai", "dZ aI");
result.add("jai-\tler", "dZ eI\tl @r");
result.add("jai-\tlers", "dZ eI\tl @r z");
result.add("jai-\tling", "dZ eI\tl I N");
result.add("jai-\tme", "h aI\tm i:");
result.add("jai-\tme's", "h aI\tm i: z");
result.add("jai-\tmie", "dZ eI\tm i:");
result.add("jai-\tni-\tsm", "dZ eI\tn I\tz V m");
result.add("jail", "dZ eI l");
result.add("jail-\thouse", "dZ eI l\th aU s");
result.add("jailed", "dZ eI l d");
result.add("jails", "dZ eI l z");
result.add("jail's", "dZ eI l z");
result.add("jain", "dZ aI n");
result.add("jake", "dZ eI k");
result.add("jakes", "dZ eI k s");
result.add("jake's", "dZ eI k s");
result.add("jal-\tbert", "dZ { l\tb @r t");
result.add("jam", "dZ { m");
result.add("jam-\tmer", "dZ {\tm @r");
result.add("jam-\tmers", "dZ {\tm @r z");
result.add("jam-\tming", "dZ {\tm I N");
result.add("jam-\tmu", "dZ V\tm u:");
result.add("jam-\tmu's", "dZ V\tm u: z");
result.add("jam-\tshed-\tpur", "dZ { m\tS e d\tp @r");
result.add("jamb", "dZ { m");
result.add("jame-\tson", "dZ eI m\ts V n");
result.add("jame-\ts's", "dZ eI m\tz V z");
result.add("james", "dZ eI m z");
result.add("james-\ttown", "dZ eI m\tz t aU n");
result.add("jammed", "dZ { m d");
result.add("jams", "dZ { m z");
result.add("jam's", "dZ { m z");
result.add("jan", "dZ { n");
result.add("jan-\tgle", "dZ { N\tg V l");
result.add("jan-\tgled", "dZ { N\tg V l d");
result.add("jan-\tka", "dZ { N\tk V");
result.add("jan-\tna", "dZ {\tn V");
result.add("jan-\tnock", "dZ {\tn V k");
result.add("jan-\tse-\tni-\tsm", "dZ { n\ts V\tn I\tz V m");
result.add("jan-\tse-\tnist", "dZ { n\ts V\tn V s t");
result.add("jan-\tse-\tnists", "dZ { n\ts V\tn V s t s");
result.add("jan-\tsen", "dZ { n\ts V n");
result.add("jan-\tson", "dZ { n\ts V n");
result.add("jan-\tthi-\tna", "j Q n\tT i:\tn V");
result.add("jan.", "dZ { n");
result.add("jane", "dZ eI n");
result.add("janes", "dZ eI n z");
result.add("jane's", "dZ eI n z");
result.add("janes-\tville", "dZ eI n\tz v I l");
result.add("jank", "dZ { N k");
result.add("jann", "dZ { n");
result.add("jan's", "dZ { n z");
result.add("jans-\tky", "j { n\ts k i:");
result.add("jans-\tsen", "dZ { n\ts V n");
result.add("jans-\tson", "dZ { n\ts V n");
result.add("jap", "dZ { p");
result.add("japs", "dZ { p s");
result.add("jaques", "dZ { k s");
result.add("jar", "dZ Q@");
result.add("jar-\tdin", "dZ Q@\td I n");
result.add("jar-\tgon", "dZ Q@\tg V n");
result.add("jar-\tman", "dZ Q@\tm V n");
result.add("jar-\tna-\tgin", "dZ Q@\tn V\tdZ I n");
result.add("jar-\tratt", "dZ {\tr V t");
result.add("jar-\treau", "Z @r\t@U");
result.add("jar-\trell", "j Q@\teI l");
result.add("jar-\trett", "dZ e@\tV t");
result.add("jar-\tring", "dZ Q@\tI N");
result.add("jar-\tvi", "dZ Q@\tv i:");
result.add("jar-\tvi-\ts's", "dZ Q@\tv I\ts V z");
result.add("jar-\tvie", "dZ Q@\tv i:");
result.add("jar-\tvik", "dZ Q@\tv I k");
result.add("jar-\tvis", "dZ Q@\tv I s");
result.add("jares", "Z e@ z");
result.add("jarred", "dZ Q@ d");
result.add("jars", "dZ Q@ z");
result.add("jas", "dZ eI m z");
result.add("jas-\tmi-\tna", "j V s\tm aI\tn V");
result.add("jas-\tmin", "dZ { z\tm I n");
result.add("jas-\tmine", "dZ { z\tm I n");
result.add("jas-\tper", "dZ { s\tp @r");
result.add("jas-\tpers", "dZ { s\tp @r z");
result.add("jas-\tper's", "dZ { s\tp @r z");
result.add("jass", "dZ { s");
result.add("jauch", "dZ O: tS");
result.add("jaun-\tdice", "dZ O: n\td I s");
result.add("jaun-\tdiced", "dZ O: n\td I s t");
result.add("jaun-\tti-\tly", "dZ O: n\tt I\tl i:");
result.add("jaun-\tty", "dZ O: n\tt i:");
result.add("jaunt", "dZ O: n t");
result.add("jaunts", "dZ O: n t s");
result.add("jaw", "dZ O:");
result.add("jaw-\tbo-\tning", "dZ O:\tb @U\tn I N");
result.add("jaw-\tbone", "dZ O:\tb @U n");
result.add("jawed", "dZ O: d");
result.add("jay", "dZ eI");
result.add("je-\tho-\tvah", "dZ V\th @U\tv V");
result.add("je-\tho-\tvah's", "dZ V\th @U\tv V z");
result.add("je-\tkyll", "dZ e\tk V l");
result.add("je-\tmi-\tma", "dZ e\tm i:\tm V");
result.add("je-\tmi-\tson", "dZ e\tm I\ts V n");
result.add("je-\tmie", "dZ e\tm i:");
result.add("je-\tna", "dZ i:\tn V");
result.add("je-\tni-\tson", "dZ e\tn I\ts V n");
result.add("je-\tnin", "dZ e\tn I n");
result.add("je-\trald", "dZ e@\tV l d");
result.add("je-\tre", "dZ e@\ti:");
result.add("je-\tre-\tmi-\tah", "dZ e@\tV\tm aI\tV");
result.add("je-\tre-\tmy", "dZ e@\tV\tm i:");
result.add("je-\treld", "dZ e@\tV l d");
result.add("je-\trez", "j e@\te z");
result.add("je-\tri", "dZ e@\ti:");
result.add("je-\tri-\tcho", "dZ e@\tI\tk @U");
result.add("je-\tro-\tbo-\tam", "dZ e@\tV\tb @U\tV m");
result.add("je-\trold", "dZ e@\t@U l d");
result.add("je-\trome", "dZ @r\t@U m");
result.add("je-\tru-\tsa-\tlem", "dZ @r\tu:\ts V\tl V m");
result.add("je-\tru-\tsa-\tlem's", "dZ @r\tu:\ts V\tl V m z");
result.add("je-\tsu-\tit", "dZ e\tZ u:\tI t");
result.add("je-\tsu-\tits", "dZ e\tZ u:\tI t s");
result.add("je-\tsup", "dZ e\ts V p");
result.add("je-\tsus", "dZ i:\tz V s");
result.add("je-\twe-\tler", "dZ u:\tV\tl @r");
result.add("je-\twe-\tlers", "dZ u:\tV\tl @r z");
result.add("je-\twel", "dZ u:\tV l");
result.add("je-\twel-\tlers", "dZ u:\tV\tl @r z");
result.add("je-\twel-\try", "dZ u:\tV l\tr i:");
result.add("je-\twell", "dZ u:\te l");
result.add("je-\twels", "dZ u:\tV l z");
result.add("je-\twess", "dZ u:\tV s");
result.add("je-\twett", "dZ u:\te t");
result.add("je-\twish", "dZ u:\tI S");
result.add("je-\twish-\tness", "dZ u:\tI S\tn V s");
result.add("jea-\tlou-\tsy", "dZ e\tl V\ts i:");
result.add("jea-\tna", "dZ i:\tn V");
result.add("jea-\tnette", "dZ V\tn e t");
result.add("jea-\tnie", "dZ i:\tn i:");
result.add("jea-\tnine", "dZ V\tn i: n");
result.add("jean", "dZ i: n");
result.add("jean-\tnette", "dZ V\tn e t");
result.add("jean-\tnie", "dZ i:\tn i:");
result.add("jeane", "dZ i: n");
result.add("jeane-\trette", "dZ i: n\tr e t");
result.add("jeanne", "dZ i: n");
result.add("jeans", "dZ i: n z");
result.add("jean's", "dZ i: n z");
result.add("jeb", "dZ e b");
result.add("jed", "dZ e d");
result.add("jed-\tlic-\tka", "j V d\tl I s\tk V");
result.add("jee", "dZ i:");
result.add("jee-\tring", "dZ i:\tr I N");
result.add("jeep", "dZ i: p");
result.add("jeep-\tney", "dZ i: p\tn i:");
result.add("jeeps", "dZ i: p s");
result.add("jeep's", "dZ i: p s");
result.add("jeer", "dZ I@");
result.add("jeered", "dZ I@ d");
result.add("jeers", "dZ i: r z");
result.add("jeez", "dZ i: z");
result.add("jef-\tfe-\trey", "dZ e\tf @r\ti:");
result.add("jef-\tfe-\try", "dZ e\tf @r\ti:");
result.add("jef-\tfer-\tso-\tni-\tan", "dZ e\tf @r\ts @U\tn i:\tV n");
result.add("jef-\tfer-\tso-\tni-\tans", "dZ e\tf @r\ts @U\tn i:\tV n z");
result.add("jef-\tfer-\tson", "dZ e\tf @r\ts V n");
result.add("jef-\tfer-\tson's", "dZ e\tf @r\ts V n z");
result.add("jef-\tfers", "dZ e\tf @r z");
result.add("jef-\tfy", "dZ e\tf i:");
result.add("jeff", "dZ e f");
result.add("jeff-\trey", "dZ e f\tr i:");
result.add("jeff-\treys", "dZ e f\tr i: z");
result.add("jeff-\trey's", "dZ e f\tr i: z");
result.add("jeff-\tries", "dZ e f\tr i: z");
result.add("jeff-\try", "dZ e f\tr i:");
result.add("jeffs", "dZ e f s");
result.add("jeff's", "dZ e f s");
result.add("jel-\tlied", "dZ e\tl i: d");
result.add("jel-\tlies", "dZ e\tl i: z");
result.add("jel-\tlo", "dZ e\tl @U");
result.add("jel-\tlo's", "dZ e\tl @U z");
result.add("jel-\tly", "dZ e\tl i:");
result.add("jel-\tly-\tfish", "dZ e\tl i:\tf I S");
result.add("jel-\tly's", "dZ e\tl i: z");
result.add("jelks", "dZ e l k s");
result.add("jell", "dZ e l");
result.add("jell-\to", "dZ e\tl @U");
result.add("jem", "dZ e m");
result.add("jem-\tmie", "dZ e\tm i:");
result.add("jem's", "dZ e m z");
result.add("jen", "dZ e n");
result.add("jen-\tkin", "dZ e N\tk I n");
result.add("jen-\tkin-\tson", "dZ e N\tk I n\ts V n");
result.add("jen-\tkins", "dZ e N\tk I n z");
result.add("jen-\tner", "dZ e\tn @r");
result.add("jen-\tness", "dZ e\tn V s");
result.add("jen-\tnette", "Z V\tn e t");
result.add("jen-\tni", "dZ e\tn i:");
result.add("jen-\tni-\tfer", "dZ e\tn I\tf @r");
result.add("jen-\tni-\tfer's", "dZ e\tn I\tf @r z");
result.add("jen-\tnie", "dZ e\tn i:");
result.add("jen-\tnings", "dZ e\tn I N z");
result.add("jen-\tny", "dZ e\tn i:");
result.add("jen-\tny's", "dZ e\tn i: z");
result.add("jen-\tsen", "dZ e n\ts V n");
result.add("jen-\tson", "dZ e n\ts V n");
result.add("jenks", "dZ e N k s");
result.add("jenn", "dZ e n");
result.add("jenne", "dZ e n");
result.add("jenn's", "dZ e n z");
result.add("jens", "dZ e n z");
result.add("jeo-\tpar-\tdi-\tzes", "dZ e\tp @r\td aI\tz V z");
result.add("jeo-\tpar-\tdi-\tzing", "dZ e\tp @r\td aI\tz I N");
result.add("jeo-\tpar-\tdize", "dZ e\tp @r\td aI z");
result.add("jeo-\tpar-\tdized", "dZ e\tp @r\td aI z d");
result.add("jeo-\tpar-\tdy", "dZ e\tp @r\td i:");
result.add("jep-\tson", "dZ e p\ts V n");
result.add("jep-\tson's", "dZ e p\ts V n z");
result.add("jer-\tbo-\tas", "dZ @r\tb @U\tV z");
result.add("jer-\tking", "dZ @r\tk I N");
result.add("jer-\tkins", "dZ @r\tk I n z");
result.add("jer-\tky", "dZ @r\tk i:");
result.add("jer-\tmaine", "dZ @r\tm eI n");
result.add("jer-\tman", "dZ @r\tm V n");
result.add("jer-\tmyn", "dZ @r\tm I n");
result.add("jer-\tri", "dZ e@\ti:");
result.add("jer-\trie", "dZ e@\ti:");
result.add("jer-\tro-\tme", "j e@\t@U\tm eI");
result.add("jer-\trold", "dZ e@\tV l d");
result.add("jer-\try", "dZ e@\ti:");
result.add("jer-\try's", "dZ e@\ti: z");
result.add("jer-\tsey", "dZ @r\tz i:");
result.add("jer-\tseys", "dZ @r\tz i: z");
result.add("jer-\tsey's", "dZ @r\tz i: z");
result.add("jer-\tvis", "dZ @r\tv I s");
result.add("jerk", "dZ @r k");
result.add("jerked", "dZ @r k t");
result.add("jerks", "dZ @r k s");
result.add("jes-\tper-\tsen", "dZ e s\tp @r\ts V n");
result.add("jes-\tsa-\tmine", "dZ e\ts V\tm I n");
result.add("jes-\tsa-\tmyn", "dZ e\ts V\tm I n");
result.add("jes-\tse", "dZ e\ts i:");
result.add("jes-\tsee", "dZ e\ts i:");
result.add("jes-\tsen", "dZ e\ts V n");
result.add("jes-\tse's", "dZ e\ts i: z");
result.add("jes-\tsi-\tca", "dZ e\ts I\tk V");
result.add("jes-\tsi-\tca's", "dZ e\ts I\tk V z");
result.add("jes-\tsie", "dZ e\ts i:");
result.add("jes-\tsup", "dZ e\ts V p");
result.add("jes-\tsy", "dZ e\ts i:");
result.add("jes-\tter", "dZ e s\tt @r");
result.add("jess", "dZ e s");
result.add("jest", "dZ e s t");
result.add("jests", "dZ e s t s");
result.add("jet", "dZ e t");
result.add("jet-\tli-\tner", "dZ e t\tl aI\tn @r");
result.add("jet-\tli-\tners", "dZ e t\tl aI\tn @r z");
result.add("jet-\tli-\tner's", "dZ e t\tl aI\tn @r z");
result.add("jet-\tson", "dZ e t\ts V n");
result.add("jet-\tsons", "dZ e t\ts V n z");
result.add("jet-\tted", "dZ e\tt V d");
result.add("jet-\tter", "dZ e\tt @r");
result.add("jet-\tti-\tso-\tning", "dZ e\tt I\ts V\tn I N");
result.add("jet-\tti-\tson", "dZ e\tt I\ts V n");
result.add("jet-\tti-\tsoned", "dZ e\tt I\ts V n d");
result.add("jet-\tting", "dZ e\tt I N");
result.add("jet-\tton", "dZ e\tt V n");
result.add("jet-\tty", "dZ e\tt i:");
result.add("jeth-\tro", "dZ e T\tr @U");
result.add("jets", "dZ e t s");
result.add("jet's", "dZ e t s");
result.add("jets-\ttream", "dZ e t\ts t r i: m");
result.add("jets-\ttreams", "dZ e t\ts t r i: m z");
result.add("jew", "dZ u:");
result.add("jew-\tfi-\tshes", "dZ u:\tf I\tS V z");
result.add("jew-\tfish", "dZ u:\tf I S");
result.add("jew-\try", "dZ u:\tr i:");
result.add("jews", "dZ u: z");
result.add("jews'", "dZ u: z");
result.add("jfet", "dZ f e t");
result.add("ji", "dZ i:");
result.add("ji-\thad", "dZ i:\th { d");
result.add("ji-\tma", "dZ i:\tm V");
result.add("ji-\tme-\tnez", "h I\tm e\tn e z");
result.add("ji-\tving", "dZ aI\tv I N");
result.add("jib", "dZ I b");
result.add("jibe", "dZ aI b");
result.add("jibes", "dZ aI b z");
result.add("jif-\tfy", "dZ I\tf i:");
result.add("jig", "dZ I g");
result.add("jig-\tg-\tling", "dZ I\tg V\tl I N");
result.add("jig-\tgle", "dZ I\tg V l");
result.add("jig-\tsaw", "dZ I g\ts O:");
result.add("jigs", "dZ I g z");
result.add("jil-\tli-\tan", "dZ I\tl i:\tV n");
result.add("jil-\tlion", "dZ I l\tj V n");
result.add("jil-\tlions", "dZ I l\tj V n z");
result.add("jil-\tted", "dZ I l\tt V d");
result.add("jill", "dZ I l");
result.add("jilt", "dZ I l t");
result.add("jim", "dZ I m");
result.add("jim-\tmie", "dZ I\tm i:");
result.add("jim-\tmied", "dZ I\tm i: d");
result.add("jim-\tmy", "dZ I\tm i:");
result.add("jim-\tmy's", "dZ I\tm i: z");
result.add("jim's", "dZ I m z");
result.add("jin", "dZ I n");
result.add("jin-\tgle", "dZ I N\tg V l");
result.add("jin-\tgles", "dZ I N\tg V l z");
result.add("jin-\tgo-\ti-\tsm", "dZ I N\tg @U\tI\tz V m");
result.add("jin-\tgo-\tis-\ttic", "dZ I N\tg @U\tI s\tt I k");
result.add("jing", "dZ I N");
result.add("jinks", "dZ I N k s");
result.add("jinx", "dZ I N k s");
result.add("jir-\tga", "dZ @r\tg V");
result.add("jit-\tney", "dZ I t\tn i:");
result.add("jit-\tte-\try", "dZ I\tt @r\ti:");
result.add("jit-\tter-\tbug", "dZ I\tt @r\tb V g");
result.add("jit-\tter-\tbug-\tging", "dZ I\tt @r\tb V\tg I N");
result.add("jit-\tters", "dZ I\tt @r z");
result.add("jive", "dZ aI v");
result.add("jo", "dZ @U");
result.add("jo-\ta-\tchim", "j @U\tQ\tk I m");
result.add("jo-\ta-\tchim's", "j @U\tQ\tk I m z");
result.add("jo-\tan-\tna", "dZ @U\t{\tn V");
result.add("jo-\tann", "dZ @U\t{ n");
result.add("jo-\tanne", "dZ @U\t{ n");
result.add("jo-\tbi-\tna", "j @U\tb i:\tn V");
result.add("jo-\tby-\tna", "j V\tb i:\tn V");
result.add("jo-\tchum", "dZ Q\tk V m");
result.add("jo-\tcu-\tlar", "dZ Q k\tj V\tl @r");
result.add("jo-\tdi", "dZ @U\td i:");
result.add("jo-\tdie", "dZ @U\td i:");
result.add("jo-\tdoin", "Z V\td OI n");
result.add("jo-\tdy", "dZ @U\td i:");
result.add("jo-\tel", "dZ @U\tV l");
result.add("jo-\telle", "dZ @U\te l");
result.add("jo-\tel's", "dZ @U\tV l z");
result.add("jo-\tette", "Z @U\te t");
result.add("jo-\tey", "dZ @U\ti:");
result.add("jo-\tey's", "dZ @U\ti: z");
result.add("jo-\than", "j @U\th Q n");
result.add("jo-\than-\tna", "dZ V\th {\tn V");
result.add("jo-\than-\tnes", "dZ @U\th {\tn V s");
result.add("jo-\than-\tnes-\tburg", "dZ @U\th {\tn V s\tb @r g");
result.add("jo-\than-\tnes-\tburg's", "dZ @U\th {\tn V s\tb @r g z");
result.add("jo-\than-\tnes-\tsen", "dZ @U\th {\tn V\ts V n");
result.add("jo-\than-\tsen", "dZ @U\th { n\ts V n");
result.add("jo-\than-\tson", "dZ @U\th { n\ts V n");
result.add("jo-\thann", "j @U\th Q n");
result.add("jo-\tker", "dZ @U\tk @r");
result.add("jo-\tkers", "dZ @U\tk @r z");
result.add("jo-\tking", "dZ @U\tk I N");
result.add("jo-\tking-\tly", "dZ @U\tk I N\tl i:");
result.add("jo-\tlene", "dZ @U\tl i: n");
result.add("jo-\tlet-\tta", "dZ @U\tl e\tt V");
result.add("jo-\tli-\tet", "dZ @U\tl i:\te t");
result.add("jo-\try", "dZ O@\ti:");
result.add("jo-\tse", "h @U\tz eI");
result.add("jo-\tse-\tpha", "dZ @U\ts e\tf V");
result.add("jo-\tse-\tphi-\tna", "dZ Q\ts V\tf aI\tn V");
result.add("jo-\tse-\tphine", "dZ @U\ts V\tf i: n");
result.add("jo-\tse-\tphus", "dZ @U\ts i:\tf V s");
result.add("jo-\tsef", "dZ @U\ts V f");
result.add("jo-\tseph", "dZ @U\ts V f");
result.add("jo-\tseph-\tson", "dZ @U\ts V f\ts V n");
result.add("jo-\tsephs", "dZ @U\ts V f s");
result.add("jo-\tseph's", "dZ @U\tz V f s");
result.add("jo-\tser", "dZ @U\tz @r");
result.add("jo-\tser's", "dZ @U\tz @r z");
result.add("jo-\tse's", "h @U\tz eI z");
result.add("jo-\tsey", "dZ @U\tz i:");
result.add("jo-\tshi", "dZ @U\tS i:");
result.add("jo-\tshu-\ta", "dZ Q\tS u:\tV");
result.add("jo-\tsi-\tah", "dZ @U\ts aI\tV");
result.add("jo-\tsie", "dZ @U\tz i:");
result.add("jo-\tst-\tling", "dZ Q\ts V\tl I N");
result.add("jo-\tstle", "dZ Q\ts V l");
result.add("jo-\tstled", "dZ Q\ts V l d");
result.add("jo-\tva-\tno-\tvich", "dZ @U\tv {\tn V\tv I tS");
result.add("jo-\tvi", "dZ @U\tv i:");
result.add("jo-\tvi-\tal", "dZ @U\tv i:\tV l");
result.add("jo-\tvi-\tan", "dZ @U\tv i:\tV n");
result.add("jo-\tvi-\tta", "j V\tv aI\tt V");
result.add("jo-\twett", "dZ aU\te t");
result.add("jo-\tyous", "dZ OI\tV s");
result.add("jo-\tzef", "dZ @U\tz V f");
result.add("joa-\to", "dZ @U\t@U");
result.add("joa-\tquin", "w Q\tk i: n");
result.add("joan", "dZ @U n");
result.add("job", "dZ Q b");
result.add("job-\tber", "dZ Q\tb @r");
result.add("job-\tbers", "dZ Q\tb @r z");
result.add("job-\tless", "dZ Q b\tl V s");
result.add("job-\tless-\tness", "dZ Q b\tl V s\tn V s");
result.add("job-\tson", "dZ Q b\ts V n");
result.add("jobe", "dZ @U b");
result.add("jobes", "dZ @U b z");
result.add("jobs", "dZ Q b z");
result.add("job's", "dZ Q b z");
result.add("joc-\tkey", "dZ Q\tk i:");
result.add("joc-\tkey-\ting", "dZ Q\tk i:\tI N");
result.add("joc-\tkeys", "dZ Q\tk i: z");
result.add("joce-\tlin", "dZ O: s\tl I n");
result.add("joce-\tline", "dZ O: s\tl I n");
result.add("joce-\tlyn", "dZ O: s\tl I n");
result.add("joce-\tlyne", "dZ O: s\tl I n");
result.add("jock", "dZ Q k");
result.add("jocks", "dZ Q k s");
result.add("joe", "dZ @U");
result.add("joerg", "dZ O@ g");
result.add("joes", "dZ @U z");
result.add("joe's", "dZ @U z");
result.add("jog", "dZ Q g");
result.add("jog-\tger", "dZ Q\tg @r");
result.add("jog-\tgers", "dZ Q\tg @r z");
result.add("jog-\tging", "dZ Q\tg I N");
result.add("jogged", "dZ Q g d");
result.add("jogs", "dZ Q g z");
result.add("joh", "dZ @U");
result.add("joh-\tna-\tthon", "dZ Q\tn V\tT V n");
result.add("joh-\tna-\tthon's", "dZ Q\tn V\tT V n z");
result.add("joh-\tnie", "dZ Q\tn i:");
result.add("joh-\tnnie", "dZ Q\tn i:");
result.add("joh-\tnnie's", "dZ Q\tn i: z");
result.add("joh-\tny", "dZ Q\tn i:");
result.add("john", "dZ Q n");
result.add("john-\tny", "dZ Q\tn i:");
result.add("john-\tny's", "dZ Q\tn i: z");
result.add("john-\tsen", "dZ Q n\ts V n");
result.add("john-\tsen's", "dZ Q n\ts V n z");
result.add("john-\tson", "dZ Q n\ts V n");
result.add("john-\tson's", "dZ Q n\ts V n z");
result.add("johns", "dZ Q n z");
result.add("john's", "dZ Q n z");
result.add("johns-\tton", "dZ Q n\ts t V n");
result.add("johns-\ttone", "dZ Q n\ts t @U n");
result.add("johns-\tton's", "dZ Q n\ts t V n z");
result.add("johns-\ttown", "dZ Q n\tz t aU n");
result.add("joi-\tne-\try", "dZ OI\tn @r\ti:");
result.add("joi-\tner", "dZ OI\tn @r");
result.add("joi-\tning", "dZ OI\tn I N");
result.add("joice", "dZ OI s");
result.add("joie", "Z w Q");
result.add("join", "dZ OI n");
result.add("join-\tted", "dZ OI n\tt V d");
result.add("joined", "dZ OI n d");
result.add("joins", "dZ OI n z");
result.add("joint", "dZ OI n t");
result.add("joint-\tly", "dZ OI n\tt l i:");
result.add("joint-\tness", "dZ OI n\tt n V s");
result.add("joints", "dZ OI n t s");
result.add("joist", "dZ OI s t");
result.add("joists", "dZ OI s t s");
result.add("joke", "dZ @U k");
result.add("joke-\tbook", "dZ @U k\tb U k");
result.add("joked", "dZ @U k t");
result.add("jokes", "dZ @U k s");
result.add("jol-\tla", "h OI\tj V");
result.add("jol-\tley", "dZ Q\tl i:");
result.add("jol-\tlies", "dZ Q\tl i: z");
result.add("jol-\tly", "dZ Q\tl i:");
result.add("jol-\tly-\ting", "dZ Q\tl i:\tI N");
result.add("jol-\tson", "dZ @U l\ts V n");
result.add("joles", "dZ @U l z");
result.add("jolt", "dZ @U l t");
result.add("joost", "dZ u: s t");
result.add("jop-\tlin", "dZ Q p\tl I n");
result.add("jor-\tda-\tna", "j O@\td {\tn V");
result.add("jor-\tda-\tni-\tan", "dZ O@\td eI\tn i:\tV n");
result.add("jor-\tda-\tni-\tans", "dZ O@\td eI\tn i:\tV n z");
result.add("jor-\tdan", "dZ O@\td V n");
result.add("jor-\tdans", "dZ O@\td V n z");
result.add("jor-\tdan's", "dZ O@\td V n z");
result.add("jor-\tden", "dZ O@\td V n");
result.add("jor-\tge", "h O@\th eI");
result.add("jor-\tgen-\tsen", "dZ O@\tg V n\ts V n");
result.add("jor-\tgen-\tson", "dZ O@\tg V n\ts V n");
result.add("jos", "dZ @U z");
result.add("jos-\tlyn", "dZ O: s\tl I n");
result.add("jos-\tse-\tlyn", "dZ Q\ts V\tl V n");
result.add("josh", "dZ Q S");
result.add("joss", "dZ O: s");
result.add("jot", "dZ Q t");
result.add("jot-\tted", "dZ Q\tt V d");
result.add("jou-\tbert", "j aU\tb @r t");
result.add("joule", "dZ u: l");
result.add("joules", "dZ u: l z");
result.add("jour", "dZ aU r");
result.add("jour-\tdan", "Z U@\td { n");
result.add("jour-\tn-\talis-\tti-\tcal-\tly", "dZ @r\tn V\tl I s\tt I\tk V\tl i:");
result.add("jour-\tna-\tlese", "dZ @r\tn V\tl i: z");
result.add("jour-\tna-\tli-\tsm", "dZ @r\tn V\tl I\tz V m");
result.add("jour-\tna-\tli-\tsm's", "dZ @r\tn V\tl I\tz V m z");
result.add("jour-\tna-\tlis-\ttic", "dZ @r\tn V\tl I s\tt I k");
result.add("jour-\tna-\tlist", "dZ @r\tn V\tl V s t");
result.add("jour-\tna-\tlists", "dZ @r\tn V\tl V s t s");
result.add("jour-\tna-\tlist's", "dZ @r\tn V\tl V s t s");
result.add("jour-\tnal", "dZ @r\tn V l");
result.add("jour-\tnals", "dZ @r\tn V l z");
result.add("jour-\tnal's", "dZ @r\tn V l z");
result.add("jour-\tney", "dZ @r\tn i:");
result.add("jour-\tney-\ting", "dZ @r\tn i:\tI N");
result.add("jour-\tney-\tman", "dZ @r\tn i:\tm { n");
result.add("jour-\tney-\tman's", "dZ @r\tn i:\tm V n z");
result.add("jour-\tneyed", "dZ @r\tn i: d");
result.add("jour-\tneys", "dZ @r\tn i: z");
result.add("jous-\tting", "dZ aU s\tt I N");
result.add("joust", "dZ aU s t");
result.add("jow-\tly", "dZ aU\tl i:");
result.add("jowl", "dZ aU l");
result.add("jowls", "dZ aU l z");
result.add("joy", "dZ OI");
result.add("joy-\tce's", "dZ OI\ts V z");
result.add("joy-\tful", "dZ OI\tf V l");
result.add("joy-\tful-\tly", "dZ OI\tf V\tl i:");
result.add("joy-\ting", "dZ OI\tI N");
result.add("joy-\tner", "dZ OI\tn @r");
result.add("joy-\tri-\tding", "dZ OI\tr aI\td I N");
result.add("joy-\tride", "dZ OI\tr aI d");
result.add("joy-\tstick", "dZ OI s\tt I k");
result.add("joyce", "dZ OI s");
result.add("joye", "dZ OI");
result.add("joys", "dZ OI z");
result.add("joy's", "dZ OI z");
result.add("j's", "dZ eI z");
result.add("ju", "dZ u:");
result.add("ju-\tba", "dZ u:\tb V");
result.add("ju-\tbi-\tla-\ttion", "dZ u:\tb I\tl eI\tS V n");
result.add("ju-\tbi-\tlant", "dZ u:\tb I\tl V n t");
result.add("ju-\tbi-\tlee", "dZ u:\tb I\tl i:");
result.add("ju-\tda-\ti-\tsm", "dZ u:\td eI\tI\tz V m");
result.add("ju-\tda-\ti-\tsm's", "dZ u:\td eI\tI\tz V m z");
result.add("ju-\tdah", "dZ u:\td V");
result.add("ju-\tdas", "dZ u:\td V s");
result.add("ju-\tde-\ta", "dZ u:\td i:\tV");
result.add("ju-\tdi-\tcate", "dZ u:\td I\tk eI t");
result.add("ju-\tdi-\tci-\ta-\try", "dZ u:\td I\tS i:\te@\ti:");
result.add("ju-\tdi-\tcial", "dZ u:\td I\tS V l");
result.add("ju-\tdi-\tcial-\tly", "dZ u:\td I\tS V\tl i:");
result.add("ju-\tdi-\tcious", "dZ u:\td I\tS V s");
result.add("ju-\tdi-\tcious-\tly", "dZ u:\td I\tS V s\tl i:");
result.add("ju-\tdi-\ttha", "dZ u:\td I\tT V");
result.add("ju-\tdice", "dZ u:\td I s");
result.add("ju-\tdie", "dZ V\td i:");
result.add("ju-\tdith", "dZ u:\td I T");
result.add("ju-\tdo", "dZ u:\td @U");
result.add("ju-\tdy", "dZ u:\td i:");
result.add("ju-\tdy's", "dZ u:\td i: z");
result.add("ju-\tgu-\tlar", "dZ u: g\tj V\tl @r");
result.add("ju-\ti-\tcier", "dZ u:\tI s\tj @r");
result.add("ju-\tji-\ttsu", "dZ u:\tdZ I t\ts u:");
result.add("ju-\tju", "dZ u:\tdZ u:");
result.add("ju-\tlep", "dZ u:\tl V p");
result.add("ju-\tleps", "dZ u:\tl V p s");
result.add("ju-\tli", "dZ u:\tl i:");
result.add("ju-\tli-\ta-\tna", "dZ u:\tl i:\t{\tn V");
result.add("ju-\tli-\ta-\tno", "dZ u:\tl i:\tQ\tn @U");
result.add("ju-\tli-\tan", "dZ u:\tl i:\tV n");
result.add("ju-\tli-\tann", "dZ u:\tl i:\t{ n");
result.add("ju-\tli-\tanne", "dZ u:\tl i:\te n");
result.add("ju-\tli-\ten", "dZ u:\tl i:\tV n");
result.add("ju-\tli-\tet", "dZ u:\tl i:\te t");
result.add("ju-\tli-\tet-\tta", "dZ u:\tl i:\te\tt V");
result.add("ju-\tli-\tette", "dZ u:\tl i:\te t");
result.add("ju-\tli-\tna", "j u:\tl i:\tn V");
result.add("ju-\tli-\to", "dZ u:\tl i:\t@U");
result.add("ju-\tlia", "dZ u: l\tj V");
result.add("ju-\tlia's", "dZ u: l\tj V z");
result.add("ju-\tlie", "dZ u:\tl i:");
result.add("ju-\tlie-\tta", "j u:\tl i:\tt V");
result.add("ju-\tlie's", "dZ u:\tl i: z");
result.add("ju-\tline", "dZ u:\tl aI n");
result.add("ju-\tlius", "dZ u: l\tj V s");
result.add("ju-\tly", "dZ u:\tl aI");
result.add("ju-\tly's", "dZ u:\tl aI z");
result.add("ju-\tneau", "dZ u:\tn @U");
result.add("ju-\tnette", "dZ u:\tn e t");
result.add("ju-\tni-\ta", "j u:\tn i:\tV");
result.add("ju-\tni-\ta-\tta", "j u:\tn i:\tQ\tt V");
result.add("ju-\tni-\tper", "dZ u:\tn I\tp @r");
result.add("ju-\tni-\tpers", "dZ u:\tn I\tp @r z");
result.add("ju-\tni-\tus", "dZ u:\tn i:\tV s");
result.add("ju-\tnior", "dZ u: n\tj @r");
result.add("ju-\tniors", "dZ u: n\tj @r z");
result.add("ju-\tnior's", "dZ u: n\tj @r z");
result.add("ju-\tno", "dZ u:\tn @U");
result.add("ju-\tno's", "dZ u:\tn @U z");
result.add("ju-\tnot", "dZ u:\tn V t");
result.add("ju-\tpi-\tter", "dZ u:\tp I\tt @r");
result.add("ju-\tpi-\tter's", "dZ u:\tp I\tt @r z");
result.add("ju-\tras", "dZ U@\tV z");
result.add("ju-\tras-\tsic", "dZ U@\t{\ts I k");
result.add("ju-\tries", "dZ U@\ti: z");
result.add("ju-\tris", "dZ U@\tI s");
result.add("ju-\tris-\tdic-\ttio-\tnal", "dZ U@\tI s\td I k\tS V\tn V l");
result.add("ju-\tris-\tdic-\ttion", "dZ U@\tI s\td I k\tS V n");
result.add("ju-\tris-\tdic-\ttions", "dZ U@\tI s\td I k\tS V n z");
result.add("ju-\tris-\tpru-\tden-\ttial", "dZ U@\tI s\tp r u:\td e n\tS V l");
result.add("ju-\tris-\tpru-\tdence", "dZ U@\tI s\tp r u:\td V n s");
result.add("ju-\trist", "dZ U@\tI s t");
result.add("ju-\trists", "dZ U@\tI s t s");
result.add("ju-\tror", "dZ U@\t@r");
result.add("ju-\trors", "dZ U@\t@r z");
result.add("ju-\tror's", "dZ U@\t@r z");
result.add("ju-\try", "dZ U@\ti:");
result.add("ju-\try's", "dZ U@\ti: z");
result.add("ju-\tve-\tnile", "dZ u:\tv V\tn V l");
result.add("ju-\tve-\tniles", "dZ u:\tv V\tn V l z");
result.add("ju-\tve-\tnile's", "dZ u:\tv V\tn V l z");
result.add("jua-\tna", "w Q\tn V");
result.add("jua-\tni-\tta", "w Q\tn i:\tt V");
result.add("jua-\trez", "w Q@\te z");
result.add("juan", "w Q n");
result.add("jud-\tges", "dZ V\tdZ V z");
result.add("jud-\tge's", "dZ V\tdZ V z");
result.add("jud-\tges'", "dZ V\tdZ V z");
result.add("jud-\tging", "dZ V\tdZ I N");
result.add("jud-\tsen", "dZ V d\ts V n");
result.add("jud-\tson", "dZ V d\ts V n");
result.add("judd", "dZ V d");
result.add("jude", "dZ u: d");
result.add("jude's", "dZ u: d z");
result.add("judg-\tmen-\ttal", "dZ V dZ\tm e n\tt V l");
result.add("judg-\tment", "dZ V dZ\tm V n t");
result.add("judg-\tments", "dZ V dZ\tm V n t s");
result.add("judge", "dZ V dZ");
result.add("judge-\tmen-\ttal", "dZ V dZ\tm e n\tt V l");
result.add("judge-\tment", "dZ V dZ\tm V n t");
result.add("judge-\tments", "dZ V dZ\tm V n t s");
result.add("judge-\tship", "dZ V dZ\tS I p");
result.add("judge-\tships", "dZ V dZ\tS I p s");
result.add("judged", "dZ V dZ d");
result.add("jug", "dZ V g");
result.add("jug-\tg-\tler", "dZ V\tg V\tl @r");
result.add("jug-\tg-\tlers", "dZ V\tg V\tl @r z");
result.add("jug-\tg-\tling", "dZ V\tg V\tl I N");
result.add("jug-\tger-\tnaut", "dZ V\tg @r\tn O: t");
result.add("jug-\tgle", "dZ V\tg V l");
result.add("jug-\tgled", "dZ V\tg V l d");
result.add("jug-\tgles", "dZ V\tg V l z");
result.add("jugs", "dZ V g z");
result.add("jui-\tces", "dZ u:\ts V z");
result.add("jui-\tci-\test", "dZ u:\ts i:\tV s t");
result.add("jui-\tcy", "dZ u:\ts i:");
result.add("juice", "dZ u: s");
result.add("juil-\tli-\tard", "dZ u:\tl i:\tQ@ d");
result.add("juke", "dZ u: k");
result.add("juke-\tbo-\txes", "dZ u: k\tb Q k\ts V z");
result.add("juke-\tbox", "dZ u: k\tb Q k s");
result.add("jukes", "dZ u: k s");
result.add("jul-\tli-\tard", "dZ u:\tl i:\tQ@ d");
result.add("jule", "dZ u: l");
result.add("jules", "dZ u: l z");
result.add("jum-\tble", "dZ V m\tb V l");
result.add("jum-\tbled", "dZ V m\tb V l d");
result.add("jum-\tbo", "dZ V m\tb @U");
result.add("jum-\tbos", "dZ V m\tb @U z");
result.add("jum-\tper", "dZ V m\tp @r");
result.add("jum-\tpers", "dZ V m\tp @r z");
result.add("jum-\tping", "dZ V m\tp I N");
result.add("jum-\tpy", "dZ V m\tp i:");
result.add("jump", "dZ V m p");
result.add("jump-\tstart", "dZ V m\tp s t Q@ t");
result.add("jump-\tsuit", "dZ V m\tp s u: t");
result.add("jumped", "dZ V m p t");
result.add("jumps", "dZ V m p s");
result.add("jun", "dZ V n");
result.add("jun-\tco", "dZ V N\tk @U");
result.add("jun-\tger", "dZ V\tN @r");
result.add("jun-\tgle", "dZ V N\tg V l");
result.add("jun-\tgles", "dZ V N\tg V l z");
result.add("jun-\tji", "dZ V n\tdZ i:");
result.add("jun-\tker", "dZ V N\tk @r");
result.add("jun-\tket", "dZ V N\tk V t");
result.add("jun-\tkets", "dZ V N\tk V t s");
result.add("jun-\tki-\ter", "dZ V N\tk i:\t@r");
result.add("jun-\tki-\test", "dZ V N\tk i:\tV s t");
result.add("jun-\tkie", "dZ V N\tk i:");
result.add("jun-\tkies", "dZ V N\tk i: z");
result.add("jun-\tking", "dZ V N\tk I N");
result.add("jun-\tky", "dZ V N\tk i:");
result.add("jun-\tta", "h U n\tt V");
result.add("junc-\ttion", "dZ V N\tk S V n");
result.add("junc-\tture", "dZ V N\tk tS @r");
result.add("junc-\ttures", "dZ V N\tk tS @r z");
result.add("june", "dZ u: n");
result.add("junes", "dZ u: n z");
result.add("june's", "dZ u: n z");
result.add("jung", "j U N");
result.add("jung's", "j U N z");
result.add("junk", "dZ V N k");
result.add("junk-\tyard", "dZ V N\tk j Q@ d");
result.add("junk-\tyards", "dZ V N\tk j Q@ d z");
result.add("junked", "dZ V N k t");
result.add("jur-\tgen", "dZ @r\tg V n");
result.add("jure", "dZ U@");
result.add("jus-\tta", "dZ V s\tt V");
result.add("jus-\tten", "dZ V s\tt V n");
result.add("jus-\tter", "dZ V s\tt @r");
result.add("jus-\tti-\tces", "dZ V s\tt I\ts V z");
result.add("jus-\tti-\tce's", "dZ V s\tt I\ts V z");
result.add("jus-\tti-\tfi-\ta-\tble", "dZ V s\tt I\tf aI\tV\tb V l");
result.add("jus-\tti-\tfi-\tab-\tly", "dZ V s\tt I\tf aI\tV b\tl i:");
result.add("jus-\tti-\tfi-\tca-\ttion", "dZ V s\tt I\tf I\tk eI\tS V n");
result.add("jus-\tti-\tfi-\tca-\ttions", "dZ V s\tt I\tf I\tk eI\tS V n z");
result.add("jus-\tti-\tfied", "dZ V s\tt I\tf aI d");
result.add("jus-\tti-\tfies", "dZ V s\tt I\tf aI z");
result.add("jus-\tti-\tfy", "dZ V s\tt I\tf aI");
result.add("jus-\tti-\tfy-\ting", "dZ V s\tt I\tf aI\tI N");
result.add("jus-\tti-\tna", "j u: s\tt i:\tn V");
result.add("jus-\tti-\tno", "dZ V s\tt i:\tn @U");
result.add("jus-\ttice", "dZ V s\tt I s");
result.add("jus-\ttin", "dZ V s\tt I n");
result.add("jus-\ttine", "dZ V s\tt i: n");
result.add("jus-\ttin's", "dZ V s\tt I n z");
result.add("jus-\ttis", "j u: s\tt I s");
result.add("jus-\tto", "dZ V s\tt @U");
result.add("jus-\ttus", "dZ V s\tt V s");
result.add("just", "dZ V s t");
result.add("just-\tly", "dZ V s\tt l i:");
result.add("jut", "dZ V t");
result.add("jut-\tland", "dZ V t\tl V n d");
result.add("jut-\tting", "dZ V\tt I N");
result.add("jute", "dZ u: t");
result.add("juts", "dZ V t s");
result.add("juve", "dZ u: v");
result.add("jux-\tta-\tpo-\tsi-\ttion", "dZ V k\ts t V\tp V\tz I\tS V n");
result.add("jux-\tta-\tpo-\tsi-\ttions", "dZ V k\ts t V\tp V\tz I\tS V n z");
result.add("jux-\tta-\tpose", "dZ V k\ts t V\tp @U z");
result.add("jux-\tta-\tposed", "dZ V k\ts t V\tp @U z d");
result.add("jynx", "dZ I N k s");
result.add("k", "kh eI");
result.add("k-\tcal", "kh eI\tk Q l");
result.add("k-\tk-\tk", "kh eI\tk eI\tk eI");
result.add("k-\tmart", "kh eI\tm Q@ t");
result.add("k-\tmart's", "kh eI\tm Q@ t s");
result.add("k-\tn-\ti-\tn", "kh eI\te\tn aI\te n");
result.add("k-\tnie-\tvel", "kh V\tn i:\tv V l");
result.add("k-\tvetch", "kh V\tv e tS");
result.add("k.", "kh eI");
result.add("ka", "kh Q");
result.add("ka-\tbel", "kh {\tb V l");
result.add("ka-\tboom", "kh V\tb u: m");
result.add("ka-\tbu-\tki", "kh V\tb u:\tk i:");
result.add("ka-\tbul", "kh Q\tb U l");
result.add("ka-\tdar", "kh {\td @r");
result.add("ka-\tden", "kh eI\td V n");
result.add("ka-\tdish", "kh eI\td I S");
result.add("ka-\tga-\twa", "kh V\tg Q\tw V");
result.add("ka-\thu-\tna", "kh V\th u:\tn V");
result.add("ka-\tlan", "kh eI\tl V n");
result.add("ka-\tlash-\tni-\tkov", "kh V\tl { S\tn I\tk Q v");
result.add("ka-\tlei-\tdos-\tcope", "kh V\tl aI\td V s\tk @U p");
result.add("ka-\tli-\tkow", "kh {\tl I\tk @U");
result.add("ka-\tli-\tna", "kh V\tl aI\tn V");
result.add("ka-\tli-\tning-\trad", "kh V\tl I\tn I N\tg r { d");
result.add("ka-\tlil", "kh {\tl I l");
result.add("ka-\tlin", "kh {\tl I n");
result.add("ka-\tlis", "kh {\tl I s");
result.add("ka-\tlisz", "kh Q\tl I S");
result.add("ka-\tlo", "kh eI\tl @U");
result.add("ka-\tma", "kh Q\tm V");
result.add("ka-\tmal", "kh eI\tm V l");
result.add("ka-\tme-\tha-\tme-\tha", "kh V\tm eI\tV\tm eI\tV");
result.add("ka-\tme-\tha-\tme-\tha's", "kh V\tm eI\tV\tm eI\tV z");
result.add("ka-\tmi-\tka-\tze", "kh Q\tm I\tk Q\tz i:");
result.add("ka-\tmin", "kh {\tm I n");
result.add("ka-\tna", "kh {\tn V");
result.add("ka-\tna-\twa", "kh Q\tn Q\tw V");
result.add("ka-\tna-\tza-\twa", "kh Q\tn Q\tz Q\tw V");
result.add("ka-\tnak", "kh {\tn V k");
result.add("ka-\tnaw-\tha", "kh V\tn O:\th V");
result.add("ka-\tni-\ta", "kh Q\tn i:\tV");
result.add("ka-\tno", "kh Q\tn @U");
result.add("ka-\toh-\tsi-\tung", "kh eI\t@U\ts i:\tV N");
result.add("ka-\tpo-\tsi", "kh V\tp @U\ts i:");
result.add("ka-\tpo-\tsi's", "kh V\tp @U\ts i: z");
result.add("ka-\tpoor", "kh V\tp u: r");
result.add("ka-\tpor", "kh eI\tp @r");
result.add("ka-\tpur", "kh {\tp @r");
result.add("ka-\tra", "kh e@\tV");
result.add("ka-\tra-\tchi", "kh Q@\tQ\ttS i:");
result.add("ka-\tra-\tjan", "kh e@\tV\tdZ V n");
result.add("ka-\tra-\tmi", "kh @r\tQ\tm i:");
result.add("ka-\tra-\to-\tke", "kh e@\ti:\t@U\tk i:");
result.add("ka-\tra-\tte", "kh @r\tQ\tt i:");
result.add("ka-\tras", "kh Q@\tV z");
result.add("ka-\trat", "kh e@\tV t");
result.add("ka-\tre-\tli-\tan", "kh @r\ti:\tl i:\tV n");
result.add("ka-\tre-\tni-\tna", "kh e@\te\tn i:\tn V");
result.add("ka-\treem", "kh @r\ti: m");
result.add("ka-\treem's", "kh @r\ti: m z");
result.add("ka-\trel", "kh e@\tV l");
result.add("ka-\tren", "kh e@\tV n");
result.add("ka-\tren's", "kh e@\tV n z");
result.add("ka-\tri", "kh e@\ti:");
result.add("ka-\trim", "kh @r\ti: m");
result.add("ka-\trin", "kh e@\tI n");
result.add("ka-\tro-\tli-\tna", "kh e@\tV\tl aI\tn V");
result.add("ka-\tro-\tline", "kh e@\tV\tl aI n");
result.add("ka-\tro-\tly", "kh @r\t@U\tl i:");
result.add("ka-\tro-\tlyn", "kh {\tr V\tl V n");
result.add("ka-\trol", "kh e@\tO: l");
result.add("ka-\tron", "kh e@\tV n");
result.add("ka-\tros", "kh Q@\t@U s");
result.add("ka-\trun", "kh @r\tu: n");
result.add("ka-\try", "kh e@\ti:");
result.add("ka-\tryn", "kh {\tr I n");
result.add("ka-\tser", "kh eI\tz @r");
result.add("ka-\tsey", "kh {\ts i:");
result.add("ka-\ttey", "kh eI\tt i:");
result.add("ka-\ttha", "kh {\tT V");
result.add("ka-\ttha-\tri-\tna", "kh {\tT e@\ti:\tn V");
result.add("ka-\tthe-\trine", "kh {\tT @r\tI n");
result.add("ka-\tthi", "kh {\tT i:");
result.add("ka-\tthie", "kh {\tT i:");
result.add("ka-\tthy", "kh {\tT i:");
result.add("ka-\tthy's", "kh {\tT i: z");
result.add("ka-\tti", "kh eI\tt i:");
result.add("ka-\ttie", "kh eI\tt i:");
result.add("ka-\tto", "kh eI\tt @U");
result.add("ka-\tto's", "kh eI\tt @U z");
result.add("ka-\tty", "kh eI\tt i:");
result.add("ka-\tty-\tdid", "kh eI\tt i:\td I d");
result.add("ka-\ttya", "kh Q t\tj V");
result.add("ka-\ttyu-\tsha", "kh V t\tj u:\tS V");
result.add("ka-\tva-\tnagh", "kh {\tv V\tn O:");
result.add("ka-\tva-\tnaugh", "kh {\tv V\tn O:");
result.add("ka-\twa-\tgu-\tchi", "kh Q\tw Q\tg u:\ttS i:");
result.add("ka-\twa-\ti", "kh Q\tw Q\ti:");
result.add("ka-\twa-\tsa-\tki", "kh Q\tw Q\ts Q\tk i:");
result.add("ka-\tya", "kh Q\tj V");
result.add("ka-\tya-\tking", "kh aI\t{\tk I N");
result.add("ka-\tyak", "kh aI\t{ k");
result.add("ka-\tyaks", "kh aI\t{ k s");
result.add("ka-\tyo", "kh eI\t@U");
result.add("ka-\tzakh", "kh {\tz { k");
result.add("ka-\tzakh-\tstan", "kh Q\tz Q k\ts t Q n");
result.add("ka-\tzakhs", "kh {\tz { k s");
result.add("ka-\tzan", "kh eI\tz V n");
result.add("ka-\tzis", "kh {\tz I s");
result.add("ka-\tzoo", "kh V\tz u:");
result.add("kaas", "kh Q z");
result.add("kab-\tba-\tlah", "kh V\tb Q\tl V");
result.add("kacz-\tmarc-\tzyk", "kh Q tS\tm @r\ttS I k");
result.add("kade", "kh eI d");
result.add("kaf-\tka", "kh Q f\tk V");
result.add("kaf-\tka-\tesque", "kh Q f\tk V\te s k");
result.add("kaf-\tka's", "kh Q f\tk V z");
result.add("kah-\tler", "kh Q\tl @r");
result.add("kahl", "kh Q l");
result.add("kahle", "kh Q l");
result.add("kahn", "kh Q n");
result.add("kahn's", "kh Q n z");
result.add("kai", "kh aI");
result.add("kail", "kh eI l");
result.add("kaim", "kh eI m");
result.add("kain", "kh eI n");
result.add("kaine", "kh eI n");
result.add("kal-\tgoor-\tlie", "kh { l\tg u: r\tl i:");
result.add("kal-\tka", "kh { l\tk V");
result.add("kal-\tkas-\tka", "kh { l\tk Q s\tk V");
result.add("kal-\tman", "kh { l\tm V n");
result.add("kal-\tmar", "kh { l\tm @r");
result.add("kalb", "kh { l b");
result.add("kale", "kh eI l");
result.add("kalk", "kh O: k");
result.add("kall", "kh O: l");
result.add("kall-\tman", "kh O: l\tm V n");
result.add("kam", "kh { m");
result.add("kam-\tchat-\tka", "kh { m\ttS { t\tk V");
result.add("kam-\tme-\trer", "kh {\tm @r\t@r");
result.add("kam-\tpa-\tla", "kh V m\tp Q\tl V");
result.add("kamp", "kh { m p");
result.add("kamp-\tmann", "kh { m\tp m V n");
result.add("kampf", "kh { m p f");
result.add("kamp's", "kh { m p s");
result.add("kan", "kh { n");
result.add("kan-\tda-\thar", "kh { n\td V\th Q@");
result.add("kan-\tga-\troo", "kh { N\tg @r\tu:");
result.add("kan-\tga-\troos", "kh { N\tg @r\tu: z");
result.add("kan-\tgas", "kh { N\tg V z");
result.add("kan-\tji", "kh { n\tdZ i:");
result.add("kan-\tka-\tkee", "kh { N\tk I\tk i:");
result.add("kan-\tnan", "kh Q\tn V n");
result.add("kan-\tsan", "kh { n\tz V n");
result.add("kan-\tsans", "kh { n\tz V n z");
result.add("kan-\tsas", "kh { n\tz V s");
result.add("kan-\tter", "kh { n\tt @r");
result.add("kan-\tter's", "kh { n\tt @r z");
result.add("kan-\tti-\tan", "kh { n\tt i:\tV n");
result.add("kan-\ttor", "kh { n\tt @r");
result.add("kan-\ttor's", "kh { n\tt @r z");
result.add("kane", "kh eI n");
result.add("kane's", "kh eI n z");
result.add("kang", "kh { N");
result.add("kant", "kh { n t");
result.add("kant-\tner", "kh { n\tt n @r");
result.add("kao", "kh aU");
result.add("kao-\tlin", "kh aU\tl I n");
result.add("kap-\tlan", "kh { p\tl V n");
result.add("kap-\tlan's", "kh { p\tl V n z");
result.add("kap-\tpa", "kh {\tp V");
result.add("kap-\tpel", "kh {\tp V l");
result.add("kap-\tton", "kh { p\tt V n");
result.add("kapp", "kh { p");
result.add("kar-\tla", "kh Q@\tl V");
result.add("kar-\tlen", "kh Q@\tl V n");
result.add("kar-\tlik", "kh Q@\tl I k");
result.add("kar-\tlin", "kh Q@\tl I n");
result.add("kar-\tlow", "kh Q@\tl @U");
result.add("kar-\tma", "kh Q@\tm V");
result.add("kar-\tman", "kh Q@\tm V n");
result.add("kar-\tney", "kh Q@\tn i:");
result.add("kar-\tpov", "kh Q@\tp Q v");
result.add("kar-\tren", "kh {\tr V n");
result.add("kar-\trer", "kh Q@\t@r");
result.add("kar-\try", "kh e@\ti:");
result.add("kar-\tter", "kh Q@\tt @r");
result.add("karch", "kh Q@ k");
result.add("karl", "kh Q@ l");
result.add("karl's", "kh Q@ l z");
result.add("karls-\truhe", "kh Q@ l\tz r u:");
result.add("karn", "kh Q@ n");
result.add("karnes", "kh Q@ n z");
result.add("karns", "kh Q@ n z");
result.add("karp", "kh Q@ p");
result.add("karr", "kh Q@");
result.add("kars-\tten", "kh Q@ s\tt V n");
result.add("karst", "kh Q@ s t");
result.add("kas-\tka", "kh Q s\tk V");
result.add("kas-\tpa-\trov", "kh { s\tp @r\tQ v");
result.add("kas-\tpar", "kh { s\tp @r");
result.add("kas-\tper", "kh { s\tp @r");
result.add("kas-\tsa", "kh {\ts V");
result.add("kas-\tsab", "kh {\ts V b");
result.add("kas-\tsel", "kh {\ts V l");
result.add("kas-\tsem", "kh {\ts V m");
result.add("kas-\tson", "kh {\ts V n");
result.add("kase", "kh eI z");
result.add("kash-\tmi-\tri", "kh { S\tm i:\tr i:");
result.add("kash-\tmir", "kh { S\tm I@");
result.add("kass", "kh { s");
result.add("kast", "kh { s t");
result.add("kast-\tner", "kh { s\tt n @r");
result.add("kat", "kh { t");
result.add("kat-\tman-\tdu", "kh { t\tm { n\td u:");
result.add("kat-\tri-\tna", "kh V t\tr i:\tn V");
result.add("kat-\tzen", "kh { t\tz V n");
result.add("kate", "kh eI t");
result.add("kate's", "kh eI t s");
result.add("kath", "kh { T");
result.add("kath-\tleen", "kh { T\tl i: n");
result.add("kath-\tleen's", "kh { T\tl i: n z");
result.add("kath-\tlene", "kh { T\tl i: n");
result.add("kath-\tryn", "kh { T\tr I n");
result.add("katha-\trine", "kh { T\tr I n");
result.add("kats", "kh { t s");
result.add("katt", "kh { t");
result.add("katz", "kh { t s");
result.add("katz-\tman", "kh { t\ts m V n");
result.add("kau-\tai", "kh aU\taI");
result.add("kauf-\tman", "kh O: f\tm V n");
result.add("kauf-\tmann", "kh O: f\tm V n");
result.add("kauf-\tman's", "kh O: f\tm V n z");
result.add("kauff-\tman", "kh O: f\tm V n");
result.add("kauff-\tmann", "kh O: f\tm V n");
result.add("kaun-\tda", "kh O: n\td V");
result.add("kaup-\tpi", "kh O:\tp i:");
result.add("kay", "kh eI");
result.add("kay-\tla", "kh eI\tl V");
result.add("kay-\tlor", "kh eI\tl @r");
result.add("kaye", "kh eI");
result.add("kayes", "kh eI z");
result.add("kayne", "kh eI n");
result.add("kays", "kh eI z");
result.add("kay's", "kh eI z");
result.add("ke-\tdar", "kh i:\td @r");
result.add("ke-\tfau-\tver", "kh e\tf aU\tv @r");
result.add("ke-\thoe", "kh e\th @U");
result.add("ke-\tis-\tter", "kh i:\tI s\tt @r");
result.add("ke-\tmal", "kh V\tm Q l");
result.add("ke-\tme-\tny", "kh e\tm V\tn i:");
result.add("ke-\tnaf", "kh e\tn { f");
result.add("ke-\tni-\tson", "kh e\tn I\ts V n");
result.add("ke-\tnil-\tworth", "kh e\tn I l\tw @r T");
result.add("ke-\tno", "kh i:\tn @U");
result.add("ke-\tno-\tsha", "kh V\tn @U\tS V");
result.add("ke-\to", "kh i:\t@U");
result.add("ke-\to-\tkuk", "kh i:\t@U\tk V k");
result.add("ke-\togh", "kh i:\t@U");
result.add("ke-\tra", "kh e@\tV");
result.add("ke-\tra-\tla", "kh e@\tQ\tl V");
result.add("ke-\tra-\ttin", "kh e@\tV\tt I n");
result.add("ke-\tra-\tto-\tto-\tmy", "kh e@\tV\tt O:\tt V\tm i:");
result.add("ke-\trekes", "kh e@\tI k s");
result.add("ke-\trin", "kh e@\tI n");
result.add("ke-\tro-\tsene", "kh e@\tV\ts i: n");
result.add("ke-\trou-\tac", "kh e@\tu:\t{ k");
result.add("ke-\tto", "kh eI\tt @U");
result.add("ke-\ttone", "kh i:\tt @U n");
result.add("ke-\tvan", "kh e\tv V n");
result.add("ke-\tven", "kh i:\tv V n");
result.add("ke-\tver", "kh e\tv @r");
result.add("ke-\tvin", "kh e\tv I n");
result.add("ke-\tvin's", "kh e\tv I n z");
result.add("ke-\tvor-\tki-\tan", "kh V\tv O@\tk i:\tV n");
result.add("ke-\tvor-\tki-\tan's", "kh V\tv O@\tk i:\tV n z");
result.add("kea", "kh i:");
result.add("kea-\tley", "kh i:\tl i:");
result.add("kea-\try", "kh I@\ti:");
result.add("kea-\tting", "kh i:\tt I N");
result.add("kea-\tting's", "kh i:\tt I N z");
result.add("kea-\tton", "kh i:\tt V n");
result.add("keach", "kh i: tS");
result.add("kean", "kh i: n");
result.add("keane", "kh i: n");
result.add("kean's", "kh i: n z");
result.add("kear-\tney", "kh @r\tn i:");
result.add("kear-\tney's", "kh @r\tn i: z");
result.add("kear-\tny", "kh @r\tn i:");
result.add("kear-\tsarge", "kh i: r\ts Q@ dZ");
result.add("kearn", "kh @r n");
result.add("kearns", "kh @r n z");
result.add("keas", "kh i: z");
result.add("keats", "kh i: t s");
result.add("keck", "kh e k");
result.add("keds", "kh e d z");
result.add("kee", "kh i:");
result.add("kee-\tfer", "kh i:\tf @r");
result.add("kee-\tgan", "kh i:\tg V n");
result.add("kee-\tler", "kh i:\tl @r");
result.add("kee-\tley", "kh i:\tl i:");
result.add("kee-\tlin", "kh i:\tl I n");
result.add("kee-\tling", "kh i:\tl I N");
result.add("kee-\tly", "kh i:\tl i:");
result.add("kee-\tna", "kh i:\tn V");
result.add("kee-\tnan", "kh i:\tn V n");
result.add("kee-\tner", "kh i:\tn @r");
result.add("kee-\tnest", "kh i:\tn V s t");
result.add("kee-\tper", "kh i:\tp @r");
result.add("kee-\tpers", "kh i:\tp @r z");
result.add("kee-\tping", "kh i:\tp I N");
result.add("kee-\tton", "kh i:\tt V n");
result.add("kee-\tver", "kh i:\tv @r");
result.add("keech", "kh i: tS");
result.add("keef", "kh i: f");
result.add("keefe", "kh i: f");
result.add("keel", "kh i: l");
result.add("keel-\tson", "kh e l\ts V n");
result.add("keele", "kh i: l");
result.add("keels", "kh i: l z");
result.add("keen", "kh i: n");
result.add("keen-\tly", "kh i: n\tl i:");
result.add("keene", "kh i: n");
result.add("keep", "kh i: p");
result.add("keep-\tsake", "kh i: p\ts eI k");
result.add("keep-\tsakes", "kh i: p\ts eI k s");
result.add("keeps", "kh i: p s");
result.add("kee's", "kh i: z");
result.add("keese", "kh i: z");
result.add("kef-\tfer", "kh e\tf @r");
result.add("keg", "kh e g");
result.add("keg-\tler", "kh e g\tl @r");
result.add("keg-\tley", "kh e g\tl i:");
result.add("kegs", "kh e g z");
result.add("kehr", "kh e@");
result.add("kei-\tfer", "kh i:\tf @r");
result.add("kei-\tko", "kh eI\tk @U");
result.add("kei-\tre-\ttsu", "kh I@\te t\ts u:");
result.add("kei-\ts-\tling", "kh aI\ts V\tl I N");
result.add("kei-\tser", "kh aI\ts @r");
result.add("kei-\ttel", "kh aI\tt V l");
result.add("kei-\tzer", "kh aI\tz @r");
result.add("keil", "kh i: l");
result.add("keil-\tlor", "kh i:\tl @r");
result.add("keil-\tlor's", "kh i:\tl @r z");
result.add("keir", "kh i: r");
result.add("keith", "kh i: T");
result.add("keith-\tley", "kh i: T\tl i:");
result.add("keith's", "kh i: T s");
result.add("kel-\tby", "kh e l\tb i:");
result.add("kel-\tcey", "kh e l\ts i:");
result.add("kel-\tda", "kh e l\td V");
result.add("kel-\tton", "kh e l\tt V n");
result.add("kel-\tty", "kh e l\tt i:");
result.add("kel-\tvin", "kh e l\tv I n");
result.add("kel-\tvin's", "kh e l\tv I n z");
result.add("kem-\tble", "kh e m\tb V l");
result.add("kem-\tme-\trer", "kh e\tm @r\t@r");
result.add("kem-\tper", "kh e m\tp @r");
result.add("kem-\tple", "kh e m\tp V l");
result.add("kemp", "kh e m p");
result.add("kemp-\tner", "kh e m\tp n @r");
result.add("kemp-\tton", "kh e m\tp t V n");
result.add("kempe", "kh e m p");
result.add("kemp's", "kh e m p s");
result.add("kemps-\tter", "kh e m\tp s t @r");
result.add("ken", "kh e n");
result.add("ken-\tdal", "kh e n\td V l");
result.add("ken-\tdall", "kh e n\td V l");
result.add("ken-\tdall's", "kh e n\td V l z");
result.add("ken-\tdell", "kh e n\td V l");
result.add("ken-\tji", "kh e n\tdZ i:");
result.add("ken-\tley", "kh e n\tl i:");
result.add("ken-\tmare", "kh e n\tm e@");
result.add("ken-\tmore", "kh e n\tm O@");
result.add("ken-\tna", "kh e\tn V");
result.add("ken-\tnan", "kh e\tn V n");
result.add("ken-\tnard", "kh e\tn @r d");
result.add("ken-\tne-\tbunk-\tport", "kh e\tn V\tb V N\tk p O@ t");
result.add("ken-\tne-\tcott", "kh e\tn V\tk Q t");
result.add("ken-\tne-\tdy", "kh e\tn V\td i:");
result.add("ken-\tne-\tdy's", "kh e\tn V\td i: z");
result.add("ken-\tne-\tsaw", "kh e\tn V\ts O:");
result.add("ken-\tnel", "kh e\tn V l");
result.add("ken-\tnel-\tly", "kh e\tn V\tl i:");
result.add("ken-\tnell", "kh e\tn V l");
result.add("ken-\tnels", "kh e\tn V l z");
result.add("ken-\tner", "kh e\tn @r");
result.add("ken-\tner's", "kh e\tn @r z");
result.add("ken-\tneth", "kh e\tn V T");
result.add("ken-\tnett", "kh e\tn V t");
result.add("ken-\tney", "kh e\tn i:");
result.add("ken-\tning", "kh e\tn I N");
result.add("ken-\tning-\tton", "kh e\tn I N\tt V n");
result.add("ken-\tny", "kh e\tn i:");
result.add("ken-\trick", "kh e n\tr I k");
result.add("ken-\tsing-\tton", "kh e n\tz I N\tt V n");
result.add("ken-\tte", "kh e n\tt eI");
result.add("ken-\tton", "kh e n\tt V n");
result.add("ken-\ttuc-\tki-\tan", "kh e n\tt V\tk i:\tV n");
result.add("ken-\ttuc-\tki-\tans", "kh e n\tt V\tk i:\tV n z");
result.add("ken-\ttuc-\tky", "kh V n\tt V\tk i:");
result.add("ken-\ttuc-\tky's", "kh V n\tt V\tk i: z");
result.add("ken-\tward", "kh e n\tw @r d");
result.add("ken-\tway", "kh e n\tw eI");
result.add("ken-\twood", "kh e n\tw U d");
result.add("ken-\tya", "kh e n\tj V");
result.add("ken-\tyan", "kh e n\tj V n");
result.add("ken-\tyans", "kh e n\tj V n z");
result.add("ken-\tya's", "kh e n\tj V z");
result.add("ken-\tyon", "kh e n\tj V n");
result.add("ken-\tzie", "kh e n\tz i:");
result.add("kend-\tra", "kh e n\td r V");
result.add("kend-\trick", "kh e n\td r I k");
result.add("kend-\tricks", "kh e n\td r I k s");
result.add("kenn", "kh e n");
result.add("ken's", "kh e n z");
result.add("kent", "kh e n t");
result.add("kent's", "kh e n t s");
result.add("kep-\tler", "kh e p\tl @r");
result.add("kep-\tner", "kh e p\tn @r");
result.add("kep-\tpel", "kh e\tp V l");
result.add("kept", "kh e p t");
result.add("ker", "kh @r");
result.add("ker-\tby", "kh @r\tb i:");
result.add("ker-\tcher", "kh @r\tk @r");
result.add("ker-\tchief", "kh @r\ttS I f");
result.add("ker-\tchiefs", "kh @r\ttS I f s");
result.add("ker-\tfuf-\tfle", "kh @r\tf V\tf V l");
result.add("ker-\tman", "kh @r\tm V n");
result.add("ker-\tmit", "kh @r\tm I t");
result.add("ker-\tnan", "kh @r\tn V n");
result.add("ker-\tnel", "kh @r\tn V l");
result.add("ker-\tnels", "kh @r\tn V l z");
result.add("ker-\tner", "kh @r\tn @r");
result.add("ker-\tnite", "kh @r\tn aI t");
result.add("ker-\tri", "kh e@\ti:");
result.add("ker-\trick", "kh e@\tI k");
result.add("ker-\try", "kh e@\ti:");
result.add("ker-\try's", "kh e@\ti: z");
result.add("ker-\tsey", "kh @r\ts i:");
result.add("ker-\tshaw", "kh @r\tS Q");
result.add("ker-\ttesz", "kh @r\tt I S");
result.add("ker-\twin", "kh @r\tw I n");
result.add("kerb", "kh @r b");
result.add("kerbs", "kh @r b z");
result.add("kerl", "kh @r l");
result.add("kern", "kh @r n");
result.add("kernes", "kh @r n z");
result.add("kerns", "kh @r n z");
result.add("kern's", "kh @r n z");
result.add("kerr", "kh @r");
result.add("kerr-\tville", "kh @r\tv I l");
result.add("kers-\tten", "kh @r s\tt V n");
result.add("kerst", "kh @r s t");
result.add("kes-\tsel", "kh e\ts V l");
result.add("kes-\tsel-\tring", "kh e\ts V l\tr I N");
result.add("kes-\tter", "kh e s\tt @r");
result.add("kes-\tting", "kh e s\tt I N");
result.add("kes-\twick", "kh e s\tw I k");
result.add("kess-\tler", "kh e s\tl @r");
result.add("kess-\tler's", "kh e s\tl @r z");
result.add("kest-\tner", "kh e s\tt n @r");
result.add("kest-\trels", "kh e s\tt r V l z");
result.add("ket-\tchi-\tkan", "kh e\ttS I\tk { n");
result.add("ket-\tchum", "kh e\ttS V m");
result.add("ket-\tchup", "kh e\ttS V p");
result.add("ket-\tt-\tler", "kh e\tt V\tl @r");
result.add("ket-\tte-\tring", "kh e\tt @r\tI N");
result.add("ket-\tti", "kh e\tt i:");
result.add("ket-\ttle", "kh e\tt V l");
result.add("ket-\ttles", "kh e\tt V l z");
result.add("ketch", "kh e tS");
result.add("kev-\tlar", "kh e v\tl @r");
result.add("kew", "kh j u:");
result.add("kew-\tau-\tnee", "kh j u:\tO:\tn i:");
result.add("key", "kh i:");
result.add("key-\tboard", "kh i:\tb O@ d");
result.add("key-\tboards", "kh i:\tb O@ d z");
result.add("key-\thole", "kh i:\th @U l");
result.add("key-\ting", "kh i:\tI N");
result.add("key-\tless", "kh i:\tl V s");
result.add("key-\tnote", "kh i:\tn @U t");
result.add("key-\tpad", "kh i:\tp { d");
result.add("key-\tpads", "kh i:\tp { d z");
result.add("key-\tpad's", "kh i:\tp { d z");
result.add("key-\tser", "kh aI\tz @r");
result.add("key-\tstone", "kh i: s\tt @U n");
result.add("key-\tstone's", "kh i: s\tt @U n z");
result.add("key-\tstroke", "kh i: s\tt r @U k");
result.add("key-\tstrokes", "kh i: s\tt r @U k s");
result.add("key-\tword", "kh i:\tw @r d");
result.add("key-\twords", "kh i:\tw @r d z");
result.add("keyed", "kh i: d");
result.add("keyes", "kh i: z");
result.add("keyne-\tsi-\tan", "kh eI n\tz i:\tV n");
result.add("keyne-\tsi-\tans", "kh eI n\tz i:\tV n z");
result.add("keynes", "kh eI n z");
result.add("keys", "kh i: z");
result.add("key's", "kh i: z");
result.add("kha-\tba-\trovsk", "kh {\tb @r\tQ f s k");
result.add("kha-\tki", "kh Q\tk i:");
result.add("kha-\tkis", "kh {\tk i: z");
result.add("kha-\tli-\tfa", "kh V\tl i:\tf V");
result.add("kha-\tlid", "kh Q\tl I d");
result.add("kha-\tlid's", "kh Q\tl I d z");
result.add("kha-\tlil", "kh {\tl I l");
result.add("kha-\tnate", "kh Q\tn eI t");
result.add("khal-\tsa", "kh Q l\ts V");
result.add("khan", "kh Q n");
result.add("khan-\tna", "kh {\tn V");
result.add("khan's", "kh Q n z");
result.add("khar-\ttoum", "kh Q@\tt u: m");
result.add("khat", "kh Q t");
result.add("khem", "kh e m");
result.add("khmer", "kh m e@");
result.add("kho-\tmei-\tni", "kh @U\tm eI\tn i:");
result.add("kho-\tmei-\tni's", "h @U\tm eI\tn i: z");
result.add("khou-\try", "kh aU\tr i:");
result.add("khrush-\tchev", "kh r u: s\ttS e v");
result.add("khrush-\tchev's", "kh r u: s\ttS e v z");
result.add("khu-\tfu", "kh u:\tf u:");
result.add("ki", "kh i:");
result.add("ki-\ta", "kh i:\t@r");
result.add("ki-\tes-\tter", "s aI\tV s\tt @r");
result.add("ki-\tev", "kh i:\te v");
result.add("ki-\tev's", "kh i:\te v z");
result.add("ki-\tga-\tli", "kh i:\tg Q\tl i:");
result.add("ki-\tga-\tli's", "kh i:\tg Q\tl i: z");
result.add("ki-\tker", "kh aI\tk @r");
result.add("ki-\tki", "kh i:\tk i:");
result.add("ki-\tla", "kh I\tl V");
result.add("ki-\tley", "kh aI\tl i:");
result.add("ki-\tli-\tan", "kh I\tl i:\tV n");
result.add("ki-\tli-\tman-\tja-\tro", "kh I\tl i:\tm V n\tdZ Q@\t@U");
result.add("ki-\tlo", "kh I\tl @U");
result.add("ki-\tlo-\tbit", "kh I\tl V\tb I t");
result.add("ki-\tlo-\tbyte", "kh I\tl @U\tb aI t");
result.add("ki-\tlo-\tbytes", "kh I\tl @U\tb aI t s");
result.add("ki-\tlo-\tgram", "kh I\tl V g\tr { m");
result.add("ki-\tlo-\tgrams", "kh I\tl V g\tr { m z");
result.add("ki-\tlo-\tme-\tter", "kh V\tl Q\tm V\tt @r");
result.add("ki-\tlo-\tme-\tters", "kh V\tl Q\tm V\tt @r z");
result.add("ki-\tmo-\tno", "kh V\tm @U\tn V");
result.add("ki-\tmo-\tnos", "kh V\tm @U\tn V z");
result.add("ki-\tmu-\tra", "kh i:\tm U@\tV");
result.add("ki-\tne-\tsi-\to-\tlo-\tgy", "kh I\tn V\ts i:\tQ\tl V\tdZ i:");
result.add("ki-\tne-\ttic", "kh V\tn e\tt I k");
result.add("ki-\tne-\ttics", "kh V\tn e\tt I k s");
result.add("ki-\tnes-\tthe-\ttic", "kh I\tn V s\tT e\tt I k");
result.add("ki-\tosk", "kh i:\tO: s k");
result.add("ki-\tosks", "kh i:\tO: s k s");
result.add("ki-\tri", "kh I@\ti:");
result.add("ki-\tri-\tba-\tti", "kh I@\tI\tb Q\tt i:");
result.add("ki-\trin", "kh I@\tI n");
result.add("ki-\trov", "kh I@\tQ v");
result.add("ki-\tsan", "kh I\tz V n");
result.add("ki-\tshi", "kh i:\tS i:");
result.add("ki-\tsor", "kh aI\tz @r");
result.add("ki-\tting", "kh aI\tt I N");
result.add("ki-\twa-\tnis", "kh V\tw Q\tn V s");
result.add("ki-\twi", "kh i:\tw i:");
result.add("ki-\twis", "kh i:\tw i: z");
result.add("ki-\twi's", "kh i:\tw i: z");
result.add("ki-\tyo-\tshi", "kh i:\t@U\tS i:");
result.add("kib-\tble", "kh I\tb V l");
result.add("kib-\tbut-\tzim", "kh I\tb U t\ts I m");
result.add("kib-\tbutz", "kh I\tb U t s");
result.add("kib-\tbutz-\tnik", "kh I\tb U t\ts n I k");
result.add("kib-\tbutz-\tniks", "kh I\tb U t\ts n I k s");
result.add("kibbe", "kh I b");
result.add("kic-\tker", "kh I\tk @r");
result.add("kic-\tkers", "kh I\tk @r z");
result.add("kic-\tking", "kh I\tk I N");
result.add("kic-\tkoff", "kh I\tk O: f");
result.add("kick", "kh I k");
result.add("kick-\tback", "kh I k\tb { k");
result.add("kick-\tbacks", "kh I k\tb { k s");
result.add("kick-\toff", "kh I\tk O: f");
result.add("kicked", "kh I k t");
result.add("kicks", "kh I k s");
result.add("kid", "kh I d");
result.add("kid-\tded", "kh I\td V d");
result.add("kid-\tder", "kh I\td @r");
result.add("kid-\tder's", "kh I\td @r z");
result.add("kid-\tdie", "kh I\td i:");
result.add("kid-\tdies", "kh I\td i: z");
result.add("kid-\tding", "kh I\td I N");
result.add("kid-\tding-\tly", "kh I\td I N\tl i:");
result.add("kid-\tdy", "kh I\td i:");
result.add("kid-\tna-\tping", "kh I d\tn {\tp I N");
result.add("kid-\tnap", "kh I d\tn { p");
result.add("kid-\tnap-\tper", "kh I d\tn {\tp @r");
result.add("kid-\tnap-\tpers", "kh I d\tn {\tp @r z");
result.add("kid-\tnap-\tping", "kh I d\tn {\tp I N");
result.add("kid-\tnap-\tpings", "kh I d\tn {\tp I N z");
result.add("kid-\tnaped", "kh I d\tn { p t");
result.add("kid-\tnapped", "kh I d\tn { p t");
result.add("kid-\tnaps", "kh I d\tn { p s");
result.add("kid-\tney", "kh I d\tn i:");
result.add("kid-\tneys", "kh I d\tn i: z");
result.add("kidd", "kh I d");
result.add("kidde", "kh I d");
result.add("kids", "kh I d z");
result.add("kid's", "kh I d z");
result.add("kids'", "kh I d z");
result.add("kie-\tfer", "kh i:\tf @r");
result.add("kie-\tler", "kh i:\tl @r");
result.add("kie-\tnan", "kh i:\tn V n");
result.add("kie-\tran", "kh i:\tr V n");
result.add("kie-\tvan", "kh i:\tv V n");
result.add("kie-\twit", "kh i:\tw I t");
result.add("kief", "kh i: f");
result.add("kief-\tfer", "kh i:\tf @r");
result.add("kiehl", "kh i: l");
result.add("kiehn", "kh i: n");
result.add("kiel", "kh i: l");
result.add("kiel-\tba-\tsa", "kh i: l\tb Q\ts V");
result.add("kiel-\tty", "kh i: l\tt i:");
result.add("kier", "kh I@");
result.add("kier-\tnan", "kh I@\tn V n");
result.add("kies", "kh aI s");
result.add("kight", "kh aI t");
result.add("kik-\twit", "kh I k\tw V t");
result.add("kil-\tbourne", "kh I l\tb @r n");
result.add("kil-\tbride", "kh I l\tb r aI d");
result.add("kil-\tby", "kh I l\tb i:");
result.add("kil-\tdee", "kh I l\td i:");
result.add("kil-\tgore", "kh I l\tg O@");
result.add("kil-\tlam", "kh I\tl V m");
result.add("kil-\tle-\tbrew", "kh I\tl V b\tr u:");
result.add("kil-\tleen", "kh I\tl i: n");
result.add("kil-\tlen", "kh I\tl V n");
result.add("kil-\tler", "kh I\tl @r");
result.add("kil-\tlers", "kh I\tl @r z");
result.add("kil-\tler's", "kh I\tl @r z");
result.add("kil-\tli-\tfish", "kh I\tl I\tf I S");
result.add("kil-\tlian", "kh I l\tj V n");
result.add("kil-\tling", "kh I\tl I N");
result.add("kil-\tling-\tton", "kh I\tl I N\tt V n");
result.add("kil-\tlings", "kh I\tl I N z");
result.add("kil-\tlion", "kh I l\tj V n");
result.add("kil-\tlo-\tran", "kh I\tl @r\tV n");
result.add("kil-\tmar-\tnock", "kh I l\tm Q@\tn Q k");
result.add("kil-\tmer", "kh I l\tm @r");
result.add("kile", "kh aI l");
result.add("kill", "kh I l");
result.add("kill-\tjoy", "kh I l\tdZ OI");
result.add("killed", "kh I l d");
result.add("kills", "kh I l z");
result.add("kiln", "kh I l n");
result.add("kilns", "kh I l n z");
result.add("kim-\tpo", "kh I m\tp @U");
result.add("kim's", "kh I m z");
result.add("kin", "kh I n");
result.add("kin-\tcaid", "kh I n\tk eI d");
result.add("kin-\tcaid's", "kh I n\tk eI d z");
result.add("kin-\tche-\tloe", "kh I n\ttS V\tl @U");
result.add("kin-\tchen", "kh I N\tk V n");
result.add("kin-\td-\tler", "kh I n\td V\tl @r");
result.add("kin-\tda", "kh I n\td V");
result.add("kin-\tder", "kh aI n\td @r");
result.add("kin-\tder-\tgar-\tten", "kh I n\td @r\tg Q@\tt V n");
result.add("kin-\tder-\tgar-\ttens", "kh I n\td @r\tg Q@\tt V n z");
result.add("kin-\tder-\tgart-\tner", "kh I n\td @r\tg Q@ t\tn @r");
result.add("kin-\tdest", "kh aI n\td V s t");
result.add("kin-\tdig", "kh I n\td I g");
result.add("kin-\tdle", "kh I n\td V l");
result.add("kin-\tdled", "kh I n\td V l d");
result.add("kin-\tdy", "kh aI n\td i:");
result.add("kin-\tker", "kh I N\tk @r");
result.add("kin-\tkle", "kh I N\tk V l");
result.add("kin-\tko", "kh I N\tk @U");
result.add("kin-\tko's", "kh I N\tk @U z");
result.add("kin-\tky", "kh I N\tk i:");
result.add("kin-\tloch", "kh I n\tl V k");
result.add("kin-\tnard", "kh I\tn @r d");
result.add("kin-\tnear", "kh I\tn I@");
result.add("kin-\tney", "kh I\tn i:");
result.add("kin-\tnie", "kh I\tn i:");
result.add("kin-\tnock", "kh I\tn V k");
result.add("kin-\tnock's", "kh I\tn V k s");
result.add("kin-\tny", "kh I\tn i:");
result.add("kin-\ts-\tler", "kh I n\ts V\tl @r");
result.add("kin-\tsey", "kh I n\tz i:");
result.add("kin-\tsha-\tsa", "kh I n\tS Q\ts V");
result.add("kin-\tship", "kh I n\tS I p");
result.add("kin-\tzer", "kh I n\tz @r");
result.add("kinch", "kh I n tS");
result.add("kind", "kh aI n d");
result.add("kind-\tling", "kh I n\td l I N");
result.add("kind-\tly", "kh aI n\td l i:");
result.add("kind-\tness", "kh aI n\td n V s");
result.add("kind-\tred", "kh I n\td r V d");
result.add("kinds", "kh aI n d z");
result.add("kines", "kh aI n z");
result.add("king", "kh I N");
result.add("king-\tbird", "kh I N\tb @r d");
result.add("king-\tbirds", "kh I N\tb @r d z");
result.add("king-\tdom", "kh I N\td V m");
result.add("king-\tdoms", "kh I N\td V m z");
result.add("king-\tdom's", "kh I N\td V m z");
result.add("king-\tdon", "kh I N\td V n");
result.add("king-\tfi-\tsher", "kh I N\tf I\tS @r");
result.add("king-\tfi-\tshers", "kh I N\tf I\tS @r z");
result.add("king-\thorn", "kh I N\th @r n");
result.add("king-\tly", "kh I N\tl i:");
result.add("king-\tma-\tker", "kh I N\tm eI\tk @r");
result.add("king-\tman", "kh I N\tm V n");
result.add("king-\tpin", "kh I N\tp I n");
result.add("king-\tpins", "kh I N\tp I n z");
result.add("king-\tship", "kh I N\tS I p");
result.add("king-\tsport", "kh I N\ts p O@ t");
result.add("kings", "kh I N z");
result.add("king's", "kh I N z");
result.add("kings'", "kh I N z");
result.add("kings-\tbu-\try", "kh I N\tz b e@\ti:");
result.add("kings-\tford", "kh I N\ts f @r d");
result.add("kings-\tland", "kh I N\tz l { n d");
result.add("kings-\tley", "kh I N\tz l i:");
result.add("kings-\tley's", "kh I N\tz l i: z");
result.add("kings-\tton", "kh I N\ts t V n");
result.add("kings-\tville", "kh I N\tz v I l");
result.add("kinks", "kh I N k s");
result.add("kin's", "kh I n z");
result.add("kins-\tley", "kh I n\tz l i:");
result.add("kins-\tley's", "kh I n\tz l i: z");
result.add("kins-\tman", "kh I n\tz m { n");
result.add("kip", "kh I p");
result.add("kip-\tling", "kh I p\tl I N");
result.add("kip-\tnis", "kh I p\tn I s");
result.add("kip-\tper", "kh I\tp @r");
result.add("kip-\tpers", "kh I\tp @r z");
result.add("kip-\tpur", "kh I\tp @r");
result.add("kipp", "kh I p");
result.add("kir-\tby", "kh @r\tb i:");
result.add("kir-\tby's", "kh @r\tb i: z");
result.add("kir-\tcher", "kh @r\tk @r");
result.add("kir-\tgiz", "kh I@\tg I z");
result.add("kir-\tker", "kh @r\tk @r");
result.add("kir-\tkuk", "kh I@\tk U k");
result.add("kir-\tsten", "kh @r s\tt V n");
result.add("kir-\tstin", "kh @r s\tt I n");
result.add("kir-\tven", "kh @r\tv V n");
result.add("kir-\twin", "kh @r\tw I n");
result.add("kirc-\thoff", "kh @r k\th O: f");
result.add("kirch", "kh @r k");
result.add("kirch-\thoff", "kh @r k\th O: f");
result.add("kirch-\tner", "kh @r k\tn @r");
result.add("kirk", "kh @r k");
result.add("kirk-\tby", "kh @r k\tb i:");
result.add("kirk-\tland", "kh @r k\tl V n d");
result.add("kirk-\tland's", "kh @r k\tl V n d z");
result.add("kirk-\tlin", "kh @r k\tl I n");
result.add("kirk-\tman", "kh @r k\tm V n");
result.add("kirk-\tpat-\trick", "kh @r k\tp { t\tr I k");
result.add("kirk-\tsey", "kh @r k\ts i:");
result.add("kirk-\twood", "kh @r k\tw U d");
result.add("kirks", "kh @r k s");
result.add("kirk's", "kh @r k s");
result.add("kirn", "kh @r n");
result.add("kirsch", "kh @r S");
result.add("kirsch-\tner", "kh @r S\tn @r");
result.add("kirsh-\tbaum", "kh @r S\tb aU m");
result.add("kirst", "kh @r s t");
result.add("kirt", "kh @r t");
result.add("kirt-\tland", "kh @r t\tl V n d");
result.add("kirt-\tley", "kh @r t\tl i:");
result.add("kis-\tma-\tyu", "kh I s\tm Q\tj u:");
result.add("kis-\tmet", "kh I z\tm e t");
result.add("kis-\tmets", "kh I z\tm e t s");
result.add("kis-\tsee", "kh I\ts i:");
result.add("kis-\tsel", "kh I\ts V l");
result.add("kis-\tser", "kh I\ts @r");
result.add("kis-\tses", "kh I\ts V z");
result.add("kis-\tsim-\tmee", "kh I\ts I\tm i:");
result.add("kis-\tsin-\tger", "kh I\ts I n\tdZ @r");
result.add("kis-\tsin-\tger's", "kh I\ts I n\tdZ @r z");
result.add("kis-\tsing", "kh I\ts I N");
result.add("kish", "kh I S");
result.add("kiss", "kh I s");
result.add("kiss-\tner", "kh I s\tn @r");
result.add("kissed", "kh I s t");
result.add("kist", "kh I s t");
result.add("kist-\tler", "kh I s\tt l @r");
result.add("kist-\tner", "kh I s\tt n @r");
result.add("kit", "kh I t");
result.add("kit-\tcat", "kh I t\tk { t");
result.add("kit-\tche-\tner", "kh I\ttS V\tn @r");
result.add("kit-\tche-\tnette", "kh I\ttS V\tn e t");
result.add("kit-\tchen", "kh I\ttS V n");
result.add("kit-\tchen-\tware", "kh I\ttS V n\tw e@");
result.add("kit-\tchens", "kh I\ttS V n z");
result.add("kit-\tchen's", "kh I\ttS V n z");
result.add("kit-\tchin", "kh I\ttS I n");
result.add("kit-\tching", "kh I\ttS I N");
result.add("kit-\tt-\tler", "kh I\tt V\tl @r");
result.add("kit-\ttel", "kh I\tt V l");
result.add("kit-\tten", "kh I\tt V n");
result.add("kit-\ttens", "kh I\tt V n z");
result.add("kit-\tti-\twake", "kh I\tt I\tw eI k");
result.add("kit-\ttle", "kh I\tt V l");
result.add("kit-\ttles", "kh I\tt V l z");
result.add("kit-\tty", "kh I\tt i:");
result.add("kite", "kh aI t");
result.add("kites", "kh aI t s");
result.add("kits", "kh I t s");
result.add("kitsch", "kh I tS");
result.add("kitt", "kh I t");
result.add("kitt-\tredge", "kh I t\tr I dZ");
result.add("kitt-\trell", "kh I t\tr V l");
result.add("kitts", "kh I t s");
result.add("kitz-\tmil-\tler", "kh I t\ts m I\tl @r");
result.add("klan", "kh l { n");
result.add("klang", "kh l { N");
result.add("klans", "kh l { n z");
result.add("klan's", "kh l { n z");
result.add("klans-\tman", "kh l { n\tz m V n");
result.add("klans-\tmen", "kh l { n\tz m e n");
result.add("klapp", "kh l { p");
result.add("klatt", "kh l { t");
result.add("klau-\tber", "kh l aU\tb @r");
result.add("klaus", "kh l aU s");
result.add("klay-\tman", "kh l eI\tm V n");
result.add("kle-\tber", "kh l i:\tb @r");
result.add("kle-\tmens", "kh l e\tm V n s");
result.add("kle-\tment", "kh l e\tm V n t");
result.add("kle-\tpac", "kh l e\tp V k");
result.add("klec-\tka", "kh l e\tk V");
result.add("klee", "kh l i:");
result.add("klee-\tman", "kh l i:\tm V n");
result.add("klee-\tnex", "kh l i:\tn V k s");
result.add("klee's", "kh l i: z");
result.add("klei-\tber", "kh l aI\tb @r");
result.add("klei-\tman", "kh l aI\tm V n");
result.add("klein", "kh l aI n");
result.add("klein's", "kh l aI n z");
result.add("kleist", "kh l aI s t");
result.add("klemm", "kh l e m");
result.add("klemme", "kh l e m");
result.add("klenk", "kh l e N k");
result.add("kleve", "kh l i: v");
result.add("klez-\tmer", "kh l e z\tm @r");
result.add("kli-\tment", "kh l aI\tm V n t");
result.add("klick", "kh l I k");
result.add("klieg", "kh l i: g");
result.add("klin-\tgel", "kh l I N\tg V l");
result.add("klin-\tger", "kh l I\tN @r");
result.add("klin-\tger's", "kh l I\tN @r z");
result.add("klin-\tgon", "kh l I N\td V n");
result.add("klin-\tker", "kh l I N\tk @r");
result.add("kline", "kh l aI n");
result.add("kling", "kh l I N");
result.add("kloc", "kh l Q k");
result.add("klom", "kh l O: m");
result.add("klon-\tdike", "kh l Q n\td aI k");
result.add("klos", "kh l Q s");
result.add("klos-\tter", "kh l O: s\tt @r");
result.add("kloss-\tner", "kh l Q s\tn @r");
result.add("klotz", "kh l Q t s");
result.add("klu-\tge's", "kh l u:\tdZ V z");
result.add("kluck", "kh l V k");
result.add("klug", "kh l V g");
result.add("kluge", "kh l u: dZ");
result.add("klump", "kh l V m p");
result.add("klunk", "kh l V N k");
result.add("klute", "kh l u: t");
result.add("klutz", "kh l V t s");
result.add("klux", "kh l V k s");
result.add("knab", "n { b");
result.add("knack", "n { k");
result.add("knacks", "n { k s");
result.add("knap-\tper", "n {\tp @r");
result.add("knap-\tsack", "n { p\ts { k");
result.add("knape", "n eI p");
result.add("knapp", "n { p");
result.add("knapp's", "n { p s");
result.add("knau-\ter", "n aU\t@r");
result.add("knave", "n eI v");
result.add("knaves", "n eI v z");
result.add("knea-\tding", "n i:\td I N");
result.add("knead", "n i: d");
result.add("knee", "n i:");
result.add("knee-\tcap", "n i:\tk { p");
result.add("knee-\tcaps", "n i:\tk { p s");
result.add("knee-\tland", "n i:\tl V n d");
result.add("knee-\tling", "n i:\tl I N");
result.add("kneed", "n i: d");
result.add("kneel", "n i: l");
result.add("knees", "n i: z");
result.add("knel-\tler", "n e\tl @r");
result.add("knell", "n e l");
result.add("knelt", "n e l t");
result.add("knep-\tper", "n e\tp @r");
result.add("knes-\tset", "n e\ts V t");
result.add("knew", "n u:");
result.add("kni-\tfing", "n aI\tf I N");
result.add("kni-\tfings", "n aI\tf I N z");
result.add("knic-\tker", "n I\tk @r");
result.add("knic-\tker-\tboc-\tker", "n I\tk @r\tb Q\tk @r");
result.add("knic-\tker-\tboc-\tkered", "n I\tk @r\tb Q\tk @r d");
result.add("knic-\tker-\tboc-\tkers", "n I\tk @r\tb Q\tk @r z");
result.add("knic-\tkers", "n I\tk @r z");
result.add("knick", "n I k");
result.add("knick-\tknack", "n I k\tn { k");
result.add("knick-\tknacks", "n I k\tn { k s");
result.add("knicks", "n I k s");
result.add("knie-\trim", "n I@\tI m");
result.add("knies", "n aI z");
result.add("knife", "n aI f");
result.add("knife-\tlike", "n aI f\tl aI k");
result.add("knife-\tpoint", "n aI f\tp OI n t");
result.add("knifed", "n aI f t");
result.add("knigh-\tted", "n aI\tt V d");
result.add("knigh-\tton", "n aI\tt V n");
result.add("knight", "n aI t");
result.add("knight-\thood", "n aI t\th U d");
result.add("knight-\tly", "n aI t\tl i:");
result.add("knights", "n aI t s");
result.add("knight's", "n aI t s");
result.add("knip-\tpa", "n I\tp V");
result.add("knipe", "n aI p");
result.add("knit", "n I t");
result.add("knit-\tted", "n I\tt V d");
result.add("knit-\tter", "n I\tt @r");
result.add("knit-\tting", "n I\tt I N");
result.add("knit-\ttle", "n I\tt V l");
result.add("knit-\twear", "n I t\tw e@");
result.add("knits", "n I t s");
result.add("knives", "n aI v z");
result.add("kno-\tbel", "n @U\tb V l");
result.add("kno-\twer", "n @U\t@r");
result.add("kno-\twing", "n @U\tI N");
result.add("kno-\twing-\tly", "n @U\tI N\tl i:");
result.add("kno-\tx's", "n Q k\ts V z");
result.add("knob", "n Q b");
result.add("knob-\tby", "n Q\tb i:");
result.add("knob-\tloch", "n Q b\tl V k");
result.add("knobs", "n Q b z");
result.add("knoc-\tking", "n Q\tk I N");
result.add("knock", "n Q k");
result.add("knock-\tdown", "n Q k\td aU n");
result.add("knock-\toff", "n Q\tk O: f");
result.add("knock-\toffs", "n Q\tk O: f s");
result.add("knock-\tout", "n Q\tk aU t");
result.add("knocked", "n Q k t");
result.add("knocks", "n Q k s");
result.add("knoke", "n @U k");
result.add("knoll", "n @U l");
result.add("knoll's", "n @U l z");
result.add("knoop", "n u: p");
result.add("knop", "n Q p");
result.add("knopf", "n Q p f");
result.add("knorr", "n O@");
result.add("knot", "n Q t");
result.add("knot-\tted", "n Q\tt V d");
result.add("knot-\tty", "n Q\tt i:");
result.add("knots", "n Q t s");
result.add("knott", "n Q t");
result.add("knott's", "n Q t s");
result.add("know", "n @U");
result.add("know-\tled-\tgea-\tble", "n Q\tl V\tdZ V\tb V l");
result.add("know-\tled-\tgeab-\tly", "n Q\tl I\tdZ V b\tl i:");
result.add("know-\tledge", "n Q\tl V dZ");
result.add("knowl-\tton", "n @U l\tt V n");
result.add("knowles", "n @U l z");
result.add("known", "n @U n");
result.add("knowns", "n @U n z");
result.add("knows", "n @U z");
result.add("knox", "n Q k s");
result.add("knox-\tville", "n Q k\ts v I l");
result.add("knuc-\tkle", "n V\tk V l");
result.add("knuc-\tkled", "n V\tk V l d");
result.add("knuc-\tkles", "n V\tk V l z");
result.add("ko", "kh @U");
result.add("ko-\tdi-\tak", "kh @U\td i:\t{ k");
result.add("ko-\then", "kh @U\tV n");
result.add("ko-\tjak", "kh @U\tdZ { k");
result.add("ko-\tji", "kh @U\tdZ i:");
result.add("ko-\tji-\tma", "kh V\tj aI\tm V");
result.add("ko-\tkan", "kh @U\tk V n");
result.add("ko-\tker", "kh @U\tk @r");
result.add("ko-\tko", "kh @U\tk @U");
result.add("ko-\tko-\tmo", "kh @U\tk V\tm @U");
result.add("ko-\tko's", "kh @U\tk @U z");
result.add("ko-\tkosch-\tka", "kh V\tk O: S\tk V");
result.add("ko-\tlar", "kh @U\tl @r");
result.add("ko-\tlin-\tski", "kh V\tl I n\ts k i:");
result.add("ko-\tlo-\tski", "kh V\tl aU s\tk i:");
result.add("ko-\tma-\tra", "kh @U\tm Q@\tV");
result.add("ko-\tma-\trek", "kh @U\tm Q@\te k");
result.add("ko-\tmi", "kh @U\tm i:");
result.add("ko-\tmo-\tdo", "kh V\tm @U\td @U");
result.add("ko-\tmu-\tra", "kh @U\tm U@\tV");
result.add("ko-\tnig", "kh Q\tn I g");
result.add("ko-\tno", "kh @U\tn @U");
result.add("ko-\tnop-\tka", "kh V\tn @U p\tk V");
result.add("ko-\tpec", "kh @U\tp I k");
result.add("ko-\tpek", "kh @U\tp V k");
result.add("ko-\tpeks", "kh @U\tp V k s");
result.add("ko-\tra", "kh O@\tV");
result.add("ko-\tra-\tnic", "kh O@\t{\tn I k");
result.add("ko-\tral", "kh O@\tV l");
result.add("ko-\tran", "kh O@\tQ n");
result.add("ko-\tre-\ta", "kh O@\ti:\tV");
result.add("ko-\tre-\tan", "kh O@\ti:\tV n");
result.add("ko-\tre-\tans", "kh O@\ti:\tV n z");
result.add("ko-\tre-\ta's", "kh O@\ti:\tV z");
result.add("ko-\tren", "kh O@\tV n");
result.add("ko-\trey", "kh O@\ti:");
result.add("ko-\tro-\tna", "kh @r\t@U\tn V");
result.add("ko-\tru-\tna", "kh O@\tu:\tn V");
result.add("ko-\try", "kh O@\ti:");
result.add("ko-\tsak", "kh @U\ts V k");
result.add("ko-\tsel", "kh @U\ts V l");
result.add("ko-\tser", "kh @U\tz @r");
result.add("ko-\tsher", "kh @U\tS @r");
result.add("ko-\tsin", "kh @U\ts I n");
result.add("ko-\tso-\tvo", "kh @U\ts @U\tv @U");
result.add("ko-\tsy-\tgin", "kh @U\ts I\tg I n");
result.add("ko-\tto", "kh @U\tt @U");
result.add("ko-\tvacs", "kh @U\tv { k s");
result.add("ko-\tval", "kh @U\tv V l");
result.add("ko-\tvar", "kh @U\tv @r");
result.add("ko-\twa-\tlew-\tski", "kh aU\tV\tl e f\ts k i:");
result.add("ko-\twal", "kh aU\tV l");
result.add("ko-\twal-\tski", "kh V\tw Q l\ts k i:");
result.add("ko-\tziel", "kh Q\tz i: l");
result.add("ko-\tzo", "kh @U\tz @U");
result.add("koe-\tnig", "kh @r\tn I g");
result.add("koe-\tnigs-\tberg", "kh @U\tn I g\tz b @r g");
result.add("koe-\tst-\tler", "kh @U\ts V\tl @r");
result.add("koeh-\tler", "kh @U\tl @r");
result.add("koep-\tpel", "kh @U\tp V l");
result.add("koer-\tner", "kh O@\tn @r");
result.add("kof-\tf-\tler", "kh Q\tf V\tl @r");
result.add("koff", "kh O: f");
result.add("koff-\tman", "kh O: f\tm V n");
result.add("koh", "kh @U");
result.add("koh-\tler", "kh @U\tl @r");
result.add("kohl", "kh @U l");
result.add("kohls", "kh @U l z");
result.add("kohl's", "kh @U l z");
result.add("kohn", "kh Q n");
result.add("kol", "kh @U l");
result.add("kol-\tler", "kh Q\tl @r");
result.add("kolb", "kh @U l b");
result.add("kolbe", "kh @U l b");
result.add("kolk", "kh @U k");
result.add("kom-\tso-\tmol", "kh Q m\ts @U\tm V l");
result.add("kom-\tso-\tmol's", "kh Q m\ts @U\tm V l z");
result.add("kon", "kh Q n");
result.add("kon-\tdo", "kh Q n\td @U");
result.add("kon-\trad", "kh Q n\tr V d");
result.add("kong", "kh O: N");
result.add("kong's", "kh O: N z");
result.add("kons-\ttan-\ttin", "kh Q n\ts t V n\tt i: n");
result.add("koo", "kh u:");
result.add("koo-\tky", "kh u:\tk i:");
result.add("koo-\tning", "kh u:\tn I N");
result.add("koo-\tte-\tnay", "kh u:\tt V\tn eI");
result.add("kook", "kh u: k");
result.add("kooks", "kh u: k s");
result.add("koontz", "kh u: n t s");
result.add("kop-\tpel", "kh Q\tp V l");
result.add("kop-\tpel's", "kh Q\tp V l z");
result.add("kop-\tpen", "kh Q\tp V n");
result.add("kop-\tpers", "kh Q\tp @r z");
result.add("kop-\tple", "kh Q\tp V l");
result.add("kopp", "kh Q p");
result.add("kops", "kh Q p s");
result.add("kor-\tbel", "kh O@\tb V l");
result.add("kor-\tda", "kh O@\td V");
result.add("kor-\tman", "kh O@\tm V n");
result.add("kor-\try", "kh O@\ti:");
result.add("kor-\try's", "kh O@\ti: z");
result.add("kor-\tten", "kh O@\tt V n");
result.add("korff", "kh O@ f");
result.add("korn-\tberg", "kh O@ n\tb @r g");
result.add("korns", "kh O: n z");
result.add("kort", "kh O@ t");
result.add("kos", "kh Q s");
result.add("kos-\tsuth", "kh Q\ts V T");
result.add("koss", "kh O: s");
result.add("kotz", "kh Q t s");
result.add("kou-\trou", "kh u:\tr u:");
result.add("kow-\ttow", "kh aU\tt aU");
result.add("koz-\tlo-\tski", "kh V z\tl aU s\tk i:");
result.add("kra-\tkow", "kh r Q\tk aU");
result.add("kra-\tmer", "kh r eI\tm @r");
result.add("kra-\tmer's", "kh r eI\tm @r z");
result.add("krae-\tmer", "kh r e\tm @r");
result.add("krafft", "kh r { f t");
result.add("kraft", "kh r { f t");
result.add("kraft's", "kh r { f t s");
result.add("kragh", "kh r { g");
result.add("kral", "kh r { l");
result.add("krall", "kh r O: l");
result.add("kram", "kh r { m");
result.add("kram-\tlich", "kh r { m\tl I k");
result.add("krans", "kh r { n z");
result.add("krantz", "kh r { n t s");
result.add("kranz", "kh r { n z");
result.add("kras", "kh r { s");
result.add("kras-\tka", "kh r Q s\tk V");
result.add("kras-\tner", "kh r { s\tn @r");
result.add("kras-\tno-\tyarsk", "kh r { s\tn OI\tQ@ s k");
result.add("kras-\tnoff", "kh r { s\tn O: f");
result.add("kras-\tny", "kh r { z\tn i:");
result.add("kraus", "kh r aU s");
result.add("krause", "kh r O: s");
result.add("krauss", "kh r aU s");
result.add("kraut", "kh r aU t");
result.add("kraw-\tczyk", "kh r Q v\ttS I k");
result.add("kre-\tmer", "kh r i:\tm @r");
result.add("kre-\tnek", "kh r e\tn I k");
result.add("krea-\tger", "kh r i:\tg @r");
result.add("krea-\tmer", "kh r i:\tm @r");
result.add("kreb-\ts's", "kh r e b\tz V z");
result.add("krebs", "kh r e b z");
result.add("kreg", "kh r e g");
result.add("krei-\tner", "kh r aI\tn @r");
result.add("krein", "kh r eI n");
result.add("kreis", "kh r i: z");
result.add("kreis-\tler", "kh r aI s\tl @r");
result.add("kreit-\tman", "kh r aI t\tm V n");
result.add("krell", "kh r e l");
result.add("krem-\tli-\tno-\tlo-\tgist", "kh r e m\tl I\tn Q\tl V\tdZ I s t");
result.add("krem-\tli-\tno-\tlo-\tgists", "kh r e m\tl I\tn Q\tl V\tdZ I s t s");
result.add("krem-\tlin", "kh r e m\tl I n");
result.add("krem-\tlin's", "kh r e m\tl I n z");
result.add("krenn", "kh r e n");
result.add("kres-\tge", "kh r e s\tg i:");
result.add("kress", "kh r e s");
result.add("kretch-\tmer", "kh r e tS\tm @r");
result.add("kreu-\tzer", "kh r u:\tz @r");
result.add("kri-\tko-\tri-\tan", "kh r I\tk O@\ti:\tV n");
result.add("kri-\tscher", "kh r I\tS @r");
result.add("krie-\tger", "kh r i:\tg @r");
result.add("krie-\tger's", "kh r i:\tg @r z");
result.add("krieg", "kh r i: g");
result.add("krill", "kh r I l");
result.add("krim", "kh r I m");
result.add("kris", "kh r I s");
result.add("kris-\tpies", "kh r I s\tp i: z");
result.add("kris-\tta", "kh r I s\tt V");
result.add("kris-\tten", "kh r I\ts V n");
result.add("kris-\tti", "kh r I s\tt i:");
result.add("kris-\ttie", "kh r I s\tt i:");
result.add("kris-\ttin", "kh r I s\tt I n");
result.add("kris-\ttine", "kh r I s\tt i: n");
result.add("kris-\tti's", "kh r I s\tt i: z");
result.add("kris-\ttof", "kh r I s\tt V f");
result.add("kris-\tty", "kh r I s\tt i:");
result.add("krish-\tna", "kh r I S\tn V");
result.add("kriss", "kh r I s");
result.add("kro-\tger", "kh r @U\tg @r");
result.add("kro-\tger's", "kh r @U\tg @r z");
result.add("kro-\tna", "kh r @U\tn V");
result.add("kro-\tne", "kh r @U\tn V");
result.add("kro-\tnen", "kh r @U\tn V n");
result.add("kro-\tner", "kh r @U\tn @r");
result.add("kro-\tnick", "kh r Q\tn I k");
result.add("kro-\tnor", "kh r @U\tn @r");
result.add("kro-\tnos", "kh r @U\tn @U s");
result.add("kroc", "kh r Q k");
result.add("krock", "kh r Q k");
result.add("kroc's", "kh r Q k s");
result.add("kroe-\tber", "kh r @U\tb @r");
result.add("kroe-\tber's", "kh r @U\tb @r z");
result.add("krogh", "kh r @U");
result.add("kroll", "kh r O: l");
result.add("krome", "kh r @U m");
result.add("kroon", "kh r u: n");
result.add("kru-\tger", "kh r u:\tg @r");
result.add("kru-\tger-\trand", "kh r u:\tg e@\t{ n d");
result.add("krue-\tger", "kh r u:\tg @r");
result.add("krug", "kh r V g");
result.add("krum", "kh r V m");
result.add("krupp", "kh r V p");
result.add("krupp's", "kh r V p s");
result.add("kruse", "kh r u: z");
result.add("krutz", "kh r V t s");
result.add("kryp-\tton", "kh r I p\tt Q n");
result.add("k's", "kh eI z");
result.add("ku", "kh u:");
result.add("ku-\tba", "kh j u:\tb V");
result.add("ku-\tban", "kh j u:\tb V n");
result.add("ku-\tbi-\tak", "kh u:\tb i:\t{ k");
result.add("ku-\tbis", "kh u:\tb I s");
result.add("ku-\tdos", "kh u:\td @U s");
result.add("ku-\tdzu", "kh V d\tz u:");
result.add("ku-\tgel", "kh u:\tg V l");
result.add("ku-\tla", "kh u:\tl V");
result.add("ku-\tma-\tga-\ti", "kh u:\tm Q\tg Q\ti:");
result.add("ku-\tmar", "kh u:\tm Q@");
result.add("ku-\tna", "kh j u:\tn V");
result.add("ku-\tnin", "kh j u:\tn I n");
result.add("ku-\to", "kh u:\t@U");
result.add("ku-\tril", "kh @r\tI l");
result.add("ku-\tro-\tsa-\twa", "kh U@\t@U\ts Q\tw V");
result.add("ku-\tsa", "kh u:\tz V");
result.add("ku-\twai-\tti", "kh u:\tw eI\tt i:");
result.add("ku-\twai-\ttis", "kh u:\tw eI\tt i: z");
result.add("ku-\twait", "kh u:\tw eI t");
result.add("ku-\twait's", "kh u:\tw eI t s");
result.add("kua-\tla", "kh w Q\tl V");
result.add("kuan", "kh w Q n");
result.add("kub-\trick", "kh j u: b\tr I k");
result.add("kub-\trick's", "kh j u: b\tr I k s");
result.add("kuch", "kh V tS");
result.add("kueh-\tnel", "kh U\tn V l");
result.add("kuehn", "kh u: n");
result.add("kuhl-\tman", "kh u: l\tm V n");
result.add("kuhn", "kh u: n");
result.add("kul-\tkar-\tni", "kh V l\tk Q@\tn i:");
result.add("kul-\tla", "kh V\tl V");
result.add("kum-\tler", "kh V m\tl @r");
result.add("kum-\tmer", "kh V\tm @r");
result.add("kum-\tquat", "kh V m\tk w Q t");
result.add("kun", "kh V n");
result.add("kun-\tde-\tra", "kh V n\td e@\tV");
result.add("kun-\tkle", "kh V N\tk V l");
result.add("kung", "kh V N");
result.add("kunz", "kh V n z");
result.add("kuo-\tmin-\ttang", "kh w @U\tm I n\tt { N");
result.add("kuo-\tmin-\ttang's", "kh w @U\tm I n\tt { N z");
result.add("kup-\tper", "kh V\tp @r");
result.add("kur-\tdis-\ttan", "kh @r\td I s\tt { n");
result.add("kur-\tdish", "kh @r\td I S");
result.add("kur-\tland", "kh @r\tl V n d");
result.add("kur-\tman", "kh @r\tm V n");
result.add("kur-\ttis", "kh @r\tt I s");
result.add("kur-\tza-\twa", "kh U@\tz Q\tw V");
result.add("kurd", "kh @r d");
result.add("kurds", "kh @r d z");
result.add("kurt", "kh @r t");
result.add("kurth", "kh @r T");
result.add("kurtz", "kh @r t s");
result.add("kurtz-\tman", "kh @r t\ts m V n");
result.add("kus", "kh V s");
result.add("kus-\tter", "kh V s\tt @r");
result.add("kusch", "kh V S");
result.add("kush", "kh U S");
result.add("kush-\tner", "kh V S\tn @r");
result.add("kut-\ttab", "kh u:\tt { b");
result.add("kut-\tzer", "kh V t\tz @r");
result.add("kutch", "kh V tS");
result.add("kuz-\tnets", "kh V z\tn e t s");
result.add("kwa-\tzu-\tlu", "kh w Q\tz u:\tl u:");
result.add("kwai", "kh w aI");
result.add("kwan", "kh w Q n");
result.add("kwan-\tza", "kh w Q n\tz V");
result.add("kwan-\tzaa", "kh w Q n\tz V");
result.add("kwang", "kh w Q N");
result.add("kwang-\tju", "kh w Q N\tdZ u:");
result.add("kwok", "kh w Q k");
result.add("kwon", "kh w Q n");
result.add("kyd", "kh I d");
result.add("kyd's", "kh I d z");
result.add("kyes", "kh aI z");
result.add("kyl", "kh aI l");
result.add("kyle", "kh aI l");
result.add("l", "e l");
result.add("l-\ta-\tp-\td", "e\tl eI\tp i:\td i:");
result.add("l-\tc-\ts", "e l\ts i:\te s");
result.add("l-\tp", "e l\tp i:");
result.add("l-\tp-\tn", "e l\tp i:\te n");
result.add("l-\ts", "e\tl e s");
result.add("l-\ts-\td", "e\tl e s\td i:");
result.add("l-\tt-\td", "l0 I\tm V\tt V d");
result.add("l.", "e l");
result.add("la", "l0 Q");
result.add("la-\tba-\tdie", "l0 {\tb V\td i:");
result.add("la-\tban", "l0 eI\tb V n");
result.add("la-\tband", "l0 Q\tb { n d");
result.add("la-\tbar-\tre", "l0 Q\tb Q@\teI");
result.add("la-\tbarge", "l0 {\tb Q@ g");
result.add("la-\tbe-\tling", "l0 eI\tb V\tl I N");
result.add("la-\tbel", "l0 eI\tb V l");
result.add("la-\tbel-\tla", "l0 V\tb e\tl V");
result.add("la-\tbeled", "l0 eI\tb V l d");
result.add("la-\tbelle", "l0 V\tb e l");
result.add("la-\tbelled", "l0 eI\tb V l d");
result.add("la-\tbels", "l0 eI\tb V l z");
result.add("la-\tbel's", "l0 eI\tb V l z");
result.add("la-\tbo-\trer", "l0 eI\tb @r\t@r");
result.add("la-\tbo-\trers", "l0 eI\tb @r\t@r z");
result.add("la-\tbo-\tri-\tous", "l0 V\tb O@\ti:\tV s");
result.add("la-\tbo-\tri-\tous-\tly", "l0 V\tb O@\ti:\tV s\tl i:");
result.add("la-\tbo-\tring", "l0 eI\tb @r\tI N");
result.add("la-\tbor", "l0 eI\tb @r");
result.add("la-\tbored", "l0 eI\tb @r d");
result.add("la-\tbors", "l0 eI\tb @r z");
result.add("la-\tbor's", "l0 eI\tb @r z");
result.add("la-\tbour", "l0 eI\tb aU r");
result.add("la-\tbyr-\tin-\tthine", "l0 {\tb @r\tI n\tT i: n");
result.add("la-\tbyr-\tinth", "l0 {\tb @r\tI n T");
result.add("la-\tce-\tra-\ttion", "l0 {\ts @r\teI\tS V n");
result.add("la-\tce-\tra-\ttions", "l0 {\ts @r\teI\tS V n z");
result.add("la-\tce-\trate", "l0 {\ts @r\teI t");
result.add("la-\tcer", "l0 eI\ts @r");
result.add("la-\tces", "l0 eI\ts V z");
result.add("la-\tcey", "l0 eI\ts i:");
result.add("la-\tchance", "l0 Q\ttS V n s");
result.add("la-\tco-\tnic", "l0 Q\tk Q\tn I k");
result.add("la-\tcom-\tbe", "l0 Q\tk @U m\tb i:");
result.add("la-\tcoste", "l0 Q\tk O: s t");
result.add("la-\tcy", "l0 eI\ts i:");
result.add("la-\tden", "l0 eI\td V n");
result.add("la-\tder", "l0 eI\td @r");
result.add("la-\tdi-\tno", "l0 V\td i:\tn @U");
result.add("la-\tdies", "l0 eI\td i: z");
result.add("la-\tdies'", "l0 eI\td i: z");
result.add("la-\tding", "l0 eI\td I N");
result.add("la-\tdle", "l0 eI\td V l");
result.add("la-\tdled", "l0 eI\td V l d");
result.add("la-\tdles", "l0 eI\td V l z");
result.add("la-\tdue", "l0 Q d\tw e");
result.add("la-\tdy", "l0 eI\td i:");
result.add("la-\tdy-\tbird", "l0 eI\td i:\tb @r d");
result.add("la-\tdy-\tbug", "l0 eI\td i:\tb V g");
result.add("la-\tdy-\tbugs", "l0 eI\td i:\tb V g z");
result.add("la-\tdy-\tlike", "l0 eI\td i:\tl aI k");
result.add("la-\tdy's", "l0 eI\td i: z");
result.add("la-\tfarge", "l0 Q\tf Q@ dZ");
result.add("la-\tfay-\tette", "l0 Q\tf i:\te t");
result.add("la-\tfite", "l0 Q\tf aI t");
result.add("la-\tfitte", "l0 V\tf I t");
result.add("la-\tfol-\tlette", "l0 {\tf V\tl e t");
result.add("la-\tfon-\ttaine", "l0 {\tf V n\tt eI n");
result.add("la-\tforge", "l0 V\tf O@ g");
result.add("la-\tgan", "l0 {\tg V n");
result.add("la-\tgas-\tse", "l0 Q\tg Q\ts i:");
result.add("la-\tger", "l0 Q\tg @r");
result.add("la-\tgoon", "l0 V\tg u: n");
result.add("la-\tgoons", "l0 V\tg u: n z");
result.add("la-\tgos", "l0 eI\tg O: s");
result.add("la-\tgu-\tna", "l0 V\tg u:\tn V");
result.add("la-\tgu-\tnas", "l0 V\tg u:\tn V z");
result.add("la-\they", "l0 eI\th i:");
result.add("la-\thore", "l0 Q\th O@");
result.add("la-\ti-\tty", "l0 eI\tI\tt i:");
result.add("la-\ting", "l0 Q\tI N");
result.add("la-\tjoie", "l0 { dZ\tw Q");
result.add("la-\tker", "l0 eI\tk @r");
result.add("la-\tkers", "l0 eI\tk @r z");
result.add("la-\tkey", "l0 eI\tk i:");
result.add("la-\tkin", "l0 {\tk I n");
result.add("la-\tkins", "l0 {\tk I n z");
result.add("la-\tko-\tta", "l0 V\tk @U\tt V");
result.add("la-\tko-\ttas", "l0 V\tk @U\tt V z");
result.add("la-\tla", "l0 Q\tl V");
result.add("la-\tlan-\tde", "l0 Q\tl Q n\td i:");
result.add("la-\tli-\tta", "l0 V\tl i:\tt V");
result.add("la-\tma", "l0 Q\tm V");
result.add("la-\tma-\tist", "l0 Q\tm aI\tI s t");
result.add("la-\tmar", "l0 V\tm Q@");
result.add("la-\tmar-\tre", "l0 Q\tm Q@\ti:");
result.add("la-\tmar's", "l0 V\tm Q@ z");
result.add("la-\tmas", "l0 Q\tm V z");
result.add("la-\tma's", "l0 Q\tm V z");
result.add("la-\tmel-\tlar", "l0 V\tm e\tl @r");
result.add("la-\tmen-\tta-\tble", "l0 V\tm e n\tt V\tb V l");
result.add("la-\tmen-\tted", "l0 V\tm e n\tt V d");
result.add("la-\tmen-\tting", "l0 V\tm e n\tt I N");
result.add("la-\tment", "l0 V\tm e n t");
result.add("la-\tments", "l0 V\tm e n t s");
result.add("la-\tmer", "l0 eI\tm @r");
result.add("la-\tmers", "l0 eI\tm @r z");
result.add("la-\tmi-\ta", "l0 eI\tm i:\tV");
result.add("la-\tmi-\tna", "l0 {\tm I\tn V");
result.add("la-\tmi-\tna-\tted", "l0 {\tm I\tn eI\tt I d");
result.add("la-\tmi-\tna-\tting", "l0 {\tm I\tn eI\tt I N");
result.add("la-\tmi-\tnar", "l0 {\tm I\tn @r");
result.add("la-\tmi-\tnate", "l0 {\tm I\tn V t");
result.add("la-\tmi-\tnates", "l0 {\tm I\tn V t s");
result.add("la-\tmi-\tson", "l0 {\tm I\ts V n");
result.add("la-\tmy", "l0 eI\tm i:");
result.add("la-\tna", "l0 {\tn V");
result.add("la-\tna-\tgan", "l0 {\tn V\tg { n");
result.add("la-\tnete", "l0 V\tn i: t");
result.add("la-\tney", "l0 eI\tn i:");
result.add("la-\tni", "l0 Q\tn i:");
result.add("la-\tni-\tus", "l0 eI\tn i:\tV s");
result.add("la-\tnier", "l0 V\tn I@");
result.add("la-\tno-\tlin", "l0 {\tn V\tl V n");
result.add("la-\tnum", "l0 {\tn V m");
result.add("la-\to-\ttian", "l0 eI\t@U\tS V n");
result.add("la-\tos", "l0 Q\t@U s");
result.add("la-\tpa-\tros-\tco-\tpic", "l0 {\tp @r\tQ s\tk V\tp I k");
result.add("la-\tpa-\tros-\tco-\tpy", "l0 {\tp @r\tQ s\tk V\tp i:");
result.add("la-\tpaz", "l0 V\tp O: z");
result.add("la-\tpel", "l0 V\tp e l");
result.add("la-\tpels", "l0 V\tp e l z");
result.add("la-\tpey-\trouse", "l0 {\tp I@\tu: s");
result.add("la-\tpi-\tda-\try", "l0 {\tp I\td e@\ti:");
result.add("la-\tpi-\tne", "l0 Q\tp i:\tn i:");
result.add("la-\tpides", "l0 V\tp aI d z");
result.add("la-\tpin", "l0 {\tp I n");
result.add("la-\tpointe", "l0 V\tp OI n t");
result.add("la-\tporte", "l0 V\tp O@ t");
result.add("la-\tra", "l0 Q@\tV");
result.add("la-\tra-\tmie", "l0 e@\tV\tm i:");
result.add("la-\traine", "l0 @r\teI n");
result.add("la-\tre-\tdo", "l0 @r\teI\td @U");
result.add("la-\tre-\tna", "l0 Q@\te\tn V");
result.add("la-\tri-\tat", "l0 e@\ti:\tV t");
result.add("la-\tri-\tmer", "l0 {\tr I\tm @r");
result.add("la-\tri-\tmore", "l0 Q@\ti:\tm O@");
result.add("la-\tri-\tna", "l0 Q@\ti:\tn V");
result.add("la-\tri-\tne", "l0 Q@\ti:\tn i:");
result.add("la-\tris-\tsa", "l0 Q@\ti:\ts V");
result.add("la-\tro-\tchelle", "l0 {\tr V\tS V l");
result.add("la-\tro-\tse", "l0 Q@\t@U\ts i:");
result.add("la-\true", "l0 @r\tu:");
result.add("la-\tryn-\tge-\tal", "l0 @r\tI n\tdZ i:\tV l");
result.add("la-\tryn-\tgi-\ttis", "l0 e@\tV n\tdZ aI\tt V s");
result.add("la-\trynx", "l0 e@\tI N k s");
result.add("la-\tsa-\tla", "l0 Q\ts Q\tl V");
result.add("la-\tsag-\tna", "l0 Q\ts Q n\tj V");
result.add("la-\tsalle", "l0 V\ts { l");
result.add("la-\tser", "l0 eI\tz @r");
result.add("la-\tsers", "l0 eI\tz @r z");
result.add("la-\tser's", "l0 eI\tz @r z");
result.add("la-\tsher", "l0 {\tS @r");
result.add("la-\tshes", "l0 {\tS V z");
result.add("la-\tshing", "l0 {\tS I N");
result.add("la-\tshings", "l0 {\tS I N z");
result.add("la-\tta", "l0 Q\tt V");
result.add("la-\tta-\tsha", "l0 V\tt Q\tS V");
result.add("la-\tte-\tral", "l0 {\tt @r\tV l");
result.add("la-\tte-\trites", "l0 {\tt @r\taI t s");
result.add("la-\tte-\txes", "l0 eI\tt e k\ts V z");
result.add("la-\tten-\tcy", "l0 eI\tt V n\ts i:");
result.add("la-\ttent", "l0 eI\tt V n t");
result.add("la-\tter", "l0 eI\tt @r");
result.add("la-\ttest", "l0 eI\tt V s t");
result.add("la-\ttex", "l0 eI\tt e k s");
result.add("la-\ttham", "l0 {\tT V m");
result.add("la-\ttham's", "l0 {\tT V m z");
result.add("la-\tthan", "l0 {\tT V n");
result.add("la-\tther", "l0 {\tD @r");
result.add("la-\tthers", "l0 {\tD @r z");
result.add("la-\tti-\tgo", "l0 V\tt i:\tg @U");
result.add("la-\tti-\tmer", "l0 {\tt I\tm @r");
result.add("la-\tti-\tmore", "l0 Q\tt i:\tm O@");
result.add("la-\tti-\tna", "l0 Q\tt i:\tn V");
result.add("la-\tti-\tnate", "l0 {\tt I\tn eI t");
result.add("la-\ttin", "l0 {\tt I n");
result.add("la-\tto-\tna", "l0 Q\tt @U\tn V");
result.add("la-\tto-\tni-\ta", "l0 Q\tt @U\tn i:\tV");
result.add("la-\tto-\tya", "l0 V\tt OI\tV");
result.add("la-\tto-\tya's", "l0 V\tt OI\tV z");
result.add("la-\tton", "l0 {\tt V n");
result.add("la-\ttour", "l0 V\tt U@");
result.add("la-\tva", "l0 Q\tv V");
result.add("la-\tva-\tto-\tries", "l0 {\tv V\tt O@\ti: z");
result.add("la-\tva-\tto-\try", "l0 {\tv V\tt O@\ti:");
result.add("la-\tval", "l0 V\tv Q l");
result.add("la-\tval-\tle", "l0 Q\tv Q\tl i:");
result.add("la-\tve-\try", "l0 eI\tv @r\ti:");
result.add("la-\tvelle", "l0 V\tv e l");
result.add("la-\tven", "l0 eI\tv V n");
result.add("la-\tven-\tder", "l0 {\tv V n\td @r");
result.add("la-\tver", "l0 eI\tv @r");
result.add("la-\tvergne", "l0 V\tv @r n j");
result.add("la-\tverne", "l0 V\tv @r n");
result.add("la-\tvers", "l0 eI\tv @r z");
result.add("la-\tvette", "l0 V\tv e t");
result.add("la-\tvi", "l0 eI\tv i:");
result.add("la-\tvi-\tna", "l0 Q\tv i:\tn V");
result.add("la-\tvi-\tne", "l0 Q\tv i:\tn i:");
result.add("la-\tvi-\tnia", "l0 V\tv I n\tj V");
result.add("la-\tvi-\tshes", "l0 {\tv I\tS V z");
result.add("la-\tvi-\tshing", "l0 {\tv I\tS I N");
result.add("la-\tvish", "l0 {\tv I S");
result.add("la-\tvish-\tly", "l0 {\tv I S\tl i:");
result.add("la-\tvished", "l0 {\tv I S t");
result.add("la-\tvoie", "l0 V v\tw Q");
result.add("la-\tvy", "l0 eI\tv i:");
result.add("la-\twing", "l0 O:\tI N");
result.add("la-\txa-\ttive", "l0 { k\ts V\tt I v");
result.add("la-\txa-\ttives", "l0 { k\ts V\tt I v z");
result.add("la-\txey", "l0 { k\ts i:");
result.add("la-\txi-\tty", "l0 { k\ts I\tt i:");
result.add("la-\tye-\tring", "l0 eI\t@r\tI N");
result.add("la-\tyer", "l0 eI\t@r");
result.add("la-\tyered", "l0 eI\t@r d");
result.add("la-\tyers", "l0 eI\t@r z");
result.add("la-\tza-\tre", "l0 Q\tz Q@\teI");
result.add("la-\tza-\tro", "l0 V\tz Q@\t@U");
result.add("la-\tza-\trus", "l0 {\tz @r\tV s");
result.add("la-\tzar", "l0 eI\tz @r");
result.add("la-\tzear", "l0 V\tz I@");
result.add("la-\tzi-\ter", "l0 eI\tz i:\t@r");
result.add("la-\tzi-\test", "l0 eI\tz i:\tV s t");
result.add("la-\tzi-\tly", "l0 {\tz I\tl i:");
result.add("la-\tzi-\tness", "l0 eI\tz i:\tn V s");
result.add("la-\tzo", "l0 Q\tz @U");
result.add("la-\tzor", "l0 Q\tz O@");
result.add("la-\tzu-\tli", "l0 V\tz u:\tl i:");
result.add("la-\tzu-\tlite", "l0 {\tz V\tl aI t");
result.add("la-\tzy", "l0 eI\tz i:");
result.add("lab", "l0 { b");
result.add("lab-\tra-\tdor", "l0 { b\tr V\td O@");
result.add("labe", "l0 eI b");
result.add("labo-\tra-\tto-\tries", "l0 { b\tr V\tt O@\ti: z");
result.add("labo-\tra-\tto-\try", "l0 { b\tr V\tt O@\ti:");
result.add("labo-\tra-\tto-\try's", "l0 { b\tr V\tt O@\ti: z");
result.add("labs", "l0 { b z");
result.add("lab's", "l0 { b z");
result.add("lac", "l0 { k");
result.add("lac-\tco-\tliths", "l0 {\tk V\tl I T s");
result.add("lac-\tka-\tdai-\tsi-\tcal", "l0 {\tk V\td eI\tz I\tk V l");
result.add("lac-\tka-\twan-\tna", "l0 {\tk V\tw Q\tn V");
result.add("lac-\tkey", "l0 {\tk i:");
result.add("lac-\tkeys", "l0 {\tk i: z");
result.add("lac-\tking", "l0 {\tk I N");
result.add("lac-\tlede", "l0 Q k\tl i: d");
result.add("lac-\tquer", "l0 {\tk @r");
result.add("lac-\tquered", "l0 {\tk @r d");
result.add("lac-\troix", "l0 V k\tr OI");
result.add("lac-\trosse", "l0 V k\tr O: s");
result.add("lac-\tta-\tting", "l0 { k\tt eI\tt I N");
result.add("lac-\tta-\ttion", "l0 { k\tt eI\tS V n");
result.add("lac-\ttase", "l0 { k\tt eI s");
result.add("lac-\ttate", "l0 { k\tt eI t");
result.add("lac-\tteals", "l0 { k\tt i: l z");
result.add("lac-\ttic", "l0 { k\tt I k");
result.add("lac-\tto-\tba-\tcil-\tlus", "l0 { k\tt @U\tb V\ts I\tl V s");
result.add("lac-\ttone", "l0 { k\tt @U n");
result.add("lac-\ttose", "l0 { k\tt @U s");
result.add("lace", "l0 eI s");
result.add("lace-\tfield", "l0 eI s\tf i: l d");
result.add("laced", "l0 eI s t");
result.add("lach", "l0 { tS");
result.add("lach-\tlan", "l0 { k\tl V n");
result.add("lach-\tman", "l0 { k\tm V n");
result.add("lache", "l0 { tS");
result.add("lack", "l0 { k");
result.add("lack-\tlus-\tter", "l0 { k\tl V s\tt @r");
result.add("lacked", "l0 { k t");
result.add("lacks", "l0 { k s");
result.add("lac's", "l0 { k s");
result.add("lad", "l0 { d");
result.add("lad-\tder", "l0 {\td @r");
result.add("lad-\tders", "l0 {\td @r z");
result.add("lad-\tner", "l0 { d\tn @r");
result.add("lad-\tson", "l0 { d\ts V n");
result.add("ladd", "l0 { d");
result.add("ladd's", "l0 { d z");
result.add("lade", "l0 eI d");
result.add("lads", "l0 { d z");
result.add("lae-\tvo", "l0 eI\tv @U");
result.add("laf-\tfer-\tty", "l0 {\tf @r\tt i:");
result.add("laf-\tlam", "l0 V f\tl { m");
result.add("laf-\tleur", "l0 V f\tl @r");
result.add("laf-\trance", "l0 V f\tr { n s");
result.add("laff", "l0 { f");
result.add("lag", "l0 { g");
result.add("lag-\tgard", "l0 {\tg @r d");
result.add("lag-\tgards", "l0 {\tg @r d z");
result.add("lag-\tging", "l0 {\tg I N");
result.add("lag-\trange", "l0 { g\tr eI n dZ");
result.add("lage", "l0 eI dZ");
result.add("lagged", "l0 { g d");
result.add("lags", "l0 { g z");
result.add("lah-\tti", "l0 Q\tt i:");
result.add("lai", "l0 aI");
result.add("laid", "l0 eI d");
result.add("laid-\tlaw", "l0 eI d\tl O:");
result.add("laid-\tlaw's", "l0 eI d\tl O: z");
result.add("lail", "l0 eI l");
result.add("lain", "l0 eI n");
result.add("laine", "l0 eI n");
result.add("lair", "l0 e@");
result.add("laird", "l0 e@ d");
result.add("lais", "l0 eI z");
result.add("lais-\tsez", "l0 eI\tz eI");
result.add("lait", "l0 eI");
result.add("lak", "l0 { k");
result.add("lake", "l0 eI k");
result.add("lake-\tfront", "l0 eI k\tf r V n t");
result.add("lake-\tland", "l0 eI k\tl V n d");
result.add("lake-\tshore", "l0 eI k\tS O@");
result.add("lake-\tside", "l0 eI k\ts aI d");
result.add("lake-\tview", "l0 eI k\tv j u:");
result.add("lake-\twood", "l0 eI k\tw U d");
result.add("lakes", "l0 eI k s");
result.add("lake's", "l0 eI k s");
result.add("lal", "l0 { l");
result.add("lal-\tla", "l0 {\tl V");
result.add("lal-\tly", "l0 {\tl i:");
result.add("lall", "l0 O: l");
result.add("lam", "l0 { m");
result.add("lam-\tbas-\tted", "l0 { m\tb { s\tt V d");
result.add("lam-\tbas-\tting", "l0 { m\tb eI s\tt I N");
result.add("lam-\tbaste", "l0 { m\tb { s t");
result.add("lam-\tbastes", "l0 { m\tb { s t s");
result.add("lam-\tber-\tto", "l0 Q m\tb e@\tt @U");
result.add("lam-\tber-\tton", "l0 { m\tb @r\tt V n");
result.add("lam-\tbert", "l0 { m\tb @r t");
result.add("lam-\tbert-\tson", "l0 { m\tb @r t\ts V n");
result.add("lam-\tbert's", "l0 { m\tb @r t s");
result.add("lam-\tbeth", "l0 { m\tb e T");
result.add("lam-\tbie", "l0 { m\tb i:");
result.add("lam-\tbing", "l0 {\tm I N");
result.add("lam-\tbor-\tghi-\tni", "l0 { m\tb @r\tg i:\tn i:");
result.add("lam-\tbor-\tghi-\tnis", "l0 { m\tb @r\tg i:\tn i: z");
result.add("lam-\tbor-\tghi-\tni's", "l0 { m\tb @r\tg i:\tn i: z");
result.add("lam-\tboy", "l0 { m\tb OI");
result.add("lam-\tbrecht", "l0 { m\tb r I k t");
result.add("lam-\tby", "l0 { m\tb i:");
result.add("lam-\tping", "l0 { m\tp I N");
result.add("lam-\tpoon", "l0 { m\tp u: n");
result.add("lam-\tpooned", "l0 { m\tp u: n d");
result.add("lam-\tpoon's", "l0 { m\tp u: n z");
result.add("lam-\tport", "l0 { m\tp O@ t");
result.add("lam-\tson", "l0 { m\ts V n");
result.add("lamb", "l0 { m");
result.add("lamb-\tda", "l0 { m\td V");
result.add("lambs", "l0 { m z");
result.add("lamb's", "l0 { m z");
result.add("lame", "l0 eI m");
result.add("lame-\tly", "l0 eI m\tl i:");
result.add("lamp-\tligh-\tter", "l0 { m\tp l aI\tt @r");
result.add("lamp-\tligh-\tters", "l0 { m\tp l aI\tt @r z");
result.add("lamp-\tligh-\tter's", "l0 { m\tp l aI\tt @r z");
result.add("lamp-\tman", "l0 { m\tp m V n");
result.add("lamp-\tpost", "l0 { m\tp p @U s t");
result.add("lamp-\tposts", "l0 { m\tp p @U s t s");
result.add("lamp-\trey", "l0 { m\tp r i:");
result.add("lamp-\treys", "l0 { m\tp r i: z");
result.add("lamp-\tron", "l0 { m\tp r V n");
result.add("lamps", "l0 { m p s");
result.add("lan", "l0 { n");
result.add("lan-\tca-\tshire", "l0 { N\tk V\tS aI r");
result.add("lan-\tcas-\tter", "l0 { n\tk { s\tt @r");
result.add("lan-\tcast-\tri-\tan", "l0 { N\tk { s\tt r i:\tV n");
result.add("lan-\tce-\tlot", "l0 { n\ts V\tl Q t");
result.add("lan-\tce-\to-\tlate", "l0 { n\ts i:\tV\tl eI t");
result.add("lan-\tcer", "l0 { n\ts @r");
result.add("lan-\tcers", "l0 { n\ts @r z");
result.add("lan-\tce's", "l0 { n\ts V z");
result.add("lan-\tcet", "l0 { n\ts V t");
result.add("lan-\tcets", "l0 { n\ts V t s");
result.add("lan-\tcet's", "l0 { n\ts V t s");
result.add("lan-\tcing", "l0 { n\ts I N");
result.add("lan-\tda", "l0 { n\td V");
result.add("lan-\tdau", "l0 { n\td aU");
result.add("lan-\tded", "l0 { n\td V d");
result.add("lan-\tder", "l0 { n\td @r");
result.add("lan-\tders", "l0 { n\td @r z");
result.add("lan-\tdess", "l0 { n\td V s");
result.add("lan-\tdi-\tni", "l0 Q n\td i:\tn i:");
result.add("lan-\tdi-\tno", "l0 Q n\td i:\tn @U");
result.add("lan-\tding", "l0 { n\td I N");
result.add("lan-\tdings", "l0 { n\td I N z");
result.add("lan-\tdis", "l0 { n\td I s");
result.add("lan-\tdo", "l0 { n\td @U");
result.add("lan-\tdon", "l0 { n\td V n");
result.add("lan-\tdor", "l0 { n\td @r");
result.add("lan-\tdow-\tner", "l0 { n\td @U\tn @r");
result.add("lan-\tdow-\tners", "l0 { n\td @U\tn @r z");
result.add("lan-\tdrum", "l0 { n\td r V m");
result.add("lan-\tdry", "l0 { n\td r i:");
result.add("lan-\tdry's", "l0 { n\td r i: z");
result.add("lan-\tdy", "l0 { n\td i:");
result.add("lan-\tford", "l0 { n\tf @r d");
result.add("lan-\tgan", "l0 { N\tg V n");
result.add("lan-\tge-\tland", "l0 eI N\tg V\tl V n d");
result.add("lan-\tgel", "l0 eI N\tg V l");
result.add("lan-\tger", "l0 {\tN @r");
result.add("lan-\tgil-\tle", "l0 Q N\tg i:\tl i:");
result.add("lan-\tgill", "l0 { N\tg I l");
result.add("lan-\tgo", "l0 Q N\tg @U");
result.add("lan-\tgua-\tges", "l0 { N\tg w V\tdZ V z");
result.add("lan-\tguage", "l0 { N\tg w V dZ");
result.add("lan-\tgui-\tshes", "l0 { N\tg w I\tS V z");
result.add("lan-\tgui-\tshing", "l0 { N\tg w I\tS I N");
result.add("lan-\tguid", "l0 { N\tg w I d");
result.add("lan-\tguish", "l0 { N\tg w I S");
result.add("lan-\tguished", "l0 { N\tg w I S t");
result.add("lan-\tham", "l0 {\tn V m");
result.add("lan-\tka", "l0 { N\tk V");
result.add("lan-\tkan", "l0 { N\tk V n");
result.add("lan-\tka's", "l0 { N\tk V z");
result.add("lan-\tky", "l0 { N\tk i:");
result.add("lan-\tna", "l0 {\tn V");
result.add("lan-\tners", "l0 {\tn @r z");
result.add("lan-\tni", "l0 {\tn i:");
result.add("lan-\tnon", "l0 {\tn V n");
result.add("lan-\tny", "l0 {\tn i:");
result.add("lan-\tsing", "l0 { n\ts I N");
result.add("lan-\tsing's", "l0 { n\ts I N z");
result.add("lan-\tta-\tna", "l0 { n\tt {\tn V");
result.add("lan-\ttern", "l0 { n\tt @r n");
result.add("lan-\tterns", "l0 { n\tt @r n z");
result.add("lan-\ttha-\tnum", "l0 { n\tT V\tn V m");
result.add("lan-\ttry", "l0 { n\tt r i:");
result.add("lan-\tyard", "l0 { n\tj V r d");
result.add("lan-\tza", "l0 { n\tz V");
result.add("lanc-\ttot", "l0 { N\tk t V t");
result.add("lance", "l0 { n s");
result.add("lance-\tlet", "l0 { n\ts l V t");
result.add("land", "l0 { n d");
result.add("land-\tfall", "l0 { n\td f O: l");
result.add("land-\tfil-\tling", "l0 { n\td f I\tl I N");
result.add("land-\tfill", "l0 { n\td f I l");
result.add("land-\tfills", "l0 { n\td f I l z");
result.add("land-\tform", "l0 { n\td f O@ m");
result.add("land-\tforms", "l0 { n\td f O@ m z");
result.add("land-\tgrave", "l0 { n\td g r eI v");
result.add("land-\thol-\tder", "l0 { n\td h @U l\td @r");
result.add("land-\thol-\tders", "l0 { n\td h @U l\td @r z");
result.add("land-\thol-\tding", "l0 { n\td h @U l\td I N");
result.add("land-\thol-\tdings", "l0 { n\td h @U l\td I N z");
result.add("land-\tla-\tdy", "l0 { n\td l eI\td i:");
result.add("land-\tler", "l0 { n\td l @r");
result.add("land-\tless", "l0 { n\td l V s");
result.add("land-\tlock", "l0 { n\td l Q k");
result.add("land-\tlocked", "l0 { n\td l Q k t");
result.add("land-\tlord", "l0 { n\td l O@ d");
result.add("land-\tlords", "l0 { n\td l O@ d z");
result.add("land-\tlord's", "l0 { n\td l O@ d z");
result.add("land-\tman", "l0 { n\td m V n");
result.add("land-\tmark", "l0 { n\td m Q@ k");
result.add("land-\tmarks", "l0 { n\td m Q@ k s");
result.add("land-\tmark's", "l0 { n\td m Q@ k s");
result.add("land-\tmass", "l0 { n\td m { s");
result.add("land-\tmine", "l0 { n\td m aI n");
result.add("land-\tmines", "l0 { n\td m aI n z");
result.add("land-\tsat", "l0 { n\td s { t");
result.add("land-\tsca-\tper", "l0 { n\td s k eI\tp @r");
result.add("land-\tsca-\tpers", "l0 { n\td s k eI\tp @r z");
result.add("land-\tsca-\tping", "l0 { n\td s k eI\tp I N");
result.add("land-\tscape", "l0 { n\td s k eI p");
result.add("land-\tscaped", "l0 { n\td s k eI p t");
result.add("land-\tscapes", "l0 { n\td s k eI p s");
result.add("land-\tslide", "l0 { n\td s l aI d");
result.add("land-\tslides", "l0 { n\td s l aI d z");
result.add("land-\tward", "l0 { n\td w @r d");
result.add("land-\twehr", "l0 { n\td w I@");
result.add("lande", "l0 { n d");
result.add("landes", "l0 { n d z");
result.add("lands", "l0 { n d z");
result.add("land's", "l0 { n d z");
result.add("lands-\tman", "l0 { n\td z m V n");
result.add("lane", "l0 eI n");
result.add("lanes", "l0 eI n z");
result.add("lane's", "l0 eI n z");
result.add("lang", "l0 { N");
result.add("lang-\tbehn", "l0 { N\tb e n");
result.add("lang-\tdon", "l0 { N\td V n");
result.add("lang-\tford", "l0 { N\tf @r d");
result.add("lang-\tham", "l0 { N\th { m");
result.add("lang-\thans", "l0 { N\th V n z");
result.add("lang-\thorne", "l0 { N\th O@ n");
result.add("lang-\tland", "l0 { N\tl V n d");
result.add("lang-\tley", "l0 { N\tl i:");
result.add("lang-\tlois", "l0 V N\tl w Q");
result.add("lang-\tridge", "l0 { N\tg r I dZ");
result.add("lang-\tton", "l0 { N\tt V n");
result.add("lang-\twor-\tthy", "l0 { N\tw @r\tD i:");
result.add("lange", "l0 { N");
result.add("lange's", "l0 { N z");
result.add("langs-\tton", "l0 { N\ts t V n");
result.add("lank", "l0 { N k");
result.add("lans-\tdale", "l0 { n\tz d eI l");
result.add("lans-\tdowne", "l0 { n\ts d aU n");
result.add("lans-\tford", "l0 { n\ts f @r d");
result.add("lant", "l0 { n t");
result.add("lantz", "l0 { n t s");
result.add("lao", "l0 aU");
result.add("lap", "l0 { p");
result.add("lap-\tdog", "l0 { p\td O: g");
result.add("lap-\tham", "l0 {\tf V m");
result.add("lap-\tland", "l0 { p\tl { n d");
result.add("lap-\tping", "l0 {\tp I N");
result.add("lap-\tses", "l0 { p\ts V z");
result.add("lap-\tsing", "l0 { p\ts I N");
result.add("lap-\ttop", "l0 { p\tt Q p");
result.add("lap-\ttops", "l0 { p\tt Q p s");
result.add("lapp", "l0 { p");
result.add("lapped", "l0 { p t");
result.add("lapps", "l0 { p s");
result.add("laps", "l0 { p s");
result.add("lapse", "l0 { p s");
result.add("lapsed", "l0 { p s t");
result.add("lar", "l0 Q@");
result.add("lar-\tce-\tnous", "l0 Q@\ts V\tn V s");
result.add("lar-\tce-\tny", "l0 Q@\ts V\tn i:");
result.add("lar-\tded", "l0 Q@\td V d");
result.add("lar-\tder", "l0 Q@\td @r");
result.add("lar-\tgen", "l0 Q@\tg V n");
result.add("lar-\tgent", "l0 Q@\tdZ V n t");
result.add("lar-\tger", "l0 Q@\tdZ @r");
result.add("lar-\tgess", "l0 Q@\tdZ V s");
result.add("lar-\tgesse", "l0 Q@\tg e s");
result.add("lar-\tgest", "l0 Q@\tdZ V s t");
result.add("lar-\tgo", "l0 Q@\tg @U");
result.add("lar-\tkin", "l0 Q@\tk I n");
result.add("lar-\tkins", "l0 Q@\tk I n z");
result.add("lar-\tner", "l0 Q@\tn @r");
result.add("lar-\tra-\tbee", "l0 {\tr V\tb i:");
result.add("lar-\tre-\ta", "l0 {\tr i:\tV");
result.add("lar-\try", "l0 e@\ti:");
result.add("lar-\try's", "l0 e@\ti: z");
result.add("lar-\tsen", "l0 Q@\ts V n");
result.add("lar-\tson", "l0 Q@\ts V n");
result.add("lar-\tva", "l0 Q@\tv V");
result.add("lar-\tvae", "l0 Q@\tv i:");
result.add("lar-\tval", "l0 Q@\tv V l");
result.add("larch", "l0 Q@ tS");
result.add("larch-\tmont", "l0 Q@ tS\tm Q n t");
result.add("larch-\tmont's", "l0 Q@ tS\tm Q n t s");
result.add("lard", "l0 Q@ d");
result.add("lard-\tner", "l0 Q@ d\tn @r");
result.add("lare", "l0 e@");
result.add("large", "l0 Q@ dZ");
result.add("large-\tly", "l0 Q@ dZ\tl i:");
result.add("large-\tness", "l0 Q@ dZ\tn V s");
result.add("lark", "l0 Q@ k");
result.add("larks", "l0 Q@ k s");
result.add("larks-\tpur", "l0 Q@ k\ts p @r");
result.add("larned", "l0 Q@ n d");
result.add("lars", "l0 Q@ z");
result.add("las", "l0 Q s");
result.add("las-\tci-\tvi-\tous", "l0 V\ts I\tv i:\tV s");
result.add("las-\tker", "l0 { s\tk @r");
result.add("las-\tki", "l0 Q s\tk i:");
result.add("las-\tko", "l0 { s\tk @U");
result.add("las-\tky", "l0 { s\tk i:");
result.add("las-\tley", "l0 { s\tl i:");
result.add("las-\tsa", "l0 Q\ts V");
result.add("las-\tsen", "l0 {\ts V n");
result.add("las-\tser", "l0 {\ts @r");
result.add("las-\tsi-\tter", "l0 {\ts aI\tt @r");
result.add("las-\tsie", "l0 {\ts i:");
result.add("las-\tso", "l0 {\ts @U");
result.add("las-\tted", "l0 { s\tt V d");
result.add("las-\tter", "l0 { s\tt @r");
result.add("las-\tting", "l0 { s\tt I N");
result.add("lase", "l0 eI z");
result.add("lash", "l0 { S");
result.add("lashed", "l0 { S t");
result.add("lask", "l0 { s k");
result.add("lass", "l0 { s");
result.add("last", "l0 { s t");
result.add("last-\tly", "l0 { s\tt l i:");
result.add("lasts", "l0 { s t s");
result.add("lasz-\tlo", "l0 { z\tl @U");
result.add("lat", "l0 Q t");
result.add("lat-\tches", "l0 {\ttS V z");
result.add("lat-\tching", "l0 {\ttS I N");
result.add("lat-\trine", "l0 V t\tr i: n");
result.add("lat-\trines", "l0 V t\tr i: n z");
result.add("lat-\trobe", "l0 Q t\tr @U b");
result.add("lat-\tta", "l0 {\tt V");
result.add("lat-\tte", "l0 Q\tt eI");
result.add("lat-\tter", "l0 {\tt @r");
result.add("lat-\tter's", "l0 {\tt @r z");
result.add("lat-\tti-\tmer", "l0 {\tt I\tm @r");
result.add("lat-\tti-\tmore", "l0 Q\tt i:\tm O@");
result.add("lat-\ttice", "l0 {\tt I s");
result.add("lat-\ttice-\twork", "l0 {\tt I s\tw @r k");
result.add("lat-\ttin", "l0 {\tt I n");
result.add("lat-\tty", "l0 {\tt i:");
result.add("lat-\tvi-\ta", "l0 { t\tv i:\tV");
result.add("lat-\tvi-\tan", "l0 { t\tv i:\tV n");
result.add("lat-\tvi-\tans", "l0 { t\tv i:\tV n z");
result.add("lat-\tvi-\ta's", "l0 { t\tv i:\tV z");
result.add("latch", "l0 { tS");
result.add("latch-\tkey", "l0 { tS\tk i:");
result.add("latched", "l0 { tS t");
result.add("late", "l0 eI t");
result.add("late-\tco-\tmer", "l0 eI t\tk V\tm @r");
result.add("late-\tco-\tmers", "l0 eI t\tk V\tm @r z");
result.add("late-\tly", "l0 eI t\tl i:");
result.add("late-\tness", "l0 eI t\tn V s");
result.add("lath", "l0 { T");
result.add("lath-\trop", "l0 { T\tr V p");
result.add("lathe", "l0 eI D");
result.add("lathes", "l0 eI D z");
result.add("lats", "l0 Q t s");
result.add("lau", "l0 aU");
result.add("lau-\tber", "l0 aU\tb @r");
result.add("lau-\tda-\tble", "l0 O:\td V\tb V l");
result.add("lau-\tda-\tnum", "l0 O:\td V\tn V m");
result.add("lau-\tda-\tto-\try", "l0 O:\td V\tt O@\ti:");
result.add("lau-\tded", "l0 O:\td V d");
result.add("lau-\tder", "l0 O:\td @r");
result.add("lau-\tder-\tdale", "l0 O:\td @r\td eI l");
result.add("lau-\tding", "l0 O:\td I N");
result.add("lau-\te", "l0 aU\ti:");
result.add("lau-\ter", "l0 aU\t@r");
result.add("lau-\tfer", "l0 O:\tf @r");
result.add("lau-\tgher", "l0 Q\tk @r");
result.add("lau-\tghing", "l0 {\tf I N");
result.add("lau-\tghing-\tly", "l0 {\tf I N\tl i:");
result.add("lau-\tghing-\tstock", "l0 {\tf I N\ts t Q k");
result.add("lau-\tra", "l0 O@\tV");
result.add("lau-\trance", "l0 O@\tV n s");
result.add("lau-\tra's", "l0 O@\tV z");
result.add("lau-\tre-\tate", "l0 O@\ti:\tV t");
result.add("lau-\tre-\tates", "l0 O@\ti:\tV t s");
result.add("lau-\tre-\tna", "l0 O@\te\tn V");
result.add("lau-\treen", "l0 O@\ti: n");
result.add("lau-\trel", "l0 O@\tV l");
result.add("lau-\trels", "l0 O@\tV l z");
result.add("lau-\trel's", "l0 O@\tV l z");
result.add("lau-\tren", "l0 O@\tV n");
result.add("lau-\tren-\ttian", "l0 O@\te n\tS V n");
result.add("lau-\trence", "l0 O@\tV n s");
result.add("lau-\trene", "l0 O@\ti: n");
result.add("lau-\trens", "l0 O@\tV n z");
result.add("lau-\trent", "l0 O@\tV n t");
result.add("lau-\tret-\tta", "l0 @r\te\tt V");
result.add("lau-\trette", "l0 O@\te t");
result.add("lau-\tri", "l0 Q@\ti:");
result.add("lau-\trice", "l0 O@\tI s");
result.add("lau-\trie", "l0 Q@\ti:");
result.add("lau-\trie's", "l0 Q@\ti: z");
result.add("lau-\trin", "l0 O@\tI n");
result.add("lau-\tro", "l0 O@\t@U");
result.add("lau-\try", "l0 O@\ti:");
result.add("lau-\tsanne", "l0 O:\ts { n");
result.add("lau-\tter", "l0 aU\tt @r");
result.add("lau-\tzon", "l0 aU\tz V n");
result.add("lauch", "l0 Q tS");
result.add("laud", "l0 O: d");
result.add("laude", "l0 O: d");
result.add("lauds", "l0 O: d z");
result.add("lauf", "l0 O: f");
result.add("laug-\tha-\tble", "l0 {\tf V\tb V l");
result.add("laugh", "l0 { f");
result.add("laugh-\tlin", "l0 Q k\tl I n");
result.add("laugh-\tter", "l0 { f\tt @r");
result.add("laugh-\tton", "l0 O:\tt V n");
result.add("laughed", "l0 { f t");
result.add("laughs", "l0 { f s");
result.add("laun", "l0 O: n");
result.add("laun-\tce-\tlot", "l0 O: n\ts V\tl Q t");
result.add("laun-\tcher", "l0 O: n\ttS @r");
result.add("laun-\tchers", "l0 O: n\ttS @r z");
result.add("laun-\tches", "l0 O: n\ttS V z");
result.add("laun-\tching", "l0 O: n\ttS I N");
result.add("laun-\tchings", "l0 O: n\ttS I N z");
result.add("laun-\tde-\trer", "l0 O: n\td @r\t@r");
result.add("laun-\tde-\trers", "l0 O: n\td @r\t@r z");
result.add("laun-\tde-\tring", "l0 O: n\td @r\tI N");
result.add("laun-\tder", "l0 O: n\td @r");
result.add("laun-\tdered", "l0 O: n\td @r d");
result.add("launch", "l0 O: n tS");
result.add("launched", "l0 O: n tS t");
result.add("laund-\tries", "l0 O: n\td r i: z");
result.add("laund-\tro-\tmat", "l0 O: n\td r V\tm { t");
result.add("laund-\try", "l0 O: n\td r i:");
result.add("laur", "l0 O@");
result.add("laure", "l0 O@");
result.add("laux", "l0 O: k s");
result.add("lave", "l0 eI v");
result.add("law", "l0 Q");
result.add("law-\tbrea-\tker", "l0 O: b\tr eI\tk @r");
result.add("law-\tbrea-\tkers", "l0 O: b\tr eI\tk @r z");
result.add("law-\tbrea-\tking", "l0 O: b\tr eI\tk I N");
result.add("law-\tford", "l0 O:\tf @r d");
result.add("law-\tful", "l0 O:\tf V l");
result.add("law-\tful-\tly", "l0 O:\tf V\tl i:");
result.add("law-\tler", "l0 O:\tl @r");
result.add("law-\tless", "l0 O:\tl V s");
result.add("law-\tless-\tness", "l0 O:\tl V s\tn V s");
result.add("law-\tley", "l0 O:\tl i:");
result.add("law-\tlor", "l0 O:\tl @r");
result.add("law-\tma-\tker", "l0 O:\tm eI\tk @r");
result.add("law-\tma-\tkers", "l0 O:\tm eI\tk @r z");
result.add("law-\tma-\tker's", "l0 O:\tm eI\tk @r z");
result.add("law-\tma-\tking", "l0 O:\tm eI\tk I N");
result.add("law-\tman", "l0 O:\tm V n");
result.add("law-\tmen", "l0 O:\tm e n");
result.add("law-\tner", "l0 O:\tn @r");
result.add("law-\tren-\tce's", "l0 O@\tV n\ts V z");
result.add("law-\tren-\tci-\tum", "l0 O@\te n\ts i:\tV m");
result.add("law-\trence", "l0 O@\tV n s");
result.add("law-\trence-\tburg", "l0 O@\tV n\ts b @r g");
result.add("law-\trence-\tville", "l0 O@\tV n\ts v I l");
result.add("law-\trie", "l0 O@\ti:");
result.add("law-\try", "l0 O@\ti:");
result.add("law-\tson", "l0 O:\ts V n");
result.add("law-\tson's", "l0 O:\ts V n z");
result.add("law-\tsuit", "l0 O:\ts u: t");
result.add("law-\tsuits", "l0 O:\ts u: t s");
result.add("law-\tsuit's", "l0 O:\ts u: t s");
result.add("law-\tter", "l0 O:\tt @r");
result.add("law-\tton", "l0 O:\tt V n");
result.add("law-\tye-\tring", "l0 O:\tj @r\tI N");
result.add("law-\tyer", "l0 O:\tj @r");
result.add("law-\tyer-\tly", "l0 O:\tj @r\tl i:");
result.add("law-\tyers", "l0 O:\tj @r z");
result.add("law-\tyer's", "l0 O:\tj @r z");
result.add("lawes", "l0 O: z");
result.add("lawn", "l0 O: n");
result.add("lawn-\tmo-\twer", "l0 O: n\tm @U\t@r");
result.add("lawn-\tmo-\twers", "l0 O: n\tm @U\t@r z");
result.add("lawns", "l0 O: n z");
result.add("laws", "l0 O: z");
result.add("law's", "l0 O: z");
result.add("lax", "l0 { k s");
result.add("lay", "l0 eI");
result.add("lay-\tcock", "l0 eI\tk Q k");
result.add("lay-\ting", "l0 eI\tI N");
result.add("lay-\tland", "l0 eI\tl V n d");
result.add("lay-\tman", "l0 eI\tm V n");
result.add("lay-\tman's", "l0 eI\tm V n z");
result.add("lay-\tmen", "l0 eI\tm V n");
result.add("lay-\to-\tver", "l0 eI\t@U\tv @r");
result.add("lay-\to-\tvers", "l0 eI\t@U\tv @r z");
result.add("lay-\toff", "l0 eI\tO: f");
result.add("lay-\toffs", "l0 eI\tO: f s");
result.add("lay-\tout", "l0 eI\taU t");
result.add("lay-\touts", "l0 eI\taU t s");
result.add("lay-\tpeo-\tple", "l0 eI\tp i:\tp V l");
result.add("lay-\tper-\tson", "l0 eI\tp @r\ts V n");
result.add("lay-\tton", "l0 eI\tt V n");
result.add("lay-\tup", "l0 eI\tV p");
result.add("layne", "l0 eI n");
result.add("lays", "l0 eI z");
result.add("lay's", "l0 eI z");
result.add("laz-\tza-\tro", "l0 Q t\ts Q@\t@U");
result.add("le", "l0 V");
result.add("le-\tah", "l0 i:\tV");
result.add("le-\tan-\tder", "l0 i:\t{ n\td @r");
result.add("le-\tan-\tdro", "l0 i:\tQ n\td r @U");
result.add("le-\tann", "l0 i:\t{ n");
result.add("le-\tant", "l0 i:\tV n t");
result.add("le-\tba-\tnese", "l0 e\tb V\tn i: z");
result.add("le-\tba-\tnon", "l0 e\tb V\tn V n");
result.add("le-\tba-\tnon's", "l0 e\tb V\tn V n z");
result.add("le-\tba-\tron", "l0 V\tb e@\tV n");
result.add("le-\tbar", "l0 V\tb Q@");
result.add("le-\tbeau", "l0 V\tb @U");
result.add("le-\tben", "l0 e\tb V n");
result.add("le-\tber", "l0 i:\tb @r");
result.add("le-\tblanc", "l0 V b\tl { N k");
result.add("le-\tbo", "l0 eI\tb @U");
result.add("le-\tbrun", "l0 e b\tr V n");
result.add("le-\tche-\trous", "l0 e\ttS @r\tV s");
result.add("le-\tcher", "l0 e\ttS @r");
result.add("le-\tci-\tthin", "l0 e\ts I\tT I n");
result.add("le-\tcon-\tte", "l0 e\tk @U n\tt i:");
result.add("le-\tcroy", "l0 e k\tr OI");
result.add("le-\tda", "l0 i:\td V");
result.add("le-\tde-\trer", "l0 e\td @r\t@r");
result.add("le-\tdeen", "l0 V\td i: n");
result.add("le-\tdoux", "l0 V\td u:");
result.add("le-\tga-\tcies", "l0 e\tg V\ts i: z");
result.add("le-\tga-\tcy", "l0 e\tg V\ts i:");
result.add("le-\tga-\tlese", "l0 e\tg V\tl i: s");
result.add("le-\tga-\tli-\tsm", "l0 i:\tg V\tl I\tz V m");
result.add("le-\tga-\tli-\tties", "l0 i:\tg {\tl I\tt i: z");
result.add("le-\tga-\tli-\tty", "l0 i:\tg {\tl I\tt i:");
result.add("le-\tga-\tli-\tza-\ttion", "l0 i:\tg V\tl I\tz eI\tS V n");
result.add("le-\tga-\tli-\tzing", "l0 i:\tg V\tl aI\tz I N");
result.add("le-\tga-\tlis-\ttic", "l0 e\tg V\tl I s\tt I k");
result.add("le-\tga-\tlize", "l0 i:\tg V\tl aI z");
result.add("le-\tga-\tlized", "l0 i:\tg V\tl aI z d");
result.add("le-\tga-\tto", "l0 V\tg Q\tt @U");
result.add("le-\tgal", "l0 i:\tg V l");
result.add("le-\tgal-\tly", "l0 i:\tg V\tl i:");
result.add("le-\tgals", "l0 i:\tg V l z");
result.add("le-\tgas-\tpi", "l0 e\tg Q s\tp i:");
result.add("le-\tgate", "l0 e\tg V t");
result.add("le-\tgates", "l0 e\tg V t s");
result.add("le-\tgen-\tda-\try", "l0 e\tdZ V n\td e@\ti:");
result.add("le-\tgen-\tdre", "l0 e\tg V n\td r eI");
result.add("le-\tgend", "l0 e\tdZ V n d");
result.add("le-\tgends", "l0 e\tdZ V n d z");
result.add("le-\tger", "l0 e\tdZ @r");
result.add("le-\tger-\tde-\tmain", "l0 e\tdZ @r\td V\tm eI n");
result.add("le-\tgi-\tbi-\tli-\tty", "l0 e\tdZ V\tb I\tl V\tt i:");
result.add("le-\tgi-\tble", "l0 e\tg I\tb V l");
result.add("le-\tgio-\tna-\tries", "l0 i:\tdZ V\tn e@\ti: z");
result.add("le-\tgion", "l0 i:\tdZ V n");
result.add("le-\tgion-\tnaire", "l0 i:\tdZ V\tn e@");
result.add("le-\tgion-\tnaires", "l0 i:\tdZ V\tn e@ z");
result.add("le-\tgion-\tnaire's", "l0 i:\tdZ V\tn e@ z");
result.add("le-\tgions", "l0 i:\tdZ V n z");
result.add("le-\tgis-\tla-\tted", "l0 e\tdZ I s\tl eI\tt I d");
result.add("le-\tgis-\tla-\tting", "l0 e\tdZ I s\tl eI\tt I N");
result.add("le-\tgis-\tla-\ttion", "l0 e\tdZ I s\tl eI\tS V n");
result.add("le-\tgis-\tla-\ttion's", "l0 e\tdZ I s\tl eI\tS V n z");
result.add("le-\tgis-\tlate", "l0 e\tdZ I s\tl eI t");
result.add("le-\tgis-\tlates", "l0 e\tdZ I s\tl eI t s");
result.add("le-\tgo", "l0 e\tg @U");
result.add("le-\tgume", "l0 e g\tj u: m");
result.add("le-\tgumes", "l0 e g\tj u: m z");
result.add("le-\thigh", "l0 i:\th aI");
result.add("le-\tjeune", "l0 e\tj OI n");
result.add("le-\tla", "l0 i:\tl V");
result.add("le-\tlah", "l0 e\tl V");
result.add("le-\tland", "l0 i:\tl V n d");
result.add("le-\tlia", "l0 i: l\tj V");
result.add("le-\tma", "l0 i:\tm V");
result.add("le-\tmai-\ttre", "l0 V\tm eI\tt @r");
result.add("le-\tman", "l0 i:\tm V n");
result.add("le-\tmans", "l0 e\tm V n z");
result.add("le-\tmar", "l0 I\tm Q@");
result.add("le-\tmas-\tters", "l0 V\tm { s\tt @r z");
result.add("le-\tmay", "l0 e\tm eI");
result.add("le-\tmi-\tre", "l0 eI\tm I@\teI");
result.add("le-\tmieux", "l0 V m\tj u:");
result.add("le-\tming", "l0 i:\tm I N");
result.add("le-\tmo-\tnade", "l0 e\tm V\tn eI d");
result.add("le-\tmon", "l0 e\tm V n");
result.add("le-\tmons", "l0 e\tm V n z");
result.add("le-\tmont", "l0 V\tm Q n t");
result.add("le-\tmue-\tla", "l0 e\tm u:\tl V");
result.add("le-\tmur", "l0 i:\tm @r");
result.add("le-\tmurs", "l0 i:\tm @r z");
result.add("le-\tna", "l0 i:\tn V");
result.add("le-\tnard", "l0 e\tn @r d");
result.add("le-\tna's", "l0 i:\tn V z");
result.add("le-\tni-\tent", "l0 i:\tn i:\te n t");
result.add("le-\tni-\tni-\tsm", "l0 e\tn I\tn I\tz V m");
result.add("le-\tni-\tnist", "l0 e\tn I\tn I s t");
result.add("le-\tnien-\tcy", "l0 i: n\tj e n\ts i:");
result.add("le-\tnient-\tly", "l0 i: n\tj e n\tt l i:");
result.add("le-\tnig", "l0 e\tn I g");
result.add("le-\tnin", "l0 e\tn I n");
result.add("le-\tnin-\tgrad", "l0 e\tn I n\tg r { d");
result.add("le-\tnin's", "l0 e\tn I n z");
result.add("le-\tnis", "l0 i:\tn I s");
result.add("le-\tno", "l0 e\tn @U");
result.add("le-\tno-\tra", "l0 e\tn @r\tV");
result.add("le-\tnore", "l0 V\tn O@");
result.add("le-\tnos", "l0 i:\tn @U z");
result.add("le-\tno's", "l0 e\tn @U z");
result.add("le-\tnox", "l0 e\tn V k s");
result.add("le-\to", "l0 i:\t@U");
result.add("le-\to-\tma", "l0 I\t@U\tm V");
result.add("le-\to-\tmins-\tter", "l0 i:\t@U\tm I n\ts t @r");
result.add("le-\to-\tna", "l0 i:\t@U\tn V");
result.add("le-\to-\tnar-\tdo", "l0 i:\tV\tn Q@\td @U");
result.add("le-\to-\tnel", "l0 i:\t@U\tn V l");
result.add("le-\to-\tnerd", "l0 i:\tV\tn @r d");
result.add("le-\to-\tni", "l0 e\t@U\tn i:");
result.add("le-\to-\tnid", "l0 i:\tV\tn V d");
result.add("le-\to-\tno-\tra", "l0 i:\tV\tn O@\tV");
result.add("le-\to-\tnore", "l0 i:\tV\tn O@");
result.add("le-\to-\tpol-\tdo", "l0 i:\tV\tp @U l\td @U");
result.add("le-\to-\tpold", "l0 i:\tV\tp @U l d");
result.add("le-\to-\ttard", "l0 i:\tV\tt Q@ d");
result.add("le-\toine", "l0 I\tOI n");
result.add("le-\ton", "l0 i:\tQ n");
result.add("le-\ton-\thard", "l0 i:\tV n\th Q@ t");
result.add("le-\ton-\ttyne", "l0 i:\tQ n\tt aI n");
result.add("le-\tone", "l0 i:\t@U n");
result.add("le-\tones", "l0 i:\t@U n z");
result.add("le-\ton's", "l0 i:\tQ n z");
result.add("le-\tos", "l0 i:\t@U z");
result.add("le-\to's", "l0 i:\t@U z");
result.add("le-\tpage", "l0 e\tp I dZ");
result.add("le-\tper", "l0 e\tp @r");
result.add("le-\tpers", "l0 e\tp @r z");
result.add("le-\tpi-\tne", "l0 e\tp i:\tn i:");
result.add("le-\tqui-\tre", "l0 eI k\tw I@\teI");
result.add("le-\troy", "l0 i:\tr OI");
result.add("le-\tsa", "l0 i:\ts V");
result.add("le-\tsage", "l0 e\ts I dZ");
result.add("le-\tsion", "l0 i:\tZ V n");
result.add("le-\tsions", "l0 i:\tZ V n z");
result.add("le-\tso-\ttho", "l0 e\ts @U\tT @U");
result.add("le-\tsue-\tur", "l0 e\ts u:\t@r");
result.add("le-\tta", "l0 e\tt V");
result.add("le-\ttha", "l0 e\tT V");
result.add("le-\ttha-\tli-\tty", "l0 i:\tT {\tl I\tt i:");
result.add("le-\tthal", "l0 i:\tT V l");
result.add("le-\tthar-\tgic", "l0 V\tT Q@\tdZ I k");
result.add("le-\tthar-\tgy", "l0 e\tT @r\tdZ i:");
result.add("le-\tthi-\ta", "l0 e\tT i:\tV");
result.add("le-\tti-\tcia", "l0 V\tt I\tS V");
result.add("le-\tti-\tti-\ta", "l0 V\tt I\tS i:\tV");
result.add("le-\tti-\tzi-\ta", "l0 e\tt i:\tz i:\tV");
result.add("le-\tto", "l0 i:\tt @U");
result.add("le-\ttup", "l0 e\tt V p");
result.add("le-\tva", "l0 e\tv V");
result.add("le-\tva-\tna", "l0 I\tv {\tn V");
result.add("le-\tvan", "l0 e\tv V n");
result.add("le-\tvant", "l0 V\tv { n t");
result.add("le-\tvee", "l0 e\tv i:");
result.add("le-\tvees", "l0 e\tv i: z");
result.add("le-\tvel", "l0 e\tv V l");
result.add("le-\tvi-\tna", "l0 e\tv i:\tn V");
result.add("le-\tvi-\tner", "l0 e\tv I\tn @r");
result.add("le-\tvi-\tson", "l0 e\tv I\ts V n");
result.add("le-\tvi-\tta-\tted", "l0 e\tv I\tt eI\tt I d");
result.add("le-\tvi-\tta-\tting", "l0 e\tv I\tt eI\tt I N");
result.add("le-\tvi-\tta-\ttion", "l0 e\tv I\tt eI\tS V n");
result.add("le-\tvi-\ttan", "l0 e\tv I\tt V n");
result.add("le-\tvi-\ttate", "l0 e\tv I\tt eI t");
result.add("le-\tvi-\tty", "l0 e\tv I\tt i:");
result.add("le-\tvin", "l0 e\tv I n");
result.add("le-\tvin-\tson", "l0 e\tv V n\ts V n");
result.add("le-\tvine", "l0 V\tv i: n");
result.add("le-\tvine's", "l0 V\tv i: n z");
result.add("le-\tvins", "l0 e\tv I n z");
result.add("le-\tvin's", "l0 e\tv I n z");
result.add("le-\tvis", "l0 e\tv V s");
result.add("le-\tvi's", "l0 i:\tv aI z");
result.add("le-\tvit", "l0 e\tv I t");
result.add("le-\tvit-\ttown", "l0 e\tv I\tt aU n");
result.add("le-\tvit-\ttown's", "l0 e\tv I\tt aU n z");
result.add("le-\tvitt", "l0 e\tv I t");
result.add("le-\tvitt's", "l0 e\tv I t s");
result.add("le-\tvy", "l0 e\tv i:");
result.add("le-\tvy-\ting", "l0 e\tv i:\tI N");
result.add("le-\tvy's", "l0 e\tv i: z");
result.add("le-\twan", "l0 u:\tV n");
result.add("le-\twan-\tna", "l0 u:\tV\tn V");
result.add("le-\twel-\tlen", "l0 u:\te\tl V n");
result.add("le-\twel-\tlyn", "l0 u:\te\tl V n");
result.add("le-\twi-\ts's", "l0 u:\tI\ts V z");
result.add("le-\twin", "l0 u:\tI n");
result.add("le-\twin-\tsky", "l0 u:\tI n\ts k i:");
result.add("le-\twing", "l0 u:\tI N");
result.add("le-\twis", "l0 u:\tI s");
result.add("le-\twis-\tburg", "l0 u:\tI s\tb @r g");
result.add("le-\twis-\tton", "l0 u:\tI s\tt V n");
result.add("le-\txi-\tcal", "l0 e k\ts I\tk V l");
result.add("le-\txi-\tcog-\tra-\tpher", "l0 e k\ts I\tk Q g\tr V\tf @r");
result.add("le-\txi-\tcon", "l0 e k\ts I\tk Q n");
result.add("le-\txie", "l0 e k\ts i:");
result.add("le-\txine", "l0 e k\ts aI n");
result.add("le-\txing-\tton", "l0 e k\ts I N\tt V n");
result.add("le-\txis", "l0 e k\ts I s");
result.add("le-\txu-\ts's", "l0 e k\ts V\ts V z");
result.add("le-\txus", "l0 e k\ts V s");
result.add("lea", "l0 i:");
result.add("lea-\tches", "l0 i:\ttS V z");
result.add("lea-\tching", "l0 i:\ttS I N");
result.add("lea-\tch's", "l0 i:\ttS V z");
result.add("lea-\tcock", "l0 i:\tk Q k");
result.add("lea-\tded", "l0 e\td V d");
result.add("lea-\tden", "l0 e\td V n");
result.add("lea-\tder", "l0 i:\td @r");
result.add("lea-\tder-\tless", "l0 i:\td @r\tl V s");
result.add("lea-\tder-\tship", "l0 i:\td @r\tS I p");
result.add("lea-\tder-\tships", "l0 i:\td @r\tS I p s");
result.add("lea-\tder-\tship's", "l0 i:\td @r\tS I p s");
result.add("lea-\tders", "l0 i:\td @r z");
result.add("lea-\tder's", "l0 i:\td @r z");
result.add("lea-\tding", "l0 i:\td I N");
result.add("lea-\tdoff", "l0 i:\td O: f");
result.add("lea-\tfing", "l0 i:\tf I N");
result.add("lea-\tfy", "l0 i:\tf i:");
result.add("lea-\tguer", "l0 i:\tg @r");
result.add("lea-\tguers", "l0 i:\tg @r z");
result.add("lea-\they", "l0 eI\th i:");
result.add("lea-\thy", "l0 eI\th i:");
result.add("lea-\tkage", "l0 i:\tk V dZ");
result.add("lea-\tker", "l0 i:\tk @r");
result.add("lea-\tkers", "l0 i:\tk @r z");
result.add("lea-\tkey", "l0 i:\tk i:");
result.add("lea-\tking", "l0 i:\tk I N");
result.add("lea-\tky", "l0 i:\tk i:");
result.add("lea-\tmer", "l0 i:\tm @r");
result.add("lea-\tming", "l0 i:\tm I N");
result.add("lea-\tner", "l0 i:\tn @r");
result.add("lea-\tners", "l0 i:\tn @r z");
result.add("lea-\tnest", "l0 i:\tn V s t");
result.add("lea-\tning", "l0 i:\tn I N");
result.add("lea-\tnings", "l0 i:\tn I N z");
result.add("lea-\tping", "l0 i:\tp I N");
result.add("lea-\try", "l0 I@\ti:");
result.add("lea-\try's", "l0 I@\ti: z");
result.add("lea-\tsa-\tble", "l0 i:\ts V\tb V l");
result.add("lea-\tser", "l0 i:\ts @r");
result.add("lea-\tses", "l0 i:\ts V z");
result.add("lea-\tse's", "l0 i:\ts V z");
result.add("lea-\tshes", "l0 i:\tS V z");
result.add("lea-\tsing", "l0 i:\ts I N");
result.add("lea-\tsing's", "l0 i:\ts I N z");
result.add("lea-\tsure", "l0 e\tZ @r");
result.add("lea-\tthe-\try", "l0 e\tD @r\ti:");
result.add("lea-\tther", "l0 e\tD @r");
result.add("lea-\tther-\tback", "l0 e\tD @r\tb { k");
result.add("lea-\tther-\tbacks", "l0 e\tD @r\tb { k s");
result.add("lea-\tther-\twood", "l0 e\tD @r\tw U d");
result.add("lea-\tthers", "l0 e\tD @r z");
result.add("lea-\tve-\tning", "l0 e\tv V\tn I N");
result.add("lea-\tvelle", "l0 V\tv e l");
result.add("lea-\tven", "l0 e\tv V n");
result.add("lea-\tven-\tworth", "l0 e\tv V n\tw @r T");
result.add("lea-\tvened", "l0 e\tv V n d");
result.add("lea-\tvens", "l0 e\tv V n z");
result.add("lea-\tver", "l0 i:\tv @r");
result.add("lea-\tver's", "l0 i:\tv @r z");
result.add("lea-\tving", "l0 i:\tv I N");
result.add("lea-\tvings", "l0 i:\tv I N z");
result.add("lea-\tvitt", "l0 e\tv I t");
result.add("lea-\tvy", "l0 i:\tv i:");
result.add("leach", "l0 i: tS");
result.add("leach-\tman", "l0 i: tS\tm V n");
result.add("leached", "l0 i: tS t");
result.add("lead", "l0 i: d");
result.add("lead-\tbel-\tly", "l0 e d\tb e\tl i:");
result.add("lead-\toff", "l0 i:\td O: f");
result.add("lead-\tville", "l0 e d\tv I l");
result.add("lead-\twork", "l0 e d\tw @r k");
result.add("leads", "l0 i: d z");
result.add("leaf", "l0 i: f");
result.add("leaf-\thop-\tper", "l0 i: f\th Q\tp @r");
result.add("leaf-\thop-\tpers", "l0 i: f\th Q\tp @r z");
result.add("leaf-\tless", "l0 i: f\tl V s");
result.add("leaf-\tlet", "l0 i: f\tl V t");
result.add("leaf-\tlets", "l0 i: f\tl V t s");
result.add("leaf-\tlike", "l0 i: f\tl aI k");
result.add("leafed", "l0 i: f t");
result.add("leafs", "l0 i: f s");
result.add("league", "l0 i: g");
result.add("leagues", "l0 i: g z");
result.add("league's", "l0 i: g z");
result.add("leak", "l0 i: k");
result.add("leake", "l0 i: k");
result.add("leaked", "l0 i: k t");
result.add("leaks", "l0 i: k s");
result.add("leal", "l0 i: l");
result.add("lean", "l0 i: n");
result.add("leaned", "l0 i: n d");
result.add("leans", "l0 i: n z");
result.add("leap", "l0 i: p");
result.add("leaped", "l0 e p t");
result.add("leapf-\trog", "l0 i: p\tf r O: g");
result.add("leapf-\trog-\tging", "l0 i: p\tf r O:\tg I N");
result.add("leapf-\trogged", "l0 i: p\tf r O: g d");
result.add("leaps", "l0 i: p s");
result.add("leapt", "l0 e p t");
result.add("lear", "l0 I@");
result.add("lear-\tjet", "l0 I@\tdZ e t");
result.add("lear-\tner", "l0 @r\tn @r");
result.add("lear-\tners", "l0 @r\tn @r z");
result.add("lear-\tning", "l0 @r\tn I N");
result.add("learn", "l0 @r n");
result.add("learned", "l0 @r n d");
result.add("learns", "l0 @r n z");
result.add("learnt", "l0 @r n t");
result.add("lear's", "l0 i: r z");
result.add("leas", "l0 i: z");
result.add("lease", "l0 i: s");
result.add("lease-\tback", "l0 i: s\tb { k");
result.add("lease-\tbacks", "l0 i: s\tb { k s");
result.add("lease-\thold", "l0 i: s\th @U l d");
result.add("leased", "l0 i: s t");
result.add("leash", "l0 i: S");
result.add("leashed", "l0 i: S t");
result.add("least", "l0 i: s t");
result.add("leat-\trice", "l0 i: t\tr I s");
result.add("leath", "l0 i: T");
result.add("leave", "l0 i: v");
result.add("leaves", "l0 i: v z");
result.add("lec-\tkie", "l0 e\tk i:");
result.add("lec-\tlair", "l0 e k\tl @r");
result.add("lec-\tlaire", "l0 I k\tl e@");
result.add("lec-\ttern", "l0 e k\tt @r n");
result.add("lec-\ttor", "l0 e k\tt @r");
result.add("lec-\ttu-\trer", "l0 e k\ttS @r\t@r");
result.add("lec-\ttu-\trers", "l0 e k\ttS @r\t@r z");
result.add("lec-\ttu-\tring", "l0 e k\ttS @r\tI N");
result.add("lec-\tture", "l0 e k\ttS @r");
result.add("lec-\ttured", "l0 e k\ttS @r d");
result.add("lec-\ttures", "l0 e k\ttS @r z");
result.add("lech", "l0 e k");
result.add("lech-\tner", "l0 e k\tn @r");
result.add("leck", "l0 e k");
result.add("leck-\trone", "l0 e k\tr V n");
result.add("led", "l0 e d");
result.add("led-\tbet-\tter", "l0 e d\tb @r\tt @r");
result.add("led-\tden", "l0 e\td V n");
result.add("led-\tdy", "l0 e\td i:");
result.add("led-\tger", "l0 e\tdZ @r");
result.add("led-\tgers", "l0 e\tdZ @r z");
result.add("led-\tges", "l0 e\tdZ V z");
result.add("led-\tyard", "l0 e d\tj @r d");
result.add("ledge", "l0 e dZ");
result.add("lee", "l0 i:");
result.add("lee-\tches", "l0 i:\ttS V z");
result.add("lee-\tco", "l0 i:\tk @U");
result.add("lee-\tna", "l0 i:\tn V");
result.add("lee-\tper", "l0 i:\tp @r");
result.add("lee-\try", "l0 I@\ti:");
result.add("lee-\tser", "l0 i:\ts @r");
result.add("lee-\tward", "l0 i:\tw @r d");
result.add("lee-\tway", "l0 i:\tw eI");
result.add("leech", "l0 i: tS");
result.add("leed", "l0 i: d");
result.add("leed-\ts's", "l0 i: d\tz V z");
result.add("leeds", "l0 i: d z");
result.add("leek", "l0 i: k");
result.add("leeks", "l0 i: k s");
result.add("leep", "l0 i: p");
result.add("lees", "l0 i: z");
result.add("lee's", "l0 i: z");
result.add("lees-\tburg", "l0 i: z\tb @r g");
result.add("leese", "l0 i: s");
result.add("leet", "l0 i: t");
result.add("leeth", "l0 i: T");
result.add("lef-\tfert", "l0 e\tf @r t");
result.add("lef-\tko-\twitz", "l0 e f\tk V\tw I t s");
result.add("lef-\tthan-\tded", "l0 e f\tt h { n\td V d");
result.add("lef-\tthand", "l0 e f\tt h { n d");
result.add("lef-\tti-\tsm", "l0 e f\tt I\tz V m");
result.add("lef-\tties", "l0 e f\tt i: z");
result.add("lef-\ttist", "l0 e f\tt I s t");
result.add("lef-\ttists", "l0 e f\tt I s t s");
result.add("lef-\tton", "l0 e f\tt V n");
result.add("lef-\tty", "l0 e f\tt i:");
result.add("leff", "l0 e f");
result.add("leff's", "l0 e f s");
result.add("left", "l0 e f t");
result.add("left-\than-\tded", "l0 e f\tt h { n\td V d");
result.add("left-\thand", "l0 e f\tt h { n d");
result.add("left-\to-\tver", "l0 e f\tt @U\tv @r");
result.add("left-\to-\tvers", "l0 e f\tt @U\tv @r z");
result.add("left-\tward", "l0 e f\tt w @r d");
result.add("left-\twich", "l0 e f\tt w I k");
result.add("left-\twin-\tger", "l0 e f\tt w I\tN @r");
result.add("left-\twin-\tgers", "l0 e f\tt w I\tN @r z");
result.add("left-\twing", "l0 e f\tt w I N");
result.add("leg", "l0 e g");
result.add("leg-\tged", "l0 e\tg V d");
result.add("leg-\tgett", "l0 e\tg e t");
result.add("leg-\tging", "l0 e\tg I N");
result.add("leg-\tgings", "l0 e\tg I N z");
result.add("leg-\tgy", "l0 e\tg i:");
result.add("leg-\thorn", "l0 e g\th O@ n");
result.add("leg-\thorns", "l0 e g\th O@ n z");
result.add("leg-\trand", "l0 e g\tr { n d");
result.add("leg-\tree", "l0 I g\tr i:");
result.add("leg-\troom", "l0 V g\tr u: m");
result.add("leg-\twork", "l0 e g\tw @r k");
result.add("lege", "l0 i: dZ");
result.add("legge", "l0 e g");
result.add("legs", "l0 e g z");
result.add("leg's", "l0 e g z");
result.add("leh-\tman", "l0 i:\tm V n");
result.add("leh-\tmann", "l0 eI\tm V n");
result.add("leh-\tman's", "l0 i:\tm V n z");
result.add("leh-\tmer", "l0 e\tm @r");
result.add("leh-\trer", "l0 e@\t@r");
result.add("lehr", "l0 e@");
result.add("lehr-\tman", "l0 e@\tm V n");
result.add("lei", "l0 eI");
result.add("lei-\tfer", "l0 aI\tf @r");
result.add("lei-\tfeste", "l0 aI\tf e s t");
result.add("lei-\tla", "l0 i:\tl V");
result.add("lei-\tla-\tni", "l0 V\tl Q\tn i:");
result.add("lei-\tsen-\tring", "l0 aI\ts V n\tr I N");
result.add("lei-\tser", "l0 aI\ts @r");
result.add("lei-\tsure", "l0 e\tZ @r");
result.add("lei-\tsure-\tly", "l0 i:\tz @r\tl i:");
result.add("lei-\tter", "l0 aI\tt @r");
result.add("leib-\tman", "l0 i: b\tm V n");
result.add("leib-\tniz", "l0 i: b\tn I z");
result.add("leices-\tter", "l0 e s\tt @r");
result.add("leif", "l0 i: f");
result.add("leigh", "l0 i:");
result.add("leigh-\tton", "l0 eI\tt V n");
result.add("leins-\tdorf", "l0 aI n\tz d O@ f");
result.add("leip-\tzig", "l0 aI p\ts I g");
result.add("leis", "l0 eI z");
result.add("leis-\tter", "l0 i: s\tt @r");
result.add("leiss", "l0 aI s");
result.add("leit-\tman", "l0 aI t\tm V n");
result.add("leit-\tmo-\ttif", "l0 aI t\tm @U\tt i: f");
result.add("leit-\tner", "l0 aI t\tn @r");
result.add("leith", "l0 i: T");
result.add("lek", "l0 e k");
result.add("lem", "l0 e m");
result.add("lem-\tberg", "l0 e m\tb @r g");
result.add("lem-\tke", "l0 e m\tk i:");
result.add("lem-\tma", "l0 e\tm V");
result.add("lem-\tme", "l0 e\tm V");
result.add("lem-\tmie", "l0 e\tm i:");
result.add("lem-\tming", "l0 e\tm I N");
result.add("lem-\tmings", "l0 e\tm I N z");
result.add("lem-\tmon", "l0 e\tm V n");
result.add("lem-\tpert", "l0 e m\tp @r t");
result.add("lemcke", "l0 e m k");
result.add("len", "l0 e n");
result.add("len-\tder", "l0 e n\td @r");
result.add("len-\tders", "l0 e n\td @r z");
result.add("len-\tder's", "l0 e n\td @r z");
result.add("len-\tding", "l0 e n\td I N");
result.add("len-\tdings", "l0 e n\td I N z");
result.add("len-\tdl", "l0 e n\td V l");
result.add("l'en-\tfant", "l0 e n\tf Q n t");
result.add("len-\tgel", "l0 e N\tg V l");
result.add("len-\tger", "l0 e\tN @r");
result.add("len-\thard", "l0 e\tn @r d");
result.add("len-\thart", "l0 e n\th Q@ t");
result.add("len-\tnard", "l0 e\tn @r d");
result.add("len-\tnie", "l0 e\tn i:");
result.add("len-\tnon", "l0 e\tn V n");
result.add("len-\tnon's", "l0 e\tn V n z");
result.add("len-\tnox", "l0 e\tn V k s");
result.add("len-\tny", "l0 e\tn i:");
result.add("len-\tses", "l0 e n\tz V z");
result.add("len-\tsing", "l0 e n\ts I N");
result.add("len-\ttil", "l0 e n\tt I l");
result.add("len-\ttils", "l0 e n\tt I l z");
result.add("len-\tto", "l0 e n\tt @U");
result.add("len-\tzi", "l0 e n\tz i:");
result.add("len-\tz's", "l0 e n\tz V z");
result.add("lend", "l0 e n d");
result.add("lends", "l0 e n d z");
result.add("lene", "l0 i: n");
result.add("leng", "l0 e N");
result.add("leng-\tthe-\tning", "l0 e N\tT V\tn I N");
result.add("leng-\tthen", "l0 e N\tT V n");
result.add("leng-\tthened", "l0 e N\tT V n d");
result.add("leng-\tthens", "l0 e N\tT V n z");
result.add("leng-\tthy", "l0 e N\tT i:");
result.add("length", "l0 e N k T");
result.add("length-\tways", "l0 e N\tT w eI z");
result.add("length-\twise", "l0 e N\tT w aI z");
result.add("lengths", "l0 e N k T s");
result.add("lens", "l0 e n z");
result.add("lent", "l0 e n t");
result.add("lent-\tner", "l0 e n\tt n @r");
result.add("lents", "l0 e n t s");
result.add("lenz", "l0 e n z");
result.add("leo-\tla", "l0 e\tl V");
result.add("leo-\tnar-\tdi", "l0 e\tn Q@\td i:");
result.add("leo-\tnard", "l0 e\tn @r d");
result.add("leo-\tnard's", "l0 e\tn @r d z");
result.add("leo-\tnelle", "l0 e\tn e l");
result.add("leo-\tnie", "l0 e\tn i:");
result.add("leo-\tpard", "l0 e\tp @r d");
result.add("leo-\tpards", "l0 e\tp @r d z");
result.add("leo-\tpol-\tdi-\tne", "l0 e\tp @U l\td i:\tn i:");
result.add("leo-\tra", "l0 e@\tV");
result.add("leo-\tta", "l0 e\tt V");
result.add("leon-\tti-\tne", "l0 e n\tt i:\tn i:");
result.add("leong", "l0 e N");
result.add("lep", "l0 e p");
result.add("lep-\tley", "l0 e p\tl i:");
result.add("lep-\tpard", "l0 e\tp @r d");
result.add("lep-\tper", "l0 e\tp @r");
result.add("lep-\tre", "l0 e\tp @r");
result.add("lep-\tro-\tsy", "l0 e p\tr V\ts i:");
result.add("lep-\ttin", "l0 e p\tt I n");
result.add("lep-\tto-\tnic", "l0 e p\tt Q\tn I k");
result.add("lepp", "l0 e p");
result.add("ler-\tner", "l0 @r\tn @r");
result.add("ler-\tner's", "l0 @r\tn @r z");
result.add("les", "l0 e s");
result.add("les-\tbi-\ta-\tni-\tsm", "l0 e z\tb i:\tV\tn I\tz V m");
result.add("les-\tbi-\tan", "l0 e z\tb i:\tV n");
result.add("les-\tbi-\tans", "l0 e z\tb i:\tV n z");
result.add("les-\tko", "l0 e s\tk @U");
result.add("les-\tley", "l0 e s\tl i:");
result.add("les-\tlie", "l0 e s\tl i:");
result.add("les-\tsard", "l0 e\ts @r d");
result.add("les-\tse-\tning", "l0 e\ts V\tn I N");
result.add("les-\tsee", "l0 e\ts i:");
result.add("les-\tsees", "l0 e\ts i: z");
result.add("les-\tsen", "l0 e\ts V n");
result.add("les-\tsened", "l0 e\ts V n d");
result.add("les-\tsens", "l0 e\ts V n z");
result.add("les-\tser", "l0 e\ts @r");
result.add("les-\tsing", "l0 e\ts I N");
result.add("les-\tson", "l0 e\ts V n");
result.add("les-\tsons", "l0 e\ts V n z");
result.add("les-\tsor", "l0 e\ts @r");
result.add("les-\tsors", "l0 e\ts @r z");
result.add("les-\tter", "l0 e s\tt @r");
result.add("lesh", "l0 e S");
result.add("less", "l0 e s");
result.add("lest", "l0 e s t");
result.add("let", "l0 e t");
result.add("let-\tcher", "l0 e\ttS @r");
result.add("let-\tdown", "l0 e t\td aU n");
result.add("let-\tte-\tring", "l0 e\tt @r\tI N");
result.add("let-\tter", "l0 e\tt @r");
result.add("let-\tter-\thead", "l0 e\tt @r\th e d");
result.add("let-\tter-\tman", "l0 e\tt @r\tm V n");
result.add("let-\tter-\tman's", "l0 e\tt @r\tm V n z");
result.add("let-\tter-\tpress", "l0 e\tt @r p\tr e s");
result.add("let-\ttered", "l0 e\tt @r d");
result.add("let-\tters", "l0 e\tt @r z");
result.add("let-\ttice", "l0 e\tt I s");
result.add("let-\ttie", "l0 e\tt i:");
result.add("let-\tting", "l0 e\tt I N");
result.add("let-\ttish", "l0 e\tt I S");
result.add("let-\ttuce", "l0 e\tt V s");
result.add("let-\tty", "l0 e\tt i:");
result.add("letch-\tworth", "l0 e tS\tw @r T");
result.add("lets", "l0 e t s");
result.add("let's", "l0 e t s");
result.add("lett", "l0 e t");
result.add("letts", "l0 e t s");
result.add("leu", "l0 u:");
result.add("leu-\tke-\tmi-\ta", "l0 u:\tk i:\tm i:\tV");
result.add("leu-\tko-\tcyte", "l0 u:\tk V\ts aI t");
result.add("leu-\tpold", "l0 OI\tp @U l d");
result.add("leu's", "l0 u: z");
result.add("lev", "l0 e v");
result.add("leve", "l0 i: v");
result.add("lew", "l0 u:");
result.add("lewd", "l0 u: d");
result.add("lex", "l0 e k s");
result.add("ley", "l0 eI");
result.add("ley-\tden", "l0 aI\td V n");
result.add("ley-\tland", "l0 eI\tl V n d");
result.add("leys", "l0 eI z");
result.add("lha-\tsa", "l0 Q\ts V");
result.add("li", "l0 i:");
result.add("li-\ta", "l0 i:\tV");
result.add("li-\ta-\tbi-\tli-\tties", "l0 aI\tV\tb I\tl V\tt i: z");
result.add("li-\ta-\tbi-\tli-\tty", "l0 aI\tV\tb I\tl V\tt i:");
result.add("li-\ta-\tble", "l0 aI\tV\tb V l");
result.add("li-\ta-\tna", "l0 i:\tQ\tn V");
result.add("li-\ta-\tson", "l0 aI\tV\ts V n");
result.add("li-\tai-\tson", "l0 i:\teI\tz Q n");
result.add("li-\tai-\tsons", "l0 i:\teI\ts Q n z");
result.add("li-\tam", "l0 i:\tV m");
result.add("li-\tam's", "l0 i:\tV m z");
result.add("li-\tan-\tna", "l0 i:\tQ\tn V");
result.add("li-\tane", "l0 i:\t{ n");
result.add("li-\tanne", "l0 i:\t{ n");
result.add("li-\tao", "l0 i:\taU");
result.add("li-\tar", "l0 aI\t@r");
result.add("li-\tars", "l0 aI\t@r z");
result.add("li-\tbe-\tlous", "l0 aI\tb V\tl V s");
result.add("li-\tbe-\tra-\tce", "l0 I\tb @r\tQ\ttS i:");
result.add("li-\tbe-\tra-\tli-\tsm", "l0 I\tb @r\tV\tl I\tz V m");
result.add("li-\tbe-\tra-\tli-\tty", "l0 I\tb @r\t{\tl I\tt i:");
result.add("li-\tbe-\tra-\tli-\tza-\ttions", "l0 I\tb @r\tV\tl I\tz eI\tS V n z");
result.add("li-\tbe-\tra-\tli-\tzing", "l0 I\tb @r\tV\tl aI\tz I N");
result.add("li-\tbe-\tra-\tlize", "l0 I\tb @r\tV\tl aI z");
result.add("li-\tbe-\tra-\tlized", "l0 I\tb @r\tV\tl aI z d");
result.add("li-\tbe-\tra-\tted", "l0 I\tb @r\teI\tt V d");
result.add("li-\tbe-\tra-\tti", "l0 i:\tb @r\tQ\tt i:");
result.add("li-\tbe-\tra-\tting", "l0 I\tb @r\teI\tt I N");
result.add("li-\tbe-\tra-\ttion", "l0 I\tb @r\teI\tS V n");
result.add("li-\tbe-\tra-\ttor", "l0 I\tb @r\teI\tt V r");
result.add("li-\tbe-\tra-\ttors", "l0 I\tb @r\teI\tt V r z");
result.add("li-\tbe-\tral", "l0 I\tb @r\tV l");
result.add("li-\tbe-\tral-\tly", "l0 I\tb @r\tV\tl i:");
result.add("li-\tbe-\trals", "l0 I\tb @r\tV l z");
result.add("li-\tbe-\trate", "l0 I\tb @r\teI t");
result.add("li-\tbe-\tri-\ta", "l0 aI\tb I@\ti:\tV");
result.add("li-\tbe-\tri-\tan", "l0 aI\tb I@\ti:\tV n");
result.add("li-\tbe-\tri-\tans", "l0 aI\tb I@\ti:\tV n z");
result.add("li-\tbe-\tri-\ta's", "l0 aI\tb I@\ti:\tV z");
result.add("li-\tbel", "l0 aI\tb V l");
result.add("li-\tbeled", "l0 aI\tb V l d");
result.add("li-\tber-\tta-\tri-\tan", "l0 I\tb @r\tt e@\ti:\tV n");
result.add("li-\tber-\tta-\tri-\tans", "l0 I\tb @r\tt e@\ti:\tV n z");
result.add("li-\tber-\tties", "l0 I\tb @r\tt i: z");
result.add("li-\tber-\ttine", "l0 I\tb @r\tt i: n");
result.add("li-\tber-\ttines", "l0 I\tb @r\tt i: n z");
result.add("li-\tber-\tty", "l0 I\tb @r\tt i:");
result.add("li-\tber-\tty's", "l0 I\tb @r\tt i: z");
result.add("li-\tbi-\tdo", "l0 V\tb i:\td @U");
result.add("li-\tby-\ta", "l0 I\tb i:\tV");
result.add("li-\tby-\tan", "l0 I\tb i:\tV n");
result.add("li-\tby-\tans", "l0 I\tb i:\tV n z");
result.add("li-\tby-\ta's", "l0 I\tb i:\tV z");
result.add("li-\tcen-\tces", "l0 aI\ts V n\ts V z");
result.add("li-\tcen-\tsee", "l0 aI\ts V n\ts i:");
result.add("li-\tcen-\tsees", "l0 aI\ts V n\ts i: z");
result.add("li-\tcen-\tser", "l0 aI\ts V n\ts @r");
result.add("li-\tcen-\tses", "l0 aI\ts V n\ts V z");
result.add("li-\tcen-\tsing", "l0 aI\ts V n\ts I N");
result.add("li-\tcen-\tsor", "l0 aI\ts V n\ts @r");
result.add("li-\tcen-\tsure", "l0 aI\ts V n\ttS @r");
result.add("li-\tcen-\ttious", "l0 aI\ts e n\ttS V s");
result.add("li-\tcence", "l0 aI\ts V n s");
result.add("li-\tcense", "l0 aI\ts V n s");
result.add("li-\tcensed", "l0 aI\ts V n s t");
result.add("li-\tchen", "l0 aI\tk V n");
result.add("li-\tchens", "l0 aI\tk V n z");
result.add("li-\tco-\trice", "l0 I\tk @r\tI S");
result.add("li-\tda", "l0 i:\td V");
result.add("li-\tdo", "l0 i:\td @U");
result.add("li-\tfer", "l0 aI\tf @r");
result.add("li-\tfers", "l0 aI\tf @r z");
result.add("li-\tfo", "l0 i:\tf @U");
result.add("li-\tga-\tment", "l0 I\tg V\tm V n t");
result.add("li-\tga-\tments", "l0 I\tg V\tm V n t s");
result.add("li-\tga-\ttion", "l0 aI\tg eI\tS V n");
result.add("li-\tgand", "l0 I\tg V n d");
result.add("li-\tgands", "l0 I\tg V n d z");
result.add("li-\tgas", "l0 aI\tg V z");
result.add("li-\tgon", "l0 I\tg V n");
result.add("li-\tguo-\tri", "l0 i:\tg O@\ti:");
result.add("li-\tka-\tble", "l0 aI\tk V\tb V l");
result.add("li-\tke-\tning", "l0 aI\tk V\tn I N");
result.add("li-\tkea-\tble", "l0 aI\tk V\tb V l");
result.add("li-\tken", "l0 aI\tk V n");
result.add("li-\tkened", "l0 aI\tk V n d");
result.add("li-\tkens", "l0 aI\tk V n z");
result.add("li-\tking", "l0 aI\tk I N");
result.add("li-\tkins", "l0 I\tk I n z");
result.add("li-\tkud", "l0 I\tk V d");
result.add("li-\tkud's", "l0 I\tk V d z");
result.add("li-\tla", "l0 i:\tl V");
result.add("li-\tlac", "l0 aI\tl { k");
result.add("li-\tlacs", "l0 aI\tl { k s");
result.add("li-\tlah", "l0 I\tl V");
result.add("li-\tli", "l0 I\tl i:");
result.add("li-\tli-\ta", "l0 i:\tl i:\tV");
result.add("li-\tli-\ta-\tna", "l0 I\tl i:\t{\tn V");
result.add("li-\tli-\tan", "l0 I\tl i:\tV n");
result.add("li-\tli-\tane", "l0 V\tl i:\t{ n");
result.add("li-\tli-\tas", "l0 aI\tl i:\tV z");
result.add("li-\tlien-\tthal", "l0 I\tl i: n\tT V l");
result.add("li-\tlies", "l0 I\tl i: z");
result.add("li-\tlith", "l0 I\tl I T");
result.add("li-\tly", "l0 I\tl i:");
result.add("li-\tly-\tan", "l0 I\tl i:\tV n");
result.add("li-\tly's", "l0 I\tl i: z");
result.add("li-\tma", "l0 aI\tm V");
result.add("li-\tman", "l0 aI\tm V n");
result.add("li-\tmas", "l0 aI\tm V z");
result.add("li-\tme-\trick", "l0 I\tm @r\tI k");
result.add("li-\tme-\tricks", "l0 I\tm @r\tI k s");
result.add("li-\tme-\trick's", "l0 I\tm @r\tI k s");
result.add("li-\tmi-\tta-\ttion", "l0 I\tm I\tt eI\tS V n");
result.add("li-\tmi-\tta-\ttions", "l0 I\tm I\tt eI\tS V n z");
result.add("li-\tmi-\tted", "l0 I\tm I\tt I d");
result.add("li-\tmi-\tting", "l0 I\tm I\tt I N");
result.add("li-\tmine", "l0 I\tm aI n");
result.add("li-\tming", "l0 aI\tm I N");
result.add("li-\tmit", "l0 I\tm I t");
result.add("li-\tmit-\tless", "l0 I\tm I t\tl V s");
result.add("li-\tmits", "l0 I\tm I t s");
result.add("li-\tmo", "l0 I\tm @U");
result.add("li-\tmo-\tges", "l0 V\tm @U\tdZ V z");
result.add("li-\tmo-\tnite", "l0 aI\tm V\tn aI t");
result.add("li-\tmon", "l0 I\tm V n");
result.add("li-\tmos", "l0 I\tm @U z");
result.add("li-\tmou-\tsine", "l0 I\tm V\tz i: n");
result.add("li-\tmou-\tsines", "l0 I\tm V\tz i: n z");
result.add("li-\tna", "l0 i:\tn V");
result.add("li-\tnage", "l0 aI\tn I dZ");
result.add("li-\tnares", "l0 I\tn @r z");
result.add("li-\tne-\ta-\tges", "l0 I\tn i:\tI\tdZ V z");
result.add("li-\tne-\tage", "l0 I\tn i:\tV dZ");
result.add("li-\tne-\tal", "l0 I\tn i:\tV l");
result.add("li-\tne-\tar", "l0 I\tn i:\t@r");
result.add("li-\tne-\tar-\tly", "l0 I\tn i:\t@r\tl i:");
result.add("li-\tne-\than", "l0 I\tn V\th { n");
result.add("li-\tnen", "l0 I\tn V n");
result.add("li-\tnens", "l0 I\tn V n z");
result.add("li-\tner", "l0 aI\tn @r");
result.add("li-\tner-\tboard", "l0 aI\tn @r\tb O@ d");
result.add("li-\tners", "l0 aI\tn @r z");
result.add("li-\tner's", "l0 aI\tn @r z");
result.add("li-\tnette", "l0 I\tn e t");
result.add("li-\tni", "l0 i:\tn i:");
result.add("li-\tning", "l0 aI\tn I N");
result.add("li-\tnings", "l0 aI\tn I N z");
result.add("li-\tno", "l0 i:\tn @U");
result.add("li-\tno-\tle-\tum", "l0 V\tn @U\tl i:\tV m");
result.add("li-\tno-\ttype", "l0 I\tn @U\tt aI p");
result.add("li-\tnus", "l0 aI\tn V s");
result.add("li-\to-\tnel", "l0 aI\tV\tn V l");
result.add("li-\to-\tnize", "l0 aI\tV\tn aI z");
result.add("li-\to-\tnized", "l0 aI\tV\tn aI z d");
result.add("li-\ton", "l0 aI\tV n");
result.add("li-\ton-\theart", "l0 aI\tV n\th Q@ t");
result.add("li-\tons", "l0 aI\tV n z");
result.add("li-\ton's", "l0 aI\tV n z");
result.add("li-\tou", "l0 i:\tu:");
result.add("li-\tpa", "l0 i:\tp V");
result.add("li-\tpa-\tri", "l0 i:\tp Q@\ti:");
result.add("li-\tpid", "l0 aI\tp I d");
result.add("li-\tpide", "l0 V\tp i: d");
result.add("li-\tpin-\tski", "l0 V\tp I n\ts k i:");
result.add("li-\tpo-\tsome", "l0 I\tp V\ts @U m");
result.add("li-\tpo-\tsomes", "l0 I\tp V\ts @U m z");
result.add("li-\tpo-\tsuc-\ttion", "l0 I\tp @U\ts V k\tS V n");
result.add("li-\tpop-\tro-\ttein", "l0 I\tp V p\tr @U\tt i: n");
result.add("li-\tpop-\tro-\tteins", "l0 I\tp @U p\tr @U\tt i: n z");
result.add("li-\tque-\tfac-\ttion", "l0 I k\tw V\tf { k\tS V n");
result.add("li-\tque-\tfied", "l0 I k\tw V\tf aI d");
result.add("li-\tque-\tfy", "l0 I k\tw V\tf aI");
result.add("li-\tqueur", "l0 I\tk @r");
result.add("li-\tqueurs", "l0 I\tk @r z");
result.add("li-\tqui-\tda-\tted", "l0 I k\tw I\td eI\tt I d");
result.add("li-\tqui-\tda-\tting", "l0 I k\tw I\td eI\tt I N");
result.add("li-\tqui-\tda-\ttion", "l0 I k\tw I\td eI\tS V n");
result.add("li-\tqui-\tda-\ttions", "l0 I k\tw I\td eI\tS V n z");
result.add("li-\tqui-\tda-\ttor", "l0 I k\tw I\td eI\tt @r");
result.add("li-\tqui-\tda-\ttors", "l0 I k\tw I\td eI\tt @r z");
result.add("li-\tqui-\tdate", "l0 I k\tw I\td eI t");
result.add("li-\tqui-\tdates", "l0 I k\tw I\td eI t s");
result.add("li-\tqui-\tdi-\tties", "l0 I k\tw I\td I\tt i: z");
result.add("li-\tqui-\tdi-\tty", "l0 I k\tw I\td I\tt i:");
result.add("li-\tquid", "l0 I k\tw I d");
result.add("li-\tquids", "l0 I k\tw I d z");
result.add("li-\tquor", "l0 I\tk @r");
result.add("li-\tquors", "l0 I\tk @r z");
result.add("li-\tra", "l0 I@\tV");
result.add("li-\tra's", "l0 I@\tV z");
result.add("li-\tre", "l0 I@\tV");
result.add("li-\tsa", "l0 i:\ts V");
result.add("li-\tsa-\tbet", "l0 I\ts V\tb e t");
result.add("li-\tsa-\tbeth", "l0 I\ts V\tb e T");
result.add("li-\tsa's", "l0 i:\ts V z");
result.add("li-\tsette", "l0 I\ts e t");
result.add("li-\tsle", "l0 aI\tV l");
result.add("li-\tste-\tner", "l0 I\ts V\tn @r");
result.add("li-\tste-\tners", "l0 I\ts V\tn @r z");
result.add("li-\tste-\tning", "l0 I\ts V\tn I N");
result.add("li-\tstened", "l0 I\ts V n d");
result.add("li-\tstens", "l0 I\ts V n z");
result.add("li-\tta", "l0 i:\tt V");
result.add("li-\tta-\tnies", "l0 I\tt V\tn i: z");
result.add("li-\tta-\tny", "l0 I\tt V\tn i:");
result.add("li-\tte-\tra-\tcy", "l0 I\tt @r\tV\ts i:");
result.add("li-\tte-\tra-\try", "l0 I\tt @r\te@\ti:");
result.add("li-\tte-\tra-\tti", "l0 I\tt @r\tQ\tt i:");
result.add("li-\tte-\tra-\tture", "l0 I\tt @r\tV\ttS @r");
result.add("li-\tte-\tral", "l0 I\tt @r\tV l");
result.add("li-\tte-\tral-\tly", "l0 I\tt @r\tV\tl i:");
result.add("li-\tte-\trate", "l0 I\tt @r\tV t");
result.add("li-\ttem", "l0 aI\tt e m");
result.add("li-\tter", "l0 i:\tt @r");
result.add("li-\tters", "l0 i:\tt @r z");
result.add("li-\tthi-\tum", "l0 I\tT i:\tV m");
result.add("li-\tthic", "l0 I\tT I k");
result.add("li-\ttho-\tgra-\tphic", "l0 I\tT V g\tr {\tf I k");
result.add("li-\ttho-\tgra-\tphy", "l0 V\tT Q g\tr V\tf i:");
result.add("li-\ttho-\tgraph", "l0 I\tT V g\tr { f");
result.add("li-\ttho-\tgraphs", "l0 I\tT V g\tr { f s");
result.add("li-\ttho-\ttrip-\tter", "l0 I\tT V t\tr I p\tt @r");
result.add("li-\tthu-\ta-\tni-\ta", "l0 I\tT V\tw eI\tn i:\tV");
result.add("li-\tthu-\ta-\tni-\tan", "l0 I\tT V\tw eI\tn i:\tV n");
result.add("li-\tthu-\ta-\tni-\tans", "l0 I\tT V\tw eI\tn i:\tV n z");
result.add("li-\tthu-\ta-\tni-\ta's", "l0 I\tT V\tw eI\tn i:\tV z");
result.add("li-\tti-\tga-\tted", "l0 I\tt I\tg eI\tt V d");
result.add("li-\tti-\tga-\tting", "l0 I\tt I\tg eI\tt I N");
result.add("li-\tti-\tga-\ttion", "l0 I\tt I\tg eI\tS V n");
result.add("li-\tti-\tga-\ttions", "l0 I\tt I\tg eI\tS V n z");
result.add("li-\tti-\tga-\ttor", "l0 I\tt I\tg eI\tt @r");
result.add("li-\tti-\tga-\ttors", "l0 I\tt I\tg eI\tt @r z");
result.add("li-\tti-\tgant", "l0 I\tt I\tg V n t");
result.add("li-\tti-\tgants", "l0 I\tt I\tg V n t s");
result.add("li-\tti-\tgate", "l0 I\tt I\tg eI t");
result.add("li-\tti-\tgious", "l0 I\tt I\tdZ V s");
result.add("li-\ttur-\tgi-\tcal", "l0 V\tt @r\tdZ I\tk V l");
result.add("li-\ttur-\tgy", "l0 I\tt @r\tdZ i:");
result.add("li-\tva-\tble", "l0 I\tv V\tb V l");
result.add("li-\tve-\try", "l0 I\tv @r\ti:");
result.add("li-\tve-\tsay", "l0 I\tv V\ts eI");
result.add("li-\tven", "l0 aI\tv V n");
result.add("li-\tvened", "l0 aI\tv V n d");
result.add("li-\tver", "l0 I\tv @r");
result.add("li-\tver-\tmore", "l0 I\tv @r\tm O@");
result.add("li-\tver-\tpool", "l0 I\tv @r\tp u: l");
result.add("li-\tver-\twort", "l0 I\tv @r\tw @r t");
result.add("li-\tver-\tworts", "l0 I\tv @r\tw @r t s");
result.add("li-\tvers", "l0 I\tv @r z");
result.add("li-\tvi-\ta", "l0 I\tv i:\tV");
result.add("li-\tvi-\tdi-\tty", "l0 I\tv I\td I\tt i:");
result.add("li-\tvid", "l0 I\tv I d");
result.add("li-\tving", "l0 I\tv I N");
result.add("li-\tving-\troom", "l0 I\tv I N\tr u: m");
result.add("li-\tving-\tston", "l0 I\tv I N\ts t V n");
result.add("li-\tving-\tstone", "l0 I\tv I N\ts t @U n");
result.add("li-\tving-\tstone's", "l0 I\tv I N\ts t @U n z");
result.add("li-\tving-\tston's", "l0 I\tv I N\ts t V n z");
result.add("li-\tvings", "l0 I\tv I N z");
result.add("li-\tvo-\tnia", "l0 I\tv @U n\tj V");
result.add("li-\tvor", "l0 I\tv O@");
result.add("li-\tza", "l0 i:\tz V");
result.add("li-\tza-\tbeth", "l0 I\tz V\tb e T");
result.add("li-\tzard", "l0 I\tz @r d");
result.add("li-\tzards", "l0 I\tz @r d z");
result.add("li-\tzard's", "l0 I\tz @r d z");
result.add("lian", "l0 j Q n");
result.add("liang", "l0 j { N");
result.add("lib", "l0 I b");
result.add("lib-\tbey", "l0 I\tb i:");
result.add("lib-\tbing", "l0 I\tb I N");
result.add("lib-\tby", "l0 I\tb i:");
result.add("lib-\tra", "l0 i: b\tr V");
result.add("lib-\tra-\tri-\tan", "l0 aI b\tr e@\ti:\tV n");
result.add("lib-\tra-\tri-\tans", "l0 aI b\tr e@\ti:\tV n z");
result.add("lib-\tra-\tries", "l0 aI b\tr e@\ti: z");
result.add("lib-\tra-\try", "l0 aI b\tr e@\ti:");
result.add("lib-\tra-\try's", "l0 aI b\tr e@\ti: z");
result.add("lib-\tra-\ttion", "l0 aI b\tr eI\tS V n");
result.add("lib-\tret-\ttist", "l0 V b\tr e\tt V s t");
result.add("lib-\tret-\tto", "l0 V b\tr e\tt @U");
result.add("libbed", "l0 I b d");
result.add("libe-\tra-\tli-\tsm's", "l0 I b\tr V\tl I\tz V m z");
result.add("libe-\tra-\tli-\tza-\ttion", "l0 I b\tr V\tl I\tz eI\tS V n");
result.add("lic-\tke-\tty", "l0 I\tk V\tt i:");
result.add("lic-\tker", "l0 I\tk @r");
result.add("lic-\tking", "l0 I\tk I N");
result.add("lice", "l0 aI s");
result.add("lich", "l0 I tS");
result.add("lich-\tten-\tberg", "l0 I k\tt V n\tb @r g");
result.add("lich-\tten-\tstein", "l0 I k\tt V n\ts t i: n");
result.add("lich-\tter", "l0 I k\tt @r");
result.add("licht", "l0 I k t");
result.add("lick", "l0 I k");
result.add("licked", "l0 I k t");
result.add("licks", "l0 I k s");
result.add("lid", "l0 I d");
result.add("lid-\tdell", "l0 I\td V l");
result.add("lid-\tdle", "l0 I\td V l");
result.add("lid-\tdy", "l0 I\td i:");
result.add("lid-\tdy's", "l0 I\td i: z");
result.add("lid-\tger-\twood", "l0 I\tdZ @r\tw U d");
result.add("lide", "l0 aI d");
result.add("lids", "l0 I d z");
result.add("lie", "l0 aI");
result.add("lie-\tber-\tman", "l0 i:\tb @r\tm V n");
result.add("lie-\tber-\tmann", "l0 i:\tb @r\tm V n");
result.add("lie-\tber-\tman's", "l0 i:\tb @r\tm V n z");
result.add("lie-\tbig", "l0 i:\tb I g");
result.add("lie-\tbo-\twitz", "l0 i:\tb V\tw I t s");
result.add("lie-\tder", "l0 i:\td @r");
result.add("lie-\tder-\tman", "l0 i:\td @r\tm V n");
result.add("lie-\tder-\tman's", "l0 i:\td @r\tm V n z");
result.add("lie-\tfer", "l0 i:\tf @r");
result.add("lieb-\tman", "l0 i: b\tm V n");
result.add("liech-\tten-\tstein", "l0 I k\tt V n\ts t aI n");
result.add("lied", "l0 aI d");
result.add("lief", "l0 i: f");
result.add("liege", "l0 i: dZ");
result.add("lien", "l0 i: n");
result.add("lien-\thard", "l0 i: n\th Q@ d");
result.add("liens", "l0 i: n z");
result.add("lies", "l0 aI z");
result.add("lieu", "l0 u:");
result.add("lieu-\tte-\tnant", "l0 u:\tt e\tn V n t");
result.add("lieu-\tte-\tnants", "l0 u:\tt e\tn V n t s");
result.add("lif-\tted", "l0 I f\tt V d");
result.add("lif-\tter", "l0 I f\tt @r");
result.add("lif-\tters", "l0 I f\tt @r z");
result.add("lif-\tting", "l0 I f\tt I N");
result.add("lif-\ttoff", "l0 I f\tt O: f");
result.add("lif-\tton", "l0 I f\tt V n");
result.add("life", "l0 aI f");
result.add("life-\tboat", "l0 aI f\tb @U t");
result.add("life-\tboats", "l0 aI f\tb @U t s");
result.add("life-\tguard", "l0 aI f\tg Q@ d");
result.add("life-\tguards", "l0 aI f\tg Q@ d z");
result.add("life-\tless", "l0 aI f\tl V s");
result.add("life-\tlike", "l0 aI f\tl aI k");
result.add("life-\tline", "l0 aI f\tl aI n");
result.add("life-\tlines", "l0 aI f\tl aI n z");
result.add("life-\tlong", "l0 aI f\tl O: N");
result.add("life-\tsa-\tver", "l0 aI f\ts eI\tv @r");
result.add("life-\tsa-\tvers", "l0 aI f\ts eI\tv @r z");
result.add("life-\tsa-\tving", "l0 aI f\ts eI\tv I N");
result.add("life-\tspan", "l0 aI f\ts p { n");
result.add("life-\tstyle", "l0 aI f\ts t aI l");
result.add("life-\tstyles", "l0 aI f\ts t aI l z");
result.add("life-\ttime", "l0 aI f\tt aI m");
result.add("life-\ttimes", "l0 aI f\tt aI m z");
result.add("life-\ttime's", "l0 aI f\tt aI m z");
result.add("lifeb-\tlood", "l0 aI f\tb l V d");
result.add("life's", "l0 aI f s");
result.add("lift", "l0 I f t");
result.add("lift-\toff", "l0 I f\tt O: f");
result.add("lifts", "l0 I f t s");
result.add("lig-\tget", "l0 I\tg e t");
result.add("lig-\tgett", "l0 I\tg e t");
result.add("lig-\tgett's", "l0 I\tg e t s");
result.add("lig-\tnin", "l0 I g\tn I n");
result.add("lig-\tnite", "l0 I g\tn aI t");
result.add("ligh-\tte-\tning", "l0 aI\tt V\tn I N");
result.add("ligh-\tted", "l0 aI\tt V d");
result.add("ligh-\tten", "l0 aI\tt V n");
result.add("ligh-\ttened", "l0 aI\tt V n d");
result.add("ligh-\tter", "l0 aI\tt @r");
result.add("ligh-\tters", "l0 aI\tt @r z");
result.add("ligh-\ttest", "l0 aI\tt V s t");
result.add("ligh-\tting", "l0 aI\tt I N");
result.add("ligh-\tting's", "l0 aI\tt I N z");
result.add("ligh-\tty", "l0 aI\tt i:");
result.add("light", "l0 aI t");
result.add("light-\tbulb", "l0 aI t\tb V l b");
result.add("light-\tbulbs", "l0 aI t\tb V l b z");
result.add("light-\tfast", "l0 aI t\tf { s t");
result.add("light-\tfast-\tness", "l0 aI t\tf { s\tt n V s");
result.add("light-\tfoot", "l0 aI t\tf U t");
result.add("light-\thea-\tded", "l0 aI t\th e\td V d");
result.add("light-\thea-\tded-\tness", "l0 aI t\th e\td V d\tn V s");
result.add("light-\thear-\tted", "l0 aI t\th Q@\tt V d");
result.add("light-\thou-\tses", "l0 aI t\th aU\ts V z");
result.add("light-\thouse", "l0 aI t\th aU s");
result.add("light-\tly", "l0 aI t\tl i:");
result.add("light-\tness", "l0 aI t\tn V s");
result.add("light-\tning", "l0 aI t\tn I N");
result.add("light-\tnings", "l0 aI t\tn I N z");
result.add("light-\tship", "l0 aI t\tS I p");
result.add("light-\tships", "l0 aI t\tS I p s");
result.add("light-\tweight", "l0 aI t\tw eI t");
result.add("lights", "l0 aI t s");
result.add("light's", "l0 aI t s");
result.add("like", "l0 aI k");
result.add("like-\tli-\ter", "l0 aI k\tl i:\t@r");
result.add("like-\tli-\test", "l0 aI k\tl i:\tV s t");
result.add("like-\tli-\thood", "l0 aI k\tl i:\th U d");
result.add("like-\tly", "l0 aI k\tl i:");
result.add("like-\tnes-\tses", "l0 aI k\tn V\ts V z");
result.add("like-\tness", "l0 aI k\tn V s");
result.add("like-\twise", "l0 aI k\tw aI z");
result.add("liked", "l0 aI k t");
result.add("likes", "l0 aI k s");
result.add("lil", "l0 I l");
result.add("lil-\tla", "l0 I\tl V");
result.add("lil-\tli", "l0 I\tl i:");
result.add("lil-\tli-\tan", "l0 I\tl i:\tV n");
result.add("lil-\tli-\tan's", "l0 I\tl i:\tV n z");
result.add("lil-\tli-\tpu-\ttian", "l0 I\tl I p\tj u:\tS V n");
result.add("lil-\tlie", "l0 I\tl i:");
result.add("lil-\tlis", "l0 I\tl I s");
result.add("lil-\tlo", "l0 I\tl @U");
result.add("lil-\tly", "l0 I\tl i:");
result.add("lil-\tly's", "l0 I\tl i: z");
result.add("lile", "l0 aI l");
result.add("liles", "l0 aI l z");
result.add("lill", "l0 I l");
result.add("lille", "l0 I l");
result.add("lilt", "l0 I l t");
result.add("lim", "l0 I m");
result.add("lim-\tbaugh", "l0 I m\tb O:");
result.add("lim-\tbaugh's", "l0 I m\tb O: z");
result.add("lim-\tber", "l0 I m\tb @r");
result.add("lim-\tbers", "l0 I m\tb @r z");
result.add("lim-\tbert", "l0 I m\tb @r t");
result.add("lim-\tbless", "l0 I m\tl V s");
result.add("lim-\tbo", "l0 I m\tb @U");
result.add("lim-\tburg", "l0 I m\tb @r g");
result.add("lim-\tmer", "l0 I\tm @r");
result.add("lim-\tno-\tlo-\tgy", "l0 I m\tn Q\tl V\tdZ i:");
result.add("lim-\tpets", "l0 I m\tp V t s");
result.add("lim-\tping", "l0 I m\tp I N");
result.add("limb", "l0 I m");
result.add("limbed", "l0 I m d");
result.add("limbs", "l0 I m z");
result.add("lime", "l0 aI m");
result.add("lime-\thouse", "l0 aI m\th aU s");
result.add("lime-\tlight", "l0 aI m\tl aI t");
result.add("lime-\tstone", "l0 aI m\ts t @U n");
result.add("lime-\tstones", "l0 aI m\ts t @U n z");
result.add("limes", "l0 aI m z");
result.add("limp", "l0 I m p");
result.add("limped", "l0 I m p t");
result.add("limps", "l0 I m p s");
result.add("lin", "l0 I n");
result.add("lin-\tdo", "l0 I n\td @U");
result.add("lin-\tdon", "l0 I n\td V n");
result.add("lin-\tdy", "l0 I n\td i:");
result.add("lin-\tge-\trie", "l0 Q n\tZ @r\teI");
result.add("lin-\tge-\tring", "l0 I N\tg @r\tI N");
result.add("lin-\tger", "l0 I N\tg @r");
result.add("lin-\tgered", "l0 I N\tg @r d");
result.add("lin-\tgers", "l0 I N\tg @r z");
result.add("lin-\tgle", "l0 I N\tg V l");
result.add("lin-\tgo", "l0 I N\tg @U");
result.add("lin-\tgua", "l0 I N\tg w V");
result.add("lin-\tgui-\tne", "l0 I N\tg w i:\tn i:");
result.add("lin-\tguis-\ttic", "l0 I N\tg w I s\tt I k");
result.add("lin-\tguis-\ttical-\tly", "l0 I N\tg w I s\tt I k\tl i:");
result.add("lin-\tguis-\ttics", "l0 I N\tg w I s\tt I k s");
result.add("lin-\tguist", "l0 I N\tg w I s t");
result.add("lin-\tguists", "l0 I N\tg w I s t s");
result.add("lin-\tka-\tges", "l0 I N\tk V\tdZ V z");
result.add("lin-\tkage", "l0 I N\tk V dZ");
result.add("lin-\tker", "l0 I N\tk @r");
result.add("lin-\tking", "l0 I N\tk I N");
result.add("lin-\tkup", "l0 I N\tk V p");
result.add("lin-\tkups", "l0 I N\tk V p s");
result.add("lin-\tne-\ta", "l0 I\tn i:\tV");
result.add("lin-\tnell", "l0 I\tn V l");
result.add("lin-\tnet", "l0 I\tn I t");
result.add("lin-\tney", "l0 I\tn i:");
result.add("lin-\tseed", "l0 I n\ts i: d");
result.add("lin-\tsey", "l0 I n\tz i:");
result.add("lin-\tskey", "l0 I n\ts k i:");
result.add("lin-\tson", "l0 I n\ts V n");
result.add("lin-\ttel", "l0 I n\tt V l");
result.add("lin-\tters", "l0 I n\tt @r z");
result.add("lin-\tton", "l0 I n\tt V n");
result.add("lin-\tville", "l0 i: n\tv I l");
result.add("lin-\twood", "l0 I n\tw U d");
result.add("lin-\tzer", "l0 I n\tz @r");
result.add("lin-\tzy", "l0 I n\tz i:");
result.add("lind-\tner's", "l0 I n\td n @r z");
result.add("lind-\tquist", "l0 I n\td k w I s t");
result.add("lind-\tsay", "l0 I n\td z i:");
result.add("lind-\tsey", "l0 I n\td z i:");
result.add("lind-\tsey's", "l0 I n\td z i: z");
result.add("lind-\tsley", "l0 I n\td s l i:");
result.add("lind-\tstrom", "l0 I n\td s t r V m");
result.add("line", "l0 aI n");
result.add("line-\tbac-\tker", "l0 aI n\tb {\tk @r");
result.add("line-\tbac-\tkers", "l0 aI n\tb {\tk @r z");
result.add("line-\tman", "l0 aI n\tm V n");
result.add("line-\tmen", "l0 aI n\tm V n");
result.add("line-\tup", "l0 aI\tn V p");
result.add("line-\tups", "l0 aI\tn V p s");
result.add("lined", "l0 aI n d");
result.add("lines", "l0 aI n z");
result.add("line's", "l0 aI n z");
result.add("ling", "l0 I N");
result.add("link", "l0 I N k");
result.add("linked", "l0 I N k t");
result.add("links", "l0 I N k s");
result.add("link's", "l0 I N k s");
result.add("linn", "l0 I n");
result.add("linne", "l0 I n");
result.add("linne-\tman", "l0 I n\tm V n");
result.add("lins", "l0 I n z");
result.add("lint", "l0 I n t");
result.add("linz", "l0 I n z");
result.add("lip", "l0 I p");
result.add("lip-\tkin", "l0 I p\tk I n");
result.add("lip-\tman", "l0 I p\tm V n");
result.add("lip-\tpens", "l0 I\tp V n z");
result.add("lip-\tper", "l0 I\tp @r");
result.add("lip-\tper's", "l0 I\tp @r z");
result.add("lip-\tpi", "l0 I\tp i:");
result.add("lip-\tpin-\tcott", "l0 I\tp I n\tk V t");
result.add("lip-\tpo", "l0 I\tp @U");
result.add("lip-\tpold", "l0 I\tp @U l d");
result.add("lip-\tpy", "l0 I\tp i:");
result.add("lip-\tschitz", "l0 I p\tS I t s");
result.add("lip-\tsey", "l0 I p\ts i:");
result.add("lip-\tski", "l0 I p\ts k i:");
result.add("lip-\tson", "l0 I p\ts V n");
result.add("lip-\tstick", "l0 I p\ts t I k");
result.add("lip-\tsticks", "l0 I p\ts t I k s");
result.add("lip-\tton", "l0 I p\tt V n");
result.add("lip-\tton's", "l0 I p\tt V n z");
result.add("lipe", "l0 aI p");
result.add("lipp", "l0 I p");
result.add("lipp-\tmann", "l0 I p\tm V n");
result.add("lippe", "l0 I p");
result.add("lipped", "l0 I p t");
result.add("lipps", "l0 I p s");
result.add("lips", "l0 I p s");
result.add("lips-\tcomb", "l0 I p\ts k V m");
result.add("lis", "l0 I s");
result.add("li's", "l0 i: z");
result.add("lis-\tbeth", "l0 I s\tb e T");
result.add("lis-\tbon", "l0 I z\tb V n");
result.add("lis-\tco", "l0 I s\tk @U");
result.add("lis-\tman", "l0 I z\tm V n");
result.add("lis-\tsa", "l0 I\ts V");
result.add("lis-\tsie", "l0 I\ts i:");
result.add("lis-\tsy", "l0 I\ts i:");
result.add("lis-\tte-\tri-\ta", "l0 I s\tt I@\ti:\tV");
result.add("lis-\tte-\trine", "l0 I s\tt @r\ti: n");
result.add("lis-\tted", "l0 I s\tt V d");
result.add("lis-\tten", "l0 I\ts V n");
result.add("lis-\tter", "l0 I s\tt @r");
result.add("lis-\tting", "l0 I s\tt I N");
result.add("lis-\ttings", "l0 I s\tt I N z");
result.add("lis-\tton", "l0 I s\tt V n");
result.add("lise", "l0 aI z");
result.add("lish", "l0 I S");
result.add("lisk", "l0 I s k");
result.add("lisp", "l0 I s p");
result.add("liss", "l0 I s");
result.add("liss-\tner", "l0 I s\tn @r");
result.add("list", "l0 I s t");
result.add("list-\tless", "l0 I s\tt l V s");
result.add("list-\tless-\tly", "l0 I s\tt l V s\tl i:");
result.add("lists", "l0 I s t s");
result.add("list's", "l0 I s t s");
result.add("liszt", "l0 I s t");
result.add("lit", "l0 I t");
result.add("lit-\tman", "l0 I t\tm V n");
result.add("lit-\tmus", "l0 I t\tm V s");
result.add("lit-\tt-\tler", "l0 I\tt V\tl @r");
result.add("lit-\tt-\tlest", "l0 I\tt V\tl V s t");
result.add("lit-\tte-\tring", "l0 I\tt @r\tI N");
result.add("lit-\ttell", "l0 I\tt V l");
result.add("lit-\tten", "l0 I\tt V n");
result.add("lit-\tter", "l0 I\tt @r");
result.add("lit-\ttered", "l0 I\tt @r d");
result.add("lit-\tters", "l0 I\tt @r z");
result.add("lit-\ttle", "l0 I\tt V l");
result.add("lit-\ttle-\tfield", "l0 I\tt V l\tf i: l d");
result.add("lit-\ttle-\tjohn", "l0 I\tt V l\tdZ Q n");
result.add("lit-\ttle-\tton", "l0 I\tt V l\tt V n");
result.add("lit-\ttles", "l0 I\tt V l z");
result.add("lit-\ttle's", "l0 I\tt V l z");
result.add("lit-\tto-\tral", "l0 I\tt @r\tV l");
result.add("lit-\tton", "l0 I\tt V n");
result.add("lit-\tton's", "l0 I\tt V n z");
result.add("lit-\tvak", "l0 I t\tv V k");
result.add("litch-\tfield", "l0 I tS\tf i: l d");
result.add("litch-\tfield's", "l0 I tS\tf i: l d z");
result.add("lite", "l0 aI t");
result.add("lites", "l0 aI t s");
result.add("lithe", "l0 aI D");
result.add("lits", "l0 I t s");
result.add("litt", "l0 I t");
result.add("litt-\tman", "l0 I t\tm V n");
result.add("litz", "l0 I t s");
result.add("liu", "l0 j u:");
result.add("liv", "l0 I v");
result.add("liv-\tvie", "l0 I\tv i:");
result.add("live", "l0 aI v");
result.add("live-\tli-\ter", "l0 aI v\tl i:\t@r");
result.add("live-\tli-\test", "l0 aI v\tl i:\tV s t");
result.add("live-\tli-\thood", "l0 aI v\tl i:\th U d");
result.add("live-\tli-\thoods", "l0 aI v\tl i:\th U d z");
result.add("live-\tli-\tness", "l0 aI v\tl i:\tn V s");
result.add("live-\tly", "l0 aI v\tl i:");
result.add("live-\tried", "l0 I v\tr i: d");
result.add("live-\tstock", "l0 aI v\ts t Q k");
result.add("lived", "l0 aI v d");
result.add("lives", "l0 I v z");
result.add("liz", "l0 I z");
result.add("liz-\tzie", "l0 I\tz i:");
result.add("liz-\tzy", "l0 I\tz i:");
result.add("lla-\tma", "l0 Q\tm V");
result.add("lla-\tmas", "l0 Q\tm V z");
result.add("ln", "l0 eI n");
result.add("lo", "l0 @U");
result.add("lo-\tbel", "l0 @U\tb V l");
result.add("lo-\tbell", "l0 @U\tb e l");
result.add("lo-\tbo", "l0 @U\tb @U");
result.add("lo-\tbo-\tto-\tmy", "l0 @U\tb @U\tt @U\tm i:");
result.add("lo-\tbos", "l0 @U\tb @U s");
result.add("lo-\tbules", "l0 Q b\tj u: l z");
result.add("lo-\tca", "l0 @U\tk V");
result.add("lo-\tca-\tli-\tties", "l0 @U\tk {\tl I\tt i: z");
result.add("lo-\tca-\tli-\tty", "l0 @U\tk {\tl I\tt i:");
result.add("lo-\tca-\tli-\tza-\ttion", "l0 @U\tk V\tl I\tz eI\tS V n");
result.add("lo-\tca-\tlize", "l0 @U\tk V\tl aI z");
result.add("lo-\tca-\tlized", "l0 @U\tk V\tl aI z d");
result.add("lo-\tca-\tted", "l0 @U\tk eI\tt V d");
result.add("lo-\tca-\tting", "l0 @U\tk eI\tt I N");
result.add("lo-\tca-\ttion", "l0 @U\tk eI\tS V n");
result.add("lo-\tca-\ttions", "l0 @U\tk eI\tS V n z");
result.add("lo-\tca-\ttor", "l0 @U\tk eI\tt @r");
result.add("lo-\tcal", "l0 @U\tk V l");
result.add("lo-\tcal-\tly", "l0 @U\tk V\tl i:");
result.add("lo-\tcale", "l0 @U\tk { l");
result.add("lo-\tcales", "l0 @U\tk { l z");
result.add("lo-\tcals", "l0 @U\tk V l z");
result.add("lo-\tcate", "l0 @U\tk eI t");
result.add("lo-\tcates", "l0 @U\tk eI t s");
result.add("lo-\tci", "l0 @U\tk i:");
result.add("lo-\tco", "l0 @U\tk @U");
result.add("lo-\tco-\tmo-\ttion", "l0 @U\tk V\tm @U\tS V n");
result.add("lo-\tco-\tmo-\ttive", "l0 @U\tk V\tm @U\tt I v");
result.add("lo-\tco-\tmo-\ttives", "l0 @U\tk V\tm @U\tt I v z");
result.add("lo-\tco-\tmo-\ttor", "l0 @U\tk V\tm @U\tt @r");
result.add("lo-\tcus", "l0 @U\tk V s");
result.add("lo-\tcust", "l0 @U\tk V s t");
result.add("lo-\tcusts", "l0 @U\tk V s t s");
result.add("lo-\tden", "l0 @U\td V n");
result.add("lo-\tdi", "l0 @U\td aI");
result.add("lo-\tel-\tla", "l0 @U\te\tl V");
result.add("lo-\tess", "l0 @U\tV s");
result.add("lo-\tga-\tri-\tthm", "l0 Q\tg @r\tI\tD V m");
result.add("lo-\tga-\tri-\tthms", "l0 Q\tg @r\tI\tD V m z");
result.add("lo-\tga-\trith-\tmic", "l0 Q\tg @r\tI D\tm I k");
result.add("lo-\tgan", "l0 @U\tg V n");
result.add("lo-\tges", "l0 @U\tdZ V z");
result.add("lo-\tgi-\tcal", "l0 Q\tdZ I\tk V l");
result.add("lo-\tgi-\tcian", "l0 @U\tdZ I\tS V n");
result.add("lo-\tgic", "l0 Q\tdZ I k");
result.add("lo-\tgical-\tly", "l0 Q\tdZ I k\tl i:");
result.add("lo-\tgie", "l0 @U\tdZ i:");
result.add("lo-\tgis-\tti-\tcal", "l0 V\tdZ I s\tt I\tk V l");
result.add("lo-\tgis-\ttic", "l0 V\tdZ I s\tt I k");
result.add("lo-\tgis-\ttical-\tly", "l0 V\tdZ I s\tt I k\tl i:");
result.add("lo-\tgis-\ttics", "l0 V\tdZ I s\tt I k s");
result.add("lo-\tgo", "l0 @U\tg @U");
result.add("lo-\tgog-\tra-\tphic", "l0 O:\tg V g\tr {\tf I k");
result.add("lo-\tgog-\tram", "l0 O:\tg V g\tr { m");
result.add("lo-\tgog-\trams", "l0 O:\tg V g\tr { m z");
result.add("lo-\tgos", "l0 @U\tg @U z");
result.add("lo-\then-\tgrin", "l0 @U\tV n\tg r I n");
result.add("lo-\tis", "l0 @U\tI s");
result.add("lo-\tise", "l0 u:\tI s");
result.add("lo-\tla", "l0 @U\tl V");
result.add("lo-\tle-\tta", "l0 @U\tl e\tt V");
result.add("lo-\tli-\tta", "l0 @U\tl i:\tt V");
result.add("lo-\tma", "l0 @U\tm V");
result.add("lo-\tman", "l0 @U\tm V n");
result.add("lo-\tmas", "l0 @U\tm V z");
result.add("lo-\tmax", "l0 @U\tm { k s");
result.add("lo-\tna", "l0 @U\tn V");
result.add("lo-\tnas", "l0 @U\tn V z");
result.add("lo-\tner", "l0 @U\tn @r");
result.add("lo-\tner-\tgan", "l0 Q\tn @r\tg V n");
result.add("lo-\tners", "l0 @U\tn @r z");
result.add("lo-\tney", "l0 @U\tn i:");
result.add("lo-\tnga-\tcre", "l0 O:\tN eI\tk @r");
result.add("lo-\tni", "l0 Q\tn i:");
result.add("lo-\tpe-\tz's", "l0 @U\tp e\tz V z");
result.add("lo-\tper", "l0 @U\tp @r");
result.add("lo-\tpez", "l0 @U\tp e z");
result.add("lo-\tqua-\tcious", "l0 @U k\tw eI\tS V s");
result.add("lo-\tquat", "l0 @U k\tw Q t");
result.add("lo-\tra", "l0 O@\tV");
result.add("lo-\train", "l0 @r\teI n");
result.add("lo-\traine", "l0 @r\teI n");
result.add("lo-\tral", "l0 O@\tV l");
result.add("lo-\tral's", "l0 O@\tV l z");
result.add("lo-\tran", "l0 O@\t{ n");
result.add("lo-\tran-\tger", "l0 O@\teI n\tdZ @r");
result.add("l'o-\tre-\tal", "l0 O@\ti:\t{ l");
result.add("lo-\tre-\tdo", "l0 O@\teI\td @U");
result.add("lo-\tre-\tlei", "l0 O@\tV\tl aI");
result.add("lo-\tre-\tna", "l0 O@\te\tn V");
result.add("lo-\tre-\tna's", "l0 O@\te\tn V z");
result.add("lo-\tree", "l0 O@\ti:");
result.add("lo-\tren", "l0 O@\tV n");
result.add("lo-\tren-\tza", "l0 O@\te n\tz V");
result.add("lo-\tren-\tza-\tna", "l0 O@\te n\tz {\tn V");
result.add("lo-\tren-\tzet-\tti", "l0 O@\te n\tz e\tt i:");
result.add("lo-\tren-\tzo", "l0 @r\te n\tz @U");
result.add("lo-\tren-\tzo's", "l0 O@\te n\tz @U z");
result.add("lo-\trence", "l0 O@\tV n s");
result.add("lo-\trene", "l0 O@\ti: n");
result.add("lo-\trentz", "l0 O@\te n t s");
result.add("lo-\trenz", "l0 @r\te n t s");
result.add("lo-\tret-\tta", "l0 @r\te\tt V");
result.add("lo-\tret-\tto", "l0 O@\te\tt @U");
result.add("lo-\trette", "l0 O@\te t");
result.add("lo-\tri", "l0 O@\ti:");
result.add("lo-\tri-\ta", "l0 O@\ti:\tV");
result.add("lo-\tsers", "l0 u:\tz @r z");
result.add("lo-\tses", "l0 u:\tz V z");
result.add("lo-\tsey", "l0 Q\ts i:");
result.add("lo-\tsing", "l0 u:\tz I N");
result.add("lo-\tthi-\tan", "l0 Q\tT i:\tV n");
result.add("lo-\ttion", "l0 @U\tS V n");
result.add("lo-\ttions", "l0 @U\tS V n z");
result.add("lo-\ttion's", "l0 @U\tS V n z");
result.add("lo-\ttu-\ts's", "l0 @U\tt V\ts V z");
result.add("lo-\ttus", "l0 @U\tt V s");
result.add("lo-\tva-\tble", "l0 V\tv V\tb V l");
result.add("lo-\tva-\tto", "l0 @U\tv Q\tt @U");
result.add("lo-\tvage", "l0 V\tv V dZ");
result.add("lo-\tvas-\tta-\ttin", "l0 @U\tv { s\tt V\tt V n");
result.add("lo-\tve-\tring", "l0 V\tv @r\tI N");
result.add("lo-\tvell", "l0 V\tv V l");
result.add("lo-\tver", "l0 V\tv @r");
result.add("lo-\tvers", "l0 V\tv @r z");
result.add("lo-\tver's", "l0 V\tv @r z");
result.add("lo-\tvers'", "l0 V\tv @r z");
result.add("lo-\tvett", "l0 V\tv I t");
result.add("lo-\tvie", "l0 V\tv i:");
result.add("lo-\tving", "l0 V\tv I N");
result.add("lo-\tving-\tly", "l0 V\tv I N\tl i:");
result.add("lo-\tvings", "l0 V\tv I N z");
result.add("lo-\twe-\tring", "l0 @U\t@r\tI N");
result.add("lo-\twe-\try", "l0 aU\t@r\ti:");
result.add("lo-\twell", "l0 @U\tV l");
result.add("lo-\twen-\tstein", "l0 @U\tV n\ts t aI n");
result.add("lo-\twer", "l0 @U\t@r");
result.add("lo-\twered", "l0 @U\t@r d");
result.add("lo-\twers", "l0 @U\t@r z");
result.add("lo-\twest", "l0 @U\tV s t");
result.add("lo-\twy", "l0 @U\ti:");
result.add("lo-\tya-\tlist", "l0 OI\tV\tl V s t");
result.add("lo-\tya-\tlists", "l0 OI\tV\tl V s t s");
result.add("lo-\tyal", "l0 OI\tV l");
result.add("lo-\tyal-\tly", "l0 OI\tV\tl i:");
result.add("lo-\tyal-\tties", "l0 OI\tV l\tt i: z");
result.add("lo-\tyal-\tton", "l0 OI\tV l\tt V n");
result.add("lo-\tyal-\tty", "l0 OI\tV l\tt i:");
result.add("lo-\tyall", "l0 OI\tV l");
result.add("lo-\tyo-\tla", "l0 OI\t@U\tl V");
result.add("lo-\tza-\tno", "l0 @U\tz Q\tn @U");
result.add("lo-\tza-\tno's", "l0 @U\tz Q\tn @U z");
result.add("lo-\tzen-\tges", "l0 O:\tz V n\tdZ V z");
result.add("lo-\tzenge", "l0 O:\tz V n dZ");
result.add("loa-\tmy", "l0 @U\tm i:");
result.add("loa-\tning", "l0 @U\tn I N");
result.add("loa-\tthing", "l0 @U\tT I N");
result.add("load", "l0 @U d");
result.add("loam", "l0 @U m");
result.add("loan", "l0 @U n");
result.add("loaned", "l0 @U n d");
result.add("loans", "l0 @U n z");
result.add("loan's", "l0 @U n z");
result.add("loar", "l0 O@");
result.add("loath", "l0 @U T");
result.add("loath-\tsome", "l0 @U D\ts V m");
result.add("loathe", "l0 @U D");
result.add("loathed", "l0 @U D d");
result.add("loaves", "l0 @U v z");
result.add("lob", "l0 Q b");
result.add("lob-\tbied", "l0 Q\tb i: d");
result.add("lob-\tbies", "l0 Q\tb i: z");
result.add("lob-\tbing", "l0 Q\tb I N");
result.add("lob-\tby", "l0 Q\tb i:");
result.add("lob-\tby-\ting", "l0 Q\tb i:\tI N");
result.add("lob-\tby-\tist", "l0 Q\tb i:\tI s t");
result.add("lob-\tby-\tists", "l0 Q\tb i:\tI s t s");
result.add("lob-\tby's", "l0 Q\tb i: z");
result.add("lob-\tlol-\tly", "l0 Q b\tl Q\tl i:");
result.add("lobbed", "l0 Q b d");
result.add("lobe", "l0 @U b");
result.add("lobed", "l0 @U b d");
result.add("lobes", "l0 @U b z");
result.add("lobs", "l0 Q b z");
result.add("lobs-\tter", "l0 Q b\ts t @r");
result.add("lobs-\tter-\tman", "l0 Q b\ts t @r\tm V n");
result.add("lobs-\tter-\tmen", "l0 Q b\ts t @r\tm e n");
result.add("lobs-\tters", "l0 Q b\ts t @r z");
result.add("lobs-\tter's", "l0 Q b\ts t @r z");
result.add("loc-\tker", "l0 Q\tk @r");
result.add("loc-\tker-\tbie", "l0 Q\tk @r\tb i:");
result.add("loc-\tker-\tman", "l0 Q\tk @r\tm V n");
result.add("loc-\tkers", "l0 Q\tk @r z");
result.add("loc-\tkett", "l0 Q\tk V t");
result.add("loc-\tkett's", "l0 Q\tk V t s");
result.add("loc-\tkie", "l0 Q\tk i:");
result.add("loc-\tking", "l0 Q\tk I N");
result.add("loch", "l0 Q k");
result.add("loch-\tner", "l0 Q k\tn @r");
result.add("lock", "l0 Q k");
result.add("lock-\tdown", "l0 Q k\td aU n");
result.add("lock-\thart", "l0 Q k\th Q@ t");
result.add("lock-\theed", "l0 Q k\th i: d");
result.add("lock-\theed's", "l0 Q k\th i: d z");
result.add("lock-\tlin", "l0 Q k\tl I n");
result.add("lock-\tman", "l0 Q k\tm V n");
result.add("lock-\tney", "l0 Q k\tn eI");
result.add("lock-\tout", "l0 Q\tk aU t");
result.add("lock-\touts", "l0 Q\tk aU t s");
result.add("lock-\tport", "l0 Q k\tp O@ t");
result.add("lock-\tsmith", "l0 Q k\ts m I T");
result.add("lock-\tstep", "l0 Q k\ts t e p");
result.add("lock-\tup", "l0 Q\tk V p");
result.add("lock-\twood", "l0 Q k\tw U d");
result.add("lock-\twood's", "l0 Q k\tw U d z");
result.add("lock-\tyer", "l0 Q k\tj @r");
result.add("locke", "l0 Q k");
result.add("locked", "l0 Q k t");
result.add("locks", "l0 Q k s");
result.add("lod-\tges", "l0 Q\tdZ V z");
result.add("lod-\tge's", "l0 Q\tdZ V z");
result.add("lod-\tging", "l0 Q\tdZ I N");
result.add("lod-\tgings", "l0 Q\tdZ I N z");
result.add("lode", "l0 @U d");
result.add("lode-\tstar", "l0 @U d\ts t Q@");
result.add("lode-\tstone", "l0 @U d\ts t @U n");
result.add("lodes", "l0 @U d z");
result.add("lodge", "l0 Q dZ");
result.add("lodge-\tpole", "l0 Q dZ\tp @U l");
result.add("lodged", "l0 Q dZ d");
result.add("loe", "l0 @U");
result.add("loe-\twe", "l0 Q\tu:");
result.add("loe-\twi", "l0 @U\tw i:");
result.add("loe-\twy", "l0 @U\ti:");
result.add("loeb", "l0 @U b");
result.add("loeff-\tler", "l0 @U f\tl @r");
result.add("loews", "l0 @U z");
result.add("lof-\tti-\ter", "l0 O: f\tt i:\t@r");
result.add("lof-\ttis", "l0 Q f\tt I s");
result.add("lof-\ttus", "l0 O: f\tt V s");
result.add("lof-\tty", "l0 O: f\tt i:");
result.add("loft", "l0 O: f t");
result.add("lofts", "l0 O: f t s");
result.add("loft's", "l0 O: f t s");
result.add("log", "l0 O: g");
result.add("log-\tbook", "l0 O: g\tb U k");
result.add("log-\tger", "l0 Q\tg @r");
result.add("log-\tger-\thead", "l0 Q\tg @r\th e d");
result.add("log-\tger-\theads", "l0 Q\tg @r\th e d z");
result.add("log-\tgers", "l0 Q\tg @r z");
result.add("log-\tgi-\ta", "l0 Q\tg i:\tV");
result.add("log-\tging", "l0 O:\tg I N");
result.add("log-\tgins", "l0 Q\tg I n z");
result.add("log-\tjam", "l0 Q g\tdZ { m");
result.add("log-\tjams", "l0 Q g\tdZ { m z");
result.add("log-\twood", "l0 Q g\tw U d");
result.add("loge", "l0 @U dZ");
result.add("logged", "l0 O: g d");
result.add("logs", "l0 O: g z");
result.add("loh-\tman", "l0 @U\tm V n");
result.add("loh-\tner", "l0 @U\tn @r");
result.add("lohn", "l0 Q n");
result.add("lohr-\tman", "l0 O@\tm V n");
result.add("lohr-\tmann", "l0 O@\tm V n");
result.add("lohse", "l0 @U s");
result.add("loi-\tte-\tring", "l0 OI\tt @r\tI N");
result.add("loi-\tter", "l0 OI\tt @r");
result.add("loin", "l0 OI n");
result.add("loin-\tcloth", "l0 OI n\tk l O: T");
result.add("loire", "l0 OI r");
result.add("lok", "l0 Q k");
result.add("lol-\tla-\tpa-\tloo-\tza", "l0 Q\tl V\tp V\tl u:\tz V");
result.add("lol-\tla-\tpa-\tloo-\tzas", "l0 Q\tl V\tp V\tl u:\tz V z");
result.add("lol-\tlard", "l0 Q\tl @r d");
result.add("lol-\tli-\tpop", "l0 Q\tl i:\tp Q p");
result.add("lol-\tli-\tpops", "l0 Q\tl i:\tp Q p s");
result.add("lol-\tling", "l0 Q\tl I N");
result.add("lol-\tly", "l0 Q\tl i:");
result.add("loll", "l0 Q l");
result.add("lom-\tbar-\tdi", "l0 Q m\tb Q@\td i:");
result.add("lom-\tbar-\tdo", "l0 Q m\tb Q@\td @U");
result.add("lom-\tbard", "l0 Q m\tb Q@ d");
result.add("lom-\tbards", "l0 Q m\tb Q@ d z");
result.add("lom-\tpoc", "l0 Q m\tp Q k");
result.add("lomb", "l0 Q m");
result.add("lon", "l0 Q n");
result.add("lon-\tdo-\tner", "l0 V n\td V\tn @r");
result.add("lon-\tdo-\tners", "l0 V n\td V\tn @r z");
result.add("lon-\tdon", "l0 V n\td V n");
result.add("lon-\tdon-\tder-\try", "l0 V n\td V n\td e@\ti:");
result.add("lon-\tdon's", "l0 V n\td V n z");
result.add("lon-\tgan", "l0 Q N\tg V n");
result.add("lon-\tge-\tvi-\tty", "l0 O: n\tdZ e\tv I\tt i:");
result.add("lon-\tger", "l0 O: N\tg @r");
result.add("lon-\tgest", "l0 O: N\tg V s t");
result.add("lon-\tghi", "l0 @U n\tg i:");
result.add("lon-\tgi-\ttu-\tdi-\tnal", "l0 Q n\tdZ I\tt u:\td I\tn V l");
result.add("lon-\tgi-\ttude", "l0 Q n\tdZ I\tt u: d");
result.add("lon-\tgi-\ttudes", "l0 Q n\tdZ I\tt u: d z");
result.add("lon-\tging", "l0 O:\tN I N");
result.add("lon-\tging-\tly", "l0 O:\tN I N\tl i:");
result.add("lon-\tgings", "l0 O:\tN I N z");
result.add("lon-\tgish", "l0 O:\tN I S");
result.add("lon-\tgo", "l0 O: N\tg @U");
result.add("lon-\tgo-\tbar-\tdi", "l0 @U N\tg @U\tb Q@\td i:");
result.add("lon-\tnie", "l0 O:\tn i:");
result.add("lon-\tny", "l0 O:\tn i:");
result.add("lone", "l0 @U n");
result.add("lone-\tli-\tness", "l0 @U n\tl i:\tn V s");
result.add("lone-\tly", "l0 @U n\tl i:");
result.add("lone-\tsome", "l0 @U n\ts V m");
result.add("lone-\ttree", "l0 @U n\tt r i:");
result.add("long", "l0 O: N");
result.add("long-\tbow", "l0 O: N\tb @U");
result.add("long-\tfel-\tlow", "l0 O: N\tf e\tl @U");
result.add("long-\thair", "l0 O: N\th e@");
result.add("long-\thand", "l0 O: N\th { n d");
result.add("long-\thorn", "l0 O: N\th O@ n");
result.add("long-\thorns", "l0 O: N\th O@ n z");
result.add("long-\thouse", "l0 O: N\th aU s");
result.add("long-\tleaf", "l0 O: N\tl i: f");
result.add("long-\tleg", "l0 O: N\tl e g");
result.add("long-\tlegs", "l0 O: N\tl e g z");
result.add("long-\tley", "l0 Q N\tg l i:");
result.add("long-\tmire", "l0 Q N\tm aI r");
result.add("long-\tmont", "l0 O: N\tm Q n t");
result.add("long-\trange", "l0 O: N\tr eI n dZ");
result.add("long-\tshore", "l0 O: N\tS O@");
result.add("long-\tshore-\tmen", "l0 O: N\tS O@\tm V n");
result.add("long-\tshot", "l0 O: N\tS Q t");
result.add("long-\tspur", "l0 O: N\ts p @r");
result.add("long-\tspurs", "l0 O: N\ts p @r z");
result.add("long-\tstan-\tding", "l0 O: N\ts t { n\td I N");
result.add("long-\tstreet", "l0 O: N\ts t r i: t");
result.add("long-\tterm", "l0 O: N\tt @r m");
result.add("long-\ttime", "l0 O: N\tt aI m");
result.add("long-\ttin", "l0 O: N\tt I n");
result.add("long-\tton", "l0 O: N\tt V n");
result.add("long-\tview", "l0 O: N\tv j u:");
result.add("long-\twin-\tded", "l0 O: N\tw I n\td V d");
result.add("long-\twood", "l0 O: N\tw U d");
result.add("long-\tworth", "l0 O: N\tw @r T");
result.add("longe", "l0 Q n dZ");
result.add("longed", "l0 O: N d");
result.add("longs", "l0 O: N z");
result.add("long's", "l0 O: N z");
result.add("lons-\tdale", "l0 Q n\ts d eI l");
result.add("loo", "l0 u:");
result.add("loo-\tby", "l0 u:\tb i:");
result.add("loo-\tka-\tlike", "l0 U\tk V\tl aI k");
result.add("loo-\tker", "l0 U\tk @r");
result.add("loo-\tkers", "l0 U\tk @r z");
result.add("loo-\tking", "l0 U\tk I N");
result.add("loo-\tmer", "l0 u:\tm @r");
result.add("loo-\tming", "l0 u:\tm I N");
result.add("loo-\tmis", "l0 u:\tm I s");
result.add("loo-\tney", "l0 u:\tn i:");
result.add("loo-\tny", "l0 u:\tn i:");
result.add("loo-\tper", "l0 u:\tp @r");
result.add("loo-\tpers", "l0 u:\tp @r z");
result.add("loo-\tpy", "l0 u:\tp i:");
result.add("loo-\tse-\tning", "l0 u:\ts V\tn I N");
result.add("loo-\tsen", "l0 u:\ts V n");
result.add("loo-\tsened", "l0 u:\ts V n d");
result.add("loo-\tsens", "l0 u:\ts V n z");
result.add("loo-\tser", "l0 u:\ts @r");
result.add("loo-\tses", "l0 u:\ts V z");
result.add("loo-\tsing", "l0 u:\ts I N");
result.add("loo-\tted", "l0 u:\tt V d");
result.add("loo-\tter", "l0 u:\tt @r");
result.add("loo-\tters", "l0 u:\tt @r z");
result.add("loo-\tting", "l0 u:\tt I N");
result.add("look", "l0 U k");
result.add("look-\ta-\tlike", "l0 U\tk V\tl aI k");
result.add("look-\tout", "l0 U\tk aU t");
result.add("looked", "l0 U k t");
result.add("looks", "l0 U k s");
result.add("loom", "l0 u: m");
result.add("loomed", "l0 u: m d");
result.add("looms", "l0 u: m z");
result.add("loon", "l0 u: n");
result.add("loons", "l0 u: n z");
result.add("loop", "l0 u: p");
result.add("loop-\thole", "l0 u: p\th @U l");
result.add("loop-\tholes", "l0 u: p\th @U l z");
result.add("looped", "l0 u: p t");
result.add("loops", "l0 u: p s");
result.add("loos", "l0 u: z");
result.add("loose", "l0 u: s");
result.add("loose-\tly", "l0 u: s\tl i:");
result.add("loose-\tstrife", "l0 u: s\ts t r aI f");
result.add("loose-\tstrifes", "l0 u: s\ts t r aI f s");
result.add("loosed", "l0 u: s t");
result.add("loot", "l0 u: t");
result.add("lop", "l0 Q p");
result.add("lop-\tpers", "l0 Q\tp @r z");
result.add("lop-\tping", "l0 Q\tp I N");
result.add("lop-\tsi-\tded", "l0 Q p\ts aI\td V d");
result.add("lope", "l0 @U p");
result.add("lope-\tman", "l0 @U p\tm V n");
result.add("lopes", "l0 @U p s");
result.add("lopped", "l0 Q p t");
result.add("lor", "l0 O@");
result.add("lor-\tdy", "l0 O@\td i:");
result.add("lord", "l0 O@ d");
result.add("lords", "l0 O@ d z");
result.add("lord's", "l0 O@ d z");
result.add("lore", "l0 O@");
result.add("los-\tses", "l0 O:\ts V z");
result.add("losh", "l0 Q S");
result.add("loss", "l0 O: s");
result.add("lost", "l0 O: s t");
result.add("lot", "l0 Q t");
result.add("lot-\tta", "l0 Q\tt V");
result.add("lot-\tte-\tries", "l0 Q\tt @r\ti: z");
result.add("lot-\tte-\try", "l0 Q\tt @r\ti:");
result.add("lot-\tter", "l0 Q\tt @r");
result.add("lot-\ttie", "l0 Q\tt i:");
result.add("lot-\tto", "l0 Q\tt @U");
result.add("lot-\tty", "l0 Q\tt i:");
result.add("loth", "l0 Q T");
result.add("lots", "l0 Q t s");
result.add("lot's", "l0 Q t s");
result.add("lott", "l0 Q t");
result.add("lotte", "l0 Q t");
result.add("lottes", "l0 Q t s");
result.add("lott's", "l0 Q t z");
result.add("lotz", "l0 Q t s");
result.add("lotze", "l0 @U t z");
result.add("lou", "l0 u:");
result.add("lou-\tan-\tna", "l0 aU\tQ\tn V");
result.add("lou-\tanne", "l0 u:\t{ n");
result.add("lou-\tden", "l0 aU\td V n");
result.add("lou-\tder", "l0 aU\td @r");
result.add("lou-\tdest", "l0 aU\td V s t");
result.add("lou-\tdon", "l0 aU\td V n");
result.add("lou-\tel-\tla", "l0 aU\te\tl V");
result.add("lou-\tgheed", "l0 aU\ti: d");
result.add("lou-\ti-\tsa", "l0 u:\ti:\tz V");
result.add("lou-\ti-\tsi-\ta-\tna", "l0 u:\ti:\tz i:\t{\tn V");
result.add("lou-\ti-\tsi-\ta-\tna's", "l0 u:\ti:\tz i:\t{\tn V z");
result.add("lou-\ti-\tsi-\ta-\tni-\tan", "l0 u:\ti:\tz i:\t{\tn i:\tV n");
result.add("lou-\ti-\tsi-\ta-\tni-\tans", "l0 u:\ti:\tz i:\t{\tn i:\tV n z");
result.add("lou-\tie", "l0 u:\ti:");
result.add("lou-\tis", "l0 u:\tI s");
result.add("lou-\tis-\tville", "l0 u:\ti:\tv I l");
result.add("lou-\tise", "l0 u:\ti: z");
result.add("lou-\tren-\tco", "l0 aU\tr e n\tk @U");
result.add("lou-\trie", "l0 aU\tr i:");
result.add("lou-\try", "l0 u:\tr i:");
result.add("lou-\tsi-\tness", "l0 aU\tz i:\tn V s");
result.add("lou-\tsy", "l0 aU\tz i:");
result.add("loud", "l0 aU d");
result.add("loud-\tly", "l0 aU d\tl i:");
result.add("loud-\tspea-\tker", "l0 aU d\ts p i:\tk @r");
result.add("loud-\tspea-\tkers", "l0 aU d\ts p i:\tk @r z");
result.add("lough", "l0 aU");
result.add("lough-\tlin", "l0 O: f\tl I n");
result.add("lough-\tman", "l0 aU\tm V n");
result.add("loui-\tsette", "l0 w i:\tz e t");
result.add("louk", "l0 aU k");
result.add("loun-\tges", "l0 aU n\tdZ V z");
result.add("loun-\tging", "l0 aU n\tdZ I N");
result.add("lounge", "l0 aU n dZ");
result.add("loup", "l0 u: p");
result.add("loupe", "l0 u: p");
result.add("lour", "l0 aU r");
result.add("lourdes", "l0 O@ d z");
result.add("lou's", "l0 u: z");
result.add("louse", "l0 aU s");
result.add("louth", "l0 aU T");
result.add("louv-\tre", "l0 u: v\tr V");
result.add("loux", "l0 u:");
result.add("love", "l0 V v");
result.add("love-\tday", "l0 V v\td eI");
result.add("love-\tjoy", "l0 V v\tdZ OI");
result.add("love-\tlace", "l0 V v\tl eI s");
result.add("love-\tland", "l0 V v\tl V n d");
result.add("love-\tless", "l0 V v\tl V s");
result.add("love-\tly", "l0 V v\tl i:");
result.add("love-\tma-\tking", "l0 V v\tm eI\tk I N");
result.add("love-\tridge", "l0 V v\tr I dZ");
result.add("loved", "l0 V v d");
result.add("loves", "l0 V v z");
result.add("love's", "l0 V v z");
result.add("low", "l0 @U");
result.add("low-\tborn", "l0 @U\tb O@ n");
result.add("low-\tden", "l0 @U\td V n");
result.add("low-\tder", "l0 @U\td @r");
result.add("low-\tdown", "l0 @U\td aU n");
result.add("low-\ting", "l0 @U\tI N");
result.add("low-\tland", "l0 @U\tl { n d");
result.add("low-\tlands", "l0 @U\tl { n d z");
result.add("low-\tly", "l0 @U\tl i:");
result.add("low-\tman", "l0 @U\tm V n");
result.add("low-\tney", "l0 @U\tn i:");
result.add("low-\trance", "l0 O@\tV n s");
result.add("low-\trie", "l0 O@\ti:");
result.add("low-\try", "l0 aU\tr i:");
result.add("low-\tspi-\tri-\tted", "l0 @U s\tp I@\tI\tt I d");
result.add("low-\tspi-\tri-\tted-\tness", "l0 @U s\tp I@\tI\tt I d\tn e s");
result.add("lowe", "l0 @U");
result.add("lowes", "l0 @U z");
result.add("lowe's", "l0 @U z");
result.add("lown", "l0 aU n");
result.add("lown-\tdes", "l0 @U n\td i: z");
result.add("lows", "l0 @U z");
result.add("lox", "l0 Q k s");
result.add("loy", "l0 OI");
result.add("loyce", "l0 OI s");
result.add("loyd", "l0 OI d");
result.add("l's", "e l z");
result.add("lu", "l0 u:");
result.add("lu-\ta-\tna", "l0 u:\t{\tn V");
result.add("lu-\tan-\tda", "l0 u:\tQ n\td V");
result.add("lu-\tan-\tda's", "l0 u:\tQ n\td V z");
result.add("lu-\tane", "l0 u:\tV n");
result.add("lu-\tau", "l0 u:\taU");
result.add("lu-\tba", "l0 u:\tb V");
result.add("lu-\tba-\tvit-\tcher", "l0 u:\tb V\tv I\ttS @r");
result.add("lu-\tba-\tvit-\tchers", "l0 u:\tb V\tv I\ttS @r z");
result.add("lu-\tba-\tvitch", "l0 u:\tb V\tv I tS");
result.add("lu-\tbas", "l0 u:\tb V z");
result.add("lu-\tbeck", "l0 u:\tb e k");
result.add("lu-\tbell", "l0 u:\tb e l");
result.add("lu-\tbin", "l0 u:\tb I n");
result.add("lu-\tbow", "l0 u:\tb @U");
result.add("lu-\tby", "l0 u:\tb i:");
result.add("lu-\tca", "l0 u:\tk V");
result.add("lu-\tcas", "l0 u:\tk V s");
result.add("lu-\tcas-\tville", "l0 u:\tk V s\tv I l");
result.add("lu-\tcent", "l0 u:\ts V n t");
result.add("lu-\tcerne", "l0 u:\ts @r n");
result.add("lu-\tce's", "l0 u:\ts V z");
result.add("lu-\tcey", "l0 u:\ts i:");
result.add("lu-\tci-\ta-\tno", "l0 u:\ttS i:\tQ\tn @U");
result.add("lu-\tci-\tda", "l0 u:\ttS i:\td V");
result.add("lu-\tci-\ten", "l0 u:\ts i:\tV n");
result.add("lu-\tci-\tenne", "l0 u:\ttS i:\te n");
result.add("lu-\tci-\ter", "l0 u:\ts i:\t@r");
result.add("lu-\tci-\tfer", "l0 u:\ts I\tf @r");
result.add("lu-\tci-\to", "l0 u:\ts i:\t@U");
result.add("lu-\tcia", "l0 u:\tS V");
result.add("lu-\tcian", "l0 u:\tS V n");
result.add("lu-\tcid", "l0 u:\ts I d");
result.add("lu-\tcie", "l0 u:\ts i:");
result.add("lu-\tcile", "l0 u:\ts i: l");
result.add("lu-\tcille", "l0 u:\ts i: l");
result.add("lu-\tcin-\tda", "l0 u:\ts I n\td V");
result.add("lu-\tcite", "l0 u:\ts aI t");
result.add("lu-\tcius", "l0 u:\tS V s");
result.add("lu-\tcy", "l0 u:\ts i:");
result.add("lu-\tde-\twig", "l0 V\td u:\tI g");
result.add("lu-\tdi-\tcrous", "l0 u:\td I k\tr V s");
result.add("lu-\tdi-\tcrous-\tly", "l0 u:\td I k\tr V s\tl i:");
result.add("lu-\tding-\tton", "l0 V\td I N\tt V n");
result.add("lu-\tel-\tla", "l0 u:\te\tl V");
result.add("lu-\tga-\tno", "l0 u:\tg Q\tn @U");
result.add("lu-\tgar", "l0 u:\tg @r");
result.add("lu-\tgar's", "l0 u:\tg @r z");
result.add("lu-\tger", "l0 u:\tg @r");
result.add("lu-\tgers", "l0 u:\tg @r z");
result.add("lu-\tgo", "l0 u:\tg @U");
result.add("lu-\tgo-\tsi", "l0 u:\tg @U\ts i:");
result.add("lu-\tgu-\tbri-\tous", "l0 u: g\tj u: b\tr i:\tV s");
result.add("lu-\ti", "l0 u:\tI");
result.add("lu-\ti-\tgi", "l0 u:\ti:\tdZ i:");
result.add("lu-\ti-\tgi's", "l0 u:\ti:\tdZ i: z");
result.add("lu-\ti-\tsa", "l0 u:\ti:\tz V");
result.add("lu-\tis", "l0 u:\ti: s");
result.add("lu-\tka", "l0 u:\tk V");
result.add("lu-\tka-\tsie-\twicz", "l0 V\tk Q\ts V\tv I tS");
result.add("lu-\tkacs", "l0 V\tk V k s");
result.add("lu-\tkas", "l0 u:\tk V z");
result.add("lu-\tkash", "l0 u:\tk { S");
result.add("lu-\tkin", "l0 u:\tk I n");
result.add("lu-\tla", "l0 u:\tl V");
result.add("lu-\tla's", "l0 u:\tl V z");
result.add("lu-\tlie", "l0 V\tl i:");
result.add("lu-\tlu", "l0 u:\tl u:");
result.add("lu-\tmen", "l0 u:\tm V n");
result.add("lu-\tmi-\tna", "l0 u:\tm I\tn V");
result.add("lu-\tmi-\tna-\tries", "l0 u:\tm I\tn e@\ti: z");
result.add("lu-\tmi-\tna-\try", "l0 u:\tm I\tn e@\ti:");
result.add("lu-\tmi-\tnal", "l0 u:\tm I\tn V l");
result.add("lu-\tmi-\tnance", "l0 u:\tm I\tn V n s");
result.add("lu-\tmi-\tne-\tscence", "l0 u:\tm I\tn e\ts V n s");
result.add("lu-\tmi-\tne-\tscent", "l0 u:\tm I\tn e\ts V n t");
result.add("lu-\tmi-\tnous", "l0 u:\tm I\tn V s");
result.add("lu-\tna", "l0 u:\tn V");
result.add("lu-\tna-\tcy", "l0 u:\tn V\ts i:");
result.add("lu-\tna-\ttic", "l0 u:\tn V\tt I k");
result.add("lu-\tna-\ttics", "l0 u:\tn V\tt I k s");
result.add("lu-\tnar", "l0 u:\tn @r");
result.add("lu-\tnet-\tta", "l0 u:\tn e\tt V");
result.add("lu-\tpi", "l0 u:\tp i:");
result.add("lu-\tpi-\tta", "l0 u:\tp i:\tt V");
result.add("lu-\tpien", "l0 V\tp i: n");
result.add("lu-\tpin", "l0 u:\tp I n");
result.add("lu-\tpine", "l0 u:\tp aI n");
result.add("lu-\tpus", "l0 u:\tp V s");
result.add("lu-\tra", "l0 U@\tV");
result.add("lu-\trette", "l0 @r\te t");
result.add("lu-\tri-\ta", "l0 U@\ti:\tV");
result.add("lu-\trid", "l0 U@\tV d");
result.add("lu-\trie", "l0 U@\ti:");
result.add("lu-\tring", "l0 U@\tI N");
result.add("lu-\tsa-\tka", "l0 u:\ts Q\tk V");
result.add("lu-\tte-\tcia", "l0 u:\tt i: S\tj V");
result.add("lu-\tter", "l0 u:\tt @r");
result.add("lu-\tthe-\tran", "l0 u:\tT @r\tV n");
result.add("lu-\tther", "l0 u:\tT @r");
result.add("lu-\tton", "l0 u:\tt V n");
result.add("lu-\twa-\tna", "l0 V\tw {\tn V");
result.add("lu-\txem-\tbourg", "l0 V k\ts V m\tb O@ g");
result.add("lu-\txor", "l0 V k\ts @r");
result.add("lu-\txu-\tri-\tant", "l0 V g\tZ @r\ti:\tV n t");
result.add("lu-\txu-\tri-\tous", "l0 V g\tZ @r\ti:\tV s");
result.add("lu-\txu-\tries", "l0 V g\tZ @r\ti: z");
result.add("lu-\txu-\try", "l0 V g\tZ @r\ti:");
result.add("lu-\tza-\tder", "l0 V\tz V\td @r");
result.add("lu-\tzon", "l0 u:\tz Q n");
result.add("lub-\tber", "l0 V\tb @r");
result.add("lub-\tbers", "l0 V\tb @r z");
result.add("lub-\tbock", "l0 V\tb V k");
result.add("lub-\tlin", "l0 V b\tl I n");
result.add("lub-\tri-\tca-\tted", "l0 u: b\tr I\tk eI\tt I d");
result.add("lub-\tri-\tca-\tting", "l0 u: b\tr I\tk eI\tt I N");
result.add("lub-\tri-\tca-\ttion", "l0 u: b\tr I\tk eI\tS V n");
result.add("lub-\tri-\tcant", "l0 u: b\tr I\tk V n t");
result.add("lub-\tri-\tcants", "l0 u: b\tr I\tk V n t s");
result.add("lub-\tri-\tcate", "l0 u: b\tr I\tk eI t");
result.add("lube", "l0 u: b");
result.add("lube's", "l0 u: b z");
result.add("lubke", "l0 V b k");
result.add("luc-\tca", "l0 u:\tk V");
result.add("luc-\tche-\tse", "l0 u:\tk eI\tz i:");
result.add("luc-\tche-\tsi", "l0 u:\tk e\ts i:");
result.add("luc-\tken", "l0 V\tk V n");
result.add("luc-\tkett", "l0 V\tk V t");
result.add("luc-\tkey", "l0 V\tk i:");
result.add("luc-\tki-\ter", "l0 V\tk i:\t@r");
result.add("luc-\tki-\test", "l0 V\tk i:\tV s t");
result.add("luc-\tki-\tly", "l0 V\tk I\tl i:");
result.add("luc-\tkie", "l0 V\tk i:");
result.add("luc-\tking", "l0 V\tk I N");
result.add("luc-\tky", "l0 V\tk i:");
result.add("luc-\tky's", "l0 V\tk i: z");
result.add("luc-\tra-\ttive", "l0 u: k\tr V\tt I v");
result.add("luc-\tre-\ttia", "l0 u: k\tr i:\tS V");
result.add("luce", "l0 u: s");
result.add("luck", "l0 V k");
result.add("luck-\tless", "l0 V k\tl V s");
result.add("lucks", "l0 V k s");
result.add("lud-\tden", "l0 V\td V n");
result.add("lud-\tdite", "l0 V\td aI t");
result.add("lud-\tdites", "l0 V\td aI t s");
result.add("lud-\tdy", "l0 V\td i:");
result.add("lud-\tlow", "l0 V d\tl @U");
result.add("lud-\tmil-\tla", "l0 V d\tm I\tl V");
result.add("lud-\twig", "l0 V d\tw I g");
result.add("lud-\twig-\tsha-\tfen", "l0 V d\tw I g\tS V\tf V n");
result.add("lude-\tman", "l0 u: d\tm V n");
result.add("lue", "l0 u:");
result.add("lue-\tders", "l0 U\td @r z");
result.add("luebke", "l0 u: b k");
result.add("luedt-\tke", "l0 U d\tk i:");
result.add("luelle", "l0 u: l");
result.add("luf-\tkin", "l0 V f\tk I n");
result.add("luf-\tthan-\tsa", "l0 V f\tt { n\tz V");
result.add("luf-\tthan-\tsa's", "l0 V f\tt { n\tz V z");
result.add("luff", "l0 V f");
result.add("luffed", "l0 V f t");
result.add("lug", "l0 V g");
result.add("lug-\tgage", "l0 V\tg V dZ");
result.add("lug-\tging", "l0 V\tg I N");
result.add("lug-\tworm", "l0 V g\tw @r m");
result.add("lug-\tworms", "l0 V g\tw @r m z");
result.add("luge", "l0 u: dZ");
result.add("lugs", "l0 V g z");
result.add("luk", "l0 V k");
result.add("luke", "l0 u: k");
result.add("luke-\twarm", "l0 u: k\tw O@ m");
result.add("luke's", "l0 u: k s");
result.add("luks", "l0 V k s");
result.add("lul-\tla-\tbies", "l0 V\tl V\tb aI z");
result.add("lul-\tla-\tby", "l0 V\tl V\tb aI");
result.add("lul-\tling", "l0 V\tl I N");
result.add("lull", "l0 V l");
result.add("lulled", "l0 V l d");
result.add("lulls", "l0 V l z");
result.add("lum", "l0 V m");
result.add("lum-\tba-\tgo", "l0 V m\tb eI\tg @U");
result.add("lum-\tbar", "l0 V m\tb Q@");
result.add("lum-\tbard", "l0 V m\tb @r d");
result.add("lum-\tbe-\tring", "l0 V m\tb @r\tI N");
result.add("lum-\tber", "l0 V m\tb @r");
result.add("lum-\tber-\tjack", "l0 V m\tb @r\tdZ { k");
result.add("lum-\tber-\tman", "l0 V m\tb @r\tm { n");
result.add("lum-\tber-\tman's", "l0 V m\tb @r\tm { n z");
result.add("lum-\tber-\tton", "l0 V m\tb @r\tt V n");
result.add("lum-\tber-\tyard", "l0 V m\tb @r\tj Q@ d");
result.add("lum-\tber-\tyards", "l0 V m\tb @r\tj Q@ d z");
result.add("lum-\tmus", "l0 V\tm V s");
result.add("lum-\tpec-\tto-\tmies", "l0 V m\tp e k\tt V\tm i: z");
result.add("lum-\tpec-\tto-\tmy", "l0 V m\tp e k\tt V\tm i:");
result.add("lum-\tper", "l0 V m\tp @r");
result.add("lum-\tper's", "l0 V m\tp @r z");
result.add("lum-\tping", "l0 V m\tp I N");
result.add("lum-\tpur", "l0 V m\tp U@");
result.add("lum-\tpy", "l0 V m\tp i:");
result.add("lump", "l0 V m p");
result.add("lump-\tkin", "l0 V m\tp k I n");
result.add("lump-\tkins", "l0 V m\tp k I n z");
result.add("lumped", "l0 V m p t");
result.add("lumps", "l0 V m p s");
result.add("lun", "l0 V n");
result.add("lun-\tcheo-\tnette", "l0 V n\ttS V\tn e t");
result.add("lun-\tcheon", "l0 V n\ttS V n");
result.add("lun-\tcheons", "l0 V n\ttS V n z");
result.add("lun-\tches", "l0 V n\ttS V z");
result.add("lun-\tching", "l0 V n\ttS I N");
result.add("lun-\tdeen", "l0 V n\td i: n");
result.add("lun-\tdell", "l0 V n\td V l");
result.add("lun-\tdin", "l0 V n\td I n");
result.add("lun-\tdy", "l0 V n\td i:");
result.add("lun-\tger", "l0 V\tN @r");
result.add("lun-\tges", "l0 V n\tdZ V z");
result.add("lun-\tging", "l0 V n\tdZ I N");
result.add("lunch", "l0 V n tS");
result.add("lunch-\troom", "l0 V n\ttS r u: m");
result.add("lunch-\ttime", "l0 V n\ttS t aI m");
result.add("lunched", "l0 V n tS t");
result.add("lund", "l0 V n d");
result.add("lund-\tberg", "l0 V n\td b @r g");
result.add("lund-\tgren", "l0 V n\td g r e n");
result.add("lund-\tquist", "l0 V n\td k w I s t");
result.add("lundt", "l0 V n t");
result.add("lung", "l0 V N");
result.add("lung-\tfish", "l0 V N\tf I S");
result.add("lunge", "l0 V n dZ");
result.add("lunged", "l0 V n dZ d");
result.add("lungs", "l0 V N z");
result.add("lunn", "l0 V n");
result.add("luns-\tford", "l0 V n\ts f @r d");
result.add("lunt", "l0 V n t");
result.add("luo", "l0 w @U");
result.add("lup-\tton", "l0 V p\tt V n");
result.add("lupe", "l0 u: p");
result.add("lur-\tches", "l0 @r\ttS V z");
result.add("lur-\tching", "l0 @r\ttS I N");
result.add("lur-\tgi", "l0 @r\tdZ i:");
result.add("lur-\tking", "l0 @r\tk I N");
result.add("lur-\tleen", "l0 @r\tl i: n");
result.add("lur-\tlene", "l0 @r\tl i: n");
result.add("lur-\tline", "l0 @r\tl aI n");
result.add("lurch", "l0 @r tS");
result.add("lurched", "l0 @r tS t");
result.add("lure", "l0 U@");
result.add("lured", "l0 U@ d");
result.add("lures", "l0 U@ z");
result.add("lurk", "l0 @r k");
result.add("lurked", "l0 @r k t");
result.add("lurks", "l0 @r k s");
result.add("lus-\tby", "l0 V s\tb i:");
result.add("lus-\tcious", "l0 V\tS V s");
result.add("lus-\tty", "l0 V s\tt i:");
result.add("lush", "l0 V S");
result.add("lute", "l0 u: t");
result.add("lutes", "l0 u: t s");
result.add("luth", "l0 u: T");
result.add("lutt-\trell", "l0 V t\tr V l");
result.add("lutz", "l0 V t s");
result.add("luvs", "l0 V v z");
result.add("lux", "l0 V k s");
result.add("luz", "l0 V z");
result.add("lxi", "l0 k s i:");
result.add("ly", "l0 aI");
result.add("ly-\tall", "l0 aI\tV l");
result.add("ly-\tco-\tming", "l0 aI\tk V\tm I N");
result.add("ly-\tcra", "l0 aI k\tr V");
result.add("ly-\tda", "l0 aI\td V");
result.add("ly-\tdi-\ta", "l0 I\td i:\tV");
result.add("ly-\tdie", "l0 I\td i:");
result.add("ly-\tdon", "l0 I\td V n");
result.add("ly-\tell", "l0 aI\te l");
result.add("ly-\ter-\tly", "l0 aI\t@r\tl i:");
result.add("ly-\tford", "l0 I\tf @r d");
result.add("ly-\ting", "l0 aI\tI N");
result.add("ly-\tkens", "l0 aI\tk V n z");
result.add("ly-\tman", "l0 aI\tm V n");
result.add("ly-\tnam", "l0 I\tn V m");
result.add("ly-\tnette", "l0 aI\tn e t");
result.add("ly-\ton", "l0 aI\tV n");
result.add("ly-\ton-\tnai-\ts's", "l0 aI\tV\tn eI\tz V z");
result.add("ly-\ton-\tnais", "l0 i:\tV\tn eI");
result.add("ly-\ton-\tnaise", "l0 aI\tV\tn eI z");
result.add("ly-\tons", "l0 aI\tV n z");
result.add("ly-\ton's", "l0 aI\tV n z");
result.add("ly-\tra", "l0 aI\tr V");
result.add("ly-\tri-\tcal", "l0 I@\tI\tk V l");
result.add("ly-\tri-\tci-\tsm", "l0 I@\tV\ts I\tz V m");
result.add("ly-\tri-\tcist", "l0 I@\tI\ts I s t");
result.add("ly-\tri-\tcists", "l0 I@\tI\ts I s t s");
result.add("ly-\tric", "l0 I@\tI k");
result.add("ly-\trical-\tly", "l0 I@\tI k\tl i:");
result.add("ly-\trics", "l0 I@\tI k s");
result.add("ly-\tris", "l0 I@\tI s");
result.add("ly-\trist", "l0 I@\tI s t");
result.add("ly-\tsan-\tder", "l0 aI\ts { n\td @r");
result.add("ly-\tsan-\tdra", "l0 aI\ts { n\td r V");
result.add("ly-\tsine", "l0 aI\ts i: n");
result.add("ly-\tsis", "l0 aI\ts I s");
result.add("ly-\tsol", "l0 aI\ts O: l");
result.add("ly-\ttle", "l0 aI\tt V l");
result.add("lye", "l0 aI");
result.add("lykes", "l0 aI k s");
result.add("lyle", "l0 aI l");
result.add("lyles", "l0 aI l z");
result.add("lyle's", "l0 aI l z");
result.add("lym-\tpha-\tde-\tno-\tpa-\tthy", "l0 I m\tf V\td e\tn V\tp {\tT i:");
result.add("lym-\tpha-\ttic", "l0 I m\tf {\tt I k");
result.add("lym-\tpho-\tcyte", "l0 I m\tf V\ts aI t");
result.add("lym-\tpho-\tcytes", "l0 I m\tf V\ts aI t s");
result.add("lym-\tpho-\tma", "l0 I m\tf @U\tm V");
result.add("lym-\tpho-\tmas", "l0 I m\tf @U\tm V z");
result.add("lyme", "l0 aI m");
result.add("lymph", "l0 I m f");
result.add("lyn", "l0 I n");
result.add("lyn-\tching", "l0 I n\ttS I N");
result.add("lyn-\tchings", "l0 I n\ttS I N z");
result.add("lyn-\tch's", "l0 I n\ttS V z");
result.add("lyn-\tda", "l0 I n\td V");
result.add("lyn-\tden", "l0 I n\td V n");
result.add("lyn-\tdon", "l0 I n\td V n");
result.add("lyn-\tna", "l0 aI\tn V");
result.add("lyn-\txes", "l0 I N\tk s V z");
result.add("lynch", "l0 I n tS");
result.add("lynch-\tburg", "l0 I n\ttS b @r g");
result.add("lynched", "l0 I n tS t");
result.add("lynd", "l0 I n d");
result.add("lynd-\thurst", "l0 I n\td h @r s t");
result.add("lynde", "l0 I n d");
result.add("lyne", "l0 aI n");
result.add("lynes", "l0 aI n z");
result.add("lynn", "l0 I n");
result.add("lynne", "l0 I n");
result.add("lynn's", "l0 I n z");
result.add("lynx", "l0 I N k s");
result.add("lyre", "l0 aI r");
result.add("lyt-\tton", "l0 I\tt V n");
result.add("m", "e m");
result.add("m-\t1", "e m\tw V n");
result.add("m-\t2", "e m\tt u:");
result.add("m-\t3", "e m\tT r i:");
result.add("m-\tca-\tdam", "m V\tk {\td V m");
result.add("m-\tca-\tdams", "m V\tk {\td V m z");
result.add("m-\tca-\tdoo", "m {\tk V\td u:");
result.add("m-\tca-\tfee", "m {\tk V\tf i:");
result.add("m-\tca-\tlis-\tter", "m V\tk {\tl V s\tt @r");
result.add("m-\tcal-\tlen", "m V\tk O:\tl V n");
result.add("m-\tcal-\tlis-\tter", "m V\tk {\tl V s\tt @r");
result.add("m-\tcal-\tpin", "m V\tk { l\tp V n");
result.add("m-\tcan-\tdrews", "m V\tk { n\td r u: z");
result.add("m-\tce-\tvoy", "m {\tk V\tv OI");
result.add("m-\tce-\twan", "m {\tk u:\t{ n");
result.add("m-\tce-\twen", "m V k\tj u:\tV n");
result.add("m-\tcel-\tha-\tney", "m {\tk V l\th eI\tn i:");
result.add("m-\tcel-\troy", "m {\tk V l\tr OI");
result.add("m-\tcen-\troe", "m {\tk V n\tr @U");
result.add("m-\tchale", "m V\tk eI l");
result.add("m-\tchen-\try", "m V\tk e n\tr i:");
result.add("m-\tchugh", "m V k\tj u:");
result.add("m-\tcil-\troy", "m {\tk I l\tr OI");
result.add("m-\tcin-\ttire", "m {\tk I n\tt aI r");
result.add("m-\tcin-\ttosh", "m {\tk I n\tt O: S");
result.add("m-\tcin-\ttyre", "m {\tk I n\tt aI r");
result.add("m-\tfu-\tme", "e m\tf u:\tm eI");
result.add("m-\tg-\tm", "e m\tg i:\te m");
result.add("m-\th", "e\tm eI tS");
result.add("m-\ti-\tt", "e\tm aI\tt i:");
result.add("m-\tr", "m I s\tt @r");
result.add("m-\ts-\tgr", "m Q n\ts i: n\tj @r");
result.add("m.", "e m");
result.add("ma", "m Q");
result.add("ma-\tbel", "m eI\tb V l");
result.add("ma-\tbelle", "m V\tb e l");
result.add("ma-\tben", "m {\tb V n");
result.add("ma-\tbie", "m {\tb i:");
result.add("ma-\tble", "m eI\tb V l");
result.add("ma-\tca-\tda-\tmi-\ta", "m {\tk V\td eI\tm i:\tV");
result.add("ma-\tca-\tdam", "m V\tk {\td V m");
result.add("ma-\tca-\tro-\tni", "m {\tk @r\t@U\tn i:");
result.add("ma-\tcab-\tre", "m V\tk Q b\tr V");
result.add("ma-\tcao", "m V\tk aU");
result.add("ma-\tcaques", "m V\tk Q k s");
result.add("ma-\tcar-\tthur", "m V\tk Q@\tT @r");
result.add("ma-\tcart-\tney", "m V\tk Q@ t\tn i:");
result.add("ma-\tcau", "m V\tk aU");
result.add("ma-\tcau-\tlay", "m V\tk O:\tl i:");
result.add("ma-\tcaw", "m V\tk O:");
result.add("ma-\tcaws", "m V\tk O: z");
result.add("ma-\tce-\tdo-\tni-\ta", "m {\ts V\td @U\tn i:\tV");
result.add("ma-\tce-\tdo-\tni-\tan", "m {\ts V\td @U\tn i:\tV n");
result.add("ma-\tce-\tdo-\tni-\tans", "m {\ts V\td @U\tn i:\tV n z");
result.add("ma-\tce-\tdo-\tni-\ta's", "m {\ts V\td @U\tn i:\tV z");
result.add("ma-\tcey", "m eI\ts i:");
result.add("ma-\tcha", "m {\ttS V");
result.add("ma-\tcha-\tdo", "m V\ttS Q\td @U");
result.add("ma-\tche-\tte", "m V\tS e\tt i:");
result.add("ma-\tche-\ttes", "m V\tS e\tt i: z");
result.add("ma-\tchel", "m {\ttS V l");
result.add("ma-\tchen", "m {\tk V n");
result.add("ma-\tchi", "m Q\tk i:");
result.add("ma-\tchi-\ta-\tvel-\tli", "m Q\tk i:\tV\tv e\tl i:");
result.add("ma-\tchi-\ta-\tvel-\tli-\tan", "m Q\tk i:\tV\tv e\tl i:\tV n");
result.add("ma-\tchi-\ta-\tvel-\tli's", "m Q\tk i:\tV\tv e\tl i: z");
result.add("ma-\tchi-\tna-\ttion", "m {\tS I\tn eI\tS V n");
result.add("ma-\tchi-\tna-\ttions", "m {\tS I\tn eI\tS V n z");
result.add("ma-\tchi-\tne-\tries", "m @\tS i:\tn @r\ti: z");
result.add("ma-\tchi-\tne-\try", "m @\tS i:\tn @r\ti:");
result.add("ma-\tchi-\tning", "m @\tS i:\tn I N");
result.add("ma-\tchi-\tnist", "m @\tS i:\tn I s t");
result.add("ma-\tchi-\tnists", "m @\tS i:\tn I s t s");
result.add("ma-\tchin", "m {\ttS I n");
result.add("ma-\tchine", "m @\tS i: n");
result.add("ma-\tchined", "m @\tS i: n d");
result.add("ma-\tchines", "m @\tS i: n z");
result.add("ma-\tchine's", "m @\tS i: n z");
result.add("ma-\tchis-\tmo", "m V\ttS I z\tm @U");
result.add("ma-\tcho", "m Q\ttS @U");
result.add("ma-\tci-\tas", "m Q\ts i:\tV s");
result.add("ma-\tcin-\tto-\tshes", "m {\tk I n\tt O:\tS V z");
result.add("ma-\tcin-\tto-\tsh's", "m {\tk I n\tt Q\tS V z");
result.add("ma-\tcin-\ttosh", "m {\tk I n\tt O: S");
result.add("ma-\tcin-\ttyre", "m {\tk I n\tt aI r");
result.add("ma-\tcom-\tber", "m V\tk Q m\tb @r");
result.add("ma-\tcomb", "m eI\tk V m");
result.add("ma-\tcon", "m eI\tk V n");
result.add("ma-\tcy", "m eI\ts i:");
result.add("ma-\tcy's", "m eI\ts i: z");
result.add("ma-\td-\tlen", "m {\td V\tl V n");
result.add("ma-\tda", "m Q\td V");
result.add("ma-\tda-\tgas-\tcar", "m {\td V\tg { s\tk @r");
result.add("ma-\tda-\tle-\tna", "m {\td V\tl eI\tn V");
result.add("ma-\tda-\tras", "m Q\td Q@\tQ z");
result.add("ma-\tdam", "m {\td V m");
result.add("ma-\tdame", "m {\td V m");
result.add("ma-\tde-\tlaine", "m {\td V\tl eI n");
result.add("ma-\tde-\tle-\tna", "m Q\td e\tl e\tn V");
result.add("ma-\tde-\tleine", "m {\td V\tl e n");
result.add("ma-\tde-\tlene", "m {\td V\tl i: n");
result.add("ma-\tde-\tlin", "m {\td V\tl V n");
result.add("ma-\tde-\tline", "m {\td V\tl I n");
result.add("ma-\tde-\tlon", "m Q\td eI\tl O: n");
result.add("ma-\tde-\tlyn", "m {\td V\tl I n");
result.add("ma-\tde-\tmoi-\tselle", "m {\td V\tm V\tz e l");
result.add("ma-\tde-\tra", "m Q\td e@\tV");
result.add("ma-\tde-\tro", "m Q\td e@\t@U");
result.add("ma-\tdei-\tra", "m V\td I@\tV");
result.add("ma-\tdel", "m {\td V l");
result.add("ma-\tdel-\tla", "m V\td e\tl V");
result.add("ma-\tdelle", "m V\td e l");
result.add("ma-\tdi-\ta", "m Q\td i:\tV");
result.add("ma-\tdi-\tgan", "m {\td I\tg V n");
result.add("ma-\tdi-\tson", "m {\td I\ts V n");
result.add("ma-\tdi-\tson's", "m {\td I\ts V n z");
result.add("ma-\tdill", "m Q\td i: l");
result.add("ma-\tdo-\tni-\ta", "m Q\td @U\tn i:\tV");
result.add("ma-\tdo-\tra", "m V\td O@\tV");
result.add("ma-\tdoc", "m {\td V k");
result.add("ma-\tdon-\tna", "m V\td Q\tn V");
result.add("ma-\tdon-\tna's", "m V\td Q\tn V z");
result.add("ma-\tdy", "m eI\td i:");
result.add("ma-\test-\tri", "m Q\te s\tt r i:");
result.add("ma-\tfi-\ta", "m Q\tf i:\tV");
result.add("ma-\tfi-\tas", "m Q\tf i:\tV z");
result.add("ma-\tfi-\ta's", "m Q\tf i:\tV z");
result.add("ma-\tga-\tzi-\tner", "m {\tg V\tz i:\tn @r");
result.add("ma-\tga-\tzine", "m {\tg V\tz i: n");
result.add("ma-\tga-\tzines", "m {\tg V\tz i: n z");
result.add("ma-\tga-\tzine's", "m {\tg V\tz i: n z");
result.add("ma-\tgal-\tlanes", "m {\tg V\tl eI n z");
result.add("ma-\tgan", "m eI\tg V n");
result.add("ma-\tgee", "m V\tg i:");
result.add("ma-\tgel", "m {\tg V l");
result.add("ma-\tgel-\tla-\tnic", "m {\tdZ V\tl {\tn I k");
result.add("ma-\tgel-\tlan", "m V\tdZ e\tl V n");
result.add("ma-\tgel-\tlan's", "m V\tdZ e\tl V n z");
result.add("ma-\tgen-\tta", "m V\tdZ e n\tt V");
result.add("ma-\tges", "m eI\tdZ V z");
result.add("ma-\tgi", "m eI\tdZ aI");
result.add("ma-\tgi-\tcal", "m {\tdZ I\tk V l");
result.add("ma-\tgi-\tcal-\tly", "m {\tdZ I\tk V\tl i:");
result.add("ma-\tgi-\tcian", "m V\tdZ I\tS V n");
result.add("ma-\tgi-\tcians", "m V\tdZ I\tS V n z");
result.add("ma-\tgi-\tnot", "m {\tdZ I\tn Q");
result.add("ma-\tgic", "m {\tdZ I k");
result.add("ma-\tgic's", "m {\tdZ I k s");
result.add("ma-\tgill", "m {\tdZ I l");
result.add("ma-\tgis-\tte-\tri-\tal", "m {\tdZ I s\tt i:\tr i:\tV l");
result.add("ma-\tgis-\ttrate", "m {\tdZ I s\tt r eI t");
result.add("ma-\tgis-\ttrates", "m {\tdZ I s\tt r eI t s");
result.add("ma-\tha-\tbha-\tra-\tta", "m Q\th Q\tb @r\tQ\tt V");
result.add("ma-\tha-\tla", "m {\th V\tl V");
result.add("ma-\tha-\tli-\ta", "m V\th {\tl i:\tV");
result.add("ma-\tha-\tra-\tja", "m Q\th @r\tQ\tZ V");
result.add("ma-\tha-\tra-\tjahs", "m Q\th @r\tQ\tdZ V z");
result.add("ma-\tha-\tra-\tja's", "m Q\th @r\tQ\tZ V z");
result.add("ma-\tha-\trash-\ttra", "m Q\th @r\tQ S\tt r V");
result.add("ma-\tha-\tya-\tna", "m Q\th V\tj Q\tn V");
result.add("ma-\thaf-\tfey", "m V\th {\tf i:");
result.add("ma-\thal", "m V\th Q l");
result.add("ma-\than", "m eI\tV n");
result.add("ma-\thar", "m {\th @r");
result.add("ma-\that-\tma", "m V\th Q t\tm V");
result.add("ma-\tho-\tga-\tny", "m V\th Q\tg V\tn i:");
result.add("ma-\tho-\tney", "m V\th @U\tn i:");
result.add("ma-\thon", "m eI\tV n");
result.add("ma-\thone", "m {\th V n");
result.add("ma-\tjes-\tta", "m Q\tj eI s\tt V");
result.add("ma-\tjes-\tti-\tcal-\tly", "m V\tdZ e s\tt I\tk V\tl i:");
result.add("ma-\tjes-\ttic", "m V\tdZ e s\tt I k");
result.add("ma-\tjes-\tty", "m {\tdZ V s\tt i:");
result.add("ma-\tjes-\tty's", "m {\tdZ V s\tt i: z");
result.add("ma-\tjeure", "m V\tdZ u: r");
result.add("ma-\tjo-\tri-\tta-\tri-\tan", "m {\tdZ @r\tI\tt e@\ti:\tV n");
result.add("ma-\tjo-\tri-\tties", "m V\tdZ O@\tV\tt i: z");
result.add("ma-\tjo-\tri-\tty", "m V\tdZ O@\tV\tt i:");
result.add("ma-\tjo-\tri-\tty's", "m V\tdZ O@\tV\tt i: z");
result.add("ma-\tjo-\tring", "m eI\tdZ @r\tI N");
result.add("ma-\tjor", "m eI\tdZ @r");
result.add("ma-\tjored", "m eI\tdZ @r d");
result.add("ma-\tjors", "m eI\tdZ @r z");
result.add("ma-\tjor's", "m eI\tdZ @r z");
result.add("ma-\tka-\tra", "m Q\tk Q@\tV");
result.add("ma-\tkar", "m {\tk @r");
result.add("ma-\tker", "m eI\tk @r");
result.add("ma-\tkers", "m eI\tk @r z");
result.add("ma-\tker's", "m eI\tk @r z");
result.add("ma-\tki", "m Q\tk i:");
result.add("ma-\tki-\tnen", "m {\tk I\tn e n");
result.add("ma-\tkin", "m {\tk I n");
result.add("ma-\tking", "m eI\tk I N");
result.add("ma-\tkings", "m eI\tk I N z");
result.add("ma-\tko", "m Q\tk @U");
result.add("ma-\tkos", "m eI\tk @U z");
result.add("ma-\tla", "m Q\tl V");
result.add("ma-\tla-\tdies", "m {\tl V\td i: z");
result.add("ma-\tla-\tdy", "m {\tl V\td i:");
result.add("ma-\tla-\tga", "m {\tl V\tg V");
result.add("ma-\tla-\tga-\tsy", "m {\tl V\tg {\ts i:");
result.add("ma-\tla-\tmud", "m {\tl V\tm V d");
result.add("ma-\tla-\tmute", "m {\tl V m\tj u: t");
result.add("ma-\tla-\tri-\ta", "m V\tl e@\ti:\tV");
result.add("ma-\tla-\tri-\tal", "m V\tl e@\ti:\tV l");
result.add("ma-\tla-\ttes-\tta", "m Q\tl Q\tt e s\tt V");
result.add("ma-\tla-\tthi-\ton", "m V\tl {\tT i:\tO: n");
result.add("ma-\tla-\twi", "m V\tl Q\tw i:");
result.add("ma-\tla-\twi's", "m V\tl Q\tw i: z");
result.add("ma-\tla-\tyan", "m V\tl eI\tV n");
result.add("ma-\tlac-\tca", "m V\tl {\tk V");
result.add("ma-\tlad-\tjus-\tted", "m {\tl V\tdZ V s\tt V d");
result.add("ma-\tlad-\troit", "m {\tl V d\tr OI t");
result.add("ma-\tlaise", "m {\tl eI z");
result.add("ma-\tlan", "m eI\tl V n");
result.add("ma-\tlan-\tga", "m Q\tl Q N\tg V");
result.add("ma-\tlap-\trop", "m {\tl V p\tr Q p");
result.add("ma-\tlar-\tkey", "m V\tl Q@\tk i:");
result.add("ma-\tlas-\tpi-\tna", "m Q\tl Q s\tp i:\tn V");
result.add("ma-\tlay", "m eI\tl eI");
result.add("ma-\tlay-\tsia", "m V\tl eI\tZ V");
result.add("ma-\tlay-\tsian", "m V\tl eI\tZ V n");
result.add("ma-\tlay-\tsians", "m V\tl eI\tZ V n z");
result.add("ma-\tlay-\tsia's", "m V\tl eI\tZ V z");
result.add("ma-\tlays", "m V\tl eI z");
result.add("ma-\tle-\tfac-\ttor", "m {\tl V\tf { k\tt @r");
result.add("ma-\tle-\tfac-\ttors", "m {\tl V\tf { k\tt @r z");
result.add("ma-\tle-\tna", "m {\tl V\tn V");
result.add("ma-\tle-\tvo-\tlent", "m V\tl e\tv V\tl V n t");
result.add("ma-\tlek", "m Q\tl e k");
result.add("ma-\tli", "m Q\tl i:");
result.add("ma-\tli-\ta", "m Q\tl i:\tV");
result.add("ma-\tli-\tbu", "m {\tl I\tb u:");
result.add("ma-\tli-\tcious", "m V\tl I\tS V s");
result.add("ma-\tli-\tcious-\tly", "m V\tl I\tS V s\tl i:");
result.add("ma-\tli-\tna", "m Q\tl i:\tn V");
result.add("ma-\tli-\tne", "m Q\tl i:\tn i:");
result.add("ma-\tli-\tnow-\tski", "m V\tl V\tn O: f\ts k i:");
result.add("ma-\tlice", "m {\tl I s");
result.add("ma-\tlig-\tnan-\tcies", "m V\tl I g\tn V n\ts i: z");
result.add("ma-\tlig-\tnan-\tcy", "m V\tl I g\tn V n\ts i:");
result.add("ma-\tlig-\tnant", "m V\tl I g\tn V n t");
result.add("ma-\tlign", "m V\tl aI n");
result.add("ma-\tligned", "m V\tl aI n d");
result.add("ma-\tlik", "m {\tl I k");
result.add("ma-\tlin", "m {\tl I n");
result.add("ma-\tlin-\tda", "m Q\tl i: n\td V");
result.add("ma-\tlinde", "m {\tl I n d");
result.add("ma-\tlis", "m Q\tl i: z");
result.add("ma-\tlo", "m Q\tl @U");
result.add("ma-\tlo-\tney", "m V\tl @U\tn i:");
result.add("ma-\tlone", "m V\tl @U n");
result.add("ma-\tlone's", "m V\tl @U n z");
result.add("ma-\tlott", "m V\tl Q t");
result.add("ma-\tloy", "m {\tl OI");
result.add("ma-\tma", "m Q\tm V");
result.add("ma-\tma-\tro-\tneck", "m V\tm e@\tV\tn e k");
result.add("ma-\tmas", "m Q\tm V z");
result.add("ma-\tma's", "m Q\tm V z");
result.add("ma-\tme-\tluke", "m {\tm V\tl u: k");
result.add("ma-\tmet", "m {\tm V t");
result.add("ma-\tmie", "m eI\tm i:");
result.add("ma-\tna", "m Q\tn V");
result.add("ma-\tna-\tge-\tri-\tal", "m {\tn I\tdZ I@\ti:\tV l");
result.add("ma-\tna-\tgea-\tble", "m {\tn I\tdZ V\tb V l");
result.add("ma-\tna-\tger", "m {\tn V\tdZ @r");
result.add("ma-\tna-\tgers", "m {\tn V\tdZ @r z");
result.add("ma-\tna-\tger's", "m {\tn I\tdZ @r z");
result.add("ma-\tna-\tges", "m {\tn I\tdZ V z");
result.add("ma-\tna-\tging", "m {\tn V\tdZ I N");
result.add("ma-\tna-\tgua", "m V\tn Q g\tw V");
result.add("ma-\tna-\tgua's", "m V\tn Q g\tw V z");
result.add("ma-\tna-\tma", "m {\tn V\tm V");
result.add("ma-\tna-\ttee", "m {\tn V\tt i:");
result.add("ma-\tna-\ttees", "m {\tn V\tt i: z");
result.add("ma-\tnage", "m {\tn V dZ");
result.add("ma-\tnage-\tment", "m {\tn V dZ\tm V n t");
result.add("ma-\tnage-\tments", "m {\tn I dZ\tm V n t s");
result.add("ma-\tnage-\tment's", "m {\tn I dZ\tm V n t s");
result.add("ma-\tnaged", "m {\tn V dZ d");
result.add("ma-\tnak", "m {\tn V k");
result.add("ma-\tnard", "m {\tn @r d");
result.add("ma-\tnas", "m Q\tn V z");
result.add("ma-\tnas-\tsas", "m V\tn Q\ts V s");
result.add("ma-\tnel-\tla", "m V\tn e\tl V");
result.add("ma-\tness", "m Q\tn V s");
result.add("ma-\tnet", "m {\tn eI");
result.add("ma-\tneu-\tve-\tra-\tbi-\tli-\tty", "m V\tn u:\tv @r\tV\tb I\tl V\tt i:");
result.add("ma-\tneu-\tve-\tra-\tble", "m V\tn u:\tv @r\tV\tb V l");
result.add("ma-\tneu-\tve-\tring", "m V\tn u:\tv @r\tI N");
result.add("ma-\tneu-\tve-\trings", "m V\tn u:\tv @r\tI N z");
result.add("ma-\tneu-\tver", "m V\tn u:\tv @r");
result.add("ma-\tneu-\tvered", "m V\tn u:\tv @r d");
result.add("ma-\tneu-\tvers", "m V\tn u:\tv @r z");
result.add("ma-\tney", "m eI\tn i:");
result.add("ma-\tni", "m Q\tn i:");
result.add("ma-\tni-\ta", "m eI\tn i:\tV");
result.add("ma-\tni-\ta-\tcal", "m V\tn aI\tV\tk V l");
result.add("ma-\tni-\tac", "m eI\tn i:\t{ k");
result.add("ma-\tni-\tacs", "m eI\tn i:\t{ k s");
result.add("ma-\tni-\tcu-\trist", "m {\tn I k\tj @r\tI s t");
result.add("ma-\tni-\tcure", "m {\tn I k\tj @r");
result.add("ma-\tni-\tcured", "m {\tn I k\tj @r d");
result.add("ma-\tni-\tfes-\tta-\ttion", "m {\tn I\tf e s\tt eI\tS V n");
result.add("ma-\tni-\tfes-\tta-\ttions", "m {\tn I\tf e s\tt eI\tS V n z");
result.add("ma-\tni-\tfes-\tted", "m {\tn I\tf e s\tt I d");
result.add("ma-\tni-\tfes-\tting", "m {\tn I\tf e s\tt I N");
result.add("ma-\tni-\tfes-\tto", "m {\tn I\tf e s\tt @U");
result.add("ma-\tni-\tfest", "m {\tn I\tf e s t");
result.add("ma-\tni-\tfest-\tly", "m {\tn I\tf e s\tt l i:");
result.add("ma-\tni-\tfests", "m {\tn I\tf e s t s");
result.add("ma-\tni-\tfold", "m {\tn I\tf @U l d");
result.add("ma-\tni-\tla", "m V\tn I\tl V");
result.add("ma-\tni-\tla's", "m V\tn I\tl V z");
result.add("ma-\tni-\toc", "m {\tn i:\tQ k");
result.add("ma-\tni-\tples", "m {\tn I\tp V l z");
result.add("ma-\tni-\tpu-\tla-\tted", "m V\tn I p\tj V\tl eI\tt V d");
result.add("ma-\tni-\tpu-\tla-\tting", "m V\tn I p\tj V\tl eI\tt I N");
result.add("ma-\tni-\tpu-\tla-\ttion", "m V\tn I p\tj V\tl eI\tS V n");
result.add("ma-\tni-\tpu-\tla-\ttions", "m V\tn I p\tj V\tl eI\tS V n z");
result.add("ma-\tni-\tpu-\tla-\ttive", "m V\tn I p\tj V\tl eI\tt I v");
result.add("ma-\tni-\tpu-\tla-\ttor", "m V\tn I p\tj V\tl eI\tt @r");
result.add("ma-\tni-\tpu-\tla-\ttors", "m V\tn I p\tj V\tl eI\tt @r z");
result.add("ma-\tni-\tpu-\tlate", "m V\tn I p\tj V\tl eI t");
result.add("ma-\tni-\tpu-\tlates", "m V\tn I p\tj V\tl eI t s");
result.add("ma-\tni-\tto-\tba", "m {\tn I\tt @U\tb V");
result.add("ma-\tni-\tto-\twoc", "m {\tn I\tt V\tw Q k");
result.add("ma-\tnic", "m {\tn I k");
result.add("ma-\tnil-\tla", "m V\tn I\tl V");
result.add("ma-\tnis", "m {\tn I s");
result.add("ma-\tno", "m Q\tn @U");
result.add("ma-\tnoff", "m {\tn O: f");
result.add("ma-\tnon", "m Q\tn O: n");
result.add("ma-\tnor", "m {\tn @r");
result.add("ma-\tnors", "m {\tn @r z");
result.add("ma-\tnos", "m eI\tn @U z");
result.add("ma-\tnu", "m Q\tn u:");
result.add("ma-\tnu-\tal", "m { n\tj u:\tV l");
result.add("ma-\tnu-\tal-\tly", "m { n\tj u:\tV\tl i:");
result.add("ma-\tnu-\tals", "m { n\tj u:\tV l z");
result.add("ma-\tnue-\tla", "m { n\tw eI\tl V");
result.add("ma-\tnuel", "m Q n\tw e l");
result.add("ma-\to-\tris", "m eI\t@r\tI s");
result.add("ma-\tpel", "m {\tp V l");
result.add("ma-\tple", "m eI\tp V l");
result.add("ma-\tple-\twood", "m eI\tp V l\tw U d");
result.add("ma-\tples", "m eI\tp V l z");
result.add("ma-\tpu-\tto", "m V\tp u:\tt @U");
result.add("ma-\tpu-\tto's", "m V\tp u:\tt @U z");
result.add("ma-\tqui-\tla", "m V k\tw i:\tl V");
result.add("ma-\tqui-\tla-\tdo-\tra", "m { k\tw I\tl {\td @r\tV");
result.add("ma-\tqui-\tla-\tdo-\tras", "m {\tk i:\tj V\td O@\tV s");
result.add("ma-\tqui-\tlas", "m { k\tw I\tl V s");
result.add("ma-\tra", "m Q@\tV");
result.add("ma-\tra-\tbou", "m e@\tV\tb u:");
result.add("ma-\tra-\tdo-\tna", "m Q@\tV\td @U\tn V");
result.add("ma-\tra-\tdo-\tna's", "m Q@\tV\td @U\tn V z");
result.add("ma-\tra-\tli-\tna", "m Q@\tQ\tl i:\tn V");
result.add("ma-\tra-\tli-\tne", "m Q@\tQ\tl i:\tn i:");
result.add("ma-\tra-\tnon", "m e@\tV\tn Q n");
result.add("ma-\tra-\tthi", "m V\tr Q\tt i:");
result.add("ma-\tra-\tthon", "m e@\tV\tT Q n");
result.add("ma-\tra-\tthons", "m e@\tV\tT Q n z");
result.add("ma-\tra-\tvil-\tla", "m Q@\tQ\tv I\tl V");
result.add("ma-\trais", "m e@\teI");
result.add("ma-\tras", "m Q@\tV z");
result.add("ma-\tras-\tchi-\tno", "m {\tr V s\tk i:\tn @U");
result.add("ma-\tras-\tco", "m Q@\tQ s\tk @U");
result.add("ma-\trau-\tder", "m @r\tO:\td @r");
result.add("ma-\trau-\tders", "m @r\tO:\td @r z");
result.add("ma-\trau-\tding", "m @r\tO:\td I N");
result.add("ma-\traud", "m @r\tO: d");
result.add("ma-\trek", "m Q@\te k");
result.add("ma-\trel-\tda", "m Q@\te l\td V");
result.add("ma-\trel-\tla", "m @r\te\tl V");
result.add("ma-\tret-\tta", "m Q@\te\tt V");
result.add("ma-\trette", "m @r\te t");
result.add("ma-\tri", "m Q@\ti:");
result.add("ma-\tri-\ta", "m @r\ti:\tV");
result.add("ma-\tri-\ta-\tchi", "m Q@\ti:\tQ\ttS i:");
result.add("ma-\tri-\ta-\tna", "m e@\ti:\t{\tn V");
result.add("ma-\tri-\ta-\tnas", "m e@\ti:\t{\tn V s");
result.add("ma-\tri-\ta-\tno", "m e@\ti:\tQ\tn @U");
result.add("ma-\tri-\tam", "m e@\ti:\t{ m");
result.add("ma-\tri-\tan", "m e@\ti:\tV n");
result.add("ma-\tri-\tan-\tna", "m Q@\ti:\tQ\tn V");
result.add("ma-\tri-\tanne", "m e@\ti:\t{ n");
result.add("ma-\tri-\tan's", "m e@\ti:\tV n z");
result.add("ma-\tri-\ta's", "m @r\ti:\tV z");
result.add("ma-\tri-\tbel", "m {\tr I\tb e l");
result.add("ma-\tri-\tco-\tpa", "m e@\tI\tk @U\tp V");
result.add("ma-\tri-\tel", "m e@\ti:\tV l");
result.add("ma-\tri-\tet-\tta", "m e@\ti:\te\tt V");
result.add("ma-\tri-\tet-\tta's", "m e@\ti:\te\tt V z");
result.add("ma-\tri-\tette", "m e@\ti:\te t");
result.add("ma-\tri-\tgold", "m e@\tI\tg @U l d");
result.add("ma-\tri-\tgolds", "m e@\tI\tg @U l d z");
result.add("ma-\tri-\tjua-\tna", "m e@\tI\tw Q\tn V");
result.add("ma-\tri-\tlin", "m {\tr I\tl I n");
result.add("ma-\tri-\tlyn", "m e@\tI\tl I n");
result.add("ma-\tri-\tlynn", "m e@\tI\tl I n");
result.add("ma-\tri-\tlyn's", "m e@\tI\tl I n z");
result.add("ma-\tri-\tna", "m @r\ti:\tn V");
result.add("ma-\tri-\tna-\tted", "m e@\tI\tn eI\tt I d");
result.add("ma-\tri-\tnas", "m @r\ti:\tn V z");
result.add("ma-\tri-\tnate", "m e@\tI\tn eI t");
result.add("ma-\tri-\tnel-\tli", "m Q@\tI\tn e\tl i:");
result.add("ma-\tri-\tner", "m e@\tI\tn @r");
result.add("ma-\tri-\tners", "m e@\tI\tn @r z");
result.add("ma-\tri-\tni", "m Q@\ti:\tn i:");
result.add("ma-\tri-\tno", "m @r\ti:\tn @U");
result.add("ma-\tri-\tno's", "m @r\ti:\tn @U z");
result.add("ma-\tri-\to", "m Q@\ti:\t@U");
result.add("ma-\tri-\ton", "m e@\ti:\tV n");
result.add("ma-\tri-\ton's", "m e@\ti:\tV n z");
result.add("ma-\tri-\to's", "m Q@\ti:\t@U z");
result.add("ma-\tri-\tsa", "m V\tr I\ts V");
result.add("ma-\tri-\ttal", "m e@\tI\tt V l");
result.add("ma-\tri-\ttime", "m e@\tI\tt aI m");
result.add("ma-\tri-\tus", "m e@\ti:\tV s");
result.add("ma-\trice", "m Q@\tI s");
result.add("ma-\trie", "m @r\ti:");
result.add("ma-\trie's", "m @r\ti: z");
result.add("ma-\tril-\tla", "m Q@\tI\tl V");
result.add("ma-\trim-\tba", "m @r\tI m\tb V");
result.add("ma-\trin", "m e@\tI n");
result.add("ma-\trine", "m @r\ti: n");
result.add("ma-\trine-\tland", "m @r\ti: n\tl V n d");
result.add("ma-\trines", "m @r\ti: n z");
result.add("ma-\tris", "m e@\tI s");
result.add("ma-\tris-\tsa", "m V\tr I\ts V");
result.add("ma-\trish", "m e@\tI S");
result.add("ma-\tro", "m Q@\t@U");
result.add("ma-\tro-\tney", "m @r\t@U\tn i:");
result.add("ma-\tro-\tnite", "m e@\tV\tn aI t");
result.add("ma-\troc", "m Q@\tO: k");
result.add("ma-\tron", "m Q@\tO: n");
result.add("ma-\troon", "m @r\tu: n");
result.add("ma-\trooned", "m @r\tu: n d");
result.add("ma-\trotte", "m @r\tO: t");
result.add("ma-\truc-\tci", "m Q@\tu:\ttS i:");
result.add("ma-\try", "m e@\ti:");
result.add("ma-\try-\tann", "m e@\ti:\t{ n");
result.add("ma-\try-\tanne", "m e@\ti:\t{ n");
result.add("ma-\try-\tbeth", "m e@\ti:\tb e T");
result.add("ma-\try-\tland", "m e@\tV\tl V n d");
result.add("ma-\trya", "m Q@\tj V");
result.add("ma-\tse-\tra-\tti", "m {\ts e@\tQ\tt i:");
result.add("ma-\tser", "m eI\tz @r");
result.add("ma-\tso-\tchi-\tsm", "m {\ts V\tk I\tz V m");
result.add("ma-\tso-\tchis-\ttic", "m {\ts V\tk I s\tt I k");
result.add("ma-\tso-\tchist", "m {\ts V\tk V s t");
result.add("ma-\tso-\tner", "m eI\ts V\tn @r");
result.add("ma-\tso-\tnic", "m V\ts Q\tn I k");
result.add("ma-\tso-\tnite", "m {\ts V\tn aI t");
result.add("ma-\tson", "m eI\ts V n");
result.add("ma-\tson-\try", "m eI\ts V n\tr i:");
result.add("ma-\tsons", "m eI\ts V n z");
result.add("ma-\tson's", "m eI\ts V n z");
result.add("ma-\tta", "m Q\tt V");
result.add("ma-\tta-\tdor", "m {\tt V\td O@");
result.add("ma-\tta-\tgor-\tda", "m {\tt V\tg O@\td V");
result.add("ma-\tta-\tmo-\tros", "m Q\tt Q\tm O@\t@U s");
result.add("ma-\tte-\to", "m Q\tt eI\t@U");
result.add("ma-\tte-\tri-\ta-\tli-\tsm", "m V\tt I@\ti:\tV\tl I\tz V m");
result.add("ma-\tte-\tri-\ta-\tli-\tty", "m V\tt I@\ti:\t{\tl V\tt i:");
result.add("ma-\tte-\tri-\ta-\tli-\tzes", "m V\tt I@\ti:\tV\tl aI\tz V z");
result.add("ma-\tte-\tri-\ta-\tli-\tzing", "m V\tt I@\ti:\tV\tl aI\tz I N");
result.add("ma-\tte-\tri-\ta-\tlis-\ttic", "m V\tt I@\ti:\tV\tl I s\tt I k");
result.add("ma-\tte-\tri-\ta-\tlist", "m V\tt I@\ti:\tV\tl V s t");
result.add("ma-\tte-\tri-\ta-\tlize", "m V\tt I@\ti:\tV\tl aI z");
result.add("ma-\tte-\tri-\ta-\tlized", "m V\tt I@\ti:\tV\tl aI z d");
result.add("ma-\tte-\tri-\tal", "m V\tt I@\ti:\tV l");
result.add("ma-\tte-\tri-\tal-\tly", "m V\tt I@\ti:\tV\tl i:");
result.add("ma-\tte-\tri-\tals", "m V\tt I@\ti:\tV l z");
result.add("ma-\tte-\tri-\tel", "m V\tt I@\ti:\te l");
result.add("ma-\tte-\twan", "m {\tt u:\tQ n");
result.add("ma-\tted", "m eI\tt V d");
result.add("ma-\ttej-\tka", "m V\tt eI\tk V");
result.add("ma-\tter", "m Q\tt @r");
result.add("ma-\tter-\tnal", "m V\tt @r\tn V l");
result.add("ma-\tter-\tni-\tty", "m V\tt @r\tn V\tt i:");
result.add("ma-\ttey", "m eI\tt i:");
result.add("ma-\tthe-\tma-\tti-\tcal", "m {\tT V\tm {\tt I\tk V l");
result.add("ma-\tthe-\tma-\tti-\tcal-\tly", "m {\tT V\tm {\tt I\tk V\tl i:");
result.add("ma-\tthe-\tma-\tti-\tcian", "m {\tT V\tm V\tt I\tS V n");
result.add("ma-\tthe-\tma-\tti-\tcians", "m {\tT V\tm V\tt I\tS V n z");
result.add("ma-\tthe-\tma-\ttic", "m {\tT V\tm {\tt I k");
result.add("ma-\tthe-\tma-\ttics", "m {\tT V\tm {\tt I k s");
result.add("ma-\tthe-\tny", "m {\tT V\tn i:");
result.add("ma-\tthe-\tson", "m {\tT V\ts V n");
result.add("ma-\tthe-\tson's", "m {\tT V\ts V n z");
result.add("ma-\tther", "m {\tD @r");
result.add("ma-\tthes", "m {\tT V s");
result.add("ma-\tthew", "m { T\tj u:");
result.add("ma-\tthew-\tson", "m { T\tj u:\ts V n");
result.add("ma-\tthews", "m { T\tj u: z");
result.add("ma-\tthi-\ta", "m Q\tD i:\tV");
result.add("ma-\tthi-\tas", "m V\tT aI\tV s");
result.add("ma-\tthieu", "m { T\tj u:");
result.add("ma-\tthil-\tda", "m V\tt I l\td V");
result.add("ma-\tthilde", "m {\tT I l d");
result.add("ma-\tthis", "m {\tT I s");
result.add("ma-\tthur", "m {\tT @r");
result.add("ma-\tti-\tnee", "m {\tt I\tn eI");
result.add("ma-\ttias", "m Q\tS V z");
result.add("ma-\ttil-\tda", "m V\tt I l\td V");
result.add("ma-\tting", "m eI\tt I N");
result.add("ma-\ttis", "m Q\tt I s");
result.add("ma-\ttis-\tse's", "m V\tt i:\ts V z");
result.add("ma-\ttisse", "m V\tt i: s");
result.add("ma-\tto", "m Q\tt @U");
result.add("ma-\ttsu-\tmo-\tto", "m Q t\ts u:\tm @U\tt @U");
result.add("ma-\ttu-\tra-\ttion", "m {\ttS @r\teI\tS V n");
result.add("ma-\ttu-\tri-\tties", "m V\ttS U@\tV\tt i: z");
result.add("ma-\ttu-\tri-\tty", "m V\ttS U@\tV\tt i:");
result.add("ma-\ttu-\tring", "m V\ttS U@\tI N");
result.add("ma-\tture", "m V\ttS U@");
result.add("ma-\ttured", "m V t\tj U@ d");
result.add("ma-\ttures", "m V\ttS U@ z");
result.add("ma-\tve-\trick", "m {\tv @r\tI k");
result.add("ma-\tve-\tricks", "m {\tv @r\tI k s");
result.add("ma-\tve-\trick's", "m {\tv @r\tI k s");
result.add("ma-\tven", "m eI\tv V n");
result.add("ma-\tvens", "m eI\tv V n z");
result.add("ma-\tvis", "m eI\tv I s");
result.add("ma-\twr", "m O:\t@r");
result.add("ma-\txa", "m { k\ts V");
result.add("ma-\txey", "m { k\ts i:");
result.add("ma-\txi", "m { k\ts i:");
result.add("ma-\txi-\tma", "m { k\ts I\tm V");
result.add("ma-\txi-\tmal", "m { k\ts I\tm V l");
result.add("ma-\txi-\tmi-\tli-\tan", "m { k\ts I\tm I\tl i:\tV n");
result.add("ma-\txi-\tmi-\tza-\ttion", "m { k\ts I\tm V\tz eI\tS V n");
result.add("ma-\txi-\tmi-\tzes", "m { k\ts I\tm aI\tz V z");
result.add("ma-\txi-\tmi-\tzing", "m { k\ts I\tm aI\tz I N");
result.add("ma-\txi-\tmize", "m { k\ts I\tm aI z");
result.add("ma-\txi-\tmized", "m { k\ts I\tm aI z d");
result.add("ma-\txi-\tmum", "m { k\ts I\tm V m");
result.add("ma-\txie", "m { k\ts i:");
result.add("ma-\txil-\tla", "m { k\ts I\tl V");
result.add("ma-\txim", "m { k\ts I m");
result.add("ma-\txime", "m { k\ts i: m");
result.add("ma-\txims", "m { k\ts I m z");
result.add("ma-\txine", "m { k\ts i: n");
result.add("ma-\txis", "m { k\ts i: z");
result.add("ma-\tx's", "m { k\ts V z");
result.add("ma-\txy", "m { k\ts i:");
result.add("ma-\tya", "m aI\tV");
result.add("ma-\tyan", "m aI\tV n");
result.add("ma-\tyans", "m aI\tV n z");
result.add("ma-\tye-\tda", "m aI\ti:\td V");
result.add("ma-\tyer", "m eI\t@r");
result.add("ma-\tyer's", "m eI\t@r z");
result.add("ma-\tyo", "m eI\t@U");
result.add("ma-\tyo-\tral", "m eI\t@r\tV l");
result.add("ma-\tyo-\tral-\tty", "m eI\t@r\tV l\tt i:");
result.add("ma-\tyon", "m eI\tO: n");
result.add("ma-\tyon-\tnaise", "m eI\tV\tn eI z");
result.add("ma-\tyor", "m eI\t@r");
result.add("ma-\tyors", "m eI\t@r z");
result.add("ma-\tyor's", "m eI\t@r z");
result.add("ma-\tyotte", "m eI\tO: t");
result.add("ma-\tza", "m Q\tz V");
result.add("ma-\tzel-\ttov", "m Q\tz V l\tt Q f");
result.add("ma-\tzer", "m eI\tz @r");
result.add("ma-\tzes", "m eI\tz V z");
result.add("ma-\tzie", "m eI\tz i:");
result.add("ma-\tzo-\tla", "m V\tz @U\tl V");
result.add("ma-\tzon", "m Q\tz O: n");
result.add("ma-\tzu-\trek", "m V z\tj u:\tr e k");
result.add("ma-\tzur", "m {\tz @r");
result.add("ma-\tzur-\tkas", "m V\tz @r\tk V z");
result.add("maa-\tlox", "m eI\tl Q k s");
result.add("maa-\tstricht", "m Q s\tt r I k t");
result.add("maag", "m Q g");
result.add("maam", "m V m");
result.add("ma'am", "m { m");
result.add("maas", "m Q z");
result.add("mab", "m { b");
result.add("mabe", "m eI b");
result.add("mac", "m { k");
result.add("mac-\tbeth", "m V k\tb e T");
result.add("mac-\tbride", "m V k\tb r aI d");
result.add("mac-\tca-\tbe-\tan", "m {\tk V\tb i:\tV n");
result.add("mac-\tca-\tbees", "m {\tk V\tb i: z");
result.add("mac-\tca-\trone", "m {\tk @r\t@U n");
result.add("mac-\tcar-\tthy", "m V\tk Q@\tT i:");
result.add("mac-\tchi-\ta", "m {\tk i:\tV");
result.add("mac-\tdo-\tnald", "m V k\td Q\tn V l d");
result.add("mac-\tdo-\tnald's", "m V k\td Q\tn V l d z");
result.add("mac-\tdo-\tnell", "m V k\td Q\tn V l");
result.add("mac-\tdo-\twell", "m V k\td aU\tV l");
result.add("mac-\tdon-\tnell", "m V k\td Q\tn V l");
result.add("mac-\tdou-\tgall", "m V k\td u:\tg V l");
result.add("mac-\tduff", "m V k\td V f");
result.add("mac-\tfar-\tlane", "m V k\tf Q@\tl V n");
result.add("mac-\tgre-\tgor", "m V g\tr e\tg @r");
result.add("mac-\tkay", "m V\tk eI");
result.add("mac-\tke-\trel", "m {\tk @r\tV l");
result.add("mac-\tken-\tzie", "m V\tk e n\tz i:");
result.add("mac-\tkey", "m {\tk i:");
result.add("mac-\tki-\tnaw", "m {\tk I\tn O:");
result.add("mac-\tkie", "m {\tk i:");
result.add("mac-\tkie's", "m {\tk i: z");
result.add("mac-\tkin-\ttosh", "m {\tk V n\tt Q S");
result.add("mac-\tlaine", "m V k\tl eI n");
result.add("mac-\tlay", "m V k\tl eI");
result.add("mac-\tlean", "m V k\tl eI n");
result.add("mac-\tleish", "m V k\tl i: S");
result.add("mac-\tleod", "m V k\tl aU d");
result.add("mac-\tmahon", "m V k\tm { n");
result.add("mac-\tmil-\tlan", "m V k\tm I\tl V n");
result.add("mac-\tmil-\tlan's", "m V k\tm I\tl V n z");
result.add("mac-\tna-\tma-\tra", "m { k\tn V\tm e@\tV");
result.add("mac-\tnab", "m V k\tn { b");
result.add("mac-\tnair", "m V k\tn e@");
result.add("mac-\tpher-\tson", "m V k\tf I@\ts V n");
result.add("mac-\tra-\tme", "m { k\tr V\tm eI");
result.add("mac-\trae", "m V k\tr eI");
result.add("mac-\tri", "m { k\tr i:");
result.add("mac-\tro", "m { k\tr @U");
result.add("mac-\tro-\tdan-\ttin", "m { k\tr @U\td { n\tt I n");
result.add("mac-\tro-\te-\tco-\tno-\tmic", "m { k\tr @U\te\tk V\tn Q\tm I k");
result.add("mac-\tro-\te-\tco-\tno-\tmics", "m { k\tr @U\te\tk V\tn Q\tm I k s");
result.add("mac-\tro-\tpha-\tges", "m { k\tr @U\tf eI\tdZ V z");
result.add("mac-\tro-\tphage", "m { k\tr @U\tf eI dZ");
result.add("mace", "m eI s");
result.add("mach", "m Q k");
result.add("mache", "m { tS");
result.add("mack", "m { k");
result.add("mack-\tler", "m { k\tl @r");
result.add("mack-\tlin", "m { k\tl I n");
result.add("macks", "m { k s");
result.add("mack's", "m { k s");
result.add("macs", "m { k s");
result.add("mac's", "m { k s");
result.add("mad", "m { d");
result.add("mad-\tcap", "m { d\tk { p");
result.add("mad-\tda-\tle-\tna", "m Q\td Q\tl e\tn V");
result.add("mad-\tde-\tning", "m {\td V\tn I N");
result.add("mad-\tde-\tning-\tly", "m {\td V\tn I N\tl i:");
result.add("mad-\tden", "m {\td V n");
result.add("mad-\tder", "m {\td @r");
result.add("mad-\tdie", "m {\td i:");
result.add("mad-\tding", "m {\td I N");
result.add("mad-\tdock", "m {\td V k");
result.add("mad-\tdocks", "m {\td V k s");
result.add("mad-\tdox", "m {\td V k s");
result.add("mad-\tdy", "m {\td i:");
result.add("mad-\thouse", "m { d\th aU s");
result.add("mad-\tlin", "m { d\tl I n");
result.add("mad-\tly", "m { d\tl i:");
result.add("mad-\tman", "m { d\tm { n");
result.add("mad-\tmen", "m { d\tm V n");
result.add("mad-\tness", "m { d\tn V s");
result.add("mad-\tra", "m Q d\tr V");
result.add("mad-\tras", "m { d\tr V s");
result.add("mad-\tre", "m Q d\tr eI");
result.add("mad-\tres", "m Q d\tr eI z");
result.add("mad-\tri-\tgal", "m { d\tr I\tg V l");
result.add("mad-\tri-\tgals", "m { d\tr I\tg V l z");
result.add("mad-\trid", "m V d\tr I d");
result.add("mad-\tril", "m { d\tr I l");
result.add("mad-\tsen", "m { d\ts V n");
result.add("mad-\tson", "m { d\ts V n");
result.add("madd", "m { d");
result.add("made", "m eI d");
result.add("madge", "m { dZ");
result.add("mads-\ttones", "m { d\ts t @U n z");
result.add("mae", "m eI");
result.add("mael-\tstrom", "m eI l\ts t r V m");
result.add("maes", "m eI z");
result.add("mae's", "m eI z");
result.add("maest-\tro", "m aI s\tt r @U");
result.add("maf-\tfei", "m {\tf aI");
result.add("maf-\tfi-\ta", "m {\tf i:\tV");
result.add("mag", "m { g");
result.add("mag-\tda", "m { g\td V");
result.add("mag-\tda-\tla", "m Q g\td Q\tl V");
result.add("mag-\tda-\tle-\tna", "m { g\td V\tl i:\tn V");
result.add("mag-\tda-\tlen", "m { g\td V\tl V n");
result.add("mag-\tda-\tlene", "m { g\td V\tl i: n");
result.add("mag-\tgi", "m {\tdZ i:");
result.add("mag-\tgi-\to", "m Q\tdZ i:\t@U");
result.add("mag-\tgie", "m {\tg i:");
result.add("mag-\tgot", "m {\tg V t");
result.add("mag-\tgots", "m {\tg V t s");
result.add("mag-\tlev", "m { g\tl e v");
result.add("mag-\tma", "m { g\tm V");
result.add("mag-\tma's", "m { g\tm V z");
result.add("mag-\tna", "m { g\tn V");
result.add("mag-\tna-\tni-\tmous", "m { g\tn {\tn I\tm V s");
result.add("mag-\tna's", "m { g\tn V z");
result.add("mag-\tnate", "m { g\tn V t");
result.add("mag-\tnates", "m { g\tn eI t s");
result.add("mag-\tne-\tsi-\tum", "m { g\tn i:\tz i:\tV m");
result.add("mag-\tne-\tsia", "m { g\tn i:\tZ V");
result.add("mag-\tne-\tsite", "m { g\tn V\ts aI t");
result.add("mag-\tne-\tti-\tcal-\tly", "m { g\tn e\tt I\tk V\tl i:");
result.add("mag-\tne-\tti-\tsm", "m { g\tn V\tt I\tz V m");
result.add("mag-\tne-\tti-\tza-\ttion", "m { g\tn V\tt V\tz eI\tS V n");
result.add("mag-\tne-\ttic", "m { g\tn e\tt I k");
result.add("mag-\tne-\ttics", "m { g\tn e\tt I k s");
result.add("mag-\tne-\ttite", "m { g\tn V\tt aI t");
result.add("mag-\tne-\ttized", "m { g\tn V\tt aI z d");
result.add("mag-\tne-\tto-\tme-\tter", "m { g\tn V\tt Q\tm V\tt @r");
result.add("mag-\tne-\tto-\tme-\tters", "m { g\tn V\tt Q\tm V\tt @r z");
result.add("mag-\tner", "m { g\tn @r");
result.add("mag-\tness", "m V g\tn i: s");
result.add("mag-\tnet", "m { g\tn V t");
result.add("mag-\tnet-\tron", "m { g\tn V t\tr Q n");
result.add("mag-\tnets", "m { g\tn V t s");
result.add("mag-\tnet's", "m { g\tn V t s");
result.add("mag-\tni-\tfi-\tca-\ttion", "m { g\tn I\tf I\tk eI\tS V n");
result.add("mag-\tni-\tfi-\tca-\ttions", "m { g\tn I\tf I\tk eI\tS V n z");
result.add("mag-\tni-\tfi-\tcent", "m { g\tn I\tf I\ts e n t");
result.add("mag-\tni-\tfi-\tcent-\tly", "m { g\tn I\tf I\ts e n\tt l i:");
result.add("mag-\tni-\tfi-\ter", "m { g\tn I\tf aI\t@r");
result.add("mag-\tni-\tfi-\ters", "m { g\tn I\tf aI\t@r z");
result.add("mag-\tni-\tfied", "m { g\tn I\tf aI d");
result.add("mag-\tni-\tfies", "m { g\tn I\tf aI z");
result.add("mag-\tni-\tfy", "m { g\tn I\tf aI");
result.add("mag-\tni-\tfy-\ting", "m { g\tn I\tf aI\tI N");
result.add("mag-\tni-\tto-\tgorsk", "m { g\tn I\tt V\tg O@ s k");
result.add("mag-\tni-\ttude", "m { g\tn I\tt u: d");
result.add("mag-\tni-\ttudes", "m { g\tn I\tt u: d z");
result.add("mag-\tno-\tlia", "m { g\tn @U l\tj V");
result.add("mag-\tno-\tlias", "m { g\tn @U l\tj V z");
result.add("mag-\tnu-\tson", "m { g\tn V\ts V n");
result.add("mag-\tnum", "m { g\tn V m");
result.add("mag-\tnus", "m { g\tn V s");
result.add("mag-\tnus-\tson", "m { g\tn V\ts V n");
result.add("mag-\tpie", "m { g\tp aI");
result.add("mag-\tpies", "m { g\tp aI z");
result.add("mag-\tru-\tder", "m V g\tr u:\td @r");
result.add("mag-\tuire", "m V g\tw aI r");
result.add("mag-\tyar", "m { g\tj Q@");
result.add("mag-\tyars", "m { g\tj Q@ z");
result.add("maggs", "m { g z");
result.add("mags", "m { g z");
result.add("mah", "m Q");
result.add("mah-\tdi", "m Q\td i:");
result.add("mah-\tfou-\tz's", "m Q\tf u:\tz V z");
result.add("mah-\tfouz", "m Q\tf u: z");
result.add("mah-\tler", "m Q\tl @r");
result.add("mah-\tler's", "m Q\tl @r z");
result.add("mah-\tmoud", "m {\tm u: d");
result.add("mah-\tmud", "m {\tm u: d");
result.add("mah-\twah", "m Q\tw V");
result.add("maher", "m Q@");
result.add("mai", "m aI");
result.add("mai-\ta", "m aI\tV");
result.add("mai-\tda", "m eI\td V");
result.add("mai-\tdel", "m eI\td V l");
result.add("mai-\tden", "m eI\td V n");
result.add("mai-\tden-\tform", "m eI\td V n\tf O@ m");
result.add("mai-\tdens", "m eI\td V n z");
result.add("mai-\tdie", "m eI\td i:");
result.add("mai-\ter", "m eI\t@r");
result.add("mai-\tler", "m eI\tl @r");
result.add("mai-\tlers", "m eI\tl @r z");
result.add("mai-\tler's", "m eI\tl @r z");
result.add("mai-\tling", "m eI\tl I N");
result.add("mai-\tlings", "m eI\tl I N z");
result.add("mai-\tming", "m eI\tm I N");
result.add("mai-\tner", "m eI\tn @r");
result.add("mai-\tnor", "m eI\tn @r");
result.add("mai-\tsel", "m aI\ts V l");
result.add("mai-\tsie", "m eI\tz i:");
result.add("mai-\tson", "m eI\tz V n");
result.add("mai-\tze's", "m eI\tz V z");
result.add("maid", "m eI d");
result.add("maids", "m eI d z");
result.add("maid's", "m eI d z");
result.add("mail", "m eI l");
result.add("mail-\tbag", "m eI l\tb { g");
result.add("mail-\tbo-\txes", "m eI l\tb Q k\ts V z");
result.add("mail-\tbox", "m eI l\tb Q k s");
result.add("mail-\tgram", "m eI l\tg r { m");
result.add("mail-\tgrams", "m eI l\tg r { m z");
result.add("mail-\tman", "m eI l\tm { n");
result.add("mail-\troom", "m eI l\tr u: m");
result.add("maile", "m eI l");
result.add("mailed", "m eI l d");
result.add("maille", "m eI l");
result.add("mails", "m eI l z");
result.add("mail's", "m eI l z");
result.add("maim", "m eI m");
result.add("maimed", "m eI m d");
result.add("maims", "m eI m z");
result.add("main", "m eI n");
result.add("main-\tframe", "m eI n\tf r eI m");
result.add("main-\tframes", "m eI n\tf r eI m z");
result.add("main-\tlan-\tder", "m eI n\tl { n\td @r");
result.add("main-\tlan-\tders", "m eI n\tl { n\td @r z");
result.add("main-\tland", "m eI n\tl { n d");
result.add("main-\tline", "m eI n\tl aI n");
result.add("main-\tly", "m eI n\tl i:");
result.add("main-\tstay", "m eI n\ts t eI");
result.add("main-\tstays", "m eI n\ts t eI z");
result.add("main-\tstrea-\tming", "m eI n\ts t r i:\tm I N");
result.add("main-\tstream", "m eI n\ts t r i: m");
result.add("main-\ttai-\tning", "m eI n\tt eI\tn I N");
result.add("main-\ttain", "m eI n\tt eI n");
result.add("main-\ttained", "m eI n\tt eI n d");
result.add("main-\ttains", "m eI n\tt eI n z");
result.add("main-\tte-\tnance", "m eI n\tt V\tn V n s");
result.add("maine", "m eI n");
result.add("maine's", "m eI n z");
result.add("mains", "m eI n z");
result.add("mainz", "m eI n z");
result.add("mair", "m e@");
result.add("maire", "m e@");
result.add("mairs", "m e@ z");
result.add("mait-\tland", "m eI t\tl V n d");
result.add("mait-\tre", "m eI t\tr V");
result.add("maize", "m eI z");
result.add("maj", "m { dZ");
result.add("maj-\tka", "m aI\tk V");
result.add("mak", "m { k");
result.add("make", "m eI k");
result.add("make-\to-\tver", "m eI\tk @U\tv @r");
result.add("make-\tpeace", "m { k\tp i: s");
result.add("make-\tshift", "m eI k\tS I f t");
result.add("make-\tup", "m eI\tk V p");
result.add("makes", "m eI k s");
result.add("mal", "m { l");
result.add("mal-\tcolm", "m { l\tk V m");
result.add("mal-\tfea-\tsance", "m { l\tf i:\tz V n s");
result.add("mal-\tfor-\tma-\ttion", "m { l\tf O@\tm eI\tS V n");
result.add("mal-\tfor-\tma-\ttions", "m { l\tf O@\tm eI\tS V n z");
result.add("mal-\tformed", "m { l\tf O@ m d");
result.add("mal-\tfunc-\ttio-\tning", "m { l\tf V N\tk S V\tn I N");
result.add("mal-\tfunc-\ttion", "m { l\tf V N\tk S V n");
result.add("mal-\tfunc-\ttioned", "m { l\tf V N\tk S V n d");
result.add("mal-\tfunc-\ttions", "m { l\tf V N\tk S V n z");
result.add("mal-\tkin", "m { l\tk I n");
result.add("mal-\tlard", "m {\tl @r d");
result.add("mal-\tlards", "m {\tl @r d z");
result.add("mal-\tle-\ta-\tbi-\tli-\tty", "m {\tl i:\tV\tb I\tl V\tt i:");
result.add("mal-\tle-\ta-\tble", "m {\tl i:\tV\tb V l");
result.add("mal-\tlen", "m O:\tl V n");
result.add("mal-\tler", "m O:\tl @r");
result.add("mal-\tlet", "m {\tl V t");
result.add("mal-\tley", "m {\tl i:");
result.add("mal-\tli-\ta", "m Q\tl i:\tV");
result.add("mal-\tlie", "m O:\tl i:");
result.add("mal-\tlin", "m {\tl I n");
result.add("mal-\tlis", "m {\tl I s");
result.add("mal-\tlo-\try", "m {\tl @r\ti:");
result.add("mal-\tloch", "m {\tl V k");
result.add("mal-\tlon", "m {\tl V n");
result.add("mal-\tlow", "m {\tl @U");
result.add("mal-\tlows", "m {\tl @U z");
result.add("mal-\tloy", "m V\tl OI");
result.add("mal-\tnou-\trished", "m { l\tn @r\tI S t");
result.add("mal-\tnut-\tri-\ttion", "m { l\tn u: t\tr I\tS V n");
result.add("mal-\tprac-\ttice", "m { l\tp r { k\tt I s");
result.add("mal-\tta", "m O: l\tt V");
result.add("mal-\ttase", "m O: l\tt eI s");
result.add("mal-\tted", "m O: l\tt V d");
result.add("mal-\tter", "m O: l\tt @r");
result.add("mal-\ttese", "m O: l\tt i: z");
result.add("mal-\tting", "m O: l\tt I N");
result.add("mal-\ttose", "m O: l\tt @U s");
result.add("mal-\ttrea-\tted", "m { l\tt r i:\tt V d");
result.add("mal-\ttreat-\tment", "m { l\tt r i: t\tm V n t");
result.add("mal-\tva", "m Q l\tv V");
result.add("mal-\tval", "m Q l\tv Q l");
result.add("mal-\tvern", "m { l\tv @r n");
result.add("mal-\tvi-\tna", "m Q l\tv i:\tn V");
result.add("mal-\tvi-\tnas", "m O: l\tv i:\tn V s");
result.add("mal-\tvie", "m O: l\tv i:");
result.add("mal-\tvin", "m { l\tv I n");
result.add("males", "m eI l z");
result.add("male's", "m eI l z");
result.add("mall", "m O: l");
result.add("malle", "m { l");
result.add("malls", "m O: l z");
result.add("mall's", "m O: l z");
result.add("malm", "m Q m");
result.add("mal's", "m { l z");
result.add("malt", "m O: l t");
result.add("malts", "m O: l t s");
result.add("maltz", "m { l t s");
result.add("mam", "m Q m");
result.add("mam-\tba", "m Q m\tb V");
result.add("mam-\tbas", "m Q m\tb V z");
result.add("mam-\tbo", "m Q m\tb @U");
result.add("mam-\tma", "m Q\tm V");
result.add("mam-\tma-\tli-\tan", "m V\tm eI\tl i:\tV n");
result.add("mam-\tma-\try", "m {\tm @r\ti:");
result.add("mam-\tmal", "m {\tm V l");
result.add("mam-\tmals", "m {\tm V l z");
result.add("mam-\tmo-\tgra-\tphy", "m V\tm Q g\tr V\tf i:");
result.add("mam-\tmo-\tgram", "m {\tm @U g\tr { m");
result.add("mam-\tmo-\tgrams", "m {\tm @U g\tr { m z");
result.add("mam-\tmoth", "m {\tm V T");
result.add("mam-\tmoths", "m {\tm V T s");
result.add("mame", "m eI m");
result.add("man", "m { n");
result.add("man-\tcha", "m Q n\tk V");
result.add("man-\tches-\tter", "m { n\ttS e s\tt @r");
result.add("man-\tchu", "m { n\ttS u:");
result.add("man-\tchu-\tri-\ta", "m { n\ttS U@\ti:\tV");
result.add("man-\tci-\tni", "m Q n\ttS i:\tn i:");
result.add("man-\tci-\tno", "m Q n\ttS i:\tn @U");
result.add("man-\tda", "m { n\td V");
result.add("man-\tda-\tlay", "m { n\td V\tl eI");
result.add("man-\tda-\tmus", "m { n\td eI\tm V s");
result.add("man-\tda-\trin", "m { n\td @r\tI n");
result.add("man-\tda-\trins", "m { n\td @r\tI n z");
result.add("man-\tda-\tted", "m { n\td eI\tt I d");
result.add("man-\tda-\tting", "m { n\td eI\tt I N");
result.add("man-\tda-\tto-\try", "m { n\td V\tt O@\ti:");
result.add("man-\tdate", "m { n\td eI t");
result.add("man-\tdates", "m { n\td eI t s");
result.add("man-\tde-\tla", "m { n\td e\tl V");
result.add("man-\tde-\tville", "m { n\td V\tv I l");
result.add("man-\tdel", "m { n\td V l");
result.add("man-\tdel-\tbaum", "m { n\td V l\tb aU m");
result.add("man-\tdell", "m { n\td V l");
result.add("man-\tder-\tson", "m { n\td @r\ts V n");
result.add("man-\tdi-\tble", "m { n\td I\tb V l");
result.add("man-\tdie", "m { n\td i:");
result.add("man-\tdle", "m { n\td V l");
result.add("man-\tdo-\tlin", "m { n\td V\tl I n");
result.add("man-\tdy", "m { n\td i:");
result.add("man-\tfred", "m { n\tf r V d");
result.add("man-\tful-\tly", "m { n\tf V\tl i:");
result.add("man-\tg-\tling", "m { N\tg V\tl I N");
result.add("man-\tga", "m { N\tg V");
result.add("man-\tga-\tnese", "m { N\tg V\tn i: z");
result.add("man-\tgas", "m { N\tg V z");
result.add("man-\tgel", "m eI N\tg V l");
result.add("man-\tgels", "m eI N\tg V l z");
result.add("man-\tger", "m eI n\tdZ @r");
result.add("man-\tges", "m eI n\tdZ V z");
result.add("man-\tgham", "m { N\tg V m");
result.add("man-\tgle", "m { N\tg V l");
result.add("man-\tgled", "m { N\tg V l d");
result.add("man-\tgo", "m { N\tg @U");
result.add("man-\tgoes", "m { N\tg @U z");
result.add("man-\tgold", "m { n\tg @U l d");
result.add("man-\tgos-\tteen", "m { N\tg @U s\tt i: n");
result.add("man-\tgos-\tteens", "m { N\tg @U s\tt i: n z");
result.add("man-\tgrove", "m { n\tg r @U v");
result.add("man-\tgrum", "m { N\tg r V m");
result.add("man-\tgum", "m { N\tg V m");
result.add("man-\tgy", "m eI n\tdZ i:");
result.add("man-\than-\tdle", "m { n\th { n\td V l");
result.add("man-\than-\tdled", "m { n\th { n\td V l d");
result.add("man-\thas-\tset", "m { n\th {\ts e t");
result.add("man-\that-\ttan", "m { n\th {\tt V n");
result.add("man-\that-\ttan's", "m { n\th {\tt V n z");
result.add("man-\theim", "m { n\th aI m");
result.add("man-\thole", "m { n\th @U l");
result.add("man-\thood", "m { n\th U d");
result.add("man-\thunt", "m { n\th V n t");
result.add("man-\tka-\tto", "m { n\tk Q\tt @U");
result.add("man-\tkie-\twicz", "m { N\tk I\tw I t s");
result.add("man-\tkil-\tler", "m { n\tk I\tl @r");
result.add("man-\tkin", "m { N\tk I n");
result.add("man-\tkind", "m { n\tk aI n d");
result.add("man-\tkinds", "m { n\tk aI n d z");
result.add("man-\tkind's", "m { n\tk aI n d z");
result.add("man-\tkow-\tski", "m V N\tk O: f\ts k i:");
result.add("man-\tley", "m { n\tl i:");
result.add("man-\tlove", "m { n\tl V v");
result.add("man-\tly", "m { n\tl i:");
result.add("man-\tmade", "m { n\tm eI d");
result.add("man-\tna", "m {\tn V");
result.add("man-\tne-\tquin", "m {\tn V\tk I n");
result.add("man-\tne-\tquins", "m {\tn V\tk I n z");
result.add("man-\tne-\tri-\tsm", "m {\tn @r\tI\tz V m");
result.add("man-\tne-\tri-\tsms", "m {\tn @r\tI\tz V m z");
result.add("man-\tne-\tring", "m {\tn @r\tI N");
result.add("man-\tne-\trist", "m {\tn @r\tI s t");
result.add("man-\tner", "m {\tn @r");
result.add("man-\tnered", "m {\tn @r d");
result.add("man-\tners", "m {\tn @r z");
result.add("man-\tnie", "m {\tn i:");
result.add("man-\tning", "m {\tn I N");
result.add("man-\tning's", "m {\tn I N z");
result.add("man-\tno", "m {\tn @U");
result.add("man-\tny", "m {\tn i:");
result.add("man-\tny's", "m {\tn i: z");
result.add("man-\tpo-\twer", "m { n\tp aU\t@r");
result.add("man-\tpo-\twer's", "m { n\tp aU\t@r z");
result.add("man-\tsell", "m { n\ts V l");
result.add("man-\tser", "m { n\ts @r");
result.add("man-\tship", "m { n\tS I p");
result.add("man-\tsion", "m { n\tS V n");
result.add("man-\tsions", "m { n\ttS V n z");
result.add("man-\tso", "m { n\ts @U");
result.add("man-\tson", "m { n\ts V n");
result.add("man-\tson's", "m { n\ts V n z");
result.add("man-\tsur", "m { n\ts @r");
result.add("man-\tta", "m { n\tt V");
result.add("man-\ttel", "m { n\tt V l");
result.add("man-\ttell", "m { n\tt e l");
result.add("man-\tter", "m { n\tt @r");
result.add("man-\tthei", "m { n\tD aI");
result.add("man-\ttil-\tla", "m { n\tt I\tl V");
result.add("man-\ttis", "m { n\tt I s");
result.add("man-\ttle", "m { n\tt V l");
result.add("man-\ttles", "m { n\tt V l z");
result.add("man-\ttle's", "m { n\tt V l z");
result.add("man-\tton", "m { n\tt V n");
result.add("man-\ttu-\ta", "m { n\ttS u:\tV");
result.add("man-\tza-\tnil-\tla", "m { n\tz V\tn I\tl V");
result.add("mand-\tler", "m { n\td l @r");
result.add("mand-\trake", "m { n\td r eI k");
result.add("mand-\trell", "m { n\td r V l");
result.add("mand-\trill", "m { n\td r I l");
result.add("mane", "m eI n");
result.add("maned", "m eI n d");
result.add("manes", "m eI n z");
result.add("mang", "m { N");
result.add("mange", "m eI n dZ");
result.add("mank", "m { N k");
result.add("mann", "m { n");
result.add("mann-\theim", "m { n\th aI m");
result.add("manned", "m { n d");
result.add("mannes", "m { n z");
result.add("mann's", "m { n z");
result.add("mans", "m { n z");
result.add("man's", "m { n z");
result.add("mans-\tfield", "m { n\tz f i: l d");
result.add("mans-\tlaugh-\tter", "m { n\ts l O:\tt @r");
result.add("mant-\tra", "m { n\tt r V");
result.add("mao", "m aU");
result.add("mao-\tist", "m aU\tI s t");
result.add("mao-\tists", "m aU\tI s t s");
result.add("mao-\tri", "m aU\tr i:");
result.add("mao's", "m aU z");
result.add("map", "m { p");
result.add("map-\tping", "m {\tp I N");
result.add("map-\tple-\tthorpe", "m {\tp V l\tT O@ p");
result.add("mapes", "m eI p s");
result.add("mapped", "m { p t");
result.add("maps", "m { p s");
result.add("mar", "m Q@");
result.add("mar-\tble", "m Q@\tb V l");
result.add("mar-\tble-\thead", "m Q@\tb V l\th e d");
result.add("mar-\tbled", "m Q@\tb V l d");
result.add("mar-\tbles", "m Q@\tb V l z");
result.add("mar-\tble's", "m Q@\tb V l z");
result.add("mar-\tbu-\try", "m Q@\tb e@\ti:");
result.add("mar-\tbut", "m Q@\tb V t");
result.add("mar-\tcan-\tto-\tni-\to", "m Q@\tk V n\tt @U\tn i:\t@U");
result.add("mar-\tce-\tla", "m Q@\ttS e\tl V");
result.add("mar-\tce-\tli-\ta", "m Q@\ttS e\tl i:\tV");
result.add("mar-\tce-\tli-\tno", "m Q@\ttS e\tl i:\tn @U");
result.add("mar-\tce-\tlo", "m Q@\ttS e\tl @U");
result.add("mar-\tceau", "m Q@\ts @U");
result.add("mar-\tcel", "m Q@\ts e l");
result.add("mar-\tcel-\tla", "m Q@\ts e\tl V");
result.add("mar-\tcel-\tli-\tna", "m Q@\ttS e\tl i:\tn V");
result.add("mar-\tcel-\tli-\tne", "m Q@\ttS e\tl i:\tn i:");
result.add("mar-\tcel-\tlo", "m Q@\ts e\tl @U");
result.add("mar-\tcel-\tlus", "m Q@\ts e\tl V s");
result.add("mar-\tcell", "m Q@\ts eI l");
result.add("mar-\tcelle", "m Q@\ts e l");
result.add("mar-\tchak", "m Q@\ttS V k");
result.add("mar-\tchal", "m Q@\ttS V l");
result.add("mar-\tche-\tse", "m Q@\tk i:\tz i:");
result.add("mar-\tche-\tsi", "m Q@\tk e\ts i:");
result.add("mar-\tcher", "m Q@\ttS @r");
result.add("mar-\tchers", "m Q@\ttS @r z");
result.add("mar-\tches", "m Q@\ttS V z");
result.add("mar-\tchet-\tti", "m Q@\tk e\tt i:");
result.add("mar-\tching", "m Q@\ttS I N");
result.add("mar-\tch's", "m Q@\ttS V z");
result.add("mar-\tci", "m Q@\ts i:");
result.add("mar-\tci-\ta-\tno", "m Q@\ttS i:\tQ\tn @U");
result.add("mar-\tcia", "m Q@\tS V");
result.add("mar-\tcia's", "m Q@\tS V z");
result.add("mar-\tcie", "m Q@\tk i:");
result.add("mar-\tcile", "m Q@\ttS V l");
result.add("mar-\tcille", "m Q@\ts I l");
result.add("mar-\tcin", "m Q@\ts i: n");
result.add("mar-\tco", "m Q@\tk @U");
result.add("mar-\tco-\tni", "m Q@\tk @U\tn i:");
result.add("mar-\tcor", "m Q@\tk O@");
result.add("mar-\tcos", "m Q@\tk @U s");
result.add("mar-\tco's", "m Q@\tk @U z");
result.add("mar-\tcotte", "m Q@\tk O: t");
result.add("mar-\tcoux", "m Q@\tk u:");
result.add("mar-\tcu-\ts's", "m Q@\tk V\ts V z");
result.add("mar-\tcus", "m Q@\tk V s");
result.add("mar-\tcy", "m Q@\ts i:");
result.add("mar-\tden", "m Q@\td V n");
result.add("mar-\tder", "m Q@\td @r");
result.add("mar-\tdi", "m Q@\td i:");
result.add("mar-\tdis", "m Q@\td i: s");
result.add("mar-\tfa", "m Q@\tf V");
result.add("mar-\tga", "m Q@\tg V");
result.add("mar-\tga-\tlo", "m Q@\tg Q\tl @U");
result.add("mar-\tga-\tre-\tta", "m Q@\tg Q@\te\tt V");
result.add("mar-\tga-\tre-\tthe", "m Q@\tg Q@\te\tD i:");
result.add("mar-\tga-\tret", "m Q@\tg @r\tV t");
result.add("mar-\tga-\trete", "m Q@\tg @r\ti: t");
result.add("mar-\tga-\tret's", "m Q@\tg @r\tV t s");
result.add("mar-\tga-\tri-\tta", "m Q@\tg @r\ti:\tt V");
result.add("mar-\tga-\tri-\ttas", "m Q@\tg e@\ti:\tt V s");
result.add("mar-\tga-\trine", "m Q@\tdZ @r\tI n");
result.add("mar-\tgaux", "m Q@\tg @U");
result.add("mar-\tge-\try", "m Q@\tdZ @r\ti:");
result.add("mar-\tget", "m Q@\tg e t");
result.add("mar-\tgette", "m Q@\tZ e t");
result.add("mar-\tgi-\tna-\tli-\tza-\ttion", "m Q@\tdZ I\tn V\tl V\tz eI\tS V n");
result.add("mar-\tgi-\tna-\tli-\tzes", "m Q@\tdZ I\tn V\tl aI\tz V z");
result.add("mar-\tgi-\tna-\tli-\tzing", "m Q@\tdZ I\tn V\tl aI\tz I N");
result.add("mar-\tgi-\tna-\tlize", "m Q@\tdZ I\tn V\tl aI z");
result.add("mar-\tgi-\tna-\tlized", "m Q@\tdZ I\tn V\tl aI z d");
result.add("mar-\tgi-\tnal", "m Q@\tdZ I\tn V l");
result.add("mar-\tgi-\tnal-\tly", "m Q@\tdZ I\tn V\tl i:");
result.add("mar-\tgi-\tning", "m Q@\tdZ I\tn I N");
result.add("mar-\tgie", "m Q@\tdZ i:");
result.add("mar-\tgin", "m Q@\tdZ I n");
result.add("mar-\tgined", "m Q@\tdZ I n d");
result.add("mar-\tgins", "m Q@\tdZ I n z");
result.add("mar-\tgo", "m Q@\tg @U");
result.add("mar-\tgot", "m Q@\tg @U");
result.add("mar-\tgrave", "m Q@ g\tr eI v");
result.add("mar-\tgret", "m Q@ g\tr e t");
result.add("mar-\tgret's", "m Q@ g\tr e t s");
result.add("mar-\tgue-\trite", "m Q@\tg @r\ti: t");
result.add("mar-\tgy", "m Q@\tdZ i:");
result.add("mar-\tjie", "m Q@\tdZ i:");
result.add("mar-\tjo-\trie", "m Q@\tdZ @r\ti:");
result.add("mar-\tjo-\try", "m Q@\tdZ @r\ti:");
result.add("mar-\tjy", "m Q@\tdZ i:");
result.add("mar-\tkan", "m Q@\tk V n");
result.add("mar-\tke-\tta-\tbi-\tli-\tty", "m Q@\tk V\tt V\tb I\tl V\tt i:");
result.add("mar-\tke-\tta-\tble", "m Q@\tk V\tt V\tb V l");
result.add("mar-\tke-\tted", "m Q@\tk V\tt V d");
result.add("mar-\tke-\tteer", "m Q@\tk V\tt I@");
result.add("mar-\tke-\tteers", "m Q@\tk V\tt I@ z");
result.add("mar-\tke-\tter", "m Q@\tk V\tt @r");
result.add("mar-\tke-\tters", "m Q@\tk V\tt @r z");
result.add("mar-\tke-\tter's", "m Q@\tk V\tt @r z");
result.add("mar-\tke-\tting", "m Q@\tk V\tt I N");
result.add("mar-\tke-\ttings", "m Q@\tk V\tt I N z");
result.add("mar-\tke-\tting's", "m Q@\tk V\tt I N z");
result.add("mar-\tked-\tly", "m Q@\tk V d\tl i:");
result.add("mar-\tker", "m Q@\tk @r");
result.add("mar-\tkers", "m Q@\tk @r z");
result.add("mar-\tket", "m Q@\tk V t");
result.add("mar-\tket-\tpla-\tces", "m Q@\tk V t\tp l eI\ts V z");
result.add("mar-\tket-\tpla-\tce's", "m Q@\tk V t\tp l eI\ts V z");
result.add("mar-\tket-\tplace", "m Q@\tk V t\tp l eI s");
result.add("mar-\tkets", "m Q@\tk V t s");
result.add("mar-\tket's", "m Q@\tk V t s");
result.add("mar-\tkham", "m Q@\tk V m");
result.add("mar-\tking", "m Q@\tk I N");
result.add("mar-\tkings", "m Q@\tk I N z");
result.add("mar-\tkle", "m Q@\tk V l");
result.add("mar-\tko", "m Q@\tk @U");
result.add("mar-\tko-\tvitz", "m Q@\tk V\tv I t s");
result.add("mar-\tko-\twitz", "m Q@\tk V\tw I t s");
result.add("mar-\tkoff", "m Q@\tk O: f");
result.add("mar-\tkos", "m Q@\tk @U z");
result.add("mar-\tkup", "m Q@\tk V p");
result.add("mar-\tkups", "m Q@\tk V p s");
result.add("mar-\tkus", "m Q@\tk V s");
result.add("mar-\tla", "m Q@\tl V");
result.add("mar-\tland", "m Q@\tl V n d");
result.add("mar-\tle-\tna", "m Q@\tl eI\tn V");
result.add("mar-\tleen", "m Q@\tl i: n");
result.add("mar-\tleene", "m Q@\tl i: n");
result.add("mar-\tlen", "m Q@\tl V n");
result.add("mar-\tlene", "m Q@\tl i: n");
result.add("mar-\tler", "m Q@\tl @r");
result.add("mar-\tlette", "m Q@\tl e t");
result.add("mar-\tley", "m Q@\tl i:");
result.add("mar-\tlin", "m Q@\tl I n");
result.add("mar-\tling", "m Q@\tl I N");
result.add("mar-\tlins", "m Q@\tl I n z");
result.add("mar-\tlo", "m Q@\tl @U");
result.add("mar-\tlon", "m Q@\tl V n");
result.add("mar-\tlow", "m Q@\tl @U");
result.add("mar-\tlowe", "m Q@\tl @U");
result.add("mar-\tma-\tduke", "m Q@\tm V\td u: k");
result.add("mar-\tma-\tlade", "m Q@\tm V\tl eI d");
result.add("mar-\tma-\tra", "m Q@\tm Q@\tV");
result.add("mar-\tmi-\ton", "m Q@\tm i:\tV n");
result.add("mar-\tmo-\tset", "m Q@\tm V\tz e t");
result.add("mar-\tmor", "m Q@\tm @r");
result.add("mar-\tner", "m Q@\tn @r");
result.add("mar-\tney", "m Q@\tn i:");
result.add("mar-\tplan", "m Q@ p\tl { n");
result.add("mar-\tple", "m Q@\tp V l");
result.add("mar-\tquand", "m Q@ k\tw V n d");
result.add("mar-\tquardt", "m Q@ k\tw Q@ t");
result.add("mar-\tquee", "m Q@\tk i:");
result.add("mar-\tquess", "m Q@ k\tw V s");
result.add("mar-\tquette", "m Q@\tk e t");
result.add("mar-\tquez", "m Q@\tk e z");
result.add("mar-\tqui-\tta", "m Q@ k\tw i:\tt V");
result.add("mar-\tquis", "m Q@\tk i:");
result.add("mar-\tra", "m Q@\tV");
result.add("mar-\tra-\tkech", "m {\tr V\tk e S");
result.add("mar-\tre-\tro", "m Q@\te@\t@U");
result.add("mar-\tri-\tages", "m e@\tI\tdZ V z");
result.add("mar-\tri-\tner", "m e@\tI\tn @r");
result.add("mar-\tri-\tott", "m e@\ti:\tV t");
result.add("mar-\tri-\tott's", "m e@\ti:\tV t s");
result.add("mar-\triage", "m e@\tI dZ");
result.add("mar-\tried", "m e@\ti: d");
result.add("mar-\tries", "m e@\ti: z");
result.add("mar-\trin", "m {\tr I n");
result.add("mar-\tring", "m Q@\tI N");
result.add("mar-\tris", "m {\tr I s");
result.add("mar-\tron", "m e@\tV n");
result.add("mar-\trow", "m e@\t@U");
result.add("mar-\try", "m e@\ti:");
result.add("mar-\try-\ting", "m e@\ti:\tI N");
result.add("mar-\tsa-\tla", "m Q@\ts Q\tl V");
result.add("mar-\tsa-\tlis", "m Q@\ts V\tl I s");
result.add("mar-\tseil-\tles", "m Q@\ts aI\tl V s");
result.add("mar-\tseille", "m Q@\ts aI l");
result.add("mar-\tsha", "m Q@\tS V");
result.add("mar-\tsha-\tling", "m Q@\tS V\tl I N");
result.add("mar-\tshal", "m Q@\tS V l");
result.add("mar-\tshaled", "m Q@\tS V l d");
result.add("mar-\tshall", "m Q@\tS V l");
result.add("mar-\tshall-\ttown", "m Q@\tS V l\tt aU n");
result.add("mar-\tshalled", "m Q@\tS V l d");
result.add("mar-\tshalls", "m Q@\tS O: l z");
result.add("mar-\tshall's", "m Q@\tS V l z");
result.add("mar-\tshals", "m Q@\tS V l z");
result.add("mar-\tshal's", "m Q@\tS V l z");
result.add("mar-\tshes", "m Q@\tS V z");
result.add("mar-\tsh's", "m Q@\tS V z");
result.add("mar-\tshy", "m Q@\tS i:");
result.add("mar-\tsu-\tpi-\tal", "m Q@\ts u:\tp i:\tV l");
result.add("mar-\tta", "m Q@\tt V");
result.add("mar-\ttel", "m Q@\tt e l");
result.add("mar-\ttel-\tla", "m Q@\tt e\tl V");
result.add("mar-\ttel-\tli", "m Q@\tt e\tl i:");
result.add("mar-\ttel-\tlo", "m Q@\tt e\tl @U");
result.add("mar-\ttell", "m Q@\tt e l");
result.add("mar-\ttelle", "m Q@\tt e l");
result.add("mar-\tten", "m Q@\tt V n");
result.add("mar-\ttens", "m Q@\tt V n z");
result.add("mar-\ttha", "m Q@\tT V");
result.add("mar-\ttha's", "m Q@\tT V z");
result.add("mar-\tthe-\tna", "m Q@\tT e\tn V");
result.add("mar-\tti", "m Q@\tt i:");
result.add("mar-\tti-\tna", "m Q@\tt i:\tn V");
result.add("mar-\tti-\tne-\tz's", "m Q@\tt i:\tn e\tz V z");
result.add("mar-\tti-\tneau", "m Q@\tt I\tn @U");
result.add("mar-\tti-\tnez", "m Q@\tt i:\tn e z");
result.add("mar-\tti-\tni", "m Q@\tt i:\tn i:");
result.add("mar-\tti-\tnique", "m Q@\tt I\tn i: k");
result.add("mar-\tti-\tnis", "m Q@\tt i:\tn i: z");
result.add("mar-\tti-\tno", "m Q@\tt i:\tn @U");
result.add("mar-\tti-\tta", "m Q@\tt i:\tt V");
result.add("mar-\ttial", "m Q@\tS V l");
result.add("mar-\ttialed", "m Q@\tS V l d");
result.add("mar-\ttials", "m Q@\tS V l z");
result.add("mar-\ttian", "m Q@\tS V n");
result.add("mar-\ttians", "m Q@\tS V n z");
result.add("mar-\ttie", "m Q@\tt i:");
result.add("mar-\ttin", "m Q@\tt I n");
result.add("mar-\ttin-\tdale", "m Q@\tt I n\td eI l");
result.add("mar-\ttin-\tgale", "m Q@\tt I\tN eI l");
result.add("mar-\ttin-\tsen", "m Q@\tt I n\ts V n");
result.add("mar-\ttin-\tson", "m Q@\tt I n\ts V n");
result.add("mar-\ttine", "m Q@\tt i: n");
result.add("mar-\tting", "m Q@\tt I N");
result.add("mar-\ttins", "m Q@\tt I n z");
result.add("mar-\ttins-\tville", "m Q@\tt I n\tz v I l");
result.add("mar-\tton", "m Q@\tt V n");
result.add("mar-\tty", "m Q@\tt i:");
result.add("mar-\ttyn", "m Q@\tt I n");
result.add("mar-\ttyr", "m Q@\tt @r");
result.add("mar-\ttyr-\tdom", "m Q@\tt @r\td V m");
result.add("mar-\ttyred", "m Q@\tt @r d");
result.add("mar-\ttyrs", "m Q@\tt @r z");
result.add("mar-\tty's", "m Q@\tt i: z");
result.add("mar-\tva", "m Q@\tv V");
result.add("mar-\tve-\tlous", "m Q@\tv V\tl V s");
result.add("mar-\tve-\tlous-\tly", "m Q@\tv V\tl V s\tl i:");
result.add("mar-\tvel", "m Q@\tv V l");
result.add("mar-\tvel-\tla", "m Q@\tv e\tl V");
result.add("mar-\tveled", "m Q@\tv V l d");
result.add("mar-\tvell", "m Q@\tv e l");
result.add("mar-\tvels", "m Q@\tv V l z");
result.add("mar-\tvel's", "m Q@\tv V l z");
result.add("mar-\tver", "m Q@\tv @r");
result.add("mar-\tvin", "m Q@\tv I n");
result.add("mar-\tvin's", "m Q@\tv I n z");
result.add("mar-\twin", "m Q@\tw I n");
result.add("mar-\txi-\tsm", "m Q@ k\ts I\tz V m");
result.add("mar-\txist", "m Q@ k\ts I s t");
result.add("mar-\txists", "m Q@ k\ts I s t s");
result.add("marc", "m Q@ k");
result.add("marc-\thand", "m Q@ k\th { n d");
result.add("march", "m Q@ tS");
result.add("march-\tman", "m Q@ k\tm V n");
result.add("marche", "m Q@ S");
result.add("marched", "m Q@ tS t");
result.add("mare", "m e@");
result.add("mares", "m e@ z");
result.add("mare's", "m e@ z");
result.add("marge", "m Q@ dZ");
result.add("marje", "m Q@ dZ");
result.add("mark", "m Q@ k");
result.add("mark-\tdown", "m Q@ k\td aU n");
result.add("mark-\tdowns", "m Q@ k\td aU n z");
result.add("mark-\tka", "m Q@\tk V");
result.add("mark-\tkaa", "m Q@\tk Q");
result.add("mark-\tkas", "m Q@\tk V s");
result.add("mark-\tland", "m Q@ k\tl V n d");
result.add("mark-\tman", "m Q@ k\tm V n");
result.add("mark-\tson", "m Q@ k\ts V n");
result.add("mark-\tup", "m Q@\tk V p");
result.add("marked", "m Q@ k t");
result.add("marks", "m Q@ k s");
result.add("mark's", "m Q@ k s");
result.add("marks-\tman", "m Q@ k\ts m V n");
result.add("marks-\tman-\tship", "m Q@ k\ts m V n\tS I p");
result.add("marks-\tmen", "m Q@ k\ts m e n");
result.add("marl-\tbo-\tro", "m Q@ l\tb @r\t@U");
result.add("marl-\tbo-\tro's", "m Q@ l\tb @r\tr @U z");
result.add("marl-\tbo-\trough", "m Q@ l\tb @r\t@U");
result.add("marl-\tton", "m Q@ l\tt V n");
result.add("marque", "m Q@ k");
result.add("marques", "m Q@ k s");
result.add("marr", "m Q@");
result.add("marred", "m Q@ d");
result.add("mars", "m Q@ z");
result.add("mars-\tden", "m Q@ s\td V n");
result.add("mars-\tland", "m Q@ s\tl V n d");
result.add("mars-\ttel-\tler", "m Q@ z\tt e\tl @r");
result.add("mars-\tton", "m Q@ s\tt V n");
result.add("marse", "m Q@ s");
result.add("marsh", "m Q@ S");
result.add("marsh-\tfield", "m Q@ S\tf i: l d");
result.add("marsh-\tland", "m Q@ S\tl { n d");
result.add("marsh-\tlands", "m Q@ S\tl { n d z");
result.add("marsh-\tmal-\tlow", "m Q@ S\tm e\tl @U");
result.add("marsh-\tmal-\tlows", "m Q@ S\tm e\tl @U z");
result.add("marsh-\tman", "m Q@ S\tm V n");
result.add("mart", "m Q@ t");
result.add("mart-\tz's", "m Q@ t\ts V z");
result.add("marte", "m Q@ t");
result.add("marth", "m Q@ T");
result.add("marthe", "m Q@ D");
result.add("marts", "m Q@ t s");
result.add("mart's", "m Q@ t s");
result.add("martz", "m Q@ t s");
result.add("marv", "m Q@ v");
result.add("marx", "m Q@ k s");
result.add("mas-\tcia", "m Q s\ttS V");
result.add("mas-\tcot", "m { s\tk Q t");
result.add("mas-\tcots", "m { s\tk Q t s");
result.add("mas-\tcu-\tli-\tni-\tty", "m { s\tk j V\tl I\tn V\tt i:");
result.add("mas-\tcu-\tline", "m { s\tk j V\tl V n");
result.add("mas-\tkell", "m { s\tk V l");
result.add("mas-\tker", "m { s\tk @r");
result.add("mas-\tking", "m { s\tk I N");
result.add("mas-\tlin", "m { z\tl I n");
result.add("mas-\tque-\tra-\tding", "m { s\tk @r\teI\td I N");
result.add("mas-\tque-\trade", "m { s\tk @r\teI d");
result.add("mas-\tsa", "m {\ts V");
result.add("mas-\tsa-\tchu-\tsetts", "m {\ts V\ttS u:\ts V t s");
result.add("mas-\tsa-\tcr-\ting", "m {\ts V\tk @r\tI N");
result.add("mas-\tsa-\tcre", "m {\ts V\tk @r");
result.add("mas-\tsa-\tcred", "m {\ts V\tk @r d");
result.add("mas-\tsa-\tcres", "m {\ts I\tk @r z");
result.add("mas-\tsa-\tger", "m V\ts Q\tZ @r");
result.add("mas-\tsa-\tges", "m V\ts Q\tZ V z");
result.add("mas-\tsa-\tging", "m V\ts Q\tZ I N");
result.add("mas-\tsage", "m V\ts Q Z");
result.add("mas-\tsaged", "m V\ts Q Z d");
result.add("mas-\tse-\tnet", "m {\ts V\tn e t");
result.add("mas-\tse-\tnet's", "m {\ts V\tn e t s");
result.add("mas-\tser", "m {\ts @r");
result.add("mas-\tses", "m {\ts V z");
result.add("mas-\tsey", "m {\ts i:");
result.add("mas-\tsi-\tmo", "m {\ts I\tm @U");
result.add("mas-\tsie", "m {\ts i:");
result.add("mas-\tsif", "m {\ts i: f");
result.add("mas-\tsin-\tgill", "m {\ts I N\tg I l");
result.add("mas-\tsing", "m {\ts I N");
result.add("mas-\tsive", "m {\ts I v");
result.add("mas-\tsive-\tly", "m {\ts I v\tl i:");
result.add("mas-\tson", "m {\ts V n");
result.add("mas-\tte-\tring", "m { s\tt @r\tI N");
result.add("mas-\tte-\try", "m { s\tt @r\ti:");
result.add("mas-\ttec-\tto-\tmies", "m { s\tt e k\tt V\tm i: z");
result.add("mas-\ttec-\tto-\tmy", "m { s\tt e k\tt V\tm i:");
result.add("mas-\tted", "m { s\tt V d");
result.add("mas-\tter", "m { s\tt @r");
result.add("mas-\tter-\tcard", "m { s\tt @r\tk Q@ d");
result.add("mas-\tter-\tcard's", "m { s\tt @r\tk Q@ d z");
result.add("mas-\tter-\tful", "m { s\tt @r\tf V l");
result.add("mas-\tter-\tful-\tly", "m { s\tt @r\tf V\tl i:");
result.add("mas-\tter-\tly", "m { s\tt @r\tl i:");
result.add("mas-\tter-\tman", "m { s\tt @r\tm V n");
result.add("mas-\tter-\tmin-\tded", "m { s\tt @r\tm aI n\td V d");
result.add("mas-\tter-\tmin-\tding", "m { s\tt @r\tm aI n\td I N");
result.add("mas-\tter-\tmind", "m { s\tt @r\tm aI n d");
result.add("mas-\tter-\tminds", "m { s\tt @r\tm aI n d z");
result.add("mas-\tter-\tpie-\tces", "m { s\tt @r\tp i:\ts V z");
result.add("mas-\tter-\tpiece", "m { s\tt @r\tp i: s");
result.add("mas-\tter-\tson", "m { s\tt @r\ts V n");
result.add("mas-\tter-\tstroke", "m { s\tt @r s\tt r @U k");
result.add("mas-\tter-\twork", "m { s\tt @r\tw @r k");
result.add("mas-\tter-\tworks", "m { s\tt @r\tw @r k s");
result.add("mas-\ttered", "m { s\tt @r d");
result.add("mas-\tters", "m { s\tt @r z");
result.add("mas-\tter's", "m { s\tt @r z");
result.add("mas-\tthead", "m { s\tt h e d");
result.add("mas-\ttiff", "m { s\tt I f");
result.add("mas-\tto-\tdon", "m { s\tt V\td O: n");
result.add("mas-\ttoi-\tdi-\ttis", "m { s\tt OI\td aI\tt I s");
result.add("mas-\ttri-\tan-\tni", "m Q s\tt r i:\tQ\tn i:");
result.add("mas-\ttur-\tba-\tted", "m { s\tt @r\tb eI\tt V d");
result.add("mas-\ttur-\tba-\tting", "m { s\tt @r\tb eI\tt I N");
result.add("mas-\ttur-\tba-\ttion", "m { s\tt @r\tb eI\tS V n");
result.add("mas-\ttur-\tbate", "m { s\tt @r\tb eI t");
result.add("mas-\ttur-\tbates", "m { s\tt @r\tb eI t s");
result.add("mase", "m eI z");
result.add("mase-\tfield", "m eI z\tf i: l d");
result.add("mash", "m { S");
result.add("mashed", "m { S t");
result.add("mask", "m { s k");
result.add("masked", "m { s k t");
result.add("masks", "m { s k s");
result.add("mass", "m { s");
result.add("mass.", "m { s");
result.add("masse", "m { s");
result.add("massed", "m { s t");
result.add("mast", "m { s t");
result.add("masts", "m { s t s");
result.add("mat", "m { t");
result.add("mat-\tches", "m {\ttS V z");
result.add("mat-\tching", "m {\ttS I N");
result.add("mat-\tch's", "m {\ttS V z");
result.add("mat-\tchup", "m {\ttS V p");
result.add("mat-\tchups", "m {\ttS V p s");
result.add("mat-\tlick", "m { t\tl I k");
result.add("mat-\tlock", "m { t\tl Q k");
result.add("mat-\tra", "m { t\tr V");
result.add("mat-\tri-\tar-\tchal", "m eI t\tr i:\tQ@\tk V l");
result.add("mat-\tri-\tar-\tchy", "m eI t\tr i:\tQ@\tk i:");
result.add("mat-\tri-\tarch", "m eI t\tr i:\tQ@ k");
result.add("mat-\tri-\tli-\tne-\tal", "m { t\tr I\tl I\tn i:\tV l");
result.add("mat-\tri-\tmo-\tni-\tal", "m { t\tr I\tm @U\tn i:\tV l");
result.add("mat-\tri-\tmo-\tny", "m { t\tr I\tm @U\tn i:");
result.add("mat-\tri-\tx's", "m eI t\tr I k\ts V z");
result.add("mat-\trix", "m eI t\tr I k s");
result.add("mat-\tron", "m eI t\tr V n");
result.add("mat-\tron-\tly", "m eI t\tr V n\tl i:");
result.add("mat-\trons", "m eI t\tr V n z");
result.add("mat-\tson", "m Q t\ts V n");
result.add("mat-\tta", "m {\tt V");
result.add("mat-\tte-\to", "m Q\tt eI\t@U");
result.add("mat-\tte-\tson", "m {\tt V\ts V n");
result.add("mat-\ttei", "m {\tt aI");
result.add("mat-\ttel", "m V\tt e l");
result.add("mat-\ttel's", "m V\tt e l z");
result.add("mat-\tter", "m {\tt @r");
result.add("mat-\ttered", "m {\tt @r d");
result.add("mat-\tters", "m {\tt @r z");
result.add("mat-\tter's", "m {\tt @r z");
result.add("mat-\tthau", "m { t\th aU");
result.add("mat-\tthew", "m { T\tj u:");
result.add("mat-\tthews", "m { T\tj u: z");
result.add("mat-\tthew's", "m { T\tj u: z");
result.add("mat-\tthi-\ta", "m Q t\tD i:\tV");
result.add("mat-\tthi-\tas", "m V\tT aI\tV s");
result.add("mat-\tti-\tla", "m Q\tt i:\tl V");
result.add("mat-\ttias", "m {\tS V z");
result.add("mat-\ttie", "m {\tt i:");
result.add("mat-\tting", "m {\tt I N");
result.add("mat-\ttocks", "m {\tt V k s");
result.add("mat-\ttoon", "m V\tt u: n");
result.add("mat-\ttox", "m {\tt V k s");
result.add("mat-\ttres-\tses", "m { t\tr V\ts V z");
result.add("mat-\ttres-\ts's", "m { t\tr V\ts V z");
result.add("mat-\ttress", "m { t\tr V s");
result.add("mat-\tty", "m {\tt i:");
result.add("mat-\tza", "m Q t\tz V");
result.add("match", "m { tS");
result.add("match-\tbook", "m { tS\tb U k");
result.add("match-\tbox", "m { tS\tb Q k s");
result.add("match-\tlock", "m { tS\tl Q k");
result.add("match-\tlocks", "m { tS\tl Q k s");
result.add("match-\tma-\tker", "m { tS\tm eI\tk @r");
result.add("match-\tma-\tkers", "m { tS\tm eI\tk @r z");
result.add("match-\tma-\tking", "m { tS\tm eI\tk I N");
result.add("matched", "m { tS t");
result.add("mate", "m eI t");
result.add("mates", "m eI t s");
result.add("math", "m { T");
result.add("mathe", "m eI D");
result.add("mats", "m { t s");
result.add("matt", "m { t");
result.add("matt-\tson", "m { t\ts V n");
result.add("matte", "m { t");
result.add("mattes", "m { t s");
result.add("matts", "m { t s");
result.add("matt's", "m { t z");
result.add("mau", "m @U");
result.add("mau-\tce-\tri", "m O:\ttS e@\ti:");
result.add("mau-\ter", "m aU\t@r");
result.add("mau-\tger", "m O:\tg @r");
result.add("mau-\ti", "m aU\ti:");
result.add("mau-\tler", "m O:\tl @r");
result.add("mau-\tmee", "m aU\tm i:");
result.add("mau-\tna", "m O:\tn V");
result.add("mau-\tpin", "m @U\tp { n");
result.add("mau-\tra", "m O@\tV");
result.add("mau-\tra's", "m O@\tV z");
result.add("mau-\treen", "m O@\ti: n");
result.add("mau-\trer", "m O@\t@r");
result.add("mau-\tri", "m O@\ti:");
result.add("mau-\tri-\tce's", "m O@\tI\ts V z");
result.add("mau-\tri-\tci-\to", "m aU\tr i:\ts i:\t@U");
result.add("mau-\tri-\tne", "m O@\ti:\tn i:");
result.add("mau-\tri-\tta", "m O@\ti:\tt V");
result.add("mau-\tri-\tta-\tni-\ta", "m O@\tI\tt eI\tn i:\tV");
result.add("mau-\tri-\tti-\tus", "m O@\tI\tt i:\tV s");
result.add("mau-\tri-\tzi-\to", "m O@\tI\tz i:\t@U");
result.add("mau-\trice", "m O@\ti: s");
result.add("mau-\trie", "m O@\ti:");
result.add("mau-\tro", "m O@\t@U");
result.add("mau-\trus", "m O@\tV s");
result.add("mau-\try", "m O@\ti:");
result.add("mau-\tser", "m aU\ts @r");
result.add("mau-\tso-\tle-\tum", "m O:\ts V\tl i:\tV m");
result.add("maud", "m O: d");
result.add("maud-\tlin", "m O: d\tl I n");
result.add("maude", "m O: d");
result.add("mauk", "m O: k");
result.add("maul", "m O: l");
result.add("maul-\tdin", "m aU l\td I n");
result.add("mauled", "m O: l d");
result.add("maun-\tde-\tring", "m O: n\td @r\tI N");
result.add("maun-\tde-\trings", "m O: n\td @r\tI N z");
result.add("maund", "m O: n d");
result.add("mauve", "m O: v");
result.add("maw", "m O:");
result.add("maw-\tkish", "m O:\tk I S");
result.add("maw-\tson", "m O:\ts V n");
result.add("max", "m { k s");
result.add("max-\tfield", "m { k\ts f i: l d");
result.add("max-\tton", "m { k\ts t V n");
result.add("max-\ttor", "m { k\ts t @r");
result.add("max-\twell", "m { k\ts w e l");
result.add("max-\twell's", "m { k\ts w e l z");
result.add("max-\tzi-\tde", "m { k\ts i:\tt V");
result.add("maxed", "m { k s t");
result.add("may", "m eI");
result.add("may-\tbe", "m eI\tb i:");
result.add("may-\tbee", "m eI\tb i:");
result.add("may-\tbelle", "m eI\tb e l");
result.add("may-\tber-\try", "m eI\tb e@\ti:");
result.add("may-\tcock", "m eI\tk Q k");
result.add("may-\tda", "m eI\td V");
result.add("may-\tday", "m eI\td eI");
result.add("may-\tfair", "m eI\tf e@");
result.add("may-\tfield", "m eI\tf i: l d");
result.add("may-\tflo-\twer", "m eI f\tl aU\t@r");
result.add("may-\them", "m eI\th e m");
result.add("may-\thew", "m eI h\tj u:");
result.add("may-\tnard", "m eI\tn @r d");
result.add("may-\tnard's", "m eI\tn @r d z");
result.add("may-\ttag", "m eI\tt { g");
result.add("may-\tville", "m eI\tv I l");
result.add("maye", "m eI");
result.add("mayes", "m eI z");
result.add("mayme", "m eI m");
result.add("mayne", "m eI n");
result.add("mays", "m eI z");
result.add("may's", "m eI z");
result.add("maz-\tda", "m Q z\td V");
result.add("maz-\tda's", "m Q z\td V z");
result.add("maze", "m eI z");
result.add("mc", "m I k");
result.add("mc-\tco-\tna-\tghy", "m V\tk Q\tn V\tg i:");
result.add("mc-\tcomb", "m V\tk @U m");
result.add("mc-\tcombs", "m V\tk Q m z");
result.add("mc-\tcon-\tnel", "m V\tk Q\tn V l");
result.add("mc-\tcon-\tnell", "m V\tk Q\tn V l");
result.add("mc-\tcon-\tnel's", "m V\tk Q\tn V l z");
result.add("mc-\tcook", "m V\tk U k");
result.add("mc-\tcool", "m V\tk u: l");
result.add("mc-\tcor-\tmac", "m V\tk O@\tm V k");
result.add("mc-\tcor-\tmack", "m V\tk O@\tm V k");
result.add("mc-\tcor-\tmick", "m V\tk O@\tm I k");
result.add("mc-\tcor-\tmick's", "m V\tk O@\tm I k s");
result.add("mc-\tcord", "m V\tk O@ d");
result.add("mc-\tcourt", "m V\tk O@ t");
result.add("mc-\tcoy", "m V\tk OI");
result.add("mc-\tcoys", "m V\tk OI z");
result.add("mc-\tcrac-\tken", "m V k\tr {\tk V n");
result.add("mc-\tcrae", "m V k\tr eI");
result.add("mc-\tcray", "m V k\tr eI");
result.add("mc-\tcrea-\tdy", "m V k\tr i:\td i:");
result.add("mc-\tcrea-\try", "m V k\tr I@\ti:");
result.add("mc-\tcree-\try", "m V k\tr I@\ti:");
result.add("mc-\tcro-\try", "m V k\tr O@\ti:");
result.add("mc-\tcul-\tlers", "m V\tk V\tl @r z");
result.add("mc-\tcul-\tloch", "m V\tk V\tl V k");
result.add("mc-\tcul-\tlough", "m V\tk V\tl V");
result.add("mc-\tcul-\tly", "m V\tk V\tl i:");
result.add("mc-\tcune", "m V k\tj u: n");
result.add("mc-\tcur-\tdy", "m V\tk @r\td i:");
result.add("mc-\tcut-\tcheon", "m V\tk V\ttS V n");
result.add("mc-\tda-\tniel", "m V k\td { n\tj V l");
result.add("mc-\tda-\tniels", "m V k\td { n\tj V l z");
result.add("mc-\tda-\tvid", "m V k\td eI\tv V d");
result.add("mc-\tdade", "m V k\td eI d");
result.add("mc-\tdade's", "m V k\td eI d z");
result.add("mc-\tder-\tmitt", "m V k\td @r\tm V t");
result.add("mc-\tder-\tmott", "m V k\td @r\tm V t");
result.add("mc-\tder-\tmott's", "m V k\td @r\tm V t s");
result.add("mc-\tdiar-\tmid", "m V k\td e@\tm V d");
result.add("mc-\tdo-\tnald", "m V k\td Q\tn V l d");
result.add("mc-\tdo-\tnald's", "m V k\td Q\tn V l d z");
result.add("mc-\tdo-\tnough", "m V k\td V\tn V");
result.add("mc-\tdo-\twell", "m V k\td aU\tV l");
result.add("mc-\tdon-\tnell", "m V k\td Q\tn V l");
result.add("mc-\tdou-\tgal", "m V k\td u:\tg V l");
result.add("mc-\tdou-\tgall", "m V k\td u:\tg V l");
result.add("mc-\tdou-\tgal's", "m V k\td u:\tg V l z");
result.add("mc-\tfad-\tden", "m V k\tf {\td V n");
result.add("mc-\tfad-\tden's", "m V k\tf {\td V n z");
result.add("mc-\tfad-\tdin", "m V k\tf {\td V n");
result.add("mc-\tfall", "m V k\tf O: l");
result.add("mc-\tfar-\tlan", "m V k\tf Q@\tl V n");
result.add("mc-\tfar-\tland", "m V k\tf Q@\tl V n d");
result.add("mc-\tfee", "m V k\tf i:");
result.add("mc-\tfer-\tren", "m V k\tf e@\tV n");
result.add("mc-\tgan-\tnon", "m V\tg {\tn V n");
result.add("mc-\tgaw", "m V\tg O:");
result.add("mc-\tgee", "m V\tg i:");
result.add("mc-\tgee's", "m V\tg i: z");
result.add("mc-\tgil-\tli-\tcud-\tdy", "m V\tg I\tl V\tk V\td i:");
result.add("mc-\tgill", "m V\tg I l");
result.add("mc-\tgin-\tnis", "m V\tg I\tn V s");
result.add("mc-\tgin-\tty", "m V\tg I n\tt i:");
result.add("mc-\tgo-\tvern", "m V\tg V\tv @r n");
result.add("mc-\tgo-\tvern's", "m V\tg V\tv @r n z");
result.add("mc-\tgo-\twan", "m V\tg aU\tV n");
result.add("mc-\tgo-\twan's", "m V\tg aU\tV n z");
result.add("mc-\tgra-\tdy", "m V g\tr eI\td i:");
result.add("mc-\tgrath", "m V g\tr { T");
result.add("mc-\tgraw", "m V g\tr O:");
result.add("mc-\tgray", "m V g\tr eI");
result.add("mc-\tgre-\tgor", "m V g\tr e\tg @r");
result.add("mc-\tgrew", "m V g\tr u:");
result.add("mc-\tguf-\tfey", "m V\tg V\tf i:");
result.add("mc-\tguf-\tfin", "m V\tg V\tf V n");
result.add("mc-\tgui-\tgan", "m V\tg I\tg V n");
result.add("mc-\tguire", "m V g\tw aI r");
result.add("mc-\tgurn", "m V\tg @r n");
result.add("mc-\tkay", "m V\tk eI");
result.add("mc-\tke-\ton", "m V\tk i:\tV n");
result.add("mc-\tkean", "m V\tk i: n");
result.add("mc-\tkee", "m V\tk i:");
result.add("mc-\tkee-\tsport", "m V\tk i: s\tp O@ t");
result.add("mc-\tkee's", "m V\tk i: z");
result.add("mc-\tken-\tna", "m V\tk e\tn V");
result.add("mc-\tken-\tney", "m V\tk e\tn i:");
result.add("mc-\tken-\tzie", "m V\tk e n\tz i:");
result.add("mc-\tkes-\tson", "m V\tk e\ts V n");
result.add("mc-\tkes-\tson's", "m V\tk e\ts V n z");
result.add("mc-\tkim", "m V\tk I m");
result.add("mc-\tkin-\tley", "m V\tk I n\tl i:");
result.add("mc-\tkin-\tney", "m V\tk I\tn i:");
result.add("mc-\tkin-\tney's", "m V\tk I\tn i: z");
result.add("mc-\tkin-\tnon", "m V\tk I\tn V n");
result.add("mc-\tkis-\tsick", "m V\tk I\ts I k");
result.add("mc-\tkitt-\trick", "m V\tk I t\tr I k");
result.add("mc-\tla-\tna-\than", "m V k\tl {\tn V\th { n");
result.add("mc-\tlain", "m V k\tl eI n");
result.add("mc-\tlau-\trin", "m V k\tl O@\tV n");
result.add("mc-\tlaugh-\tlin", "m V g\tl Q k\tl V n");
result.add("mc-\tle-\troy", "m V k\tl i:\tr OI");
result.add("mc-\tlean", "m V k\tl i: n");
result.add("mc-\tlean's", "m V k\tl i: n z");
result.add("mc-\tleod", "m V k\tl aU d");
result.add("mc-\tlouth", "m V k\tl aU T");
result.add("mc-\tlure", "m V k\tl u: r");
result.add("mc-\tma-\thon", "m V k\tm eI\tV n");
result.add("mc-\tmar-\ttin", "m V k\tm Q@\tt V n");
result.add("mc-\tmas-\tter", "m V k\tm { s\tt @r");
result.add("mc-\tmath", "m V k\tm { T");
result.add("mc-\tmil-\tlan", "m V k\tm I\tl V n");
result.add("mc-\tmil-\tlin", "m V k\tm I\tl V n");
result.add("mc-\tmul-\tlan", "m V k\tm V\tl V n");
result.add("mc-\tmul-\tlen", "m V\tk V\tl V n");
result.add("mc-\tmunn", "m V k\tm V n");
result.add("mc-\tmur-\tdo", "m V k\tm @r\td @U");
result.add("mc-\tmur-\try", "m V k\tm @r\ti:");
result.add("mc-\tna-\tma-\tra", "m { k\tn V\tm e@\tV");
result.add("mc-\tna-\tma-\tra's", "m { k\tn V\tm e@\tV z");
result.add("mc-\tna-\tmee", "m { k\tn V\tm i:");
result.add("mc-\tna-\try", "m V k\tn e@\ti:");
result.add("mc-\tnabb", "m V k\tn { b");
result.add("mc-\tnair", "m V k\tn e@");
result.add("mc-\tnal-\tley", "m V k\tn {\tl i:");
result.add("mc-\tnal-\tly", "m V k\tn {\tl i:");
result.add("mc-\tnaugh-\tton", "m V k\tn O:\tt V n");
result.add("mc-\tneal", "m V k\tn i: l");
result.add("mc-\tnee-\tly", "m V k\tn i:\tl i:");
result.add("mc-\tneil", "m V k\tn i: l");
result.add("mc-\tneill", "m V k\tn i: l");
result.add("mc-\tnel-\tly", "m V k\tn e\tl i:");
result.add("mc-\tnul-\tty", "m V k\tn V l\tt i:");
result.add("mc-\tnutt", "m V k\tn V t");
result.add("mc-\tphail", "m V k\tf eI l");
result.add("mc-\tpher-\tson", "m V k\tf @r\ts V n");
result.add("mc-\tquade", "m V k\tw eI d");
result.add("mc-\tquee-\tney", "m V k\tw i:\tn i:");
result.add("mc-\tqueen", "m V k\tw i: n");
result.add("mc-\tquil-\tlin", "m V k\tw I\tl V n");
result.add("mc-\trae", "m V k\tr eI");
result.add("mc-\trey-\tnolds", "m V k\tr eI\tn V l d z");
result.add("mc-\tro-\tberts", "m V k\tr Q\tb @r t s");
result.add("mc-\tshan", "m V k\tS { n");
result.add("mc-\tspad-\tden", "m V k\ts p {\td V n");
result.add("mc-\tveigh", "m V k\tv eI");
result.add("mc-\tveigh's", "m V k\tv eI z");
result.add("mc-\twher-\tter", "m V k\tw @r\tt @r");
result.add("mc-\twhor-\tter", "m V k\tw O@\tt @r");
result.add("mc-\twil-\tliams", "m V k\tw I l\tj V m z");
result.add("mck-\tnight", "m V k\tn aI t");
result.add("me", "m i:");
result.add("me-\tan-\tde-\tring", "m i:\t{ n\td @r\tI N");
result.add("me-\tan-\tder", "m i:\t{ n\td @r");
result.add("me-\tan-\tdered", "m i:\t{ n\td @r d");
result.add("me-\tan-\tders", "m i:\t{ n\td @r z");
result.add("me-\tbane", "m e\tb V n");
result.add("me-\tcha-\tni-\tcal", "m V\tk {\tn I\tk V l");
result.add("me-\tcha-\tni-\tsm", "m e\tk V\tn I\tz V m");
result.add("me-\tcha-\tni-\tsms", "m e\tk V\tn I\tz V m z");
result.add("me-\tcha-\tni-\tza-\ttion", "m e\tk V\tn V\tz eI\tS V n");
result.add("me-\tcha-\tnic", "m V\tk {\tn I k");
result.add("me-\tcha-\tnical-\tly", "m V\tk {\tn I k\tl i:");
result.add("me-\tcha-\tnics", "m V\tk {\tn I k s");
result.add("me-\tcha-\tnics-\tburg", "m V\tk {\tn I k\ts b @r g");
result.add("me-\tcha-\tnis-\ttic", "m e\tk V\tn I s\tt I k");
result.add("me-\tcha-\tnize", "m e\tk V\tn aI z");
result.add("me-\tcha-\tnized", "m e\tk V\tn aI z d");
result.add("me-\tchem", "m e\tk I m");
result.add("me-\tcum", "m e\tk V m");
result.add("me-\tda", "m eI\td V");
result.add("me-\tda-\tlist", "m e\td V\tl V s t");
result.add("me-\tda-\tlists", "m e\td V\tl V s t s");
result.add("me-\tda-\tlist's", "m e\td V\tl V s t s");
result.add("me-\tdal", "m e\td V l");
result.add("me-\tdal-\tlion", "m V\td { l\tj V n");
result.add("me-\tdal-\tlions", "m V\td { l\tj V n z");
result.add("me-\tdals", "m e\td V l z");
result.add("me-\tde-\ta", "m V\td i:\tV");
result.add("me-\tdel-\tlin", "m V\td e\tl I n");
result.add("me-\tdi-\ta", "m i:\td i:\tV");
result.add("me-\tdi-\ta-\tted", "m i:\td i:\teI\tt V d");
result.add("me-\tdi-\ta-\tting", "m i:\td i:\teI\tt I N");
result.add("me-\tdi-\ta-\ttion", "m i:\td i:\teI\tS V n");
result.add("me-\tdi-\ta-\ttor", "m i:\td i:\teI\tt @r");
result.add("me-\tdi-\ta-\ttors", "m i:\td i:\teI\tt @r z");
result.add("me-\tdi-\tal", "m i:\td i:\tV l");
result.add("me-\tdi-\tan", "m i:\td i:\tV n");
result.add("me-\tdi-\ta's", "m i:\td i:\tV z");
result.add("me-\tdi-\tate", "m i:\td i:\teI t");
result.add("me-\tdi-\tca-\tted", "m e\td I\tk eI\tt V d");
result.add("me-\tdi-\tca-\ttion", "m e\td I\tk eI\tS V n");
result.add("me-\tdi-\tca-\ttions", "m e\td I\tk eI\tS V n z");
result.add("me-\tdi-\tcaid", "m e\td I\tk eI d");
result.add("me-\tdi-\tcal", "m e\td I\tk V l");
result.add("me-\tdi-\tcare", "m e\td I\tk e@");
result.add("me-\tdi-\tcare's", "m e\td I\tk e@ z");
result.add("me-\tdi-\tcate", "m e\td I\tk eI t");
result.add("me-\tdi-\tci", "m e\td i:\ts i:");
result.add("me-\tdi-\tci-\tnal", "m V\td I\ts V\tn V l");
result.add("me-\tdi-\tci-\tnal-\tly", "m V\td I\ts V\tn V\tl i:");
result.add("me-\tdi-\tcine", "m e\td I\ts I n");
result.add("me-\tdi-\tcines", "m e\td I\ts I n z");
result.add("me-\tdi-\tcine's", "m e\td I\ts I n z");
result.add("me-\tdi-\tco", "m e\td I\tk @U");
result.add("me-\tdi-\tgap", "m e\td I\tg { p");
result.add("me-\tdi-\tna", "m V\td aI\tn V");
result.add("me-\tdi-\to", "m i:\td i:\t@U");
result.add("me-\tdi-\to-\tcre", "m i:\td i:\t@U\tk @r");
result.add("me-\tdi-\toc-\tri-\tty", "m i:\td i:\tQ k\tr I\tt i:");
result.add("me-\tdi-\tta-\tting", "m e\td I\tt eI\tt I N");
result.add("me-\tdi-\tta-\ttion", "m e\td I\tt eI\tS V n");
result.add("me-\tdi-\tta-\ttions", "m e\td I\tt eI\tS V n z");
result.add("me-\tdi-\tta-\ttive", "m e\td I\tt eI\tt I v");
result.add("me-\tdi-\ttate", "m e\td I\tt eI t");
result.add("me-\tdi-\tter-\tra-\tne-\tan", "m e\td I\tt @r\teI\tn i:\tV n");
result.add("me-\tdi-\tum", "m i:\td i:\tV m");
result.add("me-\tdi-\tums", "m i:\td i:\tV m z");
result.add("me-\tdic", "m e\td I k");
result.add("me-\tdical-\tly", "m e\td I k\tl i:");
result.add("me-\tdics", "m e\td I k s");
result.add("me-\tdic's", "m e\td I k s");
result.add("me-\tdie-\tval", "m V\td i:\tv V l");
result.add("me-\tdin", "m eI\td i: n");
result.add("me-\tdo-\tra", "m eI\td O@\tV");
result.add("me-\tdu-\tsa", "m V\td u:\ts V");
result.add("me-\tdu-\tsas", "m V\td u:\ts V z");
result.add("me-\tdul-\tla", "m V\td V\tl V");
result.add("me-\ter", "m i:\t@r");
result.add("me-\ters", "m i:\t@r z");
result.add("me-\tga", "m e\tg V");
result.add("me-\tga-\tbit", "m e\tg V\tb I t");
result.add("me-\tga-\tbuck", "m e\tg V\tb V k");
result.add("me-\tga-\tbucks", "m e\tg V\tb V k s");
result.add("me-\tga-\tbyte", "m e\tg V\tb aI t");
result.add("me-\tga-\tbytes", "m e\tg V\tb aI t s");
result.add("me-\tga-\tdeal", "m e\tg V\td i: l");
result.add("me-\tga-\tdeals", "m e\tg V\td i: l z");
result.add("me-\tga-\tdeath", "m e\tg V\td e T");
result.add("me-\tga-\thertz", "m e\tg V\th @r t s");
result.add("me-\tga-\tlo-\tma-\tni-\ta", "m e\tg V\tl @U\tm eI\tn i:\tV");
result.add("me-\tga-\tlo-\tma-\tni-\tac", "m e\tg V\tl @U\tm eI\tn i:\t{ k");
result.add("me-\tga-\tlo-\tpo-\tlis", "m e\tg V\tl Q\tp V\tl V s");
result.add("me-\tga-\tphone", "m e\tg V\tf @U n");
result.add("me-\tga-\tphones", "m e\tg V\tf @U n z");
result.add("me-\tga-\tplex", "m e\tg V p\tl e k s");
result.add("me-\tga-\tstore", "m e\tg V s\tt O@");
result.add("me-\tga-\tstores", "m e\tg V s\tt O@ z");
result.add("me-\tga-\ttons", "m e\tg V\tt V n z");
result.add("me-\tga-\twatt", "m e\tg V\tw Q t");
result.add("me-\tga-\twatts", "m e\tg V\tw Q t s");
result.add("me-\tgan", "m eI\tg V n");
result.add("me-\tgan's", "m eI\tg V n z");
result.add("me-\tghan", "m e\tg V n");
result.add("me-\the-\tta-\tbel", "m V\th e\tt V\tb V l");
result.add("me-\thi-\tta-\tbel", "m e\th I\tt V\tb V l");
result.add("me-\thul", "m e\th U l");
result.add("me-\tkong", "m eI\tk Q N");
result.add("me-\tla-\tmed", "m e\tl V\tm e d");
result.add("me-\tla-\tmine", "m e\tl V\tm i: n");
result.add("me-\tla-\tne-\tsian", "m e\tl V\tn i:\tZ V n");
result.add("me-\tla-\tne-\tsians", "m e\tl V\tn i:\tZ V n z");
result.add("me-\tla-\tnie", "m e\tl V\tn i:");
result.add("me-\tla-\tnin", "m e\tl V\tn I n");
result.add("me-\tla-\tno-\tma", "m e\tl V\tn @U\tm V");
result.add("me-\tla-\tny", "m e\tl V\tn i:");
result.add("me-\tla-\tto-\tnin", "m e\tl V\tt @U\tn V n");
result.add("me-\tla-\tto-\tnin's", "m e\tl V\tt @U\tn V n z");
result.add("me-\tlan-\tcho-\tlic", "m e\tl V n\tk Q\tl I k");
result.add("me-\tlan-\tcho-\tly", "m e\tl V n\tk Q\tl i:");
result.add("me-\tlan-\ttha", "m V\tl { n\tD V");
result.add("me-\tlange", "m e\tl { N");
result.add("me-\tlee", "m eI\tl eI");
result.add("me-\tlen-\tdez", "m V\tl e n\td e z");
result.add("me-\tles-\tsa", "m e\tl e\ts V");
result.add("me-\tli", "m e\tl i:");
result.add("me-\tli-\ta", "m e\tl i:\tV");
result.add("me-\tli-\tcent", "m e\tl I\ts e n t");
result.add("me-\tli-\tna", "m e\tl i:\tn V");
result.add("me-\tli-\tsent", "m e\tl I\ts e n t");
result.add("me-\tli-\tta", "m e\tl i:\tt V");
result.add("me-\tlin-\tda", "m V\tl I n\td V");
result.add("me-\tline", "m e\tl aI n");
result.add("me-\tlis-\tsa", "m V\tl I\ts V");
result.add("me-\tlis-\tsa's", "m V\tl I\ts V z");
result.add("me-\tlisse", "m e\tl I s");
result.add("me-\tlit-\tta", "m e\tl i:\tt V");
result.add("me-\tllo-\twing", "m e\tl @U\tI N");
result.add("me-\tlo", "m e\tl @U");
result.add("me-\tlo-\tdi-\tous", "m V\tl @U\td i:\tV s");
result.add("me-\tlo-\tdic", "m V\tl Q\td I k");
result.add("me-\tlo-\tdies", "m e\tl V\td i: z");
result.add("me-\tlo-\tdra-\tma", "m e\tl V d\tr Q\tm V");
result.add("me-\tlo-\tdra-\tma-\ttic", "m e\tl V d\tr V\tm {\tt I k");
result.add("me-\tlo-\tdra-\tmas", "m e\tl V d\tr Q\tm V z");
result.add("me-\tlo-\tdy", "m e\tl V\td i:");
result.add("me-\tlo-\tne", "m e\tl @U\tn i:");
result.add("me-\tlon", "m e\tl V n");
result.add("me-\tlons", "m e\tl V n z");
result.add("me-\tmel", "m e\tm V l");
result.add("me-\tmen-\tto", "m V\tm e n\tt @U");
result.add("me-\tmen-\ttos", "m V\tm e n\tt @U z");
result.add("me-\tmo", "m e\tm @U");
result.add("me-\tmo-\tra-\tbi-\tlia", "m e\tm @r\tV\tb i: l\tj V");
result.add("me-\tmo-\tra-\tble", "m e\tm @r\tV\tb V l");
result.add("me-\tmo-\trab-\tly", "m e\tm @r\tV b\tl i:");
result.add("me-\tmo-\tran-\tda", "m e\tm @r\t{ n\td V");
result.add("me-\tmo-\tran-\tdum", "m e\tm @r\t{ n\td V m");
result.add("me-\tmo-\tran-\tdums", "m e\tm @r\t{ n\td V m z");
result.add("me-\tmo-\trex", "m e\tm O@\te k s");
result.add("me-\tmo-\tri-\ta-\tlize", "m V\tm O@\ti:\tV\tl aI z");
result.add("me-\tmo-\tri-\ta-\tlized", "m V\tm O@\ti:\tV\tl aI z d");
result.add("me-\tmo-\tri-\tal", "m V\tm O@\ti:\tV l");
result.add("me-\tmo-\tri-\tals", "m V\tm O@\ti:\tV l z");
result.add("me-\tmo-\tri-\tzing", "m e\tm @r\taI\tz I N");
result.add("me-\tmo-\tries", "m e\tm @r\ti: z");
result.add("me-\tmo-\trize", "m e\tm @r\taI z");
result.add("me-\tmo-\trized", "m e\tm @r\taI z d");
result.add("me-\tmo-\try", "m e\tm @r\ti:");
result.add("me-\tmoir", "m e m\tw Q@");
result.add("me-\tmoirs", "m e m\tw Q@ z");
result.add("me-\tmos", "m e\tm @U z");
result.add("me-\tmo's", "m e\tm @U z");
result.add("me-\tna", "m i:\tn V");
result.add("me-\tna-\tcing", "m e\tn V\ts I N");
result.add("me-\tna-\tcing-\tly", "m e\tn V\ts I N\tl i:");
result.add("me-\tna-\tge-\trie", "m V\tn {\tdZ @r\ti:");
result.add("me-\tnace", "m e\tn V s");
result.add("me-\tnard", "m V\tn Q@ d");
result.add("me-\tnen-\tdez", "m e\tn e n\td e z");
result.add("me-\tni-\tal", "m i:\tn i:\tV l");
result.add("me-\tni-\tfee", "m e\tn I\tf i:");
result.add("me-\tnin-\tgi-\ttis", "m e\tn I n\tdZ aI\tt I s");
result.add("me-\tno", "m eI\tn @U");
result.add("me-\tno-\tpau-\tsal", "m e\tn V\tp aU\tz V l");
result.add("me-\tno-\tpause", "m e\tn V\tp aU s");
result.add("me-\tno-\trah", "m V\tn O@\tV");
result.add("me-\tno-\trahs", "m V\tn O@\tV z");
result.add("me-\tno-\trah's", "m V\tn O@\tV z");
result.add("me-\tnon", "m eI\tn O: n");
result.add("me-\tnu", "m e n\tj u:");
result.add("me-\tnu-\thin", "m V\tn u:\th I n");
result.add("me-\tnus", "m e n\tj u: z");
result.add("me-\to", "m i:\t@U");
result.add("me-\tow", "m i:\taU");
result.add("me-\tquon", "m e k\tw V n");
result.add("me-\tre-\tdith", "m e@\tV\td I T");
result.add("me-\trest", "m e@\tV s t");
result.add("me-\tri-\tda", "m @r\ti:\td V");
result.add("me-\tri-\tden", "m e@\tI\td e n");
result.add("me-\tri-\tdeth", "m e@\tI\td I T");
result.add("me-\tri-\tdi-\tan", "m @r\tI\td i:\tV n");
result.add("me-\tri-\tdi-\tan's", "m @r\tI\td i:\tV n z");
result.add("me-\tri-\tdith", "m e@\tI\td I T");
result.add("me-\tri-\tno", "m @r\ti:\tn @U");
result.add("me-\tri-\ton", "m e@\ti:\tV n");
result.add("me-\tri-\tted", "m e@\tI\tt I d");
result.add("me-\tri-\tto-\tri-\tous", "m e@\tI\tt O@\ti:\tV s");
result.add("me-\tri-\ttoc-\tra-\tcy", "m e@\tI\tt O: k\tr V\ts i:");
result.add("me-\tri-\twe-\tther", "m e@\tI\tw e\tD @r");
result.add("me-\triel", "m I@\ti: l");
result.add("me-\tris", "m e@\tI s");
result.add("me-\trit", "m e@\tI t");
result.add("me-\trit-\tless", "m e@\tI t\tl e s");
result.add("me-\trits", "m e@\tI t s");
result.add("me-\trow", "m e@\t@U");
result.add("me-\tryl", "m e@\tV l");
result.add("me-\tsa", "m eI\ts V");
result.add("me-\tsa's", "m eI\ts V z");
result.add("me-\tsen-\tte-\tric", "m e\ts V n\tt e@\tI k");
result.add("me-\tser-\tvey", "m e\tz @r\tv eI");
result.add("me-\tshes", "m e\tS V z");
result.add("me-\tshing", "m e\tS I N");
result.add("me-\tsick", "m e\ts I k");
result.add("me-\tso-\tder-\tmal", "m e\tz V\td @r\tm V l");
result.add("me-\tso-\tli-\tthic", "m e\tz V\tl I\tT I k");
result.add("me-\tso-\tpo-\tta-\tmi-\ta", "m e\ts V\tp V\tt eI\tm i:\tV");
result.add("me-\tso-\tpo-\tta-\tmi-\tan", "m e\ts V\tp V\tt eI\tm i:\tV n");
result.add("me-\tso-\tpo-\tta-\tmi-\tans", "m e\ts V\tp V\tt eI\tm i:\tV n z");
result.add("me-\tso-\tthe-\tli-\to-\tma", "m e\ts V\tT i:\tl i:\t@U\tm V");
result.add("me-\tso-\ttho-\trax", "m e\tz V\tT O@\t{ k s");
result.add("me-\tso-\tzo-\tic", "m e\ts V\tz @U\tI k");
result.add("me-\tson", "m eI\tz Q n");
result.add("me-\tsons", "m i:\tz Q n z");
result.add("me-\tta", "m i:\tt V");
result.add("me-\tta-\tbo-\tli-\tsm", "m V\tt {\tb V\tl I\tz V m");
result.add("me-\tta-\tbo-\tli-\tsms", "m V\tt {\tb V\tl I\tz V m z");
result.add("me-\tta-\tbo-\tlic", "m e\tt V\tb Q\tl I k");
result.add("me-\tta-\tbo-\tlize", "m V\tt {\tb V\tl aI z");
result.add("me-\tta-\tcar-\tpal", "m e\tt V\tk Q@\tp V l");
result.add("me-\tta-\tcar-\tpals", "m e\tt V\tk Q@\tp V l z");
result.add("me-\tta-\tmor-\tphic", "m e\tt V\tm O@\tf I k");
result.add("me-\tta-\tmor-\tpho-\tsis", "m e\tt V\tm O@\tf V\ts V s");
result.add("me-\tta-\tmor-\tphose", "m e\tt V\tm O@\tf @U z");
result.add("me-\tta-\tmu-\tcil", "m e\tt V m\tj u:\ts V l");
result.add("me-\tta-\tmu-\tcil's", "m e\tt V m\tj u:\ts V l z");
result.add("me-\tta-\tpho-\tri-\tcal", "m e\tt V\tf O@\tI\tk V l");
result.add("me-\tta-\tpho-\trical-\tly", "m e\tt V\tf O@\tI k\tl i:");
result.add("me-\tta-\tphor", "m e\tt V\tf O@");
result.add("me-\tta-\tphors", "m e\tt V\tf O@ z");
result.add("me-\tta-\tphy-\tsi-\tcal", "m e\tt V\tf I\tz I\tk V l");
result.add("me-\tta-\tphy-\tsics", "m e\tt V\tf I\tz I k s");
result.add("me-\tta-\ttho-\trax", "m e\tt V\tT O@\t{ k s");
result.add("me-\tta-\txas", "m V\tt { k\ts V s");
result.add("me-\ttai-\trie", "m V\tt e@\ti:");
result.add("me-\ttal", "m e\tt V l");
result.add("me-\ttal-\tli-\tca", "m V\tt {\tl I\tk V");
result.add("me-\ttal-\tlic", "m V\tt {\tl I k");
result.add("me-\ttal-\tlur-\tgi-\tcal", "m e\tt V\tl @r\tdZ I\tk V l");
result.add("me-\ttal-\tlur-\tgy", "m e\tt V\tl @r\tdZ i:");
result.add("me-\ttal-\twor-\tker", "m e\tt V l\tw @r\tk @r");
result.add("me-\ttal-\twor-\tkers", "m e\tt V l\tw @r\tk @r z");
result.add("me-\ttal-\twor-\tking", "m e\tt V l\tw @r\tk I N");
result.add("me-\ttal-\twork", "m e\tt V l\tw @r k");
result.add("me-\ttall", "m e\tt O: l");
result.add("me-\ttals", "m e\tt V l z");
result.add("me-\ttal's", "m e\tt V l z");
result.add("me-\ttas-\tta-\tsize", "m V\tt { s\tt V\ts aI z");
result.add("me-\ttas-\tta-\tsized", "m V\tt { s\tt V\ts aI z d");
result.add("me-\tte-\to-\tric", "m i:\tt i:\tO@\tI k");
result.add("me-\tte-\to-\trite", "m i:\tt i:\tO@\taI t");
result.add("me-\tte-\to-\tro-\tlo-\tgi-\tcal", "m i:\tt i:\tO@\tV\tl Q\tdZ V\tk V l");
result.add("me-\tte-\to-\tro-\tlo-\tgist", "m i:\tt i:\t@r\tQ\tl V\tdZ V s t");
result.add("me-\tte-\to-\tro-\tlo-\tgists", "m i:\tt i:\t@r\tQ\tl V\tdZ V s t s");
result.add("me-\tte-\to-\tro-\tlo-\tgy", "m i:\tt i:\t@r\tQ\tl V\tdZ i:");
result.add("me-\tte-\tor", "m i:\tt i:\t@r");
result.add("me-\tte-\tors", "m i:\tt i:\t@r z");
result.add("me-\tte-\tring", "m i:\tt @r\tI N");
result.add("me-\tted", "m i:\tt V d");
result.add("me-\tter", "m i:\tt @r");
result.add("me-\ttered", "m i:\tt @r d");
result.add("me-\tters", "m i:\tt @r z");
result.add("me-\ttha-\tdone", "m e\tT V\td @U n");
result.add("me-\ttha-\tnol", "m e\tT V\tn Q l");
result.add("me-\ttham-\tphe-\tta-\tmine", "m e\tT { m\tf e\tt V\tm i: n");
result.add("me-\tthane", "m e\tT eI n");
result.add("me-\ttho-\tdi-\tcal", "m V\tT Q\td V\tk V l");
result.add("me-\ttho-\tdi-\tcal-\tly", "m V\tT Q\td I\tk V\tl i:");
result.add("me-\ttho-\tdi-\tsm", "m e\tT V\td I\tz V m");
result.add("me-\ttho-\tdi-\tsms", "m e\tT V\td I\tz V m z");
result.add("me-\ttho-\tdist", "m e\tT V\td V s t");
result.add("me-\ttho-\tdo-\tlo-\tgi-\tcal", "m e\tT V\td V\tl Q\tdZ I\tk V l");
result.add("me-\ttho-\tdo-\tlo-\tgies", "m e\tT @U\td Q\tl V\tdZ i: z");
result.add("me-\ttho-\tdo-\tlo-\tgy", "m e\tT V\td Q\tl V\tdZ i:");
result.add("me-\ttho-\ttre-\txate", "m e\tT @U t\tr e k\ts eI t");
result.add("me-\tthod", "m e\tT V d");
result.add("me-\tthods", "m e\tT V d z");
result.add("me-\tthu-\tse-\tlah", "m V T\tj u:\tz V\tl V");
result.add("me-\tthy-\tlene", "m e\tT V\tl i: n");
result.add("me-\tthyl", "m e\tT V l");
result.add("me-\tva-\tcor", "m e\tv V\tk O@");
result.add("me-\txi-\tca-\tli", "m e k\ts I\tk Q\tl i:");
result.add("me-\txi-\tca-\tna", "m e k\ts I\tk {\tn V");
result.add("me-\txi-\tca-\tno", "m e k\ts I\tk Q\tn @U");
result.add("me-\txi-\tcan", "m e k\ts I\tk V n");
result.add("me-\txi-\tcans", "m e k\ts I\tk V n z");
result.add("me-\txi-\tco", "m e k\ts I\tk @U");
result.add("me-\txi-\tco's", "m e k\ts I\tk @U z");
result.add("me-\tyers", "m aI\t@r z");
result.add("me-\tzo", "m e\tz @U");
result.add("mea", "m i:");
result.add("mea-\tder", "m i:\td @r");
result.add("mea-\tdor", "m i:\td @r");
result.add("mea-\tdow", "m e\td @U");
result.add("mea-\tdow-\tland", "m e\td @U\tl { n d");
result.add("mea-\tdow-\tlands", "m e\td @U\tl { n d z");
result.add("mea-\tdow-\tlark", "m e\td @U\tl Q@ k");
result.add("mea-\tdows", "m e\td @U z");
result.add("mea-\tger", "m i:\tg @r");
result.add("mea-\tler", "m i:\tl @r");
result.add("mea-\tling", "m i:\tl I N");
result.add("mea-\tly", "m i:\tl i:");
result.add("mea-\tner", "m i:\tn @r");
result.add("mea-\tnest", "m i:\tn V s t");
result.add("mea-\tning", "m i:\tn I N");
result.add("mea-\tning-\tful", "m i:\tn I N\tf V l");
result.add("mea-\tning-\tful-\tly", "m i:\tn I N\tf V\tl i:");
result.add("mea-\tning-\tless", "m i:\tn I N\tl V s");
result.add("mea-\tnings", "m i:\tn I N z");
result.add("mea-\tny", "m i:\tn i:");
result.add("mea-\tra", "m i:\tr V");
result.add("mea-\tsles", "m i:\tz V l z");
result.add("mea-\tsu-\tra-\tble", "m e\tZ @r\tV\tb V l");
result.add("mea-\tsu-\trab-\tly", "m e\tZ @r\tV b\tl i:");
result.add("mea-\tsu-\tring", "m e\tZ @r\tI N");
result.add("mea-\tsure", "m e\tZ @r");
result.add("mea-\tsure-\tment", "m e\tZ @r\tm V n t");
result.add("mea-\tsure-\tments", "m e\tZ @r\tm V n t s");
result.add("mea-\tsured", "m e\tZ @r d");
result.add("mea-\tsures", "m e\tZ @r z");
result.add("mea-\tsure's", "m e\tZ @r z");
result.add("mea-\tti-\ter", "m i:\tt i:\t@r");
result.add("mea-\tty", "m i:\tt i:");
result.add("mead", "m i: d");
result.add("meade", "m i: d");
result.add("meads", "m i: d z");
result.add("mead's", "m i: d z");
result.add("meagher", "m Q@");
result.add("meal", "m i: l");
result.add("meal-\ttime", "m i: l\tt aI m");
result.add("meals", "m i: l z");
result.add("meal's", "m i: l z");
result.add("mean", "m i: n");
result.add("mean-\tness", "m i: n\tn V s");
result.add("mean-\ttime", "m i: n\tt aI m");
result.add("mean-\twhile", "m i: n\tw aI l");
result.add("means", "m i: n z");
result.add("meant", "m e n t");
result.add("mear", "m I@");
result.add("meares", "m i: r z");
result.add("mears", "m I@ z");
result.add("meas-\tly", "m i: z\tl i:");
result.add("mease", "m i: z");
result.add("meat", "m i: t");
result.add("meat-\tball", "m i: t\tb O: l");
result.add("meat-\tballs", "m i: t\tb O: l z");
result.add("meat-\tea-\tting", "m i:\tt i:\tt I N");
result.add("meat-\tless", "m i: t\tl V s");
result.add("meat-\tloaf", "m i: t\tl @U f");
result.add("meat-\tpac-\tker", "m i: t\tp {\tk @r");
result.add("meat-\tpac-\tkers", "m i: t\tp {\tk @r z");
result.add("meat-\tpac-\tking", "m i: t\tp {\tk I N");
result.add("meath", "m i: T");
result.add("meats", "m i: t s");
result.add("meave", "m i: v");
result.add("mec-\tca", "m e\tk V");
result.add("mec-\tca's", "m e\tk V z");
result.add("mech", "m e k");
result.add("mech-\tling", "m e k\tl I N");
result.add("meck", "m e k");
result.add("meck-\tlen-\tburg", "m e k\tl V n\tb @r g");
result.add("med", "m e d");
result.add("med-\td-\tling", "m e\td V\tl I N");
result.add("med-\tdle", "m e\td V l");
result.add("med-\tdle-\tsome", "m e\td V l\ts V m");
result.add("med-\tfly", "m e d\tf l i:");
result.add("med-\tford", "m e d\tf @r d");
result.add("med-\tlar", "m e d\tl @r");
result.add("med-\tley", "m e d\tl i:");
result.add("med-\tlin", "m e d\tl I n");
result.add("med-\twin", "m e d\tw I n");
result.add("medes", "m i: d z");
result.add("mee", "m i:");
result.add("mee-\than", "m i:\tV n");
result.add("mee-\tker", "m i:\tk @r");
result.add("mee-\tting", "m i:\tt I N");
result.add("mee-\ttings", "m i:\tt I N z");
result.add("mee-\tting's", "m i:\tt I N z");
result.add("meece", "m i: s");
result.add("meech", "m i: tS");
result.add("meek", "m i: k");
result.add("meek-\tly", "m i: k\tl i:");
result.add("meeks", "m i: k s");
result.add("meese", "m i: s");
result.add("meet", "m i: t");
result.add("meets", "m i: t s");
result.add("meg", "m e g");
result.add("meggs", "m e g z");
result.add("meh-\tta", "m e\tt V");
result.add("meh-\tta's", "m e\tt V z");
result.add("mei", "m aI");
result.add("mei-\ter", "m aI\t@r");
result.add("mei-\ter's", "m aI\t@r z");
result.add("mel", "m e l");
result.add("mel-\tba", "m e l\tb V");
result.add("mel-\tbourne", "m e l\tb @r n");
result.add("mel-\tburn", "m e l\tb @r n");
result.add("mel-\tcher", "m e l\ttS @r");
result.add("mel-\tchi-\tor", "m eI l\ttS i:\t@r");
result.add("mel-\tded", "m e l\td V d");
result.add("mel-\tder", "m e l\td @r");
result.add("mel-\tding", "m e l\td I N");
result.add("mel-\tdon", "m e l\td V n");
result.add("mel-\tgar", "m eI l\tg Q@");
result.add("mel-\tla", "m e\tl V");
result.add("mel-\tla-\tril", "m e\tl @r\tI l");
result.add("mel-\tlen", "m e\tl V n");
result.add("mel-\tler", "m e\tl @r");
result.add("mel-\tli", "m e\tl i:");
result.add("mel-\tli-\tcent", "m eI\tl i:\ts V n t");
result.add("mel-\tlie", "m e\tl i:");
result.add("mel-\tling", "m e\tl I N");
result.add("mel-\tlo", "m e\tl @U");
result.add("mel-\tlon", "m e\tl V n");
result.add("mel-\tlon's", "m e\tl V n z");
result.add("mel-\tlott", "m e\tl V t");
result.add("mel-\tlow", "m e\tl @U");
result.add("mel-\tlowed", "m e\tl @U d");
result.add("mel-\tly", "m e\tl i:");
result.add("mel-\tnick", "m e l\tn I k");
result.add("mel-\tquist", "m e l\tk w I s t");
result.add("mel-\trose", "m e l\tr @U z");
result.add("mel-\tted", "m e l\tt V d");
result.add("mel-\tting", "m e l\tt I N");
result.add("mel-\tton", "m e l\tt V n");
result.add("mel-\tva", "m e l\tv V");
result.add("mel-\tvi-\tna", "m e l\tv i:\tn V");
result.add("mel-\tvie", "m e l\tv i:");
result.add("mel-\tville", "m e l\tv I l");
result.add("mel-\tvin", "m e l\tv I n");
result.add("mel-\tvyn", "m e l\tv I n");
result.add("meld", "m e l d");
result.add("mele", "m i: l");
result.add("mell", "m e l");
result.add("mell-\tman", "m e l\tm V n");
result.add("mel's", "m e l z");
result.add("melt", "m e l t");
result.add("melt-\tdown", "m e l\tt d aU n");
result.add("melt-\twa-\tter", "m e l\tt w Q\tt @r");
result.add("melts", "m e l t s");
result.add("mem-\tber", "m e m\tb @r");
result.add("mem-\tber-\tship", "m e m\tb @r\tS I p");
result.add("mem-\tber-\tships", "m e m\tb @r\tS I p s");
result.add("mem-\tbered", "m e m\tb @r d");
result.add("mem-\tbers", "m e m\tb @r z");
result.add("mem-\tber's", "m e m\tb @r z");
result.add("mem-\tbra-\tnous", "m e m\tb r V\tn V s");
result.add("mem-\tbrane", "m e m\tb r eI n");
result.add("mem-\tbranes", "m e m\tb r eI n z");
result.add("mem-\tnon", "m e m\tn Q n");
result.add("mem-\tphis", "m e m\tf I s");
result.add("men", "m e n");
result.add("men-\tcher", "m e n\ttS @r");
result.add("men-\tcken", "m e N\tk V n");
result.add("men-\tda-\tci-\tty", "m e n\td {\ts I\tt i:");
result.add("men-\tded", "m e n\td V d");
result.add("men-\tdel", "m e n\td V l");
result.add("men-\tdel-\tsohn", "m e n\td V l\ts V n");
result.add("men-\tdel-\tson", "m e n\td V l\ts V n");
result.add("men-\tdel's", "m e n\td V l z");
result.add("men-\tdels-\tsohn", "m e n\td V l\ts V n");
result.add("men-\tden-\thall", "m e n\td V n\th O: l");
result.add("men-\tdes", "m eI n\td e s");
result.add("men-\tdez", "m e n\td e z");
result.add("men-\tding", "m e n\td I N");
result.add("men-\tdo-\tci-\tno", "m e n\td V\ts i:\tn @U");
result.add("men-\tdo-\tta", "m e n\td @U\tt V");
result.add("men-\tdo-\tza", "m e n\td @U\tz V");
result.add("men-\tges", "m e n\tdZ V z");
result.add("men-\tgis-\ttu", "m e N\tg i: s\tt u:");
result.add("men-\tha-\tden", "m e n\th eI\td V n");
result.add("men-\tken", "m e N\tk V n");
result.add("men-\tlo", "m e n\tl @U");
result.add("men-\tnen", "m e\tn V n");
result.add("men-\tnin-\tger", "m e\tn I\tN @r");
result.add("men-\tno-\tnite", "m e\tn V\tn aI t");
result.add("men-\tno-\tnites", "m e\tn V\tn aI t s");
result.add("men-\tsing", "m e n\ts I N");
result.add("men-\tta-\tli-\tty", "m e n\tt {\tl I\tt i:");
result.add("men-\ttal", "m e n\tt V l");
result.add("men-\ttal-\tly", "m e n\tt V\tl i:");
result.add("men-\ttho-\tla-\ttum", "m e n\tT V\tl eI\tt V m");
result.add("men-\tthol", "m e n\tT O: l");
result.add("men-\ttio-\tning", "m e n\tS V\tn I N");
result.add("men-\ttion", "m e n\tS V n");
result.add("men-\ttioned", "m e n\tS V n d");
result.add("men-\ttions", "m e n\tS V n z");
result.add("men-\tto", "m e n\tt @U");
result.add("men-\tto-\tring", "m e n\tt @r\tI N");
result.add("men-\tton", "m e n\tt V n");
result.add("men-\ttor", "m e n\tt O@");
result.add("men-\ttored", "m e n\tt @r d");
result.add("men-\ttors", "m e n\tt @r z");
result.add("men-\ttor's", "m e n\tt O@ z");
result.add("men-\tzie", "m e n\tz i:");
result.add("men-\tzies", "m e n\tz i: z");
result.add("mend", "m e n d");
result.add("mende", "m e n d");
result.add("meng", "m e N");
result.add("menge", "m e n dZ");
result.add("mens", "m e n z");
result.add("men's", "m e n z");
result.add("mens-\ttru-\ta-\ttion", "m e n\ts t r u:\teI\tS V n");
result.add("mens-\ttru-\tal", "m e n\ts t r u:\tV l");
result.add("mens-\twear", "m e n\tz w eI r");
result.add("mensch", "m e n S");
result.add("mer", "m e@");
result.add("mer-\tca-\tdo", "m @r\tk Q\td @U");
result.add("mer-\tca-\ttor", "m @r\tk eI\tt @r");
result.add("mer-\tcan-\tti-\tli-\tsm", "m @r\tk { n\tt I\tl I\tz V m");
result.add("mer-\tcan-\tti-\tlist", "m @r\tk { n\tt I\tl I s t");
result.add("mer-\tcan-\ttile", "m @r\tk V n\tt aI l");
result.add("mer-\tce-\tdes", "m @r\ts eI\td i: z");
result.add("mer-\tce-\tna-\try", "m @r\ts V\tn e@\ti:");
result.add("mer-\tcer", "m @r\ts @r");
result.add("mer-\tchan-\tdi-\tser", "m @r\ttS V n\td aI\tz @r");
result.add("mer-\tchan-\tdi-\tsers", "m @r\ttS V n\td aI\tz @r z");
result.add("mer-\tchan-\tdi-\tsing", "m @r\ttS V n\td aI\tz I N");
result.add("mer-\tchan-\tdise", "m @r\ttS V n\td aI z");
result.add("mer-\tchant", "m @r\ttS V n t");
result.add("mer-\tchant-\tmen", "m @r\ttS V n\tt m e n");
result.add("mer-\tchants", "m @r\ttS V n t s");
result.add("mer-\tchant's", "m @r\ttS V n t s");
result.add("mer-\tci-\ter", "m @r\ts i:\t@r");
result.add("mer-\tci-\tful", "m @r\ts I\tf V l");
result.add("mer-\tci-\tful-\tly", "m @r\ts I\tf V\tl i:");
result.add("mer-\tci-\tless", "m @r\ts I\tl e s");
result.add("mer-\tci-\tless-\tly", "m @r\ts I\tl e s\tl i:");
result.add("mer-\tcies", "m @r\ts i: z");
result.add("mer-\tcu-\tri", "m @r\tk U@\ti:");
result.add("mer-\tcu-\tri-\tal", "m @r k\tj U@\ti:\tV l");
result.add("mer-\tcu-\tric", "m @r k\tj U@\tI k");
result.add("mer-\tcu-\try", "m @r k\tj @r\ti:");
result.add("mer-\tcu-\try's", "m @r k\tj @r\ti: z");
result.add("mer-\tcy", "m @r\ts i:");
result.add("mer-\tger", "m @r\tdZ @r");
result.add("mer-\tgers", "m @r\tdZ @r z");
result.add("mer-\tger's", "m @r\tdZ @r z");
result.add("mer-\tges", "m @r\tdZ V z");
result.add("mer-\tging", "m @r\tdZ I N");
result.add("mer-\tkel", "m @r\tk V l");
result.add("mer-\tkin", "m @r\tk I n");
result.add("mer-\tkle", "m @r\tk V l");
result.add("mer-\tli-\tna", "m @r\tl i:\tn V");
result.add("mer-\tlin", "m @r\tl I n");
result.add("mer-\trell", "m e@\tV l");
result.add("mer-\tri-\tam", "m e@\ti:\tV m");
result.add("mer-\tri-\ter", "m e@\ti:\t@r");
result.add("mer-\tri-\tfield", "m e@\tI\tf i: l d");
result.add("mer-\tri-\tly", "m e@\tI\tl i:");
result.add("mer-\tri-\tmac", "m e@\tI\tm { k");
result.add("mer-\tri-\tmack", "m e@\tI\tm { k");
result.add("mer-\tri-\tman", "m e@\tI\tm V n");
result.add("mer-\tri-\tott", "m e@\ti:\tV t");
result.add("mer-\trick", "m e@\tI k");
result.add("mer-\trie", "m e@\ti:");
result.add("mer-\trill", "m e@\tI l");
result.add("mer-\trill's", "m e@\tI l z");
result.add("mer-\tritt", "m e@\te t");
result.add("mer-\trow", "m e@\t@U");
result.add("mer-\try", "m e@\ti:");
result.add("mer-\try-\tgo-\tround", "m e@\ti:\tg @U\tr aU n d");
result.add("mer-\try-\tman", "m e@\ti:\tm V n");
result.add("mer-\tshon", "m @r\tS V n");
result.add("mer-\tta", "m e@\tt V");
result.add("mer-\ttens", "m @r\tt V n z");
result.add("mer-\tton", "m @r\tt V n");
result.add("mer-\tvin", "m @r\tv I n");
result.add("mer-\tvyn", "m @r\tv I n");
result.add("mer-\tvyn's", "m @r\tv I n z");
result.add("mer-\twin", "m @r\tw I n");
result.add("mer-\twyn", "m @r\tw I n");
result.add("merc", "m @r k");
result.add("merce", "m @r s");
result.add("merck", "m @r k");
result.add("merck's", "m @r k s");
result.add("merc's", "m @r k s");
result.add("mere", "m I@");
result.add("mere-\tly", "m I@\tl i:");
result.add("merge", "m @r dZ");
result.add("merged", "m @r dZ d");
result.add("merk", "m @r k");
result.add("merk-\tley", "m @r k\tl i:");
result.add("merl", "m @r l");
result.add("merle", "m @r l");
result.add("mers", "m @r z");
result.add("merv", "m @r v");
result.add("mes-\tca-\tle-\tro", "m e s\tk V\tl e@\t@U");
result.add("mes-\tca-\tline", "m e s\tk V\tl i: n");
result.add("mes-\tme-\tri-\tsm", "m e s\tm @r\tI\tz V m");
result.add("mes-\tme-\tri-\tzing", "m e z\tm @r\taI\tz I N");
result.add("mes-\tme-\trize", "m e z\tm @r\taI z");
result.add("mes-\tme-\trized", "m e z\tm @r\taI z d");
result.add("mes-\tmer", "m e z\tm @r");
result.add("mes-\tquite", "m e s\tk i: t");
result.add("mes-\tsa-\tges", "m e\ts V\tdZ V z");
result.add("mes-\tsa-\tging", "m e\ts I\tdZ I N");
result.add("mes-\tsage", "m e\ts V dZ");
result.add("mes-\tsen-\tger", "m e\ts V n\tdZ @r");
result.add("mes-\tsen-\tgers", "m e\ts V n\tdZ @r z");
result.add("mes-\tser", "m e\ts @r");
result.add("mes-\tsersch-\tmidt", "m e\ts @r S\tm I t");
result.add("mes-\tsersch-\tmitt", "m e\ts @r S\tm I t");
result.add("mes-\tses", "m e\ts V z");
result.add("mes-\tsi-\ta-\tnic", "m e\ts i:\t{\tn I k");
result.add("mes-\tsi-\taen", "m e\ts i:\teI n");
result.add("mes-\tsi-\taen's", "m e\ts i:\teI n z");
result.add("mes-\tsi-\tah", "m V\ts aI\tV");
result.add("mes-\tsi-\tahs", "m V\ts aI\tV z");
result.add("mes-\tsi-\ter", "m e\ts i:\t@r");
result.add("mes-\tsi-\tna", "m V\ts i:\tn V");
result.add("mes-\tsing", "m e\ts I N");
result.add("mes-\tsrs", "m e\ts @r z");
result.add("mes-\tsrs.", "m e\ts @r z");
result.add("mes-\tsy", "m e\ts i:");
result.add("mes-\tter", "m e s\tt @r");
result.add("mes-\tti-\tzo", "m e s\tt i:\tz @U");
result.add("mesh", "m e S");
result.add("meshed", "m e S t");
result.add("mess", "m e s");
result.add("mess-\tman", "m e s\tm V n");
result.add("messed", "m e s t");
result.add("mest", "m e s t");
result.add("met", "m e t");
result.add("met-\tcalf", "m e t\tk { f");
result.add("met-\tcalfe", "m e t\tk V l f");
result.add("met-\tra", "m e t\tr V");
result.add("met-\tri-\tcal", "m e t\tr I\tk V l");
result.add("met-\tri-\tcal-\tly", "m e t\tr I\tk V\tl i:");
result.add("met-\tric", "m e t\tr I k");
result.add("met-\trics", "m e t\tr I k s");
result.add("met-\tro", "m e t\tr @U");
result.add("met-\tro-\tplex", "m e t\tr @U p\tl e k s");
result.add("met-\tro-\tpo-\tli-\ttan", "m e t\tr V\tp Q\tl V\tt V n");
result.add("met-\tro-\tpo-\tli-\ttans", "m e t\tr V\tp Q\tl V\tt V n z");
result.add("met-\tro-\tpo-\tlis", "m V t\tr Q\tp V\tl V s");
result.add("met-\tro's", "m e t\tr @U z");
result.add("met-\tter", "m e\tt @r");
result.add("met-\tter-\tnich", "m e\tt @r\tn I tS");
result.add("met-\ttle", "m e\tt V l");
result.add("mete", "m i: t");
result.add("meth", "m e T");
result.add("mets", "m e t s");
result.add("metts", "m e t s");
result.add("metz", "m e t s");
result.add("metz-\tgar", "m e t\ts g @r");
result.add("metz-\tger", "m e t\ts g @r");
result.add("metz-\tger's", "m e t\ts g @r z");
result.add("metz-\tler", "m e t\ts l @r");
result.add("metze", "m e t z");
result.add("meu-\tni-\ter", "m OI\tn i:\t@r");
result.add("meu-\trer", "m @r\t@r");
result.add("meu-\tser", "m OI\ts @r");
result.add("meuse", "m j u: z");
result.add("mew", "m j u:");
result.add("mex", "m e k s");
result.add("mey-\ter", "m aI\t@r");
result.add("mey-\ter-\tbeer", "m aI\t@r\tb I@");
result.add("mey-\ter's", "m aI\t@r z");
result.add("mez-\tza-\tnine", "m e\tz V\tn i: n");
result.add("mez-\tzo", "m e\tz @U");
result.add("mi", "m i:");
result.add("mi-\ta", "m i:\tV");
result.add("mi-\ta-\tmi", "m aI\t{\tm i:");
result.add("mi-\ta-\tmi's", "m aI\t{\tm i: z");
result.add("mi-\tas-\tma", "m i:\t{ z\tm V");
result.add("mi-\tca", "m aI\tk V");
result.add("mi-\tca-\tno-\tpy", "m I\tk {\tn V\tp i:");
result.add("mi-\tcae-\tla", "m i:\tk eI\tl V");
result.add("mi-\tcah", "m aI\tk V");
result.add("mi-\tchae-\tla", "m aI\tk e\tl V");
result.add("mi-\tchae-\tli-\tna", "m aI\tk V\tl i:\tn V");
result.add("mi-\tchae-\tline", "m aI\tk V\tl aI n");
result.add("mi-\tchael", "m aI\tk V l");
result.add("mi-\tchael-\tla", "m aI\tk e\tl V");
result.add("mi-\tchael-\tson", "m aI\tk V l\ts V n");
result.add("mi-\tchaels", "m aI\tk V l z");
result.add("mi-\tchael's", "m aI\tk V l z");
result.add("mi-\tchal", "m I\ttS V l");
result.add("mi-\tchaud", "m I\tS @U");
result.add("mi-\tchaux", "m I\tS @U");
result.add("mi-\tche-\tlan-\tge-\tlo", "m aI\tk V\tl { n\tdZ V\tl @U");
result.add("mi-\tche-\tlan-\tge-\tlo's", "m aI\tk V\tl { n\tdZ V\tl @U z");
result.add("mi-\tche-\tli-\tna", "m I\tk V\tl i:\tn V");
result.add("mi-\tche-\tlin", "m I\tS V\tl I n");
result.add("mi-\tche-\tline", "m I\tS V\tl V n");
result.add("mi-\tche-\tlob", "m I\tk V\tl @U b");
result.add("mi-\tcheal", "m aI\tk V l");
result.add("mi-\tchel", "m I\tS e l");
result.add("mi-\tchel-\tsen", "m aI\tk V l\ts V n");
result.add("mi-\tchel-\tson", "m aI\tk V l\ts V n");
result.add("mi-\tchele", "m I\tS e l");
result.add("mi-\tchell", "m I\ttS V l");
result.add("mi-\tchelle", "m I\tS e l");
result.add("mi-\tchel's", "m I\tS e l z");
result.add("mi-\tchi-\tgan", "m I\tS I\tg V n");
result.add("mi-\tchi-\tgan's", "m I\tS I\tg V n z");
result.add("mi-\tchie", "m I\ttS i:");
result.add("mi-\tchoa-\tcan", "m I\ttS @U\tk V n");
result.add("mi-\tchon", "m I\ttS V n");
result.add("mi-\tdair", "m I\td e@");
result.add("mi-\tdas", "m aI\td V s");
result.add("mi-\tdeast", "m I\td i: s t");
result.add("mi-\tgra-\tted", "m aI g\tr eI\tt V d");
result.add("mi-\tgra-\tting", "m aI g\tr eI\tt I N");
result.add("mi-\tgra-\ttion", "m aI g\tr eI\tS V n");
result.add("mi-\tgra-\ttions", "m aI g\tr eI\tS V n z");
result.add("mi-\tgra-\tto-\try", "m aI g\tr V\tt O@\ti:");
result.add("mi-\tgraine", "m aI g\tr eI n");
result.add("mi-\tgraines", "m aI g\tr eI n z");
result.add("mi-\tgrant", "m aI g\tr V n t");
result.add("mi-\tgrants", "m aI g\tr V n t s");
result.add("mi-\tgrate", "m aI g\tr eI t");
result.add("mi-\tguel", "m I\tg e l");
result.add("mi-\tka", "m i:\tk V");
result.add("mi-\tka-\tdo", "m I\tk Q\td @U");
result.add("mi-\tkae-\tla", "m i:\tk eI\tl V");
result.add("mi-\tkael", "m V\tk eI l");
result.add("mi-\tkal", "m i:\tk V l");
result.add("mi-\tkel", "m I\tk V l");
result.add("mi-\tkey", "m aI\tk i:");
result.add("mi-\tkhail", "m I\tk eI l");
result.add("mi-\tko", "m aI\tk @U");
result.add("mi-\tkol", "m I\tk O: l");
result.add("mi-\tla-\tno", "m i:\tl Q\tn @U");
result.add("mi-\tlam", "m I\tl V m");
result.add("mi-\tlan", "m V\tl Q n");
result.add("mi-\tlan's", "m I\tl Q n z");
result.add("mi-\tlaz-\tzo", "m i:\tl Q\tz @U");
result.add("mi-\tleage", "m aI\tl V dZ");
result.add("mi-\tler", "m aI\tl @r");
result.add("mi-\tlew-\tski", "m V\tl e f\ts k i:");
result.add("mi-\tley", "m aI\tl i:");
result.add("mi-\tli-\tcent", "m I\tl I\ts e n t");
result.add("mi-\tli-\tta-\tri-\tly", "m I\tl I\tt e@\tI\tl i:");
result.add("mi-\tli-\tta-\tri-\tsm", "m I\tl I\tt @r\tI\tz V m");
result.add("mi-\tli-\tta-\tries", "m I\tl I\tt e@\ti: z");
result.add("mi-\tli-\tta-\tris-\ttic", "m I\tl I\tt @r\tI s\tt I k");
result.add("mi-\tli-\tta-\trists", "m I\tl I\tt @r\tI s t s");
result.add("mi-\tli-\tta-\trize", "m I\tl I\tt @r\taI z");
result.add("mi-\tli-\tta-\trized", "m I\tl I\tt @r\taI z d");
result.add("mi-\tli-\tta-\try", "m I\tl I\tt e@\ti:");
result.add("mi-\tli-\ttan-\tcy", "m I\tl I\tt V n\ts i:");
result.add("mi-\tli-\ttant", "m I\tl I\tt V n t");
result.add("mi-\tli-\ttant-\tly", "m I\tl I\tt V n\tt l i:");
result.add("mi-\tli-\ttants", "m I\tl I\tt V n t s");
result.add("mi-\tli-\ttate", "m I\tl I\tt eI t");
result.add("mi-\tli-\ttia", "m V\tl I\tS V");
result.add("mi-\tli-\ttia-\tmen", "m V\tl I\tS V\tm e n");
result.add("mi-\tli-\ttias", "m V\tl I\tS V z");
result.add("mi-\tli-\ttia's", "m V\tl I\tS V z");
result.add("mi-\tlieu", "m I l\tj U");
result.add("mi-\tlis-\tsent", "m I\tl I\ts e n t");
result.add("mi-\tlo", "m aI\tl @U");
result.add("mi-\tlo-\tse-\tvi-\tc's", "m I\tl @U\ts V\tv I\ttS V z");
result.add("mi-\tlo-\tse-\tvic", "m I\tl @U\ts V\tv I k");
result.add("mi-\tlone", "m I\tl @U n");
result.add("mi-\tlos", "m i:\tl @U z");
result.add("mi-\tme-\to-\tgraph", "m I\tm i:\tV g\tr { f");
result.add("mi-\tmi", "m i:\tm i:");
result.add("mi-\tmi-\tcry", "m I\tm I k\tr i:");
result.add("mi-\tmic", "m I\tm I k");
result.add("mi-\tmic-\tking", "m I\tm I\tk I N");
result.add("mi-\tmicked", "m I\tm I k t");
result.add("mi-\tmics", "m I\tm I k s");
result.add("mi-\tmi's", "m i:\tm i: z");
result.add("mi-\tmo-\tsa", "m V\tm @U\ts V");
result.add("mi-\tna", "m i:\tn V");
result.add("mi-\tna-\tret", "m I\tn @r\te t");
result.add("mi-\tna-\trets", "m I\tn @r\te t s");
result.add("mi-\tnar", "m aI\tn @r");
result.add("mi-\tnas", "m i:\tn V s");
result.add("mi-\tne-\to-\tla", "m I\tn i:\t@U\tl V");
result.add("mi-\tne-\tra-\tli-\tza-\ttion", "m I\tn @r\tV\tl V\tz eI\tS V n");
result.add("mi-\tne-\tra-\tlize", "m I\tn @r\tV\tl aI z");
result.add("mi-\tne-\tra-\tlo-\tgi-\tcal-\tly", "m I\tn @r\tV\tl Q\tdZ I\tk V\tl i:");
result.add("mi-\tne-\tra-\tlo-\tgist", "m I\tn @r\t{\tl V\tdZ V s t");
result.add("mi-\tne-\tra-\tlo-\tgy", "m I\tn @r\tQ\tl V\tdZ i:");
result.add("mi-\tne-\tral", "m I\tn @r\tV l");
result.add("mi-\tne-\trals", "m I\tn @r\tV l z");
result.add("mi-\tne-\tral's", "m I\tn @r\tV l z");
result.add("mi-\tneow-\tner", "m aI\tn @U\tn @r");
result.add("mi-\tner", "m aI\tn @r");
result.add("mi-\tner-\tva", "m I\tn @r\tv V");
result.add("mi-\tners", "m aI\tn @r z");
result.add("mi-\tner's", "m aI\tn @r z");
result.add("mi-\tnette", "m I\tn e t");
result.add("mi-\tni", "m I\tn i:");
result.add("mi-\tni-\ta-\ttu-\tri-\tza-\ttion", "m I\tn i:\tV\ttS @r\tV\tz eI\tS V n");
result.add("mi-\tni-\ta-\tture", "m I\tn i:\tV\ttS U@");
result.add("mi-\tni-\ta-\ttures", "m I\tn i:\tV\ttS @r z");
result.add("mi-\tni-\tbu-\tses", "m I\tn i:\tb V\ts V z");
result.add("mi-\tni-\tbus", "m I\tn i:\tb V s");
result.add("mi-\tni-\tcar", "m I\tn i:\tk Q@");
result.add("mi-\tni-\tcars", "m I\tn i:\tk Q@ z");
result.add("mi-\tni-\tcom-\tpu-\tter", "m I\tn i:\tk V m\tp j u:\tt @r");
result.add("mi-\tni-\tcom-\tpu-\tters", "m I\tn i:\tk V m\tp j u:\tt @r z");
result.add("mi-\tni-\ter", "m I\tn i:\t@r");
result.add("mi-\tni-\tlab", "m I\tn i:\tl { b");
result.add("mi-\tni-\tlabs", "m I\tn i:\tl { b z");
result.add("mi-\tni-\tma-\tli-\tsm", "m I\tn I\tm V\tl I\tz V m");
result.add("mi-\tni-\tma-\tlist", "m I\tn I\tm V\tl I s t");
result.add("mi-\tni-\tmal", "m I\tn I\tm V l");
result.add("mi-\tni-\tmal-\tly", "m I\tn I\tm V\tl i:");
result.add("mi-\tni-\tmi-\tzes", "m I\tn I\tm aI\tz V z");
result.add("mi-\tni-\tmi-\tzing", "m I\tn I\tm aI\tz I N");
result.add("mi-\tni-\tmill", "m I\tn i:\tm Q l");
result.add("mi-\tni-\tmills", "m I\tn i:\tm I l z");
result.add("mi-\tni-\tmize", "m I\tn I\tm aI z");
result.add("mi-\tni-\tmized", "m I\tn I\tm aI z d");
result.add("mi-\tni-\tmum", "m I\tn I\tm V m");
result.add("mi-\tni-\tmums", "m I\tn I\tm V m z");
result.add("mi-\tni-\tscule", "m I\tn I s\tk j u: l");
result.add("mi-\tni-\tse-\tries", "m I\tn i:\ts i:\tr i: z");
result.add("mi-\tni-\tskirt", "m I\tn i: s\tk @r t");
result.add("mi-\tni-\tskirts", "m I\tn i: s\tk @r t s");
result.add("mi-\tni-\tste-\tri-\tal", "m I\tn I s\tt i:\tr i:\tV l");
result.add("mi-\tni-\tster", "m I\tn I s\tt @r");
result.add("mi-\tni-\tster-\tship", "m I\tn I s\tt @r\tS I p");
result.add("mi-\tni-\tstering", "m I\tn I s\tt r I N");
result.add("mi-\tni-\tsters", "m I\tn I s\tt @r z");
result.add("mi-\tni-\tster's", "m I\tn I s\tt @r z");
result.add("mi-\tni-\ttel", "m I\tn I\tt e l");
result.add("mi-\tni-\tum", "m I\tn i:\tV m");
result.add("mi-\tni-\tvan", "m I\tn i:\tv { n");
result.add("mi-\tni-\tvans", "m I\tn i:\tv { n z");
result.add("mi-\tnia-\ttu-\trize", "m I\tn I\ttS @r\taI z");
result.add("mi-\tnia-\ttu-\trized", "m I\tn I\ttS @r\taI z d");
result.add("mi-\tniard", "m I n\tj @r d");
result.add("mi-\tning", "m aI\tn I N");
result.add("mi-\tning's", "m aI\tn I N z");
result.add("mi-\tnion", "m I n\tj V n");
result.add("mi-\tnions", "m I n\tj V n z");
result.add("mi-\tnis", "m I\tn i: z");
result.add("mi-\tnish", "m I\tn I S");
result.add("mi-\tnist-\tra-\ttion", "m I\tn I s\tt r eI\tS V n");
result.add("mi-\tnist-\tra-\ttions", "m I\tn I s\tt r eI\tS V n z");
result.add("mi-\tnist-\tries", "m I\tn I s\tt r i: z");
result.add("mi-\tnist-\try", "m I\tn I s\tt r i:");
result.add("mi-\tnist-\try's", "m I\tn I s\tt r i: z");
result.add("mi-\tno", "m i:\tn @U");
result.add("mi-\tno-\tan", "m V\tn @U\tV n");
result.add("mi-\tno-\tri-\tties", "m aI\tn O@\tI\tt i: z");
result.add("mi-\tno-\tri-\tty", "m aI\tn O@\tI\tt i:");
result.add("mi-\tno-\tring", "m aI\tn @r\tI N");
result.add("mi-\tno-\trite", "m I\tn @r\taI t");
result.add("mi-\tno-\tru", "m I\tn O@\tu:");
result.add("mi-\tno-\txi-\tdil", "m V\tn Q k\ts V\td V l");
result.add("mi-\tnol-\tta", "m I\tn Q l\tt V");
result.add("mi-\tnor", "m aI\tn @r");
result.add("mi-\tnor-\tca", "m V\tn O@\tk V");
result.add("mi-\tnored", "m aI\tn @r d");
result.add("mi-\tnors", "m aI\tn @r z");
result.add("mi-\tnot", "m I\tn V t");
result.add("mi-\tnow", "m I\tn @U");
result.add("mi-\tnu-\tet", "m I n\tj V\tw e t");
result.add("mi-\tnu-\tses", "m aI\tn V\ts V z");
result.add("mi-\tnu-\tti-\ta", "m V\tn u:\tS i:\tV");
result.add("mi-\tnu-\tti-\tae", "m V\tn u:\tS i:\tV");
result.add("mi-\tnus", "m aI\tn V s");
result.add("mi-\tnus-\tcule", "m I\tn V s\tk j u: l");
result.add("mi-\tnute", "m I\tn V t");
result.add("mi-\tnute-\tly", "m I\tn V t\tl i:");
result.add("mi-\tnute-\tman", "m I\tn V t\tm { n");
result.add("mi-\tnute-\tmen", "m I\tn V t\tm e n");
result.add("mi-\tnutes", "m I\tn V t s");
result.add("mi-\tnute's", "m I\tn V t s");
result.add("mi-\to-\tcene", "m aI\tV\ts i: n");
result.add("mi-\tra", "m I@\tV");
result.add("mi-\tra-\tbel", "m I@\tQ\tb e l");
result.add("mi-\tra-\tbel-\tla", "m I@\tQ\tb e\tl V");
result.add("mi-\tra-\tbelle", "m O@\tV\tb V l");
result.add("mi-\tra-\tbile", "m I@\tQ\tb V l");
result.add("mi-\tra-\tcle", "m I@\tV\tk V l");
result.add("mi-\tra-\tcles", "m I@\tV\tk V l z");
result.add("mi-\tra-\tcu-\tlous", "m @r\t{ k\tj V\tl V s");
result.add("mi-\tra-\tcu-\tlous-\tly", "m @r\t{ k\tj V\tl V s\tl i:");
result.add("mi-\tra-\tges", "m @r\tQ\tZ V z");
result.add("mi-\tra-\tmar", "m I@\tV\tm Q@");
result.add("mi-\trage", "m @r\tQ Z");
result.add("mi-\trak", "m I@\t{ k");
result.add("mi-\tran-\tda", "m @r\t{ n\td V");
result.add("mi-\tran-\tda's", "m @r\t{ n\td V z");
result.add("mi-\trel-\tla", "m I@\te\tl V");
result.add("mi-\trelle", "m @r\te l");
result.add("mi-\tsad-\tven-\tture", "m I\ts V d\tv e n\ttS @r");
result.add("mi-\tsad-\tven-\ttures", "m I\ts V d\tv e n\ttS @r z");
result.add("mi-\tsal-\tlo-\tca-\tted", "m I\ts {\tl V\tk eI\tt V d");
result.add("mi-\tsal-\tlo-\tca-\ttion", "m I\ts {\tl V\tk eI\tS V n");
result.add("mi-\tsal-\tlo-\tcate", "m I\ts {\tl V\tk eI t");
result.add("mi-\tsanth-\trope", "m I\ts V n\tT r @U p");
result.add("mi-\tsap-\tpli-\tca-\ttion", "m I\ts { p\tl I\tk eI\tS V n");
result.add("mi-\tsap-\tplied", "m I\ts V p\tl aI d");
result.add("mi-\tsap-\tply", "m I\ts V p\tl aI");
result.add("mi-\tsap-\tply-\ting", "m I\ts V p\tl aI\tI N");
result.add("mi-\tsap-\tpre-\then-\tsion", "m I\ts { p\tr i:\th e n\tS V n");
result.add("mi-\tsap-\tpro-\tpri-\ta-\tted", "m I\ts V p\tr @U p\tr i:\teI\tt V d");
result.add("mi-\tsap-\tpro-\tpri-\ta-\tting", "m I\ts V p\tr @U p\tr i:\teI\tt I N");
result.add("mi-\tsap-\tpro-\tpri-\ta-\ttion", "m I\ts V p\tr @U p\tr i:\teI\tS V n");
result.add("mi-\tsap-\tpro-\tpri-\tate", "m I\ts V p\tr @U p\tr i:\teI t");
result.add("mi-\tsci-\tbi-\tli-\tty", "m I\ts I\tb I\tl I\tt i:");
result.add("mi-\tsci-\tble", "m I\ts I\tb V l");
result.add("mi-\tse-\tra-\tble", "m I\tz @r\tV\tb V l");
result.add("mi-\tse-\tra-\tbles", "m I\tz @r\tV\tb V l z");
result.add("mi-\tse-\tra-\ttion", "m I\tz @r\teI\tS V n");
result.add("mi-\tse-\trab-\tly", "m I\tz @r\tV b\tl i:");
result.add("mi-\tse-\tries", "m I\tz @r\ti: z");
result.add("mi-\tse-\try", "m I\tz @r\ti:");
result.add("mi-\tsen-\thei-\tmer", "m I\ts V n\th aI\tm @r");
result.add("mi-\tser", "m aI\tz @r");
result.add("mi-\tser-\tly", "m aI\tz @r\tl i:");
result.add("mi-\tses", "m aI\tz V z");
result.add("mi-\tsha", "m I\tS V");
result.add("mi-\tsha-\twa-\tka", "m I\tS V\tw O:\tk V");
result.add("mi-\tshan-\tdle", "m I s\th { n\td V l");
result.add("mi-\tshan-\tdled", "m I s\th { n\td V l d");
result.add("mi-\tshand-\tling", "m I s\th { n\td l I N");
result.add("mi-\tshap", "m I s\th { p");
result.add("mi-\tshaps", "m I s\th { p s");
result.add("mi-\tshear", "m I s\th i: r");
result.add("mi-\tsheard", "m I s\th @r d");
result.add("mi-\tsi-\tden-\tti-\tfi-\tca-\ttion", "m I\ts aI\td e n\tt I\tf I\tk eI\tS V n");
result.add("mi-\tsi-\tden-\tti-\tfied", "m I\ts aI\td e n\tt I\tf aI d");
result.add("mi-\tsi-\tden-\tti-\tfy", "m I\ts aI\td e n\tt I\tf aI");
result.add("mi-\tso-\tgy-\tnist", "m I\tz V\tdZ V\tn V s t");
result.add("mi-\tso-\tgy-\tny", "m I\tz V\tdZ V\tn i:");
result.add("mi-\tso-\tgyne", "m I\tz V\tdZ V n");
result.add("mi-\tstle-\ttoe", "m I\ts V l\tt @U");
result.add("mi-\tsu-\tses", "m I s\tj u:\tz V z");
result.add("mi-\tsu-\tsing", "m I s\tj u:\tz I N");
result.add("mi-\tsuse", "m I s\tj u: z");
result.add("mi-\tsused", "m I s\tj u: z d");
result.add("mi-\tta", "m i:\tt V");
result.add("mi-\tte-\tring", "m aI\tt @r\tI N");
result.add("mi-\tter", "m aI\tt @r");
result.add("mi-\tti", "m I\tt i:");
result.add("mi-\tti-\tga-\tted", "m I\tt I\tg eI\tt I d");
result.add("mi-\tti-\tga-\tting", "m I\tt I\tg eI\tt I N");
result.add("mi-\tti-\tga-\ttion", "m I\tt I\tg eI\tS V n");
result.add("mi-\tti-\tgate", "m I\tt I\tg eI t");
result.add("mi-\tti-\tgates", "m I\tt I\tg eI t s");
result.add("mi-\ttsu-\tbi-\tshi", "m I t\ts u:\tb i:\tS i:");
result.add("mi-\ttsu-\tbi-\tshi's", "m I t\ts u:\tb i:\tS i: z");
result.add("mi-\txer", "m I k\ts @r");
result.add("mi-\txers", "m I k\ts @r z");
result.add("mi-\txes", "m I k\ts V z");
result.add("mi-\txing", "m I k\ts I N");
result.add("mi-\tzar", "m aI\tz Q@");
result.add("mi-\tzar's", "m aI\tz Q@ z");
result.add("mi-\tzen", "m aI\tz V n");
result.add("mi-\tze's", "m aI\tz V z");
result.add("mib", "m I b");
result.add("mic", "m I k");
result.add("mic-\tkel-\tson", "m I\tk V l\ts V n");
result.add("mic-\tkey", "m I\tk i:");
result.add("mic-\tkey's", "m I\tk i: z");
result.add("mic-\tki", "m I\tk i:");
result.add("mic-\tkie", "m I\tk i:");
result.add("mic-\tkie-\twicz", "m I\tk I\tv I tS");
result.add("mic-\tkle", "m I\tk V l");
result.add("mic-\tkles", "m I\tk V l z");
result.add("mic-\tky", "m I\tk i:");
result.add("mic-\tro", "m aI k\tr @U");
result.add("mic-\tro-\tbi-\tal", "m aI k\tr @U\tb i:\tV l");
result.add("mic-\tro-\tbi-\to-\tlo-\tgist", "m aI k\tr @U\tb i:\tQ\tl V\tdZ V s t");
result.add("mic-\tro-\tbi-\to-\tlo-\tgy", "m aI k\tr @U\tb aI\tQ\tl V\tdZ i:");
result.add("mic-\tro-\tbre-\twe-\tries", "m aI k\tr @U b\tr u:\t@r\ti: z");
result.add("mic-\tro-\tbre-\twe-\try", "m aI k\tr @U b\tr u:\t@r\ti:");
result.add("mic-\tro-\tchip", "m aI k\tr @U\ttS I p");
result.add("mic-\tro-\tchips", "m aI k\tr @U\ttS I p s");
result.add("mic-\tro-\tcir-\tcuit", "m aI k\tr @U\ts @r\tk I t");
result.add("mic-\tro-\tcir-\tcuits", "m aI k\tr @U\ts @r\tk I t s");
result.add("mic-\tro-\tcli-\tmate", "m aI k\tr @U k\tl aI\tm V t");
result.add("mic-\tro-\tcli-\tmates", "m aI k\tr @U k\tl aI\tm V t s");
result.add("mic-\tro-\tco-\tsm", "m aI k\tr V\tk Q\tz V m");
result.add("mic-\tro-\tcode", "m aI k\tr @U\tk @U d");
result.add("mic-\tro-\tcom-\tpu-\tter", "m aI k\tr @U\tk V m\tp j u:\tt @r");
result.add("mic-\tro-\tcom-\tpu-\tters", "m aI k\tr @U\tk V m\tp j u:\tt @r z");
result.add("mic-\tro-\tdyne", "m aI k\tr @U\td aI n");
result.add("mic-\tro-\te-\tco-\tno-\tmic", "m aI k\tr @U\te\tk V\tn Q\tm I k");
result.add("mic-\tro-\te-\tco-\tno-\tmics", "m aI k\tr @U\te\tk V\tn Q\tm I k s");
result.add("mic-\tro-\te-\tlec-\ttro-\tnic", "m aI k\tr @U\tV\tl e k\tt r Q\tn I k");
result.add("mic-\tro-\te-\tlec-\ttro-\tnics", "m aI k\tr @U\tV\tl e k\tt r Q\tn I k s");
result.add("mic-\tro-\tfiche", "m aI k\tr @U\tf i: tS");
result.add("mic-\tro-\tfilm", "m aI k\tr V\tf I l m");
result.add("mic-\tro-\tfos-\tsil", "m aI k\tr @U\tf Q\ts I l");
result.add("mic-\tro-\tfos-\tsils", "m aI k\tr @U\tf Q\ts I l z");
result.add("mic-\tro-\tgra-\tphic", "m aI k\tr @U g\tr {\tf I k");
result.add("mic-\tro-\tgra-\tphics", "m aI k\tr @U g\tr {\tf I k s");
result.add("mic-\tro-\tgram", "m aI k\tr @U g\tr { m");
result.add("mic-\tro-\tgrams", "m aI k\tr @U g\tr { m z");
result.add("mic-\tro-\tli-\tter", "m aI k\tr @U\tl i:\tt @r");
result.add("mic-\tro-\tli-\tters", "m aI k\tr @U\tl i:\tt @r z");
result.add("mic-\tro-\tma-\tna-\tging", "m aI k\tr @U\tm {\tn I\tdZ I N");
result.add("mic-\tro-\tma-\tnage", "m aI k\tr @U\tm {\tn I dZ");
result.add("mic-\tro-\tma-\tnage-\tment", "m aI k\tr @U\tm {\tn I dZ\tm V n t");
result.add("mic-\tro-\tme-\tter", "m aI k\tr Q\tm V\tt @r");
result.add("mic-\tro-\tne-\tsia", "m aI k\tr @U\tn i:\tZ V");
result.add("mic-\tro-\tor-\tga-\tni-\tsm", "m aI k\tr @U\tO@\tg V\tn I\tz V m");
result.add("mic-\tro-\tor-\tga-\tni-\tsms", "m aI k\tr @U\tO@\tg V\tn I\tz V m z");
result.add("mic-\tro-\tpa-\tle-\ton-\tto-\tlo-\tgy", "m aI k\tr @U\tp eI\tl i:\tV n\tt Q\tl V\tdZ i:");
result.add("mic-\tro-\tphone", "m aI k\tr V\tf @U n");
result.add("mic-\tro-\tphones", "m aI k\tr @U\tf @U n z");
result.add("mic-\tro-\tpo-\tlis", "m aI k\tr O:\tp V\tl I s");
result.add("mic-\tro-\tpro-\tces-\tsor", "m aI k\tr @U p\tr Q\ts e\ts @r");
result.add("mic-\tro-\tpro-\tces-\tsors", "m aI k\tr @U p\tr Q\ts e\ts @r z");
result.add("mic-\tro-\tsco-\tpic", "m aI k\tr V s\tk Q\tp I k");
result.add("mic-\tro-\tsco-\tpical-\tly", "m aI k\tr V s\tk Q\tp I k\tl i:");
result.add("mic-\tro-\tsco-\tpy", "m aI k\tr V s\tk V\tp i:");
result.add("mic-\tro-\tscope", "m aI k\tr V s\tk @U p");
result.add("mic-\tro-\tscopes", "m aI k\tr V s\tk @U p s");
result.add("mic-\tro-\tsoft", "m aI k\tr @U\ts O: f t");
result.add("mic-\tro-\tsoft's", "m aI k\tr @U\ts O: f t s");
result.add("mic-\tro-\tsys-\ttems", "m aI k\tr @U\ts I s\tt V m z");
result.add("mic-\tro-\ttu-\tbules", "m aI k\tr @U\tt u: b\tj u: l z");
result.add("mic-\tro-\tvax", "m aI k\tr @U\tv { k s");
result.add("mic-\tro-\twa-\tva-\tble", "m aI k\tr @U\tw eI\tv V\tb V l");
result.add("mic-\tro-\twave", "m aI k\tr V\tw eI v");
result.add("mic-\tro-\twaved", "m aI k\tr @U\tw eI v d");
result.add("mic-\tro-\twaves", "m aI k\tr @U\tw eI v z");
result.add("mic-\trobe", "m aI k\tr @U b");
result.add("mic-\trobes", "m aI k\tr @U b z");
result.add("mic-\tron", "m aI k\tr Q n");
result.add("mic-\trons", "m aI k\tr Q n z");
result.add("mic-\tron's", "m aI k\tr Q n z");
result.add("mic-\tros", "m aI k\tr @U z");
result.add("mic-\tro's", "m aI k\tr @U z");
result.add("mice", "m aI s");
result.add("mich", "m I tS");
result.add("miche-\tner", "m I tS\tn @r");
result.add("miche-\tner's", "m I tS\tn @r z");
result.add("mick", "m I k");
result.add("mick-\tler", "m I k\tl @r");
result.add("mid", "m I d");
result.add("mid-\taf-\tter-\tnoon", "m I\td { f\tt @r\tn u: n");
result.add("mid-\tcourse", "m I d\tk O@ s");
result.add("mid-\td-\tling", "m I\td V\tl I N");
result.add("mid-\tday", "m I d\td eI");
result.add("mid-\tden-\tdorf", "m I\td V n\td O@ f");
result.add("mid-\tdle", "m I\td V l");
result.add("mid-\tdle-\tbrook", "m I\td V l\tb r U k");
result.add("mid-\tdle-\tbu-\try", "m I\td V l\tb e@\ti:");
result.add("mid-\tdle-\tburg", "m I\td V l\tb @r g");
result.add("mid-\tdle-\tclass", "m I\td V l\tk l { s");
result.add("mid-\tdle-\tman", "m I\td V l\tm { n");
result.add("mid-\tdle-\tmen", "m I\td V l\tm e n");
result.add("mid-\tdle-\tsex", "m I\td V l\ts e k s");
result.add("mid-\tdle-\tsworth", "m I\td V l\tz w @r T");
result.add("mid-\tdle-\tton", "m I\td V l\tt V n");
result.add("mid-\tdle-\ttown", "m I\td V l\tt aU n");
result.add("mid-\tdle-\tweight", "m I\td V l\tw eI t");
result.add("mid-\teas-\ttern", "m I\td i: s\tt @r n");
result.add("mid-\tle-\tvel", "m I d\tl V\tv V l");
result.add("mid-\tlife", "m I d\tl aI f");
result.add("mid-\tline", "m I d\tl aI n");
result.add("mid-\tmor-\tning", "m I d\tm O@\tn I N");
result.add("mid-\tnight", "m I d\tn aI t");
result.add("mid-\tpoint", "m I d\tp OI n t");
result.add("mid-\trange", "m I d\tr eI n dZ");
result.add("mid-\trib", "m I d\tr I b");
result.add("mid-\tsea-\tson", "m I d\ts i:\tz V n");
result.add("mid-\tsec-\ttion", "m I d\ts e k\tS V n");
result.add("mid-\tship-\tman", "m I d\tS I p\tm V n");
result.add("mid-\tship-\tman's", "m I d\tS I p\tm V n z");
result.add("mid-\tship-\tmen", "m I d\tS I p\tm e n");
result.add("mid-\tsize", "m I d\ts aI z");
result.add("mid-\tsized", "m I d\ts aI z d");
result.add("mid-\tstream", "m I d\ts t r i: m");
result.add("mid-\tsum-\tmer", "m I d\ts V\tm @r");
result.add("mid-\tterm", "m I d\tt @r m");
result.add("mid-\tterms", "m I d\tt @r m z");
result.add("mid-\ttown", "m I d\tt aU n");
result.add("mid-\tway", "m I d\tw eI");
result.add("mid-\tway's", "m I d\tw eI z");
result.add("mid-\tweek", "m I d\tw i: k");
result.add("mid-\twes-\tter-\tner", "m I d\tw e s\tt @r\tn @r");
result.add("mid-\twes-\tter-\tners", "m V d\tw e s\tt @r\tn @r z");
result.add("mid-\twes-\ttern", "m V d\tw e s\tt @r n");
result.add("mid-\twest", "m I d\tw e s t");
result.add("mid-\twest's", "m I d\tw e s t s");
result.add("mid-\twi-\tfe-\try", "m I d\tw aI\tf @r\ti:");
result.add("mid-\twife", "m I d\tw aI f");
result.add("mid-\twin-\tter", "m I d\tw I n\tt @r");
result.add("mid-\twin-\tter's", "m I d\tw I n\tt @r z");
result.add("mid-\twives", "m I d\tw aI v z");
result.add("mid-\tyear", "m I d\tj I@");
result.add("midst", "m I d s t");
result.add("mien", "m i: n");
result.add("mies", "m aI z");
result.add("miff-\tlin", "m I f\tl I n");
result.add("miffed", "m I f t");
result.add("mig", "m I g");
result.add("mig-\tnon", "m I g\tn V n");
result.add("mig-\tnons", "m I g\tn V n z");
result.add("migh-\tti-\ter", "m aI\tt i:\t@r");
result.add("migh-\tti-\test", "m aI\tt i:\tV s t");
result.add("migh-\tti-\tly", "m aI\tt I\tl i:");
result.add("migh-\ttn't", "m aI\tt V n t");
result.add("migh-\tty", "m aI\tt i:");
result.add("might", "m aI t");
result.add("might-\thave-\tbeen", "m aI\tt V v\tb I n");
result.add("migs", "m I g z");
result.add("mik-\tva", "m I k\tv V");
result.add("mike", "m aI k");
result.add("mikes", "m aI k s");
result.add("mike's", "m aI k s");
result.add("mil", "m I l");
result.add("mil-\tbank", "m I l\tb { N k");
result.add("mil-\tburn", "m I l\tb @r n");
result.add("mil-\td-\trid", "m I l\td @r\tI d");
result.add("mil-\tder", "m aI l\td @r");
result.add("mil-\tdest", "m aI l\td V s t");
result.add("mil-\tdew", "m I l\td u:");
result.add("mil-\tdews", "m I l\td u: z");
result.add("mil-\tdred", "m I l\td r V d");
result.add("mil-\tford", "m I l\tf @r d");
result.add("mil-\thous", "m I l\th aU s");
result.add("mil-\tken", "m I l\tk V n");
result.add("mil-\tken's", "m I l\tk V n z");
result.add("mil-\tking", "m I l\tk I N");
result.add("mil-\tko", "m I l\tk @U");
result.add("mil-\tky", "m I l\tk i:");
result.add("mil-\tlage", "m I\tl I dZ");
result.add("mil-\tlan", "m I\tl V n");
result.add("mil-\tlar", "m I\tl @r");
result.add("mil-\tlard", "m I\tl @r d");
result.add("mil-\tlard's", "m I\tl @r d z");
result.add("mil-\tlay", "m I\tl eI");
result.add("mil-\tlen", "m I\tl V n");
result.add("mil-\tlen-\tni-\ta", "m V\tl e\tn i:\tV");
result.add("mil-\tlen-\tni-\tal", "m V\tl e\tn i:\tV l");
result.add("mil-\tlen-\tni-\tum", "m V\tl e\tn i:\tV m");
result.add("mil-\tlen-\tni-\tums", "m V\tl e\tn i:\tV m z");
result.add("mil-\tler", "m I\tl @r");
result.add("mil-\tlers", "m I\tl @r z");
result.add("mil-\tler's", "m I\tl @r z");
result.add("mil-\tlet", "m I\tl V t");
result.add("mil-\tlets", "m I\tl V t s");
result.add("mil-\tli", "m I\tl i:");
result.add("mil-\tli-\tbar", "m I\tl I\tb Q@");
result.add("mil-\tli-\tcan", "m I\tl I\tk V n");
result.add("mil-\tli-\tcent", "m I\tl I\ts e n t");
result.add("mil-\tli-\tgal", "m I\tl I\tg V l");
result.add("mil-\tli-\tgan", "m I\tl I\tg V n");
result.add("mil-\tli-\tgram", "m I\tl I g\tr { m");
result.add("mil-\tli-\tgrams", "m I\tl I g\tr { m z");
result.add("mil-\tli-\tkan", "m I\tl I\tk V n");
result.add("mil-\tli-\tken", "m I\tl I\tk V n");
result.add("mil-\tli-\tli-\tter", "m I\tl I\tl i:\tt @r");
result.add("mil-\tli-\tli-\tters", "m I\tl I\tl i:\tt @r z");
result.add("mil-\tli-\tme-\tter", "m I\tl I\tm i:\tt @r");
result.add("mil-\tli-\tme-\tters", "m I\tl I\tm i:\tt @r z");
result.add("mil-\tli-\tner", "m I\tl I\tn @r");
result.add("mil-\tli-\tse-\tcond", "m I\tl I\ts e\tk V n d");
result.add("mil-\tli-\tse-\tconds", "m I\tl I\ts e\tk V n d z");
result.add("mil-\tli-\tsent", "m I\tl I\ts e n t");
result.add("mil-\tlie", "m I\tl i:");
result.add("mil-\tling", "m I\tl I N");
result.add("mil-\tling-\tton", "m I\tl I N\tt V n");
result.add("mil-\tlio-\tnaire", "m I l\tj V\tn e@");
result.add("mil-\tlio-\tnaires", "m I l\tj V\tn e@ z");
result.add("mil-\tlio-\tnaire's", "m I l\tj V\tn e@ z");
result.add("mil-\tlion", "m I l\tj V n");
result.add("mil-\tlions", "m I l\tj V n z");
result.add("mil-\tlionth", "m I l\tj V n T");
result.add("mil-\tlionths", "m I l\tj V n t T s");
result.add("mil-\tlis", "m I\tl I s");
result.add("mil-\tlon", "m I\tl V n");
result.add("mil-\tly", "m I\tl i:");
result.add("mil-\tman", "m I l\tm V n");
result.add("mil-\tner", "m I l\tn @r");
result.add("mil-\tpi-\ttas", "m I l\tp i:\tt V s");
result.add("mil-\troy", "m I l\tr OI");
result.add("mil-\tson", "m I l\ts V n");
result.add("mil-\tstein", "m I l\ts t aI n");
result.add("mil-\ttie", "m I\tt i:");
result.add("mil-\tto-\tnic", "m I l\tt Q\tn I k");
result.add("mil-\tton", "m I l\tt V n");
result.add("mil-\twau-\tkee", "m I l\tw O:\tk i:");
result.add("mil-\twau-\tkee's", "m I l\tw O:\tk i: z");
result.add("milch", "m I l tS");
result.add("mild", "m aI l d");
result.add("mild-\tly", "m aI l\td l i:");
result.add("mile", "m aI l");
result.add("mile-\tstone", "m aI l\ts t @U n");
result.add("mile-\tstones", "m aI l\ts t @U n z");
result.add("miles", "m aI l z");
result.add("milk", "m I l k");
result.add("milk-\tman", "m I l\tk m { n");
result.add("milk-\tshake", "m I l\tk S eI k");
result.add("milk-\tweed", "m I l\tk w i: d");
result.add("milked", "m I l k t");
result.add("milks", "m I l k s");
result.add("mill", "m I l");
result.add("mill-\tburn", "m I l\tb @r n");
result.add("mill-\thouse", "m I l\th aU s");
result.add("mill-\tman", "m I l\tm V n");
result.add("mill-\tsap", "m I l\ts { p");
result.add("mill-\tstone", "m I l\ts t @U n");
result.add("mill-\tward", "m I l\tw @r d");
result.add("mill-\twood", "m I l\tw U d");
result.add("mille", "m I l");
result.add("milled", "m I l d");
result.add("mills", "m I l z");
result.add("mill's", "m I l z");
result.add("milne", "m I l n");
result.add("milnes", "m I l n z");
result.add("mils", "m I l z");
result.add("milt", "m I l t");
result.add("mim", "m I m");
result.add("mime", "m aI m");
result.add("mims", "m I m z");
result.add("min", "m I n");
result.add("min-\tcer", "m I n\ts @r");
result.add("min-\tcing", "m I n\ts I N");
result.add("min-\tcy", "m I n\ts i:");
result.add("min-\tda", "m I n\td V");
result.add("min-\tda-\tnao", "m I n\td V\tn aU");
result.add("min-\tded", "m aI n\td V d");
result.add("min-\tded-\tly", "m aI n\td V d\tl i:");
result.add("min-\tded-\tness", "m aI n\td V d\tn V s");
result.add("min-\tdel", "m I n\td V l");
result.add("min-\tden", "m aI n\td V n");
result.add("min-\tder", "m aI n\td @r");
result.add("min-\tding", "m aI n\td I N");
result.add("min-\tdy", "m I n\td i:");
result.add("min-\tg-\tling", "m I N\tg V\tl I N");
result.add("min-\tges", "m I n\tdZ V z");
result.add("min-\tgle", "m I N\tg V l");
result.add("min-\tgled", "m I N\tg V l d");
result.add("min-\tgles", "m I N\tg V l z");
result.add("min-\tgo", "m i: N\tg @U");
result.add("min-\tgus", "m I N\tg V s");
result.add("min-\tna", "m I\tn V");
result.add("min-\tne-\ta-\tpo-\tli-\ts's", "m I\tn i:\t{\tp V\tl V\ts V z");
result.add("min-\tne-\ta-\tpo-\tlis", "m I\tn i:\t{\tp V\tl V s");
result.add("min-\tne-\tso-\tta", "m I\tn V\ts @U\tt V");
result.add("min-\tne-\tso-\ttan", "m I\tn V\ts @U\tt V n");
result.add("min-\tne-\tso-\ttans", "m I\tn V\ts @U\tt V n z");
result.add("min-\tne-\tso-\tta's", "m I\tn V\ts @U\tt V z");
result.add("min-\tne-\tton-\tka", "m I\tn V\tt O: N\tk V");
result.add("min-\tnel-\tli", "m I\tn e\tl i:");
result.add("min-\tnick", "m I\tn I k");
result.add("min-\tnie", "m I\tn i:");
result.add("min-\tnie's", "m I\tn i: z");
result.add("min-\tnis", "m I\tn I s");
result.add("min-\tnow", "m I\tn @U");
result.add("min-\tnows", "m I\tn @U z");
result.add("min-\tny", "m I\tn i:");
result.add("min-\tta", "m I n\tt V");
result.add("min-\ttage", "m I n\tt V dZ");
result.add("min-\tted", "m I n\tt V d");
result.add("min-\tter", "m I n\tt @r");
result.add("min-\tti-\ter", "m I n\tt i:\t@r");
result.add("min-\tting", "m I n\tt I N");
result.add("min-\tto", "m I n\tt @U");
result.add("min-\tton", "m I n\tt V n");
result.add("min-\tturn", "m I n\tt @r n");
result.add("mince", "m I n s");
result.add("mince-\tmeat", "m I n\ts m i: t");
result.add("minced", "m I n s t");
result.add("minch", "m I n tS");
result.add("mind", "m aI n d");
result.add("mind-\tbogg-\tling", "m aI n\td b O: g\tl I N");
result.add("mind-\tful", "m aI n\td f V l");
result.add("mind-\tless", "m aI n\td l V s");
result.add("mind-\tless-\tly", "m aI n\td l V s\tl i:");
result.add("mind-\tset", "m aI n\td s e t");
result.add("minds", "m aI n d z");
result.add("mind's", "m aI n d z");
result.add("mine", "m aI n");
result.add("mine-\tfield", "m aI n\tf i: l d");
result.add("mine-\tfields", "m aI n\tf i: l d z");
result.add("mine-\tswee-\tper", "m aI n\ts w i:\tp @r");
result.add("mine-\tswee-\tpers", "m aI n\ts w i:\tp @r z");
result.add("mine-\twor-\tker", "m aI n\tw @r\tk @r");
result.add("mine-\twor-\tkers", "m aI n\tw @r\tk @r z");
result.add("mined", "m aI n d");
result.add("mines", "m aI n z");
result.add("mine's", "m aI n z");
result.add("ming", "m I N");
result.add("minge", "m I n dZ");
result.add("mings", "m I N z");
result.add("minh", "m I n");
result.add("mink", "m I N k");
result.add("minke", "m I N k");
result.add("minks", "m I N k s");
result.add("mins-\tky", "m I n\ts k i:");
result.add("mins-\tter", "m I n\ts t @r");
result.add("minsk", "m I n s k");
result.add("minst-\trel", "m I n\ts t r V l");
result.add("minst-\trels", "m I n\ts t r V l z");
result.add("mint", "m I n t");
result.add("mints", "m I n t s");
result.add("mint's", "m I n t s");
result.add("mintz", "m I n t s");
result.add("mips", "m I p s");
result.add("mir", "m I@");
result.add("mir-\tror", "m I@\t@r");
result.add("mire", "m aI r");
result.add("mired", "m aI r d");
result.add("mis", "m I s");
result.add("mis-\tbe-\tgot-\tten", "m I s\tb V\tg Q\tt V n");
result.add("mis-\tbe-\tha-\tving", "m I s\tb V\th eI\tv I N");
result.add("mis-\tbe-\tha-\tvior", "m I s\tb V\th eI v\tj @r");
result.add("mis-\tbe-\thave", "m I s\tb V\th eI v");
result.add("mis-\tbe-\thaved", "m I s\tb V\th eI v d");
result.add("mis-\tcal-\tcu-\tla-\tted", "m I s\tk { l\tk j V\tl eI\tt V d");
result.add("mis-\tcal-\tcu-\tla-\ttion", "m I s\tk { l\tk j V\tl eI\tS V n");
result.add("mis-\tcal-\tcu-\tla-\ttions", "m I s\tk { l\tk j V\tl eI\tS V n z");
result.add("mis-\tcal-\tcu-\tlate", "m I s\tk { l\tk j V\tl eI t");
result.add("mis-\tcar-\tria-\tges", "m I s\tk e@\tI\tdZ V z");
result.add("mis-\tcar-\triage", "m I s\tk e@\tI dZ");
result.add("mis-\tcast", "m I s\tk { s t");
result.add("mis-\tcel-\tla-\tne-\tous", "m I\ts V\tl eI\tn i:\tV s");
result.add("mis-\tcel-\tla-\tny", "m I\ts V\tl eI\tn i:");
result.add("mis-\tcha", "m I\tS V");
result.add("mis-\tcha-\trac-\tte-\tri-\tza-\ttion", "m I s\tk {\tr V k\tt @r\tV\tz eI\tS V n");
result.add("mis-\tcha-\trac-\tte-\trize", "m I s\tk {\tr V k\tt @r\taI z");
result.add("mis-\tcha-\trac-\tte-\trized", "m I s\tk {\tr V k\tt @r\taI z d");
result.add("mis-\tchar-\tges", "m I s\ttS Q@\tdZ V z");
result.add("mis-\tchar-\tging", "m I s\ttS Q@\tdZ I N");
result.add("mis-\tcharge", "m I s\ttS Q@ dZ");
result.add("mis-\tcharged", "m I s\ttS Q@ dZ d");
result.add("mis-\tchie-\tvous", "m I s\ttS I\tv V s");
result.add("mis-\tchief", "m I s\ttS I f");
result.add("mis-\tcom-\tmu-\tni-\tca-\ttion", "m I s\tk V m\tj u:\tn I\tk eI\tS V n");
result.add("mis-\tcon-\tceive", "m I s\tk V n\ts i: v");
result.add("mis-\tcon-\tceived", "m I s\tk V n\ts i: v d");
result.add("mis-\tcon-\tcep-\ttion", "m I s\tk V n\ts e p\tS V n");
result.add("mis-\tcon-\tcep-\ttions", "m I s\tk V n\ts e p\tS V n z");
result.add("mis-\tcon-\tduct", "m I s\tk Q n\td V k t");
result.add("mis-\tcon-\tstrue", "m I s\tk V n\ts t r u:");
result.add("mis-\tcon-\tstrued", "m I s\tk V n\ts t r u: d");
result.add("mis-\tcount", "m I s\tk aU n t");
result.add("mis-\tcre-\ta-\ttion", "m I s\tk r i:\teI\tS V n");
result.add("mis-\tcre-\ta-\ttions", "m I s\tk r i:\teI\tS V n z");
result.add("mis-\tcre-\tant", "m I s\tk r i:\tV n t");
result.add("mis-\tcre-\tants", "m I s\tk r i:\tV n t s");
result.add("mis-\tcue", "m I s\tk j u:");
result.add("mis-\tcues", "m I s\tk j u: z");
result.add("mis-\tde-\tmea-\tnor", "m I s\td V\tm i:\tn @r");
result.add("mis-\tde-\tmea-\tnors", "m I s\td V\tm i:\tn @r z");
result.add("mis-\tdeed", "m I s\td i: d");
result.add("mis-\tdeeds", "m I s\td i: d z");
result.add("mis-\tdi-\tag-\tno-\tses", "m I s\td aI\tI g\tn @U\ts i: z");
result.add("mis-\tdi-\tag-\tno-\tsis", "m I s\td aI\tI g\tn @U\ts I s");
result.add("mis-\tdi-\tag-\tnose", "m I s\td aI\tI g\tn @U s");
result.add("mis-\tdi-\tag-\tnosed", "m I s\td aI\tI g\tn @U s t");
result.add("mis-\tdi-\trec-\tted", "m I s\td I@\te k\tt V d");
result.add("mis-\tdi-\trect", "m I s\td I@\te k t");
result.add("mis-\tfi-\tre", "m I s\tf aI\t@r");
result.add("mis-\tfit", "m I s\tf I t");
result.add("mis-\tfits", "m I s\tf I t s");
result.add("mis-\tfor-\ttune", "m I s\tf O@\ttS V n");
result.add("mis-\tfor-\ttunes", "m I s\tf O@\ttS V n z");
result.add("mis-\tgi-\tving", "m I s\tg I\tv I N");
result.add("mis-\tgi-\tvings", "m I s\tg I\tv I N z");
result.add("mis-\tgive", "m I s\tg I v");
result.add("mis-\tgo-\tvern-\tment", "m I s\tg V\tv @r n\tm V n t");
result.add("mis-\tgui-\tded", "m I s\tg aI\td V d");
result.add("mis-\tguide", "m I s\tg aI d");
result.add("mis-\tim-\tpres-\tsion", "m I\ts I m\tp r e\tS V n");
result.add("mis-\tin-\tfor-\tma-\ttion", "m I\ts I n\tf @r\tm eI\tS V n");
result.add("mis-\tin-\tfor-\tming", "m I\ts I n\tf O@\tm I N");
result.add("mis-\tin-\tform", "m I\ts I n\tf O@ m");
result.add("mis-\tin-\tformed", "m I\ts I n\tf O@ m d");
result.add("mis-\tin-\tter-\tpre-\tta-\ttion", "m I\ts I n\tt @r p\tr V\tt eI\tS V n");
result.add("mis-\tin-\tter-\tpre-\tted", "m I\ts I n\tt @r p\tr V\tt V d");
result.add("mis-\tin-\tter-\tpre-\tting", "m I\ts I n\tt @r p\tr V\tt I N");
result.add("mis-\tin-\tter-\tpret", "m I\ts I n\tt @r p\tr e t");
result.add("mis-\tjud-\tges", "m I s\tdZ V\tdZ V z");
result.add("mis-\tjudg-\tment", "m I s\tdZ V dZ\tm V n t");
result.add("mis-\tjudg-\tments", "m I s\tdZ V dZ\tm V n t s");
result.add("mis-\tjudge", "m I s\tdZ V dZ");
result.add("mis-\tjudged", "m I s\tdZ V dZ d");
result.add("mis-\tki-\tto", "m I s\tk i:\tt @U");
result.add("mis-\tki-\ttos", "m I s\tk i:\tt @U s");
result.add("mis-\tla-\tbe-\tling", "m I s\tl eI\tb V\tl I N");
result.add("mis-\tla-\tbel", "m I s\tl eI\tb V l");
result.add("mis-\tla-\tbeled", "m I s\tl eI\tb V l d");
result.add("mis-\tlaid", "m I s\tl eI d");
result.add("mis-\tlea-\tding", "m I s\tl i:\td I N");
result.add("mis-\tlea-\tding-\tly", "m I s\tl i:\td I N\tl i:");
result.add("mis-\tlead", "m I s\tl i: d");
result.add("mis-\tleads", "m I s\tl i: d z");
result.add("mis-\tled", "m I s\tl e d");
result.add("mis-\tma-\tna-\tges", "m I s\tm {\tn I\tdZ V z");
result.add("mis-\tma-\tna-\tging", "m I s\tm {\tn I\tdZ I N");
result.add("mis-\tma-\tnage", "m I s\tm {\tn I dZ");
result.add("mis-\tma-\tnage-\tment", "m I s\tm {\tn I dZ\tm V n t");
result.add("mis-\tma-\tnaged", "m I s\tm {\tn I dZ d");
result.add("mis-\tmat-\tches", "m I s\tm {\ttS V z");
result.add("mis-\tmatch", "m I s\tm { tS");
result.add("mis-\tmatched", "m I s\tm { tS t");
result.add("mis-\tno-\tmer", "m I s\tn @U\tm @r");
result.add("mis-\tper-\tceive", "m I s\tp @r\ts i: v");
result.add("mis-\tper-\tceives", "m I s\tp @r\ts i: v z");
result.add("mis-\tper-\tcep-\ttion", "m I s\tp @r\ts e p\tS V n");
result.add("mis-\tper-\tcep-\ttions", "m I s\tp @r\ts e p\tS V n z");
result.add("mis-\tplace", "m I s\tp l eI s");
result.add("mis-\tplaced", "m I s\tp l eI s t");
result.add("mis-\tpri-\tsion", "m I s\tp r I\tZ V n");
result.add("mis-\tprice", "m I s\tp r aI s");
result.add("mis-\tpriced", "m I s\tp r aI s t");
result.add("mis-\tprint", "m I s\tp r I n t");
result.add("mis-\tpro-\tnounce", "m I s\tp r V\tn aU n s");
result.add("mis-\tpro-\tnounced", "m I s\tp r V\tn aU n s t");
result.add("mis-\tquo-\tted", "m I s\tk w @U\tt V d");
result.add("mis-\tquote", "m I s\tk w @U t");
result.add("mis-\tre-\tmem-\tber", "m I s\tr i:\tm e m\tb @r");
result.add("mis-\tre-\tmem-\tbered", "m I s\tr i:\tm e m\tb @r d");
result.add("mis-\tre-\tpor-\tted", "m I s\tr V\tp O@\tt V d");
result.add("mis-\tre-\tport", "m I s\tr V\tp O@ t");
result.add("mis-\tre-\tpre-\tsen-\tta-\ttion", "m I s\tr e p\tr V\tz e n\tt eI\tS V n");
result.add("mis-\tre-\tpre-\tsen-\tta-\ttions", "m I s\tr e p\tr V\tz e n\tt eI\tS V n z");
result.add("mis-\tre-\tpre-\tsen-\tted", "m I s\tr e p\tr V\tz e n\tt V d");
result.add("mis-\tre-\tpre-\tsen-\tting", "m I s\tr e p\tr V\tz e n\tt I N");
result.add("mis-\tre-\tpre-\tsent", "m I s\tr e p\tr V\tz e n t");
result.add("mis-\tre-\tpre-\tsents", "m I s\tr e p\tr V\tz e n t s");
result.add("mis-\trea-\tding", "m I s\tr i:\td I N");
result.add("mis-\tread", "m I s\tr i: d");
result.add("mis-\trule", "m I s\tr u: l");
result.add("mis-\tsal", "m I\ts V l");
result.add("mis-\tsel", "m I\ts V l");
result.add("mis-\tses", "m I\ts V z");
result.add("mis-\tsha-\tpen", "m I s\tS eI\tp V n");
result.add("mis-\tsie", "m I\ts i:");
result.add("mis-\tsile", "m I\ts V l");
result.add("mis-\tsiles", "m I\ts V l z");
result.add("mis-\tsile's", "m I\ts V l z");
result.add("mis-\tsing", "m I\ts I N");
result.add("mis-\tsio-\tna-\tries", "m I\tS V\tn e@\ti: z");
result.add("mis-\tsio-\tna-\try", "m I\tS V\tn e@\ti:");
result.add("mis-\tsion", "m I\tS V n");
result.add("mis-\tsions", "m I\tS V n z");
result.add("mis-\tsion's", "m I\tS V n z");
result.add("mis-\tsis-\tsau-\tga", "m I\ts I\ts O:\tg V");
result.add("mis-\tsis-\tsip-\tpi", "m I\ts I\ts I\tp i:");
result.add("mis-\tsis-\tsip-\tpi-\tan", "m I\ts I\ts I\tp i:\tV n");
result.add("mis-\tsis-\tsip-\tpi-\tans", "m I\ts I\ts I\tp i:\tV n z");
result.add("mis-\tsis-\tsip-\tpi's", "m I\ts I\ts I\tp i: z");
result.add("mis-\tsive", "m I\ts I v");
result.add("mis-\tsou-\tla", "m I\tz u:\tl V");
result.add("mis-\tsou-\tri", "m V\tz U@\ti:");
result.add("mis-\tsou-\tri's", "m V\tz U@\ti: z");
result.add("mis-\tspeak", "m I s\ts p i: k");
result.add("mis-\tspel-\tling", "m I s\ts p e\tl I N");
result.add("mis-\tspell", "m I s\ts p e l");
result.add("mis-\tspelled", "m I s\ts p e l d");
result.add("mis-\tta-\tking", "m I s\tt eI\tk I N");
result.add("mis-\ttakes", "m I s\tt eI k s");
result.add("mis-\tter", "m I s\tt @r");
result.add("mis-\tters", "m I s\tt @r z");
result.add("mis-\ttic", "m I s\tt I k");
result.add("mis-\ttook", "m I s\tt U k");
result.add("mis-\tty", "m I s\tt i:");
result.add("mis-\tun-\tder-\tstan-\tding", "m I\ts V n\td @r s\tt { n\td I N");
result.add("mis-\tun-\tder-\tstan-\tdings", "m I\ts V n\td @r s\tt { n\td I N z");
result.add("mis-\tun-\tder-\tstand", "m I\ts V n\td @r s\tt { n d");
result.add("mis-\tun-\tder-\tstands", "m I\ts V n\td @r s\tt { n d z");
result.add("mis-\tun-\tder-\tstood", "m I\ts V n\td @r s\tt U d");
result.add("misch", "m I S");
result.add("mish-\tmash", "m I S\tm { S");
result.add("miss", "m I s");
result.add("missed", "m I s t");
result.add("mist-\tral", "m I s\tt r V l");
result.add("mist-\trea-\tted", "m I s\tt r i:\tt V d");
result.add("mist-\trea-\tting", "m I s\tt r i:\tt I N");
result.add("mist-\treat", "m I s\tt r i: t");
result.add("mist-\treat-\tment", "m I s\tt r i: t\tm V n t");
result.add("mist-\treats", "m I s\tt r i: t s");
result.add("mist-\tres-\tses", "m I s\tt r V\ts V z");
result.add("mist-\tress", "m I s\tt r V s");
result.add("mist-\tri-\tal", "m I s\tt r aI\tV l");
result.add("mist-\tri-\tals", "m I s\tt r aI\tV l z");
result.add("mist-\trus-\tted", "m I s\tt r V s\tt V d");
result.add("mist-\trust", "m I s\tt r V s t");
result.add("mist-\trust-\tful", "m I s\tt r V s\tt f V l");
result.add("mist-\try", "m I s\tt r i:");
result.add("mists", "m I s t s");
result.add("mit-\tchel", "m I\ttS V l");
result.add("mit-\tchell", "m I\ttS V l");
result.add("mit-\tchell's", "m I\ttS V l z");
result.add("mit-\tchum", "m I\ttS V m");
result.add("mit-\tman", "m I t\tm V n");
result.add("mit-\tra", "m I t\tr V");
result.add("mit-\tral", "m aI t\tr V l");
result.add("mit-\tre", "m I t\tr i:");
result.add("mit-\tte-\tleu-\tro-\tpa", "m I\tt e\tl u:\tr @U\tp V");
result.add("mit-\tten", "m I\tt V n");
result.add("mit-\ttens", "m I\tt V n z");
result.add("mit-\tter-\trand", "m i:\tt @r\tO: n d");
result.add("mit-\tter-\trand's", "m i:\tt @r\t{ n d z");
result.add("mit-\tzi", "m I t\ts i:");
result.add("mitch", "m I tS");
result.add("mite", "m aI t");
result.add("mites", "m aI t s");
result.add("mith-\tri-\tdate", "m I T\tr I\td eI t");
result.add("mith-\tri-\tdates", "m I T\tr I\td eI t s");
result.add("mitt", "m I t");
result.add("mitts", "m I t s");
result.add("mitz-\tvah", "m I t\ts v V");
result.add("mix", "m I k s");
result.add("mix-\tture", "m I k\ts tS @r");
result.add("mix-\ttures", "m I k\ts tS @r z");
result.add("mix-\tup", "m I k\ts V p");
result.add("mixed", "m I k s t");
result.add("miz-\tra-\thi", "m i: z\tr Q\th i:");
result.add("mize", "m aI z");
result.add("mne-\tmo-\tnic", "n V\tm Q\tn I k");
result.add("mne-\tmo-\tnics", "n V\tm Q\tn I k s");
result.add("mo", "m @U");
result.add("mo-\tab", "m @U\t{ b");
result.add("mo-\tber-\tly", "m @U\tb @r\tl i:");
result.add("mo-\tberg", "m @U\tb @r g");
result.add("mo-\tbi-\tli-\ta", "m @U\tb i:\tl i:\tV");
result.add("mo-\tbi-\tli-\tty", "m @U\tb I\tl I\tt i:");
result.add("mo-\tbi-\tli-\tza-\ttion", "m @U\tb I\tl I\tz eI\tS V n");
result.add("mo-\tbi-\tli-\tza-\ttions", "m @U\tb I\tl I\tz eI\tS V n z");
result.add("mo-\tbi-\tli-\tzer", "m @U\tb I\tl aI\tz @r");
result.add("mo-\tbi-\tli-\tzers", "m @U\tb I\tl aI\tz @r z");
result.add("mo-\tbi-\tli-\tzing", "m @U\tb I\tl aI\tz I N");
result.add("mo-\tbi-\tlize", "m @U\tb I\tl aI z");
result.add("mo-\tbi-\tlized", "m @U\tb I\tl aI z d");
result.add("mo-\tbi-\tus", "m @U\tb i:\tV s");
result.add("mo-\tbil", "m @U\tb I l");
result.add("mo-\tbile", "m @U\tb I l");
result.add("mo-\tbiles", "m @U\tb I l z");
result.add("mo-\tbile's", "m @U\tb I l z");
result.add("mo-\tbil's", "m @U\tb I l z");
result.add("mo-\tbu-\ttu", "m @U b\tj u:\tt u:");
result.add("mo-\tbu-\ttu's", "m @U b\tj u:\tt u: z");
result.add("mo-\tby", "m @U\tb i:");
result.add("mo-\tca", "m @U\tk V");
result.add("mo-\tcha", "m @U\tk V");
result.add("mo-\tchel", "m Q\tk V l");
result.add("mo-\tda-\tli-\tties", "m V\td {\tl V\tt i: z");
result.add("mo-\tda-\tli-\tty", "m V\td {\tl V\tt i:");
result.add("mo-\tdal", "m @U\td V l");
result.add("mo-\tde-\tling", "m Q\td V\tl I N");
result.add("mo-\tde-\tna", "m @U\td e\tn V");
result.add("mo-\tde-\tra-\tted", "m Q\td @r\teI\tt V d");
result.add("mo-\tde-\tra-\tting", "m Q\td @r\teI\tt I N");
result.add("mo-\tde-\tra-\ttion", "m Q\td @r\teI\tS V n");
result.add("mo-\tde-\tra-\ttor", "m Q\td @r\teI\tt @r");
result.add("mo-\tde-\tra-\ttors", "m Q\td @r\teI\tt @r z");
result.add("mo-\tde-\trate", "m Q\td @r\tV t");
result.add("mo-\tde-\trate-\tly", "m Q\td @r\tV t\tl i:");
result.add("mo-\tde-\trates", "m Q\td @r\tV t s");
result.add("mo-\tdel", "m Q\td V l");
result.add("mo-\tdeled", "m Q\td V l d");
result.add("mo-\tdels", "m Q\td V l z");
result.add("mo-\tdel's", "m Q\td V l z");
result.add("mo-\tdem", "m @U\td V m");
result.add("mo-\tdems", "m @U\td V m z");
result.add("mo-\tder", "m @U\td @r");
result.add("mo-\tder-\tni-\tsm", "m Q\td @r\tn I\tz V m");
result.add("mo-\tder-\tni-\tty", "m Q\td @r\tn I\tt i:");
result.add("mo-\tder-\tni-\tza-\ttion", "m Q\td @r\tn I\tz eI\tS V n");
result.add("mo-\tder-\tni-\tzing", "m Q\td @r\tn aI\tz I N");
result.add("mo-\tder-\tnist", "m Q\td @r\tn I s t");
result.add("mo-\tder-\tnists", "m Q\td @r\tn I s t s");
result.add("mo-\tder-\tnize", "m Q\td @r\tn aI z");
result.add("mo-\tder-\tnized", "m Q\td @r\tn aI z d");
result.add("mo-\tdern", "m Q\td @r n");
result.add("mo-\tderns", "m Q\td @r n z");
result.add("mo-\tdes-\tta", "m @U\td e s\tt V");
result.add("mo-\tdes-\tti-\tne", "m @U\td e s\tt i:\tn i:");
result.add("mo-\tdes-\ttia", "m @U\td e s\tt j V");
result.add("mo-\tdes-\tto", "m @U\td e s\tt @U");
result.add("mo-\tdes-\tty", "m Q\td V s\tt i:");
result.add("mo-\tdest", "m Q\td V s t");
result.add("mo-\tdest-\tly", "m Q\td V s\tt l i:");
result.add("mo-\tdi", "m @U\td i:");
result.add("mo-\tdi-\tca", "m @U\td i:\tk V");
result.add("mo-\tdi-\tcum", "m Q\td I\tk V m");
result.add("mo-\tdi-\tfi-\tca-\ttion", "m Q\td I\tf I\tk eI\tS V n");
result.add("mo-\tdi-\tfi-\tca-\ttions", "m Q\td I\tf I\tk eI\tS V n z");
result.add("mo-\tdi-\tfied", "m Q\td I\tf aI d");
result.add("mo-\tdi-\tfies", "m Q\td I\tf aI z");
result.add("mo-\tdi-\tfy", "m Q\td I\tf aI");
result.add("mo-\tdi-\tfy-\ting", "m Q\td I\tf aI\tI N");
result.add("mo-\tdi-\tgli-\ta-\tni", "m @U\td I g\tl i:\tQ\tn i:");
result.add("mo-\tdu-\tla-\tted", "m O: dZ\tj u:\tl eI\tt V d");
result.add("mo-\tdu-\tla-\ttion", "m Q\tdZ V\tl eI\tS V n");
result.add("mo-\tdu-\tla-\ttor", "m Q\tdZ V\tl eI\tt @r");
result.add("mo-\tdu-\tlar", "m Q\tdZ V\tl @r");
result.add("mo-\tdu-\tlate", "m O: dZ\tj u:\tl eI t");
result.add("mo-\tdule", "m Q\tdZ u: l");
result.add("mo-\tdules", "m Q\tdZ u: l z");
result.add("mo-\tdus", "m @U\td V s");
result.add("mo-\tdy", "m @U\td i:");
result.add("mo-\tet", "m @U\te t");
result.add("mo-\tga-\tdi-\tshu", "m @U\tg V\td i:\tS u:");
result.add("mo-\tgan", "m @U\tg V n");
result.add("mo-\tgul", "m @U\tg V l");
result.add("mo-\tguls", "m @U\tg V l z");
result.add("mo-\tha-\tmed", "m @U\th Q\tm e d");
result.add("mo-\thair", "m @U\th e@");
result.add("mo-\tham-\tmad", "m @U\th Q\tm e d");
result.add("mo-\tham-\tmed", "m @U\th {\tm V d");
result.add("mo-\thar", "m @U\th @r");
result.add("mo-\thawk", "m @U\th O: k");
result.add("mo-\thawks", "m @U\th O: k s");
result.add("mo-\thi-\tcan", "m @U\th i:\tk V n");
result.add("mo-\thi-\tcans", "m @U\th i:\tk V n z");
result.add("mo-\tja-\tve", "m @U\th Q\tv i:");
result.add("mo-\tjo", "m @U\tdZ @U");
result.add("mo-\tla", "m @U\tl V");
result.add("mo-\tlas-\tses", "m V\tl {\ts V z");
result.add("mo-\tle-\tcu-\tlar", "m V\tl e k\tj V\tl @r");
result.add("mo-\tle-\tcule", "m Q\tl V k\tj u: l");
result.add("mo-\tle-\tcules", "m Q\tl V k\tj u: l z");
result.add("mo-\tler", "m @U\tl @r");
result.add("mo-\tles-\tta-\ttion", "m @U\tl e s\tt eI\tS V n");
result.add("mo-\tles-\tted", "m V\tl e s\tt V d");
result.add("mo-\tles-\tter", "m V\tl e s\tt @r");
result.add("mo-\tles-\tters", "m V\tl e s\tt @r z");
result.add("mo-\tles-\tting", "m V\tl e s\tt I N");
result.add("mo-\tlest", "m V\tl e s t");
result.add("mo-\tlests", "m V\tl e s t s");
result.add("mo-\tli-\tna", "m V\tl i:\tn V");
result.add("mo-\tli-\tno", "m @U\tl i:\tn @U");
result.add("mo-\tliere", "m @U l\tj e@");
result.add("mo-\tline", "m @U\tl i: n");
result.add("mo-\tlo-\tkai", "m Q\tl V\tk aI");
result.add("mo-\tlo-\ttov", "m O:\tl V\tt Q f");
result.add("mo-\tly", "m @U\tl i:");
result.add("mo-\tlyb-\tde-\tnum", "m V\tl I b\td e\tn V m");
result.add("mo-\tmen-\tta-\tri-\tly", "m @U\tm V n\tt e@\tV\tl i:");
result.add("mo-\tmen-\tta-\try", "m @U\tm V n\tt e@\ti:");
result.add("mo-\tmen-\ttous", "m @U\tm e n\tt V s");
result.add("mo-\tmen-\ttum", "m @U\tm e n\tt V m");
result.add("mo-\tment", "m @U\tm V n t");
result.add("mo-\tments", "m @U\tm V n t s");
result.add("mo-\tment's", "m @U\tm V n t s");
result.add("mo-\tna", "m @U\tn V");
result.add("mo-\tna-\tco", "m Q\tn V\tk @U");
result.add("mo-\tna-\tghan", "m Q\tn V\th { n");
result.add("mo-\tna-\than", "m Q\tn V\th { n");
result.add("mo-\tnad", "m @U\tn { d");
result.add("mo-\tnad-\tnock", "m Q\tn { d\tn Q k");
result.add("mo-\tnar-\tchies", "m Q\tn Q@\tk i: z");
result.add("mo-\tnar-\tchist", "m Q\tn Q@\tk I s t");
result.add("mo-\tnar-\tchists", "m Q\tn Q@\tk I s t s");
result.add("mo-\tnarch", "m Q\tn Q@ k");
result.add("mo-\tne-\tta-\tri-\tly", "m Q\tn V\tt @r\tV\tl i:");
result.add("mo-\tne-\tta-\tri-\tsm", "m Q\tn V\tt @r\tI\tz V m");
result.add("mo-\tne-\tta-\trist", "m Q\tn V\tt @r\tI s t");
result.add("mo-\tne-\tta-\trists", "m Q\tn V\tt @r\tI s t s");
result.add("mo-\tne-\tta-\try", "m Q\tn V\tt e@\ti:");
result.add("mo-\tnell", "m Q\tn V l");
result.add("mo-\tnes-\tsen", "m @U\tn V\ts V n");
result.add("mo-\tnet", "m @U\tn eI");
result.add("mo-\tnet's", "m @U\tn eI z");
result.add("mo-\tnett", "m Q\tn e t");
result.add("mo-\tnette", "m V\tn e t");
result.add("mo-\tney", "m V\tn i:");
result.add("mo-\tney-\tless", "m V\tn i:\tl V s");
result.add("mo-\tney-\tma-\tker", "m V\tn i:\tm eI\tk @r");
result.add("mo-\tney-\tma-\tkers", "m V\tn i:\tm eI\tk @r z");
result.add("mo-\tney-\tma-\tking", "m V\tn i:\tm eI\tk I N");
result.add("mo-\tneyed", "m V\tn i: d");
result.add("mo-\tneys", "m V\tn i: z");
result.add("mo-\tney's", "m V\tn i: z");
result.add("mo-\tni-\tca", "m Q\tn I\tk V");
result.add("mo-\tni-\tca's", "m Q\tn I\tk V z");
result.add("mo-\tni-\tco", "m @U\tn i:\tk @U");
result.add("mo-\tni-\ter", "m @U\tn i:\t@r");
result.add("mo-\tni-\tker", "m Q\tn I\tk @r");
result.add("mo-\tni-\tkers", "m Q\tn I\tk @r z");
result.add("mo-\tni-\tsm", "m Q\tn I\tz V m");
result.add("mo-\tni-\tsms", "m Q\tn I\tz V m z");
result.add("mo-\tni-\tto-\tring", "m Q\tn I\tt @r\tI N");
result.add("mo-\tni-\ttor", "m Q\tn I\tt @r");
result.add("mo-\tni-\ttored", "m Q\tn I\tt @r d");
result.add("mo-\tni-\ttors", "m Q\tn I\tt @r z");
result.add("mo-\tnied", "m V\tn i: d");
result.add("mo-\tnies", "m V\tn i: z");
result.add("mo-\tnique", "m @U\tn i: k");
result.add("mo-\tniz", "m Q\tn I z");
result.add("mo-\tno", "m @U\tn @U");
result.add("mo-\tno-\tcar-\tpic", "m Q\tn V\tk Q@\tp I k");
result.add("mo-\tno-\tcle", "m Q\tn V\tk V l");
result.add("mo-\tno-\tcli-\tnic", "m Q\tn V k\tl I\tn I k");
result.add("mo-\tno-\tclo-\tnal", "m Q\tn V k\tl @U\tn V l");
result.add("mo-\tno-\tga-\tmous", "m V\tn Q\tg V\tm V s");
result.add("mo-\tno-\tga-\tmy", "m V\tn Q\tg V\tm i:");
result.add("mo-\tno-\tgram", "m Q\tn V g\tr { m");
result.add("mo-\tno-\tgrammed", "m Q\tn V g\tr { m d");
result.add("mo-\tno-\tgraph", "m Q\tn V g\tr { f");
result.add("mo-\tno-\thull", "m Q\tn V\th V l");
result.add("mo-\tno-\tli-\tthic", "m Q\tn V\tl I\tT I k");
result.add("mo-\tno-\tlin-\tgual", "m Q\tn V\tl I N\tg w V l");
result.add("mo-\tno-\tlith", "m Q\tn V\tl I T");
result.add("mo-\tno-\tliths", "m Q\tn V\tl I T s");
result.add("mo-\tno-\tlogue", "m Q\tn V\tl O: g");
result.add("mo-\tno-\tlogues", "m Q\tn V\tl O: g z");
result.add("mo-\tno-\tmer", "m Q\tn V\tm @r");
result.add("mo-\tno-\tmers", "m Q\tn V\tm @r z");
result.add("mo-\tno-\tnu-\tcle-\tar", "m Q\tn V\tn u: k\tl i:\t@r");
result.add("mo-\tno-\tpho-\tnic", "m Q\tn V\tf Q\tn I k");
result.add("mo-\tno-\tplane", "m Q\tn V p\tl eI n");
result.add("mo-\tno-\tplanes", "m Q\tn V p\tl eI n z");
result.add("mo-\tno-\tpo-\tli-\tza-\ttion", "m V\tn Q\tp V\tl V\tz eI\tS V n");
result.add("mo-\tno-\tpo-\tli-\tzes", "m V\tn Q\tp V\tl aI\tz V z");
result.add("mo-\tno-\tpo-\tli-\tzing", "m V\tn Q\tp V\tl aI\tz I N");
result.add("mo-\tno-\tpo-\tlies", "m V\tn Q\tp V\tl i: z");
result.add("mo-\tno-\tpo-\tlis-\ttic", "m V\tn Q\tp V\tl I s\tt I k");
result.add("mo-\tno-\tpo-\tlist", "m V\tn Q\tp V\tl V s t");
result.add("mo-\tno-\tpo-\tlize", "m V\tn Q\tp V\tl aI z");
result.add("mo-\tno-\tpo-\tlized", "m V\tn Q\tp V\tl aI z d");
result.add("mo-\tno-\tpo-\tly", "m V\tn Q\tp V\tl i:");
result.add("mo-\tno-\tpole", "m Q\tn V\tp @U l");
result.add("mo-\tno-\tpoles", "m Q\tn V\tp @U l z");
result.add("mo-\tno-\trail", "m Q\tn @r\teI l");
result.add("mo-\tno-\trails", "m Q\tn @r\teI l z");
result.add("mo-\tno-\tsac-\tcha-\tride", "m Q\tn V\ts {\tk @r\taI d");
result.add("mo-\tno-\tthe-\ti-\tsm", "m Q\tn V\tT i:\tI\tz V m");
result.add("mo-\tno-\tto-\tnous", "m V\tn Q\tt V\tn V s");
result.add("mo-\tno-\tto-\tny", "m V\tn Q\tt V\tn i:");
result.add("mo-\tno-\ttone", "m Q\tn V\tt @U n");
result.add("mo-\tno-\ttype", "m Q\tn V\tt aI p");
result.add("mo-\tno-\tva-\tlent", "m Q\tn V\tv eI\tl V n t");
result.add("mo-\tno-\txide", "m V\tn Q k\ts aI d");
result.add("mo-\tnoch-\tro-\tma-\ttic", "m Q\tn V k\tr @U\tm {\tt I k");
result.add("mo-\tnoch-\trome", "m Q\tn V k\tr @U m");
result.add("mo-\tnon-\tga-\the-\tla", "m V\tn O: N\tg V\th eI\tl V");
result.add("mo-\tnu-\tmen-\ttal", "m Q n\tj V\tm e n\tt V l");
result.add("mo-\tnu-\tmen-\ttal-\tly", "m Q n\tj V\tm e n\tt V\tl i:");
result.add("mo-\tnu-\tment", "m Q n\tj u:\tm V n t");
result.add("mo-\tnu-\tments", "m Q n\tj V\tm V n t s");
result.add("mo-\tny", "m @U\tn i:");
result.add("mo-\tping", "m @U\tp I N");
result.add("mo-\tpus", "m @U\tp V s");
result.add("mo-\tra", "m O@\tV");
result.add("mo-\tra-\tga", "m O@\tQ\tg V");
result.add("mo-\tra-\tli-\tsm", "m O@\tV\tl I\tz V m");
result.add("mo-\tra-\tli-\tty", "m @r\t{\tl I\tt i:");
result.add("mo-\tra-\tli-\tzing", "m O@\tV\tl aI\tz I N");
result.add("mo-\tra-\tlis-\ttic", "m O@\tV\tl I s\tt I k");
result.add("mo-\tra-\tlist", "m O@\tV\tl I s t");
result.add("mo-\tra-\tlists", "m O@\tV\tl V s t s");
result.add("mo-\tra-\tlize", "m O@\tV\tl aI z");
result.add("mo-\tra-\tto-\tri-\ta", "m O@\tV\tt O@\ti:\tV");
result.add("mo-\tra-\tto-\tri-\tum", "m O@\tV\tt O@\ti:\tV m");
result.add("mo-\tra-\tto-\tri-\tums", "m O@\tV\tt O@\ti:\tV m z");
result.add("mo-\tra-\tvi-\tan", "m @r\teI\tv i:\tV n");
result.add("mo-\trai-\tnal", "m @r\teI\tn V l");
result.add("mo-\traine", "m @r\teI n");
result.add("mo-\tral", "m O@\tV l");
result.add("mo-\tral-\tly", "m O@\tV\tl i:");
result.add("mo-\trale", "m @r\t{ l");
result.add("mo-\trales", "m @r\t{ l z");
result.add("mo-\trals", "m O@\tV l z");
result.add("mo-\tran", "m @r\t{ n");
result.add("mo-\tran-\tdi", "m O@\tQ n\td i:");
result.add("mo-\tras-\tses", "m @r\t{\ts V z");
result.add("mo-\trass", "m @r\t{ s");
result.add("mo-\tray", "m @r\teI");
result.add("mo-\trays", "m @r\teI z");
result.add("mo-\tre-\ta", "m O@\ti:\tV");
result.add("mo-\tre-\tna", "m O@\teI\tn V");
result.add("mo-\tre-\tno", "m O@\ti:\tn @U");
result.add("mo-\tre-\tton", "m O@\tV\tt Q n");
result.add("mo-\treau", "m @r\t@U");
result.add("mo-\treen", "m O@\ti: n");
result.add("mo-\trel", "m @r\te l");
result.add("mo-\trel-\tla", "m O@\te\tl V");
result.add("mo-\trel-\tlo", "m @r\te\tl @U");
result.add("mo-\trell", "m O@\tV l");
result.add("mo-\tres", "m O@\teI z");
result.add("mo-\tres-\tco", "m O@\te s\tk @U");
result.add("mo-\trey", "m O@\ti:");
result.add("mo-\tri", "m O@\ti:");
result.add("mo-\tri-\ta", "m O@\ti:\tV");
result.add("mo-\tri-\tar-\tty", "m O@\ti:\tQ@\tt i:");
result.add("mo-\tri-\tbund", "m O@\tI\tb V n d");
result.add("mo-\tri-\tni", "m O@\ti:\tn i:");
result.add("mo-\tri-\tson", "m O@\tI\ts V n");
result.add("mo-\tri-\tta", "m O@\ti:\tt V");
result.add("mo-\tric", "m O@\tI k");
result.add("mo-\trice", "m O@\tI s");
result.add("mo-\trin", "m O@\tI n");
result.add("mo-\tritz", "m O@\tI t s");
result.add("mo-\tro", "m O@\t@U");
result.add("mo-\tro-\tnes", "m O@\t@U\tn e s");
result.add("mo-\tro-\tni", "m @r\t@U\tn i:");
result.add("mo-\troc-\tcan", "m @r\tQ\tk V n");
result.add("mo-\troc-\tcans", "m @r\tQ\tk V n z");
result.add("mo-\troc-\tco", "m @r\tQ\tk @U");
result.add("mo-\tron", "m O@\tQ n");
result.add("mo-\tros", "m O@\t@U z");
result.add("mo-\trose", "m @r\t@U s");
result.add("mo-\tsa-\ti-\tcal", "m @U\tz eI\tI\tk V l");
result.add("mo-\tsa-\tic", "m @U\tz eI\tI k");
result.add("mo-\tsa-\tics", "m @U\tz eI\tI k s");
result.add("mo-\tsel", "m @U\ts V l");
result.add("mo-\tselle", "m @U\tz e l");
result.add("mo-\tser", "m @U\tz @r");
result.add("mo-\tses", "m @U\tz V s");
result.add("mo-\tsey", "m @U\tz i:");
result.add("mo-\tshe", "m @U\tS e");
result.add("mo-\tsher", "m @U\tZ @r");
result.add("mo-\tshe's", "m @U\tS e z");
result.add("mo-\tsier", "m @U\tZ @r");
result.add("mo-\tsul", "m @U\ts V l");
result.add("mo-\tta", "m @U\tt V");
result.add("mo-\ttel", "m @U\tt e l");
result.add("mo-\ttels", "m @U\tt e l z");
result.add("mo-\tten", "m @U\tt V n");
result.add("mo-\tthe-\tring", "m V\tD @r\tI N");
result.add("mo-\tther", "m V\tD @r");
result.add("mo-\tther-\thood", "m V\tD @r\th U d");
result.add("mo-\tther-\tland", "m V\tD @r\tl { n d");
result.add("mo-\tther-\tless", "m V\tD @r\tl V s");
result.add("mo-\tther-\tly", "m V\tD @r\tl i:");
result.add("mo-\tthers", "m V\tD @r z");
result.add("mo-\tther's", "m V\tD @r z");
result.add("mo-\tthers-\tin-\tlaw", "m V\tD @r\tz I n\tl O:");
result.add("mo-\tti-\tli-\tty", "m @U\tt I\tl I\tt i:");
result.add("mo-\tti-\tva-\tted", "m @U\tt I\tv eI\tt V d");
result.add("mo-\tti-\tva-\tting", "m @U\tt I\tv eI\tt I N");
result.add("mo-\tti-\tva-\ttio-\tnal", "m @U\tt I\tv eI\tS V\tn V l");
result.add("mo-\tti-\tva-\ttion", "m @U\tt I\tv eI\tS V n");
result.add("mo-\tti-\tva-\ttions", "m @U\tt I\tv eI\tS V n z");
result.add("mo-\tti-\tva-\ttor", "m @U\tt I\tv eI\tt @r");
result.add("mo-\tti-\tvate", "m @U\tt I\tv eI t");
result.add("mo-\tti-\tvates", "m @U\tt I\tv eI t s");
result.add("mo-\ttif", "m @U\tt i: f");
result.add("mo-\ttifs", "m @U\tt i: f s");
result.add("mo-\ttile", "m @U\tt I l");
result.add("mo-\ttio-\tning", "m @U\tS V\tn I N");
result.add("mo-\ttion", "m @U\tS V n");
result.add("mo-\ttion-\tless", "m @U\tS V n\tl e s");
result.add("mo-\ttioned", "m @U\tS V n d");
result.add("mo-\ttions", "m @U\tS V n z");
result.add("mo-\ttive", "m @U\tt I v");
result.add("mo-\ttives", "m @U\tt I v z");
result.add("mo-\tto", "m @U\tt @U");
result.add("mo-\tto-\tring", "m @U\tt @r\tI N");
result.add("mo-\tto-\trist", "m @U\tt @r\tI s t");
result.add("mo-\tto-\trists", "m @U\tt @r\tI s t s");
result.add("mo-\tto-\trize", "m @U\tt @r\taI z");
result.add("mo-\tto-\trized", "m @U\tt @r\taI z d");
result.add("mo-\tto-\tro-\tla", "m @U\tt @r\t@U\tl V");
result.add("mo-\tto-\tro-\tla's", "m @U\tt @r\t@U\tl V z");
result.add("mo-\tton", "m @U\tt @U n");
result.add("mo-\ttor", "m @U\tt @r");
result.add("mo-\ttor-\tbike", "m @U\tt @r\tb aI k");
result.add("mo-\ttor-\tbikes", "m @U\tt @r\tb aI k s");
result.add("mo-\ttor-\tboat", "m @U\tt @r\tb @U t");
result.add("mo-\ttor-\tcade", "m @U\tt @r\tk eI d");
result.add("mo-\ttor-\tcades", "m @U\tt @r\tk eI d z");
result.add("mo-\ttor-\tcar", "m @U\tt @r\tk Q@");
result.add("mo-\ttor-\tcars", "m @U\tt @r\tk Q@ z");
result.add("mo-\ttor-\tcy-\tc-\tlist", "m @U\tt @r\ts aI\tk V\tl V s t");
result.add("mo-\ttor-\tcy-\tc-\tlists", "m @U\tt @r\ts aI\tk V\tl V s t s");
result.add("mo-\ttor-\tcy-\tcle", "m @U\tt @r\ts aI\tk V l");
result.add("mo-\ttor-\tcy-\tcles", "m @U\tt @r\ts aI\tk V l z");
result.add("mo-\ttors", "m @U\tt @r z");
result.add("mo-\ttor's", "m @U\tt @r z");
result.add("mo-\ttown", "m @U\tt aU n");
result.add("mo-\ttown's", "m @U\tt aU n z");
result.add("mo-\tty-\tka", "m Q\tt aI\tk V");
result.add("mo-\tva-\tble", "m u:\tv V\tb V l");
result.add("mo-\tver", "m u:\tv @r");
result.add("mo-\tvers", "m u:\tv @r z");
result.add("mo-\tvie", "m u:\tv i:");
result.add("mo-\tvie-\tgo-\ter", "m u:\tv i:\tg @U\t@r");
result.add("mo-\tvie-\tgo-\ters", "m u:\tv i:\tg @U\t@r z");
result.add("mo-\tvie-\tgo-\ting", "m u:\tv i:\tg @U\tI N");
result.add("mo-\tvie-\tma-\tker", "m u:\tv i:\tm eI\tk @r");
result.add("mo-\tvie-\tma-\tkers", "m u:\tv i:\tm eI\tk @r z");
result.add("mo-\tvie-\tma-\tking", "m u:\tv i:\tm eI\tk I N");
result.add("mo-\tvies", "m u:\tv i: z");
result.add("mo-\tvie's", "m u:\tv i: z");
result.add("mo-\tving", "m u:\tv I N");
result.add("mo-\tving-\tly", "m u:\tv I N\tl i:");
result.add("mo-\twer", "m @U\t@r");
result.add("mo-\twers", "m @U\t@r z");
result.add("mo-\twing", "m aU\tI N");
result.add("mo-\txie", "m Q k\ts i:");
result.add("mo-\tya", "m OI\tV");
result.add("mo-\tyer", "m OI\t@r");
result.add("mo-\tyers", "m OI\t@r z");
result.add("mo-\tyer's", "m OI\t@r z");
result.add("mo-\tzam-\tbi-\tcan", "m @U\tz { m\tb i:\tk V n");
result.add("mo-\tzam-\tbi-\tcans", "m @U\tz { m\tb i:\tk V n z");
result.add("mo-\tzam-\tbique", "m @U\tz { m\tb i: k");
result.add("mo-\tzar-\tte-\tan", "m @U\tz Q@\tt i:\tV n");
result.add("mo-\tzart", "m @U\tz Q@ t");
result.add("mo-\tzart's", "m @U\tz Q@ t s");
result.add("mo-\tzelle", "m V\tz e l");
result.add("moa-\tning", "m @U\tn I N");
result.add("moan", "m @U n");
result.add("moaned", "m @U n d");
result.add("moans", "m @U n z");
result.add("moat", "m @U t");
result.add("moats", "m @U t s");
result.add("mob", "m Q b");
result.add("mob-\tley", "m @U b\tl i:");
result.add("mob-\tster", "m Q b\ts t @r");
result.add("mob-\tsters", "m Q b\ts t @r z");
result.add("mob-\tster's", "m Q b\ts t @r z");
result.add("mobbed", "m Q b d");
result.add("mobs", "m Q b z");
result.add("mob's", "m Q b z");
result.add("moc-\tca-\tsin", "m Q\tk V\ts I n");
result.add("moc-\tca-\tsins", "m Q\tk V\ts I n z");
result.add("moc-\tke-\try", "m Q\tk @r\ti:");
result.add("moc-\tking", "m Q\tk I N");
result.add("moc-\tking-\tbird", "m Q\tk I N\tb @r d");
result.add("moch", "m Q k");
result.add("mock", "m Q k");
result.add("mocked", "m Q k t");
result.add("mocks", "m Q k s");
result.add("mod", "m O: d");
result.add("mode", "m @U d");
result.add("modes", "m @U d z");
result.add("moe", "m @U");
result.add("moe-\tbi-\tus", "m @U\tb i:\tV s");
result.add("moen", "m @U n");
result.add("moes", "m @U z");
result.add("mof-\tfat", "m Q\tf V t");
result.add("mof-\tfett", "m Q\tf e t");
result.add("mof-\tfit", "m Q\tf I t");
result.add("mof-\tfitt", "m Q\tf I t");
result.add("mohl", "m @U l");
result.add("mohn", "m Q n");
result.add("mohr", "m O@");
result.add("mohs", "m Q s");
result.add("moi", "m w Q");
result.add("moi-\tna", "m OI\tn V");
result.add("moi-\tra", "m OI\tr V");
result.add("moi-\tses", "m OI\tz V z");
result.add("moi-\tshe", "m @U\tS e");
result.add("moines", "m OI n z");
result.add("moir", "m OI r");
result.add("mois-\tten", "m OI\ts V n");
result.add("mois-\ttened", "m OI\ts V n d");
result.add("mois-\ttu-\tri-\tzer", "m OI s\ttS @r\taI\tz @r");
result.add("mois-\tture", "m OI s\ttS @r");
result.add("moise", "m OI z");
result.add("moist", "m OI s t");
result.add("mok", "m Q k");
result.add("mokes", "m @U k s");
result.add("mol", "m O: l");
result.add("mol-\tda-\tble", "m @U l\td V\tb V l");
result.add("mol-\tda-\tvi-\ta", "m @U l\td eI\tv i:\tV");
result.add("mol-\tda-\tvi-\tan", "m @U l\td eI\tv i:\tV n");
result.add("mol-\tded", "m @U l\td V d");
result.add("mol-\tder", "m @U l\td @r");
result.add("mol-\tders", "m @U l\td @r z");
result.add("mol-\tding", "m @U l\td I N");
result.add("mol-\tdings", "m @U l\td I N z");
result.add("mol-\tdo-\tva", "m @U l\td @U\tv V");
result.add("mol-\tdo-\tvan", "m @U l\td @U\tv Q n");
result.add("mol-\tdy", "m @U l\td i:");
result.add("mol-\tlet", "m Q\tl e t");
result.add("mol-\tli-\tfied", "m Q\tl I\tf aI d");
result.add("mol-\tli-\tfy", "m Q\tl I\tf aI");
result.add("mol-\tlie", "m Q\tl i:");
result.add("mol-\tloy", "m Q\tl OI");
result.add("mol-\tlusk", "m Q\tl V s k");
result.add("mol-\tlusks", "m Q\tl V s k s");
result.add("mol-\tly", "m Q\tl i:");
result.add("mol-\tly-\tcod-\tdle", "m Q\tl i:\tk Q\td V l");
result.add("mol-\tly's", "m Q\tl i: z");
result.add("mol-\tnar", "m @U l\tn @r");
result.add("mol-\tten", "m @U l\tt V n");
result.add("mol-\tter", "m @U l\tt @r");
result.add("mol-\tting", "m @U l\tt I N");
result.add("mol-\tton", "m @U l\tt V n");
result.add("mold", "m @U l d");
result.add("molds", "m @U l d z");
result.add("mole", "m @U l");
result.add("mole-\thill", "m @U l\th I l");
result.add("mole-\tlike", "m @U l\tl aI k");
result.add("moles", "m @U l z");
result.add("moll", "m Q l");
result.add("molle", "m Q l");
result.add("molt", "m @U l t");
result.add("mom", "m Q m");
result.add("mom-\tba-\tsa", "m Q m\tb Q\ts V");
result.add("mom-\tma", "m Q\tm V");
result.add("mom-\tmies", "m Q\tm i: z");
result.add("mom-\tmy", "m Q\tm i:");
result.add("mom-\tmy's", "m Q\tm i: z");
result.add("moms", "m Q m z");
result.add("mom's", "m Q m z");
result.add("mon", "m @U n");
result.add("mon-\tday", "m V n\td i:");
result.add("mon-\tdays", "m V n\td i: z");
result.add("mon-\tday's", "m V n\td i: z");
result.add("mon-\tdo", "m Q n\td @U");
result.add("mon-\tdri-\tan", "m Q n\td r i:\tV n");
result.add("mon-\tfort", "m Q n\tf @r t");
result.add("mon-\tge-\tring", "m V N\tg @r\tI N");
result.add("mon-\tgeau", "m V N\tg @U");
result.add("mon-\tger", "m V N\tg @r");
result.add("mon-\tgers", "m V N\tg @r z");
result.add("mon-\tgo-\tli-\ta", "m Q N\tg @U\tl i:\tV");
result.add("mon-\tgo-\tli-\tan", "m Q N\tg @U\tl i:\tV n");
result.add("mon-\tgo-\tloid", "m Q N\tg V\tl OI d");
result.add("mon-\tgol", "m Q N\tg V l");
result.add("mon-\tgols", "m Q N\tg V l z");
result.add("mon-\tgoo-\tses", "m Q N\tg u:\ts V z");
result.add("mon-\tgoose", "m Q N\tg u: s");
result.add("mon-\tkey", "m V N\tk i:");
result.add("mon-\tkey-\ting", "m V N\tk i:\tI N");
result.add("mon-\tkey-\tlike", "m V N\tk i:\tl aI k");
result.add("mon-\tkeys", "m V N\tk i: z");
result.add("mon-\tmouth", "m Q n\tm V T");
result.add("mon-\tmouth's", "m Q n\tm V T s");
result.add("mon-\treal", "m Q n\tr V l");
result.add("mon-\tro", "m Q n\tr @U");
result.add("mon-\tro-\tvi-\ta", "m Q n\tr @U\tv i:\tV");
result.add("mon-\troe", "m V n\tr @U");
result.add("mon-\troe-\tville", "m Q n\tr @U\tv I l");
result.add("mon-\troe's", "m V n\tr @U z");
result.add("mon-\troy", "m Q n\tr OI");
result.add("mon-\tsan-\tto", "m Q n\ts { n\tt @U");
result.add("mon-\tsan-\tto's", "m Q n\ts { n\tt @U z");
result.add("mon-\tsey", "m Q n\tz i:");
result.add("mon-\tsieur", "m V s\tj @r");
result.add("mon-\tsieurs", "m V s\tj @r z");
result.add("mon-\tsig-\tnor", "m Q n\ts i: n\tj @r");
result.add("mon-\tsig-\tnors", "m Q n\ts i: n\tj @r z");
result.add("mon-\tson", "m Q n\ts V n");
result.add("mon-\tsoo-\tnal", "m Q n\ts u:\tn V l");
result.add("mon-\tsoon", "m Q n\ts u: n");
result.add("mon-\tsoons", "m Q n\ts u: n z");
result.add("mon-\tsour", "m Q n\ts @r");
result.add("mon-\tster", "m Q n\ts t @r");
result.add("mon-\tsters", "m Q n\ts t @r z");
result.add("mon-\tstro-\tsi-\tty", "m Q n\ts t r Q\ts I\tt i:");
result.add("mon-\tstrous", "m Q n\ts t r V s");
result.add("mon-\tta-\tgu", "m Q n\tt V g\tj u:");
result.add("mon-\tta-\tgue", "m Q n\tt V g\tj u:");
result.add("mon-\tta-\tgu's", "m Q n\tt V g\tj u: z");
result.add("mon-\tta-\tna", "m Q n\tt {\tn V");
result.add("mon-\tta-\tna-\tri", "m @U n\tt Q\tn Q@\ti:");
result.add("mon-\tta-\tnan", "m Q n\tt {\tn V n");
result.add("mon-\tta-\tnans", "m Q n\tt {\tn V n z");
result.add("mon-\tta-\tna's", "m Q n\tt {\tn V z");
result.add("mon-\tta-\tnez", "m @U n\tt Q\tn e z");
result.add("mon-\ttag-\tna", "m @U n\tt Q g\tn V");
result.add("mon-\ttage", "m Q n\tt Q Z");
result.add("mon-\ttagne", "m V n\tt eI n j");
result.add("mon-\ttal-\tvo", "m @U n\tt Q l\tv @U");
result.add("mon-\tte", "m Q n\tt i:");
result.add("mon-\tte-\tfi-\to-\tre", "m Q n\tt V\tf i:\tO@\ti:");
result.add("mon-\tte-\tgo", "m O: n\tt i:\tg @U");
result.add("mon-\tte-\tneg-\tran", "m Q n\tt V\tn eI g\tr V n");
result.add("mon-\tte-\tneg-\tro", "m Q n\tt V\tn eI g\tr @U");
result.add("mon-\tte-\tneg-\tro's", "m Q n\tt V\tn eI g\tr @U z");
result.add("mon-\tte-\trey", "m Q n\tt @r\teI");
result.add("mon-\tte-\tro", "m Q n\tt e@\t@U");
result.add("mon-\tte-\tvi-\tde-\to", "m Q n\tt V\tv I\td i:\t@U");
result.add("mon-\tte-\tzu-\tma", "m Q n\tt V\tz u:\tm V");
result.add("mon-\tter-\trey", "m Q n\tt @r\teI");
result.add("mon-\ttes", "m Q n\tt i: z");
result.add("mon-\tte's", "m Q n\tt i: z");
result.add("mon-\ttes-\tso-\tri", "m Q n\tt V\ts O@\ti:");
result.add("mon-\tti", "m Q n\tt i:");
result.add("mon-\tti-\tcel-\tlo", "m Q n\tt I\ts e\tl @U");
result.add("mon-\tto-\tya", "m Q n\tt OI\tV");
result.add("mon-\tty", "m O: n\tt i:");
result.add("mon-\tzo-\tnite", "m Q n\tz V\tn aI t");
result.add("monde", "m Q n d");
result.add("mone", "m @U n");
result.add("mong", "m O: N");
result.add("monge", "m Q n dZ");
result.add("monk", "m V N k");
result.add("monks", "m V N k s");
result.add("monk's", "m V N k s");
result.add("mont", "m Q n t");
result.add("mont-\tclair", "m Q n\tt k l e@");
result.add("mont-\tford", "m V n\tt f O@ d");
result.add("mont-\tfort", "m Q n\tt f @r t");
result.add("mont-\tgome-\try", "m Q n\tt g V m\tr i:");
result.add("mont-\tgome-\try's", "m Q n\tt g V m\tr i: z");
result.add("mont-\tjoy", "m Q n\tt dZ OI");
result.add("mont-\tpe-\tli-\ter", "m Q n\tt p i:\tl i:\t@r");
result.add("mont-\tpe-\tli-\ter's", "m Q n\tt p i:\tl i:\t@r z");
result.add("mont-\tre-\tal", "m V n\tt r i:\tO: l");
result.add("mont-\tre-\tal's", "m Q n\tt r i:\tQ l z");
result.add("mont-\trose", "m Q n\tt r @U z");
result.add("mont-\tross", "m @U n\tt r @U s");
result.add("month", "m V n T");
result.add("month-\tlong", "m V n\tT l O: N");
result.add("month-\tly", "m V n\tT l i:");
result.add("months", "m V n T s");
result.add("month's", "m V n T s");
result.add("monts", "m Q n t s");
result.add("moo-\tdy", "m u:\td i:");
result.add("moo-\tdy's", "m u:\td i: z");
result.add("moo-\ters", "m u:\t@r z");
result.add("moo-\tney", "m u:\tn i:");
result.add("moo-\tnie", "m u:\tn i:");
result.add("moo-\tnies", "m u:\tn i: z");
result.add("mood", "m u: d");
result.add("moods", "m u: d z");
result.add("moog", "m u: g");
result.add("mook", "m U k");
result.add("moon", "m u: n");
result.add("moon-\tbeam", "m u: n\tb i: m");
result.add("moon-\tligh-\tting", "m u: n\tl aI\tt I N");
result.add("moon-\tlight", "m u: n\tl aI t");
result.add("moon-\tlike", "m u: n\tl aI k");
result.add("moon-\tlit", "m u: n\tl I t");
result.add("moon-\tshine", "m u: n\tS aI n");
result.add("moon-\tstone", "m u: n\ts t @U n");
result.add("moon-\tstruck", "m u: n\ts t r V k");
result.add("moons", "m u: n z");
result.add("moon's", "m u: n z");
result.add("moose-\thead", "m u: s\th e d");
result.add("moot", "m u: t");
result.add("moots", "m u: t s");
result.add("mop", "m Q p");
result.add("mop-\tboard", "m Q p\tb O@ d");
result.add("mop-\tping", "m Q\tp I N");
result.add("mope", "m @U p");
result.add("mopped", "m Q p t");
result.add("mops", "m Q p s");
result.add("mor", "m O@");
result.add("mor-\tbi-\tdi-\tty", "m O@\tb I\td I\tt i:");
result.add("mor-\tbid", "m O@\tb I d");
result.add("mor-\tdant", "m O@\td V n t");
result.add("mor-\tde-\tcai", "m O@\td V\tk aI");
result.add("mor-\tga", "m O@\tg V");
result.add("mor-\tga-\tna", "m O@\tg {\tn V");
result.add("mor-\tgan", "m O@\tg V n");
result.add("mor-\tgan-\ttown", "m O@\tg V n\tt aU n");
result.add("mor-\tgans", "m O@\tg V n z");
result.add("mor-\tgan's", "m O@\tg V n z");
result.add("mor-\tgen", "m O@\tg V n");
result.add("mor-\tgen-\tstern", "m O@\tg V n\ts t @r n");
result.add("mor-\tgen-\ttha-\tler", "m O@\tg V n\tT V\tl @r");
result.add("mor-\tgen-\tthau", "m O@\tg V n\tT aU");
result.add("mor-\tgun", "m O@\tg V n");
result.add("mor-\tland", "m O@\tl V n d");
result.add("mor-\tley", "m O@\tl i:");
result.add("mor-\tmo-\tni-\tsm", "m O@\tm V\tn I\tz V m");
result.add("mor-\tmon", "m O@\tm V n");
result.add("mor-\tmons", "m O@\tm V n z");
result.add("mor-\tna", "m O@\tn V");
result.add("mor-\tning", "m O@\tn I N");
result.add("mor-\tning-\tstar", "m O@\tn I N\ts t Q@");
result.add("mor-\tnings", "m O@\tn I N z");
result.add("mor-\tning's", "m O@\tn I N z");
result.add("mor-\tphew", "m O@ f\tj u:");
result.add("mor-\tphin", "m O@\tf I n");
result.add("mor-\tphine", "m O@\tf i: n");
result.add("mor-\tphing", "m O@\tf I N");
result.add("mor-\tpho-\tge-\tne-\tsis", "m O@\tf V\tdZ e\tn V\ts V s");
result.add("mor-\tpho-\tlo-\tgi-\tcal", "m O@\tf V\tl Q\tdZ I\tk V l");
result.add("mor-\tpho-\tlo-\tgy", "m O@\tf Q\tl V\tdZ i:");
result.add("mor-\tra", "m O@\tV");
result.add("mor-\trell", "m O@\te l");
result.add("mor-\tri-\tson", "m O@\tI\ts V n");
result.add("mor-\tri-\tson's", "m O@\tI\ts V n z");
result.add("mor-\tri-\ts's", "m O@\tI\ts V z");
result.add("mor-\trie", "m O@\ti:");
result.add("mor-\trill", "m O@\ti: l");
result.add("mor-\tris", "m O@\tI s");
result.add("mor-\tris-\tsey", "m O@\tI\ts i:");
result.add("mor-\tris-\ttown", "m O@\tI s\tt aU n");
result.add("mor-\tris-\tville", "m O@\tI s\tv I l");
result.add("mor-\tris-\tville's", "m O@\tI s\tv I l z");
result.add("mor-\tro", "m O@\t@U");
result.add("mor-\trow", "m Q@\t@U");
result.add("mor-\try", "m O@\ti:");
result.add("mor-\tsel", "m O@\ts V l");
result.add("mor-\tsels", "m O@\ts V l z");
result.add("mor-\tta-\tli-\tty", "m O@\tt {\tl I\tt i:");
result.add("mor-\ttal", "m O@\tt V l");
result.add("mor-\ttal-\tly", "m O@\tt V\tl i:");
result.add("mor-\ttals", "m O@\tt V l z");
result.add("mor-\ttar", "m O@\tt @r");
result.add("mor-\ttars", "m O@\tt @r z");
result.add("mor-\ttem", "m O@\tt V m");
result.add("mor-\tten", "m O@\tt V n");
result.add("mor-\tten-\tsen", "m O@\tt V n\ts V n");
result.add("mor-\tti-\tcian", "m O@\tt I\tS V n");
result.add("mor-\tti-\ter", "m O@\tt i:\t@r");
result.add("mor-\tti-\tfied", "m O@\tt I\tf aI d");
result.add("mor-\tti-\tfy", "m O@\tt I\tf aI");
result.add("mor-\tti-\tmer", "m O@\tt I\tm @r");
result.add("mor-\ttie", "m O@\tt i:");
result.add("mor-\ttis", "m O@\tt I s");
result.add("mor-\tton", "m O@\tt V n");
result.add("mor-\tton's", "m O@\tt V n z");
result.add("mor-\ttu-\ta-\try", "m O@\ttS u:\te@\ti:");
result.add("mor-\tty", "m O@\tt i:");
result.add("mor-\tven", "m O@\tv V n");
result.add("mord", "m O@ d");
result.add("more", "m O@");
result.add("more-\thead", "m O@\th e d");
result.add("more-\thouse", "m O@\th aU s");
result.add("more-\tland", "m O@\tl V n d");
result.add("more-\to-\tver", "m O@\t@U\tv @r");
result.add("morgue", "m O@ g");
result.add("morgues", "m O@ g z");
result.add("morph", "m O@ f");
result.add("morphs", "m O@ f s");
result.add("mor's", "m O@ z");
result.add("morse", "m O@ s");
result.add("mort", "m O@ t");
result.add("mort-\tga-\tges", "m O@\tg V\tdZ V z");
result.add("mort-\tga-\tge's", "m O@\tg I\tdZ V z");
result.add("mort-\tga-\tging", "m O@\tg I\tdZ I N");
result.add("mort-\tgage", "m O@\tg I dZ");
result.add("mort-\tgaged", "m O@\tg I dZ d");
result.add("mos-\tca", "m @U s\tk V");
result.add("mos-\tcow", "m Q s\tk @U");
result.add("mos-\tcow's", "m O: s\tk aU z");
result.add("mos-\tkow", "m Q s\tk @U");
result.add("mos-\tlem", "m Q z\tl V m");
result.add("mos-\tlems", "m Q z\tl V m z");
result.add("mos-\tley", "m @U z\tl i:");
result.add("mos-\tqui-\tto", "m V s\tk i:\tt @U");
result.add("mos-\tqui-\ttoes", "m V s\tk i:\tt @U z");
result.add("mos-\tqui-\ttos", "m V s\tk i:\tt @U z");
result.add("mos-\tsad", "m @U\ts { d");
result.add("mos-\tser", "m O:\ts @r");
result.add("mos-\tses", "m O:\ts V z");
result.add("mos-\tso", "m @U\ts @U");
result.add("mose", "m @U z");
result.add("mose-\tley", "m @U z\tl i:");
result.add("mosh", "m O: S");
result.add("mosk", "m O: s k");
result.add("mosque", "m Q s k");
result.add("mosques", "m Q s k s");
result.add("moss", "m O: s");
result.add("moss-\tberg", "m O: s\tb @r g");
result.add("moss-\tlike", "m O: s\tl aI k");
result.add("moss-\tman", "m O: s\tm V n");
result.add("most", "m @U s t");
result.add("most-\tly", "m @U s\tt l i:");
result.add("mosz-\tkow-\tski", "m Q s\tk aU s\tk i:");
result.add("mot-\tley", "m Q t\tl i:");
result.add("mot-\trin", "m Q t\tr I n");
result.add("mot-\tt-\tling", "m Q\tt V\tl I N");
result.add("mot-\ttled", "m Q\tt V l d");
result.add("mot-\tto", "m Q\tt @U");
result.add("mot-\ttos", "m Q\tt @U z");
result.add("mote", "m @U t");
result.add("motes", "m @U t s");
result.add("moth", "m O: T");
result.add("moth-\tbal-\tling", "m O: T\tb O:\tl I N");
result.add("moth-\tball", "m O: T\tb O: l");
result.add("moth-\tballed", "m O: T\tb O: l d");
result.add("moth-\tballs", "m O: T\tb O: l z");
result.add("moths", "m O: T s");
result.add("mots", "m Q t s");
result.add("mott", "m Q t");
result.add("motte", "m Q t");
result.add("motts", "m Q t s");
result.add("mott's", "m Q t s");
result.add("mou-\tdy", "m aU\td i:");
result.add("mou-\tlin", "m u:\tl { n");
result.add("mou-\tser", "m aU\tz @r");
result.add("mou-\tsers", "m aU\tz @r z");
result.add("mou-\tthing", "m aU\tD I N");
result.add("mou-\tthy", "m aU\tT i:");
result.add("moul", "m aU l");
result.add("moul-\tden", "m @U l\td V n");
result.add("moul-\tder", "m @U l\td @r");
result.add("moul-\tding", "m @U l\td I N");
result.add("moul-\tdings", "m @U l\td I N z");
result.add("moul-\tdy", "m @U l\td i:");
result.add("moul-\tton", "m @U l\tt V n");
result.add("moul-\ttrie", "m @U l\tt r i:");
result.add("mould", "m @U l d");
result.add("moulds", "m @U l d z");
result.add("moun-\ttai-\tneer", "m aU n\tt I\tn I@");
result.add("moun-\ttai-\tnous", "m aU n\tt I\tn V s");
result.add("moun-\ttain", "m aU n\tt @ n");
result.add("moun-\ttain-\tside", "m aU n\tt @ n\ts aI d");
result.add("moun-\ttain-\tsides", "m aU n\tt @ n\ts aI d z");
result.add("moun-\ttain-\ttop", "m aU n\tt @ n\tt Q p");
result.add("moun-\ttain-\ttops", "m aU n\tt @ n\tt Q p s");
result.add("moun-\ttains", "m aU n\tt @ n z");
result.add("moun-\ttain's", "m aU n\tt @ n z");
result.add("moun-\tted", "m aU n\tt V d");
result.add("moun-\tties", "m aU n\tt i: z");
result.add("moun-\tting", "m aU n\tt I N");
result.add("mound", "m aU n d");
result.add("mounds", "m aU n d z");
result.add("mount", "m aU n t");
result.add("mount-\tford", "m u: n\tt f O@ d");
result.add("mount-\tjoy", "m aU n\tt dZ OI");
result.add("mounts", "m aU n t s");
result.add("mour-\tner", "m O@\tn @r");
result.add("mour-\tners", "m O@\tn @r z");
result.add("mour-\tning", "m O@\tn I N");
result.add("mourn", "m O@ n");
result.add("mourn-\tful", "m O@ n\tf V l");
result.add("mourned", "m O@ n d");
result.add("mourns", "m O@ n z");
result.add("mous-\ttache", "m V s\tt { S");
result.add("mouse", "m aU s");
result.add("mouse-\thole", "m aU s\th @U l");
result.add("mouset-\trap", "m aU s\tt r { p");
result.add("mousse", "m u: s");
result.add("mouth", "m aU T");
result.add("mouth-\tful", "m aU T\tf U l");
result.add("mouth-\tpart", "m aU T\tp Q@ t");
result.add("mouth-\tparts", "m aU T\tp Q@ t s");
result.add("mouth-\tpie-\tces", "m aU T\tp i:\ts V z");
result.add("mouth-\tpiece", "m aU T\tp i: s");
result.add("mouth-\twash", "m aU T\tw Q S");
result.add("mouthed", "m aU D d");
result.add("mouths", "m aU D z");
result.add("move", "m u: v");
result.add("move-\tment", "m u: v\tm V n t");
result.add("move-\tments", "m u: v\tm V n t s");
result.add("move-\tment's", "m u: v\tm V n t s");
result.add("moved", "m u: v d");
result.add("moves", "m u: v z");
result.add("mow", "m @U");
result.add("mow-\tbray", "m @U b\tr eI");
result.add("mowed", "m @U d");
result.add("mows", "m aU z");
result.add("moy", "m OI");
result.add("moy-\tna", "m OI\tn V");
result.add("moy-\tna-\than", "m OI\tn V\th { n");
result.add("moyl", "m OI l");
result.add("moyle", "m OI l");
result.add("ms", "m I z");
result.add("m's", "e m z");
result.add("mt", "m aU n t");
result.add("mu", "m u:");
result.add("mu-\tba-\trak", "m u:\tb Q@\tI k");
result.add("mu-\tba-\trak's", "m u:\tb Q@\tI k s");
result.add("mu-\tco-\tsa", "m j u:\tk @U\ts V");
result.add("mu-\tco-\tsal", "m j u:\tk @U\ts V l");
result.add("mu-\tcous", "m j u:\tk V s");
result.add("mu-\tcus", "m j u:\tk V s");
result.add("mu-\tga-\tbe", "m u:\tg Q\tb eI");
result.add("mu-\tga-\tbe's", "m u:\tg Q\tb eI z");
result.add("mu-\tham-\tmad", "m U\th Q\tm V d");
result.add("mu-\tham-\tmad's", "m U\th Q\tm V d z");
result.add("mu-\thar-\tram", "m V\th {\tr V m");
result.add("mu-\ti", "m u:\tI");
result.add("mu-\tja-\the-\tdeen", "m u:\tdZ V\th e\td i: n");
result.add("mu-\tja-\thi-\tdeen", "m u:\tdZ V\th e\td i: n");
result.add("mu-\tlat-\tto", "m V\tl Q\tt @U");
result.add("mu-\tna-\tfo", "m u:\tn Q\tf @U");
result.add("mu-\tni", "m j u:\tn i:");
result.add("mu-\tni-\tci-\tpa-\tli-\tties", "m j u:\tn I\ts I\tp {\tl I\tt i: z");
result.add("mu-\tni-\tci-\tpa-\tli-\tty", "m j u:\tn I\ts I\tp {\tl I\tt i:");
result.add("mu-\tni-\tci-\tpal", "m j u:\tn I\ts I\tp V l");
result.add("mu-\tni-\tci-\tpal-\tly", "m j u:\tn I\ts I\tp V\tl i:");
result.add("mu-\tni-\tci-\tpals", "m j u:\tn I\ts I\tp V l z");
result.add("mu-\tni-\ttion", "m j u:\tn I\tS V n");
result.add("mu-\tni-\ttions", "m j u:\tn I\tS V n z");
result.add("mu-\tnich", "m j u:\tn I k");
result.add("mu-\tnich's", "m j u:\tn I k s");
result.add("mu-\tnis", "m j u:\tn I s");
result.add("mu-\tnoz", "m u: n\tj @U z");
result.add("mu-\tra", "m U@\tV");
result.add("mu-\tral", "m j U@\tV l");
result.add("mu-\trals", "m j U@\tV l z");
result.add("mu-\tsa", "m j u:\ts V");
result.add("mu-\tsc-\tling", "m V\ts V\tl I N");
result.add("mu-\tscle", "m V\ts V l");
result.add("mu-\tscled", "m V\ts V l d");
result.add("mu-\tscles", "m V\ts V l z");
result.add("mu-\tse-\tum", "m j u:\tz i:\tV m");
result.add("mu-\tse-\tums", "m j u:\tz i:\tV m z");
result.add("mu-\tse-\tum's", "m j u:\tz i:\tV m z");
result.add("mu-\tsee", "m j u:\tz i:");
result.add("mu-\tses", "m j u:\tz V z");
result.add("mu-\tsha", "m j u:\tS V");
result.add("mu-\tsher", "m V\tS @r");
result.add("mu-\tshers", "m V\tS @r z");
result.add("mu-\tshy", "m V\tS i:");
result.add("mu-\tsi-\tal", "m j u:\tz i:\tV l");
result.add("mu-\tsi-\tca", "m j u:\tz I\tk V");
result.add("mu-\tsi-\tca-\tli-\tty", "m j u:\tz I\tk {\tl I\tt i:");
result.add("mu-\tsi-\tcal", "m j u:\tz I\tk V l");
result.add("mu-\tsi-\tcals", "m j u:\tz I\tk V l z");
result.add("mu-\tsi-\tcian", "m j u:\tz I\tS V n");
result.add("mu-\tsi-\tcian-\tship", "m j u:\tz I\tS V n\tS I p");
result.add("mu-\tsi-\tcians", "m j u:\tz I\tS V n z");
result.add("mu-\tsi-\tcian's", "m j u:\tz I\tS V n z");
result.add("mu-\tsi-\tco-\tlo-\tgist", "m j u:\tz I\tk Q\tl V\tdZ V s t");
result.add("mu-\tsic", "m j u:\tz I k");
result.add("mu-\tsical-\tly", "m j u:\tz I k\tl i:");
result.add("mu-\tsick", "m j u:\ts I k");
result.add("mu-\tsic's", "m j u:\tz I k s");
result.add("mu-\tsil", "m u:\tz I l");
result.add("mu-\tsing", "m j u:\tz I N");
result.add("mu-\tsings", "m j u:\tz I N z");
result.add("mu-\tstn't", "m V\ts V n t");
result.add("mu-\tta-\tgen", "m j u:\tt V\tdZ e n");
result.add("mu-\tta-\tgens", "m j u:\tt V\tdZ e n z");
result.add("mu-\tta-\tted", "m j u:\tt eI\tt V d");
result.add("mu-\tta-\tting", "m j u:\tt eI\tt I N");
result.add("mu-\tta-\ttion", "m j u:\tt eI\tS V n");
result.add("mu-\tta-\ttions", "m j u:\tt eI\tS V n z");
result.add("mu-\ttant", "m j u:\tt V n t");
result.add("mu-\ttants", "m j u:\tt V n t s");
result.add("mu-\ttate", "m j u:\tt eI t");
result.add("mu-\tted", "m j u:\tt V d");
result.add("mu-\tti", "m u:\tt i:");
result.add("mu-\tti-\tla-\tted", "m j u:\tt I\tl eI\tt I d");
result.add("mu-\tti-\tla-\tting", "m j u:\tt I\tl eI\tt I N");
result.add("mu-\tti-\tla-\ttion", "m j u:\tt I\tl eI\tS V n");
result.add("mu-\tti-\tla-\ttions", "m j u:\tt I\tl eI\tS V n z");
result.add("mu-\tti-\tlate", "m j u:\tt I\tl eI t");
result.add("mu-\tti-\tneer", "m j u:\tt I\tn I@");
result.add("mu-\tti-\tneers", "m j u:\tt I\tn I@ z");
result.add("mu-\tti-\tnied", "m j u:\tt I\tn i: d");
result.add("mu-\tti-\tnies", "m j u:\tt I\tn i: z");
result.add("mu-\tti-\tnous", "m j u:\tt I\tn V s");
result.add("mu-\tti-\tny", "m j u:\tt I\tn i:");
result.add("mu-\tting", "m j u:\tt I N");
result.add("mu-\ttu-\ta-\tli-\tsm", "m j u:\ttS V\tw V\tl I\tz V m");
result.add("mu-\ttu-\ta-\tli-\tty", "m j u:\ttS V\tw {\tl V\tt i:");
result.add("mu-\ttu-\tal", "m j u:\ttS V\tw V l");
result.add("mu-\ttu-\tal-\tly", "m j u:\ttS u:\tV\tl i:");
result.add("mu-\tzak", "m j u:\tz { k");
result.add("mu-\tzi-\to", "m j u:\tz i:\t@U");
result.add("muc-\tking", "m V\tk I N");
result.add("muc-\tkle", "m V\tk V l");
result.add("muc-\tky", "m V\tk i:");
result.add("much", "m V tS");
result.add("muck", "m V k");
result.add("muck-\tra-\tker", "m V k\tr eI\tk @r");
result.add("muck-\tra-\tking", "m V k\tr eI\tk I N");
result.add("muck-\trake", "m V k\tr eI k");
result.add("mud", "m V d");
result.add("mud-\td-\tling", "m V\td V\tl I N");
result.add("mud-\tdi-\ter", "m V\td i:\t@r");
result.add("mud-\tdied", "m V\td i: d");
result.add("mud-\tdle", "m V\td V l");
result.add("mud-\tdle-\thea-\tded", "m V\td V l\th e\td V d");
result.add("mud-\tdled", "m V\td V l d");
result.add("mud-\tdles", "m V\td V l z");
result.add("mud-\tdy", "m V\td i:");
result.add("mud-\tdy-\ting", "m V\td i:\tI N");
result.add("mud-\tra", "m V d\tr V");
result.add("mud-\tslide", "m V d\ts l aI d");
result.add("mud-\tslides", "m V d\ts l aI d z");
result.add("mud-\tslin-\tging", "m V d\ts l I\tN I N");
result.add("mudd", "m V d");
result.add("mudge", "m V dZ");
result.add("muds", "m V d z");
result.add("muel-\tler", "m j u:\tl @r");
result.add("muen-\tchen", "m j u: n\ttS V n");
result.add("muen-\tster", "m j u: n\ts t @r");
result.add("muf-\tfin", "m V\tf I n");
result.add("muf-\tfins", "m V\tf I n z");
result.add("muf-\tfle", "m V\tf V l");
result.add("muf-\tfled", "m V\tf V l d");
result.add("muf-\tfy", "m V\tf i:");
result.add("muff", "m V f");
result.add("muff-\tler", "m V f\tl @r");
result.add("muff-\tlers", "m V f\tl @r z");
result.add("muffs", "m V f s");
result.add("mug", "m V g");
result.add("mug-\tger", "m V\tg @r");
result.add("mug-\tgers", "m V\tg @r z");
result.add("mug-\tging", "m V\tg I N");
result.add("mug-\tgings", "m V\tg I N z");
result.add("mug-\tgy", "m V\tg i:");
result.add("mugged", "m V g d");
result.add("mugs", "m V g z");
result.add("muir", "m j U@");
result.add("muir-\thead", "m j U@\th e d");
result.add("muk-\tluk", "m V k\tl V k");
result.add("mul-\tber-\try", "m V l\tb e@\ti:");
result.add("mul-\tca-\thy", "m V l\tk eI\th i:");
result.add("mul-\tches", "m V l\ttS V z");
result.add("mul-\tching", "m V l\ttS I N");
result.add("mul-\tder", "m V l\td @r");
result.add("mul-\tdoon", "m V l\td u: n");
result.add("mul-\tdrow", "m V l\td r aU");
result.add("mul-\tford", "m V l\tf @r d");
result.add("mul-\thall", "m V l\th V l");
result.add("mul-\thouse", "m V l\th aU s");
result.add("mul-\tlah", "m V\tl V");
result.add("mul-\tlahs", "m V\tl V z");
result.add("mul-\tlan", "m V\tl V n");
result.add("mul-\tlane", "m V\tl V n");
result.add("mul-\tlen", "m V\tl V n");
result.add("mul-\tlens", "m V\tl V n z");
result.add("mul-\tler", "m V\tl @r");
result.add("mul-\tler's", "m V\tl @r z");
result.add("mul-\tlet", "m V\tl V t");
result.add("mul-\tli-\tgan", "m V\tl I\tg V n");
result.add("mul-\tli-\tken", "m V\tl I\tk V n");
result.add("mul-\tlin", "m V\tl I n");
result.add("mul-\tling", "m V\tl I N");
result.add("mul-\tlins", "m V\tl I n z");
result.add("mul-\tloy", "m V\tl OI");
result.add("mul-\tro-\tney", "m V l\tr @U\tn i:");
result.add("mul-\tro-\tney's", "m V l\tr @U\tn i: z");
result.add("mul-\try", "m V l\tr i:");
result.add("mul-\tti", "m V l\tt i:");
result.add("mul-\tti-\tbank", "m V l\tt i:\tb { N k");
result.add("mul-\tti-\tbil-\tlion", "m V l\tt aI\tb I l\tj V n");
result.add("mul-\tti-\tcen-\tter", "m V l\tt i:\ts e n\tt @r");
result.add("mul-\tti-\tco-\tlor", "m V l\tt i:\tk V\tl @r");
result.add("mul-\tti-\tco-\tlored", "m V l\tt i:\tk V\tl @r d");
result.add("mul-\tti-\tcul-\ttu-\tra-\tli-\tsm", "m V l\tt i:\tk V l\ttS @r\tV\tl I\tz V m");
result.add("mul-\tti-\tcul-\ttu-\tral", "m V l\tt i:\tk V l\ttS @r\tV l");
result.add("mul-\tti-\tem-\tplo-\tyer", "m V l\tt i:\tV m\tp l OI\t@r");
result.add("mul-\tti-\teth-\tnic", "m V l\tt i:\te T\tn I k");
result.add("mul-\tti-\tfa-\tce-\tted", "m V l\tt i:\tf {\ts V\tt V d");
result.add("mul-\tti-\tfa-\tmi-\tly", "m V l\tt aI\tf {\tm I\tl i:");
result.add("mul-\tti-\tla-\tte-\tra-\tli-\tsm", "m V l\tt I\tl {\tt @r\tV\tl I\tz V m");
result.add("mul-\tti-\tla-\tte-\tral", "m V l\tt I\tl {\tt @r\tV l");
result.add("mul-\tti-\tla-\tte-\tral-\tly", "m V l\tt I\tl {\tt @r\tV\tl i:");
result.add("mul-\tti-\tla-\tyer", "m V l\tt i:\tl eI\t@r");
result.add("mul-\tti-\tla-\tyered", "m V l\tt i:\tl eI\t@r d");
result.add("mul-\tti-\tle-\tvel", "m V l\tt aI\tl e\tv V l");
result.add("mul-\tti-\tlin-\tgual", "m V l\tt i:\tl I N\tw V l");
result.add("mul-\tti-\tline", "m V l\tt i:\tl aI n");
result.add("mul-\tti-\tme-\tdi-\ta", "m V l\tt i:\tm i:\td i:\tV");
result.add("mul-\tti-\tmil-\tlio-\tnaire", "m V l\tt i:\tm I l\tj V\tn e@");
result.add("mul-\tti-\tmil-\tlio-\tnaires", "m V l\tt i:\tm I l\tj V\tn e@ z");
result.add("mul-\tti-\tmil-\tlion", "m V l\tt aI\tm I l\tj V n");
result.add("mul-\tti-\tna-\ttio-\tnal", "m V l\tt aI\tn {\tS V\tn V l");
result.add("mul-\tti-\tna-\ttio-\tnals", "m V l\tt aI\tn {\tS V\tn V l z");
result.add("mul-\tti-\tpar-\tty", "m V l\tt i:\tp Q@\tt i:");
result.add("mul-\tti-\tpart", "m V l\tt i:\tp Q@ t");
result.add("mul-\tti-\tpla-\tyer", "m V l\tt i: p\tl eI\t@r");
result.add("mul-\tti-\tple", "m V l\tt I\tp V l");
result.add("mul-\tti-\tple-\txer", "m V l\tt i: p\tl e k\ts @r");
result.add("mul-\tti-\tple-\txers", "m V l\tt i: p\tl e k\ts @r z");
result.add("mul-\tti-\tples", "m V l\tt I\tp V l z");
result.add("mul-\tti-\tplex", "m V l\tt i: p\tl e k s");
result.add("mul-\tti-\tpli-\tca-\ttion", "m V l\tt I p\tl I\tk eI\tS V n");
result.add("mul-\tti-\tpli-\tci-\tty", "m V l\tt I p\tl I\ts V\tt i:");
result.add("mul-\tti-\tpli-\ter", "m V l\tt I p\tl aI\t@r");
result.add("mul-\tti-\tplied", "m V l\tt I p\tl aI d");
result.add("mul-\tti-\tplies", "m V l\tt I p\tl aI z");
result.add("mul-\tti-\tply", "m V l\tt I p\tl aI");
result.add("mul-\tti-\tply-\ting", "m V l\tt I p\tl aI\tI N");
result.add("mul-\tti-\tpro-\tces-\tsor", "m V l\tt i: p\tr Q\ts e\ts @r");
result.add("mul-\tti-\tpur-\tpose", "m V l\tt i:\tp @r\tp V s");
result.add("mul-\tti-\tra-\tcial", "m V l\tt aI\tr eI\tS V l");
result.add("mul-\tti-\tstate", "m V l\tt i: s\tt eI t");
result.add("mul-\tti-\ttas-\tking", "m V l\tt i:\tt { s\tk I N");
result.add("mul-\tti-\ttask", "m V l\tt i:\tt { s k");
result.add("mul-\tti-\ttude", "m V l\tt I\tt u: d");
result.add("mul-\tti-\ttudes", "m V l\tt I t\tj u: d z");
result.add("mul-\tti-\tu-\tser", "m V l\tt i:\tj u:\tz @r");
result.add("mul-\tti-\tvalve", "m V l\tt i:\tv { l v");
result.add("mul-\tti-\tyear", "m V l\tt i:\tj i: r");
result.add("mul-\ttis-\tto-\try", "m V l\tt i: s\tt O@\ti:");
result.add("mul-\tvi-\thill", "m V l\tv i:\th I l");
result.add("mulch", "m V l tS");
result.add("mulched", "m V l tS t");
result.add("mule", "m j u: l");
result.add("mules", "m j u: l z");
result.add("mull", "m V l");
result.add("mulled", "m V l d");
result.add("mulls", "m V l z");
result.add("mum", "m V m");
result.add("mum-\tb-\tling", "m V m\tb V\tl I N");
result.add("mum-\tble", "m V m\tb V l");
result.add("mum-\tbled", "m V m\tb V l d");
result.add("mum-\tbles", "m V m\tb V l z");
result.add("mum-\tbo", "m V m\tb @U");
result.add("mum-\tford", "m V m\tf @r d");
result.add("mum-\tmi-\tfi-\tca-\ttion", "m V\tm I\tf I\tk eI\tS V n");
result.add("mum-\tmi-\tfied", "m V\tm I\tf aI d");
result.add("mum-\tmi-\tfy", "m V\tm I\tf aI");
result.add("mum-\tmi-\tfy-\ting", "m V\tm I\tf aI\tI N");
result.add("mum-\tmies", "m V\tm i: z");
result.add("mum-\tmy", "m V\tm i:");
result.add("mum-\tmy's", "m V\tm i: z");
result.add("mum-\tper", "m V m\tp @r");
result.add("mumm", "m V m");
result.add("mumps", "m V m p s");
result.add("mums", "m V m z");
result.add("mun", "m V n");
result.add("mun-\tcey", "m V n\ts i:");
result.add("mun-\tchau-\tsen", "m V n\ttS aU\tz V n");
result.add("mun-\tchies", "m V n\ttS i: z");
result.add("mun-\tching", "m V n\ttS I N");
result.add("mun-\tcie", "m V n\ts i:");
result.add("mun-\tcy", "m V n\ts i:");
result.add("mun-\tdane", "m V n\td eI n");
result.add("mun-\tday", "m V n\td eI");
result.add("mun-\tden", "m V n\td V n");
result.add("mun-\tdi", "m V n\td i:");
result.add("mun-\tdy", "m V n\td i:");
result.add("mun-\tford", "m V n\tf @r d");
result.add("mun-\tford's", "m V n\tf @r d z");
result.add("mun-\tger", "m V\tN @r");
result.add("mun-\tgo", "m V N\tg @U");
result.add("mun-\tro", "m V n\tr @U");
result.add("mun-\troe", "m V n\tr @U");
result.add("mun-\tsell", "m V n\ts V l");
result.add("mun-\tsey", "m V n\tz i:");
result.add("mun-\tson", "m V n\ts V n");
result.add("mun-\tster", "m V n\ts t @r");
result.add("munch", "m V n tS");
result.add("munched", "m V n tS t");
result.add("mund", "m V n d");
result.add("mundt", "m V n t");
result.add("munn", "m V n");
result.add("muns", "m V n z");
result.add("munt", "m V n t");
result.add("muntz", "m V n t s");
result.add("mup-\tpet", "m V\tp V t");
result.add("mup-\tpets", "m V\tp V t s");
result.add("mur-\tchi-\tson", "m @r\ttS I\ts V n");
result.add("mur-\tki-\ter", "m @r\tk i:\t@r");
result.add("mur-\tky", "m @r\tk i:");
result.add("mur-\tmansk", "m @r\tm { n s k");
result.add("mur-\tmu-\tring", "m @r\tm @r\tI N");
result.add("mur-\tmur", "m @r\tm @r");
result.add("mur-\tmured", "m @r\tm @r d");
result.add("mur-\tmurs", "m @r\tm @r z");
result.add("mur-\tphy", "m @r\tf i:");
result.add("mur-\tphys", "m @r\tf i: z");
result.add("mur-\tphy's", "m @r\tf i: z");
result.add("mur-\trah", "m @r\tr Q");
result.add("mur-\tray", "m @r\ti:");
result.add("mur-\tray's", "m @r\ti: z");
result.add("mur-\trelet", "m @r\tl e t");
result.add("mur-\trell", "m O@\tV l");
result.add("mur-\tren", "m @r\tV n");
result.add("mur-\trey", "m @r\ti:");
result.add("mur-\trie-\tta", "m U@\ti:\tt V");
result.add("mur-\trin", "m O@\tI n");
result.add("mur-\trow", "m V\tr @U");
result.add("mur-\try", "m @r\ti:");
result.add("mur-\ttagh", "m @r\tt V g");
result.add("mur-\ttaugh", "m @r\tt O:");
result.add("mur-\ttha", "m @r\tT V");
result.add("mur-\tton", "m @r\tt V n");
result.add("murk", "m @r k");
result.add("murr", "m @r");
result.add("mus-\tca-\ttine", "m V s\tk V\tt i: n");
result.add("mus-\tcat", "m V s\tk { t");
result.add("mus-\tco-\tvite", "m V s\tk V\tv aI t");
result.add("mus-\tco-\tvites", "m V s\tk V\tv aI t s");
result.add("mus-\tcu-\tla-\tture", "m V s\tk j V\tl V\ttS @r");
result.add("mus-\tcu-\tlar", "m V s\tk j V\tl @r");
result.add("mus-\tgrave", "m V s\tg r V v");
result.add("mus-\tgrave's", "m V s\tg r V v z");
result.add("mus-\tke-\tgon", "m V s\tk i:\tg V n");
result.add("mus-\tke-\tteer", "m V s\tk V\tt i: r");
result.add("mus-\tke-\tteers", "m V s\tk V\tt i: r z");
result.add("mus-\tket", "m V s\tk V t");
result.add("mus-\tkie", "m V s\tk i:");
result.add("mus-\tkie's", "m V s\tk i: z");
result.add("mus-\tko-\tgee", "m V s\tk @U\tg i:");
result.add("mus-\tky", "m V s\tk i:");
result.add("mus-\tlim", "m V z\tl I m");
result.add("mus-\tlims", "m V z\tl I m z");
result.add("mus-\tlin", "m V z\tl I n");
result.add("mus-\tsel", "m V\ts V l");
result.add("mus-\tsels", "m V\ts V l z");
result.add("mus-\tser", "m V\ts @r");
result.add("mus-\tso-\tli-\tni", "m u:\ts @U\tl i:\tn i:");
result.add("mus-\tso-\tli-\tni's", "m u:\ts @U\tl i:\tn i: z");
result.add("mus-\tta-\tches", "m V s\tt {\tS V z");
result.add("mus-\tta-\tchi-\to", "m V s\tt {\tS i:\t@U");
result.add("mus-\tta-\tchi-\toed", "m V s\tt {\tS i:\t@U d");
result.add("mus-\tta-\tfa", "m u: s\tt Q\tf V");
result.add("mus-\ttache", "m V s\tt { S");
result.add("mus-\ttached", "m V s\tt { S t");
result.add("mus-\ttang", "m V s\tt { N");
result.add("mus-\ttangs", "m V s\tt { N z");
result.add("mus-\ttard", "m V s\tt @r d");
result.add("mus-\ttards", "m V s\tt @r d z");
result.add("mus-\tte-\tring", "m V s\tt @r\tI N");
result.add("mus-\tter", "m V s\tt @r");
result.add("mus-\ttered", "m V s\tt @r d");
result.add("mus-\tters", "m V s\tt @r z");
result.add("mus-\ttoe", "m V s\tt @U");
result.add("mus-\tt've", "m V s\tt I v");
result.add("mus-\tty", "m V s\tt i:");
result.add("muse", "m j u: z");
result.add("mused", "m j u: z d");
result.add("mush", "m V S");
result.add("mush-\troo-\tming", "m V S\tr U\tm I N");
result.add("mush-\troom", "m V S\tr u: m");
result.add("mush-\troomed", "m V S\tr U m d");
result.add("mush-\trooms", "m V S\tr u: m z");
result.add("musk", "m V s k");
result.add("musk-\tme-\tlon", "m V s\tk m e\tl V n");
result.add("musk-\trat", "m V s\tk r { t");
result.add("musk-\trats", "m V s\tk r { t z");
result.add("muss-\tman", "m V s\tm V n");
result.add("must", "m V s t");
result.add("mut-\tte-\tring", "m V\tt @r\tI N");
result.add("mut-\tte-\trings", "m V\tt @r\tI N z");
result.add("mut-\tter", "m V\tt @r");
result.add("mut-\ttered", "m V\tt @r d");
result.add("mut-\tters", "m V\tt @r z");
result.add("mut-\tton", "m V\tt V n");
result.add("mutch", "m V tS");
result.add("mute", "m j u: t");
result.add("muth", "m u: T");
result.add("mutt", "m V t");
result.add("mutts", "m V t s");
result.add("mutz", "m V t s");
result.add("muz-\tzle", "m V\tz V l");
result.add("muz-\tzled", "m V\tz V l d");
result.add("muz-\tzles", "m V\tz V l z");
result.add("muz-\tzy", "m V\tz i:");
result.add("mwan-\tza", "m w Q n\tz V");
result.add("my", "m aI");
result.add("my-\tce-\tnae-\tan", "m aI\ts V\tn i:\tV n");
result.add("my-\tco-\tlo-\tgy", "m aI\tk Q\tl V\tdZ i:");
result.add("my-\te-\tlin", "m aI\tV\tl I n");
result.add("my-\ter", "m aI\t@r");
result.add("my-\ters", "m aI\t@r z");
result.add("my-\tlan", "m aI\tl V n");
result.add("my-\tlar", "m aI\tl Q@");
result.add("my-\tna", "m aI\tn V");
result.add("my-\to-\tcar-\tdi-\tal", "m aI\tV\tk Q@\td i:\tV l");
result.add("my-\to-\tcar-\tdi-\tum", "m aI\tV\tk Q@\td i:\tV m");
result.add("my-\to-\tpi-\ta", "m aI\t@U\tp i:\tV");
result.add("my-\to-\tpic", "m aI\tQ\tp I k");
result.add("my-\to-\tsin", "m aI\tV\ts V n");
result.add("my-\tra", "m aI\tr V");
result.add("my-\tri-\tad", "m I@\ti:\tV d");
result.add("my-\tri-\tam", "m I@\ti:\tV m");
result.add("my-\tril-\tla", "m I@\tI\tl V");
result.add("my-\tron", "m aI\tr V n");
result.add("my-\tself", "m aI\ts e l f");
result.add("my-\tthi-\tcal", "m I\tT I\tk V l");
result.add("my-\tthic", "m I\tT I k");
result.add("my-\ttho-\tlo-\tgi-\tcal", "m I\tT V\tl Q\tdZ I\tk V l");
result.add("my-\ttho-\tlo-\tgy", "m V\tT Q\tl V\tdZ i:");
result.add("myan-\tmar", "m j Q n\tm Q@");
result.add("myles", "m aI l z");
result.add("myr-\tlene", "m I@\tl i: n");
result.add("myr-\tmi-\tdon", "m @r\tm I\td V n");
result.add("myr-\tmi-\tdons", "m @r\tm I\td V n z");
result.add("myr-\tna", "m @r\tn V");
result.add("myr-\tta", "m @r\tt V");
result.add("myr-\ttia", "m @r\tS V");
result.add("myr-\ttice", "m I@\tt I s");
result.add("myr-\ttle", "m @r\tt V l");
result.add("myr-\ttles", "m @r\tt V l z");
result.add("myrrh", "m @r");
result.add("mys-\tte-\tri-\tous", "m I s\tt I@\ti:\tV s");
result.add("mys-\tte-\tri-\tous-\tly", "m I s\tt I@\ti:\tV s\tl i:");
result.add("mys-\tte-\tries", "m I s\tt @r\ti: z");
result.add("mys-\tte-\try", "m I s\tt @r\ti:");
result.add("mys-\tti-\tcal", "m I s\tt I\tk V l");
result.add("mys-\tti-\tci-\tsm", "m I s\tt I\ts I\tz V m");
result.add("mys-\tti-\tfied", "m I s\tt I\tf aI d");
result.add("mys-\tti-\tfies", "m I s\tt I\tf aI z");
result.add("mys-\tti-\tfy", "m I s\tt I\tf aI");
result.add("mys-\tti-\tfy-\ting", "m I s\tt I\tf aI\tI N");
result.add("mys-\ttic", "m I s\tt I k");
result.add("mys-\ttics", "m I s\tt I k s");
result.add("mys-\ttique", "m I s\tt i: k");
result.add("myth", "m I T");
result.add("n", "e n");
result.add("n-\ti-\tc", "e\tn aI\ts i:");
result.add("n-\tp-\tr", "e n\tp i:\tQ@");
result.add("n.", "e n");
result.add("na", "n Q");
result.add("na-\tbis-\tco", "n V\tb I s\tk @U");
result.add("na-\tbis-\tco's", "n V\tb I s\tk @U z");
result.add("na-\tbo-\tkov", "n {\tb V\tk Q v");
result.add("na-\tbo-\tkov's", "n {\tb V\tk Q v z");
result.add("na-\tbob", "n {\tb Q b");
result.add("na-\tbobs", "n {\tb Q b z");
result.add("na-\tcho", "n {\ttS @U");
result.add("na-\tchos", "n Q\ttS @U z");
result.add("na-\td-\tler", "n eI\td V\tl @r");
result.add("na-\tda", "n Q\td V");
result.add("na-\tdeau", "n V\td @U");
result.add("na-\tder", "n eI\td @r");
result.add("na-\tder's", "n eI\td @r z");
result.add("na-\tdia", "n { d\tj V");
result.add("na-\tdine", "n V\td i: n");
result.add("na-\tdir", "n eI\td @r");
result.add("na-\tga-\tno", "n Q\tg Q\tn @U");
result.add("na-\tga-\tsa-\tki", "n Q\tg Q\ts Q\tk i:");
result.add("na-\tgel", "n eI\tg V l");
result.add("na-\tgi", "n Q\tg i:");
result.add("na-\tgle", "n eI\tg V l");
result.add("na-\tgo-\tya", "n V\tg OI\tV");
result.add("na-\tgy", "n eI\tg i:");
result.add("na-\thum", "n {\th V m");
result.add("na-\ti-\tve-\tte", "n Q\ti:\tv V\tt eI");
result.add("na-\tish", "n Q\tI S");
result.add("na-\tive", "n aI\ti: v");
result.add("na-\tive-\tly", "n Q\ti: v\tl i:");
result.add("na-\tka-\tmu-\tra", "n Q\tk Q\tm U@\tV");
result.add("na-\tka-\tshi-\tma", "n Q\tk Q\tS i:\tm V");
result.add("na-\tka-\tya-\tma", "n Q\tk Q\tj Q\tm V");
result.add("na-\tked", "n eI\tk V d");
result.add("na-\tma-\tra", "n V\tm Q@\tV");
result.add("na-\tmer", "n eI\tm @r");
result.add("na-\tmi-\tbi-\ta", "n V\tm I\tb i:\tV");
result.add("na-\tmi-\tbi-\tan", "n V\tm I\tb i:\tV n");
result.add("na-\tmi-\tbi-\ta's", "n V\tm I\tb i:\tV z");
result.add("na-\tming", "n eI\tm I N");
result.add("na-\tna", "n {\tn V");
result.add("na-\tnette", "n V\tn e t");
result.add("na-\tno-\tgram", "n {\tn @U g\tr { m");
result.add("na-\tno-\tgrams", "n {\tn @U g\tr { m z");
result.add("na-\tno-\tse-\tcond", "n {\tn @U\ts e\tk V n d");
result.add("na-\tno-\tse-\tconds", "n {\tn @U\ts e\tk V n d z");
result.add("na-\to-\tma", "n Q\t@U\tm V");
result.add("na-\to-\tmi", "n eI\t@U\tm i:");
result.add("na-\tpa", "n {\tp V");
result.add("na-\tpalm", "n eI\tp Q m");
result.add("na-\tpe-\ta", "n Q\tp i:\tV");
result.add("na-\tper-\tville", "n eI\tp @r\tv I l");
result.add("na-\tpi-\ter", "n eI\tp i:\t@r");
result.add("na-\tples", "n eI\tp V l z");
result.add("na-\tpo-\tle-\to-\tnic", "n V\tp @U\tl i:\tQ\tn I k");
result.add("na-\tpo-\tle-\ton", "n V\tp @U\tl i:\tV n");
result.add("na-\tpo-\tle-\ton's", "n V\tp @U\tl i:\tV n z");
result.add("na-\tpo-\tli", "n {\tp V\tl i:");
result.add("na-\tquin", "n { k\tw I n");
result.add("na-\tra", "n Q@\tV");
result.add("na-\tra-\tyan", "n Q@\tQ\tj Q n");
result.add("na-\try", "n e@\ti:");
result.add("na-\tsa", "n {\ts V");
result.add("na-\tsal", "n eI\tz V l");
result.add("na-\tsal-\tly", "n eI\tz V\tl i:");
result.add("na-\tsh's", "n {\tS V z");
result.add("na-\tshu-\ta", "n {\tS u:\tV");
result.add("na-\tshu-\ta's", "n {\tS u:\tV z");
result.add("na-\tso", "n Q\ts @U");
result.add("na-\tso-\tpha-\trynx", "n V\ts Q\tf @r\tI N k s");
result.add("na-\tson", "n {\ts V n");
result.add("na-\tta", "n Q\tt V");
result.add("na-\tta-\tla", "n Q\tt Q\tl V");
result.add("na-\tta-\tle", "n Q\tt Q\tl i:");
result.add("na-\tta-\tlia", "n V\tt Q l\tj V");
result.add("na-\tta-\tlie", "n {\tt V\tl i:");
result.add("na-\tta-\tsha", "n V\tt Q\tS V");
result.add("na-\tta-\tsha's", "n V\tt Q\tS V z");
result.add("na-\ttal", "n eI\tt V l");
result.add("na-\ttha-\tli-\ta", "n V\tT {\tl i:\tV");
result.add("na-\ttha-\tlie", "n {\tt V\tl i:");
result.add("na-\ttha-\tnael", "n {\tT V\tn eI l");
result.add("na-\ttha-\tniel", "n V\tT { n\tj V l");
result.add("na-\tthan", "n eI\tT V n");
result.add("na-\tthan-\tson", "n {\tT V n\ts V n");
result.add("na-\tthan's", "n eI\tT V n z");
result.add("na-\tti-\tvi-\tdad", "n V\tt I\tv I\td Q d");
result.add("na-\tti-\tvi-\tsm", "n eI\tt I\tv I\tz V m");
result.add("na-\tti-\tvi-\tty", "n V\tt I\tv I\tt i:");
result.add("na-\tti-\tvist", "n eI\tt I\tv I s t");
result.add("na-\ttick", "n eI\tt I k");
result.add("na-\ttio-\tna-\tli-\tsm", "n {\tS V\tn V\tl I\tz V m");
result.add("na-\ttio-\tna-\tli-\tties", "n {\tS V\tn {\tl I\tt i: z");
result.add("na-\ttio-\tna-\tli-\tty", "n {\tS V\tn {\tl I\tt i:");
result.add("na-\ttio-\tna-\tli-\tza-\ttion", "n {\tS V\tn V\tl I\tz eI\tS V n");
result.add("na-\ttio-\tna-\tli-\tza-\ttions", "n {\tS V\tn V\tl I\tz eI\tS V n z");
result.add("na-\ttio-\tna-\tli-\tzing", "n {\tS V\tn V\tl aI\tz I N");
result.add("na-\ttio-\tna-\tlis-\ttic", "n {\tS V\tn V\tl I s\tt I k");
result.add("na-\ttio-\tna-\tlist", "n {\tS V\tn V\tl I s t");
result.add("na-\ttio-\tna-\tlists", "n {\tS V\tn V\tl I s t s");
result.add("na-\ttio-\tna-\tlize", "n {\tS V\tn V\tl aI z");
result.add("na-\ttio-\tna-\tlized", "n {\tS V\tn V\tl aI z d");
result.add("na-\ttio-\tnal", "n {\tS V\tn V l");
result.add("na-\ttio-\tnal-\tly", "n {\tS V\tn V\tl i:");
result.add("na-\ttio-\tnals", "n {\tS V\tn V l z");
result.add("na-\ttio-\tnal's", "n {\tS V\tn V l z");
result.add("na-\ttion", "n eI\tS V n");
result.add("na-\ttion-\thood", "n eI\tS V n\th U d");
result.add("na-\ttion-\twide", "n eI\tS V n\tw aI d");
result.add("na-\ttion-\twide's", "n eI\tS V n\tw aI d z");
result.add("na-\ttions", "n eI\tS V n z");
result.add("na-\ttion's", "n eI\tS V n z");
result.add("na-\ttive", "n eI\tt I v");
result.add("na-\ttives", "n eI\tt I v z");
result.add("na-\tto", "n eI\tt @U");
result.add("na-\tto's", "n eI\tt @U z");
result.add("na-\ttu-\tra-\tli-\tsm", "n {\ttS @r\tV\tl I\tz V m");
result.add("na-\ttu-\tra-\tli-\tza-\ttion", "n {\ttS @r\tV\tl V\tz eI\tS V n");
result.add("na-\ttu-\tra-\tlis-\ttic", "n {\ttS @r\tV\tl I s\tt I k");
result.add("na-\ttu-\tra-\tlist", "n {\ttS @r\tV\tl V s t");
result.add("na-\ttu-\tra-\tlists", "n {\ttS @r\tV\tl V s t s");
result.add("na-\ttu-\tra-\tlize", "n {\ttS @r\tV\tl aI z");
result.add("na-\ttu-\tra-\tlized", "n {\ttS @r\tV\tl aI z d");
result.add("na-\ttu-\tral", "n {\ttS @r\tV l");
result.add("na-\ttu-\tral-\tly", "n {\ttS @r\tV\tl i:");
result.add("na-\ttu-\tral's", "n {\ttS @r\tV l z");
result.add("na-\tture", "n eI\ttS @r");
result.add("na-\ttured", "n eI\ttS @r d");
result.add("na-\ttured-\tly", "n eI\ttS @r d\tl i:");
result.add("na-\ttures", "n eI\ttS @r z");
result.add("na-\tture's", "n eI\ttS @r z");
result.add("na-\tvi-\tga-\tted", "n {\tv I\tg eI\tt V d");
result.add("na-\tvi-\tga-\tting", "n {\tv I\tg eI\tt I N");
result.add("na-\tvi-\tga-\ttio-\tnal", "n {\tv I\tg eI\tS V\tn V l");
result.add("na-\tvi-\tga-\ttion", "n {\tv I\tg eI\tS V n");
result.add("na-\tvi-\tga-\ttor", "n {\tv I\tg eI\tt @r");
result.add("na-\tvi-\tga-\ttors", "n {\tv I\tg eI\tt @r z");
result.add("na-\tvi-\tgate", "n {\tv I\tg eI t");
result.add("na-\tvis", "n Q\tv I s");
result.add("na-\tvy", "n eI\tv i:");
result.add("na-\tvy's", "n eI\tv i: z");
result.add("na-\tza-\treth", "n {\tz V\tr V T");
result.add("na-\tza-\tri-\to", "n Q\tz Q@\ti:\t@U");
result.add("na-\tzar", "n Q\tz Q@");
result.add("na-\tzi", "n Q t\ts i:");
result.add("na-\tzi-\tsm", "n Q\tz I\tz V m");
result.add("na-\tzis", "n Q t\ts i: z");
result.add("na-\tzi's", "n Q t\ts i: z");
result.add("naas", "n Q z");
result.add("nab", "n { b");
result.add("nab-\tbing", "n {\tb I N");
result.add("nab-\tlus", "n { b\tl V s");
result.add("nabb", "n { b");
result.add("nabbed", "n { b d");
result.add("nace", "n eI s");
result.add("nad", "n { d");
result.add("nad-\tja", "n { d\tj V");
result.add("naeve", "n i: v");
result.add("naf-\tta", "n { f\tt V");
result.add("naff", "n { f");
result.add("nag", "n { g");
result.add("nag-\tging", "n {\tg I N");
result.add("nagged", "n { g d");
result.add("nags", "n { g z");
result.add("nah", "n Q");
result.add("nai-\tling", "n eI\tl I N");
result.add("nai-\tra", "n e@\tV");
result.add("nai-\tro-\tbi", "n aI\tr @U\tb i:");
result.add("naik", "n eI k");
result.add("nail", "n eI l");
result.add("nailed", "n eI l d");
result.add("nails", "n eI l z");
result.add("nair", "n e@");
result.add("nairn", "n e@ n");
result.add("nais-\tmith", "n eI z\tm I T");
result.add("nal-\tdo", "n Q l\td @U");
result.add("nal-\tly", "n {\tl i:");
result.add("nale", "n eI l");
result.add("nam", "n { m");
result.add("name", "n eI m");
result.add("name-\tless", "n eI m\tl V s");
result.add("name-\tly", "n eI m\tl i:");
result.add("name-\tplate", "n eI m\tp l eI t");
result.add("name-\tplates", "n eI m\tp l eI t s");
result.add("name-\tsake", "n eI m\ts eI k");
result.add("named", "n eI m d");
result.add("names", "n eI m z");
result.add("name's", "n eI m z");
result.add("nan", "n { n");
result.add("nan-\tchang", "n { n\ttS { N");
result.add("nan-\tcy", "n { n\ts i:");
result.add("nan-\tcy's", "n { n\ts i: z");
result.add("nan-\tdi", "n Q n\td i:");
result.add("nan-\tjing", "n { n\tdZ I N");
result.add("nan-\tking", "n { N\tk I N");
result.add("nan-\tna", "n {\tn V");
result.add("nan-\tni", "n {\tn i:");
result.add("nan-\tnies", "n {\tn i: z");
result.add("nan-\tny", "n {\tn i:");
result.add("nan-\ttuc-\tket", "n { n\tt V\tk V t");
result.add("nan-\ttuc-\tket's", "n { n\tt V\tk V t s");
result.add("nance", "n { n s");
result.add("nang", "n { N");
result.add("nan's", "n { n z");
result.add("nantes", "n { n t s");
result.add("nantz", "n { n t s");
result.add("nap", "n { p");
result.add("nap-\tkin", "n { p\tk I n");
result.add("nap-\tkins", "n { p\tk I n z");
result.add("nap-\tpa", "n {\tp V");
result.add("nap-\tper", "n {\tp @r");
result.add("nap-\tpi-\ter", "n {\tp i:\t@r");
result.add("nap-\tping", "n {\tp I N");
result.add("nap-\tro-\tsyn", "n { p\tr V\ts I n");
result.add("naph-\ttha", "n { f\tT V");
result.add("naph-\ttha-\tlene", "n { f\tT V\tl i: n");
result.add("napped", "n { p t");
result.add("naps", "n { p s");
result.add("nar-\tcis-\tsi-\tsm", "n Q@\ts V\ts I\tz V m");
result.add("nar-\tcis-\tsis-\ttic", "n Q@\ts I\ts I s\tt I k");
result.add("nar-\tcis-\tsus", "n Q@\ts I\ts V s");
result.add("nar-\tco", "n Q@\tk @U");
result.add("nar-\tco-\tlep-\tsy", "n Q@\tk V\tl e p\ts i:");
result.add("nar-\tco-\ttic", "n Q@\tk Q\tt I k");
result.add("nar-\tco-\ttics", "n Q@\tk Q\tt I k s");
result.add("nar-\tcos", "n Q@\tk @U s");
result.add("nar-\tda", "n Q@\td V");
result.add("nar-\tdo", "n Q@\td @U");
result.add("nar-\tra-\tgan-\tsett", "n e@\tV\tg { n\ts V t");
result.add("nar-\tra-\tted", "n e@\teI\tt V d");
result.add("nar-\tra-\ttion", "n e@\teI\tS V n");
result.add("nar-\tra-\ttive", "n e@\tV\tt I v");
result.add("nar-\tra-\ttives", "n e@\tV\tt I v z");
result.add("nar-\tra-\ttor", "n e@\teI\tt @r");
result.add("nar-\tra-\ttors", "n e@\teI\tt @r z");
result.add("nar-\trate", "n e@\teI t");
result.add("nar-\trates", "n e@\teI t s");
result.add("nar-\tro-\twer", "n e@\t@U\t@r");
result.add("nar-\tro-\twest", "n e@\t@U\tV s t");
result.add("nar-\tro-\twing", "n e@\t@U\tI N");
result.add("nar-\trow", "n e@\t@U");
result.add("nar-\trow-\tly", "n e@\t@U\tl i:");
result.add("nar-\trow-\tness", "n e@\t@U\tn V s");
result.add("nar-\trowed", "n e@\t@U d");
result.add("nar-\trows", "n e@\t@U z");
result.add("nar-\tva-\tez", "n Q@\tv Q\te z");
result.add("narc", "n Q@ k");
result.add("nard", "n Q@ d");
result.add("nares", "n { r z");
result.add("nas-\tby", "n { s\tb i:");
result.add("nas-\tca", "n Q s\tk V");
result.add("nas-\tcar", "n { s\tk Q@");
result.add("nas-\tcent", "n eI\ts V n t");
result.add("nas-\tdaq", "n { z\td { k");
result.add("nas-\tsau", "n {\ts O:");
result.add("nas-\tser", "n {\ts @r");
result.add("nas-\tti-\ter", "n { s\tt i:\t@r");
result.add("nas-\tti-\test", "n { s\tt i:\tV s t");
result.add("nas-\tti-\tness", "n { s\tt i:\tn V s");
result.add("nas-\tty", "n { s\tt i:");
result.add("nash", "n { S");
result.add("nash-\tville", "n { S\tv I l");
result.add("nash-\tville's", "n { S\tv I l z");
result.add("nass", "n { s");
result.add("nast", "n { s t");
result.add("nast's", "n { s t s");
result.add("nat", "n { t");
result.add("nat-\tchez", "n {\ttS e z");
result.add("nat-\tte-\tring", "n {\tt @r\tI N");
result.add("nat-\tter", "n {\tt @r");
result.add("nat-\tti-\tly", "n {\tt I\tl i:");
result.add("nat-\ttie", "n {\tt i:");
result.add("nat-\tty", "n {\tt i:");
result.add("nate", "n eI t");
result.add("nath", "n { T");
result.add("nathe", "n eI D");
result.add("nats", "n { t s");
result.add("nau", "n @U");
result.add("nau-\tga-\ttuck", "n O:\tg V\tt V k");
result.add("nau-\tmann", "n aU\tm V n");
result.add("nau-\tse-\ta", "n O:\tz i:\tV");
result.add("nau-\tse-\ta-\tted", "n O:\tz i:\teI\tt V d");
result.add("nau-\tse-\ta-\tting", "n O:\tZ i:\teI\tt I N");
result.add("nau-\tse-\tate", "n O:\tz i:\teI t");
result.add("nau-\tseam", "n aU\tz i: m");
result.add("nau-\tseous", "n O:\tS V s");
result.add("nau-\tti-\tcal", "n O:\tt I\tk V l");
result.add("naugh-\tty", "n O:\tt i:");
result.add("naught", "n O: t");
result.add("nav-\tra-\tti-\tlo-\tva", "n { v\tr {\tt I\tl @U\tv V");
result.add("nav-\tra-\tti-\tlo-\tva's", "n { v\tr {\tt I\tl @U\tv V z");
result.add("naw", "n Q");
result.add("naw-\troc-\tki", "n Q v\tr @U t\ts k i:");
result.add("nay", "n eI");
result.add("nay-\tlor", "n eI\tl @r");
result.add("nay-\tsa-\tyer", "n eI\ts eI\t@r");
result.add("nay-\tsa-\tyers", "n eI\ts eI\t@r z");
result.add("nays", "n eI z");
result.add("n'dja-\tme-\tna", "n d j V\tm i:\tn V");
result.add("ne", "n i:");
result.add("ne-\ta-\tpo-\tli-\ttan", "n i:\tV\tp Q\tl V\tt V n");
result.add("ne-\tan-\tder-\tthal", "n i:\t{ n\td @r\tT O: l");
result.add("ne-\tan-\tder-\tthals", "n i:\t{ n\td @r\tT O: l z");
result.add("ne-\tbel", "n e\tb V l");
result.add("ne-\tbu-\tla", "n e b\tj V\tl V");
result.add("ne-\tbu-\tlous", "n e b\tj V\tl V s");
result.add("ne-\tces-\tsa-\tri-\tly", "n e\ts V\ts e@\tV\tl i:");
result.add("ne-\tces-\tsa-\try", "n e\ts V\ts e@\ti:");
result.add("ne-\tces-\tsi-\tta-\tted", "n V\ts e\ts V\tt eI\tt V d");
result.add("ne-\tces-\tsi-\tta-\tting", "n V\ts e\ts V\tt eI\tt I N");
result.add("ne-\tces-\tsi-\ttate", "n V\ts e\ts V\tt eI t");
result.add("ne-\tces-\tsi-\ttates", "n V\ts e\ts V\tt eI t s");
result.add("ne-\tces-\tsi-\tties", "n V\ts e\ts V\tt i: z");
result.add("ne-\tces-\tsi-\tty", "n V\ts e\ts V\tt i:");
result.add("ne-\tda", "n eI\td V");
result.add("ne-\tder-\tland", "n e\td @r\tl V n d");
result.add("ne-\tfa-\tri-\tous", "n V\tf e@\ti:\tV s");
result.add("ne-\tga-\tra", "n e\tg Q@\tV");
result.add("ne-\tga-\tted", "n V\tg eI\tt V d");
result.add("ne-\tga-\tti-\tvi-\tsm", "n e\tg V\tt I\tv I\tz V m");
result.add("ne-\tga-\tti-\tvi-\tty", "n e\tg V\tt I\tv V\tt i:");
result.add("ne-\tga-\tting", "n V\tg eI\tt I N");
result.add("ne-\tga-\ttion", "n V\tg eI\tS V n");
result.add("ne-\tga-\ttive", "n e\tg V\tt I v");
result.add("ne-\tga-\ttive-\tly", "n e\tg V\tt I v\tl i:");
result.add("ne-\tga-\ttives", "n e\tg V\tt I v z");
result.add("ne-\tga-\ttron", "n e\tg V t\tr Q n");
result.add("ne-\tga-\ttrons", "n e\tg V t\tr Q n z");
result.add("ne-\tgate", "n I\tg eI t");
result.add("ne-\tgates", "n V\tg eI t s");
result.add("ne-\tgev", "n e\tg e v");
result.add("ne-\tgo-\tti-\ta-\tted", "n V\tg @U\tS i:\teI\tt V d");
result.add("ne-\tgo-\tti-\ta-\tting", "n V\tg @U\tS i:\teI\tt I N");
result.add("ne-\tgo-\tti-\ta-\ttion", "n V\tg @U\tS i:\teI\tS V n");
result.add("ne-\tgo-\tti-\ta-\ttions", "n V\tg @U\tS i:\teI\tS V n z");
result.add("ne-\tgo-\tti-\ta-\ttor", "n V\tg @U\tS i:\teI\tt @r");
result.add("ne-\tgo-\tti-\ta-\ttors", "n V\tg @U\tS i:\teI\tt @r z");
result.add("ne-\tgo-\tti-\ta-\ttor's", "n V\tg @U\tS i:\teI\tt @r z");
result.add("ne-\tgo-\tti-\tate", "n V\tg @U\tS i:\teI t");
result.add("ne-\tgo-\tti-\tates", "n I\tg @U\tS i:\teI t s");
result.add("ne-\tgo-\ttia-\tble", "n V\tg @U\tS V\tb V l");
result.add("ne-\tgus", "n i:\tg V s");
result.add("ne-\the-\tmi-\tah", "n i:\tV\tm aI\tV");
result.add("ne-\tkoo-\tsa", "n I\tk u:\ts V");
result.add("ne-\tla", "n e\tl V");
result.add("ne-\tli-\ta", "n e\tl i:\tV");
result.add("ne-\tma-\ttode", "n e\tm V\tt @U d");
result.add("ne-\tma-\ttodes", "n e\tm V\tt @U d z");
result.add("ne-\tme-\tan", "n i:\tm i:\tV n");
result.add("ne-\tme-\tsis", "n e\tm V\ts V s");
result.add("ne-\tmo", "n e\tm @U");
result.add("ne-\tmos", "n i:\tm @U z");
result.add("ne-\tmours", "n V\tm O@ z");
result.add("ne-\to", "n i:\t@U");
result.add("ne-\to-\tclas-\tsi-\tcal", "n i:\t@U k\tl {\ts I\tk V l");
result.add("ne-\to-\tclas-\tsic", "n i:\t@U k\tl {\ts I k");
result.add("ne-\to-\tcon-\tser-\tva-\ttive", "n i:\t@U\tk V n\ts @r\tv V\tt I v");
result.add("ne-\to-\tcon-\tser-\tva-\ttives", "n i:\t@U\tk V n\ts @r\tv V\tt I v z");
result.add("ne-\to-\tla", "n i:\tQ\tl V");
result.add("ne-\to-\tli-\tbe-\tral", "n i:\t@U\tl I\tb @r\tV l");
result.add("ne-\to-\tli-\tbe-\trals", "n i:\t@U\tl I\tb @r\tV l z");
result.add("ne-\to-\tma", "n eI\t@U\tm V");
result.add("ne-\to-\tna-\ttal", "n i:\t@U\tn eI\tt V l");
result.add("ne-\to-\tphyte", "n i:\tV\tf aI t");
result.add("ne-\to-\tphytes", "n i:\tV\tf aI t s");
result.add("ne-\to-\tpla-\tsm", "n i:\tV p\tl {\tz V m");
result.add("ne-\to-\tpla-\tto-\tnic", "n i:\t@U p\tl V\tt Q\tn I k");
result.add("ne-\to-\tpla-\tto-\tnist", "n i:\t@U p\tl eI\tt V\tn V s t");
result.add("ne-\to-\tprene", "n i:\tV p\tr i: n");
result.add("ne-\to-\tte-\tnic", "n i:\tV\tt i:\tn I k");
result.add("ne-\to-\tte-\tny", "n i:\tQ\tt V\tn i:");
result.add("ne-\ton", "n i:\tQ n");
result.add("ne-\tons", "n i:\tQ n z");
result.add("ne-\tpa", "n i:\tp V");
result.add("ne-\tpa-\tlese", "n e\tp V\tl i: z");
result.add("ne-\tpa-\tli", "n V\tp O:\tl i:");
result.add("ne-\tpal", "n V\tp O: l");
result.add("ne-\tphew", "n e f\tj u:");
result.add("ne-\tphews", "n e f\tj u: z");
result.add("ne-\tphew's", "n e f\tj u: z");
result.add("ne-\tpo-\tti-\tsm", "n e\tp V\tt I\tz V m");
result.add("ne-\tpon-\tset", "n V\tp Q n\ts V t");
result.add("ne-\tri", "n e@\ti:");
result.add("ne-\tri-\ttic", "n @r\tI\tt I k");
result.add("ne-\trine", "n e@\ti: n");
result.add("ne-\tro", "n I@\t@U");
result.add("ne-\tro's", "n I@\t@U z");
result.add("ne-\tru-\tda", "n V\tr u:\td V");
result.add("ne-\tst-\tler", "n e\ts V\tl @r");
result.add("ne-\tstle", "n e\ts V l");
result.add("ne-\tstled", "n e\ts V l d");
result.add("ne-\tstles", "n e\ts V l z");
result.add("ne-\tstle's", "n e\ts V l z");
result.add("ne-\tther", "n e\tD @r");
result.add("ne-\tther-\tlan-\tdic", "n e\tD @r\tl { n\td I k");
result.add("ne-\tther-\tland", "n e\tD @r\tl V n d");
result.add("ne-\tther-\tlands", "n e\tD @r\tl V n d z");
result.add("ne-\tther-\tworld", "n e\tD @r\tw @r l d");
result.add("ne-\tto", "n e\tt @U");
result.add("ne-\tva", "n eI\tv V");
result.add("ne-\tva-\tda", "n V\tv Q\td V");
result.add("ne-\tva-\tdan", "n V\tv {\td V n");
result.add("ne-\tva-\tdans", "n V\tv {\td V n z");
result.add("ne-\tva-\tda's", "n V\tv {\td V z");
result.add("ne-\tvel", "n eI\tv e l");
result.add("ne-\tvels", "n e\tv V l z");
result.add("ne-\tver", "n e\tv @r");
result.add("ne-\tver-\tland", "n e\tv @r\tl { n d");
result.add("ne-\tver-\tmind", "n e\tv @r\tm aI n d");
result.add("ne-\tver-\tmore", "n e\tv @r\tm O@");
result.add("ne-\tver-\tthe-\tless", "n e\tv @r\tD V\tl e s");
result.add("ne-\tvers", "n e\tv @r z");
result.add("ne-\tvil", "n eI\tv i: l");
result.add("ne-\tvile", "n eI\tv aI l");
result.add("ne-\tville", "n e\tv I l");
result.add("ne-\tvin", "n e\tv I n");
result.add("ne-\tvins", "n e\tv I n z");
result.add("ne-\tvin's", "n e\tv I n z");
result.add("ne-\tvis", "n e\tv I s");
result.add("ne-\twark", "n u:\t@r k");
result.add("ne-\twark's", "n j u:\t@r k s");
result.add("ne-\twell", "n u:\tV l");
result.add("ne-\twell's", "n u:\tV l z");
result.add("ne-\twer", "n u:\t@r");
result.add("ne-\twest", "n u:\tV s t");
result.add("ne-\twish", "n u:\tI S");
result.add("ne-\txis", "n e k\ts I s");
result.add("ne-\txus", "n e k\ts V s");
result.add("nea-\tgle", "n i:\tg V l");
result.add("nea-\tla", "n i:\tl V");
result.add("nea-\tley", "n i:\tl i:");
result.add("nea-\tlon", "n i:\tl V n");
result.add("nea-\tly", "n i:\tl i:");
result.add("nea-\trer", "n I@\t@r");
result.add("nea-\trest", "n I@\tV s t");
result.add("nea-\tring", "n I@\tI N");
result.add("nea-\tter", "n i:\tt @r");
result.add("nea-\ttest", "n i:\tt V s t");
result.add("neal", "n i: l");
result.add("neal-\tson", "n i: l\ts V n");
result.add("neale", "n i: l");
result.add("neall", "n i: l");
result.add("neal's", "n i: l z");
result.add("near", "n I@");
result.add("near-\tby", "n I@\tb aI");
result.add("near-\tly", "n I@\tl i:");
result.add("near-\tsigh-\tted", "n i: r\ts aI\tt V d");
result.add("near-\tsigh-\tted-\tness", "n i: r\ts aI\tt V d\tn V s");
result.add("neared", "n I@ d");
result.add("nears", "n I@ z");
result.add("neat", "n i: t");
result.add("neat-\tly", "n i: t\tl i:");
result.add("neat-\tness", "n i: t\tn V s");
result.add("neb-\tlett", "n e b\tl I t");
result.add("neb-\tras-\tka", "n V b\tr { s\tk V");
result.add("neb-\tras-\tkan", "n V b\tr { s\tk V n");
result.add("neb-\tras-\tkans", "n V b\tr { s\tk V n z");
result.add("neb-\tras-\tka's", "n V b\tr { s\tk V z");
result.add("nec", "n e k");
result.add("nec-\tker", "n e\tk @r");
result.add("nec-\tro-\tman-\tcy", "n e k\tr V\tm { n\ts i:");
result.add("nec-\tro-\tpo-\tlis", "n V k\tr Q\tp V\tl V s");
result.add("nec-\tro-\tsis", "n V k\tr @U\ts V s");
result.add("nec-\ttar", "n e k\tt @r");
result.add("neck", "n e k");
result.add("neck-\tla-\tces", "n e k\tl V\ts V z");
result.add("neck-\tla-\tcing", "n e k\tl V\ts I N");
result.add("neck-\tlace", "n e k\tl V s");
result.add("neck-\ttie", "n e k\tt aI");
result.add("neck-\tties", "n e k\tt aI z");
result.add("neck-\twear", "n e k\tw e@");
result.add("necked", "n e k t");
result.add("necks", "n e k s");
result.add("ned", "n e d");
result.add("ned-\tda", "n e\td V");
result.add("ned-\trow", "n e d\tr @U");
result.add("ned's", "n e d z");
result.add("nee", "n i:");
result.add("nee-\td-\tler", "n i:\td V\tl @r");
result.add("nee-\tded", "n i:\td V d");
result.add("nee-\tdi-\test", "n i:\td i:\tV s t");
result.add("nee-\tding", "n i:\td I N");
result.add("nee-\tdle", "n i:\td V l");
result.add("nee-\tdle-\tfish", "n i:\td V l\tf I S");
result.add("nee-\tdle-\tlike", "n i:\td V l\tl aI k");
result.add("nee-\tdle-\tman", "n i:\td V l\tm V n");
result.add("nee-\tdle-\tpoint", "n i:\td V l\tp OI n t");
result.add("nee-\tdle-\twork", "n i:\td V l\tw @r k");
result.add("nee-\tdled", "n i:\td V l d");
result.add("nee-\tdles", "n i:\td V l z");
result.add("nee-\tdn't", "n i:\td V n t");
result.add("nee-\tdy", "n i:\td i:");
result.add("nee-\tly", "n i:\tl i:");
result.add("need", "n i: d");
result.add("need-\tful", "n i: d\tf V l");
result.add("need-\tham", "n i:\td V m");
result.add("need-\tham's", "n i:\td V m z");
result.add("need-\tless", "n i: d\tl V s");
result.add("need-\tless-\tly", "n i: d\tl V s\tl i:");
result.add("need-\tling", "n i: d\tl I N");
result.add("needs", "n i: d z");
result.add("neel", "n i: l");
result.add("neeld", "n i: l d");
result.add("neer", "n I@");
result.add("ne'er", "n e@");
result.add("neese", "n i: z");
result.add("neet", "n i: t");
result.add("neff", "n e f");
result.add("neg", "n e g");
result.add("neg-\tlec-\tted", "n V g\tl e k\tt V d");
result.add("neg-\tlec-\tting", "n I g\tl e k\tt I N");
result.add("neg-\tlect", "n V g\tl e k t");
result.add("neg-\tlect-\tful", "n I g\tl e k\tt f V l");
result.add("neg-\tlects", "n I g\tl e k t s");
result.add("neg-\tley", "n e g\tl i:");
result.add("neg-\tli-\tgence", "n e g\tl I\tdZ e n s");
result.add("neg-\tli-\tgent", "n e g\tl I\tdZ e n t");
result.add("neg-\tli-\tgent-\tly", "n e g\tl I\tdZ e n\tt l i:");
result.add("neg-\tli-\tgi-\tble", "n e g\tl I\tdZ I\tb V l");
result.add("neg-\tri", "n e g\tr i:");
result.add("neg-\tro", "n i: g\tr @U");
result.add("neg-\tro-\tni", "n e g\tr @U\tn i:");
result.add("neg-\troes", "n i: g\tr @U z");
result.add("neg-\troid", "n i: g\tr OI d");
result.add("neg-\tros", "n i: g\tr @U z");
result.add("negs", "n e g z");
result.add("neh-\tru", "n eI\tr u:");
result.add("nei-\tman", "n i:\tm V n");
result.add("nei-\tther", "n i:\tD @r");
result.add("neid-\thardt", "n aI d\th Q@ t");
result.add("neigh-\tbo-\tring", "n eI\tb @r\tI N");
result.add("neigh-\tbor", "n eI\tb @r");
result.add("neigh-\tbor-\thood", "n eI\tb @r\th U d");
result.add("neigh-\tbor-\thoods", "n eI\tb @r\th U d z");
result.add("neigh-\tbor-\thood's", "n eI\tb @r\th U d z");
result.add("neigh-\tbor-\tly", "n eI\tb @r\tl i:");
result.add("neigh-\tbors", "n eI\tb @r z");
result.add("neigh-\tbor's", "n eI\tb @r z");
result.add("neil", "n i: l");
result.add("neil-\tson", "n i: l\ts V n");
result.add("neile", "n i: l");
result.add("neill", "n i: l");
result.add("neils", "n i: l z");
result.add("neil's", "n i: l z");
result.add("nein", "n i: n");
result.add("nek-\tton", "n e k\tt V n");
result.add("nel", "n e l");
result.add("nel-\tda", "n e l\td V");
result.add("nel-\tla", "n e\tl V");
result.add("nel-\tli", "n e\tl i:");
result.add("nel-\tlie", "n e\tl i:");
result.add("nel-\tlis", "n e\tl I s");
result.add("nel-\tly", "n e\tl i:");
result.add("nel-\tsen", "n e l\ts V n");
result.add("nel-\tson", "n e l\ts V n");
result.add("nel-\tson's", "n e l\ts V n z");
result.add("nell", "n e l");
result.add("nelle", "n e l");
result.add("nels", "n e l z");
result.add("nene", "n i: n");
result.add("nep-\ttu-\tni-\tum", "n e p\tt u:\tn i:\tV m");
result.add("nep-\ttune", "n e p\tt u: n");
result.add("neph-\tro-\tsis", "n V f\tr @U\ts V s");
result.add("neph-\tron", "n e f\tr Q n");
result.add("ner-\tdy", "n @r\td i:");
result.add("ner-\tvo-\tsa", "n @r\tv @U\ts V");
result.add("ner-\tvous", "n @r\tv V s");
result.add("ner-\tvous-\tly", "n @r\tv V s\tl i:");
result.add("ner-\tvous-\tness", "n @r\tv V s\tn V s");
result.add("ner-\tvy", "n @r\tv i:");
result.add("nerd", "n @r d");
result.add("nerds", "n @r d z");
result.add("nerve", "n @r v");
result.add("nerves", "n @r v z");
result.add("nes", "n e s");
result.add("nes-\tbit", "n e s\tb I t");
result.add("nes-\tbitt", "n e z\tb I t");
result.add("nes-\tmith", "n e z\tm I T");
result.add("nes-\tsa", "n e\ts V");
result.add("nes-\tsi", "n e\ts i:");
result.add("nes-\tsie", "n e\ts i:");
result.add("nes-\tta", "n e s\tt V");
result.add("nes-\tted", "n e s\tt V d");
result.add("nes-\tter", "n e s\tt @r");
result.add("nes-\tters", "n e s\tt @r z");
result.add("nes-\tting", "n e s\tt I N");
result.add("nes-\tto-\tri-\ta-\tni-\tsm", "n e s\tt O@\ti:\tV\tn I\tz V m");
result.add("nes-\tto-\tri-\tan", "n e s\tt O@\ti:\tV n");
result.add("nes-\ttor", "n e s\tt @r");
result.add("ness", "n e s");
result.add("nest", "n e s t");
result.add("nest-\tling", "n e s\tt l I N");
result.add("nest-\tlings", "n e s\tt l I N z");
result.add("nests", "n e s t s");
result.add("net", "n e t");
result.add("net-\tback", "n e t\tb { k");
result.add("net-\tlike", "n e t\tl aI k");
result.add("net-\tscape", "n e t\ts k eI p");
result.add("net-\tscape's", "n e t\ts k eI p s");
result.add("net-\tta", "n e\tt V");
result.add("net-\tted", "n e\tt V d");
result.add("net-\tter", "n e\tt @r");
result.add("net-\ttie", "n e\tt i:");
result.add("net-\tting", "n e\tt I N");
result.add("net-\ttle", "n e\tt V l");
result.add("net-\ttle-\tsome", "n e\tt V l\ts V m");
result.add("net-\ttle-\tton", "n e\tt V l\tt V n");
result.add("net-\ttle-\tton's", "n e\tt V l\tt V n z");
result.add("net-\ttled", "n e\tt V l d");
result.add("net-\ttles", "n e\tt V l z");
result.add("net-\tty", "n e\tt i:");
result.add("net-\twor-\tking", "n e t\tw @r\tk I N");
result.add("net-\twork", "n e t\tw @r k");
result.add("net-\tworked", "n e t\tw @r k t");
result.add("net-\tworks", "n e t\tw @r k s");
result.add("net-\twork's", "n e t\tw @r k s");
result.add("neth", "n e T");
result.add("nets", "n e t s");
result.add("nett", "n e t");
result.add("neu", "n OI");
result.add("neu-\tber-\tger", "n u:\tb @r\tg @r");
result.add("neu-\tbur-\tger", "n u:\tb @r\tg @r");
result.add("neu-\tkam", "n u:\tk V m");
result.add("neu-\tma-\tyer", "n u:\tm eI\t@r");
result.add("neu-\tmann", "n u:\tm V n");
result.add("neu-\tme-\tyer", "n u:\tm aI\t@r");
result.add("neu-\tral", "n U@\tV l");
result.add("neu-\tras-\tthe-\tni-\ta", "n U@\t{ s\tT i:\tn i:\tV");
result.add("neu-\tro", "n U@\t@U");
result.add("neu-\tro-\tfib-\tro-\tma-\tto-\tsis", "n U@\t@U\tf aI b\tr @U\tm V\tt @U\ts V s");
result.add("neu-\tro-\tlo-\tgi-\tcal", "n U@\tV\tl Q\tdZ I\tk V l");
result.add("neu-\tro-\tlo-\tgic", "n U@\tV\tl Q\tdZ I k");
result.add("neu-\tro-\tlo-\tgist", "n U@\tQ\tl V\tdZ V s t");
result.add("neu-\tro-\tlo-\tgists", "n U@\tQ\tl V\tdZ V s t s");
result.add("neu-\tro-\tlo-\tgy", "n U@\tQ\tl V\tdZ i:");
result.add("neu-\tro-\tpa-\tthy", "n U@\t@U\tp {\tT i:");
result.add("neu-\tro-\tsci-\ten-\ttist", "n j U@\t@U\ts aI\tV n\tt V s t");
result.add("neu-\tro-\tsci-\tence", "n j U@\t@U\ts aI\tV n s");
result.add("neu-\tro-\tses", "n U@\t@U\ts i: z");
result.add("neu-\tro-\tsis", "n U@\t@U\ts I s");
result.add("neu-\tro-\tsur-\tge-\try", "n U@\t@U\ts @r\tdZ @r\ti:");
result.add("neu-\tro-\tsur-\tgeon", "n U@\t@U\ts @r\tdZ V n");
result.add("neu-\tro-\tsur-\tgeons", "n U@\t@U\ts @r\tdZ V n z");
result.add("neu-\tro-\ttic", "n U@\tQ\tt I k");
result.add("neu-\trons", "n U@\tQ n z");
result.add("neu-\tte-\tring", "n u:\tt @r\tI N");
result.add("neu-\tter", "n u:\tt @r");
result.add("neu-\ttered", "n u:\tt @r d");
result.add("neus-\ttadt", "n u: S\tt { t");
result.add("neut-\tra-\tli-\tsm", "n u: t\tr V\tl I\tz V m");
result.add("neut-\tra-\tli-\tty", "n u: t\tr {\tl I\tt i:");
result.add("neut-\tra-\tli-\tza-\ttion", "n u: t\tr V\tl I\tz eI\tS V n");
result.add("neut-\tra-\tli-\tzes", "n u: t\tr V\tl aI\tz V z");
result.add("neut-\tra-\tli-\tzing", "n u: t\tr V\tl aI\tz I N");
result.add("neut-\tra-\tlist", "n u: t\tr V\tl V s t");
result.add("neut-\tra-\tlize", "n u: t\tr V\tl aI z");
result.add("neut-\tra-\tlized", "n u: t\tr V\tl aI z d");
result.add("neut-\tral", "n u: t\tr V l");
result.add("neut-\trals", "n u: t\tr V l z");
result.add("neut-\tri-\tno", "n u: t\tr i:\tn @U");
result.add("neut-\tri-\tnos", "n u: t\tr i:\tn @U z");
result.add("neut-\tron", "n u: t\tr Q n");
result.add("neut-\trons", "n u: t\tr Q n z");
result.add("neve", "n i: v");
result.add("neves", "n i: v z");
result.add("new", "n u:");
result.add("new-\tbe-\try", "n u:\tb e@\ti:");
result.add("new-\tber-\try", "n u:\tb e@\ti:");
result.add("new-\tberg", "n u:\tb @r g");
result.add("new-\tbill", "n u:\tb I l");
result.add("new-\tbold", "n u:\tb @U l d");
result.add("new-\tborn", "n u:\tb O@ n");
result.add("new-\tborns", "n u:\tb O@ n z");
result.add("new-\tbu-\try", "n u:\tb e@\ti:");
result.add("new-\tbu-\try's", "n u:\tb e@\ti: z");
result.add("new-\tburg", "n u:\tb @r g");
result.add("new-\tburgh", "n u:\tb @r g");
result.add("new-\tby", "n u:\tb i:");
result.add("new-\tca-\tstle", "n u:\tk {\ts V l");
result.add("new-\tca-\tstle's", "n u:\tk {\ts V l z");
result.add("new-\tco-\tmer", "n u:\tk V\tm @r");
result.add("new-\tco-\tmers", "n u:\tk V\tm @r z");
result.add("new-\tcomb", "n u:\tk V m");
result.add("new-\tcombe", "n u:\tk V m");
result.add("new-\tcome", "n u:\tk V m");
result.add("new-\tfan-\tgle", "n u:\tf { N\tg V l");
result.add("new-\tfan-\tgled", "n u:\tf { N\tg V l d");
result.add("new-\tfound", "n u:\tf aU n d");
result.add("new-\tfound-\tland", "n u:\tf V n\td l V n d");
result.add("new-\tgate", "n u:\tg eI t");
result.add("new-\thall", "n u:\th O: l");
result.add("new-\thall's", "n u:\th O: l z");
result.add("new-\thouse", "n u:\th aU s");
result.add("new-\tkirk", "n u:\tk @r k");
result.add("new-\tland", "n u:\tl V n d");
result.add("new-\tlin", "n u:\tl I n");
result.add("new-\tlon", "n u:\tl V n");
result.add("new-\tly", "n u:\tl i:");
result.add("new-\tly-\twed", "n u:\tl i:\tw e d");
result.add("new-\tly-\tweds", "n u:\tl i:\tw e d z");
result.add("new-\tman", "n u:\tm V n");
result.add("new-\tmann", "n u:\tm V n");
result.add("new-\tman's", "n u:\tm V n z");
result.add("new-\tmar-\tket", "n u:\tm Q@\tk V t");
result.add("new-\tmark", "n u:\tm Q@ k");
result.add("new-\tness", "n u:\tn V s");
result.add("new-\tport", "n u:\tp O@ t");
result.add("new-\tport's", "n u:\tp O@ t s");
result.add("new-\tsies", "n u:\tz i: z");
result.add("new-\tsom", "n u:\tz V m");
result.add("new-\ts's", "n u:\tz V z");
result.add("new-\tsy", "n u:\tz i:");
result.add("new-\tto-\tni-\tan", "n u:\tt @U\tn i:\tV n");
result.add("new-\tton", "n u:\tt V n");
result.add("new-\tton's", "n u:\tt V n z");
result.add("new-\ttown", "n u:\tt aU n");
result.add("new-\tzea-\tland", "n u:\tz i:\tl V n d");
result.add("news", "n u: z");
result.add("news-\tcas-\tter", "n u: z\tk { s\tt @r");
result.add("news-\tcas-\tters", "n u: z\tk { s\tt @r z");
result.add("news-\tcast", "n u: z\tk { s t");
result.add("news-\tcasts", "n u: z\tk { s t s");
result.add("news-\tgroup", "n u: z\tg r u: p");
result.add("news-\tgroups", "n u: z\tg r u: p s");
result.add("news-\tlet-\tter", "n u: z\tl e\tt @r");
result.add("news-\tlet-\tters", "n u: z\tl e\tt @r z");
result.add("news-\tlet-\tter's", "n u: z\tl e\tt @r z");
result.add("news-\tma-\tga-\tzine", "n u: z\tm {\tg V\tz i: n");
result.add("news-\tma-\tker", "n u: z\tm eI\tk @r");
result.add("news-\tma-\tkers", "n u: z\tm eI\tk @r z");
result.add("news-\tman", "n u: z\tm { n");
result.add("news-\tmen", "n u: z\tm e n");
result.add("news-\tpa-\tper", "n u: z\tp eI\tp @r");
result.add("news-\tpa-\tper-\tman", "n u: z\tp eI\tp @r\tm { n");
result.add("news-\tpa-\tper-\tmen", "n u: z\tp {\tp @r\tm e n");
result.add("news-\tpa-\tpers", "n u: z\tp eI\tp @r z");
result.add("news-\tpa-\tper's", "n u: z\tp eI\tp @r z");
result.add("news-\tpeak", "n u: s\tp i: k");
result.add("news-\tpeo-\tple", "n u: z\tp i:\tp V l");
result.add("news-\tper-\tson", "n u: z\tp @r\ts V n");
result.add("news-\tper-\tsons", "n u: z\tp @r\ts V n z");
result.add("news-\tprint", "n u: z\tp r I n t");
result.add("news-\treel", "n u: z\tr i: l");
result.add("news-\treels", "n u: z\tr i: l z");
result.add("news-\troom", "n u: z\tr u: m");
result.add("news-\trooms", "n u: z\tr u: m z");
result.add("news-\tstand", "n u: z\ts t { n d");
result.add("news-\tstands", "n u: z\ts t { n d z");
result.add("news-\tweek", "n u: z\tw i: k");
result.add("news-\tweek-\tly", "n u: z\tw i: k\tl i:");
result.add("news-\tweek's", "n u: z\tw i: k s");
result.add("news-\twire", "n u: z\tw aI r");
result.add("news-\twires", "n u: z\tw aI r z");
result.add("news-\two-\tman", "n u: z\tw U\tm V n");
result.add("news-\two-\tmen", "n u: z\tw I\tm V n");
result.add("news-\twor-\tthy", "n u: z\tw @r\tD i:");
result.add("newt", "n u: t");
result.add("newts", "n u: t s");
result.add("newt's", "n u: t s");
result.add("nex-\trad", "n e k\ts r { d");
result.add("next", "n e k s t");
result.add("ney", "n eI");
result.add("ney-\tsa", "n eI\ts V");
result.add("nez", "n e z");
result.add("ng", "e N");
result.add("ngai", "gh aI");
result.add("ngo", "gh @U");
result.add("ngo's", "gh @U z");
result.add("ngu-\tyen", "n u:\tj e n");
result.add("ni-\ta-\tcin", "n aI\tV\ts I n");
result.add("ni-\taga-\tra", "n aI\t{ g\tr V");
result.add("ni-\taga-\tra's", "n aI\t{ g\tr V z");
result.add("ni-\tal", "n aI\tV l");
result.add("ni-\tca-\tra-\tgua", "n I\tk @r\tQ g\tw V");
result.add("ni-\tca-\tra-\tguan", "n I\tk @r\tQ g\tw V n");
result.add("ni-\tca-\tra-\tguans", "n I\tk @r\tQ g\tw V n z");
result.add("ni-\tca-\tra-\tgua's", "n I\tk @r\tQ g\tw V z");
result.add("ni-\tce-\tties", "n aI\ts V\tt i: z");
result.add("ni-\tcer", "n aI\ts @r");
result.add("ni-\tcest", "n aI\ts I s t");
result.add("ni-\tches", "n I\ttS V z");
result.add("ni-\tcho-\tla", "n I\th @U\tl V");
result.add("ni-\tcho-\tlas", "n I\tk V\tl V s");
result.add("ni-\tchol", "n I\tk O: l");
result.add("ni-\tchol-\tson", "n I\tk V l\ts V n");
result.add("ni-\tchol-\tson's", "n I\tk V l\ts V n z");
result.add("ni-\tcholl", "n I\tk V l");
result.add("ni-\tcholls", "n I\tk V l z");
result.add("ni-\tchols", "n I\tk V l z");
result.add("ni-\tco", "n i:\tk @U");
result.add("ni-\tco-\tla", "n I\tk @U\tl V");
result.add("ni-\tco-\tla-\ti", "n i:\tk @U\tl Q\ti:");
result.add("ni-\tco-\tlas", "n I\tk V\tl V s");
result.add("ni-\tco-\tlau", "n I\tk V\tl aU");
result.add("ni-\tco-\tlaus", "n I\tk V\tl aU z");
result.add("ni-\tco-\tlay", "n I\tk V\tl eI");
result.add("ni-\tco-\tlet", "n I\tk V\tl e t");
result.add("ni-\tco-\tlette", "n I\tk V\tl e t");
result.add("ni-\tco-\tli", "n i:\tk @U\tl i:");
result.add("ni-\tco-\tli-\tna", "n i:\tk @U\tl i:\tn V");
result.add("ni-\tco-\tli-\tne", "n i:\tk @U\tl i:\tn i:");
result.add("ni-\tco-\tlo", "n I\tk V\tl @U");
result.add("ni-\tco-\tsi-\ta", "n I\tk V\ts i:\tV");
result.add("ni-\tco-\ttine", "n I\tk V\tt i: n");
result.add("ni-\tco-\ttine's", "n I\tk V\tt i: n z");
result.add("ni-\tcol", "n I\tk V l");
result.add("ni-\tcol-\tson", "n I\tk @U l\ts V n");
result.add("ni-\tcole", "n I\tk @U l");
result.add("ni-\tcole's", "n I\tk @U l z");
result.add("ni-\tcolle", "n I\tk @U l");
result.add("ni-\tcols", "n I\tk V l z");
result.add("ni-\tda", "n i:\td V");
result.add("ni-\tdal", "n V\td Q l");
result.add("ni-\te-\tves", "n i:\te\tv e s");
result.add("ni-\ter", "n i:\t@r");
result.add("ni-\tfe-\tdi-\tpine", "n aI\tf e\td I\tp i: n");
result.add("ni-\tge-\tri-\ta", "n aI\tdZ I@\ti:\tV");
result.add("ni-\tge-\tri-\tan", "n aI\tdZ I@\ti:\tV n");
result.add("ni-\tge-\tri-\tans", "n aI\tdZ I@\ti:\tV n z");
result.add("ni-\tge-\tri-\ta's", "n aI\tdZ I@\ti:\tV z");
result.add("ni-\tgel", "n aI\tdZ V l");
result.add("ni-\tger", "n aI\tdZ @r");
result.add("ni-\thi-\tli-\tsm", "n aI\tI\tl I\tz V m");
result.add("ni-\thi-\tlists", "n aI\tI\tl I s t s");
result.add("ni-\thon", "n I\th Q n");
result.add("ni-\tke", "n aI\tk i:");
result.add("ni-\tke's", "n aI\tk i: z");
result.add("ni-\tki-\tta", "n I\tk i:\tt V");
result.add("ni-\tko", "n i:\tk @U");
result.add("ni-\tko-\tlai", "n I\tk @U\tl aI");
result.add("ni-\tko-\tlaus", "n I\tk V\tl aU z");
result.add("ni-\tkon", "n aI\tk Q n");
result.add("ni-\tko's", "n i:\tk @U z");
result.add("ni-\tla", "n i:\tl V");
result.add("ni-\tland", "n aI\tl V n d");
result.add("ni-\tmitz", "n I\tm I t s");
result.add("ni-\tmoy", "n i:\tm OI");
result.add("ni-\tna", "n aI\tn V");
result.add("ni-\tne-\tveh", "n I\tn V\tv V");
result.add("ni-\tner", "n aI\tn @r");
result.add("ni-\tnette", "n I\tn e t");
result.add("ni-\tno", "n i:\tn @U");
result.add("ni-\tnon", "n I\tn V n");
result.add("ni-\to-\tbi-\tum", "n aI\t@U\tb i:\tV m");
result.add("ni-\to-\tbite", "n aI\t@U\tb aI t");
result.add("ni-\tpon", "n I\tp Q n");
result.add("ni-\tren-\tberg", "n aI\tr V n\tb @r g");
result.add("ni-\tsei", "n I\ts eI");
result.add("ni-\tshi", "n i:\tS i:");
result.add("ni-\tta", "n i:\tt V");
result.add("ni-\tven", "n aI\tv V n");
result.add("ni-\txes", "n I k\ts V z");
result.add("ni-\txie", "n I k\ts i:");
result.add("ni-\txon", "n I k\ts V n");
result.add("ni-\txon's", "n I k\ts V n z");
result.add("niall", "n aI l");
result.add("nib", "n I b");
result.add("nib-\tb-\tling", "n I\tb V\tl I N");
result.add("nib-\tble", "n I\tb V l");
result.add("nib-\tbled", "n I\tb V l d");
result.add("nib-\tbles", "n I\tb V l z");
result.add("nibs", "n I b z");
result.add("nic-\tco-\tlite", "n I\tk V\tl aI t");
result.add("nic-\tke-\tlo-\tde-\ton", "n I\tk V\tl @U\td i:\tV n");
result.add("nic-\tkel", "n I\tk V l");
result.add("nic-\tkels", "n I\tk V l z");
result.add("nic-\tkel's", "n I\tk V l z");
result.add("nic-\tker-\tson", "n I\tk @r\ts V n");
result.add("nic-\tkey", "n I\tk i:");
result.add("nic-\tki", "n I\tk i:");
result.add("nic-\tkle", "n I\tk V l");
result.add("nic-\tkle-\tby", "n I\tk V l\tb i:");
result.add("nic-\tkles", "n I\tk V l z");
result.add("nic-\tko-\tlas", "n I\tk V\tl V z");
result.add("nic-\tkum", "n I\tk V m");
result.add("nic-\tky", "n I\tk i:");
result.add("nic-\tky's", "n I\tk i: z");
result.add("nice", "n aI s");
result.add("nice-\tly", "n aI s\tl i:");
result.add("nice-\tness", "n aI s\tn V s");
result.add("niche", "n I tS");
result.add("nick", "n I k");
result.add("nick-\tlau-\ts's", "n I k\tl V\ts V z");
result.add("nick-\tlaus", "n I k\tl V s");
result.add("nick-\tname", "n I k\tn eI m");
result.add("nick-\tnamed", "n I k\tn eI m d");
result.add("nick-\tnames", "n I k\tn eI m z");
result.add("nicked", "n I k t");
result.add("nicks", "n I k s");
result.add("nick's", "n I k s");
result.add("nie", "n i:");
result.add("nie-\tbuhr", "n i:\tb U@");
result.add("nie-\tces", "n i:\ts V z");
result.add("nie-\tce's", "n i:\ts V z");
result.add("nie-\thaus", "n i:\th aU s");
result.add("nie-\tmoel-\tler", "n aI\tm O:\tl @r");
result.add("niece", "n i: s");
result.add("nied", "n i: d");
result.add("niel", "n i: l");
result.add("niel-\tsen", "n i: l\ts V n");
result.add("niel-\tsen's", "n i: l\ts V n z");
result.add("niel-\tson", "n i: l\ts V n");
result.add("niels", "n i: l z");
result.add("nier-\tman", "n I@\tm V n");
result.add("nies", "n aI z");
result.add("nietz-\tsche", "n i:\ttS i:");
result.add("nif-\tty", "n I f\tt i:");
result.add("nig-\tgard-\tli-\tness", "n I\tg @r d\tl i:\tn V s");
result.add("nig-\tgard-\tly", "n I\tg @r d\tl i:");
result.add("nig-\tger", "n I\tg @r");
result.add("nig-\tgers", "n I\tg @r z");
result.add("nig-\tger's", "n I\tg @r z");
result.add("nigh", "n aI");
result.add("night", "n aI t");
result.add("night-\tshade", "n aI\ttS eI d");
result.add("night-\tshirt", "n aI\ttS @r t");
result.add("night-\tstand", "n aI t\ts t { n d");
result.add("night-\tstick", "n aI t\ts t I k");
result.add("night-\ttime", "n aI t\tt aI m");
result.add("night-\ttimes", "n aI t\tt aI m z");
result.add("nights", "n aI t s");
result.add("night's", "n aI t s");
result.add("nights'", "n aI t s");
result.add("nii-\thau", "n i:\th aU");
result.add("nik-\tkei", "n I\tk eI");
result.add("nik-\tki", "n I\tk i:");
result.add("nik-\tko", "n i:\tk @U");
result.add("nik-\tko's", "n i:\tk @U z");
result.add("nil", "n I l");
result.add("nil-\tly", "n I\tl i:");
result.add("nil-\tsen", "n I l\ts V n");
result.add("nil-\tson", "n I l\ts V n");
result.add("nile", "n aI l");
result.add("niles", "n aI l z");
result.add("nill", "n I l");
result.add("nils", "n I l z");
result.add("nils-\tson", "n I l\ts V n");
result.add("nim-\tble", "n I m\tb V l");
result.add("nim-\tbus", "n I m\tb V s");
result.add("nim-\tby", "n I m\tb i:");
result.add("nim-\tmer", "n I\tm @r");
result.add("nim-\trod", "n I m\tr Q d");
result.add("nimb-\tly", "n I m\tb l i:");
result.add("nims", "n I m z");
result.add("nin-\tcom-\tpoop", "n I N\tk V m\tp u: p");
result.add("nin-\tcom-\tpoops", "n I N\tk V m\tp u: p s");
result.add("nin-\tja", "n I n\tdZ V");
result.add("nin-\tjas", "n I n\tdZ V z");
result.add("nin-\tten-\tdo", "n I n\tt e n\td @U");
result.add("nine", "n aI n");
result.add("nine-\tfold", "n I n\tf @U l d");
result.add("nine-\tteen", "n aI n\tt i: n");
result.add("nine-\tteenth", "n aI n\tt i: n T");
result.add("nine-\tti-\teth", "n aI n\tt i:\tV T");
result.add("nine-\tties", "n aI n\tt i: z");
result.add("nine-\tty", "n aI n\tt i:");
result.add("nine-\tty's", "n aI n\tt i: z");
result.add("nines", "n aI n z");
result.add("nine's", "n aI n z");
result.add("ninth", "n aI n T");
result.add("ninths", "n aI n T s");
result.add("nip", "n I p");
result.add("nip-\tper", "n I\tp @r");
result.add("nip-\tping", "n I\tp I N");
result.add("nip-\tple", "n I\tp V l");
result.add("nip-\tpon", "n I\tp Q n");
result.add("nip-\tpy", "n I\tp i:");
result.add("nipped", "n I p t");
result.add("nir", "n I@");
result.add("nir-\tva-\tna", "n I@\tv Q\tn V");
result.add("nir-\tva-\tna's", "n I@\tv Q\tn V z");
result.add("nis-\tbet", "n I z\tb V t");
result.add("nis-\tsa", "n I\ts V");
result.add("nis-\tsan", "n i:\ts Q n");
result.add("nis-\tsans", "n i:\ts Q n z");
result.add("nis-\tsan's", "n i:\ts Q n z");
result.add("nis-\tsen", "n I\ts V n");
result.add("nist", "n I s t");
result.add("nit", "n I t");
result.add("nit-\tpic-\tking", "n I t\tp I\tk I N");
result.add("nit-\tpick", "n I t\tp I k");
result.add("nit-\tra-\tting", "n aI t\tr eI\tt I N");
result.add("nit-\tra-\ttion", "n aI t\tr eI\tS V n");
result.add("nit-\trate", "n aI t\tr eI t");
result.add("nit-\trates", "n aI t\tr eI t s");
result.add("nit-\tric", "n aI t\tr I k");
result.add("nit-\tride", "n aI t\tr aI d");
result.add("nit-\triles", "n aI t\tr V l z");
result.add("nit-\tro", "n I t\tr @U");
result.add("nit-\tro-\tcel-\tlu-\tlose", "n aI t\tr @U\ts e l\tj V\tl @U s");
result.add("nit-\tro-\tge-\tnous", "n aI t\tr Q\tdZ V\tn V s");
result.add("nit-\tro-\tgen", "n aI t\tr V\tdZ V n");
result.add("nit-\tro-\tgly-\tce-\trin", "n aI t\tr @U g\tl I\ts @r\tI n");
result.add("nit-\tro-\tgly-\tce-\trine", "n aI t\tr @U g\tl I\ts @r\tI n");
result.add("nit-\tro-\tsa-\tmines", "n V t\tr Q\ts V\tm i: n z");
result.add("nit-\trous", "n I t\tr V s");
result.add("nit-\tta", "n I\tt V");
result.add("nit-\tty", "n I\tt i:");
result.add("nit-\tza", "n I t\tz V");
result.add("nit-\tza's", "n I t\tz V z");
result.add("nite", "n aI t");
result.add("nitz", "n I t s");
result.add("nix", "n I k s");
result.add("nixed", "n I k s t");
result.add("no", "n @U");
result.add("no-\ta", "n @U\tV");
result.add("no-\taa", "n @U\tV");
result.add("no-\tah", "n @U\tV");
result.add("no-\tah's", "n @U\tV z");
result.add("no-\tbe-\tli-\tum", "n @U\tb e\tl i:\tV m");
result.add("no-\tbel", "n @U\tb e l");
result.add("no-\tbi-\tli-\tty", "n @U\tb I\tl I\tt i:");
result.add("no-\tbile", "n Q\tb I l");
result.add("no-\tbis", "n @U\tb I s");
result.add("no-\tble", "n @U\tb V l");
result.add("no-\tble-\tman", "n @U\tb V l\tm V n");
result.add("no-\tble-\tman's", "n @U\tb V l\tm V n z");
result.add("no-\tble-\two-\tman", "n @U\tb V l\tw U\tm V n");
result.add("no-\tbles", "n @U\tb V l z");
result.add("no-\tble's", "n @U\tb V l z");
result.add("no-\tbo-\tdies", "n @U\tb Q\td i: z");
result.add("no-\tbo-\tdy", "n @U\tb Q\td i:");
result.add("no-\tbo-\tdy'd", "n @U\tb Q\td i: d");
result.add("no-\tbo-\tdy's", "n @U\tb Q\td i: z");
result.add("no-\tdu-\tlar", "n Q\tdZ V\tl @r");
result.add("no-\tdule", "n Q\tdZ u: l");
result.add("no-\tdules", "n Q\tdZ u: l z");
result.add("no-\tel", "n @U\te l");
result.add("no-\telle", "n @U\te l");
result.add("no-\tel's", "n @U\te l z");
result.add("no-\tga-\tles", "n @U\tg Q\tl e s");
result.add("no-\tgu-\tchi", "n @U\tg u:\ttS i:");
result.add("no-\tki-\ta", "n @U\tk i:\tV");
result.add("no-\tla", "n @U\tl V");
result.add("no-\tla-\tna", "n @U\tl {\tn V");
result.add("no-\tlan", "n @U\tl V n");
result.add("no-\tland", "n @U\tl V n d");
result.add("no-\tle-\tta", "n @U\tl e\tt V");
result.add("no-\tli-\tta", "n @U\tl i:\tt V");
result.add("no-\tlie", "n Q\tl i:");
result.add("no-\tlo", "n @U\tl @U");
result.add("no-\tma-\tdic", "n @U\tm {\td I k");
result.add("no-\tmad", "n @U\tm { d");
result.add("no-\tmads", "n @U\tm { d z");
result.add("no-\tmad's", "n @U\tm { d z");
result.add("no-\tmen-\tcla-\tto-\tri-\tal", "n @U\tm V n\tk l V\tt O@\ti:\tV l");
result.add("no-\tmen-\tcla-\ttu-\tral", "n @U\tm V n\tk l eI\ttS @r\tV l");
result.add("no-\tmen-\tcla-\tture", "n @U\tm V n\tk l eI\ttS @r");
result.add("no-\tmen-\tkla-\ttu-\tra", "n @U\tm e N\tk l V\ttS U@\tV");
result.add("no-\tmi", "n @U\tm i:");
result.add("no-\tmi-\tna-\tted", "n Q\tm I\tn eI\tt I d");
result.add("no-\tmi-\tna-\tting", "n Q\tm I\tn eI\tt I N");
result.add("no-\tmi-\tna-\ttion", "n Q\tm I\tn eI\tS V n");
result.add("no-\tmi-\tna-\ttions", "n Q\tm I\tn eI\tS V n z");
result.add("no-\tmi-\tnal", "n Q\tm I\tn V l");
result.add("no-\tmi-\tnal-\tly", "n Q\tm I\tn V\tl i:");
result.add("no-\tmi-\tnate", "n Q\tm I\tn eI t");
result.add("no-\tmi-\tnates", "n Q\tm I\tn eI t s");
result.add("no-\tmi-\tnee", "n Q\tm I\tn i:");
result.add("no-\tmi-\tnees", "n Q\tm I\tn i: z");
result.add("no-\tmi-\tnee's", "n Q\tm I\tn i: z");
result.add("no-\tmu-\tra", "n @U\tm U@\tV");
result.add("no-\tmu-\tra's", "n @U\tm U@\tV z");
result.add("no-\tna", "n Q\tn V");
result.add("no-\tna-\tca-\tde-\tmic", "n Q\tn {\tk V\td e\tm I k");
result.add("no-\tna-\tligned", "n Q\tn V\tl aI n d");
result.add("no-\tnac-\tcru-\tal", "n Q\tn V k\tr u:\tV l");
result.add("no-\tnac-\tcru-\ting", "n Q\tn V k\tr u:\tI N");
result.add("no-\tnag-\tgres-\tsion", "n Q\tn V g\tr e\tS V n");
result.add("no-\tnag-\tri-\tcul-\ttu-\tral", "n Q\tn { g\tr I\tk V l\ttS @r\tV l");
result.add("no-\tnal-\tco-\tho-\tlic", "n Q\tn { l\tk V\th Q\tl I k");
result.add("no-\tnau-\tto-\tmo-\ttive", "n Q\tn O:\tt @U\tm @U\tt I v");
result.add("no-\tne-\tco-\tno-\tmic", "n Q\tn e\tk V\tn Q\tm I k");
result.add("no-\tne-\tlec-\ttri-\tcal", "n Q\tn V\tl e k\tt r I\tk V l");
result.add("no-\tne-\tmer-\tgen-\tcy", "n Q\tn V\tm @r\tdZ V n\ts i:");
result.add("no-\tnen-\tti-\tty", "n Q\tn e n\tt I\tt i:");
result.add("no-\tnes-\tsen-\ttial", "n Q\tn V\ts e n\ttS V l");
result.add("no-\tnie", "n Q\tn i:");
result.add("no-\tnin-\tfla-\ttio-\tna-\try", "n Q\tn I n\tf l eI\tS V\tn e@\ti:");
result.add("no-\tnu-\tnio-\tnized", "n Q n\tj u: n\tj V\tn aI z d");
result.add("no-\tnu-\tnion", "n Q n\tj u: n\tj V n");
result.add("no-\tnu-\tti-\tli-\tty", "n Q n\tj u:\tt I\tl I\tt i:");
result.add("no-\tra", "n O@\tV");
result.add("no-\trah", "n O@\tV");
result.add("no-\tra's", "n O@\tV z");
result.add("no-\treen", "n @r\ti: n");
result.add("no-\tri-\te-\tga", "n O@\ti:\teI\tg V");
result.add("no-\tri-\te-\tga's", "n O@\ti:\teI\tg V z");
result.add("no-\tro-\tdom", "n O@\t@U\td V m");
result.add("no-\tses", "n @U\tz V z");
result.add("no-\tsi-\tness", "n @U\tz i:\tn V s");
result.add("no-\tsing", "n @U\tz I N");
result.add("no-\tsy", "n @U\tz i:");
result.add("no-\tta-\tble", "n @U\tt V\tb V l");
result.add("no-\tta-\tbles", "n @U\tt V\tb V l z");
result.add("no-\tta-\try", "n @U\tt @r\ti:");
result.add("no-\tta-\ttion", "n @U\tt eI\tS V n");
result.add("no-\tta-\ttions", "n @U\tt eI\tS V n z");
result.add("no-\ttab-\tly", "n @U\tt V b\tl i:");
result.add("no-\tted", "n @U\tt V d");
result.add("no-\tther", "n V\tD @r");
result.add("no-\tthing", "n V\tT I N");
result.add("no-\tthing-\tness", "n V\tT I N\tn V s");
result.add("no-\tthings", "n V\tT I N z");
result.add("no-\tti-\tcea-\tble", "n @U\tt I\ts V\tb V l");
result.add("no-\tti-\tceab-\tly", "n @U\tt I\ts V b\tl i:");
result.add("no-\tti-\tces", "n @U\tt I\ts V z");
result.add("no-\tti-\tcing", "n @U\tt I\ts I N");
result.add("no-\tti-\tfi-\tca-\ttion", "n @U\tt I\tf I\tk eI\tS V n");
result.add("no-\tti-\tfi-\tca-\ttions", "n @U\tt I\tf I\tk eI\tS V n z");
result.add("no-\tti-\tfied", "n @U\tt I\tf aI d");
result.add("no-\tti-\tfies", "n @U\tt I\tf aI z");
result.add("no-\tti-\tfy", "n @U\tt I\tf aI");
result.add("no-\tti-\tfy-\ting", "n @U\tt I\tf aI\tI N");
result.add("no-\ttice", "n @U\tt I s");
result.add("no-\tticed", "n @U\tt I s t");
result.add("no-\tting", "n @U\tt I N");
result.add("no-\ttion", "n @U\tS V n");
result.add("no-\ttions", "n @U\tS V n z");
result.add("no-\ttis", "n @U\tt I s");
result.add("no-\tto-\tchord", "n @U\tt V\tk O@ d");
result.add("no-\tto-\tri-\te-\tty", "n @U\tt @r\taI\tV\tt i:");
result.add("no-\tto-\tri-\tous", "n @U\tt O@\ti:\tV s");
result.add("no-\tto-\tri-\tous-\tly", "n @U\tt O@\ti:\tV s\tl i:");
result.add("no-\tva", "n @U\tv V");
result.add("no-\tva-\tto", "n @U\tv Q\tt @U");
result.add("no-\tvak", "n @U\tv { k");
result.add("no-\tvak's", "n @U\tv { k s");
result.add("no-\tvas", "n @U\tv V z");
result.add("no-\tva's", "n @U\tv V z");
result.add("no-\tve-\tlis-\ttic", "n Q\tv V\tl I s\tt I k");
result.add("no-\tve-\tlist", "n Q\tv V\tl V s t");
result.add("no-\tve-\tlists", "n Q\tv V\tl V s t s");
result.add("no-\tvel", "n Q\tv V l");
result.add("no-\tvel-\tla", "n @U\tv e\tl V");
result.add("no-\tvel-\tlo", "n @U\tv e\tl @U");
result.add("no-\tvel-\tly", "n @U\tv V\tl i:");
result.add("no-\tvel-\tties", "n Q\tv V l\tt i: z");
result.add("no-\tvel-\tty", "n Q\tv V l\tt i:");
result.add("no-\tvels", "n Q\tv V l z");
result.add("no-\tvel's", "n Q\tv V l z");
result.add("no-\tvem-\tber", "n @U\tv e m\tb @r");
result.add("no-\tvem-\tber's", "n @U\tv e m\tb @r z");
result.add("no-\tvi", "n @U\tv i:");
result.add("no-\tvi-\ta", "n @U\tv i:\tV");
result.add("no-\tvi-\tces", "n Q\tv I\ts V z");
result.add("no-\tvice", "n Q\tv I s");
result.add("no-\tvick", "n @U\tv I k");
result.add("no-\tvin-\tger", "n @U\tv I\tN @r");
result.add("no-\tvo", "n @U\tv @U");
result.add("no-\tvo-\tsi-\tbirsk", "n @U\tv V\ts I\tb @r s k");
result.add("no-\tvot-\tny", "n V\tv @U t\tn i:");
result.add("no-\tvum", "n @U\tv V m");
result.add("no-\twa-\tday", "n aU\tV\td eI");
result.add("no-\twa-\tdays", "n aU\tV\td eI z");
result.add("no-\twell", "n @U\tV l");
result.add("no-\twels", "n aU\tV l z");
result.add("no-\twhere", "n @U\tw e@");
result.add("no-\txious", "n Q k\tS V s");
result.add("no-\txon", "n Q k\ts V n");
result.add("noa-\tmi", "n @U\tm i:");
result.add("noakes", "n @U k s");
result.add("noam", "n @U m");
result.add("nob-\tlesse", "n @U b\tl e s");
result.add("nob-\tlest", "n @U b\tl V s t");
result.add("nob-\tly", "n Q b\tl i:");
result.add("noc-\ttur-\tnal", "n Q k\tt @r\tn V l");
result.add("nock", "n Q k");
result.add("nod", "n Q d");
result.add("nod-\tded", "n Q\td V d");
result.add("nod-\tding", "n Q\td I N");
result.add("node", "n @U d");
result.add("nodes", "n @U d z");
result.add("nods", "n Q d z");
result.add("noe", "n @U");
result.add("noell", "n @U l");
result.add("noes", "n @U z");
result.add("noh", "n @U");
result.add("noi-\tses", "n OI\tz V z");
result.add("noi-\tsi-\ter", "n OI\tz i:\t@r");
result.add("noi-\tsi-\test", "n OI\tz i:\tV s t");
result.add("noi-\tsi-\tly", "n OI\tz I\tl i:");
result.add("noi-\tsy", "n OI\tz i:");
result.add("noir", "n OI r");
result.add("noirs", "n OI r z");
result.add("noise", "n OI z");
result.add("nol-\tlie", "n @U\tl i:");
result.add("nold", "n @U l d");
result.add("nolde", "n @U l d");
result.add("nole", "n @U l");
result.add("noles", "n @U l z");
result.add("noll", "n @U l");
result.add("nolls", "n @U l z");
result.add("nolt", "n @U l t");
result.add("nolte", "n @U l t");
result.add("nom", "n Q m");
result.add("nome", "n @U m");
result.add("nome's", "n @U m z");
result.add("non", "n Q n");
result.add("non-\ta", "n Q\tn V");
result.add("non-\tal-\tco-\tho-\tlic", "n Q\tn { l\tk V\th Q\tl I k");
result.add("non-\tban-\tking", "n Q n\tb { N\tk I N");
result.add("non-\tbank", "n Q n\tb { N k");
result.add("non-\tbe-\tlie-\tver", "n Q n\tb V\tl i:\tv @r");
result.add("non-\tbe-\tlie-\tvers", "n Q n\tb V\tl i:\tv @r z");
result.add("non-\tbi-\tnding", "n Q n\tb aI n\td I N");
result.add("non-\tbi-\tting", "n Q n\tb aI\tt I N");
result.add("non-\tbuil-\tding", "n Q n\tb I l\td I N");
result.add("non-\tbusi-\tness", "n Q n\tb I z\tn V s");
result.add("non-\tcal-\tla-\tble", "n Q n\tk O:\tl V\tb V l");
result.add("non-\tcash", "n Q n\tk { S");
result.add("non-\tcatho-\tlic", "n Q n\tk { T\tl I k");
result.add("non-\tcha-\tlance", "n Q n\tS V\tl Q n s");
result.add("non-\tcha-\tlant", "n Q n\tS V\tl Q n t");
result.add("non-\tcha-\tlant-\tly", "n Q n\tS V\tl Q n\tt l i:");
result.add("non-\tco-\tlor", "n Q n\tk V\tl @r");
result.add("non-\tcom-\tba-\ttant", "n Q n\tk V m\tb {\tt V n t");
result.add("non-\tcom-\tba-\ttants", "n Q n\tk V m\tb {\tt V n t s");
result.add("non-\tcom-\tmer-\tcial", "n Q n\tk V\tm @r\tS V l");
result.add("non-\tcom-\tmit-\ttal", "n Q n\tk V\tm I\tt V l");
result.add("non-\tcom-\tmu-\tnist", "n Q n\tk Q m\tj u:\tn I s t");
result.add("non-\tcom-\tpe-\tti-\ttive", "n Q n\tk V m\tp e\tt I\tt I v");
result.add("non-\tcomp-\tli-\tance", "n Q n\tk V m\tp l aI\tV n s");
result.add("non-\tcon-\tfor-\tmi-\tty", "n Q n\tk V n\tf O@\tm V\tt i:");
result.add("non-\tcon-\tfor-\tmist", "n Q n\tk V n\tf O@\tm V s t");
result.add("non-\tcon-\tfor-\tmists", "n Q n\tk V n\tf O@\tm V s t s");
result.add("non-\tcon-\ttract", "n Q n\tk Q n\tt r { k t");
result.add("non-\tcon-\ttro-\tver-\tsial", "n Q n\tk Q n\tt r V\tv @r\tS V l");
result.add("non-\tcon-\tver-\tti-\tble", "n Q n\tk V n\tv @r\tt V\tb V l");
result.add("non-\tcorpo-\trate", "n Q n\tk O@ p\tr V t");
result.add("non-\tcri-\tmi-\tnal", "n Q n\tk r I\tm I\tn V l");
result.add("non-\tcu-\tmu-\tla-\ttive", "n Q n\tk j u: m\tj V\tl V\tt I v");
result.add("non-\tde-\tduc-\tti-\tble", "n Q n\td V\td V k\tt V\tb V l");
result.add("non-\tde-\tfense", "n Q n\td V\tf e n s");
result.add("non-\tde-\tscript", "n Q n\td V s\tk r I p t");
result.add("non-\tdis-\tcri-\tmi-\tna-\ttion", "n Q n\td I s\tk r I\tm I\tn eI\tS V n");
result.add("non-\tdis-\tcri-\tmi-\tna-\tto-\try", "n Q n\td I s\tk r I\tm I\tn V\tt O@\ti:");
result.add("non-\tdisc-\tri-\tmi-\tna-\ttion", "n Q n\td I s\tk r I\tm I\tn eI\tS V n");
result.add("non-\tdol-\tlar", "n Q n\td Q\tl @r");
result.add("non-\tdu-\tra-\tble", "n Q n\td U@\tV\tb V l");
result.add("non-\tdu-\tra-\tbles", "n Q n\td U@\tV\tb V l z");
result.add("non-\te-\tvent", "n Q\tn I\tv e n t");
result.add("non-\te-\txe-\tcu-\ttive", "n Q\tn I g\tz e k\tj V\tt I v");
result.add("non-\te-\txis-\ttent", "n Q\tn V g\tz I s\tt V n t");
result.add("non-\tex-\tclu-\tsive", "n Q\tn I k\ts k l u:\ts I v");
result.add("non-\tfa-\ttal", "n Q n\tf eI\tt V l");
result.add("non-\tfarm", "n Q n\tf Q@ m");
result.add("non-\tfat", "n Q n\tf { t");
result.add("non-\tfer-\trous", "n Q n\tf e@\tV s");
result.add("non-\tfi-\tnan-\tcial", "n Q n\tf I\tn { n\tS V l");
result.add("non-\tfic-\ttion", "n Q n\tf I k\tS V n");
result.add("non-\tfood", "n Q n\tf u: d");
result.add("non-\tgo-\tvern-\tmen-\ttal", "n Q n\tg V\tv @r n\tm e n\tt V l");
result.add("non-\tgo-\tvern-\tment", "n Q n\tg V\tv @r n\tm V n t");
result.add("non-\tgreek", "n Q n\tg r i: k");
result.add("non-\thu-\tman", "n Q n\th j u:\tm V n");
result.add("non-\tin-\tter-\tfe-\trence", "n Q\tn I n\tt @r\tf I@\tV n s");
result.add("non-\tin-\tter-\tven-\ttion", "n Q\tn I n\tt @r\tv e n\ttS V n");
result.add("non-\tinte-\trest", "n Q\tn I n\tt r V s t");
result.add("non-\tle-\tthal", "n Q n\tl i:\tT V l");
result.add("non-\tli-\tne-\tar", "n Q n\tl I\tn i:\t@r");
result.add("non-\tli-\ttur-\tgi-\tcal", "n Q n\tl I\tt @r\tdZ I\tk V l");
result.add("non-\tma-\tnage-\tment", "n Q n\tm {\tn I dZ\tm V n t");
result.add("non-\tma-\tnu-\tfac-\ttu-\tring", "n Q n\tm { n\tj V\tf { k\ttS @r\tI N");
result.add("non-\tmem-\tber", "n Q n\tm e m\tb @r");
result.add("non-\tmem-\tbers", "n Q n\tm e m\tb @r z");
result.add("non-\tmi-\tli-\tta-\try", "n Q n\tm I\tl I\tt e@\ti:");
result.add("non-\tna-\ttive", "n Q\tn eI\tt I v");
result.add("non-\tnu-\tcle-\tar", "n Q\tn u: k\tl i:\t@r");
result.add("non-\to-\tpe-\tra-\tting", "n Q\tn O:\tp @r\teI\tt I N");
result.add("non-\tpa-\tci-\tfist", "n Q n\tp {\ts I\tf I s t");
result.add("non-\tpar-\tti-\tsan", "n Q n\tp Q@\tt I\tz V n");
result.add("non-\tpay-\ting", "n Q n\tp eI\tI N");
result.add("non-\tpay-\tment", "n Q n\tp eI\tm V n t");
result.add("non-\tper-\tfor-\tming", "n Q n\tp @r\tf O@\tm I N");
result.add("non-\tpla-\tnar", "n Q n\tp l eI\tn @r");
result.add("non-\tplussed", "n Q n\tp l V s t");
result.add("non-\tpo-\tli-\tti-\tcal", "n Q n\tp V\tl I\tt I\tk V l");
result.add("non-\tpoi-\tso-\tnous", "n Q n\tp OI\tz V\tn V s");
result.add("non-\tpre-\tscrip-\ttion", "n Q n\tp r V s\tk r I p\tS V n");
result.add("non-\tpro-\tduc-\ttive", "n Q n\tp r V\td V k\tt I v");
result.add("non-\tpro-\tfes-\tsio-\tnal", "n Q n\tp r V\tf e\tS V\tn V l");
result.add("non-\tpro-\tfes-\tsio-\tnals", "n Q n\tp r V\tf e\tS V\tn V l z");
result.add("non-\tpub-\tlic", "n Q n\tp V b\tl I k");
result.add("non-\tra-\tcial", "n Q n\tr eI\tS V l");
result.add("non-\tre-\tcur-\tring", "n Q n\tr I\tk @r\tI N");
result.add("non-\tre-\tfun-\tda-\tble", "n Q n\tr V\tf V n\td V\tb V l");
result.add("non-\tre-\tgu-\tla-\tted", "n Q n\tr e g\tj V\tl eI\tt V d");
result.add("non-\tre-\tli-\tgious", "n Q n\tr V\tl I\tdZ V s");
result.add("non-\tre-\tne-\twa-\tble", "n Q n\tr i:\tn u:\tV\tb V l");
result.add("non-\tre-\tsi-\tden-\ttial", "n Q n\tr e\tz I\td e n\tS V l");
result.add("non-\tre-\tsi-\tdent", "n Q n\tr e\tz I\td V n t");
result.add("non-\tre-\tsi-\tdents", "n Q n\tr e\tz I\td e n t s");
result.add("non-\tres-\tpon-\tsive", "n Q n\tr V s\tp Q n\ts I v");
result.add("non-\tro-\tman", "n Q n\tr @U\tm V n");
result.add("non-\tru-\tling", "n Q n\tr u:\tl I N");
result.add("non-\tsec-\tta-\tri-\tan", "n Q n\ts e k\tt e@\ti:\tV n");
result.add("non-\tsen-\tsi-\tcal", "n Q n\ts e n\ts I\tk V l");
result.add("non-\tsense", "n Q n\ts e n s");
result.add("non-\tsmo-\tker", "n Q n\ts m @U\tk @r");
result.add("non-\tsmo-\tkers", "n Q n\ts m @U\tk @r z");
result.add("non-\tsmo-\tking", "n Q n\ts m @U\tk I N");
result.add("non-\tspe-\tci-\tfic", "n Q n\ts p V\ts I\tf I k");
result.add("non-\tspor-\tting", "n Q n\ts p O@\tt I N");
result.add("non-\tstan-\tdard", "n Q n\ts t { n\td @r d");
result.add("non-\tstar-\tter", "n Q n\ts t Q@\tt @r");
result.add("non-\tstick", "n Q n\ts t I k");
result.add("non-\tstop", "n Q n\ts t Q p");
result.add("non-\tstra-\tte-\tgic", "n Q n\ts t r V\tt i:\tdZ I k");
result.add("non-\tsu-\tper-\tvi-\tso-\try", "n Q n\ts u:\tp @r\tv aI\tz @r\ti:");
result.add("non-\tsur-\tgi-\tcal", "n Q n\ts @r\tdZ I\tk V l");
result.add("non-\tta-\txa-\tble", "n Q n\tt { k\ts V\tb V l");
result.add("non-\ttech-\tni-\tcal", "n Q n\tt e k\tn I\tk V l");
result.add("non-\tto-\txic", "n Q n\tt Q k\ts I k");
result.add("non-\ttra-\tdi-\ttio-\tnal", "n Q n\tt r V\td I\tS V\tn V l");
result.add("non-\ttrans-\tfe-\tra-\tble", "n Q n\tt r { n\ts f @r\tV\tb V l");
result.add("non-\tu-\tnion", "n Q n\tj u: n\tj V n");
result.add("non-\tver-\tbal", "n Q n\tv @r\tb V l");
result.add("non-\tvi-\to-\tlence", "n Q n\tv aI\tV\tl V n s");
result.add("non-\tvi-\to-\tlent", "n Q n\tv aI\tV\tl V n t");
result.add("non-\tvo-\tla-\ttile", "n Q n\tv Q\tl V\tt V l");
result.add("non-\tvo-\tting", "n Q n\tv @U\tt I N");
result.add("non-\twhite", "n Q n\tw aI t");
result.add("non-\twhites", "n Q n\tw aI t s");
result.add("non-\two-\tven", "n Q n\tw @U\tv V n");
result.add("non-\two-\tvens", "n Q n\tw @U\tv V n z");
result.add("none", "n V n");
result.add("none-\tsuch", "n V n\ts V tS");
result.add("none-\tthe-\tless", "n V n\tD V\tl e s");
result.add("nonp-\tro-\tfit", "n Q n\tp r Q\tf I t");
result.add("noo-\tdle", "n u:\td V l");
result.add("noo-\tdles", "n u:\td V l z");
result.add("noo-\tnan", "n u:\tn V n");
result.add("nook", "n U k");
result.add("nooks", "n U k s");
result.add("noon", "n u: n");
result.add("noon-\ttime", "n u: n\tt aI m");
result.add("noone", "n u: n");
result.add("noons", "n u: n z");
result.add("noose", "n u: s");
result.add("nope", "n @U p");
result.add("nor", "n O@");
result.add("nor-\tber-\tto", "n O@\tb @r\tt @U");
result.add("nor-\tbert", "n O@\tb @r t");
result.add("nor-\tby", "n O@\tb i:");
result.add("nor-\tco", "n O@\tk @U");
result.add("nor-\tcross", "n O@ k\tr O: s");
result.add("nor-\tden", "n O@\td V n");
result.add("nor-\tdi-\tca", "n O@\td I\tk V");
result.add("nor-\tdi-\tne", "n O@\td i:\tn i:");
result.add("nor-\tdic", "n O@\td I k");
result.add("nor-\tdin", "n O@\td I n");
result.add("nor-\tfolk", "n O@\tf V k");
result.add("nor-\tfolk's", "n O@\tf V k s");
result.add("nor-\tlan-\tder", "n O@\tl V n\td @r");
result.add("nor-\tland", "n O@\tl V n d");
result.add("nor-\tling", "n O@\tl I N");
result.add("nor-\tma", "n O@\tm V");
result.add("nor-\tma-\tli-\tty", "n O@\tm {\tl I\tt i:");
result.add("nor-\tma-\tli-\tza-\ttion", "n O@\tm V\tl I\tz eI\tS V n");
result.add("nor-\tma-\tli-\tzing", "n O@\tm V\tl aI\tz I N");
result.add("nor-\tma-\tlize", "n O@\tm V\tl aI z");
result.add("nor-\tma-\tlized", "n O@\tm V\tl aI z d");
result.add("nor-\tma-\ttive", "n O@\tm V\tt I v");
result.add("nor-\tmal", "n O@\tm V l");
result.add("nor-\tmal-\tcy", "n O@\tm V l\ts i:");
result.add("nor-\tmal-\tly", "n O@\tm V\tl i:");
result.add("nor-\tman", "n O@\tm V n");
result.add("nor-\tman-\tdie", "n O@\tm V n\td i:");
result.add("nor-\tman-\tdy", "n O@\tm V n\td i:");
result.add("nor-\tmand", "n O@\tm V n d");
result.add("nor-\tman's", "n O@\tm V n z");
result.add("nor-\tmie", "n O@\tm i:");
result.add("nor-\tming", "n O@\tm I N");
result.add("nor-\tmy", "n O@\tm i:");
result.add("nor-\tna", "n O@\tn V");
result.add("nor-\tplant", "n O@ p\tl { n t");
result.add("nor-\trie", "n O@\ti:");
result.add("nor-\tris", "n O@\tI s");
result.add("nor-\try", "n O@\ti:");
result.add("nor-\ttham", "n O@\tT V m");
result.add("nor-\tthamp-\tton", "n O@\tT { m\tp t V n");
result.add("nor-\tther", "n O@\tD @r");
result.add("nor-\tther-\tly", "n O@\tD @r\tl i:");
result.add("nor-\tther-\tner", "n O@\tD @r\tn @r");
result.add("nor-\tther-\tners", "n O@\tD @r\tn @r z");
result.add("nor-\tthern", "n O@\tD @r n");
result.add("nor-\tthern-\tmost", "n O@\tD @r n\tm @U s t");
result.add("nor-\tthey", "n O@\tD i:");
result.add("nor-\tthing-\tton", "n O@\tT I N\tt V n");
result.add("nor-\tton", "n O@\tt V n");
result.add("nor-\tton's", "n O@\tt V n z");
result.add("nor-\tvell", "n O@\tv V l");
result.add("nor-\tvil", "n O@\tv I l");
result.add("nor-\tvin", "n O@\tv I n");
result.add("nor-\twalk", "n O@\tw O: k");
result.add("nor-\tward", "n O@\tw @r d");
result.add("nor-\tway", "n O@\tw eI");
result.add("nor-\tway's", "n O@\tw eI z");
result.add("nor-\twe-\tgian", "n O@\tw i:\tdZ V n");
result.add("nor-\twe-\tgians", "n O@\tw i:\tdZ V n z");
result.add("nor-\twell", "n O@\tw e l");
result.add("nor-\twest", "n O@\tw e s t");
result.add("nor-\twich", "n O@\tw I tS");
result.add("nor-\twood", "n O@\tw U d");
result.add("nord", "n O@ d");
result.add("nord-\tgren", "n O@ d\tg r e n");
result.add("nord-\tman", "n O@ d\tm V n");
result.add("nord-\tstrom", "n O@ d\ts t r V m");
result.add("nord-\tstrom's", "n O@ d\ts t r V m z");
result.add("norge", "n O@ dZ");
result.add("nork", "n O@ k");
result.add("norm", "n O@ m");
result.add("norms", "n O@ m z");
result.add("norse", "n O@ s");
result.add("norse-\tmen", "n O@ s\tm e n");
result.add("norsk", "n O@ s k");
result.add("norte", "n O@ t");
result.add("north", "n O@ T");
result.add("north-\tbound", "n O@ T\tb aU n d");
result.add("north-\teas-\tter-\tly", "n O@\tT i: s\tt @r\tl i:");
result.add("north-\teas-\tter-\tner", "n O@\tT i: s\tt @r\tn @r");
result.add("north-\teas-\tter-\tners", "n O@\tT i: s\tt @r\tn @r z");
result.add("north-\teas-\ttern", "n O@\tT i: s\tt @r n");
result.add("north-\teast", "n O@\tT i: s t");
result.add("north-\teast-\tward", "n O@\tT i: s\tt w @r d");
result.add("north-\teast's", "n O@\tT i: s t s");
result.add("north-\tfield", "n O@ T\tf i: l d");
result.add("north-\tland", "n O@ T\tl { n d");
result.add("north-\trop", "n O@ T\tr V p");
result.add("north-\trop's", "n O@ T\tr V p s");
result.add("north-\trup", "n O@ T\tr V p");
result.add("north-\trup's", "n O@ T\tr V p s");
result.add("north-\tvale", "n O@ T\tv eI l");
result.add("north-\tward", "n O@ T\tw @r d");
result.add("north-\tway", "n O@ T\tw eI");
result.add("north-\twes-\tter-\tly", "n O@ T\tw e s\tt @r\tl i:");
result.add("north-\twes-\ttern", "n O@ T\tw e s\tt @r n");
result.add("north-\twest", "n O@ T\tw e s t");
result.add("north-\twest's", "n O@ T\tw e s t s");
result.add("north's", "n O@ T s");
result.add("no's", "n @U z");
result.add("nos-\ttal-\tgia", "n O: s\tt { l\tdZ V");
result.add("nos-\ttal-\tgic", "n O: s\tt { l\tdZ I k");
result.add("nos-\ttra", "n O: s\tt r V");
result.add("nos-\ttra-\tda-\tmus", "n O: s\tt r V\td {\tm V s");
result.add("nos-\ttrand", "n Q s\tt r V n d");
result.add("nos-\ttril", "n Q s\tt r I l");
result.add("nos-\ttrils", "n Q s\tt r I l z");
result.add("nos-\ttrums", "n Q s\tt r V m z");
result.add("nose", "n @U z");
result.add("nose-\tbleed", "n @U z\tb l i: d");
result.add("nose-\tdive", "n @U z\td aI v");
result.add("nose-\tdived", "n @U z\td aI v d");
result.add("nosed", "n @U z d");
result.add("noss", "n O: s");
result.add("not", "n Q t");
result.add("not-\tches", "n Q\ttS V z");
result.add("not-\tre", "n @U t\tr V");
result.add("not-\ttage", "n Q\tt I dZ");
result.add("not-\tting-\tham", "n Q\tt I N\th { m");
result.add("not-\twith-\tstan-\tding", "n Q t\tw I T\ts t { n\td I N");
result.add("notch", "n Q tS");
result.add("notched", "n Q tS t");
result.add("note", "n @U t");
result.add("note-\tbook", "n @U t\tb U k");
result.add("note-\tbooks", "n @U t\tb U k s");
result.add("note-\thol-\tder", "n @U t\th @U l\td @r");
result.add("note-\twor-\tthy", "n @U t\tw @r\tD i:");
result.add("notes", "n @U t s");
result.add("note's", "n @U t s");
result.add("nots", "n Q t s");
result.add("nott", "n Q t");
result.add("notte", "n Q t");
result.add("nou-\tri-\tshing", "n @r\tI\tS I N");
result.add("nou-\trish", "n @r\tI S");
result.add("nou-\trish-\tment", "n @r\tI S\tm V n t");
result.add("nou-\trished", "n @r\tI S t");
result.add("nou-\tveau", "n u:\tv @U");
result.add("nou-\tvelle", "n u:\tv e l");
result.add("noun", "n aU n");
result.add("nov-\tgo-\trod", "n Q v\tg @r\tQ d");
result.add("now", "n aU");
result.add("noyce", "n OI s");
result.add("noyes", "n OI z");
result.add("noz-\tzle", "n Q\tz V l");
result.add("noz-\tzles", "n Q\tz V l z");
result.add("n's", "e n z");
result.add("nth", "e n T");
result.add("nu", "n u:");
result.add("nu-\tan-\tces", "n u:\tQ n\ts V z");
result.add("nu-\tance", "n u:\tQ n s");
result.add("nu-\tanced", "n u:\tQ n s t");
result.add("nu-\tbi-\tan", "n j u:\tb i:\tV n");
result.add("nu-\tcle-\ta-\ttion", "n u: k\tl i:\teI\tS V n");
result.add("nu-\tcle-\tar", "n u: k\tl i:\t@r");
result.add("nu-\tcle-\tic", "n u: k\tl eI\tI k");
result.add("nu-\tcle-\to-\tnic", "n V k\tl i:\tQ\tn I k");
result.add("nu-\tcle-\to-\tnics", "n V k\tl i:\tQ\tn I k s");
result.add("nu-\tcle-\to-\ttide", "n u: k\tl i:\tV\tt aI d");
result.add("nu-\tcle-\tus", "n u: k\tl i:\tV s");
result.add("nu-\tdi-\tty", "n u:\td I\tt i:");
result.add("nu-\tdist", "n u:\td I s t");
result.add("nu-\tgent", "n u:\tdZ V n t");
result.add("nu-\tme-\tral", "n u:\tm @r\tV l");
result.add("nu-\tme-\trals", "n u:\tm @r\tV l z");
result.add("nu-\tme-\tri-\tcal", "n u:\tm e@\tI\tk V l");
result.add("nu-\tme-\tric", "n u:\tm e@\tI k");
result.add("nu-\tme-\trical-\tly", "n u:\tm e@\tI k\tl i:");
result.add("nu-\tme-\tro-\tlo-\tgy", "n u:\tm @r\tQ\tl V\tdZ i:");
result.add("nu-\tme-\trous", "n u:\tm @r\tV s");
result.add("nu-\tmi-\tdi-\ta", "n u:\tm I\td i:\tV");
result.add("nu-\tmia", "n u: m\tj V");
result.add("nu-\tmis-\tma-\ttic", "n u:\tm I s\tm {\tt I k");
result.add("nu-\tmis-\tma-\ttics", "n u:\tm I s\tm {\tt I k s");
result.add("nu-\tmis-\tma-\ttists", "n u:\tm I s\tm V\tt I s t s");
result.add("nu-\tnez", "n u:\tn e z");
result.add("nu-\trem-\tberg", "n U@\tV m\tb @r g");
result.add("nu-\trey-\tev", "n @r\taI\tV v");
result.add("nu-\ttra-\tsweet", "n u: t\tr V s\tw i: t");
result.add("nub", "n V b");
result.add("nuc-\tci", "n u:\ttS i:");
result.add("nuc-\tle-\ti", "n u: k\tl i:\taI");
result.add("nud-\tges", "n V\tdZ V z");
result.add("nud-\tging", "n V\tdZ I N");
result.add("nudd", "n V d");
result.add("nude", "n u: d");
result.add("nudes", "n u: d z");
result.add("nudge", "n V dZ");
result.add("nudged", "n V dZ d");
result.add("nue-\tvo", "n w eI\tv @U");
result.add("nug-\tget", "n V\tg V t");
result.add("nug-\tgets", "n V\tg V t s");
result.add("nug-\tget's", "n V\tg V t s");
result.add("nui-\tsance", "n u:\ts V n s");
result.add("nuke", "n u: k");
result.add("nukes", "n u: k s");
result.add("null", "n V l");
result.add("num-\tber", "n V m\tb @r");
result.add("num-\tbing", "n V\tm I N");
result.add("num-\tbing-\tly", "n V\tm I N\tl i:");
result.add("num-\tmi", "n u:\tm i:");
result.add("numb-\tness", "n V m\tn V s");
result.add("nun", "n V n");
result.add("nun-\tci-\to", "n V n\ts i:\t@U");
result.add("nun-\tne-\try", "n V\tn @r\ti:");
result.add("nun-\tnel-\tly", "n V\tn V\tl i:");
result.add("nunes", "n u: n z");
result.add("nunn", "n V n");
result.add("nunn's", "n V n z");
result.add("nuns", "n V n z");
result.add("nun's", "n V n z");
result.add("nuo-\tva", "n w @U\tv V");
result.add("nuo-\tvo", "n w @U\tv @U");
result.add("nup-\ttial", "n V p\ttS V l");
result.add("nur-\tmi", "n U@\tm i:");
result.add("nur-\tse-\tries", "n @r\ts @r\ti: z");
result.add("nur-\tse-\try", "n @r\ts @r\ti:");
result.add("nur-\tse-\try-\tman", "n @r\ts @r\ti:\tm { n");
result.add("nur-\tse-\try-\tmen", "n @r\ts @r\ti:\tm V n");
result.add("nur-\tses", "n @r\ts V z");
result.add("nur-\tse's", "n @r\ts V z");
result.add("nur-\tsing", "n @r\ts I N");
result.add("nur-\ttu-\trer", "n @r\tt @r\t@r");
result.add("nur-\ttu-\tring", "n @r\ttS @r\tI N");
result.add("nur-\tture", "n @r\ttS @r");
result.add("nur-\ttured", "n @r\ttS @r d");
result.add("nur-\ttures", "n @r\ttS @r z");
result.add("nurse", "n @r s");
result.add("nursed", "n @r s t");
result.add("nuss-\tbaum", "n V s\tb aU m");
result.add("nuss-\tbaum's", "n V s\tb aU m z");
result.add("nut", "n V t");
result.add("nut-\tcrac-\tker", "n V t\tk r {\tk @r");
result.add("nut-\tlets", "n V t\tl V t s");
result.add("nut-\tley", "n V t\tl i:");
result.add("nut-\tmeg", "n V t\tm e g");
result.add("nut-\tri-\ta", "n u: t\tr i:\tV");
result.add("nut-\tri-\tent", "n u: t\tr i:\tV n t");
result.add("nut-\tri-\tents", "n u: t\tr i:\tV n t s");
result.add("nut-\tri-\ttio-\tnal", "n u: t\tr I\tS V\tn V l");
result.add("nut-\tri-\ttio-\tnal-\tly", "n u: t\tr I\tS V\tn V\tl i:");
result.add("nut-\tri-\ttio-\tnist", "n u: t\tr I\tS V\tn I s t");
result.add("nut-\tri-\ttio-\tnists", "n u: t\tr I\tS V\tn I s t s");
result.add("nut-\tri-\ttion", "n u: t\tr I\tS V n");
result.add("nut-\tri-\ttious", "n u: t\tr I\tS V s");
result.add("nut-\tri-\ttive", "n u: t\tr I\tt I v");
result.add("nut-\tshell", "n V\ttS e l");
result.add("nut-\ttall", "n V\tt V l");
result.add("nut-\tter", "n V\tt @r");
result.add("nut-\tting", "n V\tt I N");
result.add("nut-\tty", "n V\tt i:");
result.add("nuts", "n V t s");
result.add("nut's", "n V t s");
result.add("nuz-\tzi", "n u: t\ts i:");
result.add("nuz-\tzle", "n V\tz V l");
result.add("ny-\tack", "n aI\t{ k");
result.add("ny-\tberg", "n aI\tb @r g");
result.add("ny-\tdi-\ta", "n I\td i:\tV");
result.add("ny-\tere-\tre", "n aI\t@r\tI@");
result.add("ny-\tlon", "n aI\tl Q n");
result.add("ny-\tlons", "n aI\tl Q n z");
result.add("ny-\tman", "n aI\tm V n");
result.add("ny-\tnex", "n aI\tn e k s");
result.add("ny-\tquist", "n I k\tw I s t");
result.add("nye", "n aI");
result.add("nyet", "n j e t");
result.add("nym-\tpho-\tma-\tni-\tac", "n I m\tf V\tm eI\tn i:\t{ k");
result.add("nym-\tpho-\tma-\tni-\tacs", "n I m\tf V\tm eI\tn i:\t{ k s");
result.add("nymph", "n I m f");
result.add("nymphs", "n I m f s");
result.add("nys-\tsa", "n I\ts V");
result.add("nyx", "n I k s");
result.add("o", "@U");
result.add("o'", "@U");
result.add("o-\ta-\td", "@U\teI\td i:");
result.add("o-\ta-\thu", "@U\tQ\th u:");
result.add("o-\ta-\ts", "@U\teI\te s");
result.add("o-\ta-\tses", "@U\teI\ts i: z");
result.add("o-\ta-\tsis", "@U\teI\ts I s");
result.add("o-\tba", "@U\tb V");
result.add("o-\tba-\tdi-\tah", "@U\tb V\td aI\tV");
result.add("o-\tba-\tra", "@U\tb Q@\tV");
result.add("o-\tbe-\tdi-\tence", "@U\tb i:\td i:\tV n s");
result.add("o-\tbe-\tdi-\tent", "@U\tb i:\td i:\tV n t");
result.add("o-\tbe-\tdi-\tent-\tly", "@U\tb i:\td i:\tV n\tt l i:");
result.add("o-\tbe-\tli-\ta", "@U\tb e\tl i:\tV");
result.add("o-\tbe-\tron", "@U\tb @r\tQ n");
result.add("o-\tbe-\tsi-\tty", "@U\tb i:\ts I\tt i:");
result.add("o-\tbeid", "@U\tb aI d");
result.add("o-\tber", "@U\tb @r");
result.add("o-\tber-\thau-\tsen", "@U\tb @r\th aU\tz V n");
result.add("o-\tber-\tlin", "@U\tb @r\tl I n");
result.add("o-\tberg", "@U\tb @r g");
result.add("o-\tbert", "Q\tb @r t");
result.add("o-\tbese", "@U\tb i: s");
result.add("o-\tbey", "@U\tb eI");
result.add("o-\tbey-\ting", "@U\tb eI\tI N");
result.add("o-\tbeyed", "@U\tb eI d");
result.add("o-\tbeys", "@U\tb eI z");
result.add("o-\tbi-\ttu-\ta-\tries", "@U\tb I\ttS u:\te@\ti: z");
result.add("o-\tbi-\ttu-\ta-\try", "@U\tb I\ttS u:\te@\ti:");
result.add("o-\tbie", "@U\tb i:");
result.add("o-\tbis-\tpo", "@U\tb I s\tp @U");
result.add("o-\tbit", "@U\tb I t");
result.add("o-\tbits", "Q\tb I t s");
result.add("o-\tbo-\tist", "@U\tb @U\tI s t");
result.add("o-\tboe", "@U\tb @U");
result.add("o'-\tboyle", "@U\tb OI l");
result.add("o'-\tbri-\ten", "@U b\tr aI\tV n");
result.add("o'-\tbri-\ten's", "@U b\tr aI\tV n z");
result.add("o-\tca-\tla", "@U\tk {\tl V");
result.add("o-\tca-\tna", "@U\tk {\tn V");
result.add("o-\tce-\ta-\tnic", "@U\tS i:\t{\tn I k");
result.add("o-\tce-\tlot", "Q\ts V\tl Q t");
result.add("o-\tce-\tlot's", "Q\ts V\tl Q t s");
result.add("o-\tcea-\tno-\tgra-\tpher", "@U\tS V\tn Q g\tr V\tf @r");
result.add("o-\tcea-\tno-\tgra-\tphic", "@U\tS V\tn V g\tr {\tf I k");
result.add("o-\tcea-\tno-\tgra-\tphy", "@U\tS V\tn Q g\tr V\tf i:");
result.add("o-\tcean", "@U\tS V n");
result.add("o-\tcean-\tfront", "@U\tS V n\tf r V n t");
result.add("o-\tcean-\tgo-\ting", "@U\tS V n\tg @U\tI N");
result.add("o-\tcean-\tside", "@U\tS V n\ts aI d");
result.add("o-\tcean-\tview", "@U\tS V n\tv j u:");
result.add("o-\tceans", "@U\tS V n z");
result.add("o-\tcean's", "@U\tS V n z");
result.add("o-\tcho-\ta", "Q\ttS @U\tV");
result.add("o-\tchre", "@U\tk @r");
result.add("o-\tcil-\tla", "@U\ts I\tl V");
result.add("o'-\tclock", "V k\tl Q k");
result.add("o'-\tcon-\tnell", "@U\tk Q\tn V l");
result.add("o-\tcon-\tnell", "@U\tk Q\tn V l");
result.add("o'-\tcon-\tner", "@U\tk Q\tn @r");
result.add("o'-\tcon-\tnor", "@U\tk Q\tn @r");
result.add("o-\tcon-\tnor", "@U\tk Q\tn @r");
result.add("o'-\tcon-\tnor's", "@U\tk Q\tn @r z");
result.add("o-\tda", "@U\td V");
result.add("o-\tde-\ta", "Q\td i:\tV");
result.add("o-\tde-\tle", "@U\td e\tl i:");
result.add("o-\tde-\tlet", "Q\td V\tl V t");
result.add("o-\tde-\tli-\ta", "@U\td e\tl i:\tV");
result.add("o-\tde-\tlin-\tda", "@U\td e\tl i: n\td V");
result.add("o-\tde-\ton", "@U\td i:\tV n");
result.add("o-\tded", "@U\td e d");
result.add("o-\tdel-\tla", "@U\td e\tl V");
result.add("o'-\tdell", "@U\td e l");
result.add("o-\tdell", "@U\td e l");
result.add("o-\tdem", "@U\td e m");
result.add("o-\tden", "@U\td V n");
result.add("o-\tder", "@U\td @r");
result.add("o-\tdes-\tsa", "@U\td e\ts V");
result.add("o-\tdette", "@U\td e t");
result.add("o-\tdi-\tli-\ta", "@U\td i:\tl i:\tV");
result.add("o-\tdi-\tous", "@U\td i:\tV s");
result.add("o-\tdin", "@U\td I n");
result.add("o-\tdle", "@U\td V l");
result.add("o-\tdo-\tme-\tter", "@U\td Q\tm V\tt @r");
result.add("o-\tdo-\tme-\tters", "@U\td Q\tm V\tt @r z");
result.add("o'-\tdo-\tno-\tghue", "@U\td Q\tn V g\tj u:");
result.add("o-\tdo-\trant", "@U\td @r\tV n t");
result.add("o-\tdo-\trous", "@U\td @r\tV s");
result.add("o-\tdom", "@U\td V m");
result.add("o'-\tdon-\tnell", "@U\td Q\tn V l");
result.add("o-\tdon-\tnell", "@U\td Q\tn V l");
result.add("o'-\tdon-\tnell's", "@U\td Q\tn V l z");
result.add("o-\tdor", "@U\td @r");
result.add("o-\tdor-\tless", "@U\td @r\tl V s");
result.add("o-\tdors", "@U\td @r z");
result.add("o-\tdum", "@U\td V m");
result.add("o'-\tdwyer", "@U d\tw aI r");
result.add("o-\tdys-\tse-\tus", "@U\td I\ts i:\tV s");
result.add("o-\tdys-\tsey", "Q\td V\ts i:");
result.add("o-\tdys-\tsey's", "Q\td V\ts i: z");
result.add("o-\tfal-\tlon", "Q\tf V\tl Q n");
result.add("o-\tfe-\tli-\ta", "@U\tf eI\tl i:\tV");
result.add("o-\tfi-\tli-\ta", "@U\tf i:\tl i:\tV");
result.add("o-\tga-\tta", "@U\tg Q\tt V");
result.add("o-\tga-\twa", "@U\tg Q\tw V");
result.add("o-\tgil-\tvie", "Q\tdZ I l\tv i:");
result.add("o-\tgil-\tvy", "@U\tg I l\tv i:");
result.add("o-\tgil-\tvy's", "@U\tg I l\tv i: z");
result.add("o-\tgle", "@U\tg V l");
result.add("o-\tgle-\tthorpe", "@U\tg V l\tT O@ p");
result.add("o-\tgled", "@U\tg V l d");
result.add("o-\tgles", "@U\tg V l z");
result.add("o-\tgles-\tby", "Q\tg V l\ts b i:");
result.add("o'-\tgra-\tdy", "@U g\tr eI\td i:");
result.add("o-\tgre", "@U\tg @r");
result.add("o-\tgren", "Q g\tr e n");
result.add("o-\tgress", "@U g\tr V s");
result.add("o'-\tha-\tra", "@U\th e@\tV");
result.add("o-\tha-\tre", "@U\th Q@\teI");
result.add("o-\tha-\tshi", "@U\th Q\tS i:");
result.add("o'-\thare", "@U\th e@");
result.add("o-\thi-\to", "@U\th aI\t@U");
result.add("o-\thi-\to-\tan", "@U\th aI\t@U\tV n");
result.add("o-\thi-\to-\tans", "@U\th aI\t@U\tV n z");
result.add("o-\thi-\to's", "@U\th aI\t@U z");
result.add("o-\tj", "@U\tdZ eI");
result.add("o-\tjib-\twa", "@U\tdZ I b\tw V");
result.add("o-\tk", "@U\tk eI");
result.add("o-\tk-\ten", "@U\tk eI\tV n");
result.add("o-\tka", "@U\tk V");
result.add("o-\tka-\tmo-\tto", "@U\tk V\tm @U\tt @U");
result.add("o-\tka-\tza-\tki", "@U\tk Q\tz Q\tk i:");
result.add("o-\tkay", "@U\tk eI");
result.add("o-\tkayed", "@U\tk eI d");
result.add("o-\tkays", "@U\tk eI z");
result.add("o-\tkee-\tcho-\tbee", "@U\tk i:\ttS @U\tb i:");
result.add("o'-\tkeeffe", "@U\tk i: f");
result.add("o-\tkey", "@U\tk i:");
result.add("o-\tki", "@U\tk i:");
result.add("o-\tki-\tna-\twa", "@U\tk I\tn Q\tw V");
result.add("o-\tki-\tna-\twans", "@U\tk I\tn Q\tw V n z");
result.add("o-\tkie", "@U\tk i:");
result.add("o-\tku-\tbo", "@U\tk u:\tb @U");
result.add("o-\tkun", "@U\tk u: n");
result.add("o-\tla", "@U\tl V");
result.add("o-\tla-\tju-\twon", "V\tl aI\tdZ u:\tQ n");
result.add("o-\tla-\tju-\twon's", "V\tl aI\tdZ u:\tQ n z");
result.add("o-\tla-\tthe", "@U\tl {\tT i:");
result.add("o-\tlaf", "@U\tl Q f");
result.add("o-\tland", "Q\tl V n d");
result.add("o-\tle-\ta", "Q\tl i:\tV");
result.add("o-\tle-\tan-\tder", "@U\tl i:\t{ n\td @r");
result.add("o-\tle-\tand-\trin", "@U\tl i:\t{ n\td r I n");
result.add("o-\tle-\tas-\tter", "@U\tl i:\t{ s\tt @r");
result.add("o-\tle-\tfin", "@U\tl V\tf I n");
result.add("o-\tle-\tfins", "@U\tl V\tf I n z");
result.add("o'-\tlea-\try", "@U\tl I@\ti:");
result.add("o-\tlea-\try", "Q\tl @r\ti:");
result.add("o'-\tlea-\try's", "@U\tl I@\ti: z");
result.add("o-\tlean", "@U\tl i: n");
result.add("o-\tleg", "@U\tl V g");
result.add("o-\tli-\tgar-\tchy", "Q\tl I\tg Q@\tk i:");
result.add("o-\tli-\tgarch", "@U\tl I\tg Q@ k");
result.add("o-\tli-\tgarchs", "@U\tl I\tg Q@ k z");
result.add("o-\tli-\tgo-\tcene", "Q\tl I\tg @U\ts i: n");
result.add("o-\tli-\tgo-\tpo-\tlis-\ttic", "@U\tl I\tg V\tp @U\tl I s\tt I k");
result.add("o-\tli-\tgo-\tpo-\tly", "Q\tl I\tg Q\tp V\tl i:");
result.add("o-\tli-\tphant", "Q\tl I\tf V n t");
result.add("o-\tli-\tva", "@U\tl i:\tv V");
result.add("o-\tli-\tve-\tro", "@U\tl i:\tv e@\t@U");
result.add("o-\tli-\tvei-\tra", "Q\tl I\tv eI\tr V");
result.add("o-\tli-\tver", "Q\tl I\tv @r");
result.add("o-\tli-\tver's", "Q\tl I\tv @r z");
result.add("o-\tli-\tvet-\tti", "Q\tl I\tv e\tt i:");
result.add("o-\tli-\tvet-\tti's", "Q\tl I\tv e\tt i: z");
result.add("o-\tli-\tvette", "Q\tl I\tv e t");
result.add("o-\tli-\tvi-\ta", "@U\tl I\tv i:\tV");
result.add("o-\tli-\tvi-\ter", "@U\tl I\tv i:\teI");
result.add("o-\tli-\tvine", "Q\tl I\tv i: n");
result.add("o-\tlin", "@U\tl I n");
result.add("o-\tlinde", "Q\tl I n d");
result.add("o-\tlin's", "@U\tl I n z");
result.add("o-\tlive", "Q\tl I v");
result.add("o-\tlives", "Q\tl I v z");
result.add("o-\tlym-\tpi-\ta", "@U\tl I m\tp i:\tV");
result.add("o-\tlym-\tpi-\tad", "@U\tl I m\tp i:\t{ d");
result.add("o-\tlym-\tpi-\tan", "@U\tl I m\tp i:\tV n");
result.add("o-\tlym-\tpi-\tans", "@U\tl I m\tp i:\tV n z");
result.add("o-\tlym-\tpi-\tas", "@U\tl I m\tp i:\tV s");
result.add("o-\tlym-\tpi-\ta's", "@U\tl I m\tp i:\tV z");
result.add("o-\tlym-\tpic", "@U\tl I m\tp I k");
result.add("o-\tlym-\tpics", "@U\tl I m\tp I k s");
result.add("o-\tlym-\tpus", "@U\tl I m\tp V s");
result.add("o-\tma-\tha", "@U\tm V\th Q");
result.add("o-\tma-\tha's", "@U\tm V\th Q z");
result.add("o-\tma-\tni", "@U\tm Q\tn i:");
result.add("o'-\tmal-\tley", "@U\tm {\tl i:");
result.add("o-\tman", "@U\tm Q n");
result.add("o-\tmar", "@U\tm Q@");
result.add("o-\tme-\tga", "@U\tm e\tg V");
result.add("o-\tmen", "@U\tm V n");
result.add("o-\tmens", "@U\tm V n z");
result.add("o-\tmer", "@U\tm @r");
result.add("o-\tmi-\tnous", "Q\tm I\tn V s");
result.add("o-\tmi-\tnous-\tly", "Q\tm I\tn V s\tl i:");
result.add("o-\tmis-\tsion", "@U\tm I\tS V n");
result.add("o-\tmis-\tsions", "@U\tm I\tS V n z");
result.add("o-\tmit", "@U\tm I t");
result.add("o-\tmit-\tted", "@U\tm I\tt V d");
result.add("o-\tmit-\tting", "@U\tm I\tt I N");
result.add("o-\tmits", "@U\tm I t s");
result.add("o-\tna", "V\tn Q");
result.add("o-\tna-\tgers", "Q\tn V\tdZ @r z");
result.add("o-\tna-\twa", "@U\tn Q\tw V");
result.add("o-\tnan", "@U\tn V n");
result.add("o-\tnas-\tsi-\ts's", "@U\tn {\ts I\ts V z");
result.add("o-\tnas-\tsis", "@U\tn {\ts I s");
result.add("o-\tne-\trous", "@U\tn @r\tV s");
result.add("o-\tneal", "@U\tn i: l");
result.add("o-\tnei-\tda", "@U\tn aI\td V");
result.add("o'-\tneil", "@U\tn i: l");
result.add("o-\tneil", "@U\tn i: l");
result.add("o'-\tneill", "@U\tn i: l");
result.add("o-\tneill", "@U\tn i: l");
result.add("o'-\tneill's", "@U\tn i: l z");
result.add("o-\tnion", "V n\tj V n");
result.add("o-\tnions", "V n\tj V n z");
result.add("o-\tno", "@U\tn @U");
result.add("o-\tno-\tmas-\ttic", "Q\tn V\tm { s\tt I k");
result.add("o-\tno-\tmas-\ttics", "Q\tn V\tm { s\tt I k s");
result.add("o-\tnon-\tda-\tga", "Q\tn V n\td O:\tg V");
result.add("o-\tnus", "@U\tn V s");
result.add("o-\tpa-\tci-\tty", "@U\tp {\ts I\tt i:");
result.add("o-\tpa-\tli-\tna", "@U\tp Q\tl i:\tn V");
result.add("o-\tpa-\tline", "@U\tp V\tl i: n");
result.add("o-\tpa-\tlines", "@U\tp V\tl i: n z");
result.add("o-\tpal", "@U\tp V l");
result.add("o-\tpal's", "@U\tp V l z");
result.add("o-\tpaque", "@U\tp eI k");
result.add("o-\tpe-\tner", "@U\tp V\tn @r");
result.add("o-\tpe-\tners", "@U\tp V\tn @r z");
result.add("o-\tpe-\tning", "@U\tp V\tn I N");
result.add("o-\tpe-\tnings", "@U\tp V\tn I N z");
result.add("o-\tpe-\tra-\tble", "Q\tp @r\tV\tb V l");
result.add("o-\tpe-\tra-\tted", "Q\tp @r\teI\tt V d");
result.add("o-\tpe-\tra-\ttic", "Q\tp @r\t{\tt I k");
result.add("o-\tpe-\tra-\tting", "Q\tp @r\teI\tt I N");
result.add("o-\tpe-\tra-\ttio-\tnal", "Q\tp @r\teI\tS V\tn V l");
result.add("o-\tpe-\tra-\ttio-\tnal-\tly", "Q\tp @r\teI\tS V\tn V\tl i:");
result.add("o-\tpe-\tra-\ttion", "Q\tp @r\teI\tS V n");
result.add("o-\tpe-\tra-\ttions", "Q\tp @r\teI\tS V n z");
result.add("o-\tpe-\tra-\ttion's", "Q\tp @r\teI\tS V n z");
result.add("o-\tpe-\tra-\ttive", "Q\tp @r\tV\tt I v");
result.add("o-\tpe-\tra-\ttives", "Q\tp @r\tV\tt I v z");
result.add("o-\tpe-\tra-\ttor", "Q\tp @r\teI\tt @r");
result.add("o-\tpe-\tra-\ttors", "Q\tp @r\teI\tt @r z");
result.add("o-\tpe-\tra-\ttor's", "Q\tp @r\teI\tt @r z");
result.add("o-\tpe-\tran-\tdi", "Q\tp @r\t{ n\td i:");
result.add("o-\tpe-\trant", "Q\tp @r\tV n t");
result.add("o-\tpe-\trate", "Q\tp @r\teI t");
result.add("o-\tpe-\trates", "Q\tp @r\teI t s");
result.add("o-\tpe-\tret-\tta", "Q\tp @r\te\tt V");
result.add("o-\tpe-\tret-\ttas", "Q\tp @r\te\tt V z");
result.add("o-\tpec", "@U\tp e k");
result.add("o-\tpel", "@U\tp V l");
result.add("o-\tpel's", "@U\tp V l z");
result.add("o-\tpen", "@U\tp V n");
result.add("o-\tpen-\tly", "@U\tp V n\tl i:");
result.add("o-\tpen-\tness", "@U\tp V n\tn V s");
result.add("o-\tpen-\twork", "@U\tp V n\tw @r k");
result.add("o-\tpened", "@U\tp V n d");
result.add("o-\tpens", "@U\tp V n z");
result.add("o-\tpi-\tate", "@U\tp i:\tV t");
result.add("o-\tpi-\tates", "@U\tp i:\tV t s");
result.add("o-\tpi-\tning", "@U\tp aI\tn I N");
result.add("o-\tpi-\tnio-\tna-\tted", "V\tp I n\tj V\tn eI\tt V d");
result.add("o-\tpi-\tnio-\tnate", "V\tp I n\tj V\tn eI t");
result.add("o-\tpi-\tnion", "V\tp I n\tj V n");
result.add("o-\tpi-\tnions", "V\tp I n\tj V n z");
result.add("o-\tpi-\tum", "@U\tp i:\tV m");
result.add("o-\tpie", "@U\tp i:");
result.add("o-\tpine", "@U\tp aI n");
result.add("o-\tpined", "@U\tp aI n d");
result.add("o-\tpines", "@U\tp aI n z");
result.add("o-\tpos-\tsum", "@U\tp Q\ts V m");
result.add("o-\tpu-\tlence", "Q p\tj V\tl V n s");
result.add("o-\tpu-\tlent", "Q p\tj V\tl V n t");
result.add("o-\tpus", "@U\tp V s");
result.add("o-\tra", "O@\tV");
result.add("o-\tra-\tbel", "O@\tQ\tb e l");
result.add("o-\tra-\tbelle", "O@\tV\tb V l");
result.add("o-\tra-\tcle", "O@\tV\tk V l");
result.add("o-\tra-\tcles", "O@\tV\tk V l z");
result.add("o-\tra-\tcle's", "O@\tV\tk V l z");
result.add("o-\tra-\tli-\ta", "O@\tQ\tl i:\tV");
result.add("o-\tra-\tlie", "O@\tV\tl i:");
result.add("o-\tra-\ttion", "O@\teI\tS V n");
result.add("o-\tra-\ttions", "O@\teI\tS V n z");
result.add("o-\tra-\tto-\tri-\tcal", "O@\tV\tt O@\tV\tk V l");
result.add("o-\tra-\tto-\tri-\to", "Q@\tV\tt O@\ti:\t@U");
result.add("o-\tra-\tto-\try", "O@\tV\tt O@\ti:");
result.add("o-\tra-\ttor", "O@\tV\tt @r");
result.add("o-\tra-\ttors", "O@\tV\tt @r z");
result.add("o-\tral", "O@\tV l");
result.add("o-\tral-\tly", "O@\tV\tl i:");
result.add("o-\tram", "O@\tV m");
result.add("o-\tran", "O@\tQ n");
result.add("o-\tran-\tges", "O@\tV n\tdZ V z");
result.add("o-\tran-\tgu-\ttan", "O@\t{\tN V\tt { n");
result.add("o-\tran-\tgu-\ttans", "O@\t{\tN V\tt { n z");
result.add("o-\tran-\tgu-\ttan's", "O@\t{\tN V\tt { n z");
result.add("o-\trange", "O@\tV n dZ");
result.add("o-\trange-\tburg", "O@\tV n\tdZ b @r g");
result.add("o-\tre-\tga-\tno", "O@\te\tg V\tn @U");
result.add("o-\tre-\tgo-\tni-\tan", "O@\tV\tg @U\tn i:\tV n");
result.add("o-\tre-\tgo-\tni-\tans", "O@\tV\tg @U\tn i:\tV n z");
result.add("o-\tre-\tgon", "O@\tV\tg V n");
result.add("o-\tre-\tgon's", "O@\tV\tg V n z");
result.add("o-\tre-\tli-\ta", "O@\te\tl i:\tV");
result.add("o-\tre-\to", "O@\ti:\t@U");
result.add("o-\tre-\tstes", "O@\te s\tt i: z");
result.add("o'-\treil-\tly", "@U\tr aI\tl i:");
result.add("o-\trel", "O@\tV l");
result.add("o-\trem", "O@\te m");
result.add("o-\tren", "O@\tV n");
result.add("o-\tren-\tda", "O@\te n\td V");
result.add("o-\tri", "O@\ti:");
result.add("o-\tri-\ta-\tna", "O@\ti:\t{\tn V");
result.add("o-\tri-\ten-\tta-\tted", "O@\ti:\tV n\tt eI\tt V d");
result.add("o-\tri-\ten-\tta-\ttion", "O@\ti:\te n\tt eI\tS V n");
result.add("o-\tri-\ten-\tta-\ttions", "O@\ti:\te n\tt eI\tS V n z");
result.add("o-\tri-\ten-\ttal", "O@\ti:\te n\tt V l");
result.add("o-\tri-\ten-\ttals", "O@\ti:\te n\tt V l z");
result.add("o-\tri-\ten-\tted", "O@\ti:\te n\tt V d");
result.add("o-\tri-\tent", "O@\ti:\te n t");
result.add("o-\tri-\tfi-\tce", "O@\tV\tf I\ts V");
result.add("o-\tri-\tfi-\tces", "O@\tV\tf I\ts V z");
result.add("o-\tri-\tgi-\tna-\tli-\tty", "@r\tI\tdZ I\tn {\tl I\tt i:");
result.add("o-\tri-\tgi-\tna-\tted", "O@\tI\tdZ I\tn eI\tt I d");
result.add("o-\tri-\tgi-\tna-\tting", "@r\tI\tdZ I\tn eI\tt I N");
result.add("o-\tri-\tgi-\tna-\ttion", "@r\tI\tdZ I\tn eI\tS V n");
result.add("o-\tri-\tgi-\tna-\ttions", "@r\tI\tdZ I\tn eI\tS V n z");
result.add("o-\tri-\tgi-\tna-\ttor", "@r\tI\tdZ I\tn eI\tt @r");
result.add("o-\tri-\tgi-\tna-\ttors", "@r\tI\tdZ I\tn eI\tt @r z");
result.add("o-\tri-\tgi-\tnal", "@r\tI\tdZ I\tn V l");
result.add("o-\tri-\tgi-\tnal-\tly", "@r\tI\tdZ I\tn V\tl i:");
result.add("o-\tri-\tgi-\tnals", "@r\tI\tdZ I\tn V l z");
result.add("o-\tri-\tgi-\tnate", "@r\tI\tdZ I\tn eI t");
result.add("o-\tri-\tgi-\tnates", "@r\tI\tdZ I\tn eI t s");
result.add("o-\tri-\tgin", "O@\tI\tdZ I n");
result.add("o-\tri-\tgins", "O@\tI\tdZ I n z");
result.add("o-\tri-\tno-\tco", "O@\tI\tn @U\tk @U");
result.add("o-\tri-\tole", "O@\ti:\t@U l");
result.add("o-\tri-\toles", "O@\ti:\t@U l z");
result.add("o-\tri-\ton", "@U\tr aI\tV n");
result.add("o-\tri-\ton's", "@U\tr aI\tV n z");
result.add("o-\trick", "O@\tI k");
result.add("o-\trin", "O@\tI n");
result.add("o-\trin-\tda", "@r\tI n\td V");
result.add("o-\tro", "O@\t@U");
result.add("o-\tro-\tge-\tnic", "O@\tV\tdZ e\tn I k");
result.add("o-\tro-\tgra-\tphic", "O@\tV g\tr {\tf I k");
result.add("o'-\trourke", "@U\tr O@ k");
result.add("o-\troz-\tco", "O@\t@U z\tk @U");
result.add("o-\try", "O@\ti:");
result.add("o-\tryx", "O@\tI k s");
result.add("o-\tsa-\tges", "@U\ts eI\tdZ V z");
result.add("o-\tsa-\tka", "@U\ts Q\tk V");
result.add("o-\tsage", "@U\ts eI dZ");
result.add("o-\tsha", "@U\tS V");
result.add("o-\tsha-\twa", "O:\tS Q\tw V");
result.add("o-\tshe-\ta", "Q\tS i:\tV");
result.add("o'-\tshea", "@U\tS eI");
result.add("o-\tsher", "Q\tS @r");
result.add("o'-\tsul-\tli-\tvan", "@U\ts V\tl I\tv V n");
result.add("o-\tsul-\tli-\tvan", "Q\ts V\tl I\tv V n");
result.add("o-\tta", "@U\tt V");
result.add("o-\tte-\tro", "@U\tt e@\t@U");
result.add("o-\ttel-\tlo", "@U\tt e\tl @U");
result.add("o-\ttha", "V\tD Q");
result.add("o-\tthel-\tlo", "V\tT e\tl @U");
result.add("o-\tther", "V\tD @r");
result.add("o-\tther-\tness", "V\tD @r\tn V s");
result.add("o-\tther-\twise", "V\tD @r\tw aI z");
result.add("o-\tther-\tworld-\tly", "V\tD @r\tw @r l\td l i:");
result.add("o-\tthers", "V\tD @r z");
result.add("o-\tther's", "V\tD @r z");
result.add("o-\tthi-\tli-\ta", "@U\tT i:\tl i:\tV");
result.add("o-\ttis", "@U\tt I s");
result.add("o-\tto-\tlo-\tgy", "@U\tt Q\tl V\tdZ i:");
result.add("o'-\ttoole", "@U\tt u: l");
result.add("o-\tur", "aU\t@r");
result.add("o-\tva-\try", "@U\tv @r\ti:");
result.add("o-\tva-\ttion", "@U\tv eI\tS V n");
result.add("o-\tva-\ttions", "@U\tv eI\tS V n z");
result.add("o-\tvate", "@U\tv eI t");
result.add("o-\tve-\tra-\tbun-\tdance", "@U\tv @r\tV\tb V n\td V n s");
result.add("o-\tve-\trac-\tted", "@U\tv @r\t{ k\tt V d");
result.add("o-\tve-\trac-\ttive", "@U\tv @r\t{ k\tt I v");
result.add("o-\tve-\tract", "@U\tv @r\t{ k t");
result.add("o-\tve-\trall", "@U\tv @r\tO: l");
result.add("o-\tve-\trea-\tger", "@U\tv @r\ti:\tg @r");
result.add("o-\tve-\trop-\tti-\tmi-\tsm", "@U\tv @r\tQ p\tt I\tm I\tz V m");
result.add("o-\tven", "V\tv V n");
result.add("o-\tvens", "V\tv V n z");
result.add("o-\tver", "@U\tv @r");
result.add("o-\tver-\talls", "@U\tv @r\tO: l z");
result.add("o-\tver-\tam-\tbi-\ttious", "@U\tv @r\t{ m\tb I\tS V s");
result.add("o-\tver-\tar-\tching", "@U\tv @r\tQ@\ttS I N");
result.add("o-\tver-\tbea-\tring", "@U\tv @r\tb e@\tI N");
result.add("o-\tver-\tbil-\tling", "@U\tv @r\tb I\tl I N");
result.add("o-\tver-\tblown", "@U\tv @r b\tl @U n");
result.add("o-\tver-\tboard", "@U\tv @r\tb O@ d");
result.add("o-\tver-\tboo-\tking", "@U\tv @r\tb U\tk I N");
result.add("o-\tver-\tbook", "@U\tv @r\tb U k");
result.add("o-\tver-\tbooked", "@U\tv @r\tb U k t");
result.add("o-\tver-\tbought", "@U\tv @r\tb O: t");
result.add("o-\tver-\tbuil-\tding", "@U\tv @r\tb I l\td I N");
result.add("o-\tver-\tbuilt", "@U\tv @r\tb I l t");
result.add("o-\tver-\tbur-\tden", "@U\tv @r\tb @r\td V n");
result.add("o-\tver-\tbur-\tdened", "@U\tv @r\tb @r\td V n d");
result.add("o-\tver-\tbuy", "@U\tv @r\tb aI");
result.add("o-\tver-\tby", "@U\tv @r\tb i:");
result.add("o-\tver-\tca-\tpa-\tci-\tty", "@U\tv @r\tk V\tp {\ts V\tt i:");
result.add("o-\tver-\tcame", "@U\tv @r\tk eI m");
result.add("o-\tver-\tcast", "@U\tv @r\tk { s t");
result.add("o-\tver-\tchar-\tges", "@U\tv @r\ttS Q@\tdZ V z");
result.add("o-\tver-\tchar-\tging", "@U\tv @r\ttS Q@\tdZ I N");
result.add("o-\tver-\tcharge", "@U\tv @r\ttS Q@ dZ");
result.add("o-\tver-\tcharged", "@U\tv @r\ttS Q@ dZ d");
result.add("o-\tver-\tco-\tming", "@U\tv @r\tk V\tm I N");
result.add("o-\tver-\tcoat", "@U\tv @r\tk @U t");
result.add("o-\tver-\tcoats", "@U\tv @r\tk @U t s");
result.add("o-\tver-\tcome", "@U\tv @r\tk V m");
result.add("o-\tver-\tcomes", "@U\tv @r\tk V m z");
result.add("o-\tver-\tcon-\tfi-\tdence", "@U\tv @r\tk Q n\tf I\td V n s");
result.add("o-\tver-\tcon-\tfi-\tdent", "@U\tv @r\tk Q n\tf I\td V n t");
result.add("o-\tver-\tcon-\tsump-\ttion", "@U\tv @r\tk V n\ts V m\tp S V n");
result.add("o-\tver-\tcook", "@U\tv @r\tk U k");
result.add("o-\tver-\tcooked", "@U\tv @r\tk U k t");
result.add("o-\tver-\tcrow-\tded", "@U\tv @r k\tr aU\td V d");
result.add("o-\tver-\tcrow-\tding", "@U\tv @r k\tr aU\td I N");
result.add("o-\tver-\tcrowd", "@U\tv @r k\tr aU d");
result.add("o-\tver-\tde-\tpen-\tdence", "@U\tv @r\td V\tp e n\td V n s");
result.add("o-\tver-\tdid", "@U\tv @r\td I d");
result.add("o-\tver-\tdo", "@U\tv @r\td u:");
result.add("o-\tver-\tdo-\ting", "@U\tv @r\td u:\tI N");
result.add("o-\tver-\tdo-\tses", "@U\tv @r\td @U\ts V z");
result.add("o-\tver-\tdone", "@U\tv @r\td V n");
result.add("o-\tver-\tdose", "@U\tv @r\td @U s");
result.add("o-\tver-\tdosed", "@U\tv @r\td @U s t");
result.add("o-\tver-\tdraft", "@U\tv @r d\tr { f t");
result.add("o-\tver-\tdrafts", "@U\tv @r d\tr { f t s");
result.add("o-\tver-\tdraw", "@U\tv @r d\tr O:");
result.add("o-\tver-\tdrawn", "@U\tv @r d\tr O: n");
result.add("o-\tver-\tdress", "@U\tv @r d\tr e s");
result.add("o-\tver-\tdrew", "@U\tv @r d\tr u:");
result.add("o-\tver-\tdrive", "@U\tv @r d\tr aI v");
result.add("o-\tver-\tdue", "@U\tv @r\td u:");
result.add("o-\tver-\tea-\tting", "@U\tv @r\ti:\tt I N");
result.add("o-\tver-\teat", "@U\tv @r\ti: t");
result.add("o-\tver-\tem-\tpha-\tsize", "@U\tv @r\te m\tf V\ts aI z");
result.add("o-\tver-\tes-\tti-\tma-\tted", "@U\tv @r\te s\tt I\tm eI\tt I d");
result.add("o-\tver-\tes-\tti-\tma-\tting", "@U\tv @r\te s\tt I\tm eI\tt I N");
result.add("o-\tver-\tes-\tti-\tmate", "@U\tv @r\te s\tt I\tm eI t");
result.add("o-\tver-\tes-\tti-\tmates", "@U\tv @r\te s\tt I\tm eI t s");
result.add("o-\tver-\tex-\tci-\tted", "@U\tv @r\te k\ts aI\tt V d");
result.add("o-\tver-\tex-\tcite", "@U\tv @r\te k\ts aI t");
result.add("o-\tver-\tex-\tpan-\tsion", "@U\tv @r\tI k\ts p { n\tS V n");
result.add("o-\tver-\tex-\tpo-\tsure", "@U\tv @r\tI k\ts p @U\tZ @r");
result.add("o-\tver-\tex-\tpose", "@U\tv @r\tI k\ts p @U z");
result.add("o-\tver-\tex-\tposed", "@U\tv @r\tI k\ts p @U z d");
result.add("o-\tver-\tex-\tten-\tded", "@U\tv @r\tI k\ts t e n\td V d");
result.add("o-\tver-\tex-\tten-\tding", "@U\tv @r\tI k\ts t e n\td I N");
result.add("o-\tver-\tex-\ttend", "@U\tv @r\tI k\ts t e n d");
result.add("o-\tver-\tfed", "@U\tv @r\tf e d");
result.add("o-\tver-\tfeed", "@U\tv @r\tf i: d");
result.add("o-\tver-\tfi-\tshing", "@U\tv @r\tf I\tS I N");
result.add("o-\tver-\tfill", "@U\tv @r\tf I l");
result.add("o-\tver-\tflight", "@U\tv @r f\tl aI t");
result.add("o-\tver-\tflights", "@U\tv @r f\tl aI t s");
result.add("o-\tver-\tflow", "@U\tv @r f\tl @U");
result.add("o-\tver-\tflow-\ting", "@U\tv @r f\tl @U\tI N");
result.add("o-\tver-\tflowed", "@U\tv @r f\tl @U d");
result.add("o-\tver-\tflows", "@U\tv @r f\tl @U z");
result.add("o-\tver-\tfly", "@U\tv @r f\tl aI");
result.add("o-\tver-\tfly-\ting", "@U\tv @r f\tl aI\tI N");
result.add("o-\tver-\tge-\tne-\trous", "@U\tv @r\tdZ e\tn @r\tV s");
result.add("o-\tver-\tgra-\tzing", "@U\tv @r g\tr eI\tz I N");
result.add("o-\tver-\tgrown", "@U\tv @r g\tr @U n");
result.add("o-\tver-\than-\tging", "@U\tv @r\th {\tN I N");
result.add("o-\tver-\thang", "@U\tv @r\th { N");
result.add("o-\tver-\thangs", "@U\tv @r\th { N z");
result.add("o-\tver-\thau-\tling", "@U\tv @r\th O:\tl I N");
result.add("o-\tver-\thaul", "@U\tv @r\th O: l");
result.add("o-\tver-\thauled", "@U\tv @r\th O: l d");
result.add("o-\tver-\thauls", "@U\tv @r\th O: l z");
result.add("o-\tver-\thea-\tring", "@U\tv @r\th I@\tI N");
result.add("o-\tver-\thea-\tted", "@U\tv @r\th i:\tt V d");
result.add("o-\tver-\thea-\tting", "@U\tv @r\th i:\tt I N");
result.add("o-\tver-\thead", "@U\tv @r\th e d");
result.add("o-\tver-\theads", "@U\tv @r\th e d z");
result.add("o-\tver-\thear", "@U\tv @r\th I@");
result.add("o-\tver-\theard", "@U\tv @r\th @r d");
result.add("o-\tver-\theat", "@U\tv @r\th i: t");
result.add("o-\tver-\tjoyed", "@U\tv @r\tdZ OI d");
result.add("o-\tver-\tkil-\tling", "@U\tv @r\tk I\tl I N");
result.add("o-\tver-\tkill", "@U\tv @r\tk I l");
result.add("o-\tver-\tlaid", "@U\tv @r\tl eI d");
result.add("o-\tver-\tlain", "@U\tv @r\tl eI n");
result.add("o-\tver-\tland", "@U\tv @r\tl { n d");
result.add("o-\tver-\tlap", "@U\tv @r\tl { p");
result.add("o-\tver-\tlap-\tping", "@U\tv @r\tl {\tp I N");
result.add("o-\tver-\tlapped", "@U\tv @r\tl { p t");
result.add("o-\tver-\tlaps", "@U\tv @r\tl { p s");
result.add("o-\tver-\tlay", "@U\tv @r\tl eI");
result.add("o-\tver-\tlays", "@U\tv @r\tl eI z");
result.add("o-\tver-\tloa-\tded", "@U\tv @r\tl @U\td V d");
result.add("o-\tver-\tloa-\tding", "@U\tv @r\tl @U\td I N");
result.add("o-\tver-\tload", "@U\tv @r\tl @U d");
result.add("o-\tver-\tloads", "@U\tv @r\tl @U d z");
result.add("o-\tver-\tlock", "@U\tv @r\tl Q k");
result.add("o-\tver-\tloo-\tking", "@U\tv @r\tl U\tk I N");
result.add("o-\tver-\tlook", "@U\tv @r\tl U k");
result.add("o-\tver-\tlooked", "@U\tv @r\tl U k t");
result.add("o-\tver-\tlooks", "@U\tv @r\tl U k s");
result.add("o-\tver-\tlord", "@U\tv @r\tl O@ d");
result.add("o-\tver-\tlords", "@U\tv @r\tl O@ d z");
result.add("o-\tver-\tly", "@U\tv @r\tl i:");
result.add("o-\tver-\tly-\ting", "@U\tv @r\tl aI\tI N");
result.add("o-\tver-\tman", "@U\tv @r\tm V n");
result.add("o-\tver-\tmatch", "@U\tv @r\tm { tS");
result.add("o-\tver-\tmatched", "@U\tv @r\tm { tS t");
result.add("o-\tver-\tnigh-\tter", "@U\tv @r\tn aI\tt @r");
result.add("o-\tver-\tnigh-\tters", "@U\tv @r\tn aI\tt @r z");
result.add("o-\tver-\tnight", "@U\tv @r\tn aI t");
result.add("o-\tver-\tpaid", "@U\tv @r\tp eI d");
result.add("o-\tver-\tpas-\tses", "@U\tv @r\tp {\ts V z");
result.add("o-\tver-\tpass", "@U\tv @r\tp { s");
result.add("o-\tver-\tpay", "@U\tv @r\tp eI");
result.add("o-\tver-\tpay-\ting", "@U\tv @r\tp eI\tI N");
result.add("o-\tver-\tpay-\tment", "@U\tv @r\tp eI\tm V n t");
result.add("o-\tver-\tpay-\tments", "@U\tv @r\tp eI\tm V n t s");
result.add("o-\tver-\tpeck", "@U\tv @r\tp e k");
result.add("o-\tver-\tplay", "@U\tv @r p\tl eI");
result.add("o-\tver-\tplay-\ting", "@U\tv @r p\tl eI\tI N");
result.add("o-\tver-\tplayed", "@U\tv @r p\tl eI d");
result.add("o-\tver-\tpo-\tpu-\tla-\tted", "@U\tv @r\tp Q p\tj V\tl eI\tt V d");
result.add("o-\tver-\tpo-\tpu-\tla-\ttion", "@U\tv @r\tp Q p\tj V\tl eI\tS V n");
result.add("o-\tver-\tpo-\tpu-\tlate", "@U\tv @r\tp Q p\tj V\tl eI t");
result.add("o-\tver-\tpo-\twer", "@U\tv @r\tp aU\t@r");
result.add("o-\tver-\tpo-\twered", "@U\tv @r\tp aU\t@r d");
result.add("o-\tver-\tpowe-\tring", "@U\tv @r\tp aU\tr I N");
result.add("o-\tver-\tprice", "@U\tv @r p\tr aI s");
result.add("o-\tver-\tpriced", "@U\tv @r p\tr aI s t");
result.add("o-\tver-\tpro-\tdu-\tcer", "@U\tv @r p\tr V\td u:\ts @r");
result.add("o-\tver-\tpro-\tdu-\tcers", "@U\tv @r p\tr V\td u:\ts @r z");
result.add("o-\tver-\tpro-\tdu-\tcing", "@U\tv @r p\tr V d\tj u:\ts I N");
result.add("o-\tver-\tpro-\tduc-\ttion", "@U\tv @r p\tr V\td V k\tS V n");
result.add("o-\tver-\tpro-\tduce", "@U\tv @r p\tr V\td u: s");
result.add("o-\tver-\tpro-\tduced", "@U\tv @r p\tr V\td u: s t");
result.add("o-\tver-\tpro-\ttec-\ttion", "@U\tv @r p\tr V\tt e k\tS V n");
result.add("o-\tver-\tpro-\ttec-\ttive", "@U\tv @r p\tr V\tt e k\tt V v");
result.add("o-\tver-\tpro-\ttect", "@U\tv @r p\tr V\tt e k t");
result.add("o-\tver-\tqua-\tli-\tfied", "@U\tv @r k\tw Q\tl I\tf aI d");
result.add("o-\tver-\tqua-\tli-\tfy", "@U\tv @r k\tw Q\tl I\tf aI");
result.add("o-\tver-\tra-\tted", "@U\tv @r\tr eI\tt V d");
result.add("o-\tver-\tran", "@U\tv @r\tr { n");
result.add("o-\tver-\trate", "@U\tv @r\tr eI t");
result.add("o-\tver-\tre-\tac-\tted", "@U\tv @r\tr i:\t{ k\tt V d");
result.add("o-\tver-\tre-\tac-\tting", "@U\tv @r\tr i:\t{ k\tt I N");
result.add("o-\tver-\tre-\tac-\ttion", "@U\tv @r\tr i:\t{ k\tS V n");
result.add("o-\tver-\tre-\tact", "@U\tv @r\tr i:\t{ k t");
result.add("o-\tver-\tre-\tgu-\tla-\tted", "@U\tv @r\tr e g\tj V\tl eI\tt V d");
result.add("o-\tver-\tre-\tgu-\tla-\ttion", "@U\tv @r\tr e g\tj V\tl eI\tS V n");
result.add("o-\tver-\tre-\tgu-\tlate", "@U\tv @r\tr e g\tj V\tl eI t");
result.add("o-\tver-\tre-\tli-\tance", "@U\tv @r\tr V\tl aI\tV n s");
result.add("o-\tver-\trea-\tches", "@U\tv @r\tr i:\ttS V z");
result.add("o-\tver-\trea-\tching", "@U\tv @r\tr i:\ttS I N");
result.add("o-\tver-\treach", "@U\tv @r\tr i: tS");
result.add("o-\tver-\treached", "@U\tv @r\tr i: tS t");
result.add("o-\tver-\trep-\tre-\tsen-\tted", "@U\tv @r\tr e p\tr V\tz e n\tt V d");
result.add("o-\tver-\trep-\tre-\tsent", "@U\tv @r\tr e p\tr V\tz e n t");
result.add("o-\tver-\tri-\tding", "@U\tv @r\tr aI\td I N");
result.add("o-\tver-\trid-\tden", "@U\tv @r\tr I\td V n");
result.add("o-\tver-\tride", "@U\tv @r\tr aI d");
result.add("o-\tver-\trides", "@U\tv @r\tr aI d z");
result.add("o-\tver-\tripe", "@U\tv @r\tr aI p");
result.add("o-\tver-\trode", "@U\tv @r\tr @U d");
result.add("o-\tver-\tru-\tling", "@U\tv @r\tr u:\tl I N");
result.add("o-\tver-\trule", "@U\tv @r\tr u: l");
result.add("o-\tver-\truled", "@U\tv @r\tr u: l d");
result.add("o-\tver-\trun", "@U\tv @r\tr V n");
result.add("o-\tver-\trun-\tning", "@U\tv @r\tr V\tn I N");
result.add("o-\tver-\truns", "@U\tv @r\tr V n z");
result.add("o-\tver-\tsaw", "@U\tv @r\ts O:");
result.add("o-\tver-\tse-\ter", "@U\tv @r\ts i:\t@r");
result.add("o-\tver-\tse-\ters", "@U\tv @r\ts i:\t@r z");
result.add("o-\tver-\tsea", "@U\tv @r\ts i:");
result.add("o-\tver-\tseas", "@U\tv @r\ts i: z");
result.add("o-\tver-\tsee", "@U\tv @r\ts i:");
result.add("o-\tver-\tsee-\ting", "@U\tv @r\ts i:\tI N");
result.add("o-\tver-\tseen", "@U\tv @r\ts i: n");
result.add("o-\tver-\tsees", "@U\tv @r\ts i: z");
result.add("o-\tver-\tsel-\tling", "@U\tv @r\ts e\tl I N");
result.add("o-\tver-\tsell", "@U\tv @r\ts e l");
result.add("o-\tver-\tsen-\tsi-\tti-\tvi-\tty", "@U\tv @r\ts e n\ts I\tt I\tv I\tt i:");
result.add("o-\tver-\tsen-\tsi-\ttive", "@U\tv @r\ts e n\ts I\tt I v");
result.add("o-\tver-\tsha-\tdow", "@U\tv @r\tS {\td @U");
result.add("o-\tver-\tsha-\tdow-\ting", "@U\tv @r\tS {\td @U\tI N");
result.add("o-\tver-\tsha-\tdowed", "@U\tv @r\tS {\td @U d");
result.add("o-\tver-\tsha-\tdows", "@U\tv @r\tS {\td @U z");
result.add("o-\tver-\tshoo-\tting", "@U\tv @r\tS u:\tt I N");
result.add("o-\tver-\tshoot", "@U\tv @r\tS u: t");
result.add("o-\tver-\tshot", "@U\tv @r\tS Q t");
result.add("o-\tver-\tsi-\tzes", "@U\tv @r\ts aI\tz V z");
result.add("o-\tver-\tsight", "@U\tv @r\ts aI t");
result.add("o-\tver-\tsim-\tpli-\tfi-\tca-\ttion", "@U\tv @r\ts I m\tp l I\tf I\tk eI\tS V n");
result.add("o-\tver-\tsim-\tpli-\tfied", "@U\tv @r\ts I m\tp l I\tf aI d");
result.add("o-\tver-\tsim-\tpli-\tfy", "@U\tv @r\ts I m\tp l I\tf aI");
result.add("o-\tver-\tsim-\tpli-\tfy-\ting", "@U\tv @r\ts I m\tp l I\tf aI\tI N");
result.add("o-\tver-\tsize", "@U\tv @r\ts aI z");
result.add("o-\tver-\tsized", "@U\tv @r\ts aI z d");
result.add("o-\tver-\tslept", "@U\tv @r s\tl e p t");
result.add("o-\tver-\tspen-\tding", "@U\tv @r s\tp e n\td I N");
result.add("o-\tver-\tspend", "@U\tv @r s\tp e n d");
result.add("o-\tver-\tspends", "@U\tv @r s\tp e n d z");
result.add("o-\tver-\tspent", "@U\tv @r s\tp e n t");
result.add("o-\tver-\tsta-\tted", "@U\tv @r s\tt eI\tt V d");
result.add("o-\tver-\tsta-\tting", "@U\tv @r s\tt eI\tt I N");
result.add("o-\tver-\tstaff", "@U\tv @r s\tt { f");
result.add("o-\tver-\tstaffed", "@U\tv @r s\tt { f t");
result.add("o-\tver-\tstate", "@U\tv @r s\tt eI t");
result.add("o-\tver-\tstate-\tment", "@U\tv @r s\tt eI t\tm V n t");
result.add("o-\tver-\tstate-\tments", "@U\tv @r s\tt eI t\tm V n t s");
result.add("o-\tver-\tstates", "@U\tv @r s\tt eI t s");
result.add("o-\tver-\tstay", "@U\tv @r s\tt eI");
result.add("o-\tver-\tstayed", "@U\tv @r s\tt eI d");
result.add("o-\tver-\tstep", "@U\tv @r s\tt e p");
result.add("o-\tver-\tstep-\tping", "@U\tv @r s\tt e\tp I N");
result.add("o-\tver-\tstepped", "@U\tv @r s\tt e p t");
result.add("o-\tver-\tstock", "@U\tv @r s\tt Q k");
result.add("o-\tver-\tstocked", "@U\tv @r s\tt Q k t");
result.add("o-\tver-\tstuff", "@U\tv @r s\tt V f");
result.add("o-\tver-\tstuffed", "@U\tv @r s\tt V f t");
result.add("o-\tver-\tsub-\tscribe", "@U\tv @r\ts V b\ts k r aI b");
result.add("o-\tver-\tsub-\tscribed", "@U\tv @r\ts V b\ts k r aI b d");
result.add("o-\tver-\tsupp-\tlied", "@U\tv @r\ts V p\tl aI d");
result.add("o-\tver-\tsupp-\tly", "@U\tv @r\ts V p\tl aI");
result.add("o-\tver-\tta-\tken", "@U\tv @r\tt eI\tk V n");
result.add("o-\tver-\tta-\tking", "@U\tv @r\tt eI\tk I N");
result.add("o-\tver-\ttake", "@U\tv @r\tt eI k");
result.add("o-\tver-\ttax", "@U\tv @r\tt { k s");
result.add("o-\tver-\ttaxed", "@U\tv @r\tt { k s t");
result.add("o-\tver-\tthrew", "@U\tv @r T\tr u:");
result.add("o-\tver-\tthrow", "@U\tv @r T\tr @U");
result.add("o-\tver-\tthrow-\ting", "@U\tv @r T\tr @U\tI N");
result.add("o-\tver-\tthrown", "@U\tv @r T\tr @U n");
result.add("o-\tver-\ttime", "@U\tv @r\tt aI m");
result.add("o-\tver-\tton", "@U\tv @r\tt V n");
result.add("o-\tver-\ttone", "@U\tv @r\tt @U n");
result.add("o-\tver-\ttones", "@U\tv @r\tt @U n z");
result.add("o-\tver-\ttook", "@U\tv @r\tt U k");
result.add("o-\tver-\ttrai-\tning", "@U\tv @r t\tr eI\tn I N");
result.add("o-\tver-\ttrain", "@U\tv @r t\tr eI n");
result.add("o-\tver-\ttur-\tning", "@U\tv @r\tt @r\tn I N");
result.add("o-\tver-\tture", "@U\tv @r\ttS @r");
result.add("o-\tver-\ttures", "@U\tv @r\ttS U@ z");
result.add("o-\tver-\tturn", "@U\tv @r\tt @r n");
result.add("o-\tver-\tturned", "@U\tv @r\tt @r n d");
result.add("o-\tver-\tturns", "@U\tv @r\tt @r n z");
result.add("o-\tver-\tu-\tsing", "@U\tv @r\tj u:\tz I N");
result.add("o-\tver-\tuse", "@U\tv @r\tj u: z");
result.add("o-\tver-\tused", "@U\tv @r\tj u: z d");
result.add("o-\tver-\tva-\tlu-\ta-\ttion", "@U\tv @r\tv { l\tj u:\teI\tS V n");
result.add("o-\tver-\tva-\tlue", "@U\tv @r\tv { l\tj u:");
result.add("o-\tver-\tva-\tlued", "@U\tv @r\tv { l\tj u: d");
result.add("o-\tver-\tview", "@U\tv @r v\tj u:");
result.add("o-\tver-\tweigh-\tted", "@U\tv @r\tw eI\tt V d");
result.add("o-\tver-\tweight", "@U\tv @r\tw eI t");
result.add("o-\tver-\twhel-\tming", "@U\tv @r\tw e l\tm I N");
result.add("o-\tver-\twhel-\tming-\tly", "@U\tv @r\tw e l\tm I N\tl i:");
result.add("o-\tver-\twhelm", "@U\tv @r\tw e l m");
result.add("o-\tver-\twhelmed", "@U\tv @r\tw e l m d");
result.add("o-\tver-\twhelms", "@U\tv @r\tw e l m z");
result.add("o-\tver-\twin-\tter", "@U\tv @r\tw I n\tt @r");
result.add("o-\tver-\twork", "@U\tv @r\tw @r k");
result.add("o-\tver-\tworked", "@U\tv @r\tw @r k t");
result.add("o-\tver-\twrit-\tten", "@U\tv @r\tr I\tt V n");
result.add("o-\tver-\twrite", "@U\tv @r\tr aI t");
result.add("o-\tver-\twrought", "@U\tv @r\tr O: t");
result.add("o-\tver-\tzea-\tlous", "@U\tv @r\tz e\tl V s");
result.add("o-\tvers", "@U\tv @r z");
result.add("o-\tvert", "@U\tv @r t");
result.add("o-\tvert-\tly", "@U\tv @r t\tl i:");
result.add("o-\tvett", "@U\tv e t");
result.add("o-\tvett's", "@U\tv e t s");
result.add("o-\tvi-\te-\tdo", "@U\tv i:\teI\td @U");
result.add("o-\tvi-\tpa-\trous", "@U\tv I\tp @r\tV s");
result.add("o-\tvo-\tnic", "@U\tv Q\tn I k");
result.add("o-\tvo-\tvi-\tvi-\tpa-\trous", "@U\tv @U\tv aI\tv I\tp @r\tV s");
result.add("o-\tvoid", "@U\tv OI d");
result.add("o-\tvu-\tla-\ttion", "@U v\tj V\tl eI\tS V n");
result.add("o-\tvule", "@U v\tj u: l");
result.add("o-\tvum", "@U\tv V m");
result.add("o-\twades", "@U\tQ d z");
result.add("o-\twen", "@U\tV n");
result.add("o-\twens", "@U\tV n z");
result.add("o-\twen's", "@U\tV n z");
result.add("o-\twens-\tbo-\tro", "@U\tV n\tz b @r\t@U");
result.add("o-\twing", "@U\tI N");
result.add("o-\twings", "@U\tI N z");
result.add("o-\twos-\tso", "@U\tO:\ts @U");
result.add("o-\twy-\thee", "@U\ti:\th i:");
result.add("o-\txa-\tlates", "Q k\ts V\tl eI t s");
result.add("o-\txa-\tlis", "Q k\ts V\tl V s");
result.add("o-\txen", "Q k\ts V n");
result.add("o-\txi-\tda-\ttion", "Q k\ts I\td eI\tS V n");
result.add("o-\txi-\tdant", "Q k\ts I\td V n t");
result.add("o-\txi-\tdants", "Q k\ts I\td V n t s");
result.add("o-\txi-\tdi-\tzer", "Q k\ts I\td aI\tz @r");
result.add("o-\txi-\tdi-\tzing", "Q k\ts I\td aI\tz I N");
result.add("o-\txi-\tdize", "Q k\ts I\td aI z");
result.add("o-\txi-\tdized", "Q k\ts I\td aI z d");
result.add("o-\txide", "Q k\ts aI d");
result.add("o-\txides", "Q k\ts aI d z");
result.add("o-\txy", "Q k\ts i:");
result.add("o-\txy-\tge-\tna-\tted", "Q k\ts V\tdZ V\tn eI\tt V d");
result.add("o-\txy-\tge-\tnate", "Q k\ts V\tdZ V\tn eI t");
result.add("o-\txy-\tgen", "Q k\ts V\tdZ V n");
result.add("o-\txy-\tmo-\tron", "Q k\ts i:\tm O@\tQ n");
result.add("o-\txy-\tto-\tcin", "Q k\ts V\tt @U\ts V n");
result.add("o-\tya-\tma", "@U\tj Q\tm V");
result.add("o-\tyer", "OI\t@r");
result.add("o-\tza-\twa", "@U\tz Q\tw V");
result.add("o-\tzark", "@U\tz Q@ k");
result.add("o-\tzarks", "@U\tz Q@ k s");
result.add("o-\tzone", "@U\tz @U n");
result.add("o.", "@U");
result.add("oa-\ttis", "@U\tt I s");
result.add("oa-\txa-\tca", "@U k\ts V\tk V");
result.add("oak", "@U k");
result.add("oak-\tdale", "@U k\td eI l");
result.add("oak-\tland", "@U k\tl V n d");
result.add("oak-\tland's", "@U k\tl V n d z");
result.add("oak-\tleaf", "@U k\tl i: f");
result.add("oak-\tley", "@U k\tl i:");
result.add("oak-\tley's", "@U k\tl i: z");
result.add("oak-\tman", "@U k\tm V n");
result.add("oak-\tmont", "@U k\tm Q n t");
result.add("oak-\tville", "@U k\tv I l");
result.add("oak-\twood", "@U k\tw U d");
result.add("oakes", "@U k s");
result.add("oaks", "@U k s");
result.add("oak's", "@U k s");
result.add("oar", "O@");
result.add("oar-\tlock", "O@\tl Q k");
result.add("oared", "O@ d");
result.add("oars", "O@ z");
result.add("oars-\tman", "O@ z\tm V n");
result.add("oat", "@U t");
result.add("oat-\tman", "@U t\tm V n");
result.add("oat-\tmeal", "@U t\tm i: l");
result.add("oates", "@U t s");
result.add("oath", "@U T");
result.add("oaths", "@U D z");
result.add("oats", "@U t s");
result.add("ob-\tfus-\tca-\ttion", "Q b\tf V s\tk eI\tS V n");
result.add("ob-\tfus-\tcate", "Q b\tf V s\tk eI t");
result.add("ob-\tjec-\tted", "V b\tdZ e k\tt V d");
result.add("ob-\tjec-\tti-\tvi-\tty", "Q b\tdZ e k\tt I\tv I\tt i:");
result.add("ob-\tjec-\tting", "V b\tdZ e k\tt I N");
result.add("ob-\tjec-\ttio-\tna-\tble", "V b\tdZ e k\tS V\tn V\tb V l");
result.add("ob-\tjec-\ttion", "V b\tdZ e k\tS V n");
result.add("ob-\tjec-\ttions", "V b\tdZ e k\tS V n z");
result.add("ob-\tjec-\ttion's", "V b\tdZ e k\tS V n z");
result.add("ob-\tjec-\ttive", "V b\tdZ e k\tt I v");
result.add("ob-\tjec-\ttive-\tly", "Q b\tdZ e k\tt I v\tl i:");
result.add("ob-\tjec-\ttives", "V b\tdZ e k\tt I v z");
result.add("ob-\tjec-\ttor", "V b\tdZ e k\tt @r");
result.add("ob-\tjec-\ttors", "V b\tdZ e k\tt @r z");
result.add("ob-\tject", "Q b\tdZ e k t");
result.add("ob-\tjects", "Q b\tdZ e k t s");
result.add("ob-\tlast", "Q b\tl { s t");
result.add("ob-\tlate", "Q b\tl eI t");
result.add("ob-\tli-\tga-\tted", "Q b\tl I\tg eI\tt I d");
result.add("ob-\tli-\tga-\ttion", "Q b\tl I\tg eI\tS V n");
result.add("ob-\tli-\tga-\ttions", "Q b\tl I\tg eI\tS V n z");
result.add("ob-\tli-\tga-\tto-\try", "V b\tl I\tg V\tt O@\ti:");
result.add("ob-\tli-\tgate", "Q b\tl I\tg eI t");
result.add("ob-\tli-\tgates", "Q b\tl I\tg eI t s");
result.add("ob-\tli-\tges", "V b\tl aI\tdZ V z");
result.add("ob-\tli-\tging", "V b\tl aI\tdZ I N");
result.add("ob-\tli-\tging-\tly", "V b\tl aI\tdZ I N\tl i:");
result.add("ob-\tli-\tte-\tra-\tted", "V b\tl I\tt @r\teI\tt V d");
result.add("ob-\tli-\tte-\tra-\tting", "V b\tl I\tt @r\teI\tt I N");
result.add("ob-\tli-\tte-\trate", "V b\tl I\tt @r\teI t");
result.add("ob-\tli-\tvi-\ton", "V b\tl I\tv i:\tV n");
result.add("ob-\tli-\tvi-\tous", "V b\tl I\tv i:\tV s");
result.add("ob-\tlige", "V b\tl aI dZ");
result.add("ob-\tliged", "V b\tl aI dZ d");
result.add("ob-\tlique", "V b\tl i: k");
result.add("ob-\tlique-\tly", "@U b\tl i: k\tl i:");
result.add("ob-\tlong", "Q b\tl O: N");
result.add("ob-\tno-\txious", "Q b\tn Q k\tS V s");
result.add("ob-\tre-\tno-\tvich", "V b\tr e\tn V\tv I tS");
result.add("ob-\trecht", "Q b\tr I k t");
result.add("ob-\tri-\ten", "@U b\tr aI\tV n");
result.add("ob-\tsce-\tni-\tties", "Q b\ts e\tn I\tt i: z");
result.add("ob-\tsce-\tni-\tty", "V b\ts e\tn I\tt i:");
result.add("ob-\tscene", "Q b\ts i: n");
result.add("ob-\tscene-\tly", "Q b\ts i: n\tl i:");
result.add("ob-\tse-\tqui-\tous", "V b\ts i: k\tw i:\tV s");
result.add("ob-\tser-\tva-\tble", "V b\tz @r\tv V\tb V l");
result.add("ob-\tser-\tva-\tbles", "V b\tz @r\tv V\tb V l z");
result.add("ob-\tser-\tva-\ttion", "Q b\tz @r\tv eI\tS V n");
result.add("ob-\tser-\tva-\ttions", "Q b\tz @r\tv eI\tS V n z");
result.add("ob-\tser-\tva-\tto-\tries", "V b\tz @r\tv V\tt O@\ti: z");
result.add("ob-\tser-\tva-\tto-\try", "V b\tz @r\tv V\tt O@\ti:");
result.add("ob-\tser-\tva-\tto-\try's", "V b\tz @r\tv V\tt O@\ti: z");
result.add("ob-\tser-\tvan-\tces", "V b\tz @r\tv V n\ts V z");
result.add("ob-\tser-\tvance", "V b\tz @r\tv V n s");
result.add("ob-\tser-\tvant", "V b\tz @r\tv V n t");
result.add("ob-\tser-\tver", "V b\tz @r\tv @r");
result.add("ob-\tser-\tvers", "V b\tz @r\tv @r z");
result.add("ob-\tser-\tving", "V b\tz @r\tv I N");
result.add("ob-\tserve", "V b\tz @r v");
result.add("ob-\tserved", "V b\tz @r v d");
result.add("ob-\tserves", "V b\tz @r v z");
result.add("ob-\tses-\tsing", "V b\ts e\ts I N");
result.add("ob-\tses-\tsio-\tnal", "V b\ts e\tS V\tn V l");
result.add("ob-\tses-\tsion", "V b\ts e\tS V n");
result.add("ob-\tses-\tsions", "V b\ts e\tS V n z");
result.add("ob-\tses-\tsive", "V b\ts e\ts I v");
result.add("ob-\tses-\tsive-\tly", "Q b\ts e\ts I v\tl i:");
result.add("ob-\tsess", "V b\ts e s");
result.add("ob-\tsessed", "V b\ts e s t");
result.add("ob-\tsi-\tdi-\tan", "V b\ts I\td i:\tV n");
result.add("ob-\tso-\tle-\tscence", "Q b\ts V\tl e\ts V n s");
result.add("ob-\tso-\tle-\tscent", "Q b\ts V\tl e\ts V n t");
result.add("ob-\tso-\tlete", "Q b\ts V\tl i: t");
result.add("ob-\tstruc-\tted", "V b\ts t r V k\tt V d");
result.add("ob-\tstruc-\tting", "V b\ts t r V k\tt I N");
result.add("ob-\tstruc-\ttio-\tni-\tsm", "V b\ts t r V k\tS V\tn I\tz V m");
result.add("ob-\tstruc-\ttio-\tnist", "V b\ts t r V k\tS V\tn V s t");
result.add("ob-\tstruc-\ttio-\tnists", "V b\ts t r V k\tS V\tn V s t s");
result.add("ob-\tstruc-\ttion", "V b\ts t r V k\tS V n");
result.add("ob-\tstruc-\ttions", "V b\ts t r V k\tS V n z");
result.add("ob-\tstruc-\ttive", "V b\ts t r V k\tt I v");
result.add("ob-\tstruct", "V b\ts t r V k t");
result.add("ob-\ttai-\tna-\tble", "V b\tt eI\tn V\tb V l");
result.add("ob-\ttai-\tning", "V b\tt eI\tn I N");
result.add("ob-\ttain", "V b\tt eI n");
result.add("ob-\ttained", "V b\tt eI n d");
result.add("ob-\ttains", "V b\tt eI n z");
result.add("ob-\ttru-\tsive", "V b\tt r u:\ts I v");
result.add("ob-\ttrude", "V b\tt r u: d");
result.add("ob-\ttrudes", "V b\tt r u: d z");
result.add("ob-\ttuse", "Q b\tt u: s");
result.add("ob-\tverse", "V b\tv @r s");
result.add("ob-\tvi-\ta-\tting", "Q b\tv i:\teI\tt I N");
result.add("ob-\tvi-\tate", "Q b\tv i:\teI t");
result.add("ob-\tvi-\tous", "Q b\tv i:\tV s");
result.add("ob-\tvi-\tous-\tly", "Q b\tv i:\tV s\tl i:");
result.add("obs-\tcu-\tri-\tty", "V b\ts k j U@\tV\tt i:");
result.add("obs-\tcu-\tring", "V b\ts k j U@\tI N");
result.add("obs-\tcure", "V b\ts k j U@");
result.add("obs-\tcured", "V b\ts k j U@ d");
result.add("obs-\tcures", "V b\ts k j U@ z");
result.add("obs-\tta-\tcle", "Q b\ts t V\tk V l");
result.add("obs-\tta-\tcles", "Q b\ts t V\tk V l z");
result.add("obs-\ttet-\tri-\tcian", "Q b\ts t V t\tr I\tS V n");
result.add("obs-\ttet-\tri-\tcians", "Q b\ts t V t\tr I\tS V n z");
result.add("obs-\ttet-\tric", "V b\ts t e t\tr I k");
result.add("obs-\ttet-\trics", "V b\ts t e t\tr I k s");
result.add("obs-\tti-\tna-\tcy", "Q b\ts t I\tn V\ts i:");
result.add("obs-\tti-\tnate", "Q b\ts t I\tn V t");
result.add("obst", "Q b s t");
result.add("oc-\tca-\tsio-\tnal", "V\tk eI\tZ V\tn V l");
result.add("oc-\tca-\tsio-\tnal-\tly", "V\tk eI\tZ V\tn V\tl i:");
result.add("oc-\tca-\tsion", "V\tk eI\tZ V n");
result.add("oc-\tca-\tsioned", "V\tk eI\tZ V n d");
result.add("oc-\tca-\tsions", "V\tk eI\tZ V n z");
result.add("oc-\tci-\tden-\ttal", "Q k\ts I\td e n\tt V l");
result.add("oc-\tci-\tden-\ttale", "Q k\ts I\td e n\tt V l");
result.add("oc-\tci-\tdent", "Q k\ts I\td e n t");
result.add("oc-\tclu-\tsion", "V k\tl u:\tZ V n");
result.add("oc-\tcu-\tpa-\ttio-\tnal", "Q k\tj V\tp eI\tS V\tn V l");
result.add("oc-\tcu-\tpa-\ttion", "Q k\tj V\tp eI\tS V n");
result.add("oc-\tcu-\tpa-\ttions", "Q k\tj V\tp eI\tS V n z");
result.add("oc-\tcu-\tpan-\tcy", "Q k\tj V\tp V n\ts i:");
result.add("oc-\tcu-\tpant", "Q k\tj V\tp V n t");
result.add("oc-\tcu-\tpants", "Q k\tj V\tp V n t s");
result.add("oc-\tcu-\tpi-\ter", "Q k\tj V\tp aI\t@r");
result.add("oc-\tcu-\tpi-\ters", "Q k\tj V\tp aI\t@r z");
result.add("oc-\tcu-\tpied", "Q k\tj V\tp aI d");
result.add("oc-\tcu-\tpies", "Q k\tj V\tp aI z");
result.add("oc-\tcu-\tpy", "Q k\tj V\tp aI");
result.add("oc-\tcu-\tpy-\ting", "Q k\tj V\tp aI\tI N");
result.add("oc-\tcult", "V\tk V l t");
result.add("oc-\tcur", "V\tk @r");
result.add("oc-\tcur-\tren-\tces", "V\tk @r\tV n\ts V z");
result.add("oc-\tcur-\trence", "V\tk @r\tV n s");
result.add("oc-\tcur-\tring", "V\tk @r\tI N");
result.add("oc-\tcurred", "V\tk @r d");
result.add("oc-\tcurs", "V\tk @r z");
result.add("oc-\tker", "Q\tk @r");
result.add("oc-\tta-\tgo-\tnal", "Q k\tt {\tg V\tn V l");
result.add("oc-\tta-\tgon", "Q k\tt V\tg Q n");
result.add("oc-\tta-\thed-\tral", "Q k\tt V\th i: d\tr V l");
result.add("oc-\tta-\thed-\tron", "Q k\tt V\th i: d\tr V n");
result.add("oc-\tta-\tvi-\ta", "Q k\tt eI\tv i:\tV");
result.add("oc-\tta-\tvi-\to", "Q k\tt eI\tv i:\t@U");
result.add("oc-\tta-\tvi-\tus", "Q k\tt eI\tv i:\tV s");
result.add("oc-\tta-\tvus", "Q k\tt V\tv u: s");
result.add("oc-\ttane", "Q k\tt eI n");
result.add("oc-\ttave", "Q k\tt I v");
result.add("oc-\ttaves", "Q k\tt I v z");
result.add("oc-\ttet", "Q k\tt e t");
result.add("oc-\ttil-\tlion", "Q k\tt I l\tj V n");
result.add("oc-\tto-\tber", "Q k\tt @U\tb @r");
result.add("oc-\tto-\tber's", "Q k\tt @U\tb @r z");
result.add("oc-\tto-\tge-\tna-\tri-\tan", "Q k\tt V\tdZ V\tn e@\ti:\tV n");
result.add("oc-\tto-\tpi", "Q k\tt V\tp aI");
result.add("oc-\tto-\tpus", "Q k\tt V\tp U s");
result.add("och", "Q k");
result.add("ochs", "Q k s");
result.add("oct.", "O: k t");
result.add("od-\tder", "Q\td @r");
result.add("od-\tdest", "Q\td V s t");
result.add("od-\tdi-\tties", "Q\td I\tt i: z");
result.add("od-\tdi-\tty", "Q\td I\tt i:");
result.add("od-\twy-\ter", "Q d\tw i:\t@r");
result.add("odd", "Q d");
result.add("odd-\tball", "Q d\tb O: l");
result.add("odd-\tballs", "Q d\tb O: l z");
result.add("odd-\tly", "Q d\tl i:");
result.add("odds", "Q d z");
result.add("odds-\tma-\tker", "Q d\tz m eI\tk @r");
result.add("odds-\tma-\tkers", "Q d\tz m eI\tk @r z");
result.add("odds-\ton", "Q d\tz Q n");
result.add("ode", "@U d");
result.add("odes", "@U d z");
result.add("oe-\tdi-\tpal", "e\td I\tp V l");
result.add("oe-\tdi-\tpus", "@U\td i:\tp V s");
result.add("oer-\tli-\tkon", "O@\tl I\tk Q n");
result.add("oes-\tter-\treich", "@U s\tt @r\taI k");
result.add("oeu-\tvre", "u: v\tr V");
result.add("of", "V v");
result.add("of-\tfe-\trer", "O:\tf @r\t@r");
result.add("of-\tfe-\tring", "O:\tf @r\tI N");
result.add("of-\tfe-\trings", "O:\tf @r\tI N z");
result.add("of-\tfe-\tring's", "O:\tf @r\tI N z");
result.add("of-\tfen", "O:\tf V n");
result.add("of-\tfen-\tded", "V\tf e n\td V d");
result.add("of-\tfen-\tder", "V\tf e n\td @r");
result.add("of-\tfen-\tders", "V\tf e n\td @r z");
result.add("of-\tfen-\tding", "V\tf e n\td I N");
result.add("of-\tfen-\tses", "V\tf e n\ts V z");
result.add("of-\tfen-\tsive", "V\tf e n\ts I v");
result.add("of-\tfen-\tsive-\tly", "V\tf e n\ts I v\tl i:");
result.add("of-\tfen-\tsives", "V\tf e n\ts I v z");
result.add("of-\tfend", "V\tf e n d");
result.add("of-\tfends", "V\tf e n d z");
result.add("of-\tfense", "V\tf e n s");
result.add("of-\tfer", "O:\tf @r");
result.add("of-\tfer-\tman", "O:\tf @r\tm V n");
result.add("of-\tfered", "O:\tf @r d");
result.add("of-\tfers", "O:\tf @r z");
result.add("of-\tfi-\tcer", "O:\tf I\ts @r");
result.add("of-\tfi-\tcers", "O:\tf I\ts @r z");
result.add("of-\tfi-\tcer's", "O:\tf I\ts @r z");
result.add("of-\tfi-\tces", "O:\tf I\ts V z");
result.add("of-\tfi-\tce's", "O:\tf I\ts V z");
result.add("of-\tfi-\tci-\ta-\tted", "V\tf I\tS i:\teI\tt V d");
result.add("of-\tfi-\tci-\ta-\tting", "V\tf I\tS i:\teI\tt I N");
result.add("of-\tfi-\tci-\tate", "V\tf I\tS i:\teI t");
result.add("of-\tfi-\tci-\to", "V\tf I\ts i:\t@U");
result.add("of-\tfi-\tcial", "V\tf I\tS V l");
result.add("of-\tfi-\tcial-\tdom", "V\tf I\tS V l\td V m");
result.add("of-\tfi-\tcial-\tly", "V\tf I\tS V\tl i:");
result.add("of-\tfi-\tcials", "V\tf I\tS V l z");
result.add("of-\tfi-\tcial's", "V\tf I\tS V l z");
result.add("of-\tfice", "O:\tf I s");
result.add("of-\tfice-\thol-\tder", "O:\tf I s\th @U l\td @r");
result.add("of-\tfice-\thol-\tders", "O:\tf I s\th @U l\td @r z");
result.add("of-\tfice-\tmax", "O:\tf I s\tm { k s");
result.add("of-\tfing", "O:\tf I N");
result.add("of-\tfutt", "Q\tf V t");
result.add("of-\tte-\tner", "O:\tf V\tn @r");
result.add("of-\tten", "O:\tf V n");
result.add("of-\tten-\ttimes", "O:\tf V n\tt aI m z");
result.add("off", "Q f");
result.add("off-\tbeat", "O: f\tb i: t");
result.add("off-\thand", "O: f\th { n d");
result.add("off-\tset", "O: f\ts e t");
result.add("off-\tset-\tting", "O: f\ts e\tt I N");
result.add("off-\tsets", "O: f\ts e t s");
result.add("off-\tshoot", "O: f\tS u: t");
result.add("off-\tshoots", "O: f\tS u: t s");
result.add("off-\tshore", "O: f\tS O@");
result.add("off-\tspring", "O: f\ts p r I N");
result.add("off-\tstage", "O: f\ts t eI dZ");
result.add("offs", "O: f s");
result.add("oft", "O: f t");
result.add("og", "Q g");
result.add("og-\tburn", "Q g\tb @r n");
result.add("og-\tden", "Q g\td V n");
result.add("og-\tla-\tla", "@U g\tl Q\tl V");
result.add("ogg", "Q g");
result.add("oh", "@U");
result.add("ohl", "@U l");
result.add("ohl-\tman", "@U l\tm V n");
result.add("ohm", "@U m");
result.add("ohms", "@U m z");
result.add("ohm's", "@U m z");
result.add("ohs", "@U z");
result.add("oh's", "@U z");
result.add("oi", "OI");
result.add("oi-\tler", "OI\tl @r");
result.add("oi-\tlers", "OI\tl @r z");
result.add("oi-\tling", "OI\tl I N");
result.add("oi-\tly", "OI\tl i:");
result.add("oie", "OI");
result.add("oil", "OI l");
result.add("oil-\tfield", "OI l\tf i: l d");
result.add("oil-\tfields", "OI l\tf i: l d z");
result.add("oil-\tman", "OI l\tm { n");
result.add("oil-\tmen", "OI l\tm e n");
result.add("oil-\tseed", "OI l\ts i: d");
result.add("oil-\tseeds", "OI l\ts i: d z");
result.add("oil-\twell", "OI l\tw e l");
result.add("oiled", "OI l d");
result.add("oils", "OI l z");
result.add("oil's", "OI l z");
result.add("oint-\tment", "OI n\tt m V n t");
result.add("ok-\tla-\tho-\tma", "@U k\tl V\th @U\tm V");
result.add("ok-\tla-\tho-\tman", "@U k\tl V\th @U\tm V n");
result.add("ok-\tla-\tho-\tmans", "@U k\tl V\th @U\tm V n z");
result.add("ok-\tla-\tho-\tma's", "@U k\tl V\th @U\tm V z");
result.add("ok-\tra", "@U k\tr V");
result.add("ok-\twu", "O: k\tw u:");
result.add("ol'", "@U l");
result.add("ol-\tcott", "@U l\tk V t");
result.add("ol-\tden", "@U l\td V n");
result.add("ol-\tden-\tburg", "@U l\td V n\tb @r g");
result.add("ol-\tder", "@U l\td @r");
result.add("ol-\tdest", "@U l\td V s t");
result.add("ol-\tdie", "@U l\td i:");
result.add("ol-\tdies", "@U l\td i: z");
result.add("ol-\tfac-\tto-\try", "@U l\tf { k\tt @r\ti:");
result.add("ol-\tga", "@U l\tg V");
result.add("ol-\tlie", "Q\tl i:");
result.add("ol-\tly", "Q\tl i:");
result.add("ol-\tney", "@U l\tn i:");
result.add("ol-\tsen", "@U l\ts V n");
result.add("ol-\tson", "@U l\ts V n");
result.add("ol-\tson's", "@U l\ts V n z");
result.add("ol-\tva", "@U l\tv V");
result.add("old", "@U l d");
result.add("old-\tfa-\tshioned", "@U l\td f {\tS V n d");
result.add("old-\tfield", "@U l\td f i: l d");
result.add("old-\tham", "@U l\td V m");
result.add("old-\tman", "@U l\td m V n");
result.add("old-\tti-\tmer", "@U l\td t aI\tm @r");
result.add("old-\tti-\tmers", "@U l\td t aI\tm @r z");
result.add("olde", "@U l d");
result.add("olds", "@U l d z");
result.add("old's", "@U l d z");
result.add("olds-\tmo-\tbile", "@U l\td z m @U\tb i: l");
result.add("olds-\tmo-\tbile's", "@U l\td z m @U\tb i: l z");
result.add("olds-\tter", "@U l\td s t @r");
result.add("olds-\tters", "@U l\td s t @r z");
result.add("ole", "@U l");
result.add("olm-\tstead", "@U l\tm s t e d");
result.add("ols-\tson", "@U l\ts V n");
result.add("olt", "@U l t");
result.add("om-\tbuds-\tman", "Q m\tb V d\tz m V n");
result.add("om-\tni", "Q m\tn i:");
result.add("om-\tni-\tbu-\tses", "Q m\tn I\tb V\ts V z");
result.add("om-\tni-\tbus", "Q m\tn I\tb V s");
result.add("om-\tni-\tpo-\ttence", "Q m\tn I\tp V\tt V n s");
result.add("om-\tni-\tpo-\ttent", "Q m\tn I\tp V\tt V n t");
result.add("om-\tni-\tpre-\tsence", "Q m\tn I p\tr e\tz V n s");
result.add("om-\tni-\tpre-\tsent", "Q m\tn I p\tr e\tz V n t");
result.add("om-\tni-\tscient", "Q m\tn I\tS V n t");
result.add("om-\tni-\tvo-\trous", "Q m\tn I\tv @r\tV s");
result.add("ome-\tlet", "Q m\tl V t");
result.add("ome-\tlets", "Q m\tl V t s");
result.add("on", "Q n");
result.add("on-\tboard", "Q n\tb O@ d");
result.add("on-\tco-\tge-\tnes", "Q N\tk Q\tdZ e\tn i: s");
result.add("on-\tco-\tgen", "Q N\tk @U\tg V n");
result.add("on-\tco-\tgene", "Q N\tk @U\tdZ i: n");
result.add("on-\tco-\tlo-\tgist", "Q N\tk Q\tl V\tdZ V s t");
result.add("on-\tco-\tlo-\tgists", "Q N\tk Q\tl V\tdZ V s t s");
result.add("on-\tco-\tlo-\tgy", "Q N\tk Q\tl V\tdZ i:");
result.add("on-\tco-\tming", "O: n\tk V\tm I N");
result.add("on-\tdaa-\ttje", "Q n\td Q t\tj V");
result.add("on-\tder", "Q n\td @r");
result.add("on-\tdo", "O: n\td @U");
result.add("on-\tgo-\ting", "Q n\tg @U\tI N");
result.add("on-\tley", "Q n\tl i:");
result.add("on-\tline", "O: n\tl aI n");
result.add("on-\tloo-\tker", "O: n\tl U\tk @r");
result.add("on-\tloo-\tkers", "O: n\tl U\tk @r z");
result.add("on-\tly", "@U n\tl i:");
result.add("on-\tru-\tshing", "Q n\tr V\tS I N");
result.add("on-\tscreen", "Q n\ts k r i: n");
result.add("on-\tset", "Q n\ts e t");
result.add("on-\tshore", "Q n\tS O@");
result.add("on-\tsite", "Q n\ts aI t");
result.add("on-\tslaught", "O: n\ts l O: t");
result.add("on-\tslow", "Q n\ts l @U");
result.add("on-\tstad", "Q n\ts t V d");
result.add("on-\tstage", "Q n\ts t eI dZ");
result.add("on-\tta-\tri-\to", "Q n\tt e@\ti:\t@U");
result.add("on-\tta-\tri-\to's", "Q n\tt e@\ti:\t@U z");
result.add("on-\tto", "Q n\tt u:");
result.add("on-\tto-\tge-\tny", "Q n\tt Q\tdZ V\tn i:");
result.add("on-\tto-\tlo-\tgi-\tcal", "Q n\tt V\tl Q\tdZ I\tk V l");
result.add("on-\tto-\tlo-\tgy", "Q n\tt Q\tl V\tdZ i:");
result.add("on-\tward", "O: n\tw @r d");
result.add("on-\twards", "Q n\tw @r d z");
result.add("on-\tyx", "Q\tn I k s");
result.add("once", "w V n s");
result.add("one", "w V n");
result.add("one-\tness", "w V n\tn V s");
result.add("one-\tself", "w V n\ts e l f");
result.add("one-\ttime", "w V n\tt aI m");
result.add("one-\tup-\tman-\tship", "w V\tn V p\tm V n\tS I p");
result.add("one-\tyear", "w V n\tj I@");
result.add("ones", "w V n z");
result.add("one's", "w V n z");
result.add("ong", "O: N");
result.add("ons", "Q n z");
result.add("oo-\tdles", "u:\td V l z");
result.add("oo-\tlong", "u:\tl O: N");
result.add("oo-\tna", "u:\tn V");
result.add("oo-\tzes", "u:\tz V z");
result.add("oo-\tzing", "u:\tz I N");
result.add("oohs", "u: z");
result.add("oomph", "u: m f");
result.add("oops", "u: p s");
result.add("ooze", "u: z");
result.add("oozed", "u: z d");
result.add("op", "Q p");
result.add("op-\tdyke", "Q p\td aI k");
result.add("op-\the-\tlia", "V\tf i: l\tj V");
result.add("op-\theim", "Q p\th aI m");
result.add("op-\tpen-\thei-\tmer", "Q\tp V n\th aI\tm @r");
result.add("op-\tpen-\thei-\tmer's", "Q\tp V n\th aI\tm @r z");
result.add("op-\tpen-\theim", "Q\tp V n\th aI m");
result.add("op-\tpens", "Q\tp V n z");
result.add("op-\tpo-\tnent", "V\tp @U\tn V n t");
result.add("op-\tpo-\tnents", "V\tp @U\tn V n t s");
result.add("op-\tpo-\tnent's", "V\tp @U\tn V n t s");
result.add("op-\tpo-\tses", "V\tp @U\tz V z");
result.add("op-\tpo-\tsi-\ttion", "Q\tp V\tz I\tS V n");
result.add("op-\tpo-\tsi-\ttion's", "Q\tp V\tz I\tS V n z");
result.add("op-\tpo-\tsing", "V\tp @U\tz I N");
result.add("op-\tpo-\tsite", "Q\tp V\tz V t");
result.add("op-\tpo-\tsites", "Q\tp V\tz V t s");
result.add("op-\tpor-\ttu-\tni-\tsm", "Q\tp @r\tt u:\tn I\tz V m");
result.add("op-\tpor-\ttu-\tni-\tties", "Q\tp @r\tt u:\tn I\tt i: z");
result.add("op-\tpor-\ttu-\tni-\tty", "Q\tp @r\tt u:\tn I\tt i:");
result.add("op-\tpor-\ttu-\tnis-\ttic", "Q\tp @r\tt u:\tn I s\tt I k");
result.add("op-\tpor-\ttu-\tnist", "Q\tp @r\tt u:\tn I s t");
result.add("op-\tpor-\ttu-\tnists", "Q\tp @r\tt u:\tn I s t s");
result.add("op-\tpor-\ttune", "Q\tp @r\tt u: n");
result.add("op-\tpose", "V\tp @U z");
result.add("op-\tposed", "V\tp @U z d");
result.add("op-\tpres-\tsing", "V p\tr e\ts I N");
result.add("op-\tpres-\tsion", "V p\tr e\tS V n");
result.add("op-\tpres-\tsions", "V p\tr e\tS V n z");
result.add("op-\tpres-\tsive", "V p\tr e\ts I v");
result.add("op-\tpres-\tsor", "V p\tr e\ts @r");
result.add("op-\tpres-\tsors", "V p\tr e\ts @r z");
result.add("op-\tpress", "V p\tr e s");
result.add("op-\tpressed", "V p\tr e s t");
result.add("op-\tpro-\tbri-\tum", "V p\tr @U b\tr i:\tV m");
result.add("op-\trah", "@U p\tr V");
result.add("op-\trah's", "@U p\tr V z");
result.add("op-\tta-\ttion", "Q p\tt eI\tS V n");
result.add("op-\tted", "Q p\tt V d");
result.add("op-\tti-\tcal", "Q p\tt I\tk V l");
result.add("op-\tti-\tcian", "Q p\tt I\tS V n");
result.add("op-\tti-\tcians", "Q p\tt I\tS V n z");
result.add("op-\tti-\tma", "Q p\tt I\tm V");
result.add("op-\tti-\tmal", "Q p\tt I\tm V l");
result.add("op-\tti-\tmi-\tsm", "Q p\tt I\tm I\tz V m");
result.add("op-\tti-\tmi-\tza-\ttion", "Q p\tt I\tm I\tz eI\tS V n");
result.add("op-\tti-\tmis-\tti-\tcal-\tly", "Q p\tt I\tm I s\tt I\tk V\tl i:");
result.add("op-\tti-\tmis-\ttic", "Q p\tt I\tm I s\tt I k");
result.add("op-\tti-\tmist", "Q p\tt I\tm I s t");
result.add("op-\tti-\tmists", "Q p\tt I\tm I s t s");
result.add("op-\tti-\tmize", "Q p\tt I\tm aI z");
result.add("op-\tti-\tmum", "Q p\tt I\tm V m");
result.add("op-\ttic", "Q p\tt I k");
result.add("op-\ttical-\tly", "Q p\tt I k\tl i:");
result.add("op-\ttics", "Q p\tt I k s");
result.add("op-\tting", "Q p\tt I N");
result.add("op-\ttio-\tnal", "Q p\tS V\tn V l");
result.add("op-\ttion", "Q p\tS V n");
result.add("op-\ttioned", "Q p\tS V n d");
result.add("op-\ttions", "Q p\tS V n z");
result.add("op-\ttion's", "Q p\tS V n z");
result.add("op-\tto-\tmet-\tric", "Q p\tt @U\tm e t\tr I k");
result.add("op-\tto-\tmet-\trist", "Q p\tt Q\tm V t\tr I s t");
result.add("op-\tto-\tmet-\trists", "Q p\tt Q\tm V t\tr I s t s");
result.add("op-\tto-\tmet-\try", "Q p\tt Q\tm V t\tr i:");
result.add("ope-\tra", "Q p\tr V");
result.add("ope-\tras", "Q p\tr V z");
result.add("ope-\tra's", "Q p\tr V z");
result.add("oph-\tthal-\tmic", "Q f\tT { l\tm I k");
result.add("oph-\tthal-\tmo-\tlo-\tgist", "Q p\tT V\tm Q\tl V\tdZ V s t");
result.add("oph-\tthal-\tmo-\tlo-\tgists", "Q p\tT V\tm Q\tl V\tdZ V s t s");
result.add("oph-\tthal-\tmo-\tlo-\tgy", "Q p\tT V\tm Q\tl V\tdZ i:");
result.add("oph-\tthal-\tmo-\tscope", "Q f\tT { l\tm V s\tk @U p");
result.add("opp", "Q p");
result.add("ops", "Q p s");
result.add("op's", "Q p s");
result.add("opt", "Q p t");
result.add("opts", "Q p t s");
result.add("or", "O@");
result.add("or-\tban", "O@\tb V n");
result.add("or-\tbi-\ttal", "O@\tb I\tt V l");
result.add("or-\tbi-\tted", "O@\tb I\tt I d");
result.add("or-\tbi-\tter", "O@\tb I\tt @r");
result.add("or-\tbi-\tters", "O@\tb I\tt @r z");
result.add("or-\tbi-\tting", "O@\tb I\tt I N");
result.add("or-\tbit", "O@\tb I t");
result.add("or-\tbits", "O@\tb I t s");
result.add("or-\tca", "O@\tk V");
result.add("or-\tcas", "O@\tk V s");
result.add("or-\tchard", "O@\ttS @r d");
result.add("or-\tchards", "O@\ttS @r d z");
result.add("or-\tches-\ttra", "O@\tk V s\tt r V");
result.add("or-\tches-\ttra-\tted", "O@\tk V s\tt r eI\tt V d");
result.add("or-\tches-\ttral", "O@\tk e s\tt r V l");
result.add("or-\tches-\ttral-\tly", "O@\tk e s\tt r V\tl i:");
result.add("or-\tches-\ttras", "O@\tk V s\tt r V z");
result.add("or-\tches-\ttra's", "O@\tk V s\tt r V z");
result.add("or-\tches-\ttrate", "O@\tk V s\tt r eI t");
result.add("or-\tches-\ttrates", "O@\tk V s\tt r eI t s");
result.add("or-\tchest-\tra-\tting", "O@\tk V s\tt r eI\tt I N");
result.add("or-\tchest-\tra-\ttion", "O@\tk V s\tt r eI\tS V n");
result.add("or-\tchest-\tra-\ttions", "O@\tk V s\tt r eI\tS V n z");
result.add("or-\tchid", "O@\tk I d");
result.add("or-\tchids", "O@\tk I d z");
result.add("or-\tdai-\tning", "O@\td eI\tn I N");
result.add("or-\tdain", "O@\td eI n");
result.add("or-\tdained", "O@\td eI n d");
result.add("or-\tdaz", "O@\td Q z");
result.add("or-\tde-\tring", "O@\td @r\tI N");
result.add("or-\tdeal", "O@\td i: l");
result.add("or-\tdeals", "O@\td i: l z");
result.add("or-\tder", "O@\td @r");
result.add("or-\tder-\tli-\tness", "O@\td @r\tl i:\tn V s");
result.add("or-\tder-\tly", "O@\td @r\tl i:");
result.add("or-\tdered", "O@\td @r d");
result.add("or-\tders", "O@\td @r z");
result.add("or-\tder's", "O@\td @r z");
result.add("or-\tdi-\tna-\tri-\tly", "O@\td I\tn e@\tI\tl i:");
result.add("or-\tdi-\tna-\tries", "O@\td I\tn e@\ti: z");
result.add("or-\tdi-\tna-\try", "O@\td I\tn e@\ti:");
result.add("or-\tdi-\tna-\ttion", "O@\td I\tn eI\tS V n");
result.add("or-\tdi-\tnan-\tces", "O@\td I\tn V n\ts V z");
result.add("or-\tdi-\tnance", "O@\td I\tn V n s");
result.add("or-\tfield", "O@\tf i: l d");
result.add("or-\tford", "O@\tf @r d");
result.add("or-\tga-\tnelles", "O@\tg V\tn e l z");
result.add("or-\tga-\tni-\tsa-\ttion", "O@\tg V\tn V\tz eI\tS V n");
result.add("or-\tga-\tni-\tsm", "O@\tg V\tn I\tz V m");
result.add("or-\tga-\tni-\tsms", "O@\tg V\tn I\tz V m z");
result.add("or-\tga-\tni-\tsm's", "O@\tg V\tn I\tz V m z");
result.add("or-\tga-\tni-\tza-\ttio-\tnal", "O@\tg V\tn V\tz eI\tS V\tn V l");
result.add("or-\tga-\tni-\tza-\ttion", "O@\tg V\tn V\tz eI\tS V n");
result.add("or-\tga-\tni-\tza-\ttions", "O@\tg V\tn V\tz eI\tS V n z");
result.add("or-\tga-\tni-\tza-\ttion's", "O@\tg V\tn V\tz eI\tS V n z");
result.add("or-\tga-\tni-\tzer", "O@\tg V\tn aI\tz @r");
result.add("or-\tga-\tni-\tzers", "O@\tg V\tn aI\tz @r z");
result.add("or-\tga-\tni-\tzes", "O@\tg V\tn aI\tz V z");
result.add("or-\tga-\tni-\tzing", "O@\tg V\tn aI\tz I N");
result.add("or-\tga-\tnic", "O@\tg {\tn I k");
result.add("or-\tga-\tnical-\tly", "O@\tg {\tn I k\tl i:");
result.add("or-\tga-\tnis-\tmic", "O@\tg V\tn I z\tm I k");
result.add("or-\tga-\tnist", "O@\tg V\tn V s t");
result.add("or-\tga-\tnize", "O@\tg V\tn aI z");
result.add("or-\tga-\tnized", "O@\tg V\tn aI z d");
result.add("or-\tga-\tno-\tge-\tne-\tsis", "O@\tg V\tn @U\tdZ e\tn V\ts V s");
result.add("or-\tga-\tnum", "O@\tg V\tn V m");
result.add("or-\tga-\tsm", "O@\tg {\tz V m");
result.add("or-\tga-\tsms", "O@\tg {\tz V m z");
result.add("or-\tgan", "O@\tg V n");
result.add("or-\tgans", "O@\tg V n z");
result.add("or-\tgel", "O@\tg V l");
result.add("or-\tgies", "O@\tdZ i: z");
result.add("or-\tgy", "O@\tdZ i:");
result.add("or-\tlan", "O@\tl V n");
result.add("or-\tlan-\tdo", "O@\tl { n\td @U");
result.add("or-\tlan-\tdo's", "O@\tl { n\td @U z");
result.add("or-\tland", "O@\tl V n d");
result.add("or-\tle-\tan", "O@\tl i:\tV n");
result.add("or-\tle-\tans", "O@\tl i:\tV n z");
result.add("or-\tle-\tan's", "O@\tl i:\tV n z");
result.add("or-\tle-\tna", "O@\tl e\tn V");
result.add("or-\tlene", "O@\tl i: n");
result.add("or-\tlich", "O@\tl I k");
result.add("or-\tlick", "O@\tl I k");
result.add("or-\tlo-\tsky", "O@\tl @U s\tk i:");
result.add("or-\tloff", "O@\tl O: f");
result.add("or-\tly", "O@\tl i:");
result.add("or-\tman", "O@\tm V n");
result.add("or-\tmand", "O@\tm V n d");
result.add("or-\tmis-\tton", "O@\tm I s\tt Q n");
result.add("or-\tmond", "O@\tm V n d");
result.add("or-\tna", "O@\tn V");
result.add("or-\tna-\tmen-\tta-\ttion", "O@\tn V\tm e n\tt eI\tS V n");
result.add("or-\tna-\tmen-\ttal", "O@\tn V\tm e n\tt V l");
result.add("or-\tna-\tmen-\tted", "O@\tn V\tm e n\tt V d");
result.add("or-\tna-\tment", "O@\tn V\tm V n t");
result.add("or-\tna-\tments", "O@\tn V\tm V n t s");
result.add("or-\tnate", "O@\tn eI t");
result.add("or-\tne-\try", "O@\tn @r\ti:");
result.add("or-\tni-\ttho-\tlo-\tgi-\tcal", "O@\tn I\tT V\tl O:\tdZ I\tk V l");
result.add("or-\tni-\ttho-\tlo-\tgy", "O@\tn I\tT Q\tl V\tdZ i:");
result.add("or-\tpah", "O@\tp Q");
result.add("or-\tpha-\tna-\tges", "O@\tf V\tn I\tdZ V z");
result.add("or-\tpha-\tnage", "O@\tf V\tn V dZ");
result.add("or-\tpha-\tning", "O@\tf V\tn I N");
result.add("or-\tphan", "O@\tf V n");
result.add("or-\tphaned", "O@\tf V n d");
result.add("or-\tphans", "O@\tf V n z");
result.add("or-\tphe-\tum", "O@\tf i:\tu: m");
result.add("or-\tphe-\tus", "O@\tf i:\tV s");
result.add("or-\tphic", "O@\tf I k");
result.add("or-\tpi-\tment", "O@\tp I\tm e n t");
result.add("or-\tran", "O@\tQ n");
result.add("or-\tre-\try", "O@\t@r\ti:");
result.add("or-\tren", "O@\tV n");
result.add("or-\trick", "O@\tI k");
result.add("or-\trin", "O@\tI n");
result.add("or-\tris", "O@\tI s");
result.add("or-\tsa", "O@\ts V");
result.add("or-\tsay", "O@\ts eI");
result.add("or-\tsi-\tni", "O@\ts i:\tn i:");
result.add("or-\tsi-\tno", "O@\ts i:\tn @U");
result.add("or-\tso-\tla", "O@\ts @U\tl V");
result.add("or-\tson", "O@\ts V n");
result.add("or-\tte-\tga", "O@\tt eI\tg V");
result.add("or-\tte-\tga's", "O@\tt eI\tg V z");
result.add("or-\tten", "O@\tt V n");
result.add("or-\ttho", "O@\tT @U");
result.add("or-\ttho-\tclase", "O@\tT V k\tl eI s");
result.add("or-\ttho-\tdo-\txy", "O@\tT V\td Q k\ts i:");
result.add("or-\ttho-\tdon-\tti-\ta", "O@\tT V\td Q n\ttS i:\tV");
result.add("or-\ttho-\tdon-\ttic", "O@\tT V\td Q n\tt I k");
result.add("or-\ttho-\tdon-\ttics", "O@\tT V\td Q n\tt I k s");
result.add("or-\ttho-\tdon-\ttist", "O@\tT V\td Q n\tt V s t");
result.add("or-\ttho-\tdon-\ttists", "O@\tT V\td Q n\tt V s t s");
result.add("or-\ttho-\tdon-\ttist's", "O@\tT V\td Q n\tt V s t s");
result.add("or-\ttho-\tdox", "O@\tT V\td Q k s");
result.add("or-\ttho-\tgra-\tphy", "O@\tT Q g\tr V\tf i:");
result.add("or-\ttho-\tpe-\tdic", "O@\tT V\tp i:\td I k");
result.add("or-\ttho-\tpe-\tdist", "O@\tT V\tp i:\td V s t");
result.add("or-\ttho-\tpe-\tdists", "O@\tT V\tp i:\td V s t s");
result.add("or-\ttiz", "O@\tt i: z");
result.add("or-\tton", "O@\tt V n");
result.add("or-\tva", "O@\tv V");
result.add("or-\tval", "O@\tv V l");
result.add("or-\tville", "O@\tv I l");
result.add("or-\twel-\tli-\tan", "O@\tw e\tl i:\tV n");
result.add("or-\twell", "O@\tw e l");
result.add("or-\twell's", "O@\tw e l z");
result.add("orb", "O@ b");
result.add("ord", "O@ d");
result.add("ord-\tnan-\tce's", "O@ d\tn V n\ts V z");
result.add("ord-\tnance", "O@ d\tn V n s");
result.add("ord-\tway", "O@ d\tw eI");
result.add("ore", "O@");
result.add("ores", "O@ z");
result.add("orf", "O@ f");
result.add("org", "O@ g");
result.add("ork-\tney", "O@ k\tn i:");
result.add("orme", "O@ m");
result.add("orms-\tby", "O@ m\tz b i:");
result.add("orne", "O@ n");
result.add("orr", "O@");
result.add("ort", "O@ t");
result.add("ort-\tman", "O@ t\tm V n");
result.add("orth", "O@ T");
result.add("os", "Q s");
result.add("o's", "@U z");
result.add("os-\tbert", "Q s\tb @r t");
result.add("os-\tborn", "O: z\tb O@ n");
result.add("os-\tborne", "O: z\tb O@ n");
result.add("os-\tborne's", "O: z\tb O@ n z");
result.add("os-\tbourn", "Q s\tb @r n");
result.add("os-\tbourne", "Q s\tb @r n");
result.add("os-\tburn", "Q s\tb @r n");
result.add("os-\tcar", "O: s\tk @r");
result.add("os-\tcars", "O: s\tk @r z");
result.add("os-\tcar's", "O: s\tk @r z");
result.add("os-\tce-\to-\tla", "O: s\tk i:\t@U\tl V");
result.add("os-\tcil-\tla-\tting", "Q\ts I\tl eI\tt I N");
result.add("os-\tcil-\tla-\ttion", "Q\ts I\tl eI\tS V n");
result.add("os-\tcil-\tla-\ttions", "Q\ts I\tl eI\tS V n z");
result.add("os-\tcil-\tla-\tto-\try", "Q\ts I\tl V\tt O@\ti:");
result.add("os-\tcil-\tla-\ttor", "Q\ts I\tl eI\tt @r");
result.add("os-\tcil-\tla-\ttors", "Q\ts I\tl eI\tt @r z");
result.add("os-\tcil-\tlate", "Q\ts I\tl eI t");
result.add("os-\tcil-\tlates", "Q\ts I\tl eI t s");
result.add("os-\tcil-\tlos-\tcope", "O:\ts I\tl V s\tk @U p");
result.add("os-\tcil-\tlos-\tcopes", "O:\ts I\tl V s\tk @U p s");
result.add("os-\tco", "Q s\tk @U");
result.add("os-\tgood", "Q s\tg U d");
result.add("os-\tkar", "O: s\tk @r");
result.add("os-\tler", "Q z\tl @r");
result.add("os-\tlo", "Q z\tl @U");
result.add("os-\tman", "Q s\tm V n");
result.add("os-\tmi-\tum", "Q z\tm i:\tV m");
result.add("os-\tmo-\tsis", "O: z\tm @U\ts I s");
result.add("os-\tmo-\ttic", "Q z\tm Q\tt I k");
result.add("os-\tmond", "Q s\tm V n d");
result.add("os-\tmund", "Q s\tm V n d");
result.add("os-\tric", "Q z\tr I k");
result.add("os-\tsa", "Q\ts V");
result.add("os-\tse-\ttia", "Q\ts e S\tj V");
result.add("os-\tse-\ttian", "Q\ts e S\tj V n");
result.add("os-\tse-\ttians", "Q\ts e S\tj V n z");
result.add("os-\tsi-\tcles", "Q\ts I\tk V l z");
result.add("os-\tsi-\tfi-\tca-\ttion", "Q\ts I\tf I\tk eI\tS V n");
result.add("os-\tsi-\tfied", "Q\ts I\tf aI d");
result.add("os-\tsi-\tfy", "Q\ts I\tf aI");
result.add("os-\tso", "@U\ts @U");
result.add("os-\tte-\to-\tarth-\tri-\ttis", "Q s\tt i:\t@U\tQ@ T\tr aI\tt I s");
result.add("os-\tte-\to-\tpa-\tthic", "Q s\tt i:\tV\tp {\tT I k");
result.add("os-\tte-\to-\tpo-\tro-\tsis", "O: s\tt i:\tQ\tp @r\t@U\ts I s");
result.add("os-\tteen", "Q s\tt i: n");
result.add("os-\tten", "Q\ts V n");
result.add("os-\tten-\tsi-\tble", "Q s\tt e n\ts I\tb V l");
result.add("os-\tten-\tsib-\tly", "Q s\tt e n\ts I b\tl i:");
result.add("os-\tten-\tta-\ttion", "O: s\tt e n\tt eI\tS V n");
result.add("os-\tten-\tta-\ttious", "Q s\tt V n\tt eI\tS V s");
result.add("os-\tten-\tta-\ttious-\tly", "Q s\tt V n\tt eI\tS V s\tl i:");
result.add("os-\tter", "Q s\tt @r");
result.add("os-\tti-\ta", "Q s\tt i:\tV");
result.add("os-\tti-\tna-\tto", "Q s\tt I\tn Q\tt @U");
result.add("os-\twald", "O: z\tw O: l d");
result.add("os-\twald's", "O: z\tw O: l d z");
result.add("os-\twe-\tgo", "Q s\tw i:\tg @U");
result.add("os-\twell", "Q s\tw e l");
result.add("ose", "@U z");
result.add("osh", "Q S");
result.add("osh-\tkosh", "O: S\tk O: S");
result.add("osp-\trey", "O: s\tp r i:");
result.add("oss", "O: s");
result.add("oss-\twald", "Q s\tw V l d");
result.add("ost", "@U s t");
result.add("ost-\tpo-\tli-\ttik", "@U s\tt p @U\tl I\tt I k");
result.add("ost-\tra-\tci-\tsm", "O: s\tt r V\ts I\tz V m");
result.add("ost-\tra-\tcize", "O: s\tt r V\ts aI z");
result.add("ost-\tra-\tcized", "O: s\tt r V\ts aI z d");
result.add("ost-\tran-\tder", "Q s\tt r V n\td @r");
result.add("ost-\tri-\tches", "Q s\tt r I\ttS V z");
result.add("ost-\trich", "O: s\tt r I tS");
result.add("ost-\tro-\tgoth", "Q s\tt r V\tg Q T");
result.add("ost-\tro-\tgoths", "Q s\tt r V\tg Q T s");
result.add("ost-\twald", "Q s\tt w V l d");
result.add("ot", "O: t");
result.add("ot-\tse-\tgo", "Q t\ts eI\tg @U");
result.add("ot-\tta-\twa", "Q\tt V\tw Q");
result.add("ot-\tta-\twa's", "Q\tt V\tw V z");
result.add("ot-\tter", "Q\tt @r");
result.add("ot-\tter-\tbein", "Q\tt @r\tb aI n");
result.add("ot-\tters", "Q\tt @r z");
result.add("ot-\tti-\tlie", "Q\tt I\tl i:");
result.add("ot-\tto", "Q\tt @U");
result.add("ot-\tto-\tman", "Q\tt V\tm V n");
result.add("ot-\tto-\tsen", "Q\tt @U\ts V n");
result.add("ot-\tto's", "Q\tt @U z");
result.add("ot-\twell", "Q t\tw e l");
result.add("oth-\tman", "Q T\tm V n");
result.add("ott", "Q t");
result.add("ott-\tley", "Q t\tl i:");
result.add("otte", "Q t");
result.add("ou-\tr-\tself", "aU\t@r\ts e l f");
result.add("ou-\tr-\tselves", "aU\t@r\ts e l v z");
result.add("ou-\trs", "aU\t@r z");
result.add("ou-\tt-\tler", "aU\tt V\tl @r");
result.add("ou-\ttage", "aU\tt V dZ");
result.add("ou-\tted", "aU\tt V d");
result.add("ou-\tten", "aU\tt V n");
result.add("ou-\tter", "aU\tt @r");
result.add("ou-\tter-\tmost", "aU\tt @r\tm @U s t");
result.add("ou-\tter-\twear", "aU\tt @r\tw e@");
result.add("ou-\tting", "aU\tt I N");
result.add("ou-\ttings", "aU\tt I N z");
result.add("ouch", "aU tS");
result.add("ough-\ttn't", "O:\tt V n t");
result.add("ought", "O: t");
result.add("oui", "w i:");
result.add("oun-\tces", "aU n\ts V z");
result.add("ounce", "aU n s");
result.add("out", "aU t");
result.add("out-\tbid", "aU t\tb I d");
result.add("out-\tbid-\tding", "aU t\tb I\td I N");
result.add("out-\tboard", "aU t\tb O@ d");
result.add("out-\tbound", "aU t\tb aU n d");
result.add("out-\tbreak", "aU t\tb r eI k");
result.add("out-\tbreaks", "aU t\tb r eI k s");
result.add("out-\tburst", "aU t\tb @r s t");
result.add("out-\tbursts", "aU t\tb @r s t s");
result.add("out-\tcast", "aU t\tk { s t");
result.add("out-\tcasts", "aU t\tk { s t s");
result.add("out-\tclass", "aU t\tk l { s");
result.add("out-\tcome", "aU t\tk V m");
result.add("out-\tcomes", "aU t\tk V m z");
result.add("out-\tcries", "aU t\tk r aI z");
result.add("out-\tcry", "aU t\tk r aI");
result.add("out-\tda-\tted", "aU t\td eI\tt V d");
result.add("out-\tdate", "aU t\td eI t");
result.add("out-\tdid", "aU t\td I d");
result.add("out-\tdis-\ttan-\tcing", "aU t\td I s\tt V n\ts I N");
result.add("out-\tdo", "aU t\td u:");
result.add("out-\tdone", "aU t\td V n");
result.add("out-\tdoor", "aU t\td O@");
result.add("out-\tdoors", "aU t\td O@ z");
result.add("out-\tfiel-\tder", "aU t\tf i: l\td @r");
result.add("out-\tfiel-\tders", "aU t\tf i: l\td @r z");
result.add("out-\tfield", "aU t\tf i: l d");
result.add("out-\tfit", "aU t\tf I t");
result.add("out-\tfit-\tted", "aU t\tf I\tt V d");
result.add("out-\tfit-\tter", "aU t\tf I\tt @r");
result.add("out-\tfit-\tting", "aU t\tf I\tt I N");
result.add("out-\tfits", "aU t\tf I t s");
result.add("out-\tflank", "aU t\tf l { N k");
result.add("out-\tflanked", "aU t\tf l { N k t");
result.add("out-\tflow", "aU t\tf l @U");
result.add("out-\tflows", "aU t\tf l @U z");
result.add("out-\tfox", "aU t\tf Q k s");
result.add("out-\tfoxed", "aU t\tf Q k s t");
result.add("out-\tgain", "aU t\tg eI n");
result.add("out-\tgained", "aU t\tg eI n d");
result.add("out-\tgo", "aU t\tg @U");
result.add("out-\tgo-\ting", "aU t\tg @U\tI N");
result.add("out-\tgrew", "aU t\tg r u:");
result.add("out-\tgro-\twing", "aU t\tg r @U\tI N");
result.add("out-\tgrow", "aU t\tg r @U");
result.add("out-\tgrown", "aU t\tg r @U n");
result.add("out-\tgrowth", "aU t\tg r @U T");
result.add("out-\tguess", "aU t\tg e s");
result.add("out-\tgun", "aU t\tg V n");
result.add("out-\tgunned", "aU t\tg V n d");
result.add("out-\thou-\tses", "aU t\th aU\ts V z");
result.add("out-\thouse", "aU t\th aU s");
result.add("out-\tlan-\tdish", "aU t\tl { n\td I S");
result.add("out-\tland", "aU t\tl { n d");
result.add("out-\tlas-\tted", "aU t\tl { s\tt V d");
result.add("out-\tlast", "aU t\tl { s t");
result.add("out-\tlaw", "aU t\tl O:");
result.add("out-\tlaw-\ting", "aU t\tl O:\tI N");
result.add("out-\tlaw-\try", "aU t\tl O@\ti:");
result.add("out-\tlawed", "aU t\tl O: d");
result.add("out-\tlaws", "aU t\tl O: z");
result.add("out-\tlay", "aU t\tl eI");
result.add("out-\tlays", "aU t\tl eI z");
result.add("out-\tlet", "aU t\tl e t");
result.add("out-\tlets", "aU t\tl e t s");
result.add("out-\tlet's", "aU t\tl e t s");
result.add("out-\tli-\ter", "aU t\tl aI\t@r");
result.add("out-\tli-\tning", "aU t\tl aI\tn I N");
result.add("out-\tline", "aU t\tl aI n");
result.add("out-\tlined", "aU t\tl aI n d");
result.add("out-\tlines", "aU t\tl aI n z");
result.add("out-\tlive", "aU t\tl I v");
result.add("out-\tlived", "aU t\tl I v d");
result.add("out-\tlook", "aU t\tl U k");
result.add("out-\tlooks", "aU t\tl U k s");
result.add("out-\tly-\ting", "aU t\tl aI\tI N");
result.add("out-\tma-\tneu-\tver", "aU t\tm V\tn u:\tv @r");
result.add("out-\tma-\tneu-\tvered", "aU t\tm V\tn u:\tv @r d");
result.add("out-\tman", "aU t\tm V n");
result.add("out-\tmanned", "aU t\tm { n d");
result.add("out-\tmo-\tded", "aU t\tm @U\td V d");
result.add("out-\tmode", "aU t\tm @U d");
result.add("out-\tnum-\tbe-\tring", "aU t\tn V m\tb @r\tI N");
result.add("out-\tnum-\tber", "aU t\tn V m\tb @r");
result.add("out-\tnum-\tbered", "aU t\tn V m\tb @r d");
result.add("out-\tnum-\tbers", "aU t\tn V m\tb @r z");
result.add("out-\tpa-\tces", "aU t\tp eI\ts V z");
result.add("out-\tpa-\tcing", "aU t\tp eI\ts I N");
result.add("out-\tpa-\ttient", "aU t\tp eI\tS V n t");
result.add("out-\tpace", "aU t\tp eI s");
result.add("out-\tpaced", "aU t\tp eI s t");
result.add("out-\tper-\tfor-\tming", "aU t\tp @r\tf O@\tm I N");
result.add("out-\tper-\tform", "aU t\tp @r\tf O@ m");
result.add("out-\tper-\tformed", "aU t\tp @r\tf O@ m d");
result.add("out-\tper-\tforms", "aU t\tp @r\tf O@ m z");
result.add("out-\tplace-\tment", "aU t\tp l eI s\tm V n t");
result.add("out-\tpost", "aU t\tp @U s t");
result.add("out-\tposts", "aU t\tp @U s t s");
result.add("out-\tpou-\tching", "aU t\tp aU\ttS I N");
result.add("out-\tpou-\tring", "aU t\tp O@\tI N");
result.add("out-\tpour", "aU t\tp O@");
result.add("out-\tput", "aU t\tp U t");
result.add("out-\tputs", "aU t\tp U t s");
result.add("out-\tra-\tgeous", "aU t\tr eI\tdZ V s");
result.add("out-\tra-\tgeous-\tly", "aU t\tr eI\tdZ V s\tl i:");
result.add("out-\tra-\tgeous-\tness", "aU t\tr eI\tdZ V s\tn V s");
result.add("out-\tra-\tges", "aU t\tr eI\tdZ V z");
result.add("out-\tra-\tging", "aU t\tr eI\tdZ I N");
result.add("out-\trage", "aU t\tr eI dZ");
result.add("out-\traged", "aU t\tr eI dZ d");
result.add("out-\treach", "aU t\tr i: tS");
result.add("out-\tri-\tder", "aU t\tr aI\td @r");
result.add("out-\tri-\tders", "aU t\tr aI\td @r z");
result.add("out-\trig-\tger", "aU t\tr I\tg @r");
result.add("out-\tright", "aU t\tr aI t");
result.add("out-\trun", "aU t\tr V n");
result.add("out-\tscore", "aU t\ts k O@");
result.add("out-\tscored", "aU t\ts k O@ d");
result.add("out-\tsel-\tling", "aU t\ts e\tl I N");
result.add("out-\tsell", "aU t\ts e l");
result.add("out-\tsells", "aU t\ts e l z");
result.add("out-\tset", "aU t\ts e t");
result.add("out-\tshine", "aU\ttS aI n");
result.add("out-\tshone", "aU t\tS @U n");
result.add("out-\tsi-\tder", "aU t\ts aI\td @r");
result.add("out-\tsi-\tders", "aU t\ts aI\td @r z");
result.add("out-\tsi-\tder's", "aU t\ts aI\td @r z");
result.add("out-\tside", "aU t\ts aI d");
result.add("out-\tsides", "aU t\ts aI d z");
result.add("out-\tsize", "aU t\ts aI z");
result.add("out-\tsized", "aU t\ts aI z d");
result.add("out-\tskirt", "aU t\ts k @r t");
result.add("out-\tskirts", "aU t\ts k @r t s");
result.add("out-\tsmart", "aU t\ts m Q@ t");
result.add("out-\tsold", "aU t\ts @U l d");
result.add("out-\tsour-\tcing", "aU t\ts O@\ts I N");
result.add("out-\tsource", "aU t\ts O@ s");
result.add("out-\tspen-\tding", "aU t\ts p e n\td I N");
result.add("out-\tspend", "aU t\ts p e n d");
result.add("out-\tspent", "aU t\ts p e n t");
result.add("out-\tspo-\tken", "aU t\ts p @U\tk V n");
result.add("out-\tspo-\tken-\tness", "aU t\ts p @U\tk V\tn V s");
result.add("out-\tstan-\tding", "aU t\ts t { n\td I N");
result.add("out-\tstretch", "aU t\ts t r e tS");
result.add("out-\tstrip", "aU t\ts t r I p");
result.add("out-\tstrip-\tping", "aU t\ts t r I\tp I N");
result.add("out-\tstrips", "aU t\ts t r I p s");
result.add("out-\tta", "u:\tt V");
result.add("out-\ttake", "aU t\tt eI k");
result.add("out-\ttakes", "aU t\tt eI k s");
result.add("out-\tvo-\tted", "aU t\tv @U\tt V d");
result.add("out-\tvote", "aU t\tv @U t");
result.add("out-\tward", "aU t\tw @r d");
result.add("out-\tward-\tly", "aU t\tw @r d\tl i:");
result.add("out-\twards", "aU t\tw @r d z");
result.add("out-\tweigh", "aU t\tw eI");
result.add("out-\tweigh-\ting", "aU t\tw eI\tI N");
result.add("out-\tweighed", "aU t\tw eI d");
result.add("out-\tweighs", "aU t\tw eI z");
result.add("out-\twit", "aU t\tw I t");
result.add("out-\twit-\tting", "aU t\tw I\tt I N");
result.add("outs", "aU t s");
result.add("ow", "@U");
result.add("ow-\tner", "@U\tn @r");
result.add("ow-\tner-\tship", "@U\tn @r\tS I p");
result.add("ow-\tners", "@U\tn @r z");
result.add("ow-\tner's", "@U\tn @r z");
result.add("ow-\tning", "@U\tn I N");
result.add("owe", "@U");
result.add("owed", "@U d");
result.add("owes", "@U z");
result.add("owl", "aU l");
result.add("owls", "aU l z");
result.add("own", "@U n");
result.add("owned", "@U n d");
result.add("owns", "@U n z");
result.add("ox", "Q k s");
result.add("ox-\tbow", "Q k\ts b @U");
result.add("ox-\tbridge", "Q k\ts b r I dZ");
result.add("ox-\tcart", "Q k\ts k Q@ t");
result.add("ox-\tfam", "Q k\ts f { m");
result.add("ox-\tfam's", "Q k\ts f { m z");
result.add("ox-\tford", "Q k\ts f @r d");
result.add("ox-\tfords", "Q k\ts f @r d z");
result.add("ox-\tford's", "Q k\ts f @r d z");
result.add("ox-\tley", "Q k\ts l i:");
result.add("ox-\tman", "Q k\ts m V n");
result.add("ox-\tnard", "Q k\ts n @r d");
result.add("oy", "OI");
result.add("oy-\tster", "OI s\tt @r");
result.add("oy-\tsters", "OI s\tt @r z");
result.add("oye", "OI");
result.add("oz", "Q z");
result.add("oz-\tzie", "Q\tz i:");
result.add("p", "ph i:");
result.add("p-\th", "ph i:\teI tS");
result.add("p-\tj's", "ph i:\tdZ eI z");
result.add("p-\tm", "ph i:\te m");
result.add("p-\tp-\tm", "ph i:\tp i:\te m");
result.add("p.", "ph i:");
result.add("pa", "ph Q");
result.add("pa-\tca", "ph Q\tk V");
result.add("pa-\tcer", "ph eI\ts @r");
result.add("pa-\tcers", "ph eI\ts @r z");
result.add("pa-\tces", "ph eI\ts V z");
result.add("pa-\tce's", "ph eI\ts V z");
result.add("pa-\tcey", "ph eI\ts i:");
result.add("pa-\tche-\tco", "ph V\ttS e\tk @U");
result.add("pa-\tchin-\tko", "ph V\ttS I N\tk @U");
result.add("pa-\tchy-\tsan-\tdra", "ph {\ttS V\ts { n\td r V");
result.add("pa-\tci-\tfi-\tca", "ph V\ts I\tf I\tk V");
result.add("pa-\tci-\tfi-\tca-\ttion", "ph {\ts I\tf I\tk eI\tS V n");
result.add("pa-\tci-\tfi-\tco", "ph Q\ttS i:\tf i:\tk @U");
result.add("pa-\tci-\tfi-\ter", "ph {\ts I\tf aI\t@r");
result.add("pa-\tci-\tfi-\ters", "ph {\ts I\tf aI\t@r z");
result.add("pa-\tci-\tfi-\tsm", "ph {\ts I\tf I\tz V m");
result.add("pa-\tci-\tfic", "ph V\ts I\tf I k");
result.add("pa-\tci-\tfic's", "ph V\ts I\tf I k s");
result.add("pa-\tci-\tfied", "ph {\ts I\tf aI d");
result.add("pa-\tci-\tfist", "ph {\ts I\tf I s t");
result.add("pa-\tci-\tfists", "ph {\ts I\tf I s t s");
result.add("pa-\tci-\tfy", "ph {\ts I\tf aI");
result.add("pa-\tci-\tno", "ph V\ts i:\tn @U");
result.add("pa-\tcing", "ph eI\ts I N");
result.add("pa-\tco", "ph eI\tk @U");
result.add("pa-\tde-\trew-\tski", "ph Q\td @r\tu: s\tk i:");
result.add("pa-\tden", "ph eI\td V n");
result.add("pa-\tdil-\tla", "ph V\td I\tl V");
result.add("pa-\tga-\tni-\tni", "ph {\tg V\tn i:\tn i:");
result.add("pa-\tga-\tni-\tsm", "ph eI\tg V\tn I\tz V m");
result.add("pa-\tgan", "ph eI\tg V n");
result.add("pa-\tgean-\ttry", "ph {\tdZ V n\tt r i:");
result.add("pa-\tgeant", "ph {\tdZ V n t");
result.add("pa-\tgeants", "ph {\tdZ V n t s");
result.add("pa-\tger", "ph eI\tdZ @r");
result.add("pa-\tgers", "ph eI\tdZ @r z");
result.add("pa-\tges", "ph eI\tdZ V z");
result.add("pa-\tge's", "ph eI\tdZ V z");
result.add("pa-\tget", "ph {\tdZ V t");
result.add("pa-\tgi-\tna-\ttion", "ph {\tdZ I\tn eI\tS V n");
result.add("pa-\tging", "ph eI\tdZ I N");
result.add("pa-\tgo-\tda", "ph V\tg @U\td V");
result.add("pa-\tgu-\tri-\tan", "ph V g\tj U@\ti:\tV n");
result.add("pa-\tja-\tma", "ph V\tdZ Q\tm V");
result.add("pa-\tja-\tmas", "ph V\tdZ Q\tm V z");
result.add("pa-\tke-\tha", "ph V\tk eI\th Q");
result.add("pa-\tkis-\tta-\tni", "ph {\tk I s\tt {\tn i:");
result.add("pa-\tkis-\tta-\tnis", "ph {\tk I s\tt {\tn i: z");
result.add("pa-\tkis-\ttan", "ph {\tk I s\tt { n");
result.add("pa-\tkis-\ttan's", "ph {\tk I s\tt { n z");
result.add("pa-\tla-\tces", "ph {\tl V\ts V z");
result.add("pa-\tla-\tci-\to", "ph V\tl eI\ts i:\t@U");
result.add("pa-\tla-\tci-\tos", "ph Q\tl Q\ts i:\t@U z");
result.add("pa-\tla-\tta-\tbi-\tli-\tty", "ph {\tl V\tt V\tb I\tl V\tt i:");
result.add("pa-\tla-\tta-\tble", "ph {\tl V\tt V\tb V l");
result.add("pa-\tla-\ttial", "ph V\tl eI\tS V l");
result.add("pa-\tla-\ttine", "ph {\tl V\tt aI n");
result.add("pa-\tlace", "ph {\tl V s");
result.add("pa-\tlais", "ph V\tl eI");
result.add("pa-\tlate", "ph {\tl V t");
result.add("pa-\tlates", "ph {\tl V t s");
result.add("pa-\tlau", "ph {\tl aU");
result.add("pa-\tlau-\tans", "ph V\tl aU\tV n z");
result.add("pa-\tlay", "ph eI\tl eI");
result.add("pa-\tlaz-\tzi", "ph Q\tl Q t\ts i:");
result.add("pa-\tlaz-\tzo", "ph V\tl Q\tz @U");
result.add("pa-\tle-\tcek", "ph Q\tl I\ttS e k");
result.add("pa-\tle-\to-\tbo-\tta-\tny", "ph eI\tl i:\t@U\tb Q\tt V\tn i:");
result.add("pa-\tle-\to-\tcene", "ph eI\tl i:\tV\ts i: n");
result.add("pa-\tle-\to-\tzo-\tic", "ph eI\tl i:\tV\tz @U\tI k");
result.add("pa-\tle-\ton-\tto-\tlo-\tgist", "ph eI\tl i:\tV n\tt Q\tl V\tdZ V s t");
result.add("pa-\tle-\ton-\tto-\tlo-\tgists", "ph eI\tl i:\tV n\tt Q\tl V\tdZ V s t s");
result.add("pa-\tle-\ton-\tto-\tlo-\tgy", "ph eI\tl i:\tV n\tt Q\tl V\tdZ i:");
result.add("pa-\tler-\tmo", "ph V\tl e@\tm @U");
result.add("pa-\tles-\tti-\tni-\tan", "ph {\tl V s\tt I\tn i:\tV n");
result.add("pa-\tles-\tti-\tni-\tans", "ph {\tl V s\tt I\tn i:\tV n z");
result.add("pa-\tles-\ttine", "ph {\tl V s\tt aI n");
result.add("pa-\tlest", "ph eI\tl V s t");
result.add("pa-\tlette", "ph {\tl V t");
result.add("pa-\tley", "ph eI\tl i:");
result.add("pa-\tli-\tmo-\tny", "ph {\tl I\tm @U\tn i:");
result.add("pa-\tli-\tsade", "ph {\tl I\ts eI d");
result.add("pa-\tli-\tsades", "ph {\tl I\ts eI d z");
result.add("pa-\tlin", "ph {\tl I n");
result.add("pa-\tlo", "ph {\tl @U");
result.add("pa-\tlo-\tma", "ph Q\tl @U\tm V");
result.add("pa-\tlo-\tmar", "ph {\tl V\tm Q@");
result.add("pa-\tlo-\tme-\tta", "ph Q\tl @U\tm e\tt V");
result.add("pa-\tlo-\tmi-\tno", "ph {\tl V\tm i:\tn @U");
result.add("pa-\tlos", "ph Q\tl @U z");
result.add("pa-\tlum-\tbo", "ph V\tl V m\tb @U");
result.add("pa-\tme-\tla", "ph {\tm V\tl V");
result.add("pa-\tme-\tla's", "ph {\tm V\tl V z");
result.add("pa-\tme-\tli-\tna", "ph Q\tm e\tl i:\tn V");
result.add("pa-\tmel-\tla", "ph V\tm e\tl V");
result.add("pa-\tna-\tce-\ta", "ph {\tn V\ts i:\tV");
result.add("pa-\tna-\tma", "ph {\tn V\tm Q");
result.add("pa-\tna-\tma-\tni-\tan", "ph {\tn V\tm eI\tn i:\tV n");
result.add("pa-\tna-\tma-\tni-\tans", "ph {\tn V\tm eI\tn i:\tV n z");
result.add("pa-\tna-\tma's", "ph {\tn V\tm Q z");
result.add("pa-\tna-\tso-\tnic", "ph {\tn V\ts Q\tn I k");
result.add("pa-\tnache", "ph V\tn Q S");
result.add("pa-\tne-\tli-\tza-\ttion", "ph {\tn V\tl V\tz eI\tS V n");
result.add("pa-\tne-\tling", "ph {\tn V\tl I N");
result.add("pa-\tne-\tlist", "ph {\tn V\tl V s t");
result.add("pa-\tne-\tlists", "ph {\tn V\tl V s t s");
result.add("pa-\tne-\tlized", "ph {\tn V\tl aI z d");
result.add("pa-\tnel", "ph {\tn V l");
result.add("pa-\tneled", "ph {\tn V l d");
result.add("pa-\tnels", "ph {\tn V l z");
result.add("pa-\tnel's", "ph {\tn V l z");
result.add("pa-\tnic", "ph {\tn I k");
result.add("pa-\tnic-\tking", "ph {\tn I\tk I N");
result.add("pa-\tnic-\tky", "ph {\tn I\tk i:");
result.add("pa-\tnicked", "ph {\tn I k t");
result.add("pa-\tnics", "ph {\tn I k s");
result.add("pa-\tnic's", "ph {\tn I k s");
result.add("pa-\tno-\tply", "ph {\tn Q p\tl i:");
result.add("pa-\tno-\tra", "ph V\tn O@\tV");
result.add("pa-\tno-\tra-\tma", "ph {\tn @r\t{\tm V");
result.add("pa-\tno-\tra-\tmic", "ph {\tn @r\t{\tm I k");
result.add("pa-\tpa", "ph Q\tp V");
result.add("pa-\tpa-\tcy", "ph eI\tp V\ts i:");
result.add("pa-\tpa-\tdo-\tpou-\tlos", "ph {\tp V\td Q\tp V\tl V s");
result.add("pa-\tpa-\tgo", "ph Q\tp V\tg @U");
result.add("pa-\tpa-\traz-\tzi", "ph Q\tp Q@\tO:\tz i:");
result.add("pa-\tpa-\tya", "ph V\tp aI\tV");
result.add("pa-\tpa-\tyas", "ph V\tp aI\tV z");
result.add("pa-\tpal", "ph eI\tp V l");
result.add("pa-\tpan-\tdre-\tou", "ph V\tp { n\td r i:\tu:");
result.add("pa-\tpas", "ph Q\tp V z");
result.add("pa-\tpaw", "ph O:\tp O:");
result.add("pa-\tpe-\tring", "ph eI\tp @r\tI N");
result.add("pa-\tpe-\try", "ph eI\tp @r\ti:");
result.add("pa-\tper", "ph eI\tp @r");
result.add("pa-\tper-\tback", "ph eI\tp @r\tb { k");
result.add("pa-\tper-\tbacks", "ph eI\tp @r\tb { k s");
result.add("pa-\tper-\tboard", "ph eI\tp @r\tb O@ d");
result.add("pa-\tper-\tboy", "ph eI\tp @r\tb O: j");
result.add("pa-\tper-\tboys", "ph eI\tp @r\tb O: j z");
result.add("pa-\tper-\tboy's", "ph eI\tp @r\tb O: j z");
result.add("pa-\tper-\tless", "ph eI\tp @r\tl V s");
result.add("pa-\tper-\tma-\tking", "ph {\tp @r\tm eI\tk I N");
result.add("pa-\tper-\tweight", "ph eI\tp @r\tw eI t");
result.add("pa-\tper-\twork", "ph eI\tp @r\tw @r k");
result.add("pa-\tpered", "ph eI\tp @r d");
result.add("pa-\tpers", "ph eI\tp @r z");
result.add("pa-\tper's", "ph eI\tp @r z");
result.add("pa-\tpesh", "ph {\tp I S");
result.add("pa-\tpi-\tneau", "ph {\tp I\tn @U");
result.add("pa-\tpier", "ph eI p\tj @r");
result.add("pa-\tpil-\tlo-\tma", "ph {\tp I\tl @U\tm V");
result.add("pa-\tpu-\ta", "ph { p\tj u:\tV");
result.add("pa-\tquet", "ph Q\tk eI t");
result.add("pa-\tra", "ph e@\tV");
result.add("pa-\tra-\tble", "ph e@\tV\tb V l");
result.add("pa-\tra-\tbles", "ph e@\tV\tb V l z");
result.add("pa-\tra-\tbo-\tla", "ph @r\t{\tb V\tl V");
result.add("pa-\tra-\tbo-\tlic", "ph e@\tV\tb Q\tl I k");
result.add("pa-\tra-\tchu-\tted", "ph e@\tI\tS u:\tt V d");
result.add("pa-\tra-\tchu-\tting", "ph e@\tI\tS u:\tt I N");
result.add("pa-\tra-\tchute", "ph e@\tI\tS u: t");
result.add("pa-\tra-\tchutes", "ph e@\tI\tS u: t s");
result.add("pa-\tra-\tda", "ph @r\t{\td V");
result.add("pa-\tra-\tded", "ph @r\teI\td V d");
result.add("pa-\tra-\tdi-\tso", "ph @r\tV\td i:\ts @U");
result.add("pa-\tra-\tdigm", "ph e@\tV\td aI m");
result.add("pa-\tra-\tdigms", "ph e@\tV\td aI m z");
result.add("pa-\tra-\tding", "ph @r\teI\td I N");
result.add("pa-\tra-\tdis", "ph @r\t{\td I s");
result.add("pa-\tra-\tdise", "ph e@\tV\td aI s");
result.add("pa-\tra-\tdo-\txes", "ph e@\tV\td Q k\ts V z");
result.add("pa-\tra-\tdo-\txi-\tcal", "ph e@\tV\td Q k\ts I\tk V l");
result.add("pa-\tra-\tdo-\txical-\tly", "ph e@\tV\td Q k\ts V k\tl i:");
result.add("pa-\tra-\tdor", "ph e@\tV\td O@");
result.add("pa-\tra-\tdox", "ph e@\tV\td Q k s");
result.add("pa-\tra-\tgon", "ph e@\tV\tg Q n");
result.add("pa-\tra-\tgraph", "ph e@\tV g\tr { f");
result.add("pa-\tra-\tgraphs", "ph e@\tV g\tr { f s");
result.add("pa-\tra-\tguay", "ph e@\tV g\tw eI");
result.add("pa-\tra-\tguay-\tan", "ph e@\tV g\tw aI\tV n");
result.add("pa-\tra-\tkeet", "ph e@\tV\tk i: t");
result.add("pa-\tra-\tkeets", "ph e@\tV\tk i: t s");
result.add("pa-\tra-\tle-\tgal", "ph e@\tV\tl i:\tg V l");
result.add("pa-\tra-\tle-\tgals", "ph e@\tV\tl i:\tg V l z");
result.add("pa-\tra-\tly-\tsis", "ph @r\t{\tl V\ts I s");
result.add("pa-\tra-\tlym-\tpic", "ph e@\tV\tl I m\tp I k");
result.add("pa-\tra-\tme-\tters", "ph @r\t{\tm V\tt @r z");
result.add("pa-\tra-\tmet-\tric", "ph e@\tV\tm e t\tr I k");
result.add("pa-\tra-\tmi-\tli-\tta-\tries", "ph e@\tV\tm I\tl V\tt e@\ti: z");
result.add("pa-\tra-\tmi-\tli-\tta-\try", "ph e@\tV\tm I\tl V\tt e@\ti:");
result.add("pa-\tra-\tmo", "ph @r\t{\tm @U");
result.add("pa-\tra-\tmount", "ph e@\tV\tm aU n t");
result.add("pa-\tra-\tmount's", "ph e@\tV\tm aU n t s");
result.add("pa-\tra-\tmus", "ph @r\t{\tm V s");
result.add("pa-\tra-\tna", "ph @r\tQ\tn V");
result.add("pa-\tra-\tnoi-\ta", "ph e@\tV\tn OI\tV");
result.add("pa-\tra-\tnoi-\tac", "ph e@\tV\tn OI\t{ k");
result.add("pa-\tra-\tnoid", "ph e@\tV\tn OI d");
result.add("pa-\tra-\tnor-\tmal", "ph e@\tV\tn O@\tm V l");
result.add("pa-\tra-\tpher-\tna-\tlia", "ph e@\tV\tf V\tn eI l\tj V");
result.add("pa-\tra-\tphra-\tsing", "ph e@\tV f\tr eI\tz I N");
result.add("pa-\tra-\tphrase", "ph e@\tV f\tr eI z");
result.add("pa-\tra-\tple-\tgi-\ta", "ph e@\tV p\tl i:\tdZ i:\tV");
result.add("pa-\tra-\tple-\tgic", "ph e@\tV p\tl i:\tdZ I k");
result.add("pa-\tra-\tsi-\ttic", "ph e@\tV\ts I\tt I k");
result.add("pa-\tra-\tsite", "ph e@\tV\ts aI t");
result.add("pa-\tra-\tsites", "ph e@\tV\ts aI t s");
result.add("pa-\tra-\tsym-\tpa-\tthe-\ttic", "ph e@\tV\ts I m\tp V\tT e\tt I k");
result.add("pa-\tra-\ttroo-\tper", "ph e@\tV t\tr u:\tp @r");
result.add("pa-\tra-\ttroo-\tpers", "ph e@\tV t\tr u:\tp @r z");
result.add("pa-\tra-\ttroop", "ph e@\tV t\tr u: p");
result.add("pa-\tra-\ttroops", "ph e@\tV t\tr u: p s");
result.add("pa-\tra-\tzo-\ta", "ph e@\tV\tz @U\tV");
result.add("pa-\trade", "ph @r\teI d");
result.add("pa-\trades", "ph @r\teI d z");
result.add("pa-\traf-\tfin", "ph e@\tV\tf V n");
result.add("pa-\tral-\tlax", "ph e@\tV\tl { k s");
result.add("pa-\tral-\tle-\tli-\tsm", "ph e@\tV\tl e\tl I\tz V m");
result.add("pa-\tral-\tle-\tling", "ph e@\tV\tl e\tl I N");
result.add("pa-\tral-\tlel", "ph e@\tV\tl e l");
result.add("pa-\tral-\tleled", "ph e@\tV\tl e l d");
result.add("pa-\tral-\tlels", "ph e@\tV\tl e l z");
result.add("pa-\trel-\tla", "ph Q@\te\tl V");
result.add("pa-\tren-\ttage", "ph e@\tV n\tt V dZ");
result.add("pa-\tren-\ttal", "ph @r\te n\tt V l");
result.add("pa-\tren-\tthe-\tses", "ph @r\te n\tT V\ts i: z");
result.add("pa-\tren-\tthe-\tsis", "ph @r\te n\tT V\ts I s");
result.add("pa-\tren-\tthe-\tti-\tcal-\tly", "ph @r\te n\tT e\tt I\tk V\tl i:");
result.add("pa-\tren-\tting", "ph e@\tV n\tt I N");
result.add("pa-\trent", "ph e@\tV n t");
result.add("pa-\trent-\thood", "ph e@\tV n\tt h U d");
result.add("pa-\trents", "ph e@\tV n t s");
result.add("pa-\trent's", "ph e@\tV n t s");
result.add("pa-\tri-\tah", "ph @r\taI\tV");
result.add("pa-\tri-\tahs", "ph @r\taI\tV z");
result.add("pa-\tri-\te-\ttal", "ph @r\taI\tV\tt V l");
result.add("pa-\tri-\tmu-\ttu-\tel", "ph e@\tI m\tj u:\ttS u:\tV l");
result.add("pa-\tri-\tshes", "ph {\tr I\tS V z");
result.add("pa-\tri-\tshio-\tner", "ph @r\tI\tS V\tn @r");
result.add("pa-\tri-\tshio-\tners", "ph @r\tI\tS V\tn @r z");
result.add("pa-\tri-\tsi-\tans", "ph @r\tI\ts i:\tV n z");
result.add("pa-\tri-\tsi-\tenne", "ph @r\tI\ts i:\te n");
result.add("pa-\tri-\tsian", "ph @r\tI\tZ V n");
result.add("pa-\tri-\ts's", "ph {\tr I\ts V z");
result.add("pa-\tri-\tties", "ph e@\tI\tt i: z");
result.add("pa-\tri-\tty", "ph e@\tI\tt i:");
result.add("pa-\tring", "ph e@\tI N");
result.add("pa-\tris", "ph {\tr I s");
result.add("pa-\trish", "ph {\tr I S");
result.add("pa-\tro-\tchi-\ta-\tli-\tsm", "ph @r\t@U\tk i:\tV\tl I\tz V m");
result.add("pa-\tro-\tchi-\tal", "ph @r\t@U\tk i:\tV l");
result.add("pa-\tro-\tdi", "ph Q@\t@U\td i:");
result.add("pa-\tro-\tdied", "ph e@\tV\td i: d");
result.add("pa-\tro-\tdies", "ph e@\tV\td i: z");
result.add("pa-\tro-\tdist", "ph {\tr V\td I s t");
result.add("pa-\tro-\tdy", "ph e@\tV\td i:");
result.add("pa-\tro-\tlee", "ph @r\t@U\tl i:");
result.add("pa-\tro-\tlees", "ph @r\t@U\tl i: z");
result.add("pa-\tro-\tling", "ph @r\t@U\tl I N");
result.add("pa-\trole", "ph @r\t@U l");
result.add("pa-\troled", "ph @r\t@U l d");
result.add("pa-\troles", "ph @r\t@U l z");
result.add("pa-\tsa-\tde-\tna", "ph {\ts V\td i:\tn @r");
result.add("pa-\tse-\to", "ph Q\ts eI\t@U");
result.add("pa-\tsha", "ph Q\tS Q");
result.add("pa-\tso", "ph {\ts @U");
result.add("pa-\tso's", "ph {\ts @U z");
result.add("pa-\tta-\tgo-\tni-\ta", "ph {\tt V\tg @U\tn i:\tV");
result.add("pa-\tta-\tgo-\tni-\tan", "ph {\tt V\tg @U\tn i:\tV n");
result.add("pa-\tte-\tra", "ph Q\tt e@\tV");
result.add("pa-\ttel", "ph V\tt e l");
result.add("pa-\ttel-\tla", "ph V\tt e\tl V");
result.add("pa-\tten-\tta-\tble", "ph {\tt V n\tt V\tb V l");
result.add("pa-\tten-\tted", "ph {\tt V n\tt V d");
result.add("pa-\tten-\tting", "ph {\tt V n\tt I N");
result.add("pa-\ttent", "ph {\tt V n t");
result.add("pa-\ttent-\tly", "ph {\tt V n\tt l i:");
result.add("pa-\ttents", "ph {\tt V n t s");
result.add("pa-\tter", "ph eI\tt @r");
result.add("pa-\tter-\tna-\tli-\tsm", "ph V\tt @r\tn V\tl I\tz V m");
result.add("pa-\tter-\tna-\tlis-\ttic", "ph V\tt @r\tn V\tl I s\tt I k");
result.add("pa-\tter-\tnal", "ph V\tt @r\tn V l");
result.add("pa-\tter-\tni-\tty", "ph V\tt @r\tn V\tt i:");
result.add("pa-\tter-\tson", "ph {\tt @r\ts V n");
result.add("pa-\tthan", "ph {\tT V n");
result.add("pa-\tthans", "ph {\tT V n z");
result.add("pa-\tthe-\tti-\tcal-\tly", "ph V\tT e\tt I\tk V\tl i:");
result.add("pa-\tthe-\ttic", "ph V\tT e\tt I k");
result.add("pa-\ttho-\tge-\tnic", "ph {\tT V\tdZ e\tn I k");
result.add("pa-\ttho-\tgen", "ph {\tT V\tdZ V n");
result.add("pa-\ttho-\tgens", "ph {\tT V\tdZ V n z");
result.add("pa-\ttho-\tlo-\tgi-\tcal", "ph {\tT V\tl Q\tdZ I\tk V l");
result.add("pa-\ttho-\tlo-\tgical-\tly", "ph {\tT V\tl Q\tdZ I k\tl i:");
result.add("pa-\ttho-\tlo-\tgies", "ph V\tT Q\tl V\tdZ i: z");
result.add("pa-\ttho-\tlo-\tgist", "ph V\tT Q\tl V\tdZ V s t");
result.add("pa-\ttho-\tlo-\tgists", "ph V\tT Q\tl V\tdZ V s t s");
result.add("pa-\ttho-\tlo-\tgy", "ph V\tT Q\tl V\tdZ i:");
result.add("pa-\tthos", "ph eI\tT Q s");
result.add("pa-\tti-\tna", "ph V\tt i:\tn V");
result.add("pa-\tti-\to", "ph {\tt i:\t@U");
result.add("pa-\tti-\tos", "ph {\tt i:\t@U z");
result.add("pa-\ttience", "ph eI\tS V n s");
result.add("pa-\ttient", "ph eI\tS V n t");
result.add("pa-\ttient-\tly", "ph eI\tS V n\tt l i:");
result.add("pa-\ttients", "ph eI\tS V n t s");
result.add("pa-\ttient's", "ph eI\tS V n t s");
result.add("pa-\ttin", "ph {\tt I n");
result.add("pa-\tton", "ph {\tt V n");
result.add("pa-\tty", "ph eI\tt i:");
result.add("pa-\tva-\trot-\tti", "ph {\tv @r\tQ\tt i:");
result.add("pa-\tve-\tse", "ph Q\tv eI\tz i:");
result.add("pa-\tvel", "ph {\tv V l");
result.add("pa-\tver", "ph eI\tv @r");
result.add("pa-\tvi-\ta", "ph eI\tv i:\tV");
result.add("pa-\tvi-\tlion", "ph V\tv I l\tj V n");
result.add("pa-\tvi-\tlions", "ph V\tv I l\tj V n z");
result.add("pa-\tvil-\tlion", "ph V\tv I l\tj V n");
result.add("pa-\tving", "ph eI\tv I N");
result.add("pa-\tvo", "ph Q\tv @U");
result.add("pa-\tvone", "ph V\tv @U n");
result.add("pa-\txon", "ph { k\ts V n");
result.add("pa-\tya-\tble", "ph eI\tV\tb V l");
result.add("pa-\tya-\tbles", "ph eI\tV\tb V l z");
result.add("pa-\tyer", "ph eI\t@r");
result.add("pa-\tyers", "ph eI\t@r z");
result.add("pa-\tyer's", "ph eI\t@r z");
result.add("pa-\tyette", "ph eI\te t");
result.add("pa-\tyo-\tla", "ph eI\t@U\tl V");
result.add("paar", "ph Q@");
result.add("pab-\tlo", "ph Q b\tl @U");
result.add("pab-\tlum", "ph { b\tl V m");
result.add("pabst", "ph { b s t");
result.add("pac", "ph { k");
result.add("pac-\tka-\tger", "ph {\tk I\tdZ @r");
result.add("pac-\tka-\tgers", "ph {\tk I\tdZ @r z");
result.add("pac-\tka-\tges", "ph {\tk V\tdZ V z");
result.add("pac-\tka-\tge's", "ph {\tk I\tdZ V z");
result.add("pac-\tka-\tging", "ph {\tk I\tdZ I N");
result.add("pac-\tkage", "ph {\tk I dZ");
result.add("pac-\tkaged", "ph {\tk I dZ d");
result.add("pac-\tkard", "ph {\tk @r d");
result.add("pac-\tkard's", "ph {\tk @r d z");
result.add("pac-\tker", "ph {\tk @r");
result.add("pac-\tkers", "ph {\tk @r z");
result.add("pac-\tket", "ph {\tk V t");
result.add("pac-\tkets", "ph {\tk V t s");
result.add("pac-\tking", "ph {\tk I N");
result.add("pac-\tking-\thouse", "ph {\tk I N\th aU s");
result.add("pac-\tman", "ph { k\tm V n");
result.add("pace", "ph eI s");
result.add("pace-\tma-\tker", "ph eI s\tm eI\tk @r");
result.add("pace-\tma-\tkers", "ph eI s\tm eI\tk @r z");
result.add("pace-\tset-\tter", "ph eI\ts e\tt @r");
result.add("pace-\tway", "ph eI s\tw eI");
result.add("paced", "ph eI s t");
result.add("pack", "ph { k");
result.add("pack-\tman", "ph { k\tm V n");
result.add("pack-\twood", "ph { k\tw U d");
result.add("pack-\twood's", "ph { k\tw U d z");
result.add("packed", "ph { k t");
result.add("packs", "ph { k s");
result.add("pacs", "ph { k s");
result.add("pact", "ph { k t");
result.add("pacts", "ph { k t s");
result.add("pact's", "ph { k t s");
result.add("pad", "ph { d");
result.add("pad-\td-\tling", "ph {\td V\tl I N");
result.add("pad-\tded", "ph {\td V d");
result.add("pad-\tdies", "ph {\td i: z");
result.add("pad-\tding", "ph {\td I N");
result.add("pad-\tding-\tton", "ph {\td I N\tt V n");
result.add("pad-\tdle", "ph {\td V l");
result.add("pad-\tdled", "ph {\td V l d");
result.add("pad-\tdles", "ph {\td V l z");
result.add("pad-\tdock", "ph {\td V k");
result.add("pad-\tdy", "ph {\td i:");
result.add("pad-\tdy's", "ph {\td i: z");
result.add("pad-\tget", "ph {\tdZ V t");
result.add("pad-\tgett", "ph {\tdZ V t");
result.add("pad-\tlock", "ph { d\tl Q k");
result.add("pad-\tlocked", "ph { d\tl Q k t");
result.add("pad-\tlocks", "ph { d\tl Q k s");
result.add("pad-\tre", "ph { d\tr eI");
result.add("pad-\tres", "ph { d\tr eI z");
result.add("pae", "ph aI");
result.add("paff", "ph { f");
result.add("pag-\tli-\ta", "ph { g\tl i:\tV");
result.add("page", "ph eI dZ");
result.add("paged", "ph eI dZ d");
result.add("pah", "ph {");
result.add("pahl", "ph Q l");
result.add("pai-\tring", "ph e@\tI N");
result.add("pai-\tute", "ph aI\tj u: t");
result.add("paid", "ph eI d");
result.add("paige", "ph eI dZ");
result.add("paik", "ph eI k");
result.add("pail", "ph eI l");
result.add("pails", "ph eI l z");
result.add("pain", "ph eI n");
result.add("pain-\tful", "ph eI n\tf V l");
result.add("pain-\tful-\tly", "ph eI n\tf V\tl i:");
result.add("pain-\tkil-\tler", "ph eI n\tk I\tl @r");
result.add("pain-\tkil-\tlers", "ph eI n\tk I\tl @r z");
result.add("pain-\tless", "ph eI n\tl V s");
result.add("pain-\tless-\tly", "ph eI n\tl V s\tl i:");
result.add("pain-\tsta-\tking", "ph eI n\ts t eI\tk I N");
result.add("pain-\tsta-\tking-\tly", "ph eI n\ts t eI\tk I N\tl i:");
result.add("pain-\tted", "ph eI n\tt V d");
result.add("pain-\tter", "ph eI n\tt @r");
result.add("pain-\tter-\tly", "ph eI n\tt @r\tl i:");
result.add("pain-\tters", "ph eI n\tt @r z");
result.add("pain-\tter's", "ph eI n\tt @r z");
result.add("pain-\tting", "ph eI n\tt I N");
result.add("pain-\ttings", "ph eI n\tt I N z");
result.add("paine", "ph eI n");
result.add("pained", "ph eI n d");
result.add("paines-\tville", "ph eI n\tz v I l");
result.add("pains", "ph eI n z");
result.add("paint", "ph eI n t");
result.add("paint-\tball", "ph eI n\tt b Q l");
result.add("paint-\tbru-\tshes", "ph eI n\tt b r V\tS V z");
result.add("paint-\tbrush", "ph eI n\tt b r V S");
result.add("paints", "ph eI n t s");
result.add("pair", "ph e@");
result.add("paired", "ph e@ d");
result.add("pairs", "ph e@ z");
result.add("pais", "ph eI z");
result.add("pais-\tley", "ph eI z\tl i:");
result.add("pais-\tley's", "ph eI z\tl i: z");
result.add("pak", "ph { k");
result.add("pal", "ph { l");
result.add("pal-\tco", "ph { l\tk @U");
result.add("pal-\tfrey", "ph { l\tf r i:");
result.add("pal-\tla", "ph {\tl V");
result.add("pal-\tla-\tdi-\tum", "ph V\tl eI\td i:\tV m");
result.add("pal-\tlas", "ph {\tl V s");
result.add("pal-\tlet", "ph {\tl V t");
result.add("pal-\tlets", "ph {\tl V t s");
result.add("pal-\tli-\ta-\ttive", "ph {\tl i:\tV\tt I v");
result.add("pal-\tli-\ta-\ttives", "ph {\tl i:\tV\tt I v z");
result.add("pal-\tlid", "ph {\tl I d");
result.add("pal-\tlo-\tne", "ph Q\tl @U\tn i:");
result.add("pal-\tma", "ph Q l\tm V");
result.add("pal-\tma's", "ph Q l\tm V z");
result.add("pal-\tme-\tri", "ph Q l\tm e@\ti:");
result.add("pal-\tmer", "ph Q\tm @r");
result.add("pal-\tmer-\tton", "ph Q\tm @r\tt V n");
result.add("pal-\tmer's", "ph Q\tm @r z");
result.add("pal-\tmet-\tto", "ph { l\tm e\tt @U");
result.add("pal-\tmi-\tra", "ph Q l\tm I@\tV");
result.add("pal-\tmi-\ttic", "ph { l\tm I\tt I k");
result.add("pal-\tmis-\ttry", "ph Q\tm I s\tt r i:");
result.add("pal-\tmo-\tlive", "ph Q l\tm Q\tl I v");
result.add("pal-\tmore", "ph { l\tm O@");
result.add("pal-\tpa-\tble", "ph { l\tp V\tb V l");
result.add("pal-\tpab-\tly", "ph { l\tp V b\tl i:");
result.add("pal-\tpi-\tta-\ttion", "ph { l\tp I\tt eI\tS V n");
result.add("pal-\tpi-\tta-\ttions", "ph { l\tp I\tt eI\tS V n z");
result.add("pal-\tsy", "ph O: l\tz i:");
result.add("pal-\ttry", "ph O: l\tt r i:");
result.add("pale", "ph eI l");
result.add("paled", "ph eI l d");
result.add("pales", "ph eI l z");
result.add("pall", "ph Q l");
result.add("palm", "ph Q m");
result.add("palm-\tdale", "ph Q m\td eI l");
result.add("palm-\tdale's", "ph Q m\td eI l z");
result.add("palm-\tgren", "ph { l\tm g r e n");
result.add("palms", "ph Q m z");
result.add("pals", "ph { l z");
result.add("pal's", "ph { l z");
result.add("paltz", "ph O: l t s");
result.add("pam", "ph { m");
result.add("pam-\tmy", "ph {\tm i:");
result.add("pam-\tpas", "ph { m\tp V z");
result.add("pam-\tpe-\tring", "ph { m\tp @r\tI N");
result.add("pam-\tper", "ph { m\tp @r");
result.add("pam-\tpered", "ph { m\tp @r d");
result.add("pam-\tpers", "ph { m\tp @r z");
result.add("pam-\tphlet", "ph { m\tf l V t");
result.add("pamp-\tlin", "ph { m\tp l I n");
result.add("pamp-\tlo-\tna", "ph { m\tp l @U\tn V");
result.add("pamph-\tle-\tteer", "ph { m\tf l V\tt I@");
result.add("pamph-\tlets", "ph { m\tf l V t s");
result.add("pam's", "ph { m z");
result.add("pan", "ph { n");
result.add("pan-\tcre-\ta-\ttic", "ph { n\tk r i:\t{\tt I k");
result.add("pan-\tda", "ph { n\td V");
result.add("pan-\tda-\tnus", "ph { n\td eI\tn V s");
result.add("pan-\tdas", "ph { n\td V z");
result.add("pan-\tde-\tmic", "ph { n\td e\tm I k");
result.add("pan-\tde-\tmo-\tni-\tum", "ph { n\td V\tm @U\tn i:\tV m");
result.add("pan-\tde-\tring", "ph { n\td @r\tI N");
result.add("pan-\tder", "ph { n\td @r");
result.add("pan-\tdered", "ph { n\td @r d");
result.add("pan-\tdit", "ph V n\td I t");
result.add("pan-\tdo-\tra", "ph { n\td O@\tV");
result.add("pan-\tdo-\tra's", "ph { n\td O@\tV z");
result.add("pan-\tdol-\tfi", "ph Q n\td @U l\tf i:");
result.add("pan-\tfil", "ph { n\tf I l");
result.add("pan-\tful", "ph { n\tf V l");
result.add("pan-\tfuls", "ph { n\tf V l z");
result.add("pan-\tgloss", "ph { n\tg l Q s");
result.add("pan-\than-\tdle", "ph { n\th { n\td V l");
result.add("pan-\than-\tdle's", "ph { n\th { n\td V l z");
result.add("pan-\thand-\tler", "ph { n\th { n\td l @r");
result.add("pan-\thand-\tlers", "ph { n\th { n\td l @r z");
result.add("pan-\thand-\tling", "ph { n\th { n\td l I N");
result.add("pan-\tky", "ph { N\tk i:");
result.add("pan-\tmun-\tjom", "ph { n\tm u: n\tdZ O: m");
result.add("pan-\tni-\ter", "ph {\tn i:\t@r");
result.add("pan-\tning", "ph {\tn I N");
result.add("pan-\tsies", "ph { n\tz i: z");
result.add("pan-\tso-\tphic", "ph { n\ts V\tf I k");
result.add("pan-\tsy", "ph { n\tz i:");
result.add("pan-\tta-\tlone", "ph { n\tt V\tl @U n");
result.add("pan-\tta-\tloon", "ph { n\tt V\tl u: n");
result.add("pan-\tta-\tloons", "ph { n\tt V\tl u: n z");
result.add("pan-\tted", "ph { n\tt V d");
result.add("pan-\tter", "ph { n\tt @r");
result.add("pan-\tthe-\ta", "ph { n\tT i:\tV");
result.add("pan-\tthe-\tis-\ttic", "ph { n\tT i:\tI s\tt I k");
result.add("pan-\tthe-\ton", "ph { n\tT i:\tQ n");
result.add("pan-\tther", "ph { n\tT @r");
result.add("pan-\tthers", "ph { n\tT @r z");
result.add("pan-\tther's", "ph { n\tT @r z");
result.add("pan-\tties", "ph { n\tt i: z");
result.add("pan-\tting", "ph { n\tt I N");
result.add("pan-\ttle", "ph { n\tt V l");
result.add("pan-\tto-\tmime", "ph { n\tt V\tm aI m");
result.add("pan-\tton", "ph { n\tt V n");
result.add("pan-\ttry", "ph { n\tt r i:");
result.add("pan-\tty", "ph { n\tt i:");
result.add("pan-\tty-\those", "ph { n\tt i:\th @U z");
result.add("pan-\tza", "ph { n\tz V");
result.add("pan-\tzer", "ph { n\tz @r");
result.add("pane", "ph eI n");
result.add("panes", "ph eI n z");
result.add("pang", "ph { N");
result.add("pang-\tburn", "ph { N\tb @r n");
result.add("pangs", "ph { N z");
result.add("panned", "ph { n d");
result.add("pans", "ph { n z");
result.add("pan's", "ph { n z");
result.add("pant", "ph { n t");
result.add("pant-\tsuit", "ph { n\tt s u: t");
result.add("pant-\tsuits", "ph { n\tt s u: t s");
result.add("pants", "ph { n t s");
result.add("pao", "ph aU");
result.add("pao-\tli", "ph aU\tl i:");
result.add("pao-\tlo", "ph aU\tl @U");
result.add("pap", "ph { p");
result.add("pap-\tpa", "ph {\tp V");
result.add("pap-\tpas", "ph {\tp V s");
result.add("pap-\tri-\tka", "ph { p\tr i:\tk V");
result.add("pape", "ph eI p");
result.add("papke", "ph eI p k");
result.add("papp", "ph { p");
result.add("paque", "ph { k");
result.add("par", "ph Q@");
result.add("par-\tboi-\tling", "ph Q@\tb OI\tl I N");
result.add("par-\tboil", "ph Q@\tb OI l");
result.add("par-\tce-\tling", "ph Q@\ts V\tl I N");
result.add("par-\tcel", "ph Q@\ts V l");
result.add("par-\tceled", "ph Q@\ts V l d");
result.add("par-\tcels", "ph Q@\ts V l z");
result.add("par-\tcher", "ph Q@\ttS @r");
result.add("par-\tdee", "ph Q@\td i:");
result.add("par-\tdi", "ph Q@\td i:");
result.add("par-\tdo", "ph Q@\td @U");
result.add("par-\tdo-\tning", "ph Q@\td V\tn I N");
result.add("par-\tdon", "ph Q@\td V n");
result.add("par-\tdoned", "ph Q@\td V n d");
result.add("par-\tdons", "ph Q@\td V n z");
result.add("par-\tdus", "ph Q@\td V s");
result.add("par-\tdy", "ph Q@\td i:");
result.add("par-\tfitt", "ph Q@\tf I t");
result.add("par-\tka", "ph Q@\tk V");
result.add("par-\tkas", "ph Q@\tk V z");
result.add("par-\tker", "ph Q@\tk @r");
result.add("par-\tkers", "ph Q@\tk @r z");
result.add("par-\tker's", "ph Q@\tk @r z");
result.add("par-\tkers-\tburg", "ph Q@\tk @r z\tb @r g");
result.add("par-\tkin", "ph Q@\tk I n");
result.add("par-\tkin-\tso-\tni-\tsm", "ph Q@\tk I n\ts V\tn I\tz V m");
result.add("par-\tkin-\tson", "ph Q@\tk I n\ts V n");
result.add("par-\tkin-\tson's", "ph Q@\tk I n\ts V n z");
result.add("par-\tking", "ph Q@\tk I N");
result.add("par-\tkins", "ph Q@\tk I n z");
result.add("par-\tlance", "ph Q@\tl V n s");
result.add("par-\tlay", "ph Q@\tl eI");
result.add("par-\tlay-\ting", "ph Q@\tl eI\tI N");
result.add("par-\tlayed", "ph Q@\tl eI d");
result.add("par-\tley", "ph Q@\tl i:");
result.add("par-\tli-\ter", "ph Q@\tl i:\t@r");
result.add("par-\tlia-\tmen-\tta-\tri-\ta-\tni-\tsm", "ph Q@\tl V\tm e n\tt e@\ti:\tV\tn I\tz V m");
result.add("par-\tlia-\tmen-\tta-\tri-\tan", "ph Q@\tl V\tm e n\tt e@\ti:\tV n");
result.add("par-\tlia-\tmen-\tta-\tri-\tans", "ph Q@\tl V\tm e n\tt e@\ti:\tV n z");
result.add("par-\tlia-\tmen-\tta-\try", "ph Q@\tl V\tm e n\tt @r\ti:");
result.add("par-\tlia-\tment", "ph Q@\tl V\tm e n t");
result.add("par-\tlia-\tments", "ph Q@\tl V\tm e n t s");
result.add("par-\tlia-\tment's", "ph Q@\tl V\tm e n t s");
result.add("par-\tlin", "ph Q@\tl I n");
result.add("par-\tlor", "ph Q@\tl @r");
result.add("par-\tlors", "ph Q@\tl @r z");
result.add("par-\tlour", "ph Q@\tl @r");
result.add("par-\tma", "ph Q@\tm V");
result.add("par-\tme-\tle", "ph Q@\tm e\tl i:");
result.add("par-\tme-\tlee", "ph Q@\tm V\tl i:");
result.add("par-\tme-\tsan", "ph Q@\tm V\tz Q n");
result.add("par-\tmen-\tti-\ter", "ph Q@\tm V n\tt i:\t@r");
result.add("par-\tnas-\tsus", "ph Q@\tn {\ts V s");
result.add("par-\tnell", "ph Q@\tn V l");
result.add("par-\tquet", "ph Q@\tk eI");
result.add("par-\tra", "ph Q@\tV");
result.add("par-\tried", "ph e@\ti: d");
result.add("par-\tril-\tlo", "ph Q@\tI\tl @U");
result.add("par-\tris", "ph e@\tI s");
result.add("par-\trish", "ph e@\tI S");
result.add("par-\trot", "ph e@\tV t");
result.add("par-\trots", "ph e@\tV t s");
result.add("par-\trott", "ph e@\tV t");
result.add("par-\try", "ph e@\ti:");
result.add("par-\tsec", "ph Q@\ts e k");
result.add("par-\tser", "ph Q@\ts @r");
result.add("par-\tshall", "ph Q@\tS V l");
result.add("par-\tsi-\tfal", "ph Q@\ts I\tf V l");
result.add("par-\tsi-\tmo-\tny", "ph Q@\ts I\tm @U\tn i:");
result.add("par-\tsing", "ph Q@\ts I N");
result.add("par-\tsip-\tpa-\tny", "ph Q@\ts I\tp V\tn i:");
result.add("par-\tso-\tnage", "ph Q@\ts V\tn I dZ");
result.add("par-\tson", "ph Q@\ts V n");
result.add("par-\tsons", "ph Q@\ts V n z");
result.add("par-\ttake", "ph Q@\tt eI k");
result.add("par-\tted", "ph Q@\tt V d");
result.add("par-\tten", "ph Q@\tt V n");
result.add("par-\tthe-\tni-\ta", "ph Q@\tT e\tn i:\tV");
result.add("par-\tthe-\tno-\tge-\tne-\ttic", "ph Q@\tT V\tn @U\tdZ V\tn e\tt I k");
result.add("par-\tthe-\tnon", "ph Q@\tT V\tn Q n");
result.add("par-\tthi-\tan", "ph Q@\tT i:\tV n");
result.add("par-\tti", "ph Q@\tt i:");
result.add("par-\tti-\ta-\tli-\tty", "ph Q@\tS i:\t{\tl I\tt i:");
result.add("par-\tti-\tci-\tpa-\tted", "ph Q@\tt I\ts I\tp eI\tt I d");
result.add("par-\tti-\tci-\tpa-\tting", "ph Q@\tt I\ts I\tp eI\tt I N");
result.add("par-\tti-\tci-\tpa-\ttion", "ph Q@\tt I\ts I\tp eI\tS V n");
result.add("par-\tti-\tci-\tpa-\ttions", "ph Q@\tt I\ts I\tp eI\tS V n z");
result.add("par-\tti-\tci-\tpa-\ttive", "ph Q@\tt I\ts I\tp V\tt I v");
result.add("par-\tti-\tci-\tpa-\tto-\try", "ph Q@\tt I\ts I\tp V\tt O@\ti:");
result.add("par-\tti-\tci-\tpant", "ph Q@\tt I\ts I\tp V n t");
result.add("par-\tti-\tci-\tpants", "ph Q@\tt I\ts I\tp V n t s");
result.add("par-\tti-\tci-\tpate", "ph Q@\tt I\ts I\tp eI t");
result.add("par-\tti-\tci-\tpates", "ph Q@\tt I\ts I\tp eI t s");
result.add("par-\tti-\tcle", "ph Q@\tt I\tk V l");
result.add("par-\tti-\tcles", "ph Q@\tt I\tk V l z");
result.add("par-\tti-\tcu-\tla-\tri-\tty", "ph @r\tt I k\tj V\tl {\tr V\tt i:");
result.add("par-\tti-\tcu-\tlar", "ph @r\tt I k\tj V\tl @r");
result.add("par-\tti-\tcu-\tlar-\tly", "ph Q@\tt I k\tj V\tl @r\tl i:");
result.add("par-\tti-\tcu-\tlars", "ph @r\tt I k\tj V\tl @r z");
result.add("par-\tti-\tcu-\tlate", "ph @r\tt I k\tj V\tl V t");
result.add("par-\tti-\tcu-\tlates", "ph Q@\tt I k\tj V\tl V t s");
result.add("par-\tti-\tsan", "ph Q@\tt I\tz V n");
result.add("par-\tti-\tsan-\tship", "ph Q@\tt I\tz V n\tS I p");
result.add("par-\tti-\tsans", "ph Q@\tt I\tz V n z");
result.add("par-\tti-\ttio-\tning", "ph Q@\tt I\tS V\tn I N");
result.add("par-\tti-\ttion", "ph Q@\tt I\tS V n");
result.add("par-\tti-\ttioned", "ph Q@\tt I\tS V n d");
result.add("par-\tti-\ttions", "ph Q@\tt I\tS V n z");
result.add("par-\ttial", "ph Q@\tS V l");
result.add("par-\ttial-\tly", "ph Q@\tS V\tl i:");
result.add("par-\ttied", "ph Q@\tt i: d");
result.add("par-\tties", "ph Q@\tt i: z");
result.add("par-\tting", "ph Q@\tt I N");
result.add("par-\tton", "ph Q@\tt V n");
result.add("par-\ttum", "ph Q@\tt V m");
result.add("par-\tty", "ph Q@\tt i:");
result.add("par-\tty-\ting", "ph Q@\tt i:\tI N");
result.add("par-\tty's", "ph Q@\tt i: z");
result.add("parc", "ph Q@ k");
result.add("parch", "ph Q@ tS");
result.add("parch-\tment", "ph Q@ tS\tm V n t");
result.add("parch-\tment-\tlike", "ph Q@ tS\tm V n\tt l aI k");
result.add("parched", "ph Q@ tS t");
result.add("parde", "ph Q@ d");
result.add("pare", "ph e@");
result.add("pared", "ph e@ d");
result.add("pares", "ph e@ z");
result.add("park", "ph Q@ k");
result.add("park-\tland", "ph Q@ k\tl { n d");
result.add("park-\tman", "ph Q@ k\tm V n");
result.add("park-\tway", "ph Q@ k\tw eI");
result.add("parke", "ph Q@ k");
result.add("parked", "ph Q@ k t");
result.add("parks", "ph Q@ k s");
result.add("park's", "ph Q@ k s");
result.add("parr", "ph Q@");
result.add("pars", "ph Q@ z");
result.add("par's", "ph Q@ z");
result.add("pars-\tley", "ph Q@ s\tl i:");
result.add("parse", "ph Q@ s");
result.add("part", "ph Q@ t");
result.add("part-\tlow", "ph Q@ t\tl @U");
result.add("part-\tly", "ph Q@ t\tl i:");
result.add("part-\tner", "ph Q@ t\tn @r");
result.add("part-\tner-\ting", "ph Q@ t\tn @r\tI N");
result.add("part-\tner-\tship", "ph Q@ t\tn @r\tS I p");
result.add("part-\tner-\tships", "ph Q@ t\tn @r\tS I p s");
result.add("part-\tner-\tship's", "ph Q@ t\tn @r\tS I p s");
result.add("part-\tners", "ph Q@ t\tn @r z");
result.add("part-\tner's", "ph Q@ t\tn @r z");
result.add("part-\tners'", "ph Q@ t\tn @r z");
result.add("part-\trid-\tges", "ph Q@ t\tr I\tdZ V z");
result.add("part-\tridge", "ph Q@ t\tr I dZ");
result.add("part-\ttime", "ph Q@ t\tt aI m");
result.add("parte", "ph Q@ t");
result.add("parts", "ph Q@ t s");
result.add("part's", "ph Q@ t s");
result.add("pas", "ph Q z");
result.add("pas-\tca-\tgou-\tla", "ph { s\tk V\tg u:\tl V");
result.add("pas-\tcal", "ph { s\tk { l");
result.add("pas-\tcale", "ph { s\tk { l");
result.add("pas-\tchal", "ph {\tS V l");
result.add("pas-\tco", "ph Q s\tk @U");
result.add("pas-\tcoe", "ph { s\tk @U");
result.add("pas-\tcu-\ta", "ph Q s\tk u:\tV");
result.add("pas-\tcu-\tal", "ph { s\tk u:\tV l");
result.add("pas-\tqua-\tle", "ph Q s\tk w Q\tl eI");
result.add("pas-\tse-\tro", "ph Q\ts e@\t@U");
result.add("pas-\tsen-\tger", "ph {\ts V n\tdZ @r");
result.add("pas-\tsen-\tgers", "ph {\ts V n\tdZ @r z");
result.add("pas-\tsen-\tger's", "ph {\ts V n\tdZ @r z");
result.add("pas-\tser", "ph {\ts @r");
result.add("pas-\tser-\tby", "ph {\ts @r\tb i:");
result.add("pas-\tsers", "ph {\ts @r z");
result.add("pas-\tsers-\tby", "ph {\ts @r z\tb i:");
result.add("pas-\tses", "ph {\ts V z");
result.add("pas-\tsi-\tvi-\tty", "ph V\ts I\tv V\tt i:");
result.add("pas-\tsim", "ph {\ts i: m");
result.add("pas-\tsing", "ph {\ts I N");
result.add("pas-\tsio-\tnate", "ph {\tS V\tn I t");
result.add("pas-\tsio-\tnate-\tly", "ph {\tS V\tn I t\tl i:");
result.add("pas-\tsion", "ph {\tS V n");
result.add("pas-\tsions", "ph {\tS V n z");
result.add("pas-\tsive", "ph {\ts I v");
result.add("pas-\tsive-\tly", "ph {\ts I v\tl i:");
result.add("pas-\tta", "ph Q s\tt V");
result.add("pas-\ttas", "ph Q s\tt V z");
result.add("pas-\tted", "ph eI s\tt V d");
result.add("pas-\ttel", "ph { s\tt e l");
result.add("pas-\ttels", "ph { s\tt e l z");
result.add("pas-\tter", "ph { s\tt @r");
result.add("pas-\tter-\tnak", "ph { s\tt @r\tn { k");
result.add("pas-\tter-\tnak's", "ph { s\tt @r\tn { k s");
result.add("pas-\tteu-\tri-\tza-\ttion", "ph { s\ttS @r\tI\tz eI\tS V n");
result.add("pas-\tteu-\trize", "ph { s\ttS @r\taI z");
result.add("pas-\tteu-\trized", "ph { s\ttS @r\taI z d");
result.add("pas-\tteur", "ph V s\tt u: r");
result.add("pas-\ttiche", "ph { s\tt i: S");
result.add("pas-\ttime", "ph { s\tt aI m");
result.add("pas-\ttimes", "ph { s\tt aI m z");
result.add("pas-\tting", "ph eI s\tt I N");
result.add("pas-\tto-\tra", "ph { s\tt O@\tV");
result.add("pas-\tto-\tra-\tli-\tsm", "ph { s\tt @r\tV\tl I\tz V m");
result.add("pas-\tto-\tral", "ph { s\tt @r\tV l");
result.add("pas-\ttor", "ph { s\tt @r");
result.add("pas-\ttore", "ph { s\tt O@");
result.add("pas-\ttors", "ph { s\tt @r z");
result.add("pas-\ttor's", "ph { s\tt @r z");
result.add("pas-\ttra-\tmi", "ph V s\tt r Q\tm i:");
result.add("pas-\ttries", "ph eI s\tt r i: z");
result.add("pas-\ttry", "ph eI s\tt r i:");
result.add("pas-\tture", "ph { s\ttS @r");
result.add("pas-\ttures", "ph { s\ttS @r z");
result.add("pasch", "ph { s k");
result.add("pash", "ph { S");
result.add("pask", "ph { s k");
result.add("paske", "ph eI s k");
result.add("pasque", "ph { s k");
result.add("pass", "ph { s");
result.add("pass-\tman", "ph { s\tm V n");
result.add("pass-\to-\tver", "ph {\ts @U\tv @r");
result.add("pass-\tport", "ph { s\tp O@ t");
result.add("pass-\tports", "ph { s\tp O@ t s");
result.add("pass-\tword", "ph { s\tw @r d");
result.add("pass-\twords", "ph { s\tw @r d z");
result.add("past", "ph { s t");
result.add("paste", "ph eI s t");
result.add("pastes", "ph eI s t s");
result.add("pasts", "ph { s t s");
result.add("pat", "ph { t");
result.add("pat-\tches", "ph {\ttS V z");
result.add("pat-\tching", "ph {\ttS I N");
result.add("pat-\tchy", "ph {\ttS i:");
result.add("pat-\tman", "ph { t\tm V n");
result.add("pat-\tmore", "ph { t\tm O@");
result.add("pat-\tnode", "ph { t\tn @U d");
result.add("pat-\tri-\tar-\tchal", "ph eI t\tr i:\tQ@\tk V l");
result.add("pat-\tri-\tar-\tchate", "ph eI t\tr i:\tQ@\tk V t");
result.add("pat-\tri-\tar-\tchy", "ph eI t\tr i:\tQ@\tk i:");
result.add("pat-\tri-\tarch", "ph eI t\tr i:\tQ@ k");
result.add("pat-\tri-\tarchs", "ph eI t\tr i:\tQ@ k s");
result.add("pat-\tri-\tarch's", "ph eI t\tr i:\tQ@ k s");
result.add("pat-\tri-\tci-\to", "ph V t\tr I\ts i:\t@U");
result.add("pat-\tri-\tcia", "ph V t\tr I\tS V");
result.add("pat-\tri-\tcian", "ph V t\tr I\tS V n");
result.add("pat-\tri-\tcians", "ph V t\tr I\tS V n z");
result.add("pat-\tri-\tli-\tne-\tal", "ph { t\tr I\tl I\tn i:\tV l");
result.add("pat-\tri-\tmo-\tnial", "ph { t\tr I\tm @U n\tj V l");
result.add("pat-\tri-\tmo-\tny", "ph { t\tr I\tm @U\tn i:");
result.add("pat-\tri-\to-\tti-\tsm", "ph eI t\tr i:\tV\tt I\tz V m");
result.add("pat-\tri-\to-\ttic", "ph eI t\tr i:\tQ\tt I k");
result.add("pat-\tri-\tot", "ph eI t\tr i:\tV t");
result.add("pat-\tri-\tots", "ph eI t\tr i:\tV t s");
result.add("pat-\tri-\tot's", "ph eI t\tr i:\tV t s");
result.add("pat-\tri-\tzi-\to", "ph Q t\tr i:\tz i:\t@U");
result.add("pat-\trice", "ph V t\tr i: s");
result.add("pat-\trick", "ph { t\tr I k");
result.add("pat-\tricks", "ph { t\tr I k s");
result.add("pat-\trick's", "ph { t\tr I k s");
result.add("pat-\tridge", "ph { t\tr I dZ");
result.add("pat-\tris-\ttic", "ph V t\tr I s\tt I k");
result.add("pat-\tro-\tnage", "ph { t\tr V\tn I dZ");
result.add("pat-\tro-\tni-\tzing", "ph eI t\tr V\tn aI\tz I N");
result.add("pat-\tro-\tnize", "ph eI t\tr V\tn aI z");
result.add("pat-\tro-\tnized", "ph eI t\tr V\tn aI z d");
result.add("pat-\tro-\tny-\tmic", "ph { t\tr V\tn I\tm I k");
result.add("pat-\tro-\tnym", "ph { t\tr V\tn I m");
result.add("pat-\trol", "ph V t\tr @U l");
result.add("pat-\trol-\tling", "ph V t\tr @U\tl I N");
result.add("pat-\trol-\tman", "ph V t\tr @U l\tm { n");
result.add("pat-\trol-\tmen", "ph V t\tr @U l\tm e n");
result.add("pat-\trolled", "ph V t\tr @U l d");
result.add("pat-\trols", "ph V t\tr @U l z");
result.add("pat-\trol's", "ph V t\tr @U l z");
result.add("pat-\tron", "ph eI t\tr V n");
result.add("pat-\trons", "ph eI t\tr V n z");
result.add("pat-\tsies", "ph { t\ts i: z");
result.add("pat-\tsy", "ph { t\ts i:");
result.add("pat-\tted", "ph {\tt V d");
result.add("pat-\tten", "ph {\tt V n");
result.add("pat-\tten's", "ph {\tt V n z");
result.add("pat-\tter", "ph {\tt @r");
result.add("pat-\tter-\tson", "ph {\tt @r\ts V n");
result.add("pat-\tter-\tson's", "ph {\tt @r\ts V n z");
result.add("pat-\ttered", "ph {\tt @r d");
result.add("pat-\ttern", "ph {\tt @r n");
result.add("pat-\tterned", "ph {\tt @r n d");
result.add("pat-\tterns", "ph {\tt @r n z");
result.add("pat-\tti", "ph {\tt i:");
result.add("pat-\tti-\tson", "ph {\tt I\ts V n");
result.add("pat-\ttie", "ph {\tt i:");
result.add("pat-\tties", "ph {\tt i: z");
result.add("pat-\ttin", "ph {\tt I n");
result.add("pat-\tting", "ph {\tt I N");
result.add("pat-\tton", "ph {\tt V n");
result.add("pat-\tton's", "ph {\tt V n z");
result.add("pat-\tty", "ph {\tt i:");
result.add("pat-\tty's", "ph {\tt i: z");
result.add("pat-\tzer", "ph eI t\tz @r");
result.add("patch", "ph { tS");
result.add("patch-\twork", "ph { tS\tw @r k");
result.add("patch-\tworks", "ph { tS\tw @r k s");
result.add("patched", "ph { tS t");
result.add("pate", "ph eI t");
result.add("pates", "ph eI t s");
result.add("path", "ph { T");
result.add("path-\tfin-\tder", "ph { T\tf aI n\td @r");
result.add("path-\tway", "ph { T\tw eI");
result.add("path-\tways", "ph { T\tw eI z");
result.add("pathe", "ph { T");
result.add("paths", "ph { D z");
result.add("pats", "ph { t s");
result.add("pat's", "ph { t s");
result.add("patt", "ph { t");
result.add("pau-\tci-\tty", "ph O:\ts I\tt i:");
result.add("pau-\tla", "ph O:\tl V");
result.add("pau-\tlet-\tta", "ph Q\tl e\tt V");
result.add("pau-\tlette", "ph O:\tl e t");
result.add("pau-\tli", "ph O:\tl i:");
result.add("pau-\tli-\tna", "ph O:\tl i:\tn V");
result.add("pau-\tli-\tta", "ph O:\tl i:\tt V");
result.add("pau-\tlin", "ph O:\tl I n");
result.add("pau-\tline", "ph O:\tl i: n");
result.add("pau-\tling", "ph O:\tl I N");
result.add("pau-\tlo", "ph O:\tl @U");
result.add("pau-\tlus", "ph O:\tl V s");
result.add("pau-\tly", "ph O:\tl i:");
result.add("pau-\tper", "ph O:\tp @r");
result.add("pau-\tpers", "ph O:\tp @r z");
result.add("pau-\tses", "ph O:\tz V z");
result.add("pau-\tsing", "ph O:\tz I N");
result.add("paugh", "ph O:");
result.add("paul", "ph O: l");
result.add("paul-\tding", "ph O: l\td I N");
result.add("paul-\tsen", "ph aU l\ts V n");
result.add("paul-\tson", "ph O: l\ts V n");
result.add("paule", "ph O: l");
result.add("paull", "ph O: l");
result.add("pauls", "ph O: l z");
result.add("paul's", "ph O: l z");
result.add("paun-\tchy", "ph O: n\ttS i:");
result.add("paup", "ph O: p");
result.add("pause", "ph O: z");
result.add("paused", "ph O: z d");
result.add("pav-\tlo-\tvi-\tan", "ph { v\tl @U\tv i:\tV n");
result.add("pav-\tlo-\tvich", "ph { v\tl V\tv I tS");
result.add("pav-\tlov", "ph { v\tl Q v");
result.add("pave", "ph eI v");
result.add("pave-\tment", "ph eI v\tm V n t");
result.add("pave-\tments", "ph eI v\tm V n t s");
result.add("paved", "ph eI v d");
result.add("paves", "ph eI v z");
result.add("paw", "ph O:");
result.add("paw-\tling", "ph O:\tl I N");
result.add("paw-\tnee", "ph O:\tn i:");
result.add("paw-\tnees", "ph O:\tn i: z");
result.add("paw-\ttuc-\tket", "ph O:\tt V\tk V t");
result.add("pawn", "ph O: n");
result.add("pawn-\tshop", "ph O: n\tS Q p");
result.add("pawn-\tshops", "ph O: n\tS Q p s");
result.add("pawned", "ph O: n d");
result.add("pawns", "ph O: n z");
result.add("paws", "ph O: z");
result.add("pax", "ph { k s");
result.add("pax-\tton", "ph { k\ts t V n");
result.add("pay", "ph eI");
result.add("pay-\tback", "ph eI\tb { k");
result.add("pay-\tcheck", "ph eI\ttS e k");
result.add("pay-\tchecks", "ph eI\ttS e k s");
result.add("pay-\tday", "ph eI\td eI");
result.add("pay-\ting", "ph eI\tI N");
result.add("pay-\tload", "ph eI\tl @U d");
result.add("pay-\tloads", "ph eI\tl @U d z");
result.add("pay-\tload's", "ph eI\tl @U d z");
result.add("pay-\tment", "ph eI\tm V n t");
result.add("pay-\tments", "ph eI\tm V n t s");
result.add("pay-\toff", "ph eI\tO: f");
result.add("pay-\toffs", "ph eI\tO: f s");
result.add("pay-\tout", "ph eI\taU t");
result.add("pay-\touts", "ph eI\taU t s");
result.add("pay-\troll", "ph eI\tr @U l");
result.add("pay-\trolls", "ph eI\tr @U l z");
result.add("pay-\tson", "ph eI\tz V n");
result.add("pay-\tton", "ph eI\tt V n");
result.add("paye", "ph eI");
result.add("payn-\tter", "ph eI n\tt @r");
result.add("payne", "ph eI n");
result.add("pays", "ph eI z");
result.add("paz", "ph Q z");
result.add("pe-\tcan", "ph i:\tk Q n");
result.add("pe-\tcans", "ph I\tk { n z");
result.add("pe-\tcho-\tra", "ph V\tk O@\tV");
result.add("pe-\tco-\tra", "ph e\tk O@\tV");
result.add("pe-\tcu-\tli-\ta-\tri-\tties", "ph I k\tj u:\tl i:\te@\tI\tt i: z");
result.add("pe-\tcu-\tli-\ta-\tri-\tty", "ph I k\tj u:\tl i:\te@\tI\tt i:");
result.add("pe-\tcu-\tliar-\tly", "ph I k\tj u: l\tj @r\tl i:");
result.add("pe-\tcu-\tni-\ta-\try", "ph e k\tj u:\tn i:\te@\ti:");
result.add("pe-\tda-\tgo-\tgi-\tcal", "ph e\td V\tg Q\tdZ I\tk V l");
result.add("pe-\tda-\tgo-\tgy", "ph e\td V\tg @U\tdZ i:");
result.add("pe-\tda-\tling", "ph e\td V\tl I N");
result.add("pe-\tdal", "ph e\td V l");
result.add("pe-\tdaled", "ph e\td V l d");
result.add("pe-\tdalled", "ph e\td V l d");
result.add("pe-\tdals", "ph e\td V l z");
result.add("pe-\tdan-\ttic", "ph V\td { n\tt I k");
result.add("pe-\tdan-\ttry", "ph e\td V n\tt r i:");
result.add("pe-\tden", "ph e\td V n");
result.add("pe-\tder-\tsen", "ph e\td @r\ts V n");
result.add("pe-\tder-\tson", "ph e\td @r\ts V n");
result.add("pe-\tdes-\ttal", "ph e\td V s\tt V l");
result.add("pe-\tdes-\ttals", "ph e\td V s\tt V l z");
result.add("pe-\tdes-\ttri-\tan", "ph V\td e s\tt r i:\tV n");
result.add("pe-\tdes-\ttri-\tans", "ph V\td e s\tt r i:\tV n z");
result.add("pe-\tdi-\tat-\tri-\tcian", "ph i:\td i:\tV t\tr I\tS V n");
result.add("pe-\tdi-\tat-\tri-\tcians", "ph i:\td i:\tV t\tr I\tS V n z");
result.add("pe-\tdi-\tat-\tric", "ph i:\td i:\t{ t\tr I k");
result.add("pe-\tdi-\tat-\trics", "ph i:\td i:\t{ t\tr I k s");
result.add("pe-\tdi-\tcure", "ph e\td I k\tj @r");
result.add("pe-\tdi-\tgree", "ph e\td I g\tr i:");
result.add("pe-\tdo-\tphi-\tlia", "ph e\td V\tf I l\tj V");
result.add("pe-\tdo-\tphi-\tliac", "ph e\td V\tf I l\tj { k");
result.add("pe-\tdo-\tphi-\tliacs", "ph e\td V\tf I l\tj { k s");
result.add("pe-\tdo-\tphi-\tlic", "ph e\td @U\tf I\tl I k");
result.add("pe-\tdo-\tphile", "ph e\td @U\tf aI l");
result.add("pe-\tdo-\tphiles", "ph e\td @U\tf aI l z");
result.add("pe-\tga-\tsus", "ph e\tg V\ts V s");
result.add("pe-\tjo-\tra-\ttive", "ph V\tdZ O@\tV\tt I v");
result.add("pe-\tkin", "ph i:\tk I n");
result.add("pe-\tking", "ph i:\tk I N");
result.add("pe-\tla-\tgi-\tan", "ph V\tl eI\tdZ i:\tV n");
result.add("pe-\tla-\tgi-\tans", "ph V\tl eI\tdZ i:\tV n z");
result.add("pe-\tla-\tgia", "ph e\tl Q\tdZ V");
result.add("pe-\tla-\tgic", "ph V\tl {\tdZ I k");
result.add("pe-\tle", "ph e\tl eI");
result.add("pe-\tle-\trin", "ph e\tl @r\tI n");
result.add("pe-\tli-\tcan", "ph e\tl I\tk V n");
result.add("pe-\tli-\tcans", "ph e\tl I\tk V n z");
result.add("pe-\tli-\tcan's", "ph e\tl I\tk V n z");
result.add("pe-\tlo-\tpon-\tne-\tsian", "ph e\tl V\tp V\tn i:\tZ V n");
result.add("pe-\tlon", "ph e\tl V n");
result.add("pe-\tna", "ph e\tn V");
result.add("pe-\tna-\tli-\tzes", "ph e\tn V\tl aI\tz V z");
result.add("pe-\tna-\tli-\tzing", "ph i:\tn V\tl aI\tz I N");
result.add("pe-\tna-\tlize", "ph e\tn V\tl aI z");
result.add("pe-\tna-\tlized", "ph i:\tn V\tl aI z d");
result.add("pe-\tnal", "ph i:\tn V l");
result.add("pe-\tnal-\tties", "ph e\tn V l\tt i: z");
result.add("pe-\tnal-\tty", "ph e\tn V l\tt i:");
result.add("pe-\tnance", "ph e\tn V n s");
result.add("pe-\tnang", "ph e\tn { N");
result.add("pe-\tna's", "ph e\tn V z");
result.add("pe-\tne-\tlo-\tpe", "ph V\tn e\tl V\tp i:");
result.add("pe-\tne-\ttra-\tted", "ph e\tn V t\tr eI\tt V d");
result.add("pe-\tne-\ttra-\tting", "ph e\tn V t\tr eI\tt I N");
result.add("pe-\tne-\ttra-\ttion", "ph e\tn V t\tr eI\tS V n");
result.add("pe-\tne-\ttrate", "ph e\tn V t\tr eI t");
result.add("pe-\tne-\ttrates", "ph e\tn V t\tr eI t s");
result.add("pe-\tni-\tcil-\tlin", "ph e\tn I\ts I\tl I n");
result.add("pe-\tni-\tcil-\tlins", "ph e\tn I\ts I\tl I n z");
result.add("pe-\tni-\tses", "ph i:\tn I\ts V z");
result.add("pe-\tni-\tten-\ttia-\tries", "ph e\tn I\tt e n\ttS @r\ti: z");
result.add("pe-\tni-\tten-\ttia-\try", "ph e\tn I\tt e n\ttS @r\ti:");
result.add("pe-\tni-\ttent", "ph e\tn I\tt V n t");
result.add("pe-\tnile", "ph i:\tn aI l");
result.add("pe-\tnin-\tsu-\tla", "ph V\tn I n\ts V\tl V");
result.add("pe-\tnin-\tsu-\tlar", "ph V\tn I n\ts V\tl @r");
result.add("pe-\tnis", "ph i:\tn I s");
result.add("pe-\tno-\tlo-\tgy", "ph i:\tn Q\tl V\tdZ i:");
result.add("pe-\tno-\tyer", "ph e\tn OI\t@r");
result.add("pe-\tnob-\tscot", "ph V\tn Q b\ts k Q t");
result.add("pe-\tnu-\tri-\tous", "ph e n\tj u:\tr i:\tV s");
result.add("pe-\tnu-\try", "ph e n\tj @r\ti:");
result.add("pe-\tnum-\tbra", "ph V\tn V m\tb r V");
result.add("pe-\to-\tnies", "ph i:\tV\tn i: z");
result.add("pe-\to-\tny", "ph i:\tV\tn i:");
result.add("pe-\to-\tri-\ta", "ph i:\tO@\ti:\tV");
result.add("pe-\to-\tri-\ta's", "ph i:\tO@\ti:\tV z");
result.add("pe-\ton", "ph i:\tV n");
result.add("pe-\tons", "ph i:\tV n z");
result.add("pe-\tpe", "ph e\tp i:");
result.add("pe-\tper", "ph e\tp @r");
result.add("pe-\tpi", "ph e\tp i:");
result.add("pe-\tpi-\tta", "ph e\tp i:\tt V");
result.add("pe-\tpin", "ph e\tp I n");
result.add("pe-\tra", "ph @r\tV");
result.add("pe-\tral-\tta", "ph @r\tQ l\tt V");
result.add("pe-\tre-\ta", "ph @r\ti:\tV");
result.add("pe-\tre-\tgrine", "ph e@\tV g\tr i: n");
result.add("pe-\tre-\tgrines", "ph e@\tV g\tr i: n z");
result.add("pe-\tre-\tstroi-\tka", "ph e@\tV s\tt r OI\tk V");
result.add("pe-\trei-\tra", "ph @r\te@\tV");
result.add("pe-\trel-\tman", "ph e@\tV l\tm V n");
result.add("pe-\trel-\tman's", "ph e@\tV l\tm V n z");
result.add("pe-\trem-\tpto-\try", "ph @r\te m\tp t @r\ti:");
result.add("pe-\tren-\tni-\tal", "ph @r\te\tn i:\tV l");
result.add("pe-\tren-\tni-\tal-\tly", "ph @r\te\tn i:\tV\tl i:");
result.add("pe-\tren-\tni-\tals", "ph @r\te\tn i:\tV l z");
result.add("pe-\tres", "ph e@\te z");
result.add("pe-\tretz", "ph @r\te t s");
result.add("pe-\trez", "ph e@\te z");
result.add("pe-\tri-\ta", "ph e@\ti:\tV");
result.add("pe-\tri-\ta's", "ph e@\ti:\tV z");
result.add("pe-\tri-\tlous", "ph e@\tI\tl V s");
result.add("pe-\tri-\tlous-\tly", "ph e@\tI\tl V s\tl i:");
result.add("pe-\tri-\tme-\tter", "ph @r\tI\tm V\tt @r");
result.add("pe-\tri-\tme-\tters", "ph @r\tI\tm V\tt @r z");
result.add("pe-\tri-\tne", "ph @r\ti:\tn i:");
result.add("pe-\tri-\to-\tdi-\tcal", "ph I@\ti:\tQ\td I\tk V l");
result.add("pe-\tri-\to-\tdi-\tcal-\tly", "ph i:\tr i:\tQ\td I\tk V\tl i:");
result.add("pe-\tri-\to-\tdi-\tcals", "ph I@\ti:\tQ\td I\tk V l z");
result.add("pe-\tri-\to-\tdic", "ph I@\ti:\tQ\td I k");
result.add("pe-\tri-\to-\tdon-\ttal", "ph e@\ti:\tV\td Q n\tt V l");
result.add("pe-\tri-\tod", "ph I@\ti:\tV d");
result.add("pe-\tri-\tods", "ph I@\ti:\tV d z");
result.add("pe-\tri-\tod's", "ph I@\ti:\tV d z");
result.add("pe-\tri-\tpa-\tte-\ttic", "ph e@\tI\tp V\tt e\tt I k");
result.add("pe-\tri-\tphe-\tral", "ph @r\tI\tf @r\tV l");
result.add("pe-\tri-\tphe-\tral-\tly", "ph @r\tI\tf @r\tV\tl i:");
result.add("pe-\tri-\tphe-\trals", "ph @r\tI\tf @r\tV l z");
result.add("pe-\tri-\tphe-\try", "ph @r\tI\tf @r\ti:");
result.add("pe-\tri-\tscope", "ph e@\tI s\tk @U p");
result.add("pe-\tri-\tsha-\tble", "ph e@\tI\tS V\tb V l");
result.add("pe-\tril", "ph e@\tI l");
result.add("pe-\trils", "ph e@\tI l z");
result.add("pe-\trish", "ph e@\tI S");
result.add("pe-\trished", "ph e@\tI S t");
result.add("pe-\tro", "ph @r\t@U");
result.add("pe-\tro-\tni-\tsm", "ph e@\tV\tn I\tz V m");
result.add("pe-\tro-\tnist", "ph e@\tV\tn I s t");
result.add("pe-\tro-\tnists", "ph e@\tV\tn I s t s");
result.add("pe-\tro-\txide", "ph @r\tQ k\ts aI d");
result.add("pe-\tron", "ph @r\tO: n");
result.add("pe-\trone", "ph @r\t@U n");
result.add("pe-\trot", "ph @r\t@U");
result.add("pe-\trot's", "ph @r\t@U z");
result.add("pe-\tru", "ph @r\tu:");
result.add("pe-\tru-\tsal", "ph @r\tu:\tz V l");
result.add("pe-\tru's", "ph @r\tu: z");
result.add("pe-\tse-\tta", "ph V\ts eI\tt V");
result.add("pe-\tse-\ttas", "ph V\ts eI\tt V z");
result.add("pe-\tsek", "ph e\ts e k");
result.add("pe-\tsha-\twar", "ph e\tS V\tw O@");
result.add("pe-\tsky", "ph e s\tk i:");
result.add("pe-\tso", "ph eI\ts @U");
result.add("pe-\tsos", "ph eI\ts @U z");
result.add("pe-\tso's", "ph eI\ts @U z");
result.add("pe-\tta", "ph i:\tt V");
result.add("pe-\tta-\tlu-\tma", "ph e\tt V\tl u:\tm V");
result.add("pe-\ttal", "ph e\tt V l");
result.add("pe-\ttals", "ph e\tt V l z");
result.add("pe-\ttard", "ph e\tt @r d");
result.add("pe-\tta's", "ph i:\tt V z");
result.add("pe-\tte-\tring", "ph i:\tt @r\tI N");
result.add("pe-\tter", "ph i:\tt @r");
result.add("pe-\tter-\tbo-\trough", "ph i:\tt @r\tb @r\t@U");
result.add("pe-\tter-\tkin", "ph V\tt @r\tk V n");
result.add("pe-\tter-\tman", "ph i:\tt @r\tm V n");
result.add("pe-\tter-\tmann", "ph i:\tt @r\tm V n");
result.add("pe-\tter-\tsen", "ph i:\tt @r\ts V n");
result.add("pe-\tter-\tsen's", "ph i:\tt @r\ts V n z");
result.add("pe-\tter-\tson", "ph i:\tt @r\ts V n");
result.add("pe-\tter-\tson's", "ph i:\tt @r\ts V n z");
result.add("pe-\ttered", "ph i:\tt @r d");
result.add("pe-\tters", "ph i:\tt @r z");
result.add("pe-\tter's", "ph i:\tt @r z");
result.add("pe-\tters-\tburg", "ph i:\tt @r z\tb @r g");
result.add("pe-\ttey", "ph i:\tt i:");
result.add("pe-\tti-\tpa", "ph e\tt i:\tp V");
result.add("pe-\tti-\tpa's", "ph e\tt i:\tp V z");
result.add("pe-\tti-\ttio-\tner", "ph V\tt I\tS V\tn @r");
result.add("pe-\tti-\ttio-\tners", "ph V\tt I\tS V\tn @r z");
result.add("pe-\tti-\ttio-\tning", "ph V\tt I\tS V\tn I N");
result.add("pe-\tti-\ttion", "ph V\tt I\tS V n");
result.add("pe-\tti-\ttioned", "ph V\tt I\tS V n d");
result.add("pe-\tti-\ttions", "ph V\tt I\tS V n z");
result.add("pe-\ttie", "ph e\tt i:");
result.add("pe-\ttit", "ph e\tt i:");
result.add("pe-\ttite", "ph V\tt i: t");
result.add("pe-\ttites", "ph e\tt i: t s");
result.add("pe-\tto", "ph i:\tt @U");
result.add("pe-\ttre", "ph e\tt @r");
result.add("pe-\ttu-\tlance", "ph e\ttS V\tl V n s");
result.add("pe-\ttu-\tlant", "ph e\ttS V\tl V n t");
result.add("pe-\ttu-\tni-\ta", "ph V\tt u:\tn i:\tV");
result.add("pe-\ttu-\tni-\tas", "ph V\tt u:\tn i:\tV z");
result.add("pea", "ph i:");
result.add("pea-\tbo-\tdy", "ph i:\tb Q\td i:");
result.add("pea-\tbo-\tdy's", "ph i:\tb Q\td i: z");
result.add("pea-\tcea-\tble", "ph i:\ts V\tb V l");
result.add("pea-\tceab-\tly", "ph i:\ts V b\tl i:");
result.add("pea-\tcher", "ph i:\ttS @r");
result.add("pea-\tches", "ph i:\ttS V z");
result.add("pea-\tchy", "ph i:\ttS i:");
result.add("pea-\tcock", "ph i:\tk Q k");
result.add("pea-\tcocks", "ph i:\tk Q k s");
result.add("pea-\tfowl", "ph i:\tf aU l");
result.add("pea-\tking", "ph i:\tk I N");
result.add("pea-\tler", "ph i:\tl @r");
result.add("pea-\tnut", "ph i:\tn V t");
result.add("pea-\tnuts", "ph i:\tn V t s");
result.add("pea-\tpack", "ph i:\tp { k");
result.add("pea-\tpod", "ph i:\tp O: d");
result.add("pea-\try", "ph i:\tr i:");
result.add("pea-\tsant", "ph e\tz V n t");
result.add("pea-\tsant-\try", "ph e\tz V n\tt r i:");
result.add("pea-\tsants", "ph e\tz V n t s");
result.add("pea-\tvey", "ph i:\tv i:");
result.add("pea-\tvy", "ph i:\tv i:");
result.add("peace", "ph i: s");
result.add("peace-\tful", "ph i: s\tf V l");
result.add("peace-\tful-\tly", "ph i: s\tf V\tl i:");
result.add("peace-\tful-\tness", "ph i: s\tf V l\tn V s");
result.add("peace-\tkee-\tper", "ph i: s\tk i:\tp @r");
result.add("peace-\tkee-\tpers", "ph i: s\tk i:\tp @r z");
result.add("peace-\tkee-\tping", "ph i: s\tk i:\tp I N");
result.add("peace-\tma-\tker", "ph i: s\tm eI\tk @r");
result.add("peace-\tma-\tkers", "ph i: s\tm eI\tk @r z");
result.add("peace-\tma-\tker's", "ph i: s\tm eI\tk @r z");
result.add("peace-\tma-\tking", "ph i: s\tm eI\tk I N");
result.add("peace-\ttime", "ph i: s\tt aI m");
result.add("peach", "ph i: tS");
result.add("peach-\ttree", "ph i: tS\tt r i:");
result.add("peak", "ph i: k");
result.add("peake", "ph i: k");
result.add("peaked", "ph i: k t");
result.add("peaks", "ph i: k s");
result.add("peal", "ph i: l");
result.add("peale", "ph i: l");
result.add("pear", "ph e@");
result.add("pear-\tcy", "ph @r\tk i:");
result.add("pear-\tline", "ph @r\tl aI n");
result.add("pear-\tling", "ph @r\tl I N");
result.add("pear-\tly", "ph @r\tl i:");
result.add("pear-\tman", "ph e@\tm V n");
result.add("pear-\tson", "ph I@\ts V n");
result.add("pear-\tson's", "ph I@\ts V n z");
result.add("pearce", "ph I@ s");
result.add("pearl", "ph @r l");
result.add("pearl-\tman", "ph @r l\tm { n");
result.add("pearl-\tstein", "ph @r l\ts t aI n");
result.add("pearle", "ph @r l");
result.add("pearls", "ph @r l z");
result.add("pears", "ph e@ z");
result.add("pearse", "ph @r s");
result.add("peart", "ph @r t");
result.add("peas", "ph i: z");
result.add("pease", "ph i: z");
result.add("peat", "ph i: t");
result.add("peat's", "ph i: t s");
result.add("peb-\tble", "ph e\tb V l");
result.add("peb-\tbles", "ph e\tb V l z");
result.add("pec-\tkham", "ph e\tk V m");
result.add("pec-\tking", "ph e\tk I N");
result.add("pec-\ttic", "ph e k\tt I k");
result.add("pec-\ttin", "ph e k\tt I n");
result.add("pech", "ph e k");
result.add("pecht", "ph e k t");
result.add("peck", "ph e k");
result.add("peck's", "ph e k s");
result.add("ped-\td-\tling", "ph e\td V\tl I N");
result.add("ped-\tdle", "ph e\td V l");
result.add("ped-\tdled", "ph e\td V l d");
result.add("ped-\tdles", "ph e\td V l z");
result.add("ped-\trick", "ph e d\tr I k");
result.add("ped-\tro", "ph eI d\tr @U");
result.add("ped-\tro-\tza", "ph eI d\tr @U\tz V");
result.add("ped-\tros", "ph eI d\tr @U z");
result.add("ped-\trot-\tti", "ph e d\tr @U\tt i:");
result.add("pedd-\tler", "ph e d\tl @r");
result.add("pedd-\tlers", "ph e d\tl @r z");
result.add("pee", "ph i:");
result.add("pee-\tbles", "ph i:\tb V l z");
result.add("pee-\tking", "ph i:\tk I N");
result.add("pee-\tler", "ph i:\tl @r");
result.add("pee-\tling", "ph i:\tl I N");
result.add("pee-\tping", "ph i:\tp I N");
result.add("pee-\trage", "ph I@\tV dZ");
result.add("pee-\tring", "ph i:\tr I N");
result.add("pee-\try", "ph i:\tr i:");
result.add("pee-\tvish", "ph i:\tv I S");
result.add("pee-\twee", "ph i:\tw i:");
result.add("peed", "ph i: d");
result.add("peek", "ph i: k");
result.add("peeked", "ph i: k t");
result.add("peeks", "ph i: k s");
result.add("peel", "ph i: l");
result.add("peele", "ph i: l");
result.add("peeled", "ph i: l d");
result.add("peels", "ph i: l z");
result.add("peens", "ph i: n z");
result.add("peep", "ph i: p");
result.add("peeps", "ph i: p s");
result.add("peer", "ph I@");
result.add("peer-\tless", "ph I@\tl V s");
result.add("peered", "ph I@ d");
result.add("peers", "ph I@ z");
result.add("peetz", "ph i: t s");
result.add("peeve", "ph i: v");
result.add("peeved", "ph i: v d");
result.add("peeves", "ph i: v z");
result.add("peg", "ph e g");
result.add("peg-\tboard", "ph e g\tb O@ d");
result.add("peg-\tboards", "ph e g\tb O@ d z");
result.add("peg-\tgie", "ph e\tg i:");
result.add("peg-\tging", "ph e\tg I N");
result.add("peg-\tgy", "ph e\tg i:");
result.add("peg-\tma-\ttite", "ph e g\tm V\tt aI t");
result.add("peg-\tram", "ph e g\tr { m");
result.add("pegg", "ph e g");
result.add("pegged", "ph e g d");
result.add("peggs", "ph e g z");
result.add("pegs", "ph e g z");
result.add("pei", "ph eI");
result.add("pei-\tser", "ph aI\ts @r");
result.add("peine", "ph i: n");
result.add("peirce", "ph I@ s");
result.add("pel-\tham", "ph e\tl V m");
result.add("pel-\tla", "ph e\tl V");
result.add("pel-\tla-\tgra", "ph V\tl { g\tr V");
result.add("pel-\tle-\tted", "ph e\tl V\tt V d");
result.add("pel-\tle-\ttier", "ph e\tl V\tt I@");
result.add("pel-\tleg-\tri-\tni", "ph e\tl e g\tr i:\tn i:");
result.add("pel-\tler", "ph e\tl @r");
result.add("pel-\tlet", "ph e\tl V t");
result.add("pel-\tlets", "ph e\tl V t s");
result.add("pel-\tted", "ph e l\tt V d");
result.add("pel-\tti-\ter", "ph e l\tt i:\t@r");
result.add("pel-\tton", "ph e l\tt V n");
result.add("pel-\tvic", "ph e l\tv I k");
result.add("pel-\tvis", "ph e l\tv I s");
result.add("pel-\tzer", "ph e l\tz @r");
result.add("pell", "ph e l");
result.add("pell's", "ph e l z");
result.add("pelt", "ph e l t");
result.add("pelts", "ph e l t s");
result.add("peltz", "ph e l t s");
result.add("pem-\tber", "ph e m\tb @r");
result.add("pem-\tber-\tton", "ph e m\tb @r\tt V n");
result.add("pem-\tbi-\tna", "ph e m\tb I\tn V");
result.add("pem-\tbroke", "ph e m\tb r @U k");
result.add("pen", "ph e n");
result.add("pen-\tchant", "ph e n\ttS V n t");
result.add("pen-\tcil", "ph e n\ts I l");
result.add("pen-\tciled", "ph e n\ts I l d");
result.add("pen-\tcils", "ph e n\ts I l z");
result.add("pen-\tdant", "ph e n\td V n t");
result.add("pen-\tder", "ph e n\td @r");
result.add("pen-\tder-\tgast", "ph e n\td @r\tg { s t");
result.add("pen-\tder-\tgrass", "ph e n\td @r g\tr V s");
result.add("pen-\tding", "ph e n\td I N");
result.add("pen-\tdle-\tton", "ph e n\td V l\tt V n");
result.add("pen-\tdu-\tlous", "ph e n\tdZ V\tl V s");
result.add("pen-\tdu-\tlum", "ph e n\tdZ V\tl V m");
result.add("pen-\tfield", "ph e n\tf i: l d");
result.add("pen-\tfold", "ph e n\tf @U l d");
result.add("pen-\tgel-\tly", "ph e N\tg V\tl i:");
result.add("pen-\tgo", "ph e N\tg @U");
result.add("pen-\tguin", "ph e N\tg w I n");
result.add("pen-\tguins", "ph e N\tg w I n z");
result.add("pen-\tland", "ph e n\tl V n d");
result.add("pen-\tman", "ph e n\tm V n");
result.add("pen-\tna", "ph e\tn V");
result.add("pen-\tnant", "ph e\tn V n t");
result.add("pen-\tnants", "ph e\tn V n t s");
result.add("pen-\tne-\tba-\tker", "ph e\tn V\tb eI\tk @r");
result.add("pen-\tnell", "ph e\tn V l");
result.add("pen-\tner", "ph e\tn @r");
result.add("pen-\tney", "ph e\tn i:");
result.add("pen-\tney's", "ph e\tn i: z");
result.add("pen-\tni-\tless", "ph e\tn i:\tl V s");
result.add("pen-\tnie", "ph e\tn i:");
result.add("pen-\tnies", "ph e\tn i: z");
result.add("pen-\tning", "ph e\tn I N");
result.add("pen-\tning-\tton", "ph e\tn I N\tt V n");
result.add("pen-\tnock", "ph e\tn V k");
result.add("pen-\tny", "ph e\tn i:");
result.add("pen-\tny's", "ph e\tn i: z");
result.add("pen-\trod", "ph e n\tr Q d");
result.add("pen-\trod's", "ph e n\tr Q d z");
result.add("pen-\trose", "ph e n\tr @U z");
result.add("pen-\tsa-\tco-\tla", "ph e n\ts V\tk @U\tl V");
result.add("pen-\tsio-\tner", "ph e n\tS V\tn @r");
result.add("pen-\tsio-\tners", "ph e n\tS V\tn @r z");
result.add("pen-\tsion", "ph e n\tS V n");
result.add("pen-\tsions", "ph e n\tS V n z");
result.add("pen-\tsive", "ph e n\ts I v");
result.add("pen-\tta", "ph e n\tt V");
result.add("pen-\tta-\tmi-\tdine", "ph e n\tt {\tm I\td i: n");
result.add("pen-\ttane", "ph e n\tt eI n");
result.add("pen-\ttath-\tlon", "ph e n\tt { T\tl V n");
result.add("pen-\ttax", "ph e n\tt { k s");
result.add("pen-\tte-\tcos-\ttal", "ph e n\tt V\tk O: s\tt V l");
result.add("pen-\tte-\tcost", "ph e n\tt V\tk O: s t");
result.add("pen-\tthe-\ta", "ph e n\tT i:\tV");
result.add("pen-\tti-\tmen-\tto", "ph e n\tt I\tm e n\tt @U");
result.add("pen-\tti-\tum", "ph e n\tt i:\tV m");
result.add("pen-\tti-\tums", "ph e n\tt i:\tV m z");
result.add("pen-\tto-\tthal", "ph e n\tt V\tT Q l");
result.add("pen-\twell", "ph e n\tw e l");
result.add("pen-\tza", "ph e n\tz V");
result.add("pence", "ph e n s");
result.add("peng", "ph e N");
result.add("penh", "ph e n");
result.add("penh's", "ph e n z");
result.add("penn", "ph e n");
result.add("penn-\tsau-\tken", "ph e n\ts O:\tk V n");
result.add("penn-\tsyl-\tva-\tni-\tan", "ph e n\ts V l\tv eI\tn i:\tV n");
result.add("penn-\tsyl-\tva-\tni-\tans", "ph e n\ts V l\tv eI\tn i:\tV n z");
result.add("penn-\tsyl-\tva-\tnia", "ph e n\ts V l\tv eI n\tj V");
result.add("penn-\tsyl-\tva-\tnia's", "ph e n\ts V l\tv eI n\tj V z");
result.add("penn-\tzoil", "ph e n\tz OI l");
result.add("penn-\tzoil's", "ph e n\tz OI l z");
result.add("penned", "ph e n d");
result.add("penns", "ph e n z");
result.add("penn's", "ph e n z");
result.add("pens", "ph e n z");
result.add("pen's", "ph e n z");
result.add("pense", "ph e n s");
result.add("pent", "ph e n t");
result.add("pent-\thouse", "ph e n\tt h aU s");
result.add("pent-\tland", "ph e n\tt l V n d");
result.add("peo-\tple", "ph i:\tp V l");
result.add("peo-\tpled", "ph i:\tp V l d");
result.add("peo-\tples", "ph i:\tp V l z");
result.add("peo-\tple's", "ph i:\tp V l z");
result.add("pep", "ph e p");
result.add("pep-\tcid", "ph e p\ts I d");
result.add("pep-\tpard", "ph e\tp @r d");
result.add("pep-\tpe-\trell", "ph e\tp @r\tV l");
result.add("pep-\tpe-\tridge", "ph e\tp @r\tI dZ");
result.add("pep-\tpe-\tring", "ph e\tp @r\tI N");
result.add("pep-\tpe-\tro-\tni", "ph e\tp @r\t@U\tn i:");
result.add("pep-\tpel", "ph e\tp V l");
result.add("pep-\tper", "ph e\tp @r");
result.add("pep-\tper-\tmint", "ph e\tp @r\tm I n t");
result.add("pep-\tpered", "ph e\tp @r d");
result.add("pep-\tpers", "ph e\tp @r z");
result.add("pep-\tper's", "ph e\tp @r z");
result.add("pep-\tpi", "ph e\tp i:");
result.add("pep-\tpin", "ph e\tp I n");
result.add("pep-\tpy", "ph e\tp i:");
result.add("pep-\tsi", "ph e p\ts i:");
result.add("pep-\tsi-\tco", "ph e p\ts I\tk @U");
result.add("pep-\tsi-\tco's", "ph e p\ts I\tk @U z");
result.add("pep-\tsi's", "ph e p\ts i: z");
result.add("pep-\ttic", "ph e p\tt I k");
result.add("pep-\ttide", "ph e p\tt aI d");
result.add("pep-\ttides", "ph e p\tt aI d z");
result.add("per", "ph @r");
result.add("per-\tce-\tval", "ph @r\ts eI\tv { l");
result.add("per-\tcei-\tving", "ph @r\ts i:\tv I N");
result.add("per-\tceive", "ph @r\ts i: v");
result.add("per-\tceived", "ph @r\ts i: v d");
result.add("per-\tceives", "ph @r\ts i: v z");
result.add("per-\tcen-\tta-\tges", "ph @r\ts e n\tt I\tdZ V z");
result.add("per-\tcen-\ttage", "ph @r\ts e n\tt I dZ");
result.add("per-\tcen-\ttile", "ph @r\ts e n\tt aI l");
result.add("per-\tcen-\ttiles", "ph @r\ts e n\tt aI l z");
result.add("per-\tcent", "ph @r\ts e n t");
result.add("per-\tcents", "ph @r\ts e n t s");
result.add("per-\tcep-\tti-\tble", "ph @r\ts e p\tt I\tb V l");
result.add("per-\tcep-\ttion", "ph @r\ts e p\tS V n");
result.add("per-\tcep-\ttions", "ph @r\ts e p\tS V n z");
result.add("per-\tcep-\ttive", "ph @r\ts e p\tt I v");
result.add("per-\tcep-\ttu-\tal", "ph @r\ts e p\ttS V\tw V l");
result.add("per-\tches", "ph @r\ttS V z");
result.add("per-\tci-\tpi-\tent", "ph @r\ts I\tp i:\tV n t");
result.add("per-\tci-\tval", "ph @r\ts I\tv V l");
result.add("per-\tco-\tla-\tting", "ph @r\tk V\tl eI\tt I N");
result.add("per-\tco-\tla-\ttor", "ph @r\tk V\tl eI\tt @r");
result.add("per-\tco-\tlate", "ph @r\tk V\tl eI t");
result.add("per-\tcu-\tta-\tne-\tous", "ph @r k\tj u:\tt eI\tn i:\tV s");
result.add("per-\tcus-\tsio-\tnist", "ph @r\tk V\tS V\tn I s t");
result.add("per-\tcus-\tsion", "ph @r\tk V\tS V n");
result.add("per-\tcus-\tsive", "ph @r\tk V\ts I v");
result.add("per-\tcy", "ph @r\ts i:");
result.add("per-\tcy's", "ph @r\ts i: z");
result.add("per-\tdi-\tta", "ph @r\td i:\tt V");
result.add("per-\tdue", "ph @r\td u:");
result.add("per-\tfec-\tta", "ph @r\tf e k\tt V");
result.add("per-\tfec-\tted", "ph @r\tf e k\tt V d");
result.add("per-\tfec-\tting", "ph @r\tf e k\tt I N");
result.add("per-\tfec-\ttio-\tni-\tsm", "ph @r\tf e k\tS V\tn I\tz V m");
result.add("per-\tfec-\ttio-\tnist", "ph @r\tf e k\tS V\tn I s t");
result.add("per-\tfec-\ttion", "ph @r\tf e k\tS V n");
result.add("per-\tfect", "ph @r\tf e k t");
result.add("per-\tfect-\tly", "ph @r\tf V k\tt l i:");
result.add("per-\tfi-\tdy", "ph @r\tf I\td i:");
result.add("per-\tfo-\tra-\tted", "ph @r\tf @r\teI\tt V d");
result.add("per-\tfo-\tra-\ttion", "ph @r\tf @r\teI\tS V n");
result.add("per-\tfo-\tra-\ttions", "ph @r\tf @r\teI\tS V n z");
result.add("per-\tfo-\trate", "ph @r\tf @r\teI t");
result.add("per-\tfor-\tman-\tces", "ph @r\tf O@\tm V n\ts V z");
result.add("per-\tfor-\tmance", "ph @r\tf O@\tm V n s");
result.add("per-\tfor-\tmer", "ph @r\tf O@\tm @r");
result.add("per-\tfor-\tmers", "ph @r\tf O@\tm @r z");
result.add("per-\tfor-\tming", "ph @r\tf O@\tm I N");
result.add("per-\tforce", "ph @r\tf O@ s");
result.add("per-\tform", "ph @r\tf O@ m");
result.add("per-\tformed", "ph @r\tf O@ m d");
result.add("per-\tforms", "ph @r\tf O@ m z");
result.add("per-\tfume", "ph @r f\tj u: m");
result.add("per-\tfumed", "ph @r f\tj u: m d");
result.add("per-\tfumes", "ph @r f\tj u: m z");
result.add("per-\tfunc-\tto-\try", "ph @r\tf V N\tk t @r\ti:");
result.add("per-\tga-\tmon", "ph @r\tg V\tm V n");
result.add("per-\tgo-\tla", "ph @r\tg @U\tl V");
result.add("per-\tham", "ph @r\th V m");
result.add("per-\thaps", "ph @r\th { p s");
result.add("per-\tju-\trer", "ph @r\tdZ @r\t@r");
result.add("per-\tju-\tring", "ph @r\tdZ @r\tI N");
result.add("per-\tju-\try", "ph @r\tdZ @r\ti:");
result.add("per-\tjure", "ph @r\tdZ @r");
result.add("per-\tjured", "ph @r\tdZ @r d");
result.add("per-\tkin", "ph @r\tk I n");
result.add("per-\tking", "ph @r\tk I N");
result.add("per-\tkins", "ph @r\tk I n z");
result.add("per-\tky", "ph @r\tk i:");
result.add("per-\tla", "ph @r\tl V");
result.add("per-\tley", "ph @r\tl i:");
result.add("per-\tlis", "ph @r\tl I s");
result.add("per-\tlite", "ph @r\tl aI t");
result.add("per-\tma-\tnence", "ph @r\tm V\tn V n s");
result.add("per-\tma-\tnent", "ph @r\tm V\tn V n t");
result.add("per-\tma-\tnent-\tly", "ph @r\tm V\tn V n\tt l i:");
result.add("per-\tme-\ta-\tbi-\tli-\tty", "ph @r\tm i:\tV\tb I\tl V\tt i:");
result.add("per-\tme-\ta-\tble", "ph @r\tm i:\tV\tb V l");
result.add("per-\tme-\ta-\tted", "ph @r\tm i:\teI\tt V d");
result.add("per-\tme-\ta-\tting", "ph @r\tm i:\teI\tt I N");
result.add("per-\tme-\tate", "ph @r\tm i:\teI t");
result.add("per-\tme-\tates", "ph @r\tm i:\teI t s");
result.add("per-\tmi-\tan", "ph @r\tm i:\tV n");
result.add("per-\tmis-\tsi-\tble", "ph @r\tm I\ts I\tb V l");
result.add("per-\tmis-\tsion", "ph @r\tm I\tS V n");
result.add("per-\tmis-\tsions", "ph @r\tm I\tS V n z");
result.add("per-\tmis-\tsive", "ph @r\tm I\ts I v");
result.add("per-\tmis-\tsive-\tness", "ph @r\tm I\ts I v\tn V s");
result.add("per-\tmit", "ph @r\tm I t");
result.add("per-\tmit-\tted", "ph @r\tm I\tt V d");
result.add("per-\tmit-\tting", "ph @r\tm I\tt I N");
result.add("per-\tmits", "ph @r\tm I t s");
result.add("per-\tmu-\tta-\ttion", "ph @r m\tj u:\tt eI\tS V n");
result.add("per-\tmu-\tta-\ttions", "ph @r m\tj u:\tt eI\tS V n z");
result.add("per-\tmute", "ph @r m\tj u: t");
result.add("per-\tnell", "ph @r\tn V l");
result.add("per-\tni-\tcious", "ph @r\tn I\tS V s");
result.add("per-\tnod", "ph e@\tn @U");
result.add("per-\tnod's", "ph @r\tn Q d z");
result.add("per-\tpe-\ttu-\ta-\tted", "ph @r\tp e\ttS V\tw eI\tt V d");
result.add("per-\tpe-\ttu-\ta-\tting", "ph @r\tp e\ttS V\tw eI\tt I N");
result.add("per-\tpe-\ttu-\ta-\ttion", "ph @r\tp e\ttS V\tw eI\tS V n");
result.add("per-\tpe-\ttu-\tal", "ph @r\tp e\ttS u:\tV l");
result.add("per-\tpe-\ttu-\tal-\tly", "ph @r\tp e\ttS u:\tV\tl i:");
result.add("per-\tpe-\ttu-\tals", "ph @r\tp e\ttS u:\tV l z");
result.add("per-\tpe-\ttu-\tate", "ph @r\tp e\ttS V\tw eI t");
result.add("per-\tpe-\ttu-\tates", "ph @r\tp e\ttS V\tw eI t s");
result.add("per-\tpe-\ttu-\ti-\tty", "ph @r\tp V t\tj u:\tV\tt i:");
result.add("per-\tpen-\tdi-\tcu-\tlar", "ph @r\tp V n\td I k\tj V\tl @r");
result.add("per-\tpet-\tra-\tted", "ph @r\tp V t\tr eI\tt V d");
result.add("per-\tpet-\tra-\tting", "ph @r\tp V t\tr eI\tt I N");
result.add("per-\tpet-\tra-\ttor", "ph @r\tp V t\tr eI\tt @r");
result.add("per-\tpet-\tra-\ttors", "ph @r\tp V t\tr eI\tt @r z");
result.add("per-\tpet-\tra-\ttor's", "ph @r\tp V t\tr eI\tt @r z");
result.add("per-\tpet-\trate", "ph @r\tp V t\tr eI t");
result.add("per-\tple-\txes", "ph @r p\tl e k\ts V z");
result.add("per-\tple-\txi-\tty", "ph @r p\tl e k\ts I\tt i:");
result.add("per-\tple-\txing", "ph @r p\tl e k\ts I N");
result.add("per-\tplex", "ph @r p\tl e k s");
result.add("per-\tplexed", "ph @r p\tl e k s t");
result.add("per-\tqui-\tsite", "ph @r k\tw I\tz I t");
result.add("per-\tqui-\tsites", "ph @r k\tw I\tz I t s");
result.add("per-\trault", "ph e@\tO: l t");
result.add("per-\treault", "ph @r\tr @U");
result.add("per-\tren", "ph @r\tr V n");
result.add("per-\tret", "ph @r\tr e t");
result.add("per-\tret-\tta", "ph @r\tr e\tt V");
result.add("per-\tri", "ph @r\tr i:");
result.add("per-\tri-\ter", "ph e@\ti:\t@r");
result.add("per-\tri-\tne", "ph @r\tr i:\tn i:");
result.add("per-\trin", "ph e@\tI n");
result.add("per-\trins", "ph e@\tI n z");
result.add("per-\tron", "ph e@\tV n");
result.add("per-\try", "ph e@\ti:");
result.add("per-\try-\tman", "ph @r\tr i:\tm V n");
result.add("per-\try's", "ph e@\ti: z");
result.add("per-\tse", "ph @r\ts eI");
result.add("per-\tse-\tcu-\tted", "ph @r\ts V k\tj u:\tt V d");
result.add("per-\tse-\tcu-\tting", "ph @r\ts I k\tj u:\tt I N");
result.add("per-\tse-\tcu-\ttion", "ph @r\ts V k\tj u:\tS V n");
result.add("per-\tse-\tcu-\ttions", "ph @r\ts V k\tj u:\tS V n s");
result.add("per-\tse-\tcu-\ttor", "ph @r\ts V k\tj u:\tt @r");
result.add("per-\tse-\tcu-\ttors", "ph @r\ts V k\tj u:\tt @r z");
result.add("per-\tse-\tcute", "ph @r\ts V k\tj u: t");
result.add("per-\tse-\tpo-\tlis", "ph @r\ts e\tp V\tl V s");
result.add("per-\tse-\tus", "ph @r\ts i:\tV s");
result.add("per-\tse-\tve-\trance", "ph @r\ts V\tv I@\tV n s");
result.add("per-\tse-\tvere", "ph @r\ts V\tv I@");
result.add("per-\tse-\tvered", "ph @r\ts V\tv I@ d");
result.add("per-\tses", "ph @r\ts V z");
result.add("per-\tshing", "ph @r\tS I N");
result.add("per-\tshing's", "ph @r\tS I N z");
result.add("per-\tsi-\tco", "ph @r\ts i:\tk @U");
result.add("per-\tsia", "ph @r\tZ V");
result.add("per-\tsian", "ph @r\tZ V n");
result.add("per-\tsians", "ph @r\tZ V n z");
result.add("per-\tsing", "ph @r\ts I N");
result.add("per-\tsis", "ph @r\ts I s");
result.add("per-\tsis-\tted", "ph @r\ts I s\tt V d");
result.add("per-\tsis-\ttence", "ph @r\ts I s\tt V n s");
result.add("per-\tsis-\ttent", "ph @r\ts I s\tt V n t");
result.add("per-\tsis-\ttent-\tly", "ph @r\ts I s\tt V n\tt l i:");
result.add("per-\tsis-\tting", "ph @r\ts I s\tt I N");
result.add("per-\tsist", "ph @r\ts I s t");
result.add("per-\tsists", "ph @r\ts I s t s");
result.add("per-\tso-\tna", "ph @r\ts @U\tn V");
result.add("per-\tso-\tna-\tble", "ph @r\ts V\tn V\tb V l");
result.add("per-\tso-\tna-\tli-\tties", "ph @r\ts V\tn {\tl V\tt i: z");
result.add("per-\tso-\tna-\tli-\tty", "ph @r\ts V\tn {\tl V\tt i:");
result.add("per-\tso-\tna-\tli-\tza-\ttion", "ph @r\ts V\tn V\tl V\tz eI\tS V n");
result.add("per-\tso-\tna-\tli-\tzes", "ph @r\ts V\tn V\tl aI\tz V z");
result.add("per-\tso-\tna-\tli-\tzing", "ph @r\ts V\tn V\tl aI\tz I N");
result.add("per-\tso-\tna-\tlize", "ph @r\ts V\tn V\tl aI z");
result.add("per-\tso-\tna-\tlized", "ph @r\ts V\tn V\tl aI z d");
result.add("per-\tso-\tnab-\tly", "ph @r\ts V\tn V b\tl i:");
result.add("per-\tso-\tnae", "ph @r\ts @U\tn eI");
result.add("per-\tso-\tnal", "ph @r\ts V\tn V l");
result.add("per-\tso-\tnal-\tly", "ph @r\ts V\tn V\tl i:");
result.add("per-\tso-\tnals", "ph @r\ts V\tn V l z");
result.add("per-\tso-\tni-\tfi-\tca-\ttion", "ph @r\ts Q\tn I\tf I\tk eI\tS V n");
result.add("per-\tso-\tni-\tfied", "ph @r\ts Q\tn I\tf aI d");
result.add("per-\tso-\tni-\tfies", "ph @r\ts Q\tn I\tf aI z");
result.add("per-\tso-\tni-\tfy", "ph @r\ts Q\tn I\tf aI");
result.add("per-\tson", "ph @r\ts V n");
result.add("per-\tson-\tnel", "ph @r\ts V\tn e l");
result.add("per-\tsons", "ph @r\ts V n z");
result.add("per-\tson's", "ph @r\ts V n z");
result.add("per-\tspec-\ttive", "ph @r s\tp e k\tt I v");
result.add("per-\tspec-\ttives", "ph @r s\tp e k\tt I v z");
result.add("per-\tspi-\tra-\ttion", "ph @r s\tp @r\teI\tS V n");
result.add("per-\tsua-\tda-\tble", "ph @r s\tw eI\td V\tb V l");
result.add("per-\tsua-\tded", "ph @r s\tw eI\td V d");
result.add("per-\tsua-\tding", "ph @r s\tw eI\td I N");
result.add("per-\tsua-\tsion", "ph @r s\tw eI\tZ V n");
result.add("per-\tsua-\tsions", "ph @r s\tw eI\tZ V n z");
result.add("per-\tsua-\tsive", "ph @r s\tw eI\ts I v");
result.add("per-\tsua-\tsive-\tly", "ph @r s\tw eI\ts I v\tl i:");
result.add("per-\tsua-\tsive-\tness", "ph @r s\tw eI\ts I v\tn V s");
result.add("per-\tsuade", "ph @r s\tw eI d");
result.add("per-\tsuades", "ph @r s\tw eI d z");
result.add("per-\ttai-\tning", "ph @r\tt eI\tn I N");
result.add("per-\ttain", "ph @r\tt eI n");
result.add("per-\ttained", "ph @r\tt eI n d");
result.add("per-\ttains", "ph @r\tt eI n z");
result.add("per-\tti-\tnent", "ph @r\tt I\tn e n t");
result.add("per-\ttur-\tba-\ttion", "ph @r\tt @r\tb eI\tS V n");
result.add("per-\ttur-\tba-\ttions", "ph @r\tt @r\tb eI\tS V n z");
result.add("per-\tturb", "ph @r\tt @r b");
result.add("per-\tturbed", "ph @r\tt @r b d");
result.add("per-\tturbs", "ph @r\tt @r b z");
result.add("per-\ttus-\tsis", "ph @r\tt V\ts I s");
result.add("per-\tu-\tsing", "ph @r\tu:\tz I N");
result.add("per-\tu-\tvi-\tan", "ph @r\tu:\tv i:\tV n");
result.add("per-\tu-\tvi-\tans", "ph @r\tu:\tv i:\tV n z");
result.add("per-\tus-\tse", "ph @r\tu:\ts i:");
result.add("per-\tuse", "ph @r\tu: z");
result.add("per-\tused", "ph @r\tu: z d");
result.add("per-\tuz-\tzi", "ph @r\tu: t\ts i:");
result.add("per-\tva-\tded", "ph @r\tv eI\td V d");
result.add("per-\tva-\tding", "ph @r\tv eI\td I N");
result.add("per-\tva-\tsive", "ph @r\tv eI\ts I v");
result.add("per-\tva-\tsive-\tness", "ph @r\tv eI\ts I v\tn V s");
result.add("per-\tvade", "ph @r\tv eI d");
result.add("per-\tvades", "ph @r\tv eI d z");
result.add("per-\tver-\tsi-\tty", "ph @r\tv @r\ts I\tt i:");
result.add("per-\tver-\tsion", "ph @r\tv @r\tZ V n");
result.add("per-\tver-\tted", "ph @r\tv @r\tt V d");
result.add("per-\tver-\tting", "ph @r\tv @r\tt I N");
result.add("per-\tverse", "ph @r\tv @r s");
result.add("per-\tverse-\tly", "ph @r\tv @r s\tl i:");
result.add("per-\tvert", "ph @r\tv @r t");
result.add("per-\tverts", "ph @r\tv @r t s");
result.add("perc", "ph @r k");
result.add("perce", "ph @r s");
result.add("perch", "ph @r tS");
result.add("perch-\tlo-\trate", "ph @r k\tl O@\teI t");
result.add("perch-\tlo-\tric", "ph @r k\tl O@\tI k");
result.add("perched", "ph @r tS t");
result.add("pere", "ph @r");
result.add("perk", "ph @r k");
result.add("perked", "ph @r k t");
result.add("perks", "ph @r k s");
result.add("perl", "ph @r l");
result.add("perl-\tman", "ph @r l\tm V n");
result.add("perle", "ph @r l");
result.add("perls", "ph @r l z");
result.add("pers", "ph @r s");
result.add("pers-\tpi-\tring", "ph @r s\tp aI\tr I N");
result.add("pers-\tpire", "ph @r s\tp aI r");
result.add("pers-\tson", "ph @r\ts V n");
result.add("pert", "ph @r t");
result.add("perth", "ph @r T");
result.add("pes-\tsi-\tmi-\tsm", "ph e\ts I\tm I\tz V m");
result.add("pes-\tsi-\tmis-\ttic", "ph e\ts I\tm I s\tt I k");
result.add("pes-\tsi-\tmist", "ph e\ts I\tm V s t");
result.add("pes-\tsi-\tmists", "ph e\ts I\tm I s t s");
result.add("pes-\tta-\tna", "ph e s\tt {\tn V");
result.add("pes-\tte-\tring", "ph e s\tt @r\tI N");
result.add("pes-\tter", "ph e s\tt @r");
result.add("pes-\ttered", "ph e s\tt @r d");
result.add("pes-\tti-\tcide", "ph e s\tt I\ts aI d");
result.add("pes-\tti-\tcides", "ph e s\tt I\ts aI d z");
result.add("pes-\tti-\tlence", "ph e s\tt I\tl V n s");
result.add("pest", "ph e s t");
result.add("pests", "ph e s t s");
result.add("pet", "ph e t");
result.add("pet-\tra", "ph e t\tr V");
result.add("pet-\trac-\tca", "ph e t\tr Q\tk V");
result.add("pet-\trar-\tca", "ph e t\tr Q@\tk V");
result.add("pet-\tras", "ph e t\tr V z");
result.add("pet-\tre-\ta", "ph e t\tr i:\tV");
result.add("pet-\trels", "ph e t\tr V l z");
result.add("pet-\trey", "ph e t\tr i:");
result.add("pet-\tri", "ph e t\tr i:");
result.add("pet-\tri-\tfied", "ph e t\tr I\tf aI d");
result.add("pet-\tri-\tfy", "ph e t\tr I\tf aI");
result.add("pet-\tri-\tna", "ph e t\tr i:\tn V");
result.add("pet-\trick", "ph e t\tr I k");
result.add("pet-\trie", "ph e t\tr i:");
result.add("pet-\trie's", "ph e t\tr i: z");
result.add("pet-\tril-\tlo", "ph e t\tr I\tl @U");
result.add("pet-\tro", "ph e t\tr @U");
result.add("pet-\tro-\tche-\tmi-\tcal", "ph e t\tr @U\tk e\tm I\tk V l");
result.add("pet-\tro-\tche-\tmi-\tcals", "ph e t\tr @U\tk e\tm I\tk V l z");
result.add("pet-\tro-\tdol-\tlar", "ph e t\tr @U\td Q\tl @r");
result.add("pet-\tro-\tdol-\tlars", "ph e t\tr @U\td Q\tl @r z");
result.add("pet-\tro-\tle-\tum", "ph V t\tr @U\tl i:\tV m");
result.add("pet-\tro-\tle-\tum's", "ph V t\tr @U\tl i:\tV m z");
result.add("pet-\tro-\tli-\ta", "ph V t\tr @U\tl i:\tV");
result.add("pet-\tro-\tlo-\tgy", "ph V t\tr Q\tl V\tdZ i:");
result.add("pet-\tro-\tnel-\tla", "ph e t\tr @U\tn e\tl V");
result.add("pet-\tro-\tni-\ta", "ph e t\tr @U\tn i:\tV");
result.add("pet-\tro-\tnil-\tla", "ph e t\tr V\tn I\tl V");
result.add("pet-\tro-\tsa", "ph e t\tr @U\tz V");
result.add("pet-\tro-\tvich", "ph e t\tr V\tv I tS");
result.add("pet-\trol", "ph e t\tr @U l");
result.add("pet-\tros", "ph e t\tr @U z");
result.add("pet-\tta", "ph e\tt V");
result.add("pet-\tted", "ph e\tt V d");
result.add("pet-\tter", "ph e\tt @r");
result.add("pet-\tti", "ph e\tt i:");
result.add("pet-\tti-\tcoat", "ph e\tt i:\tk @U t");
result.add("pet-\tti-\tcoats", "ph e\tt i:\tk @U t s");
result.add("pet-\tti-\tgrew", "ph e\tt I g\tr u:");
result.add("pet-\tti-\tness", "ph e\tt i:\tn V s");
result.add("pet-\tties", "ph e\tt i: z");
result.add("pet-\tting", "ph e\tt I N");
result.add("pet-\ttis", "ph e\tt I s");
result.add("pet-\ttit", "ph e\tt I t");
result.add("pet-\ttus", "ph e\tt V s");
result.add("pet-\tty", "ph e\tt i:");
result.add("pete", "ph i: t");
result.add("pete's", "ph i: t s");
result.add("pets", "ph e t s");
result.add("pet's", "ph e t s");
result.add("peu-\tgeot", "ph j u:\tZ @U");
result.add("pew", "ph j u:");
result.add("pew-\tter", "ph j u:\tt @r");
result.add("pews", "ph j u: z");
result.add("pey-\tton", "ph eI\tt V n");
result.add("pfaff", "f { f");
result.add("pfef-\tfer", "f e\tf @r");
result.add("pfei-\tfer", "f aI\tf @r");
result.add("pfen-\tnig", "f e\tn I g");
result.add("pfen-\tnigs", "f e\tn I g z");
result.add("pfen-\tning", "f e\tn I N");
result.add("pfi-\tster", "f I s\tt @r");
result.add("pfi-\tzer", "f aI\tz @r");
result.add("pfi-\tzer's", "f aI\tz @r z");
result.add("pfund", "f V n d");
result.add("pha-\tgo-\tcyte", "f {\tg V\ts aI t");
result.add("pha-\tgo-\tcytes", "f {\tg V\ts aI t s");
result.add("pha-\tlanx", "f eI\tl { N k s");
result.add("pha-\tra-\to-\tnic", "f e@\tV\tQ\tn I k");
result.add("pha-\traoh", "f e@\t@U");
result.add("pha-\traohs", "f e@\t@U z");
result.add("pha-\tri-\tsa-\ti-\tsm", "f {\tr I\ts eI\tI\tz V m");
result.add("pha-\tro", "f Q@\t@U");
result.add("pha-\troah", "f eI\tr @U");
result.add("pha-\tros", "f e@\t@U z");
result.add("pha-\trynx", "f e@\tI N k s");
result.add("pha-\tseout", "f eI\tz aU t");
result.add("pha-\tses", "f eI\tz V z");
result.add("pha-\tsing", "f eI\tz I N");
result.add("phal-\tlic", "f {\tl I k");
result.add("phan-\tta-\tsm", "f { n\tt {\tz V m");
result.add("phan-\ttas-\tma-\tgo-\tri-\ta", "f { n\tt { z\tm V\tg O@\ti:\tV");
result.add("phan-\ttom", "f { n\tt V m");
result.add("phan-\ttoms", "f { n\tt V m z");
result.add("phar", "f Q@");
result.add("phar-\tma-\tceu-\tti-\tcal", "f Q@\tm V\ts u:\tt I\tk V l");
result.add("phar-\tma-\tceu-\tti-\tcals", "f Q@\tm V\ts u:\tt I\tk V l z");
result.add("phar-\tma-\tcies", "f Q@\tm V\ts i: z");
result.add("phar-\tma-\tcist", "f Q@\tm V\ts V s t");
result.add("phar-\tma-\tcists", "f Q@\tm V\ts V s t s");
result.add("phar-\tma-\tco-\tlo-\tgi-\tcal", "f Q@\tm V\tk V\tl Q\tdZ I\tk V l");
result.add("phar-\tma-\tco-\tlo-\tgist", "f Q@\tm V\tk Q\tl V\tdZ I s t");
result.add("phar-\tma-\tco-\tlo-\tgy", "f Q@\tm V\tk Q\tl V\tdZ i:");
result.add("phar-\tma-\tcy", "f Q@\tm V\ts i:");
result.add("phares", "f e@ z");
result.add("pharr", "f Q@");
result.add("phase", "f eI z");
result.add("phased", "f eI z d");
result.add("phe-\tbe", "f i:\tb i:");
result.add("phe-\tdra", "f e d\tr V");
result.add("phe-\tlan", "f e\tl V n");
result.add("phe-\tnix", "f e\tn I k s");
result.add("phe-\tno-\tlic", "f V\tn Q\tl I k");
result.add("phe-\tno-\tme-\tna", "f V\tn Q\tm V\tn V");
result.add("phe-\tno-\tme-\tnal", "f V\tn Q\tm V\tn V l");
result.add("phe-\tno-\tme-\tnal-\tly", "f V\tn Q\tm V\tn V\tl i:");
result.add("phe-\tno-\tme-\tnon", "f V\tn Q\tm V\tn Q n");
result.add("phe-\tno-\tty-\tpic", "f i:\tn V\tt I\tp I k");
result.add("phe-\tno-\ttype", "f i:\tn V\tt aI p");
result.add("phe-\tno-\ttypes", "f i:\tn V\tt aI p s");
result.add("phe-\tnol", "f i:\tn Q l");
result.add("phe-\tnolph-\ttha-\tlein", "f i:\tn Q l\tf T eI\tl V n");
result.add("phe-\tnom", "f e\tn V m");
result.add("phe-\tro-\tmone", "f e@\tV\tm @U n");
result.add("phe-\tro-\tmones", "f e@\tV\tm @U n z");
result.add("phea-\tsant", "f e\tz V n t");
result.add("phea-\tsants", "f e\tz V n t s");
result.add("phelp-\ts's", "f e l\tp s V z");
result.add("phelps", "f e l p s");
result.add("phew", "f j u:");
result.add("phi", "f aI");
result.add("phi-\tla-\tdel-\tphi-\ta", "f I\tl V\td e l\tf i:\tV");
result.add("phi-\tla-\tdel-\tphi-\tan", "f I\tl V\td e l\tf i:\tV n");
result.add("phi-\tla-\tdel-\tphi-\tans", "f I\tl V\td e l\tf i:\tV n z");
result.add("phi-\tla-\tdel-\tphi-\ta's", "f I\tl V\td e l\tf i:\tV z");
result.add("phi-\tla-\tna", "f V\tl {\tn V");
result.add("phi-\tlan-\tde-\tring", "f aI\tl { n\td @r\tI N");
result.add("phi-\tlanth-\tro-\tpic", "f I\tl V n\tT r Q\tp I k");
result.add("phi-\tlanth-\tro-\tpies", "f V\tl { n\tT r V\tp i: z");
result.add("phi-\tlanth-\tro-\tpist", "f V\tl { n\tT r V\tp V s t");
result.add("phi-\tlanth-\tro-\tpists", "f V\tl { n\tT r V\tp V s t s");
result.add("phi-\tlanth-\tro-\tpy", "f V\tl { n\tT r V\tp i:");
result.add("phi-\tli-\tbert", "f I\tl I\tb @r t");
result.add("phi-\tli-\tna", "f V\tl i:\tn V");
result.add("phi-\tlip", "f I\tl I p");
result.add("phi-\tlip-\tpa", "f I\tl I\tp V");
result.add("phi-\tlip-\tpe", "f I\tl i:\tp eI");
result.add("phi-\tlip-\tpi", "f I\tl I\tp i:");
result.add("phi-\tlip-\tpic", "f I\tl I\tp I k");
result.add("phi-\tlip-\tpine", "f I\tl I s\tt i: n");
result.add("phi-\tlipp", "f I\tl I p");
result.add("phi-\tlip's", "f I\tl I p s");
result.add("phi-\tlis-\ttines", "f I\tl I s\tt i: n z");
result.add("phi-\tllipp", "f I\tl I p");
result.add("phi-\tllippe", "f I\tl I p");
result.add("phi-\tlo", "f i:\tl @U");
result.add("phi-\tlo-\tdend-\tron", "f I\tl V\td e n\td r V n");
result.add("phi-\tlo-\tme-\tla", "f I\tl V\tm i:\tl V");
result.add("phi-\tlo-\tme-\tna", "f I\tl V\tm i:\tn V");
result.add("phi-\tlo-\tso-\tpher", "f V\tl Q\ts V\tf @r");
result.add("phi-\tlo-\tso-\tphers", "f V\tl Q\ts V\tf @r z");
result.add("phi-\tlo-\tso-\tphi-\tcal", "f I\tl V\ts Q\tf I\tk V l");
result.add("phi-\tlo-\tso-\tphi-\tcal-\tly", "f I\tl V\ts Q\tf I\tk V\tl i:");
result.add("phi-\tlo-\tso-\tphic", "f I\tl V\ts Q\tf I k");
result.add("phi-\tlo-\tso-\tphies", "f V\tl Q\ts V\tf i: z");
result.add("phi-\tlo-\tso-\tphy", "f V\tl Q\ts V\tf i:");
result.add("phi-\tne-\tas", "f I\tn i:\tV s");
result.add("phil", "f I l");
result.add("phil-\tbert", "f I l\tb @r t");
result.add("phil-\tbin", "f I l\tb I n");
result.add("phil-\tbrook", "f I l\tb r U k");
result.add("phil-\tby", "f I l\tb i:");
result.add("phil-\thar-\tmo-\tnic", "f I l\th Q@\tm Q\tn I k");
result.add("phil-\tlie", "f I\tl i:");
result.add("phil-\tlies", "f I\tl i: z");
result.add("phil-\tlip", "f I\tl I p");
result.add("phil-\tlip-\tpi", "f V\tl i:\tp i:");
result.add("phil-\tlipe", "f V\tl i: p");
result.add("phil-\tlips", "f I\tl I p s");
result.add("phil-\tlip's", "f I\tl I p s");
result.add("phil-\tlis", "f I\tl I s");
result.add("phil-\tly", "f I\tl i:");
result.add("phil-\tpot", "f I l\tp V t");
result.add("phil's", "f I l z");
result.add("phip-\tpen", "f I\tp V n");
result.add("phipps", "f I p s");
result.add("phle-\tbi-\ttis", "f l V\tb aI\tt I s");
result.add("phlo-\tgo-\tpite", "f l Q\tg V\tp aI t");
result.add("phnom", "f n Q m");
result.add("pho-\tbi-\ta", "f @U\tb i:\tV");
result.add("pho-\tbi-\tas", "f @U\tb i:\tV z");
result.add("pho-\tbic", "f @U\tb I k");
result.add("pho-\tbos", "f @U\tb @U s");
result.add("pho-\tne-\ttic", "f V\tn e\tt I k");
result.add("pho-\tne-\ttical-\tly", "f V\tn e\tt I k\tl i:");
result.add("pho-\tne-\ttics", "f V\tn e\tt I k s");
result.add("pho-\tney", "f @U\tn i:");
result.add("pho-\tnic", "f Q\tn I k");
result.add("pho-\tnics", "f Q\tn I k s");
result.add("pho-\tning", "f @U\tn I N");
result.add("pho-\tno-\tgraph", "f @U\tn V g\tr { f");
result.add("pho-\tny", "f @U\tn i:");
result.add("pho-\tto", "f @U\tt @U");
result.add("pho-\tto-\tche-\tmi-\tcal", "f @U\tt @U\tk e\tm I\tk V l");
result.add("pho-\tto-\tco-\tpi-\ter", "f @U\tt @U\tk Q\tp i:\t@r");
result.add("pho-\tto-\tco-\tpi-\ters", "f @U\tt @U\tk Q\tp i:\t@r z");
result.add("pho-\tto-\tco-\tpied", "f @U\tt @U\tk Q\tp i: d");
result.add("pho-\tto-\tco-\tpies", "f @U\tt @U\tk Q\tp i: z");
result.add("pho-\tto-\tco-\tpy", "f @U\tt @U\tk Q\tp i:");
result.add("pho-\tto-\tco-\tpy-\ting", "f @U\tt @U\tk Q\tp i:\tI N");
result.add("pho-\tto-\tcon-\tduc-\ttive", "f @U\tt @U\tk V n\td V k\tt I v");
result.add("pho-\tto-\tdy-\tna-\tmic", "f @U\tt @U\td aI\tn {\tm I k");
result.add("pho-\tto-\te-\tlect-\tric", "f @U\tt @U\tV\tl e k\tt r I k");
result.add("pho-\tto-\tfi-\tni-\tsher", "f @U\tt @U\tf I\tn I\tS @r");
result.add("pho-\tto-\tfi-\tni-\tshers", "f @U\tt @U\tf I\tn I\tS @r z");
result.add("pho-\tto-\tfi-\tni-\tshing", "f @U\tt @U\tf I\tn I\tS I N");
result.add("pho-\tto-\tge-\tnic", "f @U\tt V\tdZ e\tn I k");
result.add("pho-\tto-\tgra-\tpher", "f V\tt Q g\tr V\tf @r");
result.add("pho-\tto-\tgra-\tphers", "f V\tt Q g\tr V\tf @r z");
result.add("pho-\tto-\tgra-\tpher's", "f V\tt Q g\tr V\tf @r z");
result.add("pho-\tto-\tgra-\tphic", "f @U\tt V g\tr {\tf I k");
result.add("pho-\tto-\tgra-\tphing", "f @U\tt V g\tr {\tf I N");
result.add("pho-\tto-\tgra-\tphy", "f V\tt Q g\tr V\tf i:");
result.add("pho-\tto-\tgraph", "f @U\tt V g\tr { f");
result.add("pho-\tto-\tgraphed", "f @U\tt V g\tr { f t");
result.add("pho-\tto-\tgraphs", "f @U\tt V g\tr { f s");
result.add("pho-\tto-\tjour-\tna-\tlist", "f @U\tt @U\tdZ @r\tn V\tl V s t");
result.add("pho-\tto-\tme-\tter", "f V\tt Q\tm V\tt @r");
result.add("pho-\tto-\tpho-\tre-\tsis", "f @U\tt @U\tf @r\ti:\ts I s");
result.add("pho-\tto-\tref-\trac-\ttive", "f @U\tt @U\tr V f\tr { k\tt I v");
result.add("pho-\tto-\tsyn-\tthe-\tsis", "f @U\tt @U\ts I n\tT V\ts V s");
result.add("pho-\tto-\tta-\txis", "f @U\tt V\tt { k\ts V s");
result.add("pho-\tto-\tvol-\tta-\tic", "f @U\tt V\tv @U l\tt eI\tI k");
result.add("pho-\tto-\tvol-\tta-\tics", "f @U\tt @U\tv @U l\tt eI\tI k s");
result.add("pho-\tton", "f @U\tt Q n");
result.add("pho-\ttons", "f @U\tt Q n z");
result.add("pho-\ttos", "f @U\tt @U z");
result.add("pho-\tto's", "f @U\tt @U z");
result.add("phoe-\tbe", "f i:\tb i:");
result.add("phoe-\tbus", "f i:\tb V s");
result.add("phoe-\tni-\tcia", "f V\tn i:\tS V");
result.add("phoe-\tni-\tcian", "f V\tn i:\tS V n");
result.add("phoe-\tni-\tcians", "f V\tn i:\tS V n z");
result.add("phoe-\tni-\tx's", "f i:\tn I k\ts V z");
result.add("phoe-\tnix", "f i:\tn I k s");
result.add("phone", "f @U n");
result.add("phoned", "f @U n d");
result.add("phones", "f @U n z");
result.add("phone's", "f @U n z");
result.add("phos-\tpha-\ttic", "f Q s\tf {\tt I k");
result.add("phos-\tphate", "f Q s\tf eI t");
result.add("phos-\tphates", "f Q s\tf eI t s");
result.add("phos-\tpho-\tre-\tscence", "f Q s\tf @r\te\ts V n s");
result.add("phos-\tpho-\tric", "f Q s\tf @r\tI k");
result.add("phos-\tpho-\trite", "f Q s\tf @r\taI t");
result.add("phos-\tpho-\trites", "f Q s\tf @r\taI t s");
result.add("phos-\tpho-\trous", "f Q s\tf @r\tV s");
result.add("phos-\tpho-\trus", "f Q s\tf @r\tV s");
result.add("phos-\tphor", "f Q s\tf O@");
result.add("phos-\tphors", "f Q s\tf O@ z");
result.add("phot-\tro-\tnic", "f @U t\tr Q\tn I k");
result.add("phra-\tse-\to-\tlo-\tgy", "f r eI\tz i:\tO:\tl O:\tdZ i:");
result.add("phra-\tses", "f r eI\tz V z");
result.add("phra-\tsing", "f r eI\tz I N");
result.add("phrase", "f r eI z");
result.add("phrased", "f r eI z d");
result.add("phry-\tgi-\tan", "f r I\tdZ i:\tV n");
result.add("phu", "f u:");
result.add("phut", "f V t");
result.add("phy-\tla", "f aI\tl V");
result.add("phy-\tlis", "f aI\tl V s");
result.add("phy-\tlo-\tge-\tny", "f aI\tl Q\tdZ V\tn i:");
result.add("phy-\tlum", "f aI\tl V m");
result.add("phy-\tsi-\tcal", "f I\tz I\tk V l");
result.add("phy-\tsi-\tcal-\tly", "f I\tz I\tk V\tl i:");
result.add("phy-\tsi-\tcals", "f I\tz I\tk V l z");
result.add("phy-\tsi-\tcian", "f V\tz I\tS V n");
result.add("phy-\tsi-\tcians", "f V\tz I\tS V n z");
result.add("phy-\tsi-\tcian's", "f V\tz I\tS V n z");
result.add("phy-\tsi-\tcist", "f I\tz I\ts I s t");
result.add("phy-\tsi-\tcists", "f I\tz I\ts I s t s");
result.add("phy-\tsi-\to", "f I\tz i:\t@U");
result.add("phy-\tsi-\to-\tlo-\tgi-\tcal", "f I\tz i:\tV\tl Q\tdZ I\tk V l");
result.add("phy-\tsi-\to-\tlo-\tgical-\tly", "f I\tz i:\tV\tl Q\tdZ I k\tl i:");
result.add("phy-\tsi-\to-\tlo-\tgist", "f I\tz i:\tQ\tl V\tdZ V s t");
result.add("phy-\tsi-\to-\tlo-\tgy", "f I\tz i:\tQ\tl V\tdZ i:");
result.add("phy-\tsics", "f I\tz I k s");
result.add("phy-\tsique", "f V\tz i: k");
result.add("phy-\tto-\tge-\to-\tgra-\tphy", "f aI\tt @U\tdZ i:\tQ g\tr V\tf i:");
result.add("phy-\tto-\tplank-\tton", "f aI\tt @U p\tl { N\tt V n");
result.add("phyl-\tlis", "f I\tl I s");
result.add("phyl-\tlys", "f I\tl i: z");
result.add("phyle", "f aI l");
result.add("pi", "ph aI");
result.add("pi-\ta", "ph i:\tV");
result.add("pi-\ta-\tget", "ph i:\tV\tZ eI");
result.add("pi-\ta-\tnist", "ph i:\t{\tn I s t");
result.add("pi-\ta-\tnists", "ph i:\t{\tn I s t s");
result.add("pi-\ta-\tnist's", "ph i:\t{\tn I s t s");
result.add("pi-\ta-\tno", "ph i:\t{\tn @U");
result.add("pi-\ta-\tnos", "ph i:\t{\tn @U z");
result.add("pi-\ta-\tno's", "ph i:\t{\tn @U z");
result.add("pi-\tan-\tka", "ph i:\tQ N\tk V");
result.add("pi-\taz-\tza", "ph i:\t{\tz V");
result.add("pi-\tca", "ph aI\tk V");
result.add("pi-\tca-\tro", "ph i:\tk Q@\t@U");
result.add("pi-\tca-\tyune", "ph I\tk i:\tj u: n");
result.add("pi-\tcan-\tte", "ph i:\tk Q n\tt eI");
result.add("pi-\tcard", "ph I\tk Q@ d");
result.add("pi-\tcas", "ph aI\tk V z");
result.add("pi-\tcas-\tso", "ph I\tk Q\ts @U");
result.add("pi-\tcas-\tso's", "ph I\tk Q\ts @U z");
result.add("pi-\tcher", "ph I\ttS @r");
result.add("pi-\tco", "ph i:\tk @U");
result.add("pi-\tcon", "ph I\tk V n");
result.add("pi-\te-\tties", "ph aI\tV\tt i: z");
result.add("pi-\te-\tty", "ph aI\tV\tt i:");
result.add("pi-\tet", "ph aI\tV t");
result.add("pi-\tet-\tro", "ph i:\te t\tr @U");
result.add("pi-\tgeon", "ph I\tdZ V n");
result.add("pi-\tgeon-\thole", "ph I\tdZ V n\th @U l");
result.add("pi-\tgeon-\tholed", "ph I\tdZ V n\th @U l d");
result.add("pi-\tgeons", "ph I\tdZ V n z");
result.add("pi-\tgeon's", "ph I\tdZ V n z");
result.add("pi-\tker", "ph aI\tk @r");
result.add("pi-\tkul", "ph I\tk V l");
result.add("pi-\tla-\ttus", "ph i:\tl eI\tt V s");
result.add("pi-\tlar", "ph aI\tl @r");
result.add("pi-\tlas-\tter", "ph V\tl { s\tt @r");
result.add("pi-\tlas-\tters", "ph V\tl { s\tt @r z");
result.add("pi-\tleup", "ph aI\tl V p");
result.add("pi-\tling", "ph aI\tl I N");
result.add("pi-\tlings", "ph aI\tl I N z");
result.add("pi-\tlo-\tted", "ph aI\tl V\tt V d");
result.add("pi-\tlo-\tting", "ph aI\tl V\tt I N");
result.add("pi-\tlon", "ph i:\tl O: n");
result.add("pi-\tlot", "ph aI\tl V t");
result.add("pi-\tlot-\tless", "ph aI\tl V t\tl V s");
result.add("pi-\tlots", "ph aI\tl V t s");
result.add("pi-\tlot's", "ph aI\tl V t s");
result.add("pi-\tma", "ph i:\tm V");
result.add("pi-\tme-\tson", "ph aI\tm eI\tz Q n");
result.add("pi-\tmen-\ttel", "ph I\tm V n\tt V l");
result.add("pi-\tna", "ph i:\tn V");
result.add("pi-\tna-\ttu-\tbo", "ph I\tn V\tt u:\tb @U");
result.add("pi-\tnard", "ph I\tn @r d");
result.add("pi-\tne-\tal", "ph aI\tn i:\tV l");
result.add("pi-\tne-\tda", "ph i:\tn e\td V");
result.add("pi-\tne-\tro", "ph I\tn e@\t@U");
result.add("pi-\tneap-\tple", "ph aI\tn {\tp V l");
result.add("pi-\tneap-\tples", "ph aI\tn {\tp V l z");
result.add("pi-\tnel-\tli", "ph I\tn e\tl i:");
result.add("pi-\tner", "ph aI\tn @r");
result.add("pi-\tnet-\tta", "ph V\tn e\tt V");
result.add("pi-\tnet-\tta's", "ph V\tn e\tt V z");
result.add("pi-\tnette", "ph I\tn e t");
result.add("pi-\tni", "ph i:\tn i:");
result.add("pi-\tning", "ph aI\tn I N");
result.add("pi-\tnion", "ph I n\tj V n");
result.add("pi-\tno", "ph i:\tn @U");
result.add("pi-\tno-\tchet", "ph I\tn I\tS eI");
result.add("pi-\tno-\tchet's", "ph I\tn I\tS eI z");
result.add("pi-\tno-\tla", "ph V\tn @U\tl V");
result.add("pi-\tnoc-\tchi-\to", "ph V\tn @U\tk i:\t@U");
result.add("pi-\tnot", "ph I\tn V t");
result.add("pi-\tny", "ph aI\tn i:");
result.add("pi-\to", "ph aI\t@U");
result.add("pi-\to-\tnee-\tring", "ph aI\tV\tn I@\tI N");
result.add("pi-\to-\tneer", "ph aI\tV\tn I@");
result.add("pi-\to-\tneered", "ph aI\tV\tn I@ d");
result.add("pi-\to-\tneers", "ph aI\tV\tn I@ z");
result.add("pi-\to-\tneer's", "ph aI\tV\tn I@ z");
result.add("pi-\ton", "ph aI\tQ n");
result.add("pi-\tous", "ph aI\tV s");
result.add("pi-\tous-\tly", "ph aI\tV s\tl i:");
result.add("pi-\tper", "ph aI\tp @r");
result.add("pi-\tquant", "ph i:\tk V n t");
result.add("pi-\tquette", "ph I\tk e t");
result.add("pi-\tra-\tcy", "ph aI\tr V\ts i:");
result.add("pi-\tra-\tted", "ph aI\tr V\tt V d");
result.add("pi-\tra-\tting", "ph aI\tr V\tt I N");
result.add("pi-\tran-\tdel-\tlo", "ph I@\tV n\td e\tl @U");
result.add("pi-\tran-\tha", "ph I@\t{ n\th V");
result.add("pi-\trate", "ph aI\tr V t");
result.add("pi-\trates", "ph aI\tr V t s");
result.add("pi-\trate's", "ph aI\tr V t s");
result.add("pi-\tro", "ph I@\t@U");
result.add("pi-\trog", "ph @r\tQ g");
result.add("pi-\trou-\tette", "ph I@\tu:\te t");
result.add("pi-\trou-\tettes", "ph I@\tu:\te t s");
result.add("pi-\tsa", "ph i:\ts V");
result.add("pi-\tsa-\tno", "ph i:\ts Q\tn @U");
result.add("pi-\tta", "ph i:\tt V");
result.add("pi-\tthy", "ph I\tT i:");
result.add("pi-\tti-\ta-\tble", "ph I\tt i:\tV\tb V l");
result.add("pi-\tti-\tful", "ph I\tt I\tf V l");
result.add("pi-\tti-\tful-\tly", "ph I\tt I\tf V\tl i:");
result.add("pi-\tti-\tless", "ph I\tt i:\tl V s");
result.add("pi-\ttied", "ph I\tt i: d");
result.add("pi-\ttu-\ti-\tta-\try", "ph V\tt u:\tV\tt e@\ti:");
result.add("pi-\tty", "ph I\tt i:");
result.add("pi-\tty-\ting", "ph I\tt i:\tI N");
result.add("pi-\tus", "ph aI\tV s");
result.add("pi-\tvo-\ttal", "ph I\tv V\tt V l");
result.add("pi-\tvo-\tted", "ph I\tv V\tt V d");
result.add("pi-\tvot", "ph I\tv V t");
result.add("pi-\txel", "ph I k\ts V l");
result.add("pi-\txels", "ph I k\ts V l z");
result.add("pi-\txie", "ph I k\ts i:");
result.add("pi-\tzar-\tro", "ph V\tz Q@\t@U");
result.add("pi-\tzazz", "ph V\tz { z");
result.add("pic", "ph I k");
result.add("pic-\tca-\tdil-\tly", "ph I\tk V\td I\tl i:");
result.add("pic-\tco", "ph I\tk @U");
result.add("pic-\tco-\tlo", "ph I\tk V\tl @U");
result.add("pic-\tk-\tler", "ph I\tk V\tl @r");
result.add("pic-\tkar", "ph I\tk Q@");
result.add("pic-\tkard", "ph I\tk Q@ d");
result.add("pic-\tke-\trel", "ph I\tk @r\tV l");
result.add("pic-\tke-\tring", "ph I\tk @r\tI N");
result.add("pic-\tke-\tted", "ph I\tk V\tt V d");
result.add("pic-\tke-\tter", "ph I\tk V\tt @r");
result.add("pic-\tke-\tters", "ph I\tk V\tt @r z");
result.add("pic-\tke-\tting", "ph I\tk V\tt I N");
result.add("pic-\tkel", "ph I\tk V l");
result.add("pic-\tken-\ts's", "ph I\tk V n\tz V z");
result.add("pic-\tkens", "ph I\tk V n z");
result.add("pic-\tker", "ph I\tk @r");
result.add("pic-\tkers", "ph I\tk @r z");
result.add("pic-\tket", "ph I\tk V t");
result.add("pic-\tkets", "ph I\tk V t s");
result.add("pic-\tkett", "ph I\tk e t");
result.add("pic-\tkett's", "ph I\tk e t s");
result.add("pic-\tki-\ter", "ph I\tk i:\t@r");
result.add("pic-\tking", "ph I\tk I N");
result.add("pic-\tkings", "ph I\tk I N z");
result.add("pic-\tkle", "ph I\tk V l");
result.add("pic-\tkled", "ph I\tk V l d");
result.add("pic-\tkles", "ph I\tk V l z");
result.add("pic-\tkup", "ph I\tk V p");
result.add("pic-\tkups", "ph I\tk V p s");
result.add("pic-\tky", "ph I\tk i:");
result.add("pic-\tnic", "ph I k\tn I k");
result.add("pic-\tnics", "ph I k\tn I k s");
result.add("pic-\ttet", "ph I k\tt e t");
result.add("pic-\tto-\tri-\tal", "ph I k\tt O@\ti:\tV l");
result.add("pic-\ttu-\tresque", "ph I k\ttS @r\te s k");
result.add("pic-\ttu-\tring", "ph I k\ttS @r\tI N");
result.add("pic-\tture", "ph I k\ttS @r");
result.add("pic-\ttured", "ph I k\ttS @r d");
result.add("pic-\ttures", "ph I k\ttS @r z");
result.add("pic-\tture's", "ph I k\ttS @r z");
result.add("pick", "ph I k");
result.add("pick-\tford", "ph I k\tf @r d");
result.add("pick-\tling", "ph I k\tl I N");
result.add("pick-\tney", "ph I k\tn i:");
result.add("pick-\tpoc-\tket", "ph I k\tp Q\tk V t");
result.add("pick-\tpoc-\tkets", "ph I k\tp Q\tk V t s");
result.add("pick-\trell", "ph I k\tr V l");
result.add("pick-\tup", "ph I\tk V p");
result.add("pick-\twick", "ph I k\tw I k");
result.add("picked", "ph I k t");
result.add("picks", "ph I k s");
result.add("picts", "ph I k t s");
result.add("pid-\td-\tling", "ph I\td V\tl I N");
result.add("pid-\tdle", "ph I\td V l");
result.add("pid-\tdles", "ph I\td V l z");
result.add("pid-\tdock", "ph I\td V k");
result.add("pid-\tgeon", "ph I d\tdZ I n");
result.add("pie", "ph aI");
result.add("pie-\tbald", "ph aI\tb O: l d");
result.add("pie-\tces", "ph i:\ts V z");
result.add("pie-\tcing", "ph i:\ts I N");
result.add("pie-\trette", "ph I@\te t");
result.add("pie-\tro", "ph i:\tr @U");
result.add("pie-\tter", "ph i:\tt @r");
result.add("pie-\tter-\tma-\tritz-\tburg", "ph i:\tt @r\tm e@\tI t\ts b @r g");
result.add("pie-\tti-\tsm", "ph i:\tt I\tz V m");
result.add("piece", "ph i: s");
result.add("piece-\tmeal", "ph i: s\tm i: l");
result.add("piece-\twork", "ph i: s\tw @r k");
result.add("pieced", "ph i: s t");
result.add("pied", "ph aI d");
result.add("pied-\tmont", "ph i: d\tm Q n t");
result.add("pied-\tmont's", "ph i: d\tm Q n t s");
result.add("pied-\tra", "ph i: d\tr V");
result.add("pier", "ph I@");
result.add("pier-\tce's", "ph I@\ts V z");
result.add("pier-\tcing", "ph I@\ts I N");
result.add("pier-\tcy", "ph I@\tk i:");
result.add("pier-\tpont", "ph I@\tp Q n t");
result.add("pier-\tre", "ph i:\te@");
result.add("pier-\tre-\tpont", "ph I@\teI\tp @U n t");
result.add("pier-\tre's", "ph i:\te@ z");
result.add("pier-\tro", "ph I@\t@U");
result.add("pier-\tron", "ph I@\tO: n");
result.add("pier-\tson", "ph I@\ts V n");
result.add("pierce", "ph I@ s");
result.add("pierced", "ph I@ s t");
result.add("piers", "ph I@ z");
result.add("pies", "ph aI z");
result.add("pig", "ph I g");
result.add("pig-\tgott", "ph I\tg V t");
result.add("pig-\tgy", "ph I\tg i:");
result.add("pig-\tgy-\tbac-\tking", "ph I\tg i:\tb {\tk I N");
result.add("pig-\tgy-\tback", "ph I\tg i:\tb { k");
result.add("pig-\tgy-\tbacked", "ph I\tg i:\tb { k t");
result.add("pig-\tlet", "ph I g\tl V t");
result.add("pig-\tlets", "ph I g\tl V t s");
result.add("pig-\tman", "ph I g\tm V n");
result.add("pig-\tmen-\tta-\ttion", "ph I g\tm V n\tt eI\tS V n");
result.add("pig-\tment", "ph I g\tm V n t");
result.add("pig-\tments", "ph I g\tm V n t s");
result.add("pig-\tmy", "ph I g\tm i:");
result.add("pig-\tskin", "ph I g\ts k I n");
result.add("pigg", "ph I g");
result.add("pigs", "ph I g z");
result.add("pig's", "ph I g z");
result.add("pik", "ph I k");
result.add("pike", "ph aI k");
result.add("pikes", "ph aI k s");
result.add("pil", "ph I l");
result.add("pil-\tcher", "ph I l\ttS @r");
result.add("pil-\tfe-\trage", "ph I l\tf @r\tI dZ");
result.add("pil-\tfe-\tring", "ph I l\tf @r\tI N");
result.add("pil-\tger", "ph I l\tg @r");
result.add("pil-\tgri-\tma-\tges", "ph I l\tg r I\tm I\tdZ V z");
result.add("pil-\tgri-\tmage", "ph I l\tg r I\tm I dZ");
result.add("pil-\tgrim", "ph I l\tg r I m");
result.add("pil-\tgrims", "ph I l\tg r I m z");
result.add("pil-\tgrim's", "ph I l\tg r I m z");
result.add("pil-\tking-\tton", "ph I l\tk I N\tt V n");
result.add("pil-\tla-\tger", "ph I\tl I\tdZ @r");
result.add("pil-\tla-\tgers", "ph I\tl I\tdZ @r z");
result.add("pil-\tla-\tger's", "ph I\tl I\tdZ @r z");
result.add("pil-\tla-\tges", "ph I\tl I\tdZ V z");
result.add("pil-\tla-\tging", "ph I\tl I\tdZ I N");
result.add("pil-\tlage", "ph I\tl I dZ");
result.add("pil-\tlaged", "ph I\tl I dZ d");
result.add("pil-\tlar", "ph I\tl @r");
result.add("pil-\tlared", "ph I\tl @r d");
result.add("pil-\tlars", "ph I\tl @r z");
result.add("pil-\tler", "ph I\tl @r");
result.add("pil-\tling", "ph I\tl I N");
result.add("pil-\tlion", "ph I l\tj V n");
result.add("pil-\tlo-\tried", "ph I\tl @r\ti: d");
result.add("pil-\tlo-\try", "ph I\tl @r\ti:");
result.add("pil-\tlow", "ph I\tl @U");
result.add("pil-\tlows", "ph I\tl @U z");
result.add("pilch", "ph I l tS");
result.add("pile", "ph aI l");
result.add("pile-\tup", "ph aI\tl V p");
result.add("piled", "ph aI l d");
result.add("piles", "ph aI l z");
result.add("pill", "ph I l");
result.add("pills", "ph I l z");
result.add("pill's", "ph I l z");
result.add("pills-\tbu-\try", "ph I l\tz b e@\ti:");
result.add("pills-\tbu-\try's", "ph I l\tz b e@\ti: z");
result.add("pilt-\tdown", "ph I l\tt d aU n");
result.add("pim-\tping", "ph I m\tp I N");
result.add("pim-\tple", "ph I m\tp V l");
result.add("pim-\tples", "ph I m\tp V l z");
result.add("pimp", "ph I m p");
result.add("pimps", "ph I m p s");
result.add("pin", "ph I n");
result.add("pin-\tball", "ph I n\tb O: l");
result.add("pin-\tcer-\tlike", "ph I n\ts @r\tl aI k");
result.add("pin-\tcers", "ph I n\ts @r z");
result.add("pin-\tcher", "ph I n\ttS @r");
result.add("pin-\tchers", "ph I n\ttS @r z");
result.add("pin-\tching", "ph I n\ttS I N");
result.add("pin-\tcus", "ph I N\tk V s");
result.add("pin-\tda-\tric", "ph I n\td {\tr I k");
result.add("pin-\tder", "ph aI n\td @r");
result.add("pin-\tgree", "ph I N\tg r i:");
result.add("pin-\thole", "ph I n\th @U l");
result.add("pin-\tholes", "ph I n\th @U l z");
result.add("pin-\tker", "ph I N\tk @r");
result.add("pin-\tker-\tton", "ph I N\tk @r\tt V n");
result.add("pin-\tker-\tton's", "ph I N\tk @r\tt V n z");
result.add("pin-\tkest", "ph I N\tk I s t");
result.add("pin-\tkie", "ph I N\tk i:");
result.add("pin-\tkish", "ph I N\tk I S");
result.add("pin-\tkos", "ph I N\tk @U z");
result.add("pin-\tky", "ph I N\tk i:");
result.add("pin-\tna-\tcle", "ph I\tn V\tk V l");
result.add("pin-\tna-\tcle's", "ph I\tn I\tk V l z");
result.add("pin-\tner", "ph I\tn @r");
result.add("pin-\tning", "ph I\tn I N");
result.add("pin-\tnock", "ph I\tn V k");
result.add("pin-\tpoin-\tted", "ph I n\tp OI n\tt V d");
result.add("pin-\tpoin-\tting", "ph I n\tp OI n\tt I N");
result.add("pin-\tpoint", "ph I n\tp OI n t");
result.add("pin-\tpoints", "ph I n\tp OI n t s");
result.add("pin-\tprick", "ph I n\tp r I k");
result.add("pin-\tsky", "ph I n\ts k i:");
result.add("pin-\tson", "ph I n\ts V n");
result.add("pin-\tstripe", "ph I n\ts t r aI p");
result.add("pin-\tstriped", "ph I n\ts t r aI p t");
result.add("pin-\tstripes", "ph I n\ts t r aI p s");
result.add("pin-\tta", "ph I n\tt V");
result.add("pin-\tter", "ph aI n\tt @r");
result.add("pin-\tto", "ph I n\tt @U");
result.add("pin-\tzon", "ph I n\tz O: n");
result.add("pinc-\tkard", "ph I N\tk @r d");
result.add("pinch", "ph I n tS");
result.add("pinched", "ph I n tS t");
result.add("pinck-\tney", "ph I N\tk n i:");
result.add("pind-\tling", "ph I n\td l I N");
result.add("pine", "ph aI n");
result.add("pines", "ph aI n z");
result.add("ping", "ph I N");
result.add("ping-\tpong", "ph I N\tp O: N");
result.add("pink", "ph I N k");
result.add("pink-\tham", "ph I N\tk h V m");
result.add("pinks", "ph I N k s");
result.add("pinned", "ph I n d");
result.add("pins", "ph I n z");
result.add("pint", "ph aI n t");
result.add("pint-\tsize", "ph aI n\tt s aI z");
result.add("pint-\tsized", "ph aI n\tt s aI z d");
result.add("pints", "ph aI n t s");
result.add("pip", "ph I p");
result.add("pipe", "ph aI p");
result.add("pipe-\tfi-\tshes", "ph aI p\tf I\tS V z");
result.add("pipe-\tfish", "ph aI p\tf I S");
result.add("pipe-\tline", "ph aI p\tl aI n");
result.add("pipe-\tlines", "ph aI p\tl aI n z");
result.add("pipe-\tline's", "ph aI p\tl aI n z");
result.add("piped", "ph aI p t");
result.add("pips", "ph I p s");
result.add("pique", "ph i: k");
result.add("piqued", "ph i: k t");
result.add("pis-\tca-\tta-\tway", "ph I s\tk {\tt V\tw eI");
result.add("pis-\tces", "ph aI\ts i: z");
result.add("pis-\tta-\tchi-\to", "ph V s\tt {\tS i:\t@U");
result.add("pis-\tta-\tchi-\tos", "ph V s\tt {\tS i:\t@U z");
result.add("pis-\ttil", "ph I s\tt I l");
result.add("pis-\ttol", "ph I s\tt V l");
result.add("pis-\ttole", "ph I s\tt @U l");
result.add("pis-\ttols", "ph I s\tt V l z");
result.add("pis-\tton", "ph I s\tt V n");
result.add("pis-\ttons", "ph I s\tt V n z");
result.add("piss", "ph I s");
result.add("pissed", "ph I s t");
result.add("pit", "ph I t");
result.add("pit-\tcher", "ph I\ttS @r");
result.add("pit-\tchers", "ph I\ttS @r z");
result.add("pit-\tches", "ph I\ttS V z");
result.add("pit-\tching", "ph I\ttS I N");
result.add("pit-\tfall", "ph I t\tf O: l");
result.add("pit-\tfalls", "ph I t\tf O: l z");
result.add("pit-\tkin", "ph I t\tk I n");
result.add("pit-\tman", "ph I t\tm V n");
result.add("pit-\tney", "ph I t\tn i:");
result.add("pit-\ttance", "ph I\tt V n s");
result.add("pit-\ttard", "ph I\tt @r d");
result.add("pit-\tted", "ph I\tt V d");
result.add("pit-\tting", "ph I\tt I N");
result.add("pit-\tzer", "ph I t\tz @r");
result.add("pitch", "ph I tS");
result.add("pitch-\tblende", "ph I tS\tb l e n d");
result.add("pitch-\tford", "ph I tS\tf @r d");
result.add("pitch-\tfork", "ph I tS\tf O@ k");
result.add("pitch-\tforks", "ph I tS\tf O@ k s");
result.add("pitch-\tman", "ph I tS\tm V n");
result.add("pitch-\tmen", "ph I tS\tm e n");
result.add("pitched", "ph I tS t");
result.add("pith", "ph I T");
result.add("pits", "ph I t s");
result.add("pitt", "ph I t");
result.add("pitt-\tman", "ph I t\tm V n");
result.add("pitts", "ph I t s");
result.add("pitt's", "ph I t s");
result.add("pitts-\tbo-\tro", "ph I t\ts b @r\t@U");
result.add("pitts-\tbur-\tgher", "ph I t\ts b @r\tg @r");
result.add("pitts-\tbur-\tghers", "ph I t\ts b @r\tg @r z");
result.add("pitts-\tburg", "ph I t\ts b @r g");
result.add("pitts-\tburgh", "ph I t\ts b @r g");
result.add("pitts-\tburgh's", "ph I t\ts b @r g z");
result.add("pitts-\tfield", "ph I t\ts f i: l d");
result.add("pitts-\tford", "ph I t\ts f @r d");
result.add("pitts-\tton", "ph I t\ts t V n");
result.add("pix", "ph I k s");
result.add("pix-\tley", "ph I k\ts l i:");
result.add("piz-\tza", "ph i: t\ts V");
result.add("piz-\tzas", "ph i: t\ts V z");
result.add("piz-\tza's", "ph i: t\ts V z");
result.add("piz-\tzazz", "ph I\tz { z");
result.add("piz-\tze-\tri-\ta", "ph i: t\ts @r\ti:\tV");
result.add("piz-\tze-\tri-\tas", "ph i: t\ts @r\ti:\tV z");
result.add("pla", "ph l Q");
result.add("pla-\tca-\tting", "ph l eI\tk eI\tt I N");
result.add("pla-\tcard", "ph l {\tk @r d");
result.add("pla-\tcards", "ph l {\tk @r d z");
result.add("pla-\tcate", "ph l eI\tk eI t");
result.add("pla-\tce-\tbo", "ph l V\ts i:\tb @U");
result.add("pla-\tce-\tbos", "ph l V\ts i:\tb @U z");
result.add("pla-\tcen-\tta", "ph l V\ts e n\tt V");
result.add("pla-\tcen-\ttia", "ph l V\ts e n\tS V");
result.add("pla-\tcer", "ph l {\ts @r");
result.add("pla-\tces", "ph l eI\ts V z");
result.add("pla-\tce's", "ph l eI\ts V z");
result.add("pla-\tci-\tda", "ph l Q\ttS i:\td V");
result.add("pla-\tci-\tdo", "ph l Q\ttS I\td @U");
result.add("pla-\tcid", "ph l {\ts I d");
result.add("pla-\tcid-\tly", "ph l {\ts I d\tl i:");
result.add("pla-\tcing", "ph l eI\ts I N");
result.add("pla-\tcoid", "ph l {\tk OI d");
result.add("pla-\tgi-\ta-\trize", "ph l eI\tdZ i:\t@r\taI z");
result.add("pla-\tgi-\ta-\trized", "ph l eI\tdZ i:\t@r\taI z d");
result.add("pla-\tgi-\to-\tclase", "ph l eI\tdZ i:\tV k\tl eI s");
result.add("pla-\tgia-\tri-\tsm", "ph l eI\tdZ @r\tI\tz V m");
result.add("pla-\tguing", "ph l eI\tg I N");
result.add("pla-\tis-\tted", "ph l Q\tV s\tt I d");
result.add("pla-\tna-\tri-\tan", "ph l V\tn e@\ti:\tV n");
result.add("pla-\tnar", "ph l eI\tn @r");
result.add("pla-\tne-\tta-\tri-\tum", "ph l {\tn V\tt e@\ti:\tV m");
result.add("pla-\tne-\tta-\try", "ph l {\tn V\tt e@\ti:");
result.add("pla-\tner", "ph l eI\tn @r");
result.add("pla-\tners", "ph l eI\tn @r z");
result.add("pla-\tnet", "ph l {\tn V t");
result.add("pla-\tnets", "ph l {\tn V t s");
result.add("pla-\tnet's", "ph l {\tn V t s");
result.add("pla-\tno", "ph l eI\tn @U");
result.add("pla-\tta", "ph l Q\tt V");
result.add("pla-\tteau", "ph l {\tt @U");
result.add("pla-\tteau-\ting", "ph l V\tt @U\tI N");
result.add("pla-\tteaued", "ph l {\tt @U d");
result.add("pla-\tted", "ph l eI\tt V d");
result.add("pla-\tten", "ph l {\tt V n");
result.add("pla-\tter", "ph l eI\tt @r");
result.add("pla-\tting", "ph l eI\tt I N");
result.add("pla-\tto", "ph l eI\tt @U");
result.add("pla-\tto-\tnic", "ph l V\tt Q\tn I k");
result.add("pla-\tto-\tnist", "ph l eI\tt V\tn V s t");
result.add("pla-\tto-\tnists", "ph l eI\tt V\tn V s t s");
result.add("pla-\ttoon", "ph l V\tt u: n");
result.add("pla-\ttoons", "ph l V\tt u: n z");
result.add("pla-\tto's", "ph l eI\tt @U z");
result.add("pla-\tty", "ph l eI\tt i:");
result.add("pla-\tty-\tpus", "ph l {\tt V\tp U s");
result.add("pla-\tya", "ph l aI\tV");
result.add("pla-\tyer", "ph l eI\t@r");
result.add("pla-\tyers", "ph l eI\t@r z");
result.add("pla-\tyer's", "ph l eI\t@r z");
result.add("pla-\tza", "ph l Q\tz V");
result.add("pla-\tzas", "ph l Q\tz V z");
result.add("pla-\tza's", "ph l Q\tz V z");
result.add("place", "ph l eI s");
result.add("place-\tment", "ph l eI s\tm V n t");
result.add("place-\tments", "ph l eI s\tm V n t s");
result.add("placed", "ph l eI s t");
result.add("plack", "ph l { k");
result.add("plack's", "ph l { k s");
result.add("plague", "ph l eI g");
result.add("plagued", "ph l eI g d");
result.add("plagues", "ph l eI g z");
result.add("plai-\tner", "ph l eI\tn @r");
result.add("plai-\tsance", "ph l eI\ts V n s");
result.add("plaid", "ph l { d");
result.add("plain", "ph l eI n");
result.add("plain-\tclothes", "ph l eI n\tk l @U z");
result.add("plain-\tfield", "ph l eI n\tf i: l d");
result.add("plain-\tly", "ph l eI n\tl i:");
result.add("plain-\tsong", "ph l eI n\ts O: N");
result.add("plain-\ttiff", "ph l eI n\tt I f");
result.add("plain-\ttiffs", "ph l eI n\tt I f s");
result.add("plain-\ttiff's", "ph l eI n\tt I f s");
result.add("plain-\ttive", "ph l eI n\tt I v");
result.add("plain-\ttive-\tly", "ph l eI n\tt aI v\tl i:");
result.add("plain-\tview", "ph l eI n\tv j u:");
result.add("plaines", "ph l eI n z");
result.add("plains", "ph l eI n z");
result.add("plan", "ph l { n");
result.add("plan-\tking", "ph l { N\tk I N");
result.add("plan-\tner", "ph l {\tn @r");
result.add("plan-\tners", "ph l {\tn @r z");
result.add("plan-\tner's", "ph l {\tn @r z");
result.add("plan-\tning", "ph l {\tn I N");
result.add("plan-\tta-\ttion", "ph l { n\tt eI\tS V n");
result.add("plan-\tta-\ttions", "ph l { n\tt eI\tS V n z");
result.add("plan-\ttain", "ph l { n\tt V n");
result.add("plan-\ttains", "ph l { n\tt V n z");
result.add("plan-\tted", "ph l { n\tt V d");
result.add("plan-\tter", "ph l { n\tt @r");
result.add("plan-\tters", "ph l { n\tt @r z");
result.add("plan-\tting", "ph l { n\tt I N");
result.add("plan-\ttings", "ph l { n\tt I N z");
result.add("planck", "ph l { N k");
result.add("plane", "ph l eI n");
result.add("plane-\tload", "ph l eI n\tl @U d");
result.add("plane-\tloads", "ph l eI n\tl @U d z");
result.add("planed", "ph l eI n d");
result.add("planes", "ph l eI n z");
result.add("plane's", "ph l eI n z");
result.add("plank", "ph l { N k");
result.add("plank-\tto-\tnic", "ph l { N\tk t Q\tn I k");
result.add("plank-\tton", "ph l { N\tk t V n");
result.add("planks", "ph l { N k s");
result.add("planned", "ph l { n d");
result.add("plans", "ph l { n z");
result.add("plan's", "ph l { n z");
result.add("plant", "ph l { n t");
result.add("plant-\tlike", "ph l { n\tt l aI k");
result.add("plante", "ph l { n t");
result.add("plants", "ph l { n t s");
result.add("plant's", "ph l { n t s");
result.add("plaque", "ph l { k");
result.add("plaques", "ph l { k s");
result.add("plas-\tma", "ph l { z\tm V");
result.add("plas-\tmi-\tno-\tgen", "ph l { z\tm I\tn V\tdZ V n");
result.add("plas-\tmo-\tdi-\ta", "ph l { z\tm @U\td i:\tV");
result.add("plas-\tmo-\tdi-\tum", "ph l { z\tm @U\td i:\tV m");
result.add("plas-\tte-\trer", "ph l { s\tt @r\t@r");
result.add("plas-\tte-\tring", "ph l { s\tt @r\tI N");
result.add("plas-\tter", "ph l { s\tt @r");
result.add("plas-\tter-\tboard", "ph l { s\tt @r\tb O@ d");
result.add("plas-\tter-\twork", "ph l { s\tt @r\tw @r k");
result.add("plas-\ttered", "ph l { s\tt @r d");
result.add("plas-\tters", "ph l { s\tt @r z");
result.add("plas-\tti-\tci-\tzer", "ph l { s\tt I\ts aI\tz @r");
result.add("plas-\tti-\tcine", "ph l { s\tt I\ts i: n");
result.add("plas-\ttic", "ph l { s\tt I k");
result.add("plas-\ttics", "ph l { s\tt I k s");
result.add("plass", "ph l { s");
result.add("plat-\tform", "ph l { t\tf O@ m");
result.add("plat-\tforms", "ph l { t\tf O@ m z");
result.add("plat-\tform's", "ph l { t\tf O@ m z");
result.add("plat-\tten", "ph l {\tt V n");
result.add("plat-\tter", "ph l {\tt @r");
result.add("plat-\tters", "ph l {\tt @r z");
result.add("plate", "ph l eI t");
result.add("plate-\tlet", "ph l eI t\tl V t");
result.add("plate-\tlets", "ph l eI t\tl V t s");
result.add("plate-\tlike", "ph l eI t\tl aI k");
result.add("plates", "ph l eI t s");
result.add("plath", "ph l { T");
result.add("platt", "ph l { t");
result.add("platte", "ph l { t");
result.add("plau-\tdit", "ph l O:\td I t");
result.add("plau-\tdits", "ph l O:\td I t s");
result.add("plau-\tsi-\tbi-\tli-\tty", "ph l O:\tz I\tb I\tl I\tt i:");
result.add("plau-\tsi-\tble", "ph l O:\tz I\tb V l");
result.add("plau-\tsib-\tly", "ph l O:\tz I b\tl i:");
result.add("play", "ph l eI");
result.add("play-\tback", "ph l eI\tb { k");
result.add("play-\tbook", "ph l eI\tb U k");
result.add("play-\tboy", "ph l eI\tb OI");
result.add("play-\tboy's", "ph l eI\tb OI z");
result.add("play-\tful", "ph l eI\tf V l");
result.add("play-\tful-\tly", "ph l eI\tf V\tl i:");
result.add("play-\tful-\tness", "ph l eI\tf V l\tn V s");
result.add("play-\tground", "ph l eI g\tr aU n d");
result.add("play-\tgrounds", "ph l eI g\tr aU n d z");
result.add("play-\thouse", "ph l eI\th aU s");
result.add("play-\ting", "ph l eI\tI N");
result.add("play-\tmate", "ph l eI\tm eI t");
result.add("play-\tmates", "ph l eI\tm eI t s");
result.add("play-\toff", "ph l eI\tO: f");
result.add("play-\toffs", "ph l eI\tO: f s");
result.add("play-\tpen", "ph l eI\tp e n");
result.add("play-\troom", "ph l eI\tr u: m");
result.add("play-\tsta-\ttion", "ph l eI s\tt eI\tS V n");
result.add("play-\ttex", "ph l eI\tt e k s");
result.add("play-\tthing", "ph l eI\tT I N");
result.add("play-\tthings", "ph l eI\tT I N z");
result.add("play-\twright", "ph l eI\tr aI t");
result.add("play-\twrights", "ph l eI\tr aI t s");
result.add("played", "ph l eI d");
result.add("plays", "ph l eI z");
result.add("ple-\tbei-\tan", "ph l V\tb i:\tV n");
result.add("ple-\tbei-\tans", "ph l V\tb i:\tV n z");
result.add("ple-\tbis-\tcite", "ph l e\tb I\ts aI t");
result.add("ple-\tna-\try", "ph l e\tn @r\ti:");
result.add("ple-\tnum", "ph l e\tn V m");
result.add("ple-\tnum's", "ph l e\tn V m z");
result.add("ple-\ttho-\tra", "ph l e\tT @r\tV");
result.add("ple-\txi-\tglas", "ph l e k\ts I g\tl { s");
result.add("ple-\txi-\tglass", "ph l e k\ts I g\tl { s");
result.add("ple-\txus", "ph l e k\ts V s");
result.add("plea", "ph l i:");
result.add("plea-\tded", "ph l i:\td V d");
result.add("plea-\tding", "ph l i:\td I N");
result.add("plea-\tdings", "ph l i:\td I N z");
result.add("plea-\tsan-\tton", "ph l e\tz V n\tt V n");
result.add("plea-\tsant", "ph l e\tz V n t");
result.add("plea-\tsant-\tly", "ph l e\tz V n\tt l i:");
result.add("plea-\tsant-\tries", "ph l e\tz V n\tt r i: z");
result.add("plea-\tsant-\try", "ph l e\tz V n\tt r i:");
result.add("plea-\tsant-\tville", "ph l e\tz V n\tt v I l");
result.add("plea-\tsants", "ph l e\tz V n t s");
result.add("plea-\tser", "ph l i:\tz @r");
result.add("plea-\tses", "ph l i:\tz V z");
result.add("plea-\tsing", "ph l i:\tz I N");
result.add("plea-\tsing-\tly", "ph l i:\tz I N\tl i:");
result.add("plea-\tsu-\tra-\tble", "ph l e\tZ @r\tV\tb V l");
result.add("plea-\tsure", "ph l e\tZ @r");
result.add("plea-\tsures", "ph l e\tZ @r z");
result.add("plead", "ph l i: d");
result.add("pleads", "ph l i: d z");
result.add("pleas", "ph l i: z");
result.add("please", "ph l i: z");
result.add("pleased", "ph l i: z d");
result.add("pleat", "ph l i: t");
result.add("pleats", "ph l i: t s");
result.add("pled", "ph l e d");
result.add("pled-\tger", "ph l e\tdZ @r");
result.add("pled-\tges", "ph l e\tdZ V z");
result.add("pled-\tging", "ph l e\tdZ I N");
result.add("pledge", "ph l e dZ");
result.add("pledged", "ph l e dZ d");
result.add("plei-\ta-\tdes", "ph l i:\tV\td i: z");
result.add("plei-\tad", "ph l i:\tV d");
result.add("plei-\tads", "ph l i:\tV d z");
result.add("plei-\tsto-\tcene", "ph l aI s\tt V\ts i: n");
result.add("plein", "ph l i: n");
result.add("plen-\tti-\tful", "ph l e n\tt I\tf V l");
result.add("plen-\tty", "ph l e n\tt i:");
result.add("ples-\tsis", "ph l e\ts I s");
result.add("pleu-\tri-\tsy", "ph l U@\tI\ts i:");
result.add("plew", "ph l u:");
result.add("plex", "ph l e k s");
result.add("pli-\ta-\tble", "ph l aI\tV\tb V l");
result.add("pli-\tant", "ph l aI\tV n t");
result.add("pli-\ter", "ph l aI\t@r");
result.add("pli-\ters", "ph l aI\t@r z");
result.add("pli-\tni-\tus", "ph l I\tn i:\tV s");
result.add("pli-\tny", "ph l I\tn i:");
result.add("pli-\to-\tcene", "ph l aI\tV\ts i: n");
result.add("plied", "ph l aI d");
result.add("plies", "ph l aI z");
result.add("plight", "ph l aI t");
result.add("plin-\tking", "ph l I N\tk I N");
result.add("plink", "ph l I N k");
result.add("plinth", "ph l I n T");
result.add("plo-\tvers", "ph l V\tv @r z");
result.add("plo-\twing", "ph l aU\tI N");
result.add("ploch", "ph l Q k");
result.add("plock", "ph l Q k");
result.add("plod", "ph l Q d");
result.add("plod-\tded", "ph l Q\td V d");
result.add("plod-\tding", "ph l Q\td I N");
result.add("plop", "ph l Q p");
result.add("plopped", "ph l Q p t");
result.add("ploss", "ph l O: s");
result.add("plot", "ph l Q t");
result.add("plot-\tkin", "ph l Q t\tk I n");
result.add("plot-\tted", "ph l Q\tt V d");
result.add("plot-\tter", "ph l Q\tt @r");
result.add("plot-\tters", "ph l Q\tt @r z");
result.add("plot-\tting", "ph l Q\tt I N");
result.add("plots", "ph l Q t s");
result.add("plott", "ph l Q t");
result.add("plotz", "ph l Q t s");
result.add("plough", "ph l aU");
result.add("ploughed", "ph l aU d");
result.add("plow", "ph l aU");
result.add("plow-\tman", "ph l aU\tm V n");
result.add("plow-\tman's", "ph l aU\tm V n z");
result.add("plow-\tright", "ph l aU\tr aI t");
result.add("plow-\tshare", "ph l aU\tS eI r");
result.add("plow-\tshares", "ph l aU\tS eI r z");
result.add("plowed", "ph l aU d");
result.add("plows", "ph l aU z");
result.add("ploy", "ph l OI");
result.add("ploys", "ph l OI z");
result.add("plu-\tma-\tges", "ph l u:\tm V\tdZ V z");
result.add("plu-\tmage", "ph l u:\tm V dZ");
result.add("plu-\tmer", "ph l u:\tm @r");
result.add("plu-\tra-\tli-\tsm", "ph l U@\tV\tl I\tz V m");
result.add("plu-\tra-\tli-\tty", "ph l @r\t{\tl I\tt i:");
result.add("plu-\tra-\tlis-\ttic", "ph l U@\tV\tl I s\tt I k");
result.add("plu-\tral", "ph l U@\tV l");
result.add("plu-\tri-\tbus", "ph l U@\tI\tb V s");
result.add("plu-\tses", "ph l V\ts V z");
result.add("plu-\tto", "ph l u:\tt @U");
result.add("plu-\tto-\tni-\tan", "ph l u:\tt @U\tn i:\tV n");
result.add("plu-\tto-\tni-\tum", "ph l u:\tt @U\tn i:\tV m");
result.add("plu-\tto-\tnic", "ph l u:\tt Q\tn I k");
result.add("plu-\ttoc-\trat", "ph l u:\tt V k\tr { t");
result.add("plu-\ttoc-\trats", "ph l u:\tt V k\tr { t s");
result.add("plu-\tto's", "ph l u:\tt @U z");
result.add("plu-\tvi-\tal", "ph l u:\tv i:\tV l");
result.add("pluc-\tker", "ph l V\tk @r");
result.add("pluc-\tking", "ph l V\tk I N");
result.add("pluc-\tky", "ph l V\tk i:");
result.add("pluck", "ph l V k");
result.add("plucked", "ph l V k t");
result.add("plucks", "ph l V k s");
result.add("pluff", "ph l V f");
result.add("plug", "ph l V g");
result.add("plug-\tging", "ph l V\tg I N");
result.add("plugged", "ph l V g d");
result.add("plugs", "ph l V g z");
result.add("plum", "ph l V m");
result.add("plum-\tber", "ph l V\tm @r");
result.add("plum-\tbers", "ph l V\tm @r z");
result.add("plum-\tbing", "ph l V\tm I N");
result.add("plum-\tme-\tted", "ph l V\tm V\tt V d");
result.add("plum-\tme-\tting", "ph l V\tm V\tt I N");
result.add("plum-\tmer", "ph l V\tm @r");
result.add("plum-\tmet", "ph l V\tm V t");
result.add("plum-\tmets", "ph l V\tm V t s");
result.add("plumb", "ph l V m");
result.add("plumbed", "ph l V m d");
result.add("plume", "ph l u: m");
result.add("plumes", "ph l u: m z");
result.add("plump", "ph l V m p");
result.add("plumped", "ph l V m p t");
result.add("plums", "ph l V m z");
result.add("plum's", "ph l V m z");
result.add("plun-\tde-\tring", "ph l V n\td @r\tI N");
result.add("plun-\tder", "ph l V n\td @r");
result.add("plun-\tdered", "ph l V n\td @r d");
result.add("plun-\tger", "ph l V n\tdZ @r");
result.add("plun-\tger's", "ph l V n\tdZ @r z");
result.add("plun-\tges", "ph l V n\tdZ V z");
result.add("plun-\tging", "ph l V n\tdZ I N");
result.add("plun-\tker", "ph l V N\tk @r");
result.add("plun-\tkers", "ph l V N\tk @r z");
result.add("plun-\tkett", "ph l V N\tk e t");
result.add("plun-\tking", "ph l V N\tk I N");
result.add("plunge", "ph l V n dZ");
result.add("plunged", "ph l V n dZ d");
result.add("plunk", "ph l V N k");
result.add("plunked", "ph l V N k t");
result.add("plus", "ph l V s");
result.add("plush", "ph l V S");
result.add("ply", "ph l aI");
result.add("ply-\ting", "ph l aI\tI N");
result.add("ply-\tmouth", "ph l I\tm V T");
result.add("ply-\tmouth's", "ph l I\tm V T s");
result.add("ply-\twood", "ph l aI\tw U d");
result.add("plymp-\tton", "ph l I m\tp t V n");
result.add("pneu-\tma-\ttic", "n u:\tm {\tt I k");
result.add("pneu-\tma-\ttics", "n U\tm {\tt I k s");
result.add("pneu-\tmo-\tcys-\ttis", "n u:\tm @U\ts I s\tt I s");
result.add("pneu-\tmo-\tnia", "n u:\tm @U n\tj V");
result.add("pneu-\tmo-\tnic", "n u:\tm Q\tn I k");
result.add("po", "ph @U");
result.add("po-\tco", "ph @U\tk @U");
result.add("po-\tco-\tno", "ph @U\tk V\tn @U");
result.add("po-\tco-\tnos", "ph @U\tk V\tn @U z");
result.add("po-\tcus", "ph @U\tk V s");
result.add("po-\tdes-\tta", "ph @U\td e s\tt V");
result.add("po-\tdi-\tat-\trist", "ph V\td aI\tV t\tr I s t");
result.add("po-\tdi-\tum", "ph @U\td i:\tV m");
result.add("po-\tdi-\tums", "ph @U\td i:\tV m z");
result.add("po-\tdunk", "ph @U\tt V N k");
result.add("po-\te-\ttic", "ph @U\te\tt I k");
result.add("po-\te-\ttical-\tly", "ph @U\te\tt I k\tl i:");
result.add("po-\te-\ttry", "ph @U\tV t\tr i:");
result.add("po-\tem", "ph @U\tV m");
result.add("po-\tems", "ph @U\tV m z");
result.add("po-\tet", "ph @U\tV t");
result.add("po-\tets", "ph @U\tV t s");
result.add("po-\tet's", "ph @U\tV t s");
result.add("po-\tgo", "ph @U\tg @U");
result.add("po-\thang", "ph @U\th { N");
result.add("po-\tker", "ph @U\tk @r");
result.add("po-\tkey", "ph @U\tk i:");
result.add("po-\tking", "ph @U\tk I N");
result.add("po-\tkor-\tny", "ph V\tk O@\tn i:");
result.add("po-\tky", "ph @U\tk i:");
result.add("po-\tla-\tri-\tme-\tter", "ph @U\tl @r\tI\tm V\tt @r");
result.add("po-\tla-\tri-\tty", "ph @U\tl e@\tI\tt i:");
result.add("po-\tla-\tri-\tza-\ttion", "ph @U\tl @r\tV\tz eI\tS V n");
result.add("po-\tla-\tri-\tzer", "ph @U\tl @r\taI\tz @r");
result.add("po-\tla-\tri-\tzes", "ph @U\tl @r\taI\tz V z");
result.add("po-\tla-\tri-\tzing", "ph @U\tl @r\taI\tz I N");
result.add("po-\tla-\tris", "ph @U\tl e@\tI s");
result.add("po-\tla-\tris-\tcope", "ph @U\tl e@\tI s\tk @U p");
result.add("po-\tla-\trize", "ph @U\tl @r\taI z");
result.add("po-\tla-\trized", "ph @U\tl @r\taI z d");
result.add("po-\tla-\tro-\tgra-\tphy", "ph @U\tl @r\tQ g\tr V\tf i:");
result.add("po-\tla-\troid", "ph @U\tl @r\tOI d");
result.add("po-\tla-\troids", "ph @U\tl @r\tOI d z");
result.add("po-\tla-\troid's", "ph @U\tl @r\tOI d z");
result.add("po-\tlack", "ph @U\tl { k");
result.add("po-\tlak", "ph @U\tl V k");
result.add("po-\tlan-\tski", "ph V\tl { n\ts k i:");
result.add("po-\tland", "ph @U\tl V n d");
result.add("po-\tland's", "ph @U\tl V n d z");
result.add("po-\tlar", "ph @U\tl @r");
result.add("po-\tle-\tmi-\tcal", "ph V\tl e\tm V\tk V l");
result.add("po-\tle-\tmi-\tcist", "ph V\tl e\tm V\ts V s t");
result.add("po-\tle-\tmic", "ph V\tl e\tm I k");
result.add("po-\tle-\tmics", "ph @U\tl e\tm I k s");
result.add("po-\tley", "ph @U\tl i:");
result.add("po-\tli", "ph @U\tl i:");
result.add("po-\tli-\tces", "ph V\tl i:\ts V z");
result.add("po-\tli-\tce's", "ph V\tl i:\ts V z");
result.add("po-\tli-\tcies", "ph Q\tl I\ts i: z");
result.add("po-\tli-\tcing", "ph V\tl i:\ts I N");
result.add("po-\tli-\tcy", "ph Q\tl I\ts i:");
result.add("po-\tli-\tcy-\thol-\tder", "ph Q\tl I\ts i:\th @U l\td @r");
result.add("po-\tli-\tcy-\thol-\tders", "ph Q\tl I\ts i:\th @U l\td @r z");
result.add("po-\tli-\tcy-\thol-\tder's", "ph Q\tl I\ts i:\th @U l\td @r z");
result.add("po-\tli-\tcy-\tma-\tker", "ph Q\tl I\ts i:\tm eI\tk @r");
result.add("po-\tli-\tcy-\tma-\tkers", "ph Q\tl I\ts i:\tm eI\tk @r z");
result.add("po-\tli-\tcy-\tma-\tking", "ph Q\tl I\ts i:\tm eI\tk I N");
result.add("po-\tli-\tcy's", "ph Q\tl I\ts i: z");
result.add("po-\tli-\to", "ph @U\tl i:\t@U");
result.add("po-\tli-\tshing", "ph Q\tl I\tS I N");
result.add("po-\tli-\tti", "ph @U\tl i:\tt i:");
result.add("po-\tli-\tti-\tcal", "ph V\tl I\tt I\tk V l");
result.add("po-\tli-\tti-\tcal-\tly", "ph V\tl I\tt I\tk V\tl i:");
result.add("po-\tli-\tti-\tci-\tza-\ttion", "ph V\tl I\tt I\ts V\tz eI\tS V n");
result.add("po-\tli-\tti-\tci-\tzing", "ph V\tl I\tt I\ts aI\tz I N");
result.add("po-\tli-\tti-\tcian", "ph Q\tl I\tt I\tS V n");
result.add("po-\tli-\tti-\tcians", "ph Q\tl I\tt I\tS V n z");
result.add("po-\tli-\tti-\tcian's", "ph Q\tl I\tt I\tS V n z");
result.add("po-\tli-\tti-\tcize", "ph V\tl I\tt I\ts aI z");
result.add("po-\tli-\tti-\tcized", "ph V\tl I\tt I\ts aI z d");
result.add("po-\tli-\tti-\tco", "ph V\tl I\tt I\tk @U");
result.add("po-\tli-\tti-\tcos", "ph V\tl I\tt I\tk @U z");
result.add("po-\tli-\ttic", "ph Q\tl I\tt I k");
result.add("po-\tli-\ttic-\tking", "ph Q\tl I\tt I\tk I N");
result.add("po-\tli-\ttics", "ph Q\tl I\tt I k s");
result.add("po-\tli-\tto", "ph @U\tl i:\tt @U");
result.add("po-\tli-\tty", "ph Q\tl I\tt i:");
result.add("po-\tlice", "ph V\tl i: s");
result.add("po-\tlice-\tman", "ph V\tl i: s\tm V n");
result.add("po-\tlice-\tman's", "ph V\tl i: s\tm V n z");
result.add("po-\tlice-\tmen", "ph V\tl i: s\tm e n");
result.add("po-\tlice-\two-\tman", "ph V\tl i: s\tw U\tm V n");
result.add("po-\tlice-\two-\tmen", "ph V\tl i: s\tw I\tm e n");
result.add("po-\tliced", "ph V\tl i: s t");
result.add("po-\tlin-\tski", "ph V\tl I n\ts k i:");
result.add("po-\tling", "ph @U\tl I N");
result.add("po-\tlis", "ph @U\tl I s");
result.add("po-\tlish", "ph Q\tl I S");
result.add("po-\tlished", "ph Q\tl I S t");
result.add("po-\tlit-\tbu-\tro", "ph Q\tl I t\tb j U@\t@U");
result.add("po-\tlit-\tbu-\tro's", "ph Q\tl I t\tb j U@\t@U z");
result.add("po-\tlite", "ph V\tl aI t");
result.add("po-\tlite-\tly", "ph V\tl aI t\tl i:");
result.add("po-\tlite-\tness", "ph V\tl aI t\tn V s");
result.add("po-\tlo", "ph @U\tl @U");
result.add("po-\tlo-\tnaise", "ph Q\tl V\tn eI z");
result.add("po-\tlo-\tni-\tum", "ph V\tl @U\tn i:\tV m");
result.add("po-\tlo's", "ph @U\tl @U z");
result.add("po-\tly", "ph Q\tl i:");
result.add("po-\tly-\ta-\tmide", "ph Q\tl i:\t{\tm aI d");
result.add("po-\tly-\tan-\tdrous", "ph Q\tl i:\t{ n\td r V s");
result.add("po-\tly-\tand-\try", "ph Q\tl i:\t{ n\td r i:");
result.add("po-\tly-\tbu-\tty-\tlene", "ph Q\tl i: b\tj u:\tt V\tl i: n");
result.add("po-\tly-\tcar-\tpic", "ph Q\tl I\tk Q@\tp I k");
result.add("po-\tly-\tchlo-\tri-\tna-\tted", "ph Q\tl i: k\tl O@\tI\tn eI\tt I d");
result.add("po-\tly-\tchrome", "ph Q\tl I k\tr @U m");
result.add("po-\tly-\te-\tthy-\tlene", "ph Q\tl i:\te\tT V\tl i: n");
result.add("po-\tly-\tes-\tter", "ph Q\tl i:\te s\tt @r");
result.add("po-\tly-\tes-\tters", "ph Q\tl i:\te s\tt @r z");
result.add("po-\tly-\tga-\tmous", "ph V\tl I\tg V\tm V s");
result.add("po-\tly-\tga-\tmy", "ph V\tl I\tg V\tm i:");
result.add("po-\tly-\tglot", "ph Q\tl i: g\tl Q t");
result.add("po-\tly-\tgo-\tnal", "ph V\tl I\tg V\tn V l");
result.add("po-\tly-\tgon", "ph Q\tl I\tg Q n");
result.add("po-\tly-\tgram", "ph Q\tl i: g\tr { m");
result.add("po-\tly-\tgram's", "ph Q\tl I g\tr { m z");
result.add("po-\tly-\tgraph", "ph Q\tl I g\tr { f");
result.add("po-\tly-\tgraphs", "ph Q\tl i: g\tr { f s");
result.add("po-\tly-\tgy-\tnous", "ph V\tl I\tdZ V\tn V s");
result.add("po-\tly-\tgy-\tny", "ph V\tl I\tdZ V\tn i:");
result.add("po-\tly-\thed-\tron", "ph Q\tl i:\th i: d\tr V n");
result.add("po-\tly-\thed-\trons", "ph Q\tl i:\th i: d\tr V n z");
result.add("po-\tly-\tmor-\tphi-\tsm", "ph Q\tl i:\tm O@\tf I\tz V m");
result.add("po-\tly-\tmor-\tphic", "ph Q\tl i:\tm O@\tf I k");
result.add("po-\tly-\tmorph", "ph Q\tl i:\tm O@ f");
result.add("po-\tly-\tne-\tsia", "ph Q\tl V\tn i:\tZ V");
result.add("po-\tly-\tne-\tsian", "ph Q\tl V\tn i:\tZ V n");
result.add("po-\tly-\tno-\tmi-\tal", "ph Q\tl V\tn @U\tm i:\tV l");
result.add("po-\tly-\tphase", "ph Q\tl V\tf eI z");
result.add("po-\tly-\tpho-\tnic", "ph Q\tl V\tf Q\tn I k");
result.add("po-\tly-\tpho-\tny", "ph V\tl I\tf V\tn i:");
result.add("po-\tly-\tpro-\tpy-\tlene", "ph Q\tl i: p\tr @U\tp V\tl i: n");
result.add("po-\tly-\tsac-\tcha-\tride", "ph Q\tl V\ts {\tk @r\taI d");
result.add("po-\tly-\tsac-\tcha-\trides", "ph Q\tl V\ts {\tk @r\taI d z");
result.add("po-\tly-\tsi-\tli-\tcon", "ph Q\tl i:\ts I\tl I\tk Q n");
result.add("po-\tly-\tsty-\trene", "ph Q\tl V s\tt aI\tr i: n");
result.add("po-\tly-\ttech-\tnic", "ph Q\tl i:\tt e k\tn I k");
result.add("po-\tly-\tthe-\ti-\tsm", "ph Q\tl V\tT i:\tI\tz V m");
result.add("po-\tly-\tthe-\tis-\ttic", "ph Q\tl V\tT i:\tI s\tt I k");
result.add("po-\tly-\tu-\tre-\tthane", "ph Q\tl i:\tU@\tV\tT eI n");
result.add("po-\tly-\tvi-\tnyl", "ph Q\tl i:\tv aI\tn V l");
result.add("po-\tlyp", "ph Q\tl V p");
result.add("po-\tlyps", "ph Q\tl V p s");
result.add("po-\tly's", "ph Q\tl i: z");
result.add("po-\tme-\tra-\tni-\ta", "ph Q\tm @r\teI\tn i:\tV");
result.add("po-\tme-\tra-\tni-\tan", "ph Q\tm @r\teI\tn i:\tV n");
result.add("po-\tme-\troy", "ph Q\tm @r\tOI");
result.add("po-\tmo-\tlo-\tgy", "ph @U\tm Q\tl V\tdZ i:");
result.add("po-\tmo-\tna", "ph @U\tm @U\tn V");
result.add("po-\tnied", "ph @U\tn i: d");
result.add("po-\tnies", "ph @U\tn i: z");
result.add("po-\tny", "ph @U\tn i:");
result.add("po-\tny-\ttail", "ph @U\tn i:\tt eI l");
result.add("po-\tpek", "ph @U\tp I k");
result.add("po-\tpel-\tka", "ph V\tp e l\tk V");
result.add("po-\tpeye", "ph Q\tp aI");
result.add("po-\tpeyes", "ph O:\tp aI z");
result.add("po-\tpeye's", "ph Q\tp aI z");
result.add("po-\tpoff", "ph Q\tp O: f");
result.add("po-\tpov", "ph @U\tp V v");
result.add("po-\tpu-\tla-\tri-\tty", "ph Q p\tj V\tl e@\tV\tt i:");
result.add("po-\tpu-\tla-\tri-\tza-\ttion", "ph Q p\tj V\tl @r\tV\tz eI\tS V n");
result.add("po-\tpu-\tla-\tri-\tzer", "ph Q p\tj V\tl @r\taI\tz @r");
result.add("po-\tpu-\tla-\tri-\tzing", "ph Q p\tj V\tl @r\taI\tz I N");
result.add("po-\tpu-\tla-\trize", "ph Q p\tj V\tl @r\taI z");
result.add("po-\tpu-\tla-\trized", "ph Q p\tj V\tl @r\taI z d");
result.add("po-\tpu-\tla-\tted", "ph Q p\tj V\tl eI\tt V d");
result.add("po-\tpu-\tla-\tting", "ph Q p\tj V\tl eI\tt I N");
result.add("po-\tpu-\tla-\ttion", "ph Q p\tj V\tl eI\tS V n");
result.add("po-\tpu-\tla-\ttions", "ph Q p\tj V\tl eI\tS V n z");
result.add("po-\tpu-\tlace", "ph Q p\tj V\tl V s");
result.add("po-\tpu-\tlar", "ph Q p\tj V\tl @r");
result.add("po-\tpu-\tlar-\tly", "ph Q p\tj V\tl @r\tl i:");
result.add("po-\tpu-\tlate", "ph Q p\tj V\tl eI t");
result.add("po-\tpu-\tli-\tsm", "ph Q p\tj V\tl I\tz V m");
result.add("po-\tpu-\tlist", "ph Q p\tj V\tl V s t");
result.add("po-\tpu-\tlists", "ph Q p\tj V\tl V s t s");
result.add("po-\tpu-\tlous", "ph Q p\tj V\tl V s");
result.add("po-\tring", "ph O@\tI N");
result.add("po-\trous", "ph O@\tV s");
result.add("po-\tsi-\tti-\tvi-\tsm", "ph Q\tz I\tt I\tv I\tz V m");
result.add("po-\tsi-\ttion", "ph V\tz I\tS V n");
result.add("po-\tsi-\ttions", "ph V\tz I\tS V n z");
result.add("po-\tsi-\ttive", "ph Q\tz I\tt I v");
result.add("po-\tsi-\ttive-\tly", "ph Q\tz I\tt I v\tl i:");
result.add("po-\tsi-\ttives", "ph Q\tz I\tt I v z");
result.add("po-\tsi-\ttron", "ph Q\tz I t\tr Q n");
result.add("po-\tsi-\ttrons", "ph Q\tz I t\tr Q n z");
result.add("po-\tsits", "ph Q\tz I t s");
result.add("po-\tta-\tble", "ph @U\tt V\tb V l");
result.add("po-\tta-\tto", "ph V\tt eI\tt @U");
result.add("po-\tta-\ttoes", "ph V\tt eI\tt @U z");
result.add("po-\ttas-\tsi-\tum", "ph V\tt {\ts i:\tV m");
result.add("po-\ttash", "ph Q\tt { S");
result.add("po-\tteet", "ph Q\tt i: t");
result.add("po-\ttem-\tkin", "ph V\tt e m\tk I n");
result.add("po-\tten-\tcy", "ph @U\tt V n\ts i:");
result.add("po-\tten-\ttate", "ph @U\tt V n\tt eI t");
result.add("po-\tten-\ttates", "ph @U\tt V n\tt eI t s");
result.add("po-\tten-\ttial", "ph V\tt e n\tS V l");
result.add("po-\tten-\ttial-\tly", "ph V\tt e n\tS V\tl i:");
result.add("po-\tten-\ttials", "ph V\tt e n\ttS V l z");
result.add("po-\ttent", "ph @U\tt V n t");
result.add("po-\tthole", "ph Q t\th @U l");
result.add("po-\ttholed", "ph Q t\th @U l d");
result.add("po-\ttholes", "ph Q t\th @U l z");
result.add("po-\ttion", "ph @U\tS V n");
result.add("po-\ttions", "ph @U\tS V n z");
result.add("po-\tto-\tmac", "ph V\tt @U\tm V k");
result.add("po-\tver-\tty", "ph Q\tv @r\tt i:");
result.add("po-\twe-\tring", "ph aU\t@r\tI N");
result.add("po-\twell", "ph aU\tV l");
result.add("po-\twell's", "ph @U\tV l z");
result.add("po-\twer", "ph aU\t@r");
result.add("po-\twer-\tboat", "ph aU\t@r\tb @U t");
result.add("po-\twer-\tful", "ph aU\t@r\tf V l");
result.add("po-\twer-\thou-\tses", "ph aU\t@r\th aU\ts V z");
result.add("po-\twer-\thouse", "ph aU\t@r\th aU s");
result.add("po-\twer-\tless", "ph aU\t@r\tl V s");
result.add("po-\twer-\tless-\tness", "ph aU\t@r\tl V s\tn V s");
result.add("po-\twered", "ph aU\t@r d");
result.add("po-\twerful-\tly", "ph aU\t@r f\tl i:");
result.add("po-\twers", "ph aU\t@r z");
result.add("po-\twer's", "ph aU\t@r z");
result.add("poc-\tke-\tted", "ph Q\tk V\tt V d");
result.add("poc-\tke-\tting", "ph Q\tk V\tt I N");
result.add("poc-\tket", "ph Q\tk V t");
result.add("poc-\tket-\tbook", "ph Q\tk V t\tb U k");
result.add("poc-\tket-\tbooks", "ph Q\tk V t\tb U k s");
result.add("poc-\tket-\tful", "ph Q\tk V t\tf U l");
result.add("poc-\tkets", "ph Q\tk V t s");
result.add("poche", "ph Q tS");
result.add("pock", "ph Q k");
result.add("pock-\tmark", "ph Q k\tm Q@ k");
result.add("pock-\tmarked", "ph Q k\tm Q@ k t");
result.add("pocked", "ph Q k t");
result.add("pocks", "ph Q k s");
result.add("pod", "ph Q d");
result.add("pod-\tho-\tretz", "ph Q d\th @r\te t s");
result.add("podge", "ph Q dZ");
result.add("pods", "ph Q d z");
result.add("pod's", "ph Q d z");
result.add("poe", "ph @U");
result.add("poe's", "ph @U z");
result.add("pog-\trom", "ph V g\tr Q m");
result.add("pog-\troms", "ph V g\tr Q m z");
result.add("pogue", "ph @U g");
result.add("poh", "ph @U");
result.add("poh-\tjo-\tla", "ph @U\tdZ @U\tl V");
result.add("poi-\tso-\tning", "ph OI\tz V\tn I N");
result.add("poi-\tso-\tnings", "ph OI\tz V\tn I N z");
result.add("poi-\tso-\tnous", "ph OI\tz V\tn V s");
result.add("poi-\tson", "ph OI\tz V n");
result.add("poi-\tsoned", "ph OI\tz V n d");
result.add("poi-\tsons", "ph OI\tz V n z");
result.add("poi-\ttier", "ph OI t\tj @r");
result.add("poig-\tnan-\tcy", "ph OI n\tj V n\ts i:");
result.add("poig-\tnant", "ph OI n\tj V n t");
result.add("poig-\tnant-\tly", "ph OI n\tj V n\tt l i:");
result.add("poin-\tdex-\tter", "ph OI n\td e k\ts t @r");
result.add("poin-\tset-\tti-\ta", "ph OI n\ts e\tt i:\tV");
result.add("poin-\tset-\tti-\tas", "ph OI n\ts e\tt i:\tV z");
result.add("poin-\tted", "ph OI n\tt V d");
result.add("poin-\tted-\tly", "ph OI n\tt V d\tl i:");
result.add("poin-\tter", "ph OI n\tt @r");
result.add("poin-\tters", "ph OI n\tt @r z");
result.add("poin-\tting", "ph OI n\tt I N");
result.add("poin-\tty", "ph OI n\tt i:");
result.add("point", "ph OI n t");
result.add("point-\tless", "ph OI n\tt l V s");
result.add("pointe", "ph OI n t");
result.add("points", "ph OI n t s");
result.add("point's", "ph OI n t s");
result.add("pois-\tson", "ph OI z\ts V n");
result.add("poise", "ph OI z");
result.add("poised", "ph OI z d");
result.add("poke", "ph @U k");
result.add("poke-\tweed", "ph @U k\tw i: d");
result.add("poked", "ph @U k t");
result.add("pokes", "ph @U k s");
result.add("pol", "ph O: l");
result.add("pol-\tder", "ph @U l\td @r");
result.add("pol-\tje", "ph @U l\tdZ i:");
result.add("pol-\tka", "ph @U l\tk V");
result.add("pol-\tkas", "ph @U l\tk V z");
result.add("pol-\tlack", "ph Q\tl V k");
result.add("pol-\tlack's", "ph Q\tl V k s");
result.add("pol-\tlak", "ph Q\tl V k");
result.add("pol-\tlan", "ph Q\tl V n");
result.add("pol-\tlard", "ph Q\tl @r d");
result.add("pol-\tlard's", "ph Q\tl @r d z");
result.add("pol-\tlen", "ph Q\tl V n");
result.add("pol-\tlens", "ph Q\tl V n z");
result.add("pol-\tlet", "ph Q\tl e t");
result.add("pol-\tli-\tna-\tted", "ph Q\tl I\tn eI\tt I d");
result.add("pol-\tli-\tna-\ttion", "ph Q\tl I\tn eI\tS V n");
result.add("pol-\tli-\tnate", "ph Q\tl I\tn eI t");
result.add("pol-\tli-\tnates", "ph Q\tl I\tn eI t s");
result.add("pol-\tli-\tni", "ph V\tl i:\tn i:");
result.add("pol-\tli-\tni-\ta", "ph Q\tl I\tn i:\tV");
result.add("pol-\tli-\to", "ph Q\tl i:\t@U");
result.add("pol-\tling", "ph @U\tl I N");
result.add("pol-\tlitt", "ph Q\tl I t");
result.add("pol-\tlo", "ph Q\tl @U");
result.add("pol-\tlock", "ph Q\tl V k");
result.add("pol-\tloi", "ph Q\tl OI");
result.add("pol-\tlok", "ph Q\tl V k");
result.add("pol-\tlu-\ttant", "ph V\tl u:\tt V n t");
result.add("pol-\tlu-\ttants", "ph V\tl u:\tt V n t s");
result.add("pol-\tlu-\tted", "ph V\tl u:\tt V d");
result.add("pol-\tlu-\tter", "ph V\tl u:\tt @r");
result.add("pol-\tlu-\tters", "ph V\tl u:\tt @r z");
result.add("pol-\tlu-\tting", "ph V\tl u:\tt I N");
result.add("pol-\tlu-\ttion", "ph V\tl u:\tS V n");
result.add("pol-\tlute", "ph V\tl u: t");
result.add("pol-\tlutes", "ph V\tl u: t s");
result.add("pol-\tlux", "ph Q\tl V k s");
result.add("pol-\tly", "ph Q\tl i:");
result.add("pol-\tly-\tan-\tna", "ph Q\tl i:\t{\tn V");
result.add("pol-\tly's", "ph Q\tl i: z");
result.add("pol-\tson", "ph @U l\ts V n");
result.add("pol-\tster", "ph @U l\ts t @r");
result.add("pol-\tter-\tgeist", "ph @U l\tt @r\tg aI s t");
result.add("pol-\tter-\tgeists", "ph @U l\tt @r\tg aI s t s");
result.add("pole", "ph @U l");
result.add("pole-\tcat", "ph @U l\tk { t");
result.add("pole-\tcats", "ph @U l\tk { t s");
result.add("pole-\tward", "ph @U l\tw @r d");
result.add("poles", "ph @U l z");
result.add("polk", "ph @U k");
result.add("polk's", "ph @U k s");
result.add("poll", "ph @U l");
result.add("poll-\tman", "ph @U l\tm V n");
result.add("poll-\tster", "ph @U l\ts t @r");
result.add("poll-\tsters", "ph @U l\ts t @r z");
result.add("polled", "ph @U l d");
result.add("polls", "ph @U l z");
result.add("poll's", "ph @U l z");
result.add("pols", "ph @U l z");
result.add("pom", "ph O: m");
result.add("pom-\tbo", "ph Q m\tb @U");
result.add("pom-\tmel", "ph Q\tm V l");
result.add("pom-\tmer", "ph Q\tm @r");
result.add("pom-\tpa", "ph Q m\tp V");
result.add("pom-\tpa-\tno", "ph Q m\tp V\tn @U");
result.add("pom-\tpey", "ph Q m\tp i:");
result.add("pom-\tpi-\tdou", "ph Q m\tp I\td u:");
result.add("pom-\tpo-\tsi-\tty", "ph Q m\tp Q\ts I\tt i:");
result.add("pom-\tpon", "ph Q m\tp Q n");
result.add("pom-\tpons", "ph Q m\tp Q n z");
result.add("pom-\tpous", "ph Q m\tp V s");
result.add("pom-\tpous-\tness", "ph Q m\tp V s\tn V s");
result.add("pom-\troy", "ph Q m\tr OI");
result.add("pomp", "ph Q m p");
result.add("pon", "ph Q n");
result.add("pon-\tce", "ph @U n\ts eI");
result.add("pon-\tcho", "ph Q n\ttS @U");
result.add("pon-\tchos", "ph Q n\ttS @U z");
result.add("pon-\tde-\tring", "ph Q n\td @r\tI N");
result.add("pon-\tde-\tro-\tsa", "ph Q n\td @r\t@U\ts V");
result.add("pon-\tde-\tro-\tsa's", "ph Q n\td @r\t@U\ts V z");
result.add("pon-\tde-\trous", "ph Q n\td @r\tV s");
result.add("pon-\tder", "ph Q n\td @r");
result.add("pon-\tdered", "ph Q n\td @r d");
result.add("pon-\tders", "ph Q n\td @r z");
result.add("pon-\ttes", "ph @U n\tt e s");
result.add("pon-\tti-\tac", "ph Q n\tt i:\t{ k");
result.add("pon-\tti-\tacs", "ph Q n\tt i:\t{ k s");
result.add("pon-\tti-\tac's", "ph Q n\tt i:\t{ k s");
result.add("pon-\tti-\tfi-\tca-\tted", "ph Q n\tt I\tf I\tk eI\tt I d");
result.add("pon-\tti-\tfi-\tca-\tting", "ph Q n\tt I\tf I\tk eI\tt I N");
result.add("pon-\tti-\tfi-\tca-\ttion", "ph Q n\tt I\tf I\tk eI\tS V n");
result.add("pon-\tti-\tfi-\tca-\ttions", "ph Q n\tt I\tf I\tk eI\tS V n z");
result.add("pon-\tti-\tfi-\tcal", "ph Q n\tt I\tf I\tk V l");
result.add("pon-\tti-\tfi-\tcate", "ph Q n\tt I\tf I\tk eI t");
result.add("pon-\tti-\tfi-\tcates", "ph Q n\tt I\tf I\tk eI t s");
result.add("pon-\tti-\tus", "ph Q n\tt i:\tV s");
result.add("pon-\ttiff", "ph Q n\tt I f");
result.add("pon-\ttiff's", "ph Q n\tt I f s");
result.add("pon-\tto", "ph Q n\tt @U");
result.add("pon-\tton", "ph Q n\tt V n");
result.add("pon-\ttoon", "ph Q n\tt u: n");
result.add("pon-\ttoons", "ph Q n\tt u: n z");
result.add("pon-\tzi", "ph Q n\tz i:");
result.add("pon-\tzo", "ph Q n\tz @U");
result.add("pond", "ph Q n d");
result.add("ponds", "ph Q n d z");
result.add("pond's", "ph Q n d z");
result.add("pong", "ph O: N");
result.add("pons", "ph Q n z");
result.add("pont", "ph Q n t");
result.add("ponte", "ph Q n t");
result.add("ponts", "ph Q n t s");
result.add("pont's", "ph Q n t s");
result.add("poo", "ph u:");
result.add("poo-\tches", "ph u:\ttS V z");
result.add("poo-\tdle", "ph u:\td V l");
result.add("poo-\tdles", "ph u:\td V l z");
result.add("poo-\tler", "ph u:\tl @r");
result.add("poo-\tley", "ph u:\tl i:");
result.add("poo-\tling", "ph u:\tl I N");
result.add("poo-\tper", "ph u:\tp @r");
result.add("poo-\trer", "ph U@\t@r");
result.add("poo-\trest", "ph U@\tV s t");
result.add("pooch", "ph u: tS");
result.add("poof", "ph u: f");
result.add("pooh", "ph u:");
result.add("poohed", "ph u: d");
result.add("pool", "ph u: l");
result.add("pool-\tside", "ph u: l\ts aI d");
result.add("poole", "ph u: l");
result.add("pooled", "ph u: l d");
result.add("pools", "ph u: l z");
result.add("pool's", "ph u: l z");
result.add("poon", "ph u: n");
result.add("poop", "ph u: p");
result.add("pooped", "ph u: p t");
result.add("poops", "ph u: p s");
result.add("poor", "ph U@");
result.add("poor-\thouse", "ph U@\th aU s");
result.add("poor-\tly", "ph U@\tl i:");
result.add("poor-\tspi-\tri-\tted", "ph U@ s\tp I@\tI\tt I d");
result.add("poore", "ph U@");
result.add("pop", "ph Q p");
result.add("pop-\tcorn", "ph Q p\tk O@ n");
result.add("pop-\tlar", "ph Q p\tl @r");
result.add("pop-\tlin", "ph Q p\tl I n");
result.add("pop-\tpa", "ph Q\tp V");
result.add("pop-\tper", "ph Q\tp @r");
result.add("pop-\tpers", "ph Q\tp @r z");
result.add("pop-\tpies", "ph Q\tp i: z");
result.add("pop-\tping", "ph Q\tp I N");
result.add("pop-\tpins", "ph Q\tp I n z");
result.add("pop-\tple", "ph Q\tp V l");
result.add("pop-\tpy", "ph Q\tp i:");
result.add("pop-\tpy-\tcock", "ph Q\tp i:\tk O: k");
result.add("pop-\tpy's", "ph Q\tp i: z");
result.add("pop-\tsi-\tcle", "ph Q p\ts I\tk V l");
result.add("pope", "ph @U p");
result.add("pope-\tjoy", "ph @U p\tdZ OI");
result.add("pope-\tjoy's", "ph @U p\tdZ OI z");
result.add("popes", "ph @U p z");
result.add("pope's", "ph @U p s");
result.add("popp", "ph Q p");
result.add("popped", "ph Q p t");
result.add("pops", "ph Q p s");
result.add("pop's", "ph Q p s");
result.add("por", "ph O@");
result.add("por-\tce-\tlain", "ph O@\ts V\tl V n");
result.add("por-\tce-\tlains", "ph O@\ts V\tl V n z");
result.add("por-\tches", "ph O@\ttS V z");
result.add("por-\tcu-\tpine", "ph O@ k\tj V\tp aI n");
result.add("por-\tcu-\tpines", "ph O@ k\tj V\tp aI n z");
result.add("por-\tges", "ph O@\tdZ V z");
result.add("por-\tgy", "ph O@\tg i:");
result.add("por-\tky", "ph O@\tk i:");
result.add("por-\tno", "ph O@\tn @U");
result.add("por-\tno-\tgra-\tpher", "ph O@\tn Q g\tr V\tf @r");
result.add("por-\tno-\tgra-\tphers", "ph O@\tn Q g\tr V\tf @r z");
result.add("por-\tno-\tgra-\tphic", "ph O@\tn V g\tr {\tf I k");
result.add("por-\tno-\tgra-\tphy", "ph O@\tn Q g\tr V\tf i:");
result.add("por-\tphy-\tri-\ttic", "ph O@\tf @r\tI\tt I k");
result.add("por-\tphy-\try", "ph O@\tf @r\ti:");
result.add("por-\tpoi-\tses", "ph O@\tp V\ts V z");
result.add("por-\tpoise", "ph O@\tp V s");
result.add("por-\tridge", "ph O@\tI dZ");
result.add("por-\tro", "ph O@\t@U");
result.add("por-\tsche", "ph O@\tS V");
result.add("por-\tsches", "ph O@\tS V z");
result.add("por-\tsche's", "ph O@\tS V z");
result.add("por-\tta", "ph O@\tt V");
result.add("por-\tta-\tbi-\tli-\tty", "ph O@\tt V\tb I\tl V\tt i:");
result.add("por-\tta-\tble", "ph O@\tt V\tb V l");
result.add("por-\tta-\tbles", "ph O@\tt V\tb V l z");
result.add("por-\ttage", "ph O@\tt V dZ");
result.add("por-\ttal", "ph O@\tt V l");
result.add("por-\ttals", "ph O@\tt V l z");
result.add("por-\tte-\tous", "ph O@\tt i:\tV s");
result.add("por-\tte-\tra-\tges", "ph O@\tt @r\tI\tdZ V z");
result.add("por-\tted", "ph O@\tt V d");
result.add("por-\tten-\tding", "ph O@\tt e n\td I N");
result.add("por-\tten-\ttous", "ph O@\tt e n\tt V s");
result.add("por-\ttend", "ph O@\tt e n d");
result.add("por-\ttends", "ph O@\tt e n d z");
result.add("por-\ttent", "ph O@\tt e n t");
result.add("por-\ttents", "ph O@\tt e n t s");
result.add("por-\tter", "ph O@\tt @r");
result.add("por-\tters", "ph O@\tt @r z");
result.add("por-\tter's", "ph O@\tt @r z");
result.add("por-\tti-\tco", "ph O@\tt I\tk @U");
result.add("por-\tti-\ter", "ph O@\tt i:\t@r");
result.add("por-\ttia", "ph O@\tS V");
result.add("por-\tting", "ph O@\tt I N");
result.add("por-\ttion", "ph O@\tS V n");
result.add("por-\ttions", "ph O@\tS V n z");
result.add("por-\tto", "ph O@\tt @U");
result.add("por-\ttu-\tgal", "ph O@\ttS V\tg V l");
result.add("por-\ttu-\tgal's", "ph O@\ttS V\tg V l z");
result.add("por-\ttu-\tguese", "ph O@\ttS V\tg i: z");
result.add("porch", "ph O@ tS");
result.add("pore", "ph O@");
result.add("pored", "ph O@ d");
result.add("pores", "ph O@ z");
result.add("pork", "ph O@ k");
result.add("porn", "ph O@ n");
result.add("porr", "ph O@");
result.add("port", "ph O@ t");
result.add("port-\tfo-\tli-\to", "ph O@ t\tf @U\tl i:\t@U");
result.add("port-\tfo-\tli-\tos", "ph O@ t\tf @U\tl i:\t@U z");
result.add("port-\tfo-\tli-\to's", "ph O@ t\tf @U\tl i:\t@U z");
result.add("port-\tland", "ph O@ t\tl V n d");
result.add("port-\tland's", "ph O@ t\tl V n d z");
result.add("port-\tly", "ph O@ t\tl i:");
result.add("port-\tman", "ph O@ t\tm V n");
result.add("port-\tra-\tyal", "ph O@ t\tr eI\tV l");
result.add("port-\tra-\tyals", "ph O@ t\tr eI\tV l z");
result.add("port-\trait", "ph O@ t\tr V t");
result.add("port-\traits", "ph O@ t\tr V t s");
result.add("port-\tray", "ph O@ t\tr eI");
result.add("port-\tray-\ting", "ph O@ t\tr eI\tI N");
result.add("port-\trayed", "ph O@ t\tr eI d");
result.add("port-\trays", "ph O@ t\tr eI z");
result.add("porte", "ph O@ t");
result.add("ports", "ph O@ t s");
result.add("port's", "ph O@ t s");
result.add("ports-\tmouth", "ph O@ t\ts m V T");
result.add("pos-\tner", "ph @U z\tn @r");
result.add("pos-\tner's", "ph @U z\tn @r z");
result.add("pos-\tse", "ph Q\ts i:");
result.add("pos-\tses", "ph Q\ts i: z");
result.add("pos-\tses-\tses", "ph V\tz e\ts V z");
result.add("pos-\tses-\tsing", "ph V\tz e\ts I N");
result.add("pos-\tses-\tsion", "ph V\tz e\tS V n");
result.add("pos-\tses-\tsions", "ph V\tz e\tS V n z");
result.add("pos-\tses-\tsive", "ph V\tz e\ts I v");
result.add("pos-\tses-\tsive-\tness", "ph V\tz e\ts I v\tn V s");
result.add("pos-\tses-\tsor", "ph V\tz e\ts @r");
result.add("pos-\tsess", "ph V\tz e s");
result.add("pos-\tsessed", "ph V\tz e s t");
result.add("pos-\tsi-\tbi-\tli-\tties", "ph Q\ts I\tb I\tl I\tt i: z");
result.add("pos-\tsi-\tbi-\tli-\tty", "ph Q\ts I\tb I\tl I\tt i:");
result.add("pos-\tsi-\tble", "ph Q\ts I\tb V l");
result.add("pos-\tsib-\tly", "ph Q\ts I b\tl i:");
result.add("pos-\tsum", "ph Q\ts V m");
result.add("pos-\tsums", "ph Q\ts V m z");
result.add("pos-\ttage", "ph @U s\tt V dZ");
result.add("pos-\ttal", "ph @U s\tt V l");
result.add("pos-\tte-\tri-\tor", "ph O: s\tt I@\ti:\te@");
result.add("pos-\tte-\tri-\tty", "ph Q s\tt e@\tI\tt i:");
result.add("pos-\tted", "ph @U s\tt V d");
result.add("pos-\ttel", "ph Q s\tt V l");
result.add("pos-\tter", "ph @U s\tt @r");
result.add("pos-\tters", "ph @U s\tt @r z");
result.add("pos-\tting", "ph @U s\tt I N");
result.add("pos-\ttings", "ph @U s\tt I N z");
result.add("pos-\tton", "ph @U s\tt V n");
result.add("pos-\ttu-\tlate", "ph Q s\ttS V\tl eI t");
result.add("pos-\ttu-\tlates", "ph Q s\ttS V\tl eI t s");
result.add("pos-\ttu-\tring", "ph Q s\ttS @r\tI N");
result.add("pos-\ttu-\trings", "ph Q s\ttS @r\tI N z");
result.add("pos-\tture", "ph Q s\ttS @r");
result.add("pos-\ttures", "ph Q s\ttS @r z");
result.add("poss", "ph O: s");
result.add("post", "ph @U s t");
result.add("post-\tat-\ttack", "ph @U s\tt V\tt { k");
result.add("post-\tcard", "ph @U s\tt k Q@ d");
result.add("post-\tcards", "ph @U s\tt k Q@ d z");
result.add("post-\tcrash", "ph @U s\tt k r { S");
result.add("post-\tdate", "ph @U s\tt d eI t");
result.add("post-\tdoc-\tto-\tral", "ph @U s\tt d Q k\tt @r\tV l");
result.add("post-\tgame", "ph @U s\tt g eI m");
result.add("post-\thole", "ph @U s\tt h @U l");
result.add("post-\tholes", "ph @U s\tt h @U l z");
result.add("post-\thu-\tmous", "ph Q s\ttS U\tm V s");
result.add("post-\thu-\tmous-\tly", "ph Q s\ttS U\tm V s\tl i:");
result.add("post-\tman", "ph @U s\tt m V n");
result.add("post-\tmark", "ph @U s\tt m Q@ k");
result.add("post-\tmarked", "ph @U s\tt m Q@ k t");
result.add("post-\tmas-\tter", "ph @U s\tt m { s\tt @r");
result.add("post-\tmas-\tters", "ph @U s\tt m { s\tt @r z");
result.add("post-\tmo-\tdern", "ph @U s\tt m Q\td @r n");
result.add("post-\tmor-\ttem", "ph @U s\tt m O@\tt e m");
result.add("post-\tna-\ttal", "ph @U s\tt n eI\tt V l");
result.add("post-\tpo-\tning", "ph @U s\tt p @U\tn I N");
result.add("post-\tpone", "ph @U s\tt p @U n");
result.add("post-\tpone-\tment", "ph @U s\tt p @U n\tm V n t");
result.add("post-\tpone-\tments", "ph @U s\tt p @U n\tm V n t s");
result.add("post-\tponed", "ph @U s\tt p @U n d");
result.add("post-\tpones", "ph @U s\tt p @U n z");
result.add("post-\tre-\tti-\tre-\tment", "ph @U s\tt r i:\tt aI\t@r\tm V n t");
result.add("post-\tscript", "ph @U s\tk r I p t");
result.add("post-\tscripts", "ph @U s\tk r I p t s");
result.add("post-\ttrau-\tma-\ttic", "ph @U s\tt t r O:\tm {\tt I k");
result.add("post-\twar", "ph @U s\tt w O@");
result.add("posts", "ph @U s t s");
result.add("post's", "ph @U s t s");
result.add("pot", "ph Q t");
result.add("pot-\tlatch", "ph Q t\tl { tS");
result.add("pot-\tluck", "ph Q t\tl V k");
result.add("pot-\tpie", "ph Q t\tp aI");
result.add("pot-\tpour-\tri", "ph @U\tp U@\ti:");
result.add("pot-\tshot", "ph Q\ttS Q t");
result.add("pot-\tshots", "ph Q\ttS Q t s");
result.add("pot-\tte-\try", "ph Q\tt @r\ti:");
result.add("pot-\tted", "ph Q\tt V d");
result.add("pot-\tter", "ph Q\tt @r");
result.add("pot-\tters", "ph Q\tt @r z");
result.add("pot-\tter's", "ph Q\tt @r z");
result.add("pot-\ttin-\tger", "ph Q\tt I\tN @r");
result.add("pot-\ttle", "ph Q\tt V l");
result.add("pot-\tty", "ph Q\tt i:");
result.add("pote", "ph @U t");
result.add("poth", "ph Q T");
result.add("pots", "ph Q t s");
result.add("pots-\tdam", "ph Q t\ts d { m");
result.add("pott", "ph Q t");
result.add("potts", "ph Q t s");
result.add("pou", "ph u:");
result.add("pou-\tcher", "ph aU\ttS @r");
result.add("pou-\tches", "ph aU\ttS V z");
result.add("pou-\tlenc", "ph u:\tl V N k");
result.add("pou-\tlenc's", "ph u:\tl V N k s");
result.add("pou-\tring", "ph O@\tI N");
result.add("pou-\tted", "ph aU\tt V d");
result.add("pou-\tter", "ph aU\tt @r");
result.add("pou-\tting", "ph aU\tt I N");
result.add("pou-\tty", "ph aU\tt i:");
result.add("pouch", "ph aU tS");
result.add("pough-\tkeep-\tsie", "ph V\tk I p\ts i:");
result.add("pough-\tkeep-\tsie's", "ph V\tk I p\ts i: z");
result.add("poul", "ph u: l");
result.add("poul-\tter", "ph @U l\tt @r");
result.add("poul-\tti-\tces", "ph @U l\tt I\ts V z");
result.add("poul-\ttice", "ph @U l\tt I s");
result.add("poul-\ttry", "ph @U l\tt r i:");
result.add("poun-\tcey", "ph aU n\ts i:");
result.add("poun-\tcing", "ph aU n\ts I N");
result.add("poun-\tcy", "ph u: N\tk i:");
result.add("poun-\tdage", "ph aU n\td I dZ");
result.add("poun-\tded", "ph aU n\td V d");
result.add("poun-\tder", "ph aU n\td @r");
result.add("poun-\tders", "ph aU n\td @r z");
result.add("poun-\tding", "ph aU n\td I N");
result.add("pounce", "ph aU n s");
result.add("pounced", "ph aU n s t");
result.add("pound", "ph aU n d");
result.add("pound-\tstone", "ph aU n\td s t @U n");
result.add("pounds", "ph aU n d z");
result.add("pound's", "ph aU n d z");
result.add("pour", "ph O@");
result.add("poured", "ph O@ d");
result.add("pours", "ph O@ z");
result.add("pous-\tsin", "ph u:\ts I n");
result.add("pout", "ph aU t");
result.add("pouts", "ph aU t s");
result.add("pow", "ph aU");
result.add("pow-\tde-\tring", "ph aU\td @r\tI N");
result.add("pow-\tde-\try", "ph aU\td @r\ti:");
result.add("pow-\tder", "ph aU\td @r");
result.add("pow-\tder-\tly", "ph aU\td @r\tl i:");
result.add("pow-\tdered", "ph aU\td @r d");
result.add("pow-\tders", "ph aU\td @r z");
result.add("pow-\tnall", "ph aU\tn V l");
result.add("pow-\tter", "ph aU\tt @r");
result.add("pow-\twow", "ph aU\tw aU");
result.add("powe", "ph aU");
result.add("power-\ttrain", "ph aU r\tt r eI n");
result.add("pows", "ph @U z");
result.add("pox", "ph Q k s");
result.add("poy-\tnor", "ph OI\tn @r");
result.add("poz-\tnan", "ph Q z\tn V n");
result.add("pr-\tzy-\twa-\tra", "ph @r\tz V\tv Q@\tV");
result.add("pra-\tda", "ph r Q\td V");
result.add("pra-\tdesh", "ph r V\td e S");
result.add("pra-\tdo", "ph r Q\td @U");
result.add("pra-\tkash", "ph r Q\tk Q S");
result.add("pra-\tsad", "ph r {\ts V d");
result.add("pra-\tter", "ph r eI\tt @r");
result.add("pra-\tther", "ph r {\tD @r");
result.add("pra-\tto", "ph r Q\tt @U");
result.add("pra-\txis", "ph r { k\ts I s");
result.add("pra-\tying", "ph r eI\tI N");
result.add("prac-\tti-\tca-\tble", "ph r { k\tt I\tk V\tb V l");
result.add("prac-\tti-\tca-\tli-\tty", "ph r { k\tt I\tk {\tl I\tt i:");
result.add("prac-\tti-\tcal", "ph r { k\tt I\tk V l");
result.add("prac-\tti-\tces", "ph r { k\tt I\ts V z");
result.add("prac-\tti-\tcing", "ph r { k\tt I\ts I N");
result.add("prac-\tti-\ttio-\tner", "ph r { k\tt I\tS V\tn @r");
result.add("prac-\ttical-\tly", "ph r { k\tt I k\tl i:");
result.add("prac-\ttice", "ph r { k\tt I s");
result.add("prac-\tticed", "ph r { k\tt I s t");
result.add("prac-\ttitio-\tners", "ph r { k\tt I S\tn @r z");
result.add("prai-\trie", "ph r e@\ti:");
result.add("prai-\tries", "ph r eI\tr i: z");
result.add("prai-\trie's", "ph r e@\ti: z");
result.add("prai-\tses", "ph r eI\tz V z");
result.add("prai-\tsing", "ph r eI\tz I N");
result.add("praise", "ph r eI z");
result.add("praise-\twor-\tthy", "ph r eI z\tw @r\tD i:");
result.add("praised", "ph r eI z d");
result.add("pran-\tces", "ph r { n\ts V z");
result.add("pran-\tcing", "ph r { n\ts I N");
result.add("prance", "ph r { n s");
result.add("prank", "ph r { N k");
result.add("prank-\tster", "ph r { N\tk s t @r");
result.add("pranks", "ph r { N k s");
result.add("prat-\tfall", "ph r { t\tf O: l");
result.add("prat-\tfalls", "ph r { t\tf O: l z");
result.add("prat-\ttle", "ph r {\tt V l");
result.add("prats", "ph r { t s");
result.add("pratt", "ph r { t");
result.add("pratt-\tville", "ph r { t\tv I l");
result.add("pratte", "ph r { t");
result.add("pratt's", "ph r { t s");
result.add("prav-\tda", "ph r { v\td V");
result.add("prav-\tda's", "ph r { v\td V z");
result.add("prawn", "ph r O: n");
result.add("prawns", "ph r O: n z");
result.add("pray", "ph r eI");
result.add("prayed", "ph r eI d");
result.add("prayer", "ph r e@");
result.add("prayer-\tful", "ph r e@\tf V l");
result.add("prayers", "ph r e@ z");
result.add("prays", "ph r eI z");
result.add("pre", "ph r i:");
result.add("pre-\ta-\tdo-\tle-\tscence", "ph r i:\t{\td V\tl e\ts V s");
result.add("pre-\ta-\tdo-\tle-\tscent", "ph r i:\t{\td V\tl e\ts V n t");
result.add("pre-\tam-\tble", "ph r i:\t{ m\tb V l");
result.add("pre-\tar-\trange", "ph r i:\t@r\teI n dZ");
result.add("pre-\tar-\tranged", "ph r i:\t@r\teI n dZ d");
result.add("pre-\tble", "ph r e\tb V l");
result.add("pre-\tca-\tri-\tous", "ph r i:\tk e@\ti:\tV s");
result.add("pre-\tca-\tri-\tous-\tly", "ph r I\tk e@\ti:\tV s\tl i:");
result.add("pre-\tcam-\tbri-\tan", "ph r i:\tk { m\tb r i:\tV n");
result.add("pre-\tcan-\tce-\trous", "ph r i:\tk { n\ts @r\tV s");
result.add("pre-\tcast", "ph r i:\tk { s t");
result.add("pre-\tcau-\ttio-\tna-\try", "ph r I\tk O:\tS V\tn e@\ti:");
result.add("pre-\tcau-\ttion", "ph r i:\tk O:\tS V n");
result.add("pre-\tcau-\ttions", "ph r i:\tk O:\tS V n z");
result.add("pre-\tce-\tded", "ph r V\ts i:\td I d");
result.add("pre-\tce-\tdence", "ph r e\ts I\td e n s");
result.add("pre-\tce-\tdent", "ph r e\ts I\td e n t");
result.add("pre-\tce-\tdents", "ph r e\ts I\td e n t s");
result.add("pre-\tce-\tding", "ph r i:\ts i:\td I N");
result.add("pre-\tcede", "ph r V\ts i: d");
result.add("pre-\tcedes", "ph r V\ts i: d z");
result.add("pre-\tcee-\tding", "ph r V\ts i:\td I N");
result.add("pre-\tcept", "ph r i:\ts e p t");
result.add("pre-\tcepts", "ph r i:\ts e p t s");
result.add("pre-\tces-\tsion", "ph r i:\ts e\tS V n");
result.add("pre-\tci-\tpi-\tta-\tted", "ph r V\ts I\tp I\tt eI\tt I d");
result.add("pre-\tci-\tpi-\tta-\tting", "ph r V\ts I\tp I\tt eI\tt I N");
result.add("pre-\tci-\tpi-\tta-\ttion", "ph r V\ts I\tp I\tt eI\tS V n");
result.add("pre-\tci-\tpi-\ttate", "ph r V\ts I\tp I\tt eI t");
result.add("pre-\tci-\tpi-\ttous", "ph r V\ts I\tp I\tt V s");
result.add("pre-\tci-\tpi-\ttous-\tly", "ph r i:\ts I\tp I\tt V s\tl i:");
result.add("pre-\tci-\tpice", "ph r e\ts I\tp I s");
result.add("pre-\tci-\tsion", "ph r i:\ts I\tZ V n");
result.add("pre-\tcinct", "ph r i:\ts I N k t");
result.add("pre-\tcincts", "ph r i:\ts I N k t s");
result.add("pre-\tcious", "ph r e\tS V s");
result.add("pre-\tcis", "ph r eI\ts i:");
result.add("pre-\tcise", "ph r V\ts aI s");
result.add("pre-\tcise-\tly", "ph r V\ts aI s\tl i:");
result.add("pre-\tcli-\tni-\tcal", "ph r i: k\tl I\tn I\tk V l");
result.add("pre-\tclu-\tded", "ph r I k\tl u:\td V d");
result.add("pre-\tclu-\tding", "ph r I k\tl u:\td I N");
result.add("pre-\tclu-\tsion", "ph r I k\tl u:\tZ V n");
result.add("pre-\tclude", "ph r I k\tl u: d");
result.add("pre-\tcludes", "ph r I k\tl u: d z");
result.add("pre-\tco-\tcious", "ph r I\tk @U\tS V s");
result.add("pre-\tcon-\tceive", "ph r i:\tk V n\ts i: v");
result.add("pre-\tcon-\tceived", "ph r i:\tk V n\ts i: v d");
result.add("pre-\tcon-\tcep-\ttion", "ph r i:\tk V n\ts e p\tS V n");
result.add("pre-\tcon-\tcep-\ttions", "ph r i:\tk V n\ts e p\tS V n z");
result.add("pre-\tcon-\tdi-\ttion", "ph r i:\tk V n\td I\tS V n");
result.add("pre-\tcon-\tdi-\ttions", "ph r i:\tk V n\td I\tS V n z");
result.add("pre-\tcook", "ph r i:\tk U k");
result.add("pre-\tcooked", "ph r i:\tk U k t");
result.add("pre-\tcrash", "ph r i: k\tr { S");
result.add("pre-\tde-\tces-\tsor", "ph r e\td V\ts e\ts @r");
result.add("pre-\tde-\tces-\tsors", "ph r e\td V\ts e\ts @r z");
result.add("pre-\tde-\tces-\tsor's", "ph r e\td V\ts e\ts @r z");
result.add("pre-\tde-\tter-\tmine", "ph r i:\td i:\tt @r\tm I n");
result.add("pre-\tde-\tter-\tmined", "ph r i:\td i:\tt @r\tm I n d");
result.add("pre-\tdes-\tti-\tna-\ttion", "ph r i:\td e s\tt I\tn eI\tS V n");
result.add("pre-\tdes-\ttine", "ph r i:\td e s\tt I n");
result.add("pre-\tdes-\ttined", "ph r i:\td e s\tt I n d");
result.add("pre-\tdi-\tca-\tment", "ph r V\td I\tk V\tm V n t");
result.add("pre-\tdi-\tca-\tments", "ph r V\td I\tk V\tm V n t s");
result.add("pre-\tdi-\tca-\tted", "ph r e\td I\tk eI\tt I d");
result.add("pre-\tdi-\tcate", "ph r e\td I\tk eI t");
result.add("pre-\tdi-\tcates", "ph r e\td I\tk eI t s");
result.add("pre-\tdi-\tlec-\ttion", "ph r e\td I\tl e k\tS V n");
result.add("pre-\tdi-\tlec-\ttions", "ph r e\td I\tl e k\tS V n z");
result.add("pre-\tdic-\tta-\tbi-\tli-\tty", "ph r V\td I k\tt V\tb I\tl V\tt i:");
result.add("pre-\tdic-\tta-\tble", "ph r V\td I k\tt V\tb V l");
result.add("pre-\tdic-\ttab-\tly", "ph r V\td I k\tt V b\tl i:");
result.add("pre-\tdic-\tted", "ph r V\td I k\tt V d");
result.add("pre-\tdic-\tting", "ph r V\td I k\tt I N");
result.add("pre-\tdic-\ttion", "ph r i:\td I k\tS V n");
result.add("pre-\tdic-\ttions", "ph r i:\td I k\tS V n z");
result.add("pre-\tdic-\ttive", "ph r V\td I k\tt I v");
result.add("pre-\tdic-\ttor", "ph r V\td I k\tt @r");
result.add("pre-\tdic-\ttors", "ph r V\td I k\tt @r z");
result.add("pre-\tdict", "ph r V\td I k t");
result.add("pre-\tdicts", "ph r V\td I k t s");
result.add("pre-\tdis-\tpo-\tsi-\ttion", "ph r i:\td I s\tp V\tz I\tS V n");
result.add("pre-\tdis-\tpo-\tsi-\ttions", "ph r i:\td I s\tp V\tz I\tS V n z");
result.add("pre-\tdis-\tpo-\tsing", "ph r i:\td I s\tp @U\tz I N");
result.add("pre-\tdis-\tpose", "ph r i:\td I s\tp @U z");
result.add("pre-\tdis-\tposed", "ph r i:\td I s\tp @U z d");
result.add("pre-\tdo-\tmi-\tna-\tted", "ph r V\td Q\tm V\tn eI\tt V d");
result.add("pre-\tdo-\tmi-\tna-\tting", "ph r V\td Q\tm V\tn eI\tt I N");
result.add("pre-\tdo-\tmi-\tnance", "ph r V\td Q\tm V\tn V n s");
result.add("pre-\tdo-\tmi-\tnant", "ph r V\td Q\tm V\tn V n t");
result.add("pre-\tdo-\tmi-\tnant-\tly", "ph r V\td Q\tm V\tn V n\tt l i:");
result.add("pre-\tdo-\tmi-\tnate", "ph r V\td Q\tm V\tn eI t");
result.add("pre-\tdo-\tmi-\tnates", "ph r V\td Q\tm V\tn eI t s");
result.add("pre-\te-\tlec-\ttion", "ph r i:\tV\tl e k\tS V n");
result.add("pre-\te-\tmi-\tnence", "ph r i:\te\tm I\tn e n s");
result.add("pre-\te-\tmi-\tnent", "ph r i:\te\tm I\tn e n t");
result.add("pre-\te-\txis-\tted", "ph r i:\tI g\tz I s\tt V d");
result.add("pre-\te-\txis-\tting", "ph r i:\tI g\tz I s\tt I N");
result.add("pre-\te-\txist", "ph r i:\tI g\tz I s t");
result.add("pre-\te-\txists", "ph r i:\tI g\tz I s t s");
result.add("pre-\temp-\tted", "ph r i:\te m\tp t V d");
result.add("pre-\temp-\tting", "ph r i:\te m\tp t I N");
result.add("pre-\temp-\ttion", "ph r i:\te m\tp S V n");
result.add("pre-\temp-\ttive", "ph r i:\te m\tp t I v");
result.add("pre-\temp-\ttive-\tly", "ph r i:\te m\tp t I v\tl i:");
result.add("pre-\tempt", "ph r i:\te m p t");
result.add("pre-\tfab", "ph r i:\tf { b");
result.add("pre-\tfab-\tri-\tca-\tted", "ph r i:\tf { b\tr I\tk eI\tt V d");
result.add("pre-\tfab-\tri-\tca-\ttion", "ph r i:\tf { b\tr I\tk eI\tS V n");
result.add("pre-\tfab-\tri-\tcate", "ph r i:\tf { b\tr I\tk eI t");
result.add("pre-\tfabs", "ph r i:\tf { b z");
result.add("pre-\tface", "ph r e\tf V s");
result.add("pre-\tfaced", "ph r e\tf V s t");
result.add("pre-\tfe-\tra-\tble", "ph r e\tf @r\tV\tb V l");
result.add("pre-\tfe-\trab-\tly", "ph r e\tf @r\tV b\tl i:");
result.add("pre-\tfe-\tren-\tces", "ph r e\tf @r\tV n\ts V z");
result.add("pre-\tfe-\tren-\ttial", "ph r e\tf @r\te n\ttS V l");
result.add("pre-\tfe-\tren-\ttial-\tly", "ph r e\tf @r\te n\ttS V\tl i:");
result.add("pre-\tfe-\trence", "ph r e\tf @r\tV n s");
result.add("pre-\tfec-\ttu-\tral", "ph r i:\tf e k\ttS @r\tV l");
result.add("pre-\tfec-\tture", "ph r i:\tf e k\ttS @r");
result.add("pre-\tfect", "ph r i:\tf e k t");
result.add("pre-\tfer", "ph r V\tf @r");
result.add("pre-\tfer-\tring", "ph r V\tf @r\tI N");
result.add("pre-\tfered", "ph r V\tf @r d");
result.add("pre-\tferred", "ph r V\tf @r d");
result.add("pre-\tfers", "ph r V\tf @r z");
result.add("pre-\tfix", "ph r i:\tf I k s");
result.add("pre-\tfron-\ttal", "ph r i: f\tr V n\tt V l");
result.add("pre-\this-\tto-\tric", "ph r i:\th I s\tt O@\tI k");
result.add("pre-\tho-\tli-\tday", "ph r i:\th O:\tl I\td eI");
result.add("pre-\tig-\tni-\ttion", "ph r i:\tV g\tn I\tS V n");
result.add("pre-\tju-\tdi-\tces", "ph r e\tdZ V\td V\ts V z");
result.add("pre-\tju-\tdi-\tcial", "ph r e\tdZ V\td V\tS V l");
result.add("pre-\tju-\tdi-\tcing", "ph r e\tdZ V\td V\ts I N");
result.add("pre-\tju-\tdice", "ph r e\tdZ V\td V s");
result.add("pre-\tju-\tdiced", "ph r e\tdZ V\td V s t");
result.add("pre-\tjudg-\tment", "ph r i:\tdZ V dZ\tm V n t");
result.add("pre-\tjudge", "ph r i:\tdZ V dZ");
result.add("pre-\tjudged", "ph r i:\tdZ V dZ d");
result.add("pre-\tkin-\tder-\tgar-\tten", "ph r i:\tk I n\td @r\tg Q\td V n");
result.add("pre-\tlate", "ph r e\tl V t");
result.add("pre-\tlates", "ph r e\tl V t s");
result.add("pre-\tli-\tmi-\tna-\tri-\tly", "ph r V\tl I\tm I\tn e@\tV\tl i:");
result.add("pre-\tli-\tmi-\tna-\tries", "ph r V\tl I\tm I\tn e@\ti: z");
result.add("pre-\tli-\tmi-\tna-\try", "ph r V\tl I\tm I\tn e@\ti:");
result.add("pre-\tlim", "ph r V\tl I m");
result.add("pre-\tlims", "ph r i:\tl I m z");
result.add("pre-\tlude", "ph r eI\tl u: d");
result.add("pre-\tludes", "ph r eI\tl u: d z");
result.add("pre-\tma-\tri-\ttal", "ph r i:\tm e@\tI\tt V l");
result.add("pre-\tma-\trin", "ph r e\tm @r\tI n");
result.add("pre-\tma-\tture", "ph r i:\tm V\ttS U@");
result.add("pre-\tma-\tture-\tly", "ph r i:\tm V\ttS U@\tl i:");
result.add("pre-\tmar-\tket", "ph r i:\tm Q@\tk V t");
result.add("pre-\tmi-\tses", "ph r e\tm I\ts V z");
result.add("pre-\tmi-\tum", "ph r i:\tm i:\tV m");
result.add("pre-\tmi-\tums", "ph r i:\tm i:\tV m z");
result.add("pre-\tmie-\tring", "ph r e\tm I@\tI N");
result.add("pre-\tmier", "ph r e\tm I@");
result.add("pre-\tmier-\tship", "ph r e\tm I@\tS I p");
result.add("pre-\tmiere", "ph r e\tm I@");
result.add("pre-\tmiered", "ph r e\tm I@ d");
result.add("pre-\tmieres", "ph r e\tm I@ z");
result.add("pre-\tmiers", "ph r e\tm I@ z");
result.add("pre-\tmier's", "ph r e\tm I@ z");
result.add("pre-\tmise", "ph r e\tm I s");
result.add("pre-\tmised", "ph r e\tm I s t");
result.add("pre-\tmo-\tdern", "ph r i:\tm O:\td @r n");
result.add("pre-\tmo-\tni-\ttion", "ph r e\tm V\tn I\tS V n");
result.add("pre-\tmo-\tni-\tto-\try", "ph r V\tm V\tn V\tt @r\ti:");
result.add("pre-\tna-\ttal", "ph r i:\tn eI\tt V l");
result.add("pre-\tnup-\ttial", "ph r i:\tn V p\tS V l");
result.add("pre-\toc-\tcu-\tpa-\ttion", "ph r i:\tQ k\tj V\tp eI\tS V n");
result.add("pre-\toc-\tcu-\tpa-\ttions", "ph r i:\tQ k\tj V\tp eI\tS V n z");
result.add("pre-\toc-\tcu-\tpied", "ph r i:\tQ k\tj V\tp aI d");
result.add("pre-\toc-\tcu-\tpies", "ph r i:\tQ k\tj V\tp aI z");
result.add("pre-\toc-\tcu-\tpy", "ph r i:\tQ k\tj V\tp aI");
result.add("pre-\tor-\tdain", "ph r i:\tO@\td eI n");
result.add("pre-\tor-\tdained", "ph r i:\tO@\td eI n d");
result.add("pre-\tpa-\tra-\ttion", "ph r e\tp @r\teI\tS V n");
result.add("pre-\tpa-\tra-\ttions", "ph r e\tp @r\teI\tS V n z");
result.add("pre-\tpa-\tra-\tto-\try", "ph r e\tp e@\tV\tt O@\ti:");
result.add("pre-\tpa-\tred-\tness", "ph r i:\tp e@\tV d\tn V s");
result.add("pre-\tpa-\trer", "ph r i:\tp e@\t@r");
result.add("pre-\tpa-\trers", "ph r i:\tp e@\t@r z");
result.add("pre-\tpa-\tring", "ph r i:\tp e@\tI N");
result.add("pre-\tpac-\tkage", "ph r i:\tp {\tk V dZ");
result.add("pre-\tpac-\tkaged", "ph r i:\tp {\tk V dZ d");
result.add("pre-\tpaid", "ph r i:\tp eI d");
result.add("pre-\tpare", "ph r i:\tp e@");
result.add("pre-\tpared", "ph r i:\tp e@ d");
result.add("pre-\tpares", "ph r i:\tp e@ z");
result.add("pre-\tpay", "ph r i:\tp eI");
result.add("pre-\tpay-\ting", "ph r i:\tp eI\tI N");
result.add("pre-\tpay-\tment", "ph r i:\tp eI\tm V n t");
result.add("pre-\tpay-\tments", "ph r i:\tp eI\tm V n t s");
result.add("pre-\tplan-\tning", "ph r i: p\tl {\tn I N");
result.add("pre-\tponde-\trance", "ph r i:\tp Q n\td r V n s");
result.add("pre-\tpos-\tte-\trous", "ph r V\tp Q s\tt @r\tV s");
result.add("pre-\tre-\tcor-\tded", "ph r i:\tr i:\tk O@\td V d");
result.add("pre-\tre-\tcord", "ph r i:\tr i:\tk O@ d");
result.add("pre-\tre-\tqui-\tsite", "ph r i:\tr e k\tw I\tz I t");
result.add("pre-\tre-\tqui-\tsites", "ph r i:\tr e k\tw I\tz I t s");
result.add("pre-\tro-\tga-\ttive", "ph r I@\tQ\tg V\tt I v");
result.add("pre-\tro-\tga-\ttives", "ph r I@\tQ\tg V\tt I v z");
result.add("pre-\tsa-\tges", "ph r e\ts I\tdZ V z");
result.add("pre-\tsa-\tging", "ph r e\ts I\tdZ I N");
result.add("pre-\tsage", "ph r e\ts I dZ");
result.add("pre-\tsaged", "ph r e\ts I dZ d");
result.add("pre-\tsale", "ph r i:\ts eI l");
result.add("pre-\tschoo-\tler", "ph r i: s\tk u:\tl @r");
result.add("pre-\tschoo-\tlers", "ph r i: s\tk u:\tl @r z");
result.add("pre-\tschool", "ph r i: s\tk u: l");
result.add("pre-\tschools", "ph r i: s\tk u: l z");
result.add("pre-\tsci-\tence", "ph r i:\tS i:\tV n s");
result.add("pre-\tsci-\tent", "ph r e\ts i:\tV n t");
result.add("pre-\tscott", "ph r e s\tk Q t");
result.add("pre-\tscri-\tber", "ph r i: s\tk r aI\tb @r");
result.add("pre-\tscri-\tbers", "ph r i: s\tk r aI\tb @r z");
result.add("pre-\tscri-\tbing", "ph r i: s\tk r aI\tb I N");
result.add("pre-\tscribe", "ph r V s\tk r aI b");
result.add("pre-\tscribed", "ph r i: s\tk r aI b d");
result.add("pre-\tscribes", "ph r i: s\tk r aI b z");
result.add("pre-\tscrip-\ttion", "ph r V s\tk r I p\tS V n");
result.add("pre-\tscrip-\ttions", "ph r V s\tk r I p\tS V n z");
result.add("pre-\tsen-\tces", "ph r e\tz V n\ts V z");
result.add("pre-\tsen-\tta-\tble", "ph r V\tz e n\tt V\tb V l");
result.add("pre-\tsen-\tta-\ttion", "ph r e\tz V n\tt eI\tS V n");
result.add("pre-\tsen-\tta-\ttions", "ph r e\tz V n\tt eI\tS V n z");
result.add("pre-\tsen-\tted", "ph r i:\tz e n\tt V d");
result.add("pre-\tsen-\tter", "ph r e\tz V n\tt @r");
result.add("pre-\tsen-\tters", "ph r e\tz V n\tt @r z");
result.add("pre-\tsen-\tting", "ph r V\tz e n\tt I N");
result.add("pre-\tsence", "ph r e\tz V n s");
result.add("pre-\tsent", "ph r e\tz V n t");
result.add("pre-\tsent-\tly", "ph r e\tz V n\tt l i:");
result.add("pre-\tsent-\tment", "ph r i:\tz e n\tt m V n t");
result.add("pre-\tsents", "ph r e\tz V n t s");
result.add("pre-\tser-\tva-\ttio-\tnist", "ph r e\tz @r\tv eI\tS V\tn I s t");
result.add("pre-\tser-\tva-\ttio-\tnists", "ph r e\tz @r\tv eI\tS V\tn I s t s");
result.add("pre-\tser-\tva-\ttion", "ph r e\tz @r\tv eI\tS V n");
result.add("pre-\tser-\tva-\ttive", "ph r i:\tz @r\tv V\tt I v");
result.add("pre-\tser-\tva-\ttives", "ph r V\tz @r\tv V\tt I v z");
result.add("pre-\tser-\tver", "ph r i:\tz @r\tv @r");
result.add("pre-\tser-\tvers", "ph r i:\tz @r\tv @r z");
result.add("pre-\tser-\tving", "ph r V\tz @r\tv I N");
result.add("pre-\tserve", "ph r V\tz @r v");
result.add("pre-\tserved", "ph r V\tz @r v d");
result.add("pre-\tserves", "ph r V\tz @r v z");
result.add("pre-\tset", "ph r i:\ts e t");
result.add("pre-\tsi-\tded", "ph r V\tz aI\td V d");
result.add("pre-\tsi-\tden-\tcies", "ph r e\tz I\td e n\ts i: z");
result.add("pre-\tsi-\tden-\tcy", "ph r e\tz I\td e n\ts i:");
result.add("pre-\tsi-\tden-\tcy's", "ph r e\tz I\td e n\ts i: z");
result.add("pre-\tsi-\tden-\ttial", "ph r e\tz I\td e n\ttS V l");
result.add("pre-\tsi-\tden-\ttial-\tly", "ph r e\ts I\td e n\ttS V\tl i:");
result.add("pre-\tsi-\tdent", "ph r e\tz I\td e n t");
result.add("pre-\tsi-\tdents", "ph r e\tz I\td e n t s");
result.add("pre-\tsi-\tdent's", "ph r e\tz I\td e n t s");
result.add("pre-\tsi-\tdents'", "ph r e\tz I\td e n t s");
result.add("pre-\tsi-\tdi-\to", "ph r V\ts I\td i:\t@U");
result.add("pre-\tsi-\tdi-\tum", "ph r V\ts I\td i:\tV m");
result.add("pre-\tsi-\tding", "ph r V\tz aI\td I N");
result.add("pre-\tside", "ph r V\tz aI d");
result.add("pre-\tsides", "ph r V\tz aI d z");
result.add("pre-\tsu-\tmab-\tly", "ph r V\tz u:\tm V b\tl i:");
result.add("pre-\tsu-\tming", "ph r V\tz u:\tm I N");
result.add("pre-\tsume", "ph r V\tz u: m");
result.add("pre-\tsumed", "ph r V\tz u: m d");
result.add("pre-\tsumes", "ph r V\tz u: m z");
result.add("pre-\tsump-\ttion", "ph r V\tz V m\tp S V n");
result.add("pre-\tsump-\ttions", "ph r V\tz V m\tp S V n z");
result.add("pre-\tsump-\ttive", "ph r i:\tz V m\tp t I v");
result.add("pre-\tsump-\ttu-\tous", "ph r V\tz V m\tp tS V\tw V s");
result.add("pre-\tsup-\tpo-\tses", "ph r i:\ts V\tp @U\tz V z");
result.add("pre-\tsup-\tpo-\tsi-\ttion", "ph r i:\ts V\tp V\tz I\tS V n");
result.add("pre-\tsup-\tpose", "ph r i:\ts V\tp @U z");
result.add("pre-\ttax", "ph r i:\tt { k s");
result.add("pre-\tteen", "ph r i:\tt i: n");
result.add("pre-\tteens", "ph r i:\tt i: n z");
result.add("pre-\tten-\tded", "ph r i:\tt e n\td V d");
result.add("pre-\tten-\tder", "ph r i:\tt e n\td @r");
result.add("pre-\tten-\tders", "ph r i:\tt e n\td @r z");
result.add("pre-\tten-\tding", "ph r i:\tt e n\td I N");
result.add("pre-\tten-\tses", "ph r i:\tt e n\ts V z");
result.add("pre-\tten-\tsion", "ph r i:\tt e n\tS V n");
result.add("pre-\tten-\tsions", "ph r V\tt e n\tS V n z");
result.add("pre-\tten-\ttious", "ph r i:\tt e n\tS V s");
result.add("pre-\ttend", "ph r i:\tt e n d");
result.add("pre-\ttends", "ph r i:\tt e n d z");
result.add("pre-\ttense", "ph r i:\tt e n s");
result.add("pre-\tterm", "ph r i:\tt @r m");
result.add("pre-\ttri-\tal", "ph r i: t\tr aI\tV l");
result.add("pre-\tva-\tlence", "ph r e\tv V\tl V n s");
result.add("pre-\tva-\tlent", "ph r e\tv V\tl V n t");
result.add("pre-\tvai-\tling", "ph r I\tv eI\tl I N");
result.add("pre-\tvail", "ph r I\tv eI l");
result.add("pre-\tvailed", "ph r I\tv eI l d");
result.add("pre-\tvails", "ph r I\tv eI l z");
result.add("pre-\tven-\tta-\tble", "ph r I\tv e n\tt V\tb V l");
result.add("pre-\tven-\tta-\ttive", "ph r i:\tv e n\tt V\tt I v");
result.add("pre-\tven-\tta-\ttives", "ph r i:\tv e n\tt V\tt I v z");
result.add("pre-\tven-\tted", "ph r I\tv e n\tt V d");
result.add("pre-\tven-\tting", "ph r I\tv e n\tt I N");
result.add("pre-\tven-\ttion", "ph r i:\tv e n\tS V n");
result.add("pre-\tven-\ttive", "ph r I\tv e n\tt I v");
result.add("pre-\tvent", "ph r I\tv e n t");
result.add("pre-\tvents", "ph r I\tv e n t s");
result.add("pre-\tvi-\tous", "ph r i:\tv i:\tV s");
result.add("pre-\tvi-\tous-\tly", "ph r i:\tv i:\tV s\tl i:");
result.add("pre-\tview", "ph r i: v\tj u:");
result.add("pre-\tview-\ting", "ph r i: v\tj u:\tI N");
result.add("pre-\tviewed", "ph r i: v\tj u: d");
result.add("pre-\tviews", "ph r i: v\tj u: z");
result.add("pre-\tvin", "ph r e\tv I n");
result.add("pre-\tvost", "ph r eI\tv @U s t");
result.add("pre-\twar", "ph r i:\tw O@");
result.add("pre-\twett", "ph r u:\te t");
result.add("pre-\tyer", "ph r eI\t@r");
result.add("pre-\tying", "ph r eI\tI N");
result.add("prea-\tcher", "ph r i:\ttS @r");
result.add("prea-\tchers", "ph r i:\ttS @r z");
result.add("prea-\tcher's", "ph r i:\ttS @r z");
result.add("prea-\tches", "ph r i:\ttS V z");
result.add("prea-\tching", "ph r i:\ttS I N");
result.add("prea-\tchy", "ph r i:\ttS i:");
result.add("preach", "ph r i: tS");
result.add("preached", "ph r i: tS t");
result.add("preak-\tness", "ph r i: k\tn V s");
result.add("preb-\tble", "ph r e\tb V l");
result.add("pree", "ph r i:");
result.add("pree-\tning", "ph r i:\tn I N");
result.add("preen", "ph r i: n");
result.add("preened", "ph r i: n d");
result.add("preg-\tnan-\tcies", "ph r e g\tn V n\ts i: z");
result.add("preg-\tnan-\tcy", "ph r e g\tn V n\ts i:");
result.add("preg-\tnant", "ph r e g\tn V n t");
result.add("prei-\tser", "ph r aI\ts @r");
result.add("prem", "ph r e m");
result.add("pren-\tder-\tgast", "ph r e n\td @r\tg { s t");
result.add("pren-\tsa", "ph r e n\ts V");
result.add("pren-\ttice", "ph r e n\tt I s");
result.add("pren-\ttiss", "ph r e n\tt I s");
result.add("prep", "ph r e p");
result.add("prep-\tpie", "ph r e\tp i:");
result.add("prep-\tping", "ph r e\tp I N");
result.add("prep-\tpy", "ph r e\tp i:");
result.add("prepped", "ph r e p t");
result.add("pres", "ph r e z");
result.add("pres-\tby-\tte-\tri-\tan", "ph r e s\tb V\tt I@\ti:\tV n");
result.add("pres-\tby-\tte-\tri-\tans", "ph r e s\tb V\tt I@\ti:\tV n z");
result.add("pres-\tley", "ph r e s\tl i:");
result.add("pres-\tley's", "ph r e s\tl i: z");
result.add("pres-\tplit", "ph r i: s\tp l I t");
result.add("pres-\tsel", "ph r e\ts V l");
result.add("pres-\tser", "ph r e\ts @r");
result.add("pres-\tser's", "ph r e\ts @r z");
result.add("pres-\tses", "ph r e\ts V z");
result.add("pres-\tsey", "ph r e\ts i:");
result.add("pres-\tsing", "ph r e\ts I N");
result.add("pres-\ts's", "ph r e\ts V z");
result.add("pres-\tsu-\tri-\tza-\ttion", "ph r e\tS @r\tI\tz eI\tS V n");
result.add("pres-\tsu-\tri-\tzes", "ph r e\tS @r\taI\tz V z");
result.add("pres-\tsu-\tring", "ph r e\tS @r\tI N");
result.add("pres-\tsu-\trize", "ph r e\tS @r\taI z");
result.add("pres-\tsu-\trized", "ph r e\tS @r\taI z d");
result.add("pres-\tsure", "ph r e\tS @r");
result.add("pres-\tsured", "ph r e\tS @r d");
result.add("pres-\tsures", "ph r e\tS @r z");
result.add("pres-\tsure's", "ph r e\tS @r z");
result.add("pres-\tti-\tgious", "ph r e s\tt I\tdZ V s");
result.add("pres-\ttige", "ph r e s\tt i: Z");
result.add("pres-\tto", "ph r e s\tt @U");
result.add("pres-\tton", "ph r e s\tt V n");
result.add("pres-\tton's", "ph r e s\tt V n z");
result.add("press", "ph r e s");
result.add("press-\tboard", "ph r e s\tb O@ d");
result.add("press-\tbur-\tger", "ph r e s\tb @r\tg @r");
result.add("press-\tly", "ph r e s\tl i:");
result.add("press-\tman", "ph r e s\tm V n");
result.add("pressed", "ph r e s t");
result.add("prest", "ph r e s t");
result.add("prest-\twich", "ph r e s\tt w I tS");
result.add("pret", "ph r e t");
result.add("pret-\tti-\ter", "ph r I\tt i:\t@r");
result.add("pret-\tti-\test", "ph r I\tt i:\tV s t");
result.add("pret-\tties", "ph r I\tt i: z");
result.add("pret-\tty", "ph r I\tt i:");
result.add("pret-\tzel", "ph r e t\tz V l");
result.add("pret-\tzels", "ph r e t\tz V l z");
result.add("preuss", "ph r u: s");
result.add("prew", "ph r u:");
result.add("prew-\titt", "ph r u:\tI t");
result.add("prey", "ph r eI");
result.add("preyed", "ph r eI d");
result.add("preys", "ph r eI z");
result.add("pri", "ph r aI");
result.add("pri-\tam", "ph r aI\t{ m");
result.add("pri-\tam's", "ph r aI\t{ m z");
result.add("pri-\tcer", "ph r aI\ts @r");
result.add("pri-\tces", "ph r aI\ts V z");
result.add("pri-\tce's", "ph r aI\ts V z");
result.add("pri-\tcey", "ph r aI\ts i:");
result.add("pri-\tchard", "ph r I\ttS @r d");
result.add("pri-\tci-\ter", "ph r aI\ts i:\t@r");
result.add("pri-\tci-\test", "ph r aI\ts i:\tV s t");
result.add("pri-\tcing", "ph r aI\ts I N");
result.add("pri-\tded", "ph r aI\td V d");
result.add("pri-\ter", "ph r aI\t@r");
result.add("pri-\tma", "ph r i:\tm V");
result.add("pri-\tma-\tcy", "ph r aI\tm V\ts i:");
result.add("pri-\tma-\tri-\tly", "ph r aI\tm e@\tI\tl i:");
result.add("pri-\tma-\tries", "ph r aI\tm e@\ti: z");
result.add("pri-\tma-\try", "ph r aI\tm e@\ti:");
result.add("pri-\tma-\tve-\tra", "ph r i:\tm Q\tv e@\tV");
result.add("pri-\tmal", "ph r aI\tm V l");
result.add("pri-\tmate", "ph r aI\tm eI t");
result.add("pri-\tmates", "ph r aI\tm eI t s");
result.add("pri-\tme-\tval", "ph r aI\tm i:\tv V l");
result.add("pri-\tmer", "ph r aI\tm @r");
result.add("pri-\tmers", "ph r aI\tm @r z");
result.add("pri-\tmi-\tti-\tvis-\ttic", "ph r I\tm I\tt I\tv I s\tt I k");
result.add("pri-\tmi-\ttive", "ph r I\tm I\tt I v");
result.add("pri-\tming", "ph r aI\tm I N");
result.add("pri-\tmo", "ph r i:\tm @U");
result.add("pri-\tmor-\tdi-\tal", "ph r I\tm O@\td i:\tV l");
result.add("pri-\tmo's", "ph r i:\tm @U z");
result.add("pri-\tmus", "ph r aI\tm V s");
result.add("pri-\tnos", "ph r i:\tn @U s");
result.add("pri-\to-\tri-\tti-\tzes", "ph r aI\tO@\tI\tt aI\tz V z");
result.add("pri-\to-\tri-\tti-\tzing", "ph r aI\tO@\tI\tt aI\tz I N");
result.add("pri-\to-\tri-\tties", "ph r aI\tO@\tI\tt i: z");
result.add("pri-\to-\tri-\ttize", "ph r aI\tO@\tI\tt aI z");
result.add("pri-\to-\tri-\ttized", "ph r aI\tO@\tI\tt aI z d");
result.add("pri-\to-\tri-\tty", "ph r aI\tO@\tI\tt i:");
result.add("pri-\to-\try", "ph r aI\t@r\ti:");
result.add("pri-\tor", "ph r aI\t@r");
result.add("pri-\tors", "ph r aI\t@r z");
result.add("pri-\tsm", "ph r I\tz V m");
result.add("pri-\tso-\tner", "ph r I\tz V\tn @r");
result.add("pri-\tso-\tners", "ph r I\tz V\tn @r z");
result.add("pri-\tso-\tner's", "ph r I\tz V\tn @r z");
result.add("pri-\tson", "ph r I\tz V n");
result.add("pri-\tsoned", "ph r I\tz V n d");
result.add("pri-\tsons", "ph r I\tz V n z");
result.add("pri-\tson's", "ph r I\tz V n z");
result.add("pri-\tva-\tcies", "ph r aI\tv V\ts i: z");
result.add("pri-\tva-\tcy", "ph r aI\tv V\ts i:");
result.add("pri-\tva-\tti-\tsa-\ttion", "ph r aI\tv V\tt I\tz eI\tS V n");
result.add("pri-\tva-\tti-\tza-\ttion", "ph r aI\tv V\tt I\tz eI\tS V n");
result.add("pri-\tva-\tti-\tza-\ttions", "ph r aI\tv V\tt I\tz eI\tS V n z");
result.add("pri-\tva-\tti-\tzing", "ph r aI\tv V\tt aI\tz I N");
result.add("pri-\tva-\ttion", "ph r aI\tv eI\tS V n");
result.add("pri-\tva-\ttions", "ph r aI\tv eI\tS V n z");
result.add("pri-\tva-\ttize", "ph r I\tv V\tt aI z");
result.add("pri-\tva-\ttized", "ph r aI\tv V\tt aI z d");
result.add("pri-\tvate", "ph r aI\tv V t");
result.add("pri-\tvate-\tly", "ph r aI\tv V t\tl i:");
result.add("pri-\tvates", "ph r aI\tv V t s");
result.add("pri-\tvi-\tleges", "ph r I v\tl e\tdZ V z");
result.add("pri-\tvy", "ph r I\tv i:");
result.add("pri-\tzes", "ph r aI\tz V z");
result.add("prib-\tble", "ph r I\tb V l");
result.add("pric-\tkle-\tback", "ph r I\tk V l\tb { k");
result.add("price", "ph r aI s");
result.add("price-\tless", "ph r aI s\tl V s");
result.add("priced", "ph r aI s t");
result.add("prick", "ph r I k");
result.add("prick-\tly", "ph r I k\tl i:");
result.add("pricked", "ph r I k t");
result.add("pricks", "ph r I k s");
result.add("prid-\tdy", "ph r I\td i:");
result.add("pride", "ph r aI d");
result.add("prides", "ph r aI d z");
result.add("prie-\tur", "ph r i:\t@r");
result.add("priebe", "ph r i: b");
result.add("pried", "ph r aI d");
result.add("pries", "ph r aI z");
result.add("pries-\ttess", "ph r i: s\tt V s");
result.add("priest", "ph r i: s t");
result.add("priest-\thood", "ph r i: s\tt h U d");
result.add("priest-\tley", "ph r i: s\tt l i:");
result.add("priest-\tly", "ph r i: s\tt l i:");
result.add("priests", "ph r i: s t s");
result.add("priest's", "ph r i: s t s");
result.add("prig", "ph r I g");
result.add("prill", "ph r I l");
result.add("prim", "ph r I m");
result.add("prim-\tly", "ph r I m\tl i:");
result.add("prim-\tmer", "ph r I\tm @r");
result.add("prim-\tro-\tses", "ph r I m\tr @U\tz V z");
result.add("prim-\trose", "ph r I m\tr @U z");
result.add("prime", "ph r aI m");
result.add("prime-\ttime", "ph r aI m\tt aI m");
result.add("primed", "ph r aI m d");
result.add("primes", "ph r aI m z");
result.add("prime's", "ph r aI m z");
result.add("primp", "ph r I m p");
result.add("prin-\tces", "ph r I n\ts V z");
result.add("prin-\tce's", "ph r I n\ts V z");
result.add("prin-\tces-\tses", "ph r I n\ts e\ts V z");
result.add("prin-\tces-\ts's", "ph r I n\ts e\ts V z");
result.add("prin-\tcess", "ph r I n\ts e s");
result.add("prin-\tci-\tpa-\tli-\tties", "ph r I n\ts I\tp {\tl V\tt i: z");
result.add("prin-\tci-\tpa-\tli-\tty", "ph r I n\ts I\tp {\tl V\tt i:");
result.add("prin-\tci-\tpal", "ph r I n\ts I\tp V l");
result.add("prin-\tci-\tpals", "ph r I n\ts I\tp V l z");
result.add("prin-\tci-\tpal's", "ph r I n\ts I\tp V l z");
result.add("prin-\tci-\tpe", "ph r i: n\ttS i:\tp i:");
result.add("prin-\tci-\tpi-\ta", "ph r I n\ts I\tp i:\tV");
result.add("prin-\tci-\tple", "ph r I n\ts I\tp V l");
result.add("prin-\tci-\tpled", "ph r I n\ts I\tp V l d");
result.add("prin-\tci-\tples", "ph r I n\ts I\tp V l z");
result.add("prin-\tcipal-\tly", "ph r I n\ts I p\tl i:");
result.add("prin-\tgle", "ph r I N\tg V l");
result.add("prin-\tta-\tble", "ph r I n\tt V\tb V l");
result.add("prin-\tted", "ph r I n\tt V d");
result.add("prin-\ttemps", "ph r I n\tt e m p s");
result.add("prin-\tter", "ph r I n\tt @r");
result.add("prin-\tters", "ph r I n\tt @r z");
result.add("prin-\tter's", "ph r I n\tt @r z");
result.add("prin-\tting", "ph r I n\tt I N");
result.add("prin-\ttings", "ph r I n\tt I N z");
result.add("prin-\tting's", "ph r I n\tt I N z");
result.add("prince", "ph r I n s");
result.add("prince-\tly", "ph r I n\ts l i:");
result.add("prince-\tton", "ph r I n\ts t V n");
result.add("prince-\tton's", "ph r I n\ts t V n z");
result.add("prince-\tville", "ph r I n\ts v I l");
result.add("prine", "ph r aI n");
result.add("print", "ph r I n t");
result.add("print-\tma-\tker", "ph r I n\tt m eI\tk @r");
result.add("print-\tma-\tkers", "ph r I n\tt m eI\tk @r z");
result.add("print-\tout", "ph r I n\tt aU t");
result.add("print-\touts", "ph r I n\tt aU t s");
result.add("prints", "ph r I n t s");
result.add("prinz", "ph r I n z");
result.add("pris", "ph r I s");
result.add("pris-\tcil-\tla", "ph r V\ts I\tl V");
result.add("pris-\tma-\ttic", "ph r I z\tm {\tt I k");
result.add("pris-\tsie", "ph r I\ts i:");
result.add("pris-\tsy", "ph r I\ts i:");
result.add("pris-\ttine", "ph r I s\tt i: n");
result.add("prit-\tchard", "ph r I\ttS @r d");
result.add("prit-\tchett", "ph r I\ttS e t");
result.add("privi-\tlege", "ph r I v\tl V dZ");
result.add("privi-\tleged", "ph r I v\tl V dZ d");
result.add("prix", "ph r i:");
result.add("prize", "ph r aI z");
result.add("prized", "ph r aI z d");
result.add("pro", "ph r @U");
result.add("pro-\tac-\ttive", "ph r @U\t{ k\tt I v");
result.add("pro-\tac-\ttive-\tly", "ph r @U\t{ k\tt I v\tl i:");
result.add("pro-\tba-\tbi-\tli-\tties", "ph r Q\tb V\tb I\tl V\tt i: z");
result.add("pro-\tba-\tbi-\tli-\tty", "ph r Q\tb V\tb I\tl V\tt i:");
result.add("pro-\tba-\tble", "ph r Q\tb V\tb V l");
result.add("pro-\tba-\ttio-\tna-\try", "ph r @U\tb eI\tS V\tn e@\ti:");
result.add("pro-\tba-\ttio-\tner", "ph r @U\tb eI\tS V\tn @r");
result.add("pro-\tba-\ttio-\tners", "ph r @U\tb eI\tS V\tn @r z");
result.add("pro-\tba-\ttion", "ph r @U\tb eI\tS V n");
result.add("pro-\tba-\ttive", "ph r @U\tb eI\tt I v");
result.add("pro-\tbab-\tly", "ph r Q\tb V b\tl i:");
result.add("pro-\tbate", "ph r @U\tb eI t");
result.add("pro-\tbe-\tne-\tcid", "ph r Q\tb e\tn V\ts V d");
result.add("pro-\tbi-\tty", "ph r @U\tb I\tt i:");
result.add("pro-\tbing", "ph r @U\tb I N");
result.add("pro-\tbo-\tscis", "ph r @U\tb Q\ts I s");
result.add("pro-\tcaine", "ph r @U\tk eI n");
result.add("pro-\tce-\tdu-\tral", "ph r V\ts i:\tdZ @r\tV l");
result.add("pro-\tce-\tdu-\tral-\tly", "ph r V\ts i:\tdZ @r\tV\tl i:");
result.add("pro-\tce-\tdure", "ph r V\ts i:\tdZ @r");
result.add("pro-\tce-\tdures", "ph r V\ts i:\tdZ @r z");
result.add("pro-\tcee-\tded", "ph r V\ts i:\td V d");
result.add("pro-\tcee-\tding", "ph r V\ts i:\td I N");
result.add("pro-\tcee-\tdings", "ph r @U\ts i:\td I N z");
result.add("pro-\tceed", "ph r V\ts i: d");
result.add("pro-\tceeds", "ph r V\ts i: d z");
result.add("pro-\tces-\tses", "ph r Q\ts e\ts V z");
result.add("pro-\tces-\tsing", "ph r Q\ts e\ts I N");
result.add("pro-\tces-\tsio-\tnal", "ph r V\ts e\tS V\tn V l");
result.add("pro-\tces-\tsion", "ph r V\ts e\tS V n");
result.add("pro-\tces-\tsions", "ph r @U\ts e\tS V n z");
result.add("pro-\tces-\tsor", "ph r Q\ts e\ts @r");
result.add("pro-\tces-\tsors", "ph r Q\ts e\ts @r z");
result.add("pro-\tces-\tsor's", "ph r Q\ts e\ts @r z");
result.add("pro-\tcess", "ph r Q\ts e s");
result.add("pro-\tcessed", "ph r Q\ts e s t");
result.add("pro-\tcon-\tsul", "ph r @U\tk Q n\ts V l");
result.add("pro-\tcra-\tsti-\tna-\tting", "ph r V k\tr { s\tt V\tn eI\tt I N");
result.add("pro-\tcra-\tsti-\tna-\ttion", "ph r V k\tr { s\tt V\tn eI\tS V n");
result.add("pro-\tcra-\tsti-\tnate", "ph r V k\tr { s\tt V\tn eI t");
result.add("pro-\tcre-\ta-\ttion", "ph r @U k\tr i:\teI\tS V n");
result.add("pro-\tcre-\tate", "ph r @U k\tr i:\teI t");
result.add("pro-\tcre-\tates", "ph r @U k\tr i:\teI t s");
result.add("pro-\tcu-\trer", "ph r @U k\tj U@\t@r");
result.add("pro-\tcu-\tring", "ph r @U k\tj U@\tI N");
result.add("pro-\tcure", "ph r @U k\tj U@");
result.add("pro-\tcure-\tment", "ph r @U k\tj U@\tm V n t");
result.add("pro-\tcure-\tments", "ph r @U k\tj U@\tm V n t s");
result.add("pro-\tcured", "ph r @U k\tj U@ d");
result.add("pro-\tdi-\tgal", "ph r Q\td I\tg V l");
result.add("pro-\tdi-\tgies", "ph r Q\td I\tdZ i: z");
result.add("pro-\tdi-\tgious", "ph r V\td I\tdZ V s");
result.add("pro-\tdi-\tgious-\tly", "ph r @U\td I\tdZ V s\tl i:");
result.add("pro-\tdi-\tgy", "ph r Q\td I\tdZ i:");
result.add("pro-\tdi-\tgy's", "ph r Q\td I\tdZ i: z");
result.add("pro-\tduc-\tti-\tvi-\tty", "ph r @U\td V k\tt I\tv V\tt i:");
result.add("pro-\tduc-\ttion", "ph r V\td V k\tS V n");
result.add("pro-\tducts", "ph r Q\td V k t s");
result.add("pro-\tduct's", "ph r Q\td V k t s");
result.add("pro-\tfa-\tna-\ttion", "ph r O:\tf V\tn eI\tS V n");
result.add("pro-\tfa-\tni-\tty", "ph r @U\tf {\tn I\tt i:");
result.add("pro-\tfane", "ph r @U\tf eI n");
result.add("pro-\tfes-\tses", "ph r V\tf e\ts V z");
result.add("pro-\tfes-\tsing", "ph r V\tf e\ts I N");
result.add("pro-\tfes-\tsio-\tna-\tli-\tsm", "ph r V\tf e\tS V\tn V\tl I\tz V m");
result.add("pro-\tfes-\tsio-\tna-\tlize", "ph r V\tf e\tS V\tn V\tl aI z");
result.add("pro-\tfes-\tsio-\tna-\tlized", "ph r V\tf e\tS V\tn V\tl aI z d");
result.add("pro-\tfes-\tsio-\tnal", "ph r V\tf e\tS V\tn V l");
result.add("pro-\tfes-\tsio-\tnal-\tly", "ph r V\tf e\tS V\tn V\tl i:");
result.add("pro-\tfes-\tsio-\tnals", "ph r V\tf e\tS V\tn V l z");
result.add("pro-\tfes-\tsion", "ph r V\tf e\tS V n");
result.add("pro-\tfes-\tsions", "ph r V\tf e\tS V n z");
result.add("pro-\tfes-\tsion's", "ph r V\tf e\tS V n z");
result.add("pro-\tfes-\tso-\tri-\tal", "ph r @U\tf V\ts O@\ti:\tV l");
result.add("pro-\tfes-\tsor", "ph r V\tf e\ts @r");
result.add("pro-\tfes-\tsor-\tship", "ph r V\tf e\ts @r\tS I p");
result.add("pro-\tfes-\tsors", "ph r V\tf e\ts @r z");
result.add("pro-\tfes-\tsor's", "ph r V\tf e\ts @r z");
result.add("pro-\tfess", "ph r V\tf e s");
result.add("pro-\tfessed", "ph r V\tf e s t");
result.add("pro-\tfi-\tcien-\tcy", "ph r V\tf I\tS V n\ts i:");
result.add("pro-\tfi-\tcient", "ph r Q\tf I\tS V n t");
result.add("pro-\tfi-\tling", "ph r @U\tf aI\tl I N");
result.add("pro-\tfi-\tta-\tbi-\tli-\tty", "ph r Q\tf I\tt V\tb I\tl I\tt i:");
result.add("pro-\tfi-\tta-\tble", "ph r Q\tf I\tt V\tb V l");
result.add("pro-\tfi-\ttab-\tly", "ph r Q\tf I\tt V b\tl i:");
result.add("pro-\tfi-\tted", "ph r Q\tf I\tt I d");
result.add("pro-\tfi-\ttee-\tring", "ph r Q\tf I\tt I@\tI N");
result.add("pro-\tfi-\tteer", "ph r Q\tf I\tt I@");
result.add("pro-\tfi-\tteers", "ph r Q\tf I\tt I@ z");
result.add("pro-\tfi-\tting", "ph r Q\tf I\tt I N");
result.add("pro-\tfile", "ph r @U\tf aI l");
result.add("pro-\tfiled", "ph r @U\tf aI l d");
result.add("pro-\tfiles", "ph r @U\tf aI l z");
result.add("pro-\tfit", "ph r Q\tf I t");
result.add("pro-\tfit-\tta-\tking", "ph r Q\tf I t\tt eI\tk I N");
result.add("pro-\tfits", "ph r Q\tf I t s");
result.add("pro-\tfli-\tga-\tcy", "ph r O: f\tl I\tg {\ts i:");
result.add("pro-\tfli-\tgate", "ph r O: f\tl I\tg eI t");
result.add("pro-\tfound", "ph r @U\tf aU n d");
result.add("pro-\tfound-\tly", "ph r @U\tf aU n\td l i:");
result.add("pro-\tfu-\tsion", "ph r V f\tj u:\tZ V n");
result.add("pro-\tfuse", "ph r V f\tj u: s");
result.add("pro-\tfuse-\tly", "ph r V f\tj u: s\tl i:");
result.add("pro-\tge-\tni-\ttor", "ph r @U\tdZ e\tn I\tt @r");
result.add("pro-\tge-\tny", "ph r Q\tdZ V\tn i:");
result.add("pro-\tges-\tte-\trone", "ph r @U\tdZ e s\tt @r\t@U n");
result.add("pro-\tges-\ttin", "ph r @U\tdZ e s\tt I n");
result.add("pro-\tgra-\tming", "ph r @U g\tr {\tm I N");
result.add("pro-\tgram", "ph r @U g\tr { m");
result.add("pro-\tgram-\tma-\tble", "ph r @U g\tr {\tm V\tb V l");
result.add("pro-\tgram-\tma-\ttic", "ph r Q g\tr V\tm {\tt I k");
result.add("pro-\tgram-\tmer", "ph r @U g\tr {\tm @r");
result.add("pro-\tgram-\tmers", "ph r @U g\tr {\tm @r z");
result.add("pro-\tgram-\tming", "ph r @U g\tr {\tm I N");
result.add("pro-\tgramme", "ph r @U g\tr { m");
result.add("pro-\tgrammed", "ph r @U g\tr { m d");
result.add("pro-\tgrams", "ph r @U g\tr { m z");
result.add("pro-\tgram's", "ph r @U g\tr { m z");
result.add("pro-\tgres-\tses", "ph r Q g\tr e\ts V z");
result.add("pro-\tgres-\tsi-\tvi-\tty", "ph r Q g\tr e\ts I\tv V\tt i:");
result.add("pro-\tgres-\tsing", "ph r V g\tr e\ts I N");
result.add("pro-\tgres-\tsion", "ph r V g\tr e\tS V n");
result.add("pro-\tgres-\tsive", "ph r V g\tr e\ts I v");
result.add("pro-\tgres-\tsive-\tly", "ph r Q g\tr e\ts I v\tl i:");
result.add("pro-\tgres-\tsives", "ph r Q g\tr e\ts I v z");
result.add("pro-\tgress", "ph r Q g\tr e s");
result.add("pro-\tgressed", "ph r V g\tr e s t");
result.add("pro-\thi-\tbi-\tted", "ph r @U\th I\tb I\tt I d");
result.add("pro-\thi-\tbi-\tting", "ph r @U\th I\tb I\tt I N");
result.add("pro-\thi-\tbi-\ttion", "ph r @U\tI\tb I\tS V n");
result.add("pro-\thi-\tbi-\ttions", "ph r @U\tI\tb I\tS V n z");
result.add("pro-\thi-\tbi-\ttion's", "ph r @U\tI\tb I\tS V n z");
result.add("pro-\thi-\tbi-\ttive", "ph r @U\th I\tb I\tt I v");
result.add("pro-\thi-\tbi-\ttive-\tly", "ph r @U\th I\tb I\tt I v\tl i:");
result.add("pro-\thi-\tbi-\tto-\try", "ph r @U\th I\tb I\tt O@\ti:");
result.add("pro-\thi-\tbit", "ph r @U\th I\tb I t");
result.add("pro-\thi-\tbits", "ph r @U\th I\tb I t s");
result.add("pro-\tjec-\tted", "ph r V\tdZ e k\tt V d");
result.add("pro-\tjec-\ttile", "ph r V\tdZ e k\tt V l");
result.add("pro-\tjec-\ttiles", "ph r V\tdZ e k\tt V l z");
result.add("pro-\tjec-\tting", "ph r V\tdZ e k\tt I N");
result.add("pro-\tjec-\ttion", "ph r V\tdZ e k\tS V n");
result.add("pro-\tjec-\ttions", "ph r V\tdZ e k\tS V n z");
result.add("pro-\tjec-\ttive", "ph r V\tdZ e k\tt I v");
result.add("pro-\tjec-\ttor", "ph r V\tdZ e k\tt @r");
result.add("pro-\tjec-\ttors", "ph r V\tdZ e k\tt @r z");
result.add("pro-\tject", "ph r Q\tdZ e k t");
result.add("pro-\tjects", "ph r Q\tdZ e k t s");
result.add("pro-\tject's", "ph r Q\tdZ e k t s");
result.add("pro-\tko-\tfiev", "ph r Q\tk @U\tf i: v");
result.add("pro-\tlac-\ttin", "ph r @U\tl { k\tt I n");
result.add("pro-\tle-\tta-\tri-\tan", "ph r @U\tl V\tt e@\ti:\tV n");
result.add("pro-\tle-\tta-\tri-\tat", "ph r @U\tl V\tt e@\ti:\tV t");
result.add("pro-\tler", "ph r @U\tl @r");
result.add("pro-\tli-\tfe-\tra-\tted", "ph r V\tl I\tf @r\teI\tt V d");
result.add("pro-\tli-\tfe-\tra-\tting", "ph r @U\tl I\tf @r\teI\tt I N");
result.add("pro-\tli-\tfe-\tra-\ttion", "ph r @U\tl I\tf @r\teI\tS V n");
result.add("pro-\tli-\tfe-\trate", "ph r @U\tl I\tf @r\teI t");
result.add("pro-\tli-\tfic", "ph r @U\tl I\tf I k");
result.add("pro-\tli-\tfical-\tly", "ph r @U\tl I\tf I k\tl i:");
result.add("pro-\tlog", "ph r @U\tl Q g");
result.add("pro-\tlogue", "ph r @U\tl Q g");
result.add("pro-\tlon-\tging", "ph r @U\tl O:\tN I N");
result.add("pro-\tlong", "ph r V\tl O: N");
result.add("pro-\tlonged", "ph r V\tl O: N d");
result.add("pro-\tlongs", "ph r V\tl O: N z");
result.add("pro-\tme-\tnade", "ph r Q\tm V\tn eI d");
result.add("pro-\tme-\tthi-\tum", "ph r V\tm i:\tT i:\tV m");
result.add("pro-\tmi-\tnen-\tces", "ph r Q\tm I\tn e n\ts V z");
result.add("pro-\tmi-\tnence", "ph r Q\tm I\tn e n s");
result.add("pro-\tmi-\tnent", "ph r Q\tm I\tn e n t");
result.add("pro-\tmi-\tnent-\tly", "ph r Q\tm I\tn e n\tt l i:");
result.add("pro-\tmi-\tses", "ph r Q\tm I\ts V z");
result.add("pro-\tmi-\tsing", "ph r Q\tm I\ts I N");
result.add("pro-\tmis-\tcu-\ti-\tty", "ph r @U\tm I s\tk j u:\tV\tt i:");
result.add("pro-\tmis-\tcuous", "ph r @U\tm I s\tk w V s");
result.add("pro-\tmis-\tso-\try", "ph r Q\tm I\ts O@\ti:");
result.add("pro-\tmise", "ph r Q\tm I s");
result.add("pro-\tmised", "ph r Q\tm I s t");
result.add("pro-\tmo", "ph r @U\tm @U");
result.add("pro-\tmo-\tted", "ph r V\tm @U\tt V d");
result.add("pro-\tmo-\tter", "ph r V\tm @U\tt @r");
result.add("pro-\tmo-\tters", "ph r V\tm @U\tt @r z");
result.add("pro-\tmo-\tting", "ph r V\tm @U\tt I N");
result.add("pro-\tmo-\ttio-\tnal", "ph r V\tm @U\tS V\tn V l");
result.add("pro-\tmo-\ttion", "ph r V\tm @U\tS V n");
result.add("pro-\tmo-\ttions", "ph r V\tm @U\tS V n z");
result.add("pro-\tmos", "ph r @U\tm @U z");
result.add("pro-\tmote", "ph r V\tm @U t");
result.add("pro-\tmotes", "ph r V\tm @U t s");
result.add("pro-\tmul-\tga-\tted", "ph r Q\tm V l\tg eI\tt V d");
result.add("pro-\tmul-\tga-\tting", "ph r Q\tm V l\tg eI\tt I N");
result.add("pro-\tmul-\tgate", "ph r @U\tm V l\tg eI t");
result.add("pro-\tnoun", "ph r @U\tn aU n");
result.add("pro-\tnoun-\tces", "ph r V\tn aU n\ts V z");
result.add("pro-\tnoun-\tcing", "ph r V\tn aU n\ts I N");
result.add("pro-\tnounce", "ph r V\tn aU n s");
result.add("pro-\tnounce-\tment", "ph r V\tn aU n\ts m V n t");
result.add("pro-\tnounce-\tments", "ph r V\tn aU n\ts m V n t s");
result.add("pro-\tnounced", "ph r V\tn aU n s t");
result.add("pro-\tnouns", "ph r @U\tn aU n z");
result.add("pro-\tnun-\tci-\ta-\ttion", "ph r @U\tn V n\ts i:\teI\tS V n");
result.add("pro-\tnun-\tci-\ta-\ttions", "ph r @U\tn V n\ts i:\teI\tS V n z");
result.add("pro-\tpa-\tga-\tted", "ph r Q\tp V\tg eI\tt V d");
result.add("pro-\tpa-\tga-\tting", "ph r Q\tp V\tg eI\tt I N");
result.add("pro-\tpa-\tga-\ttion", "ph r Q\tp V\tg eI\tS V n");
result.add("pro-\tpa-\tgan-\tda", "ph r Q\tp V\tg { n\td V");
result.add("pro-\tpa-\tgan-\tdis-\ttic", "ph r Q\tp V\tg V n\td I s\tt I k");
result.add("pro-\tpa-\tgan-\tdist", "ph r Q\tp V\tg { n\td V s t");
result.add("pro-\tpa-\tgan-\tdists", "ph r Q\tp V\tg { n\td V s t s");
result.add("pro-\tpa-\tgan-\tdize", "ph r Q\tp V\tg { n\td aI z");
result.add("pro-\tpa-\tgate", "ph r Q\tp V\tg eI t");
result.add("pro-\tpane", "ph r @U\tp eI n");
result.add("pro-\tpel", "ph r V\tp e l");
result.add("pro-\tpel-\tlant", "ph r V\tp e\tl V n t");
result.add("pro-\tpel-\tlants", "ph r @U\tp e\tl V n t s");
result.add("pro-\tpel-\tler", "ph r V\tp e\tl @r");
result.add("pro-\tpel-\tlers", "ph r V\tp e\tl @r z");
result.add("pro-\tpel-\tling", "ph r V\tp e\tl I N");
result.add("pro-\tpelled", "ph r V\tp e l d");
result.add("pro-\tpels", "ph r V\tp e l z");
result.add("pro-\tpen-\tsi-\tties", "ph r V\tp e n\ts V\tt i: z");
result.add("pro-\tpen-\tsi-\tty", "ph r V\tp e n\ts V\tt i:");
result.add("pro-\tper", "ph r Q\tp @r");
result.add("pro-\tper-\tly", "ph r Q\tp @r\tl i:");
result.add("pro-\tper-\tties", "ph r Q\tp @r\tt i: z");
result.add("pro-\tper-\tty", "ph r Q\tp @r\tt i:");
result.add("pro-\tper-\tty's", "ph r Q\tp @r\tt i: z");
result.add("pro-\tphe-\tcies", "ph r Q\tf V\ts i: z");
result.add("pro-\tphe-\tcy", "ph r Q\tf V\ts i:");
result.add("pro-\tphe-\tsied", "ph r Q\tf V\ts aI d");
result.add("pro-\tphe-\tsies", "ph r Q\tf V\ts aI z");
result.add("pro-\tphe-\ttess", "ph r Q\tf V\tt V s");
result.add("pro-\tphe-\ttic", "ph r V\tf e\tt I k");
result.add("pro-\tphet", "ph r Q\tf V t");
result.add("pro-\tphets", "ph r Q\tf V t s");
result.add("pro-\tphy-\tlac-\ttic", "ph r Q\tf V\tl { k\tt I k");
result.add("pro-\tpi-\to-\tnic", "ph r @U\tp i:\tQ\tn I k");
result.add("pro-\tpi-\ttious", "ph r V\tp I\tS V s");
result.add("pro-\tpo-\tnent", "ph r V\tp @U\tn V n t");
result.add("pro-\tpo-\tnents", "ph r V\tp @U\tn V n t s");
result.add("pro-\tpo-\tsal", "ph r V\tp @U\tz V l");
result.add("pro-\tpo-\tsals", "ph r V\tp @U\tz V l z");
result.add("pro-\tpo-\tsal's", "ph r V\tp @U\tz V l z");
result.add("pro-\tpo-\tses", "ph r V\tp @U\tz V z");
result.add("pro-\tpo-\tsi-\ttion", "ph r Q\tp V\tz I\tS V n");
result.add("pro-\tpo-\tsi-\ttioned", "ph r Q\tp V\tz I\tS V n d");
result.add("pro-\tpo-\tsi-\ttions", "ph r Q\tp V\tz I\tS V n z");
result.add("pro-\tpo-\tsing", "ph r V\tp @U\tz I N");
result.add("pro-\tpor-\ttio-\tna-\tli-\tty", "ph r V\tp O@\tS V\tn {\tl V\tt i:");
result.add("pro-\tpor-\ttio-\tnal", "ph r V\tp O@\tS V\tn V l");
result.add("pro-\tpor-\ttio-\tnal-\tly", "ph r V\tp O@\tS V\tn V\tl i:");
result.add("pro-\tpor-\ttio-\tnate", "ph r V\tp O@\tS V\tn V t");
result.add("pro-\tpor-\ttio-\tnate-\tly", "ph r V\tp O@\tS V\tn V t\tl i:");
result.add("pro-\tpor-\ttion", "ph r V\tp O@\tS V n");
result.add("pro-\tpor-\ttioned", "ph r V\tp O@\tS V n d");
result.add("pro-\tpor-\ttions", "ph r V\tp O@\tS V n z");
result.add("pro-\tpose", "ph r V\tp @U z");
result.add("pro-\tposed", "ph r V\tp @U z d");
result.add("pro-\tpoun-\tded", "ph r V\tp aU n\td V d");
result.add("pro-\tpound", "ph r V\tp aU n d");
result.add("pro-\tpri-\te-\tta-\tries", "ph r V p\tr aI\tV\tt e@\ti: z");
result.add("pro-\tpri-\te-\tta-\try", "ph r V p\tr aI\tV\tt e@\ti:");
result.add("pro-\tpri-\te-\ttor", "ph r V p\tr aI\tV\tt @r");
result.add("pro-\tpri-\te-\ttor-\tship", "ph r V p\tr aI\tV\tt @r\tS I p");
result.add("pro-\tpri-\te-\ttor-\tships", "ph r V p\tr aI\tV\tt @r\tS I p s");
result.add("pro-\tpri-\te-\ttors", "ph r V p\tr aI\tV\tt @r z");
result.add("pro-\tpri-\te-\ttor's", "ph r V p\tr aI\tV\tt @r z");
result.add("pro-\tpri-\te-\tty", "ph r V p\tr aI\tV\tt i:");
result.add("pro-\tpul-\tsion", "ph r V\tp V l\tS V n");
result.add("pro-\tpy-\tlene", "ph r @U\tp V\tl i: n");
result.add("pro-\tra-\tted", "ph r @U\tr eI\tt V d");
result.add("pro-\tra-\ttion", "ph r @U\tr eI\tS V n");
result.add("pro-\trate", "ph r @U\tr eI t");
result.add("pro-\tsa-\tic", "ph r @U\tz eI\tI k");
result.add("pro-\tscribe", "ph r @U s\tk r aI b");
result.add("pro-\tscribed", "ph r @U s\tk r aI b d");
result.add("pro-\tscribes", "ph r @U s\tk r aI b z");
result.add("pro-\tscrip-\ttion", "ph r @U s\tk r I p\tS V n");
result.add("pro-\tse-\tcu-\tta-\tble", "ph r Q\ts I k\tj u:\tt V\tb V l");
result.add("pro-\tse-\tcu-\tted", "ph r Q\ts I k\tj u:\tt V d");
result.add("pro-\tse-\tcu-\tting", "ph r Q\ts I k\tj u:\tt I N");
result.add("pro-\tse-\tcu-\ttion", "ph r Q\ts V k\tj u:\tS V n");
result.add("pro-\tse-\tcu-\ttions", "ph r Q\ts V k\tj u:\tS V n z");
result.add("pro-\tse-\tcu-\ttion's", "ph r Q\ts V k\tj u:\tS V n z");
result.add("pro-\tse-\tcu-\tto-\tri-\tal", "ph r Q\ts I k\tj u:\tt O@\ti:\tV l");
result.add("pro-\tse-\tcu-\ttor", "ph r Q\ts I k\tj u:\tt @r");
result.add("pro-\tse-\tcu-\ttors", "ph r Q\ts I k\tj u:\tt @r z");
result.add("pro-\tse-\tcu-\ttor's", "ph r Q\ts I k\tj u:\tt @r z");
result.add("pro-\tse-\tcute", "ph r Q\ts V k\tj u: t");
result.add("pro-\tse-\tcutes", "ph r Q\ts I k\tj u: t s");
result.add("pro-\tse-\tly-\tti-\tzing", "ph r Q\ts V\tl V\tt aI\tz I N");
result.add("pro-\tse-\tly-\ttize", "ph r Q\ts V\tl V\tt aI z");
result.add("pro-\tse-\tly-\ttized", "ph r Q\ts V\tl V\tt aI z d");
result.add("pro-\tsek", "ph r @U\ts e k");
result.add("pro-\tser-\tpi-\tna", "ph r @U\ts @r\tp I\tn V");
result.add("pro-\tso-\tdy", "ph r Q\ts V\td i:");
result.add("pro-\tta-\tgo-\tnist", "ph r @U\tt {\tg V\tn V s t");
result.add("pro-\tta-\tgo-\tnists", "ph r @U\tt {\tg V\tn V s t s");
result.add("pro-\tte-\tan", "ph r @U\tt i:\tV n");
result.add("pro-\tte-\tase", "ph r @U\tt i:\teI z");
result.add("pro-\tte-\tge", "ph r @U\tt I\tZ eI");
result.add("pro-\tte-\tges", "ph r @U\tt I\tZ eI z");
result.add("pro-\ttec-\tted", "ph r V\tt e k\tt V d");
result.add("pro-\ttec-\tting", "ph r V\tt e k\tt I N");
result.add("pro-\ttec-\ttio-\tni-\tsm", "ph r V\tt e k\tS V\tn I\tz V m");
result.add("pro-\ttec-\ttio-\tnist", "ph r V\tt e k\tS V\tn I s t");
result.add("pro-\ttec-\ttio-\tnists", "ph r V\tt e k\tS V\tn I s t s");
result.add("pro-\ttec-\ttion", "ph r V\tt e k\tS V n");
result.add("pro-\ttec-\ttions", "ph r V\tt e k\tS V n z");
result.add("pro-\ttec-\ttive", "ph r V\tt e k\tt I v");
result.add("pro-\ttec-\ttive-\tly", "ph r V\tt e k\tt I v\tl i:");
result.add("pro-\ttec-\tto-\trate", "ph r V\tt e k\tt @r\tV t");
result.add("pro-\ttec-\ttor", "ph r V\tt e k\tt @r");
result.add("pro-\ttec-\ttors", "ph r V\tt e k\tt @r z");
result.add("pro-\ttect", "ph r V\tt e k t");
result.add("pro-\ttects", "ph r V\tt e k t s");
result.add("pro-\ttein", "ph r @U\tt i: n");
result.add("pro-\tteins", "ph r @U\tt i: n z");
result.add("pro-\ttes-\tta-\ttion", "ph r @U\tt e s\tt eI\tS V n");
result.add("pro-\ttes-\tta-\ttions", "ph r @U\tt e s\tt eI\tS V n z");
result.add("pro-\ttes-\ttan-\tti-\tsm", "ph r Q\tt V s\tt V n\tt I\tz V m");
result.add("pro-\ttes-\ttant", "ph r Q\tt V s\tt V n t");
result.add("pro-\ttes-\ttants", "ph r Q\tt V s\tt V n t s");
result.add("pro-\ttes-\tted", "ph r V\tt e s\tt V d");
result.add("pro-\ttes-\tter", "ph r @U\tt e s\tt @r");
result.add("pro-\ttes-\tters", "ph r @U\tt e s\tt @r z");
result.add("pro-\ttes-\tting", "ph r V\tt e s\tt I N");
result.add("pro-\ttes-\ttors", "ph r @U\tt e s\tt @r z");
result.add("pro-\ttest", "ph r @U\tt e s t");
result.add("pro-\ttests", "ph r @U\tt e s t s");
result.add("pro-\tthal-\tlus", "ph r @U\tT {\tl V s");
result.add("pro-\ttho-\trax", "ph r @U\tT O@\t{ k s");
result.add("pro-\tti-\tum", "ph r @U\tt i:\tV m");
result.add("pro-\tto", "ph r @U\tt V");
result.add("pro-\tto-\tcol", "ph r @U\tt V\tk Q l");
result.add("pro-\tto-\tcols", "ph r @U\tt V\tk Q l z");
result.add("pro-\tto-\this-\tto-\try", "ph r @U\tt @U\th I s\tt @r\ti:");
result.add("pro-\tto-\tty-\tpi-\tcal", "ph r @U\tt V\tt I\tp I\tk V l");
result.add("pro-\tto-\ttype", "ph r @U\tt V\tt aI p");
result.add("pro-\tto-\ttypes", "ph r @U\tt V\tt aI p s");
result.add("pro-\tto-\tzo-\ta", "ph r @U\tt V\tz @U\tV");
result.add("pro-\tto-\tzo-\tan", "ph r @U\tt V\tz @U\tV n");
result.add("pro-\tto-\tzo-\tans", "ph r @U\tt V\tz @U\tV n z");
result.add("pro-\tton", "ph r @U\tt Q n");
result.add("pro-\ttons", "ph r @U\tt Q n z");
result.add("pro-\tton's", "ph r @U\tt Q n z");
result.add("pro-\ttrac-\tted", "ph r @U t\tr { k\tt V d");
result.add("pro-\ttract", "ph r @U t\tr { k t");
result.add("pro-\ttru-\tding", "ph r @U t\tr u:\td I N");
result.add("pro-\ttrude", "ph r @U t\tr u: d");
result.add("pro-\ttu-\tbe-\tran-\tces", "ph r @U\tt u:\tb @r\tV n\ts V z");
result.add("pro-\ttu-\tbe-\trance", "ph r @U\tt u:\tb @r\tV n s");
result.add("pro-\tva-\tble", "ph r u:\tv V\tb V l");
result.add("pro-\tvant", "ph r @U\tv V n t");
result.add("pro-\tve-\tnance", "ph r Q\tv V\tn V n s");
result.add("pro-\tve-\tra", "ph r @U\tv e@\tV");
result.add("pro-\tven", "ph r u:\tv V n");
result.add("pro-\tvence", "ph r @U\tv V n s");
result.add("pro-\tver-\tbi-\tal", "ph r V\tv @r\tb i:\tV l");
result.add("pro-\tverb", "ph r Q\tv @r b");
result.add("pro-\tverbs", "ph r Q\tv @r b z");
result.add("pro-\tvi-\tded", "ph r V\tv aI\td V d");
result.add("pro-\tvi-\tden-\tce's", "ph r Q\tv I\td e n\ts V z");
result.add("pro-\tvi-\tden-\ttial", "ph r Q\tv I\td e n\ttS V l");
result.add("pro-\tvi-\tdence", "ph r Q\tv I\td e n s");
result.add("pro-\tvi-\tdent", "ph r Q\tv I\td e n t");
result.add("pro-\tvi-\tder", "ph r V\tv aI\td @r");
result.add("pro-\tvi-\tders", "ph r V\tv aI\td @r z");
result.add("pro-\tvi-\tding", "ph r V\tv aI\td I N");
result.add("pro-\tvi-\tne", "ph r @U\tv i:\tn i:");
result.add("pro-\tvi-\tsio-\tnal", "ph r V\tv I\tZ V\tn V l");
result.add("pro-\tvi-\tsio-\tnal-\tly", "ph r V\tv I\tZ V\tn V\tl i:");
result.add("pro-\tvi-\tsio-\tning", "ph r V\tv I\tZ V\tn I N");
result.add("pro-\tvi-\tsion", "ph r V\tv I\tZ V n");
result.add("pro-\tvi-\tsions", "ph r V\tv I\tZ V n z");
result.add("pro-\tvi-\tso", "ph r V\tv aI\tz @U");
result.add("pro-\tvide", "ph r V\tv aI d");
result.add("pro-\tvides", "ph r V\tv aI d z");
result.add("pro-\tvin-\tces", "ph r Q\tv I n\ts V z");
result.add("pro-\tvin-\tce's", "ph r Q\tv I n\ts V z");
result.add("pro-\tvin-\tcia-\tli-\tsm", "ph r V\tv I n\ttS V\tl I\tz V m");
result.add("pro-\tvin-\tcial", "ph r V\tv I n\tS V l");
result.add("pro-\tvin-\tcial-\tly", "ph r V\tv I n\tS V\tl i:");
result.add("pro-\tvince", "ph r Q\tv I n s");
result.add("pro-\tvince-\ttown", "ph r Q\tv I n\ts t aU n");
result.add("pro-\tving", "ph r u:\tv I N");
result.add("pro-\tvo", "ph r @U\tv @U");
result.add("pro-\tvo-\tca-\ttion", "ph r Q\tv V\tk eI\tS V n");
result.add("pro-\tvo-\tca-\ttions", "ph r Q\tv V\tk eI\tS V n z");
result.add("pro-\tvo-\tca-\ttive", "ph r @U\tv Q\tk V\tt I v");
result.add("pro-\tvo-\tca-\ttive-\tly", "ph r @U\tv Q\tk V\tt I v\tl i:");
result.add("pro-\tvo-\tking", "ph r V\tv @U\tk I N");
result.add("pro-\tvoke", "ph r V\tv @U k");
result.add("pro-\tvoked", "ph r V\tv @U k t");
result.add("pro-\tvokes", "ph r V\tv @U k s");
result.add("pro-\tvost", "ph r @U\tv @U s t");
result.add("pro-\tvosts", "ph r @U\tv @U s t s");
result.add("pro-\twess", "ph r aU\tV s");
result.add("pro-\txi-\tmal", "ph r Q k\ts I\tm V l");
result.add("pro-\txi-\tmate", "ph r Q k\ts I\tm V t");
result.add("pro-\txi-\tmi-\tty", "ph r Q k\ts I\tm I\tt i:");
result.add("pro-\txies", "ph r Q k\ts i: z");
result.add("pro-\txy", "ph r Q k\ts i:");
result.add("pro-\tzac", "ph r @U\tz { k");
result.add("prob", "ph r Q b");
result.add("prob-\tle-\tma-\tti-\tcal", "ph r Q b\tl V\tm {\tt I\tk V l");
result.add("prob-\tle-\tma-\ttic", "ph r Q b\tl V\tm {\tt I k");
result.add("prob-\tlem", "ph r Q b\tl V m");
result.add("prob-\tlems", "ph r Q b\tl V m z");
result.add("prob-\tlem's", "ph r Q b\tl V m z");
result.add("probe", "ph r @U b");
result.add("probed", "ph r @U b d");
result.add("probes", "ph r @U b z");
result.add("proc-\tla-\tma-\ttion", "ph r Q k\tl V\tm eI\tS V n");
result.add("proc-\tla-\tma-\ttions", "ph r Q k\tl V\tm eI\tS V n z");
result.add("proc-\tlai-\tming", "ph r @U k\tl eI\tm I N");
result.add("proc-\tlaim", "ph r @U k\tl eI m");
result.add("proc-\tlaimed", "ph r @U k\tl eI m d");
result.add("proc-\tlaims", "ph r @U k\tl eI m z");
result.add("proc-\tli-\tvi-\tties", "ph r @U k\tl I\tv I\tt i: z");
result.add("proc-\tli-\tvi-\tty", "ph r @U k\tl I\tv I\tt i:");
result.add("proc-\tter", "ph r Q k\tt @r");
result.add("proc-\ttor", "ph r Q k\tt @r");
result.add("proc-\ttors", "ph r Q k\tt @r z");
result.add("proc-\ttor's", "ph r Q k\tt @r z");
result.add("prod", "ph r Q d");
result.add("prod-\tded", "ph r Q\td V d");
result.add("prod-\tding", "ph r Q\td I N");
result.add("prof-\tfe-\tring", "ph r Q\tf @r\tI N");
result.add("prof-\tfer", "ph r Q\tf @r");
result.add("prof-\tfered", "ph r Q\tf @r d");
result.add("prof-\tfitt", "ph r Q\tf I t");
result.add("prof.", "ph r O: f");
result.add("profs", "ph r Q f s");
result.add("prog-\tno-\tses", "ph r Q g\tn @U\ts i: z");
result.add("prog-\tno-\tsis", "ph r Q g\tn @U\ts I s");
result.add("prog-\tnos-\tti-\tca-\tted", "ph r Q g\tn Q s\tt I\tk eI\tt I d");
result.add("prog-\tnos-\tti-\tca-\tting", "ph r Q g\tn Q s\tt I\tk eI\tt I N");
result.add("prog-\tnos-\tti-\tca-\ttion", "ph r Q g\tn Q s\tt I\tk eI\tS V n");
result.add("prog-\tnos-\tti-\tca-\ttions", "ph r Q g\tn Q s\tt I\tk eI\tS V n z");
result.add("prog-\tnos-\tti-\tca-\ttive", "ph r Q g\tn Q s\tt I\tk eI\tt I v");
result.add("prog-\tnos-\tti-\tcate", "ph r Q g\tn Q s\tt I\tk eI t");
result.add("prog-\tnos-\tti-\tcates", "ph r Q g\tn Q s\tt I\tk eI t s");
result.add("prom", "ph r Q m");
result.add("promp-\tted", "ph r Q m\tp t V d");
result.add("promp-\tting", "ph r Q m\tp t I N");
result.add("prompt", "ph r Q m p t");
result.add("prompt-\tly", "ph r Q m\tp t l i:");
result.add("prompts", "ph r Q m p t s");
result.add("proms", "ph r Q m z");
result.add("pron-\tto", "ph r Q n\tt @U");
result.add("prone", "ph r @U n");
result.add("prong", "ph r O: N");
result.add("prong-\thorn", "ph r O: N\th O@ n");
result.add("pronged", "ph r O: N d");
result.add("prongs", "ph r O: N z");
result.add("proo-\tfing", "ph r u:\tf I N");
result.add("proof", "ph r u: f");
result.add("proof-\trea-\tding", "ph r u: f\tr i:\td I N");
result.add("proof-\tread", "ph r u: f\tr i: d");
result.add("proofed", "ph r u: f t");
result.add("proofs", "ph r u: f s");
result.add("prop", "ph r Q p");
result.add("prop-\tper", "ph r Q\tp @r");
result.add("prop-\tping", "ph r Q\tp I N");
result.add("propped", "ph r Q p t");
result.add("props", "ph r Q p s");
result.add("pros", "ph r @U z");
result.add("pro's", "ph r @U z");
result.add("pros-\tser", "ph r O:\ts @r");
result.add("pros-\tta-\ttec-\tto-\tmy", "ph r Q s\tt eI\tt e k\tt V\tm i:");
result.add("pros-\tta-\ttic", "ph r @U s\tt {\tt I k");
result.add("pros-\ttag-\tlan-\tdin", "ph r @U s\tt { g\tl { n\td I n");
result.add("pros-\ttag-\tlan-\tdins", "ph r @U s\tt { g\tl { n\td I n z");
result.add("pros-\ttate", "ph r Q s\tt eI t");
result.add("pros-\tthe-\tses", "ph r Q s\tT i:\ts i: z");
result.add("pros-\tthe-\tsis", "ph r O: s\tT e\ts I s");
result.add("pros-\tthe-\ttic", "ph r Q s\tT e\tt I k");
result.add("pros-\tthe-\ttics", "ph r Q s\tT e\tt I k s");
result.add("pros-\tti-\ttu-\ttion", "ph r Q s\tt I\tt u:\tS V n");
result.add("pros-\tti-\ttute", "ph r Q s\tt I\tt u: t");
result.add("pros-\tti-\ttutes", "ph r Q s\tt I\tt u: t s");
result.add("prose", "ph r @U z");
result.add("pross", "ph r O: s");
result.add("prost", "ph r Q s t");
result.add("prost-\tra-\ttion", "ph r Q s\tt r eI\tS V n");
result.add("prost-\trate", "ph r Q s\tt r eI t");
result.add("prou-\tder", "ph r aU\td @r");
result.add("prou-\tdest", "ph r aU\td V s t");
result.add("prou-\tty", "ph r aU\tt i:");
result.add("proud", "ph r aU d");
result.add("proud-\tfoot", "ph r aU d\tf U t");
result.add("proud-\tfoot's", "ph r aU d\tf U t s");
result.add("proud-\tly", "ph r aU d\tl i:");
result.add("proulx", "ph r aU l k s");
result.add("proust", "ph r aU s t");
result.add("prout", "ph r aU t");
result.add("prove", "ph r u: v");
result.add("proved", "ph r u: v d");
result.add("proves", "ph r u: v z");
result.add("prow", "ph r aU");
result.add("prow-\tler", "ph r aU\tl @r");
result.add("prow-\tling", "ph r aU\tl I N");
result.add("prowl", "ph r aU l");
result.add("prows", "ph r aU z");
result.add("prox-\tmire", "ph r Q k\ts m aI r");
result.add("pru", "ph r u:");
result.add("pru-\tde-\try", "ph r u:\td @r\ti:");
result.add("pru-\tden", "ph r u:\td V n");
result.add("pru-\tden-\ttial", "ph r u:\td e n\ttS V l");
result.add("pru-\tden-\ttial's", "ph r u:\td e n\ttS V l z");
result.add("pru-\tdence", "ph r u:\td V n s");
result.add("pru-\tdent", "ph r u:\td V n t");
result.add("pru-\tdent-\tly", "ph r u:\td V n\tt l i:");
result.add("pru-\tdish", "ph r u:\td I S");
result.add("pru-\titt", "ph r u:\tI t");
result.add("pru-\tnel-\tla", "ph r u:\tn e\tl V");
result.add("pru-\tner", "ph r u:\tn @r");
result.add("pru-\tning", "ph r u:\tn I N");
result.add("pru-\tri-\tent", "ph r U@\ti:\tV n t");
result.add("prud-\thoe", "ph r V d\th @U");
result.add("prud-\thomme", "ph r V d\th V m");
result.add("prude", "ph r u: d");
result.add("prue", "ph r u:");
result.add("pruett", "ph r u: t");
result.add("prune", "ph r u: n");
result.add("pruned", "ph r u: n d");
result.add("prunes", "ph r u: n z");
result.add("prus", "ph r V s");
result.add("pru's", "ph r u: z");
result.add("prus-\tsia", "ph r V\tS V");
result.add("prus-\tsian", "ph r V\tS V n");
result.add("pruss", "ph r V s");
result.add("pry", "ph r aI");
result.add("pry-\ter", "ph r aI\t@r");
result.add("pry-\ting", "ph r aI\tI N");
result.add("pry-\tor", "ph r aI\t@r");
result.add("pry-\tor's", "ph r aI\t@r z");
result.add("pryce", "ph r aI s");
result.add("prynne", "ph r I n");
result.add("p's", "ph i: z");
result.add("psal-\tter", "s O: l\tt @r");
result.add("psal-\tters", "s O: l\tt @r z");
result.add("psalm", "s Q l m");
result.add("psalms", "s Q l m z");
result.add("pseu-\tdo", "s u:\td @U");
result.add("pseu-\tdo-\tmo-\tnas", "s u:\td V\tm @U\tn V z");
result.add("pseu-\tdo-\tnym", "s u:\td V\tn I m");
result.add("pseu-\tdo-\tnyms", "s u:\td V\tn I m z");
result.add("pseu-\tdo-\tpo-\tdi-\tal", "s u:\td V\tp @U\td i:\tV l");
result.add("pseu-\tdo-\tsci-\ten-\tti-\tfic", "s u:\td @U\ts aI\tV n\tt I\tf I k");
result.add("pseu-\tdo-\tsci-\tence", "s u:\td @U\ts aI\tV n s");
result.add("psi", "s aI");
result.add("psi-\tlo-\tcy-\tbin", "s aI\tl V\ts aI\tb V n");
result.add("pso-\tri-\ta-\tsis", "s @r\taI\tV\ts V s");
result.add("psy-\tche", "s aI\tk i:");
result.add("psy-\tche-\tde-\tlic", "s aI\tk V\td e\tl I k");
result.add("psy-\tches", "s aI\tk i: z");
result.add("psy-\tchi-\tat-\tric", "s aI\tk i:\t{ t\tr I k");
result.add("psy-\tchi-\tat-\trist", "s V\tk aI\tV t\tr V s t");
result.add("psy-\tchi-\tat-\trists", "s V\tk aI\tV t\tr V s t s");
result.add("psy-\tchi-\tat-\trist's", "s V\tk aI\tV t\tr V s t s");
result.add("psy-\tchi-\tat-\try", "s aI\tk aI\tV t\tr i:");
result.add("psy-\tchi-\tcal", "s aI\tk I\tk V l");
result.add("psy-\tchic", "s aI\tk I k");
result.add("psy-\tchics", "s aI\tk I k s");
result.add("psy-\tcho", "s aI\tk @U");
result.add("psy-\tcho-\ta-\tna-\tly-\tsis", "s aI\tk @U\tV\tn {\tl V\ts V s");
result.add("psy-\tcho-\ta-\tna-\tly-\ttic", "s aI\tk @U\t{\tn V\tl I\tt I k");
result.add("psy-\tcho-\ta-\tna-\tlyst", "s aI\tk @U\t{\tn V\tl V s t");
result.add("psy-\tcho-\tbab-\tble", "s aI\tk @U\tb {\tb V l");
result.add("psy-\tcho-\tdy-\tna-\tmic", "s aI\tk @U\td aI\tn {\tm I k");
result.add("psy-\tcho-\tge-\tnic", "s aI\tk @U\tdZ e\tn I k");
result.add("psy-\tcho-\tki-\tne-\tsis", "s aI\tk @U\tk I\tn i:\ts I s");
result.add("psy-\tcho-\tlo-\tgi-\tcal", "s aI\tk V\tl Q\tdZ I\tk V l");
result.add("psy-\tcho-\tlo-\tgical-\tly", "s aI\tk V\tl Q\tdZ I k\tl i:");
result.add("psy-\tcho-\tlo-\tgist", "s aI\tk Q\tl V\tdZ V s t");
result.add("psy-\tcho-\tlo-\tgists", "s aI\tk Q\tl V\tdZ V s t s");
result.add("psy-\tcho-\tlo-\tgy", "s aI\tk Q\tl V\tdZ i:");
result.add("psy-\tcho-\tpa-\tthic", "s aI\tk V\tp {\tT I k");
result.add("psy-\tcho-\tpa-\tthy", "s aI\tk Q\tp V\tT i:");
result.add("psy-\tcho-\tpath", "s aI\tk @U\tp { T");
result.add("psy-\tcho-\tpaths", "s aI\tk @U\tp { T s");
result.add("psy-\tcho-\tsis", "s aI\tk @U\ts I s");
result.add("psy-\tcho-\tso-\tma-\ttic", "s aI\tk @U\ts V\tm {\tt I k");
result.add("psy-\tcho-\tthe-\tra-\tpeu-\ttic", "s aI\tk @U\tT e@\tV p\tj u:\tt I k");
result.add("psy-\tcho-\tthe-\tra-\tpist", "s aI\tk V\tT e@\tV\tp V s t");
result.add("psy-\tcho-\tthe-\tra-\tpists", "s aI\tk V\tT e@\tV\tp V s t s");
result.add("psy-\tcho-\tthe-\tra-\tpy", "s aI\tk @U\tT e@\tV\tp i:");
result.add("psy-\tcho-\ttic", "s aI\tk Q\tt I k");
result.add("psych", "s aI k");
result.add("psyched", "s aI k t");
result.add("psyl-\tli-\tum", "s I\tl i:\tV m");
result.add("pto-\tle-\tma-\tic", "th Q\tl V\tm eI\tI k");
result.add("pto-\tle-\tmy", "th Q\tl V\tm i:");
result.add("pto-\tmaine", "th @U\tm eI n");
result.add("pto-\tmaines", "th @U\tm eI n z");
result.add("pty", "th aI");
result.add("pu", "ph u:");
result.add("pu-\tber-\tty", "ph j u:\tb @r\tt i:");
result.add("pu-\tbic", "ph j u:\tb I k");
result.add("pu-\tfahl", "ph j u:\tf Q l");
result.add("pu-\tget", "ph j u:\tdZ V t");
result.add("pu-\tla-\tski", "ph j u:\tl { s\tk i:");
result.add("pu-\tlit-\tzer", "ph U\tl I t\ts @r");
result.add("pu-\tma", "ph u:\tm V");
result.add("pu-\tma's", "ph j u:\tm V z");
result.add("pu-\tmice", "ph V\tm I s");
result.add("pu-\tni-\tsha-\tble", "ph V\tn I\tS V\tb V l");
result.add("pu-\tni-\tshes", "ph V\tn I\tS V z");
result.add("pu-\tni-\tshing", "ph V\tn I\tS I N");
result.add("pu-\tni-\ttive", "ph j u:\tn I\tt I v");
result.add("pu-\tnic", "ph j u:\tn I k");
result.add("pu-\tnish", "ph V\tn I S");
result.add("pu-\tnish-\tment", "ph V\tn I S\tm V n t");
result.add("pu-\tnish-\tments", "ph V\tn I S\tm V n t s");
result.add("pu-\tnished", "ph V\tn I S t");
result.add("pu-\tny", "ph j u:\tn i:");
result.add("pu-\tpa", "ph j u:\tp V");
result.add("pu-\tpil", "ph j u:\tp I l");
result.add("pu-\tpils", "ph j u:\tp I l z");
result.add("pu-\tra", "ph U@\tV");
result.add("pu-\tree", "ph j U@\teI");
result.add("pu-\trer", "ph j U@\t@r");
result.add("pu-\trest", "ph j U@\tV s t");
result.add("pu-\trex", "ph j U@\te k s");
result.add("pu-\tri", "ph U@\ti:");
result.add("pu-\tri-\tfi-\tca-\ttion", "ph j U@\tI\tf I\tk eI\tS V n");
result.add("pu-\tri-\tfi-\ter", "ph j U@\tI\tf aI\t@r");
result.add("pu-\tri-\tfi-\ters", "ph j U@\tI\tf aI\t@r z");
result.add("pu-\tri-\tfied", "ph j U@\tI\tf aI d");
result.add("pu-\tri-\tfy", "ph j U@\tI\tf aI");
result.add("pu-\tri-\tfy-\ting", "ph j U@\tI\tf aI\tI N");
result.add("pu-\tri-\tna", "ph j U@\tI\tn V");
result.add("pu-\tri-\tta-\tni-\tcal", "ph j U@\tI\tt {\tn I\tk V l");
result.add("pu-\tri-\tta-\tni-\tsm", "ph j U@\tI\tt V\tn I\tz V m");
result.add("pu-\tri-\tta-\tni-\tsms", "ph j U@\tI\tt V\tn I\tz V m z");
result.add("pu-\tri-\ttan", "ph j U@\tI\tt V n");
result.add("pu-\tri-\ttans", "ph j U@\tI\tt V n z");
result.add("pu-\tri-\tty", "ph j U@\tI\tt i:");
result.add("pu-\trim", "ph U@\tI m");
result.add("pu-\tring-\tton", "ph j U@\tI N\tt V n");
result.add("pu-\tris", "ph j U@\tI s");
result.add("pu-\tris-\ttic", "ph j U@\tI s\tt I k");
result.add("pu-\trist", "ph j U@\tI s t");
result.add("pu-\trists", "ph j U@\tI s t s");
result.add("pu-\tsan", "ph u:\ts Q n");
result.add("pu-\tsey", "ph j u:\tz i:");
result.add("pu-\tsher", "ph U\tS @r");
result.add("pu-\tshers", "ph U\tS @r z");
result.add("pu-\tshes", "ph U\tS V z");
result.add("pu-\tshing", "ph U\tS I N");
result.add("pu-\tshy", "ph U\tS i:");
result.add("pu-\tta-\ttive", "ph j u:\tt V\tt I v");
result.add("pu-\tzo", "ph u:\tz @U");
result.add("pub", "ph V b");
result.add("pub-\tli-\tca-\ttion", "ph V b\tl I\tk eI\tS V n");
result.add("pub-\tli-\tca-\ttions", "ph V b\tl I\tk eI\tS V n z");
result.add("pub-\tli-\tca-\ttion's", "ph V b\tl I\tk eI\tS V n z");
result.add("pub-\tli-\tci-\tty", "ph V b\tl I\ts I\tt i:");
result.add("pub-\tli-\tci-\tzing", "ph V b\tl I\ts aI\tz I N");
result.add("pub-\tli-\tcist", "ph V b\tl I\ts I s t");
result.add("pub-\tli-\tcists", "ph V b\tl I\ts I s t s");
result.add("pub-\tli-\tcize", "ph V b\tl I\ts aI z");
result.add("pub-\tli-\tcized", "ph V b\tl I\ts aI z d");
result.add("pub-\tli-\tsher", "ph V b\tl I\tS @r");
result.add("pub-\tli-\tshers", "ph V b\tl I\tS @r z");
result.add("pub-\tli-\tsher's", "ph V b\tl I\tS @r z");
result.add("pub-\tli-\tshes", "ph V b\tl I\tS V z");
result.add("pub-\tli-\tshing", "ph V b\tl I\tS I N");
result.add("pub-\tli-\tshings", "ph V b\tl I\tS I N z");
result.add("pub-\tli-\tshing's", "ph V b\tl I\tS I N z");
result.add("pub-\tlic", "ph V b\tl I k");
result.add("pub-\tlic-\tly", "ph V b\tl I k\tl i:");
result.add("pub-\tlical-\tly", "ph V b\tl I k\tl i:");
result.add("pub-\tlics", "ph V b\tl I k s");
result.add("pub-\tlic's", "ph V b\tl I k s");
result.add("pub-\tlish", "ph V b\tl I S");
result.add("pub-\tlished", "ph V b\tl I S t");
result.add("pubs", "ph V b z");
result.add("puc-\tci-\tni", "ph u:\ttS i:\tn i:");
result.add("puc-\tker", "ph V\tk @r");
result.add("puc-\tkett", "ph V\tk e t");
result.add("puc-\tkish", "ph V\tk I S");
result.add("puck", "ph V k");
result.add("pud-\tding", "ph U\td I N");
result.add("pud-\tdings", "ph U\td I N z");
result.add("pud-\tdle", "ph V\td V l");
result.add("pud-\tdles", "ph V\td V l z");
result.add("pud-\tgy", "ph V\tdZ i:");
result.add("pue-\tbla", "ph w eI b\tl V");
result.add("pue-\tblo", "ph w e b\tl @U");
result.add("pue-\trile", "ph j u:\tr i: l");
result.add("puente", "ph u: n t");
result.add("puer-\tto", "ph w e@\tt @U");
result.add("puett", "ph u: t");
result.add("puf-\tfe-\try", "ph V\tf @r\ti:");
result.add("puf-\tfer", "ph V\tf @r");
result.add("puf-\tfer's", "ph V\tf @r z");
result.add("puf-\tfin", "ph V\tf I n");
result.add("puf-\tfing", "ph V\tf I N");
result.add("puf-\tfins", "ph V\tf I n z");
result.add("puf-\tfy", "ph V\tf i:");
result.add("puff", "ph V f");
result.add("puffed", "ph V f t");
result.add("puffs", "ph V f s");
result.add("pug-\tli-\ta", "ph V g\tl i:\tV");
result.add("pug-\tna-\tcious", "ph V g\tn {\tS V s");
result.add("pug-\twash", "ph V g\tw Q S");
result.add("pugh", "ph j u:");
result.add("pughs", "ph j u: z");
result.add("puke", "ph j u: k");
result.add("pukes", "ph j u: k s");
result.add("pul-\tlen", "ph U\tl V n");
result.add("pul-\tler", "ph U\tl @r");
result.add("pul-\tley", "ph U\tl i:");
result.add("pul-\tleys", "ph U\tl i: z");
result.add("pul-\tling", "ph U\tl I N");
result.add("pul-\tmo-\tna-\try", "ph U l\tm V\tn e@\ti:");
result.add("pul-\tmo-\tzyme", "ph U l\tm @U\tz aI m");
result.add("pul-\tping", "ph V l\tp I N");
result.add("pul-\tpit", "ph U l\tp I t");
result.add("pul-\tpits", "ph U l\tp I t s");
result.add("pul-\tsa-\tting", "ph V l\ts eI\tt I N");
result.add("pul-\tsar", "ph U l\ts @r");
result.add("pul-\tsar's", "ph U l\ts @r z");
result.add("pul-\tses", "ph V l\ts V z");
result.add("pul-\tsi-\tfer", "ph V l\ts I\tf @r");
result.add("pul-\tsing", "ph V l\ts I N");
result.add("pull", "ph U l");
result.add("pull-\tback", "ph U l\tb { k");
result.add("pull-\tbacks", "ph U l\tb { k s");
result.add("pull-\tin", "ph U\tl I n");
result.add("pull-\tman", "ph U l\tm V n");
result.add("pull-\tman's", "ph U l\tm V n z");
result.add("pull-\tout", "ph U\tl aU t");
result.add("pull-\touts", "ph U\tl aU t s");
result.add("pulled", "ph U l d");
result.add("pulls", "ph U l z");
result.add("pulp", "ph V l p");
result.add("pulp-\twood", "ph V l\tp w U d");
result.add("puls", "ph U l z");
result.add("pulse", "ph V l s");
result.add("pum-\tme-\tling", "ph V\tm V\tl I N");
result.add("pum-\tmel", "ph V\tm V l");
result.add("pum-\tmeled", "ph V\tm V l d");
result.add("pum-\tper-\tnic-\tkel", "ph V m\tp @r\tn I\tk V l");
result.add("pum-\tping", "ph V m\tp I N");
result.add("pump", "ph V m p");
result.add("pump-\tkin", "ph V m\tp k I n");
result.add("pump-\tkins", "ph V m\tp k I n z");
result.add("pumped", "ph V m p t");
result.add("pumps", "ph V m p s");
result.add("pun", "ph V n");
result.add("pun-\tches", "ph V n\ttS V z");
result.add("pun-\tching", "ph V n\ttS I N");
result.add("pun-\tchy", "ph V n\ttS i:");
result.add("pun-\tdit", "ph V n\td I t");
result.add("pun-\tdit-\try", "ph V n\td I t\tr i:");
result.add("pun-\tdits", "ph V n\td I t s");
result.add("pun-\tgent", "ph V n\tdZ V n t");
result.add("pun-\tgent-\tly", "ph V n\tdZ V n\tt l i:");
result.add("pun-\tjab", "ph V n\tdZ Q b");
result.add("pun-\tjab's", "ph V n\tdZ Q b z");
result.add("pun-\tkin", "ph V N\tk I n");
result.add("pun-\tky", "ph V N\tk i:");
result.add("pun-\tta", "ph U n\tt @r");
result.add("pun-\tter", "ph V n\tt @r");
result.add("pun-\tto", "ph u: n\tt @U");
result.add("punc-\ttate", "ph V n\tk t eI t");
result.add("punc-\tti-\tli-\tous", "ph V N\tk t I\tl i:\tV s");
result.add("punc-\ttu-\ta-\tli-\tty", "ph V N\tk tS u:\t{\tl I\tt i:");
result.add("punc-\ttu-\ta-\tted", "ph V N\tk tS u:\teI\tt V d");
result.add("punc-\ttu-\ta-\tting", "ph V N\tk tS u:\teI\td I N");
result.add("punc-\ttu-\ta-\ttion", "ph V N\tk tS u:\teI\tS V n");
result.add("punc-\ttu-\tate", "ph V N\tk tS u:\teI t");
result.add("punc-\ttu-\tring", "ph V N\tk tS @r\tI N");
result.add("punc-\tture", "ph V N\tk tS @r");
result.add("punc-\ttured", "ph V N\tk tS @r d");
result.add("punc-\ttures", "ph V N\tk tS @r z");
result.add("punch", "ph V n tS");
result.add("punch-\tline", "ph V n\ttS l aI n");
result.add("punched", "ph V n tS t");
result.add("pung", "ph V N");
result.add("punk", "ph V N k");
result.add("punks", "ph V N k s");
result.add("puns", "ph V n z");
result.add("punt", "ph V n t");
result.add("punts", "ph V n t s");
result.add("pup", "ph V p");
result.add("pup-\tpe-\tteer", "ph V\tp V\tt i: r");
result.add("pup-\tpe-\tteers", "ph V\tp V\tt i: r z");
result.add("pup-\tpet", "ph V\tp V t");
result.add("pup-\tpet-\try", "ph V\tp V t\tr i:");
result.add("pup-\tpets", "ph V\tp V t s");
result.add("pup-\tpies", "ph V\tp i: z");
result.add("pup-\tpy", "ph V\tp i:");
result.add("pups", "ph V p s");
result.add("pur", "ph @r");
result.add("pur-\tcell", "ph @r\ts e l");
result.add("pur-\tcha-\tser", "ph @r\ttS V\ts @r");
result.add("pur-\tcha-\tsers", "ph @r\ttS V\ts @r z");
result.add("pur-\tcha-\tser's", "ph @r\ttS V\ts @r z");
result.add("pur-\tcha-\tses", "ph @r\ttS V\ts V z");
result.add("pur-\tchase", "ph @r\ttS V s");
result.add("pur-\tchased", "ph @r\ttS V s t");
result.add("pur-\tdin", "ph @r\td I n");
result.add("pur-\tdon", "ph @r\td V n");
result.add("pur-\tdue", "ph @r\td u:");
result.add("pur-\tdum", "ph @r\td V m");
result.add("pur-\tdy", "ph @r\td i:");
result.add("pur-\tga-\tto-\try", "ph @r\tg V\tt O@\ti:");
result.add("pur-\tges", "ph @r\tdZ V z");
result.add("pur-\tging", "ph @r\tdZ I N");
result.add("pur-\tloin", "ph @r\tl OI n");
result.add("pur-\tloined", "ph @r\tl OI n d");
result.add("pur-\tple", "ph @r\tp V l");
result.add("pur-\tples", "ph @r\tp V l z");
result.add("pur-\tpo-\tses", "ph @r\tp V\ts V z");
result.add("pur-\tpor-\tted", "ph @r\tp O@\tt V d");
result.add("pur-\tpor-\tted-\tly", "ph @r\tp O@\tt V d\tl i:");
result.add("pur-\tpor-\tting", "ph @r\tp O@\tt I N");
result.add("pur-\tport", "ph @r\tp O@ t");
result.add("pur-\tports", "ph @r\tp O@ t s");
result.add("pur-\tpose", "ph @r\tp V s");
result.add("pur-\tpose-\tful", "ph @r\tp V s\tf V l");
result.add("pur-\tpose-\tful-\tly", "ph @r\tp V s\tf V\tl i:");
result.add("pur-\tpose-\tless", "ph @r\tp V s\tl V s");
result.add("pur-\tpose-\tly", "ph @r\tp V s\tl i:");
result.add("pur-\tring", "ph @r\tI N");
result.add("pur-\tser", "ph @r\ts @r");
result.add("pur-\tses", "ph @r\ts V z");
result.add("pur-\tsu-\tant", "ph @r\ts u:\tV n t");
result.add("pur-\tsu-\ter", "ph @r\ts u:\t@r");
result.add("pur-\tsu-\ters", "ph @r\ts u:\t@r z");
result.add("pur-\tsu-\ting", "ph @r\ts u:\tI N");
result.add("pur-\tsue", "ph @r\ts u:");
result.add("pur-\tsued", "ph @r\ts u: d");
result.add("pur-\tsues", "ph @r\ts u: z");
result.add("pur-\tsuit", "ph @r\ts u: t");
result.add("pur-\tsuits", "ph @r\ts u: t s");
result.add("pur-\tve-\tyor", "ph @r\tv eI\t@r");
result.add("pur-\tve-\tyors", "ph @r\tv eI\t@r z");
result.add("pur-\tvey", "ph @r\tv eI");
result.add("pur-\tview", "ph @r v\tj u:");
result.add("pur-\tvis", "ph @r\tv I s");
result.add("pur-\tyear", "ph @r\tj I@");
result.add("pure", "ph j U@");
result.add("pure-\tly", "ph j U@\tl i:");
result.add("pureb-\tred", "ph j U@ b\tr e d");
result.add("pureb-\treds", "ph j U@ b\tr e d z");
result.add("purge", "ph @r dZ");
result.add("purged", "ph @r dZ d");
result.add("purp-\tlish", "ph @r p\tl I S");
result.add("purr", "ph @r");
result.add("purrs", "ph @r z");
result.add("purs-\tley", "ph @r s\tl i:");
result.add("purse", "ph @r s");
result.add("pursed", "ph @r s t");
result.add("pus", "ph V s");
result.add("pus-\tses", "ph U\ts V z");
result.add("pus-\tsy", "ph U\ts i:");
result.add("pus-\tsy-\tcat", "ph U\ts i:\tk { t");
result.add("push", "ph U S");
result.add("push-\tkin", "ph U S\tk I n");
result.add("push-\to-\tver", "ph U\tS @U\tv @r");
result.add("push-\tup", "ph U\tS V p");
result.add("push-\tups", "ph U\tS V p s");
result.add("pushed", "ph U S t");
result.add("puss", "ph U s");
result.add("put", "ph U t");
result.add("put-\tdown", "ph U t\td aU n");
result.add("put-\tnam", "ph V t\tn V m");
result.add("put-\tnam's", "ph V t\tn V m z");
result.add("put-\tney", "ph V t\tn i:");
result.add("put-\ton", "ph U\tt Q n");
result.add("put-\tons", "ph U\tt Q n z");
result.add("put-\trid", "ph j u: t\tr I d");
result.add("put-\tte-\trer", "ph V\tt @r\t@r");
result.add("put-\tte-\tring", "ph V\tt @r\tI N");
result.add("put-\tted", "ph V\tt V d");
result.add("put-\tter", "ph V\tt @r");
result.add("put-\tters", "ph V\tt @r z");
result.add("put-\tting", "ph V\tt I N");
result.add("put-\tty", "ph V\tt i:");
result.add("puts", "ph U t s");
result.add("putsch", "ph U tS");
result.add("putt", "ph V t");
result.add("putt-\tnam", "ph V t\tn V m");
result.add("putt-\tnam's", "ph V t\tn V m z");
result.add("putts", "ph V t s");
result.add("putz", "ph V t s");
result.add("puz-\tz-\tling", "ph V\tz V\tl I N");
result.add("puz-\tzle", "ph V\tz V l");
result.add("puz-\tzle-\tment", "ph V\tz V l\tm V n t");
result.add("puz-\tzled", "ph V\tz V l d");
result.add("puz-\tzles", "ph V\tz V l z");
result.add("puzz-\tler", "ph V z\tl @r");
result.add("py-\tatt", "ph aI\tV t");
result.add("py-\tlo-\tri", "ph aI\tl O@\ti:");
result.add("py-\tlon", "ph aI\tl Q n");
result.add("py-\tlons", "ph aI\tl Q n z");
result.add("py-\tlos", "ph aI\tl @U s");
result.add("py-\tra-\tmi-\tdal", "ph @r\t{\tm I\td V l");
result.add("py-\tra-\tmid", "ph I@\tV\tm V d");
result.add("py-\tra-\tmids", "ph I@\tV\tm I d z");
result.add("py-\tre-\tna", "ph I@\ti:\tn V");
result.add("py-\tre-\tnees", "ph I@\tV\ti: z");
result.add("py-\trite", "ph aI\tr aI t");
result.add("py-\tro", "ph aI\tr @U");
result.add("py-\tro-\ttech-\tnic", "ph aI\tr @U\tt e k\tn I k");
result.add("py-\tro-\ttech-\tnics", "ph aI\tr @U\tt e k\tn I k s");
result.add("py-\tro-\txene", "ph aI\tr Q k\ts i: n");
result.add("py-\tthi-\ta", "ph I\tT i:\tV");
result.add("py-\tthon", "ph aI\tT Q n");
result.add("py-\tthon's", "ph aI\tT Q n z");
result.add("py-\txis", "ph I k\ts I s");
result.add("pye", "ph aI");
result.add("pyg-\tma-\tlion", "ph I g\tm eI l\tj V n");
result.add("pyg-\tmies", "ph I g\tm i: z");
result.add("pyg-\tmy", "ph I g\tm i:");
result.add("pyke", "ph aI k");
result.add("pyle", "ph aI l");
result.add("pyne", "ph aI n");
result.add("pynes", "ph aI n z");
result.add("pyong-\tyang", "ph j O: N\tj { N");
result.add("pyong-\tyang's", "ph j O: N\tj { N z");
result.add("pyr-\trhic", "ph I@\tI k");
result.add("q", "kh j u:");
result.add("q.", "kh j u:");
result.add("qa-\ttar", "kh V\tt Q@");
result.add("qan-\ttas", "kh Q n\tt V s");
result.add("qi", "kh i:");
result.add("qing-\tdao", "tS I N\td aU");
result.add("qom", "kh Q m");
result.add("q's", "kh j u: z");
result.add("qu", "kh u:");
result.add("qua", "kh w Q");
result.add("qua-\tker", "kh w eI\tk @r");
result.add("qua-\tkers", "kh w eI\tk @r z");
result.add("qua-\tker's", "kh w eI\tk @r z");
result.add("qua-\tking", "kh w eI\tk I N");
result.add("qua-\tli-\tfi-\tca-\ttion", "kh w Q\tl I\tf I\tk eI\tS V n");
result.add("qua-\tli-\tfi-\tca-\ttions", "kh w Q\tl I\tf I\tk eI\tS V n z");
result.add("qua-\tli-\tfi-\ter", "kh w Q\tl I\tf aI\t@r");
result.add("qua-\tli-\tfi-\ters", "kh w Q\tl I\tf aI\t@r z");
result.add("qua-\tli-\tfied", "kh w Q\tl I\tf aI d");
result.add("qua-\tli-\tfies", "kh w Q\tl I\tf aI z");
result.add("qua-\tli-\tfy", "kh w Q\tl I\tf aI");
result.add("qua-\tli-\tfy-\ting", "kh w Q\tl I\tf aI\tI N");
result.add("qua-\tli-\tta-\ttive", "kh w Q\tl I\tt eI\tt I v");
result.add("qua-\tli-\tta-\ttive-\tly", "kh w Q\tl I\tt eI\tt I v\tl i:");
result.add("qua-\tli-\tties", "kh w Q\tl I\tt i: z");
result.add("qua-\tli-\tty", "kh w Q\tl I\tt i:");
result.add("qua-\tran-\tte", "kh w @r\tQ n\tt eI");
result.add("qua-\tran-\tti-\tning", "kh w O@\tV n\tt i:\tn I N");
result.add("qua-\tran-\ttine", "kh w O@\tV n\tt i: n");
result.add("qua-\tran-\ttined", "kh w O@\tV n\tt i: n d");
result.add("qua-\tran-\ttines", "kh w O@\tV n\tt i: n z");
result.add("qua-\tsar", "kh w eI\tz Q@");
result.add("qua-\tshing", "kh w O:\tS I N");
result.add("qua-\tsi", "kh w Q\ts i:");
result.add("qua-\tsi-\tmo-\tdo", "kh {\tz i:\tm @U\td @U");
result.add("qua-\tter-\tna-\try", "kh w Q\tt @r\tn e@\ti:");
result.add("quac-\tke-\try", "kh w {\tk @r\ti:");
result.add("quac-\tken-\tbush", "kh w {\tk V n\tb U S");
result.add("quack", "kh w { k");
result.add("quacks", "kh w { k s");
result.add("quad", "kh w Q d");
result.add("quad-\tra", "kh w { d\tr V");
result.add("quad-\trant", "kh w Q d\tr V n t");
result.add("quad-\tren-\tni-\tal", "kh w Q d\tr e\tn i:\tV l");
result.add("quad-\tri-\tceps", "kh w Q d\tr I\ts e p s");
result.add("quad-\trip-\tle-\tgic", "kh w Q d\tr I p\tl i:\tdZ I k");
result.add("quad-\tru-\tp-\tling", "kh w Q d\tr u:\tp V\tl I N");
result.add("quad-\tru-\tple", "kh w Q d\tr u:\tp V l");
result.add("quad-\tru-\tpled", "kh w Q d\tr u:\tp V l d");
result.add("quads", "kh w Q d z");
result.add("quag-\tmi-\tre", "kh w { g\tm aI\t@r");
result.add("quai", "kh i:");
result.add("quail", "kh w eI l");
result.add("quails", "kh w eI l z");
result.add("quain-\ttance", "kh w eI n\tt V n s");
result.add("quaint", "kh w eI n t");
result.add("quaint-\tly", "kh w eI n\tt l i:");
result.add("quake", "kh w eI k");
result.add("quakes", "kh w eI k s");
result.add("qual", "kh w Q l");
result.add("quale", "kh w eI l");
result.add("qualms", "kh w Q m z");
result.add("quam", "kh w Q m");
result.add("quan", "kh w O: n");
result.add("quan-\tda-\tries", "kh w Q n\td @r\ti: z");
result.add("quan-\tda-\try", "kh w Q n\td @r\ti:");
result.add("quan-\tti-\tco", "kh w Q n\tt I\tk @U");
result.add("quan-\tti-\tfi-\ta-\tble", "kh w Q n\tt I\tf aI\tV\tb e l");
result.add("quan-\tti-\tfi-\tca-\ttion", "kh w Q n\tt I\tf I\tk eI\tS V n");
result.add("quan-\tti-\tfied", "kh w Q n\tt I\tf aI d");
result.add("quan-\tti-\tfy", "kh w Q n\tt I\tf aI");
result.add("quan-\tti-\tfy-\ting", "kh w Q n\tt I\tf aI\tI N");
result.add("quan-\tti-\tta-\ttive", "kh w Q n\tt I\tt eI\tt I v");
result.add("quan-\tti-\tta-\ttive-\tly", "kh w Q n\tt I\tt eI\tt I v\tl i:");
result.add("quan-\tti-\tties", "kh w Q n\tt I\tt i: z");
result.add("quan-\tti-\tty", "kh w Q n\tt I\tt i:");
result.add("quan-\ttum", "kh w Q n\tt V m");
result.add("quan-\ttum's", "kh w Q n\tt V m z");
result.add("quant", "kh w { n t");
result.add("quar-\tre-\tling", "kh w Q@\tV\tl I N");
result.add("quar-\trel", "kh w O@\tV l");
result.add("quar-\trel-\tsome", "kh w O@\tV l\ts V m");
result.add("quar-\treled", "kh w O@\tV l d");
result.add("quar-\trels", "kh w O@\tV l z");
result.add("quar-\tries", "kh w O@\ti: z");
result.add("quar-\try", "kh w O@\ti:");
result.add("quar-\try-\ting", "kh w O@\ti:\tI N");
result.add("quar-\tter", "kh w O@\tt @r");
result.add("quar-\tter-\tbac-\tking", "kh w O@\tt @r\tb {\tk I N");
result.add("quar-\tter-\tback", "kh w O@\tt @r\tb { k");
result.add("quar-\tter-\tbacks", "kh w O@\tt @r\tb { k s");
result.add("quar-\tter-\tdeck", "kh w O@\tt @r\td e k");
result.add("quar-\tter-\tly", "kh w O@\tt @r\tl i:");
result.add("quar-\tter-\tman", "kh w O@\tt @r\tm V n");
result.add("quar-\tter-\tmas-\tter", "kh w O@\tt @r\tm { s\tt @r");
result.add("quar-\tters", "kh w O@\tt @r z");
result.add("quar-\tter's", "kh w O@\tt @r z");
result.add("quar-\ttet", "kh w O@\tt e t");
result.add("quar-\ttets", "kh w O@\tt e t s");
result.add("quar-\ttet's", "kh w O@\tt e t s");
result.add("quar-\ttile", "kh w O@\tt I l");
result.add("quar-\tto", "kh w O@\tt @U");
result.add("quark", "kh w Q@ k");
result.add("quarks", "kh w Q@ k s");
result.add("quarles", "kh w O@ l z");
result.add("quart", "kh w O@ t");
result.add("quarts", "kh w O@ t s");
result.add("quartz", "kh w O@ t s");
result.add("quas-\tsi-\ta", "kh w Q\tS i:\tV");
result.add("quash", "kh w O: S");
result.add("quashed", "kh w O: S t");
result.add("quave", "kh w eI v");
result.add("quay", "kh i:");
result.add("quayle", "kh w eI l");
result.add("quayle's", "kh w eI l z");
result.add("que", "kh j u:");
result.add("que-\tbe-\tcois", "kh w e\tb e k\tw Q");
result.add("que-\tbec", "kh w V\tb e k");
result.add("que-\tbec-\tker", "kh w V\tb e\tk @r");
result.add("que-\tbec-\tkers", "kh w V\tb e\tk @r z");
result.add("que-\tbec's", "kh w V\tb e k s");
result.add("que-\tchee", "kh w e\ttS i:");
result.add("que-\tmoy", "kh w V\tm OI");
result.add("que-\tri-\tda", "kh w e@\ti:\td V");
result.add("que-\tried", "kh w I@\ti: d");
result.add("que-\tries", "kh w I@\ti: z");
result.add("que-\tru-\tlous", "kh w e@\tV\tl V s");
result.add("que-\try", "kh w i:\tr i:");
result.add("que-\tsa-\tda", "kh w eI\ts Q\td V");
result.add("quea-\tsi-\tness", "kh w i:\tz i:\tn V s");
result.add("quea-\tsy", "kh w i:\tz i:");
result.add("quee-\tna", "kh w i:\tn V");
result.add("quee-\tnie", "kh w i:\tn i:");
result.add("quee-\trer", "kh w I@\t@r");
result.add("queen", "kh w i: n");
result.add("queen-\tfi-\tsh's", "kh w i: n\tf I\tS V z");
result.add("queen-\tfish", "kh w i: n\tf I S");
result.add("queens", "kh w i: n z");
result.add("queen's", "kh w i: n z");
result.add("queens-\tber-\try", "kh w i: n\tz b e@\ti:");
result.add("queens-\tland", "kh w i: n\tz l { n d");
result.add("queer", "kh w I@");
result.add("queers", "kh w I@ z");
result.add("quel-\tling", "kh w e\tl I N");
result.add("quell", "kh w e l");
result.add("quelled", "kh w e l d");
result.add("quen-\tby", "kh w e n\tb i:");
result.add("quen-\tcher", "kh w e n\ttS @r");
result.add("quen-\tchers", "kh w e n\ttS @r z");
result.add("quen-\tching", "kh w e n\ttS I N");
result.add("quen-\ttin", "kh w e n\tt I n");
result.add("quench", "kh w e n tS");
result.add("querns", "kh w @r n z");
result.add("ques", "kh j u: z");
result.add("ques-\tnel", "kh w eI s\tn e l");
result.add("ques-\ttio-\tna-\tble", "kh w e s\ttS V\tn V\tb V l");
result.add("ques-\ttio-\tner", "kh w e s\ttS V\tn @r");
result.add("ques-\ttio-\tners", "kh w e s\ttS V\tn @r z");
result.add("ques-\ttio-\tning", "kh w e s\ttS V\tn I N");
result.add("ques-\ttio-\tnings", "kh w e s\ttS V\tn I N z");
result.add("ques-\ttion", "kh w e s\ttS V n");
result.add("ques-\ttion-\tmark", "kh w e s\ttS V n\tm Q@ k");
result.add("ques-\ttion-\tnaire", "kh w e s\ttS V\tn e@");
result.add("ques-\ttion-\tnaires", "kh w e s\ttS V\tn e@ z");
result.add("ques-\ttioned", "kh w e s\ttS V n d");
result.add("ques-\ttions", "kh w e s\ttS V n z");
result.add("ques-\ttion's", "kh w e s\ttS V n z");
result.add("quest", "kh w e s t");
result.add("quests", "kh w e s t s");
result.add("queu-\ting", "kh j u:\tI N");
result.add("queue", "kh j u:");
result.add("queues", "kh j u: z");
result.add("qui", "kh w i:");
result.add("qui-\te-\tscent", "kh w aI\te\ts V n t");
result.add("qui-\te-\tted", "kh w aI\tV\tt V d");
result.add("qui-\te-\tter", "kh w aI\tV\tt @r");
result.add("qui-\te-\ttest", "kh w aI\tV\tt V s t");
result.add("qui-\te-\tting", "kh w aI\tV\tt I N");
result.add("qui-\te-\ttist", "kh w aI\tV\tt V s t");
result.add("qui-\tet", "kh w aI\tV t");
result.add("qui-\tet-\tly", "kh w aI\tV t\tl i:");
result.add("qui-\tet-\tness", "kh w aI\tV t\tn V s");
result.add("qui-\tets", "kh w aI\tV t s");
result.add("qui-\tles", "kh w i:\tl e s");
result.add("qui-\tna", "kh w i:\tn V");
result.add("qui-\tnine", "kh w aI\tn aI n");
result.add("qui-\tnon", "kh w I\tn V n");
result.add("qui-\tnones", "kh w V\tn @U n z");
result.add("qui-\tring", "kh w aI\tr I N");
result.add("qui-\tto", "kh w i:\tt @U");
result.add("qui-\tto's", "kh w i:\tt @U z");
result.add("qui-\tve-\tring", "kh w I\tv @r\tI N");
result.add("qui-\tver", "kh w I\tv @r");
result.add("qui-\txo-\tte", "kh i:\th @U\tt i:");
result.add("qui-\txo-\ttic", "kh w I k\ts Q\tt I k");
result.add("quib-\tb-\tling", "kh w I\tb V\tl I N");
result.add("quib-\tble", "kh w I\tb V l");
result.add("quib-\tbles", "kh w I\tb V l z");
result.add("quic-\tke-\tning", "kh w I\tk V\tn I N");
result.add("quic-\tkel", "kh w I\tk V l");
result.add("quic-\tken", "kh w I\tk V n");
result.add("quic-\tkened", "kh w I\tk V n d");
result.add("quic-\tkens", "kh w I\tk V n z");
result.add("quic-\tker", "kh w I\tk @r");
result.add("quic-\tkest", "kh w I\tk V s t");
result.add("quic-\tkie", "kh w I\tk i:");
result.add("quiche", "kh i: S");
result.add("quick", "kh w I k");
result.add("quick-\tly", "kh w I k\tl i:");
result.add("quick-\tness", "kh w I k\tn V s");
result.add("quick-\tsand", "kh w I k\ts { n d");
result.add("quick-\tsands", "kh w I k\ts { n d z");
result.add("quick-\tsil-\tver", "kh w I k\ts I l\tv @r");
result.add("quid", "kh w I d");
result.add("quig-\tley", "kh w I g\tl i:");
result.add("quil-\tlan", "kh w I\tl V n");
result.add("quil-\tling", "kh w I\tl I N");
result.add("quil-\tlon", "kh w I\tl V n");
result.add("quil-\tted", "kh w I l\tt V d");
result.add("quil-\tter", "kh w I l\tt @r");
result.add("quil-\tters", "kh w I l\tt @r z");
result.add("quil-\tting", "kh w I l\tt I N");
result.add("quill", "kh w I l");
result.add("quill-\tman", "kh w i: l\tm { n");
result.add("quilmes", "kh w I l m z");
result.add("quilt", "kh w I l t");
result.add("quilts", "kh w I l t s");
result.add("quim-\tby", "kh w I m\tb i:");
result.add("quin", "kh w I n");
result.add("quin-\tby", "kh w I n\tb i:");
result.add("quin-\tcey", "kh w I n\ts i:");
result.add("quin-\tcy", "kh w I n\ts i:");
result.add("quin-\tcy's", "kh w I n\ts i: z");
result.add("quin-\tlan", "kh w I n\tl V n");
result.add("quin-\tta", "kh w I n\tt V");
result.add("quin-\tta-\tna", "kh w i: n\tt {\tn V");
result.add("quin-\ttal", "kh w I n\tt V l");
result.add("quin-\tte-\tro", "kh w i: n\tt e@\t@U");
result.add("quin-\tter", "kh w I n\tt @r");
result.add("quin-\ttes-\tsen-\ttial", "kh w I n\tt V\ts e n\tS V l");
result.add("quin-\ttes-\tsen-\ttial-\tly", "kh w I n\tt V\ts e n\ttS V\tl i:");
result.add("quin-\ttes-\tsence", "kh w I n\tt e\ts V n s");
result.add("quin-\ttet", "kh w I n\tt e t");
result.add("quin-\tti-\tna", "kh w i: n\tt i:\tn V");
result.add("quin-\ttile", "kh w I n\tt I l");
result.add("quin-\ttin", "kh w I n\tt I n");
result.add("quin-\tto", "kh w I n\tt @U");
result.add("quin-\tton", "kh w I n\tt O: n");
result.add("quin-\ttu-\tple", "kh w I n\tt u:\tp V l");
result.add("quin-\ttu-\tpled", "kh w I n\tt j u:\tp V l d");
result.add("quin-\ttup-\tlet", "kh w I n\tt V p\tl V t");
result.add("quin-\ttup-\tlets", "kh w I n\tt V p\tl V t s");
result.add("quince", "kh w I n s");
result.add("quine", "kh w aI n");
result.add("quinn", "kh w I n");
result.add("quinn's", "kh w I n z");
result.add("quint", "kh w I n t");
result.add("quints", "kh w I n t s");
result.add("quip", "kh w I p");
result.add("quipped", "kh w I p t");
result.add("quips", "kh w I p s");
result.add("quir-\tky", "kh w @r\tk i:");
result.add("quire", "kh w aI r");
result.add("quirk", "kh w @r k");
result.add("quirks", "kh w @r k s");
result.add("quis-\tling", "kh w I z\tl I N");
result.add("quist", "kh w I s t");
result.add("quist's", "kh w I s t s");
result.add("quit", "kh w I t");
result.add("quit-\tter", "kh w I\tt @r");
result.add("quit-\tters", "kh w I\tt @r z");
result.add("quit-\tting", "kh w I\tt I N");
result.add("quite", "kh w aI t");
result.add("quits", "kh w I t s");
result.add("quiz", "kh w I z");
result.add("quiz-\tzes", "kh w I\tz V z");
result.add("quiz-\tzi-\tcal", "kh w I\tz I\tk V l");
result.add("quiz-\tzing", "kh w I\tz I N");
result.add("quizzed", "kh w I z d");
result.add("quo", "kh w @U");
result.add("quo-\trum", "kh w O@\tV m");
result.add("quo-\trums", "kh w O@\tV m z");
result.add("quo-\tta", "kh w @U\tt V");
result.add("quo-\tta-\tble", "kh w @U\tt V\tb V l");
result.add("quo-\tta-\ttion", "kh w @U\tt eI\tS V n");
result.add("quo-\tta-\ttions", "kh w @U\tt eI\tS V n z");
result.add("quo-\ttas", "kh w @U\tt V z");
result.add("quo-\tted", "kh w @U\tt V d");
result.add("quo-\ttient", "kh w @U\tS V n t");
result.add("quo-\tting", "kh w @U\tt I N");
result.add("quote", "kh w @U t");
result.add("quotes", "kh w @U t s");
result.add("r", "Q@");
result.add("r-\tb", "Q@\tb i:");
result.add("r-\te-\tva-\tlu-\ta-\ttions", "r i:\tI\tv { l\tj u:\teI\tS V n z");
result.add("r-\tp-\tm", "Q@\tp i:\te m");
result.add("r-\twan-\tda", "r V\tw Q n\td V");
result.add("r-\twan-\tdan", "r V\tw Q n\td V n");
result.add("r-\twan-\tdans", "r V\tw Q n\td V n z");
result.add("r-\twan-\tda's", "r V\tw Q n\td V z");
result.add("r-\twan-\tdese", "r V\tw Q\td i: z");
result.add("r.", "Q@");
result.add("ra", "r Q");
result.add("ra-\tbi", "r Q\tb i:");
result.add("ra-\tbi-\tno-\twitz", "r V\tb I\tn V\tw I t s");
result.add("ra-\tbid", "r {\tb I d");
result.add("ra-\tbies", "r eI\tb i: z");
result.add("ra-\tbin", "r Q\tb i: n");
result.add("ra-\tbin's", "r Q\tb i: n z");
result.add("ra-\tca-\tmier", "r {\tk V\tm aI r");
result.add("ra-\tcemes", "r eI\ts i: m z");
result.add("ra-\tcer", "r eI\ts @r");
result.add("ra-\tcers", "r eI\ts @r z");
result.add("ra-\tces", "r eI\ts V z");
result.add("ra-\tce's", "r eI\ts V z");
result.add("ra-\tcette", "r V\ts e t");
result.add("ra-\tchel", "r eI\ttS V l");
result.add("ra-\tchelle", "r V\tS e l");
result.add("ra-\tchel's", "r eI\ttS V l z");
result.add("ra-\tci-\tness", "r eI\ts i:\tn V s");
result.add("ra-\tci-\tsm", "r eI\ts I\tz V m");
result.add("ra-\tcia-\tli-\tsm", "r eI\tS V\tl I\tz V m");
result.add("ra-\tcial", "r eI\tS V l");
result.add("ra-\tcial-\tly", "r eI\tS V\tl i:");
result.add("ra-\tcine", "r V\ts i: n");
result.add("ra-\tcing", "r eI\ts I N");
result.add("ra-\tcist", "r eI\ts I s t");
result.add("ra-\tcists", "r eI\ts I s t s");
result.add("ra-\tdi-\ta-\tted", "r eI\td i:\teI\tt V d");
result.add("ra-\tdi-\ta-\tting", "r eI\td i:\teI\tt I N");
result.add("ra-\tdi-\ta-\ttion", "r eI\td i:\teI\tS V n");
result.add("ra-\tdi-\ta-\ttion's", "r eI\td i:\teI\tS V n z");
result.add("ra-\tdi-\ta-\ttor", "r eI\td i:\teI\tt @r");
result.add("ra-\tdi-\ta-\ttors", "r eI\td i:\teI\tt @r z");
result.add("ra-\tdi-\tal-\tly", "r eI\td i:\tV\tl i:");
result.add("ra-\tdi-\tals", "r eI\td i:\tV l z");
result.add("ra-\tdi-\tance", "r eI\td i:\tV n s");
result.add("ra-\tdi-\tant", "r eI\td i:\tV n t");
result.add("ra-\tdi-\tate", "r eI\td i:\teI t");
result.add("ra-\tdi-\tates", "r eI\td i:\teI t s");
result.add("ra-\tdi-\tca-\tli-\tsm", "r {\td I\tk V\tl I\tz V m");
result.add("ra-\tdi-\tca-\tli-\tza-\ttion", "r {\td I\tk V\tl V\tz eI\tS V n");
result.add("ra-\tdi-\tca-\tlize", "r {\td I\tk V\tl aI z");
result.add("ra-\tdi-\tca-\tlized", "r {\td I\tk V\tl aI z d");
result.add("ra-\tdi-\tcal", "r {\td I\tk V l");
result.add("ra-\tdi-\tcals", "r {\td I\tk V l z");
result.add("ra-\tdi-\to", "r eI\td i:\t@U");
result.add("ra-\tdi-\to-\tac-\tti-\tvi-\tty", "r eI\td i:\t@U\t{ k\tt I\tv I\tt i:");
result.add("ra-\tdi-\to-\tac-\ttive", "r eI\td i:\t@U\t{ k\tt I v");
result.add("ra-\tdi-\to-\tgra-\tphy", "r eI\td i:\tQ g\tr V\tf i:");
result.add("ra-\tdi-\to-\tlo-\tgi-\tcal", "r eI\td i:\tV\tl Q\tdZ I\tk V l");
result.add("ra-\tdi-\to-\tlo-\tgist", "r eI\td i:\tQ\tl V\tdZ V s t");
result.add("ra-\tdi-\to-\tlo-\tgists", "r eI\td i:\tQ\tl V\tdZ V s t s");
result.add("ra-\tdi-\to-\tlo-\tgy", "r eI\td i:\tQ\tl V\tdZ i:");
result.add("ra-\tdi-\to-\tman", "r eI\td i:\t@U\tm { n");
result.add("ra-\tdi-\toed", "r eI\td i:\t@U d");
result.add("ra-\tdi-\tos", "r eI\td i:\t@U z");
result.add("ra-\tdi-\to's", "r eI\td i:\t@U z");
result.add("ra-\tdi-\tshes", "r {\td I\tS V z");
result.add("ra-\tdi-\tum", "r eI\td i:\tV m");
result.add("ra-\tdi-\tus", "r eI\td i:\tV s");
result.add("ra-\tdical-\tly", "r {\td I k\tl i:");
result.add("ra-\tdis-\tson", "r {\td I\ts V n");
result.add("ra-\tdish", "r {\td I S");
result.add("ra-\tdon", "r eI\td Q n");
result.add("ra-\tdu", "r Q\td u:");
result.add("ra-\tfa-\tel", "r Q\tf aI\te l");
result.add("ra-\tfale", "r V\tf eI l");
result.add("ra-\tfi", "r {\tf i:");
result.add("ra-\tgan", "r eI\tg V n");
result.add("ra-\tgas", "r Q\tg V z");
result.add("ra-\tgen", "r {\tg V n");
result.add("ra-\tger", "r eI\tg @r");
result.add("ra-\tges", "r eI\tdZ V z");
result.add("ra-\tging", "r eI\tdZ I N");
result.add("ra-\tgle", "r eI\tg V l");
result.add("ra-\tgo", "r Q\tg @U");
result.add("ra-\tgu-\tsa", "r Q\tg u:\ts V");
result.add("ra-\tguc-\tci", "r Q\tg u:\ttS i:");
result.add("ra-\thal", "r V\th Q l");
result.add("ra-\ti", "r Q\ti:");
result.add("ra-\tin-\tger", "r Q\tI\tN @r");
result.add("ra-\tjew-\tski", "r aI\te f\ts k i:");
result.add("ra-\tjiv", "r Q\tdZ i: v");
result.add("ra-\tker", "r eI\tk @r");
result.add("ra-\tkers", "r eI\tk @r z");
result.add("ra-\tking", "r eI\tk I N");
result.add("ra-\tkish", "r eI\tk I S");
result.add("ra-\tleigh", "r O:\tl i:");
result.add("ra-\tleigh's", "r O:\tl i: z");
result.add("ra-\tma", "r Q\tm V");
result.add("ra-\tma-\tda", "r V\tm Q\td V");
result.add("ra-\tma-\tdan", "r {\tm V\td V n");
result.add("ra-\tma-\tda's", "r V\tm Q\td V z");
result.add("ra-\tmage", "r {\tm I dZ");
result.add("ra-\tman", "r eI\tm V n");
result.add("ra-\tmat", "r {\tm { t");
result.add("ra-\tme-\tses", "r {\tm V\ts i: z");
result.add("ra-\tmer", "r eI\tm @r");
result.add("ra-\tmes-\tses", "r {\tm V\ts V z");
result.add("ra-\tmey", "r {\tm i:");
result.add("ra-\tmi", "r Q\tm i:");
result.add("ra-\tmi-\tfi-\tca-\ttion", "r {\tm I\tf I\tk eI\tS V n");
result.add("ra-\tmi-\tfi-\tca-\ttions", "r {\tm I\tf I\tk eI\tS V n z");
result.add("ra-\tmi-\tfy", "r {\tm I\tf aI");
result.add("ra-\tmi-\trez", "r V\tm I@\te z");
result.add("ra-\tmi-\tro", "r V\tm I@\t@U");
result.add("ra-\tmo", "r eI\tm @U");
result.add("ra-\tmo-\tna", "r V\tm @U\tn V");
result.add("ra-\tmon", "r V\tm @U n");
result.add("ra-\tmon-\tda", "r V\tm Q n\td V");
result.add("ra-\tmos", "r Q\tm @U s");
result.add("ra-\tmus", "r eI\tm V s");
result.add("ra-\tna", "r {\tn V");
result.add("ra-\tnee", "r {\tn i:");
result.add("ra-\tney", "r eI\tn i:");
result.add("ra-\tni", "r Q\tn i:");
result.add("ra-\tni-\ta", "r Q\tn i:\tV");
result.add("ra-\toul", "r Q\tu: l");
result.add("ra-\tpa-\tcious", "r V\tp {\tS V s");
result.add("ra-\tper", "r eI\tp @r");
result.add("ra-\tpers", "r eI\tp @r z");
result.add("ra-\tpha-\tel", "r Q\tf aI\te l");
result.add("ra-\tphae-\tla", "r {\tf eI\tl V");
result.add("ra-\tpi-\tdi-\tty", "r V\tp I\td V\tt i:");
result.add("ra-\tpi-\ter", "r eI\tp i:\t@r");
result.add("ra-\tpid", "r {\tp I d");
result.add("ra-\tpid-\tly", "r {\tp I d\tl i:");
result.add("ra-\tpids", "r {\tp I d z");
result.add("ra-\tping", "r eI\tp I N");
result.add("ra-\tpist", "r eI\tp I s t");
result.add("ra-\tpists", "r eI\tp I s t s");
result.add("ra-\tpist's", "r eI\tp I s t s");
result.add("ra-\tquel", "r V\tk e l");
result.add("ra-\tra", "r Q@\tV");
result.add("ra-\tre-\tfied", "r e@\tV\tf aI d");
result.add("ra-\tre-\tfy", "r e@\tV\tf aI");
result.add("ra-\trer", "r e@\t@r");
result.add("ra-\trest", "r e@\tV s t");
result.add("ra-\tri-\ttan", "r e@\tI\tt V n");
result.add("ra-\tri-\tties", "r e@\tI\tt i: z");
result.add("ra-\tri-\tty", "r e@\tI\tt i:");
result.add("ra-\tser", "r eI\tz @r");
result.add("ra-\tshes", "r {\tS V z");
result.add("ra-\tshid", "r V\tS i: d");
result.add("ra-\tsi-\ta", "r Q\ts i:\tV");
result.add("ra-\tta", "r {\tt V");
result.add("ra-\tted", "r eI\tt V d");
result.add("ra-\tter", "r eI\tt @r");
result.add("ra-\tters", "r eI\tt @r z");
result.add("ra-\tther", "r {\tD @r");
result.add("ra-\tther's", "r {\tD @r z");
result.add("ra-\tti-\tfi-\tca-\ttion", "r {\tt I\tf I\tk eI\tS V n");
result.add("ra-\tti-\tfied", "r {\tt I\tf aI d");
result.add("ra-\tti-\tfies", "r {\tt I\tf aI z");
result.add("ra-\tti-\tfy", "r {\tt I\tf aI");
result.add("ra-\tti-\tfy-\ting", "r {\tt I\tf aI\tI N");
result.add("ra-\tti-\to", "r eI\tS i:\t@U");
result.add("ra-\tti-\tos", "r eI\tS i:\t@U z");
result.add("ra-\tting", "r eI\tt I N");
result.add("ra-\ttings", "r eI\tt I N z");
result.add("ra-\ttio-\tna-\tli-\tty", "r {\tS V\tn {\tl I\tt i:");
result.add("ra-\ttio-\tna-\tli-\tza-\ttion", "r {\tS V\tn V\tl I\tz eI\tS V n");
result.add("ra-\ttio-\tna-\tli-\tza-\ttions", "r {\tS V\tn V\tl I\tz eI\tS V n z");
result.add("ra-\ttio-\tna-\tli-\tzing", "r {\tS V\tn V\tl aI\tz I N");
result.add("ra-\ttio-\tna-\tlize", "r {\tS V\tn V\tl aI z");
result.add("ra-\ttio-\tna-\tlized", "r {\tS V\tn V\tl aI z d");
result.add("ra-\ttio-\tnal", "r {\tS V\tn V l");
result.add("ra-\ttio-\tnal-\tly", "r {\tS V\tn V\tl i:");
result.add("ra-\ttio-\tnale", "r {\tS V\tn { l");
result.add("ra-\ttio-\tnales", "r {\tS V\tn { l z");
result.add("ra-\ttio-\tning", "r {\tS V\tn I N");
result.add("ra-\ttion", "r {\tS V n");
result.add("ra-\ttioned", "r {\tS V n d");
result.add("ra-\ttions", "r {\tS V n z");
result.add("ra-\tton", "r V\tt @U n");
result.add("ra-\ttu", "r Q\tt u:");
result.add("ra-\tva-\tges", "r {\tv I\tdZ V z");
result.add("ra-\tva-\tging", "r {\tv I\tdZ I N");
result.add("ra-\tvage", "r {\tv I dZ");
result.add("ra-\tvaged", "r {\tv I dZ d");
result.add("ra-\tve-\tling", "r {\tv V\tl I N");
result.add("ra-\tve-\tnel", "r {\tv V\tn e l");
result.add("ra-\tve-\tnous", "r {\tv V\tn V s");
result.add("ra-\tvel", "r {\tv V l");
result.add("ra-\tveled", "r {\tv V l d");
result.add("ra-\tvel's", "r V\tv e l z");
result.add("ra-\tven", "r eI\tv V n");
result.add("ra-\tven-\tna", "r V\tv e\tn V");
result.add("ra-\tvens", "r eI\tv V n z");
result.add("ra-\tvens-\twood", "r eI\tv V n\tz w U d");
result.add("ra-\tver", "r eI\tv @r");
result.add("ra-\tvi", "r Q\tv i:");
result.add("ra-\tvi-\to-\tli", "r {\tv i:\t@U\tl i:");
result.add("ra-\tvi-\tshing", "r {\tv I\tS I N");
result.add("ra-\tvin", "r {\tv I n");
result.add("ra-\tvine", "r V\tv i: n");
result.add("ra-\tvines", "r V\tv i: n z");
result.add("ra-\tving", "r eI\tv I N");
result.add("ra-\tvi's", "r Q\tv i: s");
result.add("ra-\twal-\tpin-\tdi", "r {\tw O: l\tp I n\td i:");
result.add("ra-\tya", "r eI\tV");
result.add("ra-\tyon", "r eI\tV n");
result.add("ra-\tzing", "r eI\tz I N");
result.add("ra-\tzor", "r eI\tz @r");
result.add("ra-\tzor-\tback", "r eI\tz @r\tb { k");
result.add("ra-\tzor-\tbacks", "r eI\tz @r\tb { k s");
result.add("ra-\tzor-\tback's", "r eI\tz @r\tb { k s");
result.add("ra-\tzors", "r eI\tz @r z");
result.add("ra-\tzor's", "r eI\tz @r z");
result.add("raab", "r Q b");
result.add("raab's", "r Q b z");
result.add("raad", "r Q d");
result.add("raap", "r Q p");
result.add("raasch", "r Q S");
result.add("rab", "r { b");
result.add("rab-\tbi", "r {\tb aI");
result.add("rab-\tbi-\tni-\tcal", "r V\tb I\tn I\tk V l");
result.add("rab-\tbis", "r {\tb aI z");
result.add("rab-\tbit", "r {\tb I t");
result.add("rab-\tbit-\tlike", "r {\tb I t\tl aI k");
result.add("rab-\tbits", "r {\tb I t s");
result.add("rab-\tble", "r {\tb V l");
result.add("rab-\tkin", "r { b\tk I n");
result.add("rabe", "r eI b");
result.add("rac-\tcoon", "r {\tk u: n");
result.add("rac-\tcoons", "r {\tk u: n z");
result.add("rac-\tke-\ttee-\tring", "r {\tk V\tt I@\tI N");
result.add("rac-\tke-\tteer", "r {\tk V\tt I@");
result.add("rac-\tke-\tteers", "r {\tk V\tt I@ z");
result.add("rac-\tker", "r {\tk @r");
result.add("rac-\tkers", "r {\tk @r z");
result.add("rac-\tket", "r {\tk V t");
result.add("rac-\tkets", "r {\tk V t s");
result.add("rac-\tking", "r {\tk I N");
result.add("race", "r eI s");
result.add("race-\thor-\tses", "r eI s\th O@\ts V z");
result.add("race-\thorse", "r eI s\th O@ s");
result.add("race-\ttrack", "r eI s\tt r { k");
result.add("race-\ttracks", "r eI s\tt r { k s");
result.add("race-\tway", "r eI s\tw eI");
result.add("raced", "r eI s t");
result.add("rach", "r { tS");
result.add("rach-\tma-\tni-\tnoff", "r { k\tm {\tn I\tn O: f");
result.add("rack", "r { k");
result.add("racked", "r { k t");
result.add("rad-\tke", "r eI d\tk i:");
result.add("rad-\tley", "r { d\tl i:");
result.add("rad-\tloff", "r { d\tl O: f");
result.add("rad-\tman", "r { d\tm V n");
result.add("rad-\tmil-\tla", "r { d\tm I\tl V");
result.add("rad-\tnor", "r { d\tn @r");
result.add("rae", "r eI");
result.add("rae-\tburn", "r eI\tb @r n");
result.add("raf", "r { f");
result.add("raf-\tfer-\tty", "r {\tf @r\tt i:");
result.add("raf-\tfish", "r {\tf I S");
result.add("raf-\tfle", "r {\tf V l");
result.add("raf-\tfles", "r {\tf V l z");
result.add("raf-\tfo", "r {\tf @U");
result.add("raf-\tsan-\tja-\tni", "r { f\ts V n\tdZ Q\tn i:");
result.add("raf-\tted", "r { f\tt V d");
result.add("raf-\tter", "r { f\tt @r");
result.add("raf-\tters", "r { f\tt @r z");
result.add("raf-\tting", "r { f\tt I N");
result.add("rafe", "r eI f");
result.add("raff", "r { f");
result.add("raft", "r { f t");
result.add("rafts", "r { f t s");
result.add("rag", "r { g");
result.add("rag-\tge-\tdy", "r {\tg V\td i:");
result.add("rag-\tged", "r {\tg V d");
result.add("rag-\tland", "r { g\tl V n d");
result.add("rag-\tlin", "r { g\tl I n");
result.add("rag-\tmen", "r { g\tm V n");
result.add("rag-\ttag", "r { g\tt { g");
result.add("rag-\ttime", "r { g\tt aI m");
result.add("rag-\tweed", "r { g\tw i: d");
result.add("rage", "r eI dZ");
result.add("raged", "r eI dZ d");
result.add("rags", "r { g z");
result.add("rags-\tdale", "r { g\tz d eI l");
result.add("rah", "r Q");
result.add("rah-\tman", "r Q\tm V n");
result.add("rah-\tman's", "r Q\tm V n z");
result.add("rah-\tway", "r Q\tw eI");
result.add("rahm", "r { m");
result.add("rai-\ta", "r Q\tj V");
result.add("rai-\tded", "r eI\td V d");
result.add("rai-\tder", "r eI\td @r");
result.add("rai-\tders", "r eI\td @r z");
result.add("rai-\tder's", "r eI\td @r z");
result.add("rai-\tding", "r eI\td I N");
result.add("rai-\tford", "r eI\tf @r d");
result.add("rai-\tling", "r eI\tl I N");
result.add("rai-\tlings", "r eI\tl I N z");
result.add("rai-\tmon-\tdi", "r V\tm @U n\td i:");
result.add("rai-\tmon-\tdo", "r eI\tm Q n\td @U");
result.add("rai-\tna", "r eI\tn V");
result.add("rai-\tner", "r eI\tn @r");
result.add("rai-\tni-\test", "r eI\tn i:\tV s t");
result.add("rai-\tnie", "r eI\tn i:");
result.add("rai-\tnier", "r eI\tn I@");
result.add("rai-\tning", "r eI\tn I N");
result.add("rai-\tny", "r eI\tn i:");
result.add("rai-\tser", "r eI\tz @r");
result.add("rai-\tsers", "r eI\tz @r z");
result.add("rai-\tses", "r eI\tz V z");
result.add("rai-\tsin", "r eI\tz I n");
result.add("rai-\tsing", "r eI\tz I N");
result.add("rai-\tsins", "r eI\tz I n z");
result.add("rai-\tson", "r eI\ts Q n");
result.add("raid", "r eI d");
result.add("raids", "r eI d z");
result.add("rail", "r eI l");
result.add("rail-\tcar", "r eI l\tk Q@");
result.add("rail-\tcars", "r eI l\tk Q@ z");
result.add("rail-\troa-\tded", "r eI l\tr @U\td V d");
result.add("rail-\troa-\tding", "r eI l\tr @U\td I N");
result.add("rail-\troad", "r eI l\tr @U d");
result.add("rail-\troads", "r eI l\tr @U d z");
result.add("rail-\troad's", "r eI l\tr @U d z");
result.add("rail-\tway", "r eI l\tw eI");
result.add("rail-\tways", "r eI l\tw eI z");
result.add("rail-\tway's", "r eI l\tw eI z");
result.add("raile", "r eI l");
result.add("railed", "r eI l d");
result.add("rails", "r eI l z");
result.add("rail's", "r eI l z");
result.add("rain", "r eI n");
result.add("rain-\tbow", "r eI n\tb @U");
result.add("rain-\tbows", "r eI n\tb @U z");
result.add("rain-\tcoat", "r eI n\tk @U t");
result.add("rain-\tcoats", "r eI n\tk @U t s");
result.add("rain-\tcoat's", "r eI n\tk @U t s");
result.add("rain-\tdrop", "r eI n\td r Q p");
result.add("rain-\tdrops", "r eI n\td r Q p s");
result.add("rain-\tfall", "r eI n\tf O: l");
result.add("rain-\tfalls", "r eI n\tf O: l z");
result.add("rain-\tfo-\trest", "r aI n\tf O@\tV s t");
result.add("rain-\tfo-\trests", "r aI n\tf O@\tV s t s");
result.add("rain-\tma-\tker", "r eI n\tm eI\tk @r");
result.add("rain-\tstorm", "r eI n\ts t O@ m");
result.add("rain-\tstorms", "r eI n\ts t O@ m z");
result.add("rain-\twa-\tter", "r eI n\tw O:\tt @r");
result.add("raine", "r eI n");
result.add("rained", "r eI n d");
result.add("raines", "r eI n z");
result.add("rains", "r eI n z");
result.add("raise", "r eI z");
result.add("raised", "r eI z d");
result.add("rait", "r eI t");
result.add("raj", "r Q Z");
result.add("rake", "r eI k");
result.add("raked", "r eI k t");
result.add("rakes", "r eI k s");
result.add("ral-\tlied", "r {\tl i: d");
result.add("ral-\tlies", "r {\tl i: z");
result.add("ral-\tly", "r {\tl i:");
result.add("ral-\tly-\ting", "r {\tl i:\tI N");
result.add("ral-\tston", "r O: l\ts t V n");
result.add("ral-\tston's", "r Q l\ts t V n z");
result.add("rales", "r eI l z");
result.add("ralf", "r Q l f");
result.add("rall", "r O: l");
result.add("ralls", "r O: l z");
result.add("ralph", "r { l f");
result.add("ralphs", "r { l f s");
result.add("ralph's", "r { l f s");
result.add("ram", "r { m");
result.add("ram-\tberg", "r { m\tb @r g");
result.add("ram-\tbert", "r { m\tb @r t");
result.add("ram-\tble", "r { m\tb V l");
result.add("ram-\tbled", "r { m\tb V l d");
result.add("ram-\tbo", "r { m\tb @U");
result.add("ram-\tbow", "r { m\tb @U");
result.add("ram-\tbunc-\ttious", "r { m\tb V N\tk S V s");
result.add("ram-\tmel", "r {\tm V l");
result.add("ram-\tmer", "r {\tm @r");
result.add("ram-\tming", "r {\tm I N");
result.add("ram-\tpa-\tges", "r { m\tp eI\tdZ V z");
result.add("ram-\tpa-\tging", "r { m\tp eI\tdZ I N");
result.add("ram-\tpage", "r { m\tp eI dZ");
result.add("ram-\tpaged", "r { m\tp eI dZ d");
result.add("ram-\tpant", "r { m\tp V n t");
result.add("ram-\tparts", "r { m\tp Q@ t s");
result.add("ram-\tping", "r { m\tp I N");
result.add("ram-\trod", "r { m\tr Q d");
result.add("ram-\tsay", "r { m\tz i:");
result.add("ram-\tses", "r { m\ts i: z");
result.add("ram-\tseur", "r V m\ts @r");
result.add("ram-\tsey", "r { m\tz i:");
result.add("ram-\tsey's", "r { m\tz i: z");
result.add("ram-\tshac-\tkle", "r { m\tS {\tk V l");
result.add("ramb-\tler", "r { m\tb l @r");
result.add("ramb-\tlers", "r { m\tb l @r z");
result.add("ramb-\tling", "r { m\tb l I N");
result.add("rammed", "r { m d");
result.add("ramp", "r { m p");
result.add("ramps", "r { m p s");
result.add("rams", "r { m z");
result.add("rams-\tdell", "r { m\ts d V l");
result.add("rams-\tden", "r { m\ts d V n");
result.add("rams-\ttein", "r { m\ts t aI n");
result.add("ran", "r { n");
result.add("ran-\tce's", "r { n\ts V z");
result.add("ran-\tcher", "r { n\ttS @r");
result.add("ran-\tchers", "r { n\ttS @r z");
result.add("ran-\tches", "r { n\ttS V z");
result.add("ran-\tching", "r { n\ttS I N");
result.add("ran-\tcho", "r { n\ttS @U");
result.add("ran-\tch's", "r { n\ttS V z");
result.add("ran-\tcid", "r { n\ts I d");
result.add("ran-\tco-\trous", "r { N\tk @r\tV s");
result.add("ran-\tco-\trous-\tness", "r { N\tk @r\tV s\tn V s");
result.add("ran-\tcor", "r { N\tk @r");
result.add("ran-\tda", "r Q n\td V");
result.add("ran-\tdal", "r { n\td V l");
result.add("ran-\tdall", "r { n\td V l");
result.add("ran-\tda's", "r Q n\td V z");
result.add("ran-\tdel", "r { n\td V l");
result.add("ran-\tdell", "r { n\td e l");
result.add("ran-\tder", "r { n\td @r");
result.add("ran-\tdi", "r { n\td i:");
result.add("ran-\tdle", "r { n\td V l");
result.add("ran-\tdle-\tman", "r { n\td V l\tm V n");
result.add("ran-\tdo-\tmize", "r { n\td V\tm aI z");
result.add("ran-\tdo-\tmized", "r { n\td V\tm aI z d");
result.add("ran-\tdolf", "r { n\td @U l f");
result.add("ran-\tdolph", "r { n\td Q l f");
result.add("ran-\tdom", "r { n\td V m");
result.add("ran-\tdom-\tly", "r { n\td V m\tl i:");
result.add("ran-\tdom-\tness", "r { n\td V m\tn V s");
result.add("ran-\tdy", "r { n\td i:");
result.add("ran-\tdy's", "r { n\td i: z");
result.add("ran-\tgel", "r { n\tdZ e l");
result.add("ran-\tger", "r eI n\tdZ @r");
result.add("ran-\tgers", "r eI n\tdZ @r z");
result.add("ran-\tger's", "r eI n\tdZ @r z");
result.add("ran-\tges", "r eI n\tdZ V z");
result.add("ran-\tging", "r eI n\tdZ I N");
result.add("ran-\tgoon", "r { N\tg u: n");
result.add("ran-\tgoon's", "r { N\tg u: n z");
result.add("ran-\tgy", "r eI n\tdZ i:");
result.add("ran-\tker", "r { N\tk @r");
result.add("ran-\tkers", "r { N\tk @r z");
result.add("ran-\tkin", "r { N\tk I n");
result.add("ran-\tkine", "r { N\tk aI n");
result.add("ran-\tking", "r { N\tk I N");
result.add("ran-\tkings", "r { N\tk I N z");
result.add("ran-\tkle", "r { N\tk V l");
result.add("ran-\tkled", "r { N\tk V l d");
result.add("ran-\tkles", "r { N\tk V l z");
result.add("ran-\tsac-\tking", "r { n\ts {\tk I N");
result.add("ran-\tsack", "r { n\ts { k");
result.add("ran-\tsacked", "r { n\ts { k t");
result.add("ran-\tsom", "r { n\ts V m");
result.add("ran-\tsome", "r { n\ts V m");
result.add("ran-\tsoms", "r { n\ts V m z");
result.add("ran-\tsom's", "r { n\ts V m z");
result.add("ran-\tson", "r { n\ts V n");
result.add("ran-\tted", "r { n\tt V d");
result.add("ran-\tting", "r { n\tt I N");
result.add("ran-\ttoul", "r { n\tt u: l");
result.add("rance", "r { n s");
result.add("ranch", "r { n tS");
result.add("ranch-\tland", "r { n\ttS l V n d");
result.add("rand", "r { n d");
result.add("rand-\tlett", "r { n\td l e t");
result.add("rands", "r { n d z");
result.add("rand's", "r { n d z");
result.add("rang", "r { N");
result.add("range", "r eI n dZ");
result.add("ranged", "r eI n dZ d");
result.add("ranh", "r { n");
result.add("rank", "r { N k");
result.add("rank-\tling", "r { N\tk l I N");
result.add("ranke", "r { N k");
result.add("ranked", "r { N k t");
result.add("ranks", "r { N k s");
result.add("rann", "r { n");
result.add("rant", "r { n t");
result.add("rao", "r aU");
result.add("rao's", "r aU z");
result.add("rap", "r { p");
result.add("rap-\tpel-\tling", "r V\tp e\tl I N");
result.add("rap-\tper", "r {\tp @r");
result.add("rap-\tpers", "r {\tp @r z");
result.add("rap-\tping", "r {\tp I N");
result.add("rap-\tport", "r {\tp O@");
result.add("rap-\tproche-\tment", "r { p\tr @U S\tm Q n");
result.add("rap-\tto-\tri-\tal", "r { p\tt O@\ti:\tV l");
result.add("rap-\ttor", "r { p\tt @r");
result.add("rap-\ttors", "r { p\tt @r z");
result.add("rap-\ttu-\trous", "r { p\ttS @r\tV s");
result.add("rap-\tture", "r { p\ttS @r");
result.add("rape", "r eI p");
result.add("rape-\tseed", "r eI p\ts i: d");
result.add("raped", "r eI p t");
result.add("rapes", "r eI p s");
result.add("rapp", "r { p");
result.add("rappe", "r { p");
result.add("rapped", "r { p t");
result.add("raps", "r { p s");
result.add("rapt", "r { p t");
result.add("rapt-\tly", "r { p\tt l i:");
result.add("rare", "r e@");
result.add("rare-\tly", "r e@\tl i:");
result.add("rare-\tness", "r e@\tn V s");
result.add("ras", "r { s");
result.add("ras-\tcal", "r { s\tk V l");
result.add("ras-\tcals", "r { s\tk V l z");
result.add("ras-\tkin", "r { s\tk I n");
result.add("ras-\tmus-\tsen", "r { s\tm V\ts V n");
result.add("ras-\tpu-\ttin", "r V s\tp j u:\tt I n");
result.add("ras-\tpu-\ttin's", "r { s\tp j u:\tt I n z");
result.add("ras-\tpy", "r { s\tp i:");
result.add("ras-\tter", "r { s\tt @r");
result.add("ras-\ttus", "r { s\tt V s");
result.add("rase", "r eI z");
result.add("rash", "r { S");
result.add("rask", "r { s k");
result.add("rasp", "r { s p");
result.add("rasp-\tber-\tries", "r { z\tb e@\ti: z");
result.add("rasp-\tber-\try", "r { z\tb e@\ti:");
result.add("rasped", "r { s p t");
result.add("rasps", "r { s p s");
result.add("rast", "r { s t");
result.add("rat", "r { t");
result.add("rat-\ta-\ttat", "r {\tt V\tt { t");
result.add("rat-\tche-\tted", "r { t\ttS V\tt V d");
result.add("rat-\tche-\tting", "r {\ttS V\tt I N");
result.add("rat-\tchet", "r { t\ttS V t");
result.add("rat-\tliff", "r { t\tl I f");
result.add("rat-\tt-\tler", "r {\tt V\tl @r");
result.add("rat-\ttan", "r {\tt { n");
result.add("rat-\tti-\tgan", "r {\tt I\tg V n");
result.add("rat-\tti-\tgan's", "r {\tt I\tg V n z");
result.add("rat-\ttle", "r {\tt V l");
result.add("rat-\ttled", "r {\tt V l d");
result.add("rat-\ttles", "r {\tt V l z");
result.add("rat-\ttles-\tnake", "r {\tt V l\ts n eI k");
result.add("rat-\ttles-\tnakes", "r {\tt V l\ts n eI k s");
result.add("rat-\tty", "r {\tt i:");
result.add("ratc-\tliff", "r { t\tk l I f");
result.add("ratc-\tliffe", "r { t\tk l I f");
result.add("rate", "r eI t");
result.add("rate-\tpa-\tyer", "r eI t\tp eI\t@r");
result.add("rate-\tpa-\tyers", "r eI t\tp eI\t@r z");
result.add("rates", "r eI t s");
result.add("rate's", "r eI t s");
result.add("rath", "r { T");
result.add("rath-\tbone", "r { T\tb @U n");
result.add("rath-\tskel-\tler", "r { T\ts k e\tl @r");
result.add("rathe", "r eI D");
result.add("rats", "r { t s");
result.add("ratt-\tling", "r { t\tl I N");
result.add("ratt-\tray", "r { t\tr eI");
result.add("rau-\tcous", "r O:\tk V s");
result.add("rau-\tscher", "r aU\tS @r");
result.add("rauch", "r O: tS");
result.add("raul", "r O: l");
result.add("raun", "r O: n");
result.add("raun-\tchy", "r O: n\ttS i:");
result.add("rausch", "r aU S");
result.add("rave", "r eI v");
result.add("raved", "r eI v d");
result.add("raves", "r eI v z");
result.add("raw", "r Q");
result.add("raw-\tdon", "r O:\td V n");
result.add("raw-\thide", "r O:\th aI d");
result.add("raw-\tley", "r O:\tl i:");
result.add("raw-\tlin-\tson", "r O:\tl I n\ts V n");
result.add("raw-\tlings", "r O:\tl I N z");
result.add("raw-\tlins", "r O:\tl I n z");
result.add("raw-\tness", "r O:\tn V s");
result.add("raw-\tson", "r O:\ts V n");
result.add("rawl", "r O: l");
result.add("rax", "r { k s");
result.add("ray", "r eI");
result.add("ray-\tburn", "r eI\tb @r n");
result.add("ray-\tburn's", "r eI\tb @r n z");
result.add("ray-\tford", "r eI\tf @r d");
result.add("ray-\tmond", "r eI\tm V n d");
result.add("ray-\tmun-\tdo", "r eI\tm V n\td @U");
result.add("ray-\tmund", "r eI\tm V n d");
result.add("ray-\tnard", "r eI\tn @r d");
result.add("ray-\tner", "r eI\tn @r");
result.add("ray-\tnor", "r eI\tn @r");
result.add("ray-\tthe-\ton", "r eI\tT i:\tQ n");
result.add("ray-\tthe-\ton's", "r eI\tT i:\tQ n z");
result.add("raye", "r eI");
result.add("rayed", "r eI d");
result.add("rayle", "r eI l");
result.add("rayne", "r eI n");
result.add("raynes", "r eI n z");
result.add("rays", "r eI z");
result.add("ray's", "r eI z");
result.add("raz-\tzle", "r {\tz V l");
result.add("raze", "r eI z");
result.add("razed", "r eI z d");
result.add("razz-\tma-\ttazz", "r { z\tm V\tt { z");
result.add("re", "r eI");
result.add("re-\ta-\tcquire", "r i:\tV k\tw aI r");
result.add("re-\ta-\tcquired", "r i:\tV k\tw aI r d");
result.add("re-\ta-\tgent", "r i:\teI\tdZ V n t");
result.add("re-\ta-\tgents", "r i:\teI\tdZ V n t s");
result.add("re-\ta-\tli-\tties", "r i:\t{\tl I\tt i: z");
result.add("re-\ta-\tli-\tty", "r i:\t{\tl I\tt i:");
result.add("re-\ta-\tli-\tza-\tble", "r i:\tV\tl aI\tz V\tb V l");
result.add("re-\ta-\tli-\tzes", "r i:\tV\tl aI\tz V z");
result.add("re-\ta-\tlig-\tning", "r i:\tV\tl aI\tn I N");
result.add("re-\ta-\tlign", "r i:\tV\tl aI n");
result.add("re-\ta-\tlign-\tment", "r i:\tV\tl aI n\tm V n t");
result.add("re-\ta-\tlign-\tments", "r i:\tV\tl aI n\tm V n t s");
result.add("re-\ta-\tligned", "r i:\tV\tl aI n d");
result.add("re-\ta-\tlis-\ttic", "r i:\tV\tl I s\tt I k");
result.add("re-\ta-\tlis-\ttical-\tly", "r i:\tV\tl I s\tt I k\tl i:");
result.add("re-\ta-\tna-\tly-\tses", "r i:\t{\tn V\tl aI\tz V z");
result.add("re-\ta-\tna-\tly-\tsing", "r i:\t{\tn V\tl aI\tz I N");
result.add("re-\ta-\tna-\tlyse", "r i:\t{\tn V\tl aI z");
result.add("re-\ta-\tna-\tlysed", "r i:\t{\tn V\tl aI z d");
result.add("re-\ta-\twa-\tke-\tning", "r i:\tV\tw eI\tk V\tn I N");
result.add("re-\ta-\twa-\tken", "r i:\tV\tw eI\tk V n");
result.add("re-\ta-\twa-\tkened", "r i:\tV\tw eI\tk V n d");
result.add("re-\tab-\tsorb", "r i:\tV b\tz O@ b");
result.add("re-\tab-\tsorbed", "r i:\tV b\tz O@ b d");
result.add("re-\tac-\tted", "r i:\t{ k\tt V d");
result.add("re-\tac-\tti-\tva-\tted", "r i:\t{ k\tt I\tv eI\tt I d");
result.add("re-\tac-\tti-\tva-\tting", "r i:\t{ k\tt I\tv eI\tt I N");
result.add("re-\tac-\tti-\tvate", "r i:\t{ k\tt I\tv eI t");
result.add("re-\tac-\tti-\tvi-\tty", "r i:\t{ k\tt I\tv I\tt i:");
result.add("re-\tac-\tting", "r i:\t{ k\tt I N");
result.add("re-\tac-\ttio-\tna-\tries", "r i:\t{ k\tS V\tn e@\ti: z");
result.add("re-\tac-\ttio-\tna-\try", "r i:\t{ k\tS V\tn e@\ti:");
result.add("re-\tac-\ttion", "r i:\t{ k\tS V n");
result.add("re-\tac-\ttions", "r i:\t{ k\tS V n z");
result.add("re-\tac-\ttive", "r i:\t{ k\tt I v");
result.add("re-\tac-\ttor", "r i:\t{ k\tt @r");
result.add("re-\tac-\ttors", "r i:\t{ k\tt @r z");
result.add("re-\tac-\ttor's", "r i:\t{ k\tt @r z");
result.add("re-\tact", "r i:\t{ k t");
result.add("re-\tacts", "r i:\t{ k t s");
result.add("re-\tad-\tjus-\tted", "r i:\tV\tdZ V s\tt V d");
result.add("re-\tad-\tjus-\tting", "r i:\tV\tdZ V s\tt I N");
result.add("re-\tad-\tjust", "r i:\tV\tdZ V s t");
result.add("re-\tad-\tjust-\tment", "r i:\tV\tdZ V s\tt m V n t");
result.add("re-\tad-\tjust-\tments", "r i:\tV\tdZ V s\tt m V n t s");
result.add("re-\tad-\tmit", "r i:\tV d\tm I t");
result.add("re-\tad-\tmit-\tted", "r i:\tV d\tm I\tt V d");
result.add("re-\taf-\tfi-\tli-\ta-\ttion", "r i:\tV\tf I\tl i:\teI\tS V n");
result.add("re-\taf-\tfir-\tma-\ttion", "r i:\t{\tf @r\tm eI\tS V n");
result.add("re-\taf-\tfir-\tming", "r i:\tV\tf @r\tm I N");
result.add("re-\taf-\tfirm", "r i:\tV\tf @r m");
result.add("re-\taf-\tfirmed", "r i:\tV\tf @r m d");
result.add("re-\taf-\tfirms", "r i:\tV\tf @r m z");
result.add("re-\tal-\tlo-\tca-\tted", "r i:\t{\tl V\tk eI\tt V d");
result.add("re-\tal-\tlo-\tca-\tting", "r i:\t{\tl V\tk eI\tt I N");
result.add("re-\tal-\tlo-\tca-\ttion", "r i:\t{\tl V\tk eI\tS V n");
result.add("re-\tal-\tlo-\tcate", "r i:\t{\tl V\tk eI t");
result.add("re-\tal-\tlo-\twance", "r i:\tV\tl aU\tV n s");
result.add("re-\tal-\ttor", "r i:\tV l\tt @r");
result.add("re-\tal-\ttors", "r i:\tV l\tt @r z");
result.add("re-\tal-\ttor's", "r i:\tV l\tt @r z");
result.add("re-\tal-\tty", "r i:\tV l\tt i:");
result.add("re-\tal-\tty's", "r i:\tV l\tt i: z");
result.add("re-\tap-\tpea-\trance", "r i:\tV\tp I@\tV n s");
result.add("re-\tap-\tpear", "r i:\tV\tp I@");
result.add("re-\tap-\tpeared", "r i:\tV\tp I@ d");
result.add("re-\tap-\tpears", "r i:\tV\tp I@ z");
result.add("re-\tap-\tpoin-\tted", "r i:\tV\tp OI n\tt V d");
result.add("re-\tap-\tpoint", "r i:\tV\tp OI n t");
result.add("re-\tap-\tpoint-\tment", "r i:\tV\tp OI n\tt m V n t");
result.add("re-\tap-\tpor-\ttion-\tment", "r i:\tV\tp O@\tS V n\tm V n t");
result.add("re-\tap-\tprai-\tsal", "r i:\tV p\tr eI\tz V l");
result.add("re-\tap-\tpraise", "r i:\tV p\tr eI z");
result.add("re-\tap-\tpraised", "r i:\tV p\tr eI z d");
result.add("re-\tapp-\tly", "r i:\tV p\tl i:");
result.add("re-\tar-\tma-\tment", "r i:\tQ@\tm V\tm V n t");
result.add("re-\tar-\tming", "r i:\tQ@\tm I N");
result.add("re-\tar-\tran-\tging", "r i:\t@r\teI n\tdZ I N");
result.add("re-\tar-\trange", "r i:\t@r\teI n dZ");
result.add("re-\tar-\trange-\tment", "r i:\t@r\teI n\tdZ m V n t");
result.add("re-\tar-\tranged", "r i:\t@r\teI n dZ d");
result.add("re-\tar-\tres-\tted", "r i:\t@r\te s\tt V d");
result.add("re-\tar-\trest", "r i:\t@r\te s t");
result.add("re-\tarm", "r i:\tQ@ m");
result.add("re-\tas-\tsem-\tble", "r i:\tV\ts e m\tb V l");
result.add("re-\tas-\tsem-\tbled", "r i:\tV\ts e m\tb V l d");
result.add("re-\tas-\tsemb-\tly", "r i:\tV\ts e m\tb l i:");
result.add("re-\tas-\tser-\tted", "r i:\tV\ts @r\tt V d");
result.add("re-\tas-\tser-\tting", "r i:\tV\ts @r\tt I N");
result.add("re-\tas-\tser-\ttion", "r i:\tV\ts @r\tS V n");
result.add("re-\tas-\tsert", "r i:\tV\ts @r t");
result.add("re-\tas-\tserts", "r i:\tV\ts @r t s");
result.add("re-\tas-\tses-\tsing", "r i:\tV\ts e\ts I N");
result.add("re-\tas-\tsess", "r i:\tV\ts e s");
result.add("re-\tas-\tsess-\tment", "r i:\tV\ts e s\tm V n t");
result.add("re-\tas-\tsessed", "r i:\tV\ts e s t");
result.add("re-\tas-\tsig-\tning", "r i:\tV\ts aI\tn I N");
result.add("re-\tas-\tsign", "r i:\tV\ts aI n");
result.add("re-\tas-\tsign-\tment", "r i:\tV\ts aI n\tm V n t");
result.add("re-\tas-\tsign-\tments", "r i:\tV\ts aI n\tm V n t s");
result.add("re-\tas-\tsigned", "r i:\tV\ts aI n d");
result.add("re-\tas-\tsu-\tran-\tces", "r i:\tV\tS U@\tV n\ts V z");
result.add("re-\tas-\tsu-\trance", "r i:\tV\tS U@\tV n s");
result.add("re-\tas-\tsu-\tring", "r i:\tV\tS U@\tI N");
result.add("re-\tas-\tsu-\tring-\tly", "r i:\tV\tS U@\tI N\tl i:");
result.add("re-\tas-\tsume", "r i:\tV\ts u: m");
result.add("re-\tas-\tsumed", "r i:\tV\ts u: m d");
result.add("re-\tas-\tsure", "r i:\tV\tS U@");
result.add("re-\tas-\tsured", "r i:\tV\tS U@ d");
result.add("re-\tas-\tsures", "r i:\tV\tS U@ z");
result.add("re-\tat-\ttach", "r i:\tV\tt { tS");
result.add("re-\tat-\ttached", "r i:\tV\tt { tS t");
result.add("re-\tau-\ttho-\tri-\tza-\ttion", "r i:\tO:\tT @r\tI\tz eI\tS V n");
result.add("re-\tau-\ttho-\tri-\tzing", "r i:\tO:\tT @r\taI\tz I N");
result.add("re-\tau-\ttho-\trize", "r i:\tO:\tT @r\taI z");
result.add("re-\tau-\ttho-\trized", "r i:\tO:\tT @r\taI z d");
result.add("re-\tba", "r i:\tb V");
result.add("re-\tba-\tlan-\tcing", "r i:\tb {\tl V n\ts I N");
result.add("re-\tba-\tted", "r i:\tb eI\tt V d");
result.add("re-\tback", "r i:\tb { k");
result.add("re-\tbar", "r i:\tb Q@");
result.add("re-\tbate", "r i:\tb eI t");
result.add("re-\tbates", "r i:\tb eI t s");
result.add("re-\tbe-\tka", "r V\tb i:\tk V");
result.add("re-\tbec-\tca", "r V\tb e\tk V");
result.add("re-\tbec-\tca's", "r V\tb e\tk V z");
result.add("re-\tbeck", "r i:\tb e k");
result.add("re-\tbel", "r e\tb V l");
result.add("re-\tbel-\tli-\tous-\tness", "r V\tb e\tl i:\tV s\tn V s");
result.add("re-\tbel-\tling", "r V\tb e\tl I N");
result.add("re-\tbel-\tlion", "r V\tb e l\tj V n");
result.add("re-\tbel-\tlions", "r V\tb e l\tj V n z");
result.add("re-\tbel-\tlion's", "r V\tb e l\tj V n z");
result.add("re-\tbel-\tlious", "r V\tb e l\tj V s");
result.add("re-\tbelled", "r V\tb e l d");
result.add("re-\tbels", "r e\tb V l z");
result.add("re-\tbel's", "r e\tb V l z");
result.add("re-\tbid", "r i:\tb I d");
result.add("re-\tbirth", "r i:\tb @r T");
result.add("re-\tbirths", "r i:\tb @r T s");
result.add("re-\tboard", "r i:\tb O@ d");
result.add("re-\tbook", "r i:\tb U k");
result.add("re-\tbooked", "r i:\tb U k t");
result.add("re-\tborn", "r i:\tb O@ n");
result.add("re-\tboun-\tded", "r i:\tb aU n\td V d");
result.add("re-\tboun-\tding", "r i:\tb aU n\td I N");
result.add("re-\tbound", "r i:\tb aU n d");
result.add("re-\tbounds", "r i:\tb aU n d z");
result.add("re-\tbroad-\tcast", "r i: b\tr O: d\tk { s t");
result.add("re-\tbu-\tking", "r i: b\tj u:\tk I N");
result.add("re-\tbuck", "r e\tb V k");
result.add("re-\tbuf-\tfing", "r i:\tb V\tf I N");
result.add("re-\tbuff", "r V\tb V f");
result.add("re-\tbuffed", "r V\tb V f t");
result.add("re-\tbuffs", "r i:\tb V f s");
result.add("re-\tbuil-\tder", "r i:\tb I l\td @r");
result.add("re-\tbuil-\tding", "r i:\tb I l\td I N");
result.add("re-\tbuild", "r i:\tb I l d");
result.add("re-\tbuilds", "r i:\tb I l d z");
result.add("re-\tbuilt", "r i:\tb I l t");
result.add("re-\tbuke", "r i: b\tj u: k");
result.add("re-\tbuked", "r V b\tj u: k t");
result.add("re-\tbukes", "r i: b\tj u: k s");
result.add("re-\tbus", "r i:\tb V s");
result.add("re-\tbut", "r V\tb V t");
result.add("re-\tbut-\ttal", "r V\tb V\tt V l");
result.add("re-\tbut-\ttals", "r V\tb V\tt V l z");
result.add("re-\tbut-\tted", "r V\tb V\tt V d");
result.add("re-\tbut-\tting", "r V\tb V\tt I N");
result.add("re-\tca-\tpi-\tta-\tli-\tza-\ttion", "r i:\tk {\tp I\tt V\tl I\tz eI\tS V n");
result.add("re-\tca-\tpi-\tta-\tli-\tza-\ttions", "r i:\tk {\tp I\tt V\tl I\tz eI\tS V n z");
result.add("re-\tca-\tpi-\tta-\tli-\tzing", "r i:\tk {\tp I\tt V\tl aI\tz I N");
result.add("re-\tca-\tpi-\tta-\tlize", "r i:\tk {\tp I\tt V\tl aI z");
result.add("re-\tca-\tpi-\tta-\tlized", "r i:\tk {\tp I\tt V\tl aI z d");
result.add("re-\tca-\tpi-\ttu-\tlate", "r i:\tk V\tp I\ttS V\tl eI t");
result.add("re-\tca-\tpi-\ttu-\tlates", "r i:\tk V\tp I\ttS V\tl eI t s");
result.add("re-\tcal-\tcit-\trance", "r I\tk { l\ts V t\tr V n s");
result.add("re-\tcal-\tcit-\trant", "r I\tk { l\ts I t\tr V n t");
result.add("re-\tcal-\tcu-\tla-\tted", "r i:\tk { l\tk j V\tl eI\tt I d");
result.add("re-\tcal-\tcu-\tla-\tting", "r i:\tk { l\tk j V\tl eI\tt I N");
result.add("re-\tcal-\tcu-\tla-\ttion", "r i:\tk { l\tk j V\tl eI\tS V n");
result.add("re-\tcal-\tcu-\tlate", "r i:\tk { l\tk j V\tl eI t");
result.add("re-\tcal-\tling", "r I\tk O:\tl I N");
result.add("re-\tcall", "r i:\tk O: l");
result.add("re-\tcalled", "r I\tk O: l d");
result.add("re-\tcalls", "r i:\tk O: l z");
result.add("re-\tcan-\tta-\ttion", "r e\tk V n\tt eI\tS V n");
result.add("re-\tcan-\tted", "r i:\tk { n\tt V d");
result.add("re-\tcan-\tting", "r V\tk { n\tt I N");
result.add("re-\tcant", "r i:\tk { n t");
result.add("re-\tcap", "r i:\tk { p");
result.add("re-\tcap-\tping", "r i:\tk {\tp I N");
result.add("re-\tcap-\ttu-\tring", "r i:\tk { p\ttS @r\tI N");
result.add("re-\tcap-\tture", "r i:\tk { p\ttS @r");
result.add("re-\tcap-\ttured", "r i:\tk { p\ttS @r d");
result.add("re-\tcapped", "r i:\tk { p t");
result.add("re-\tcaps", "r i:\tk { p s");
result.add("re-\tcas-\tting", "r i:\tk { s\tt I N");
result.add("re-\tcast", "r i:\tk { s t");
result.add("re-\tce-\tded", "r V\ts i:\td V d");
result.add("re-\tce-\tding", "r V\ts i:\td I N");
result.add("re-\tcede", "r V\ts i: d");
result.add("re-\tcedes", "r i:\ts i: d z");
result.add("re-\tcei-\tva-\tble", "r V\ts i:\tv V\tb V l");
result.add("re-\tcei-\tva-\tbles", "r V\ts i:\tv V\tb V l z");
result.add("re-\tcei-\tver", "r V\ts i:\tv @r");
result.add("re-\tcei-\tver-\tship", "r V\ts i:\tv @r\tS I p");
result.add("re-\tcei-\tver-\tships", "r V\ts i:\tv @r\tS I p s");
result.add("re-\tcei-\tvers", "r V\ts i:\tv @r z");
result.add("re-\tcei-\tving", "r V\ts i:\tv I N");
result.add("re-\tceipt", "r V\ts i: t");
result.add("re-\tceipts", "r V\ts i: t s");
result.add("re-\tceive", "r V\ts i: v");
result.add("re-\tceived", "r V\ts i: v d");
result.add("re-\tceives", "r V\ts i: v z");
result.add("re-\tcent", "r i:\ts V n t");
result.add("re-\tcent-\tly", "r i:\ts V n\tt l i:");
result.add("re-\tcep-\tta-\tcle", "r V\ts e p\tt V\tk V l");
result.add("re-\tcep-\tta-\tcles", "r V\ts e p\tt I\tk V l z");
result.add("re-\tcep-\tti-\tvi-\tty", "r i:\ts e p\tt I\tv I\tt i:");
result.add("re-\tcep-\ttio-\tnist", "r V\ts e p\tS V\tn I s t");
result.add("re-\tcep-\ttio-\tnists", "r V\ts e p\tS V\tn I s t s");
result.add("re-\tcep-\ttion", "r V\ts e p\tS V n");
result.add("re-\tcep-\ttions", "r V\ts e p\tS V n z");
result.add("re-\tcep-\ttive", "r V\ts e p\tt I v");
result.add("re-\tcep-\ttor", "r i:\ts e p\tt @r");
result.add("re-\tcep-\ttors", "r V\ts e p\tt @r z");
result.add("re-\tcer-\tti-\tfi-\tca-\ttion", "r i:\ts @r\tt I\tf I\tk eI\tS V n");
result.add("re-\tcer-\tti-\tfied", "r i:\ts @r\tt I\tf aI d");
result.add("re-\tcer-\tti-\tfy", "r i:\ts @r\tt I\tf aI");
result.add("re-\tcer-\tti-\tfy-\ting", "r i:\ts @r\tt I\tf aI\tI N");
result.add("re-\tces-\tses", "r i:\ts e\ts V z");
result.add("re-\tces-\tsing", "r i:\ts e\ts I N");
result.add("re-\tces-\tsio-\tna-\try", "r i:\ts e\tS V\tn e@\ti:");
result.add("re-\tces-\tsion", "r V\ts e\tS V n");
result.add("re-\tces-\tsions", "r V\ts e\tS V n z");
result.add("re-\tces-\tsion's", "r i:\ts e\tS V n z");
result.add("re-\tces-\tsive", "r V\ts e\ts I v");
result.add("re-\tcess", "r V\ts e s");
result.add("re-\tcessed", "r V\ts e s t");
result.add("re-\tchar-\tgea-\tble", "r i:\ttS Q@\tdZ V\tb V l");
result.add("re-\tchar-\tging", "r i:\ttS Q@\tdZ I N");
result.add("re-\tcharge", "r i:\ttS Q@ dZ");
result.add("re-\tcharged", "r i:\ttS Q@ dZ d");
result.add("re-\tcheck", "r i:\ttS e k");
result.add("re-\tchecked", "r i:\ttS e k t");
result.add("re-\tci-\tdi-\tvi-\tsm", "r V\ts I\td I\tv I\tz V m");
result.add("re-\tci-\tdi-\tvist", "r V\ts I\td I\tv I s t");
result.add("re-\tci-\tdi-\tvists", "r V\ts I\td I\tv I s t s");
result.add("re-\tci-\tpe", "r e\ts I\tp i:");
result.add("re-\tci-\tpes", "r e\ts I\tp i: z");
result.add("re-\tci-\tpe's", "r e\ts I\tp i: z");
result.add("re-\tci-\tpi-\tent", "r V\ts I\tp i:\te n t");
result.add("re-\tci-\tpi-\tents", "r V\ts I\tp i:\te n t s");
result.add("re-\tci-\tpi-\tent's", "r V\ts I\tp i:\te n t s");
result.add("re-\tci-\tpro-\tca-\tted", "r V\ts I p\tr V\tk eI\tt V d");
result.add("re-\tci-\tpro-\tca-\tting", "r V\ts I p\tr V\tk eI\tt I N");
result.add("re-\tci-\tpro-\tcal", "r V\ts I p\tr V\tk V l");
result.add("re-\tci-\tpro-\tcant", "r i:\ts I p\tr V\tk V n t");
result.add("re-\tci-\tpro-\tcants", "r i:\ts I p\tr V\tk V n t s");
result.add("re-\tci-\tpro-\tcate", "r V\ts I p\tr V\tk eI t");
result.add("re-\tci-\tpro-\tci-\tty", "r e\ts I p\tr Q\ts I\tt i:");
result.add("re-\tci-\tsion", "r V\ts I\tZ V n");
result.add("re-\tci-\tsions", "r V\ts I\tZ V n z");
result.add("re-\tci-\tta-\ttion", "r e\ts I\tt eI\tS V n");
result.add("re-\tci-\tta-\ttions", "r e\ts I\tt eI\tS V n z");
result.add("re-\tci-\tta-\ttives", "r e\ts I\tt V\tt i: v z");
result.add("re-\tci-\ttal", "r V\ts aI\tt V l");
result.add("re-\tci-\ttals", "r V\ts aI\tt V l z");
result.add("re-\tci-\tted", "r V\ts aI\tt V d");
result.add("re-\tci-\tting", "r i:\ts aI\tt I N");
result.add("re-\tcis-\tsion", "r V\ts I\tS V n");
result.add("re-\tcite", "r V\ts aI t");
result.add("re-\tcites", "r i:\ts aI t s");
result.add("re-\tclas-\tsi-\tfi-\tca-\ttion", "r i: k\tl {\ts I\tf I\tk eI\tS V n");
result.add("re-\tclas-\tsi-\tfied", "r i: k\tl {\ts I\tf aI d");
result.add("re-\tclas-\tsi-\tfy", "r i: k\tl {\ts I\tf aI");
result.add("re-\tclas-\tsi-\tfy-\ting", "r i: k\tl {\ts I\tf aI\tI N");
result.add("re-\tcli-\tner", "r I k\tl aI\tn @r");
result.add("re-\tcli-\tning", "r I k\tl aI\tn I N");
result.add("re-\tclu-\tsive", "r I k\tl u:\ts I v");
result.add("re-\tcluse", "r I k\tl u: s");
result.add("re-\tco-\tve-\tra-\tble", "r I\tk V\tv @r\tV\tb V l");
result.add("re-\tco-\tve-\tries", "r I\tk V\tv @r\ti: z");
result.add("re-\tco-\tve-\tring", "r V\tk V\tv @r\tI N");
result.add("re-\tco-\tve-\try's", "r I\tk V\tv @r\ti: z");
result.add("re-\tco-\tver", "r I\tk V\tv @r");
result.add("re-\tco-\tvered", "r V\tk V\tv @r d");
result.add("re-\tco-\tvers", "r I\tk V\tv @r z");
result.add("re-\tcog-\tni-\ttion", "r e\tk V g\tn I\tS V n");
result.add("re-\tcog-\tni-\ttion's", "r e\tk I g\tn I\tS V n z");
result.add("re-\tcog-\tni-\tza-\tble", "r e\tk V g\tn aI\tz V\tb V l");
result.add("re-\tcog-\tni-\tzab-\tly", "r e\tk V g\tn aI\tz V b\tl i:");
result.add("re-\tcog-\tni-\tzance", "r I\tk Q\tn I\tz V n s");
result.add("re-\tcog-\tni-\tzes", "r e\tk V g\tn aI\tz V z");
result.add("re-\tcog-\tni-\tzing", "r e\tk V g\tn aI\tz I N");
result.add("re-\tcog-\tnize", "r e\tk V g\tn aI z");
result.add("re-\tcog-\tnized", "r e\tk V g\tn aI z d");
result.add("re-\tcoil", "r i:\tk OI l");
result.add("re-\tcoiled", "r i:\tk OI l d");
result.add("re-\tcoils", "r i:\tk OI l z");
result.add("re-\tcol-\tlec-\tted", "r e\tk V\tl e k\tt V d");
result.add("re-\tcol-\tlec-\tting", "r e\tk V\tl e k\tt I N");
result.add("re-\tcol-\tlec-\ttion", "r e\tk V\tl e k\tS V n");
result.add("re-\tcol-\tlec-\ttions", "r e\tk V\tl e k\tS V n z");
result.add("re-\tcol-\tlect", "r e\tk V\tl e k t");
result.add("re-\tcol-\tlects", "r e\tk V\tl e k t s");
result.add("re-\tcom-\tbi-\tnant", "r I\tk Q m\tb I\tn V n t");
result.add("re-\tcom-\tbine", "r i:\tk V m\tb aI n");
result.add("re-\tcom-\tmen-\tda-\ttion", "r e\tk V\tm V n\td eI\tS V n");
result.add("re-\tcom-\tmen-\tda-\ttions", "r e\tk V\tm V n\td eI\tS V n z");
result.add("re-\tcom-\tmen-\tded", "r e\tk V\tm e n\td V d");
result.add("re-\tcom-\tmen-\tding", "r e\tk V\tm e n\td I N");
result.add("re-\tcom-\tmend", "r e\tk V\tm e n d");
result.add("re-\tcom-\tmends", "r e\tk V\tm e n d z");
result.add("re-\tcom-\tmit", "r I\tk Q\tm I t");
result.add("re-\tcom-\tpense", "r e\tk V m\tp e n s");
result.add("re-\tcon", "r i:\tk O: n");
result.add("re-\tcon-\tci-\tli-\ta-\ttion", "r e\tk V n\ts I\tl i:\teI\tS V n");
result.add("re-\tcon-\tci-\tli-\ta-\ttions", "r e\tk V n\ts I\tl i:\teI\tS V n z");
result.add("re-\tcon-\tci-\tling", "r e\tk V n\ts aI\tl I N");
result.add("re-\tcon-\tcile", "r e\tk V n\ts aI l");
result.add("re-\tcon-\tciled", "r e\tk V n\ts aI l d");
result.add("re-\tcon-\tciles", "r e\tk V n\ts aI l z");
result.add("re-\tcon-\tdi-\ttio-\tning", "r i:\tk V n\td I\tS V\tn I N");
result.add("re-\tcon-\tdi-\ttion", "r i:\tk V n\td I\tS V n");
result.add("re-\tcon-\tdi-\ttioned", "r i:\tk V n\td I\tS V n d");
result.add("re-\tcon-\tdite", "r e\tk V n\td aI t");
result.add("re-\tcon-\tfi-\tgu-\tra-\ttion", "r i:\tk V n\tf I g\tj @r\teI\tS V n");
result.add("re-\tcon-\tfi-\tgure", "r i:\tk V n\tf I g\tj @r");
result.add("re-\tcon-\tfi-\tgured", "r i:\tk V n\tf I g\tj @r d");
result.add("re-\tcon-\tfir-\tma-\ttion", "r i:\tk Q n\tf @r\tm eI\tS V n");
result.add("re-\tcon-\tfirm", "r i:\tk V n\tf @r m");
result.add("re-\tcon-\tfirmed", "r i:\tk V n\tf @r m d");
result.add("re-\tcon-\tnais-\tsance", "r i:\tk Q\tn V\ts V n s");
result.add("re-\tcon-\tnec-\tted", "r i:\tk V\tn e k\tt V d");
result.add("re-\tcon-\tnec-\tting", "r i:\tk V\tn e k\tt I N");
result.add("re-\tcon-\tnect", "r i:\tk V\tn e k t");
result.add("re-\tcon-\tnects", "r i:\tk V\tn e k t s");
result.add("re-\tcon-\tquer", "r i:\tk O: N\tk @r");
result.add("re-\tcon-\tquered", "r i:\tk O: N\tk @r d");
result.add("re-\tcon-\tsi-\tde-\tra-\ttion", "r i:\tk V n\ts I\td @r\teI\tS V n");
result.add("re-\tcon-\tsi-\tde-\tring", "r i:\tk V n\ts I\td @r\tI N");
result.add("re-\tcon-\tsi-\tder", "r i:\tk V n\ts I\td @r");
result.add("re-\tcon-\tsi-\tdered", "r i:\tk V n\ts I\td @r d");
result.add("re-\tcon-\tsti-\ttu-\tted", "r i:\tk Q n\ts t I\tt u:\tt I d");
result.add("re-\tcon-\tsti-\ttu-\tting", "r i:\tk Q n\ts t I\tt u:\tt I N");
result.add("re-\tcon-\tsti-\ttute", "r i:\tk Q n\ts t I\tt u: t");
result.add("re-\tcon-\tstruc-\tted", "r i:\tk V n\ts t r V k\tt V d");
result.add("re-\tcon-\tstruc-\tting", "r i:\tk V n\ts t r V k\tt I N");
result.add("re-\tcon-\tstruc-\ttion", "r i:\tk V n\ts t r V k\tS V n");
result.add("re-\tcon-\tstruc-\ttions", "r i:\tk V n\ts t r V k\tS V n z");
result.add("re-\tcon-\tstruc-\ttive", "r i:\tk V n\ts t r V k\tt I v");
result.add("re-\tcon-\tstruct", "r i:\tk V n\ts t r V k t");
result.add("re-\tcon-\tvene", "r i:\tk V n\tv i: n");
result.add("re-\tcon-\tvened", "r i:\tk V n\tv i: n d");
result.add("re-\tcon-\tvenes", "r i:\tk V n\tv i: n z");
result.add("re-\tcor-\tda-\tble", "r I\tk O@\td V\tb V l");
result.add("re-\tcor-\tded", "r V\tk O@\td V d");
result.add("re-\tcor-\tder", "r I\tk O@\td @r");
result.add("re-\tcor-\tders", "r I\tk O@\td @r z");
result.add("re-\tcor-\tding", "r V\tk O@\td I N");
result.add("re-\tcor-\tdings", "r I\tk O@\td I N z");
result.add("re-\tcord", "r V\tk O@ d");
result.add("re-\tcords", "r V\tk O@ d z");
result.add("re-\tcord's", "r e\tk @r d z");
result.add("re-\tcou-\tping", "r I\tk u:\tp I N");
result.add("re-\tcoun-\tted", "r I\tk aU n\tt V d");
result.add("re-\tcoun-\tting", "r I\tk aU n\tt I N");
result.add("re-\tcount", "r I\tk aU n t");
result.add("re-\tcounts", "r i:\tk aU n t s");
result.add("re-\tcoup", "r I\tk u: p");
result.add("re-\tcouped", "r I\tk u: p t");
result.add("re-\tcoups", "r I\tk u: p s");
result.add("re-\tcourse", "r i:\tk O@ s");
result.add("re-\tcove-\try", "r I\tk V v\tr i:");
result.add("re-\tcre-\ta-\tted", "r e k\tr i:\teI\tt V d");
result.add("re-\tcre-\ta-\tting", "r e k\tr i:\teI\tt I N");
result.add("re-\tcre-\ta-\ttio-\tnal", "r e k\tr i:\teI\tS V\tn V l");
result.add("re-\tcre-\ta-\ttion", "r e k\tr i:\teI\tS V n");
result.add("re-\tcre-\tate", "r e k\tr i:\teI t");
result.add("re-\tcre-\tates", "r e k\tr i:\teI t s");
result.add("re-\tcri-\tmi-\tna-\ttion", "r I k\tr I\tm I\tn eI\tS V n");
result.add("re-\tcri-\tmi-\tna-\ttions", "r I k\tr I\tm I\tn eI\tS V n z");
result.add("re-\tcri-\tmi-\tnate", "r I k\tr I\tm I\tn eI t");
result.add("re-\tcu-\tpe-\tra-\tting", "r I\tk u:\tp @r\teI\tt I N");
result.add("re-\tcu-\tpe-\tra-\ttion", "r I\tk u:\tp @r\teI\tS V n");
result.add("re-\tcu-\tpe-\tra-\ttive", "r I\tk u:\tp @r\tV\tt I v");
result.add("re-\tcu-\tpe-\trate", "r I\tk u:\tp @r\teI t");
result.add("re-\tcu-\tsal", "r I k\tj u:\tz V l");
result.add("re-\tcu-\tsing", "r I k\tj u:\tz I N");
result.add("re-\tcur", "r I\tk @r");
result.add("re-\tcur-\trence", "r I\tk @r\tV n s");
result.add("re-\tcur-\trent", "r I\tk @r\tV n t");
result.add("re-\tcur-\tring", "r I\tk @r\tI N");
result.add("re-\tcurred", "r i:\tk @r d");
result.add("re-\tcuse", "r I k\tj u: z");
result.add("re-\tcused", "r I k\tj u: z d");
result.add("re-\tcy-\tc-\tling", "r i:\ts aI\tk V\tl I N");
result.add("re-\tcy-\tcle", "r i:\ts aI\tk V l");
result.add("re-\tcy-\tcled", "r i:\ts aI\tk V l d");
result.add("re-\tcy-\tcles", "r i:\ts aI\tk V l z");
result.add("re-\tcyc-\tla-\tble", "r i:\ts aI k\tl V\tb V l");
result.add("re-\tcyc-\tla-\tbles", "r i:\ts aI k\tl V\tb V l z");
result.add("re-\tcyc-\tler", "r i:\ts aI k\tl @r");
result.add("re-\tcyc-\tlers", "r i:\ts aI k\tl @r z");
result.add("re-\tdac-\tted", "r V\td { k\tt V d");
result.add("re-\tdac-\tting", "r V\td { k\tt I N");
result.add("re-\tdact", "r V\td { k t");
result.add("re-\tde-\tco-\tra-\tted", "r i:\td e\tk @r\teI\tt V d");
result.add("re-\tde-\tco-\tra-\tting", "r i:\td e\tk @r\teI\tt I N");
result.add("re-\tde-\tco-\tra-\ttion", "r i:\td e\tk @r\teI\tS V n");
result.add("re-\tde-\tco-\trate", "r i:\td e\tk @r\teI t");
result.add("re-\tde-\tdi-\tca-\ttion", "r i:\td e\td I\tk eI\tS V n");
result.add("re-\tde-\tdi-\tcate", "r i:\td e\td I\tk eI t");
result.add("re-\tde-\tfi-\tni-\ttion", "r i:\td e\tf V\tn I\tS V n");
result.add("re-\tde-\tfi-\tning", "r i:\td V\tf aI\tn I N");
result.add("re-\tde-\tfine", "r i:\td V\tf aI n");
result.add("re-\tde-\tfined", "r i:\td V\tf aI n d");
result.add("re-\tde-\tfines", "r i:\td V\tf aI n z");
result.add("re-\tde-\tplo-\tying", "r i:\td V p\tl OI\tI N");
result.add("re-\tde-\tploy", "r i:\td V p\tl OI");
result.add("re-\tde-\tploy-\tment", "r i:\td V p\tl OI\tm V n t");
result.add("re-\tde-\tploy-\tments", "r i:\td V p\tl OI\tm V n t s");
result.add("re-\tde-\tployed", "r i:\td V p\tl OI d");
result.add("re-\tde-\tpo-\tsi-\ttion", "r i:\td e\tp V\tz I\tS V n");
result.add("re-\tde-\tsig-\tning", "r i:\td V\tz aI\tn I N");
result.add("re-\tde-\tsign", "r i:\td V\tz aI n");
result.add("re-\tde-\tsigned", "r i:\td V\tz aI n d");
result.add("re-\tde-\tve-\tlop", "r i:\td I\tv e\tl V p");
result.add("re-\tde-\tve-\tlop-\tment", "r i:\td I\tv e\tl V p\tm V n t");
result.add("re-\tdee-\tma-\tble", "r V\td i:\tm V\tb V l");
result.add("re-\tdee-\tming", "r V\td i:\tm I N");
result.add("re-\tdeem", "r V\td i: m");
result.add("re-\tdeemed", "r V\td i: m d");
result.add("re-\tdeems", "r V\td i: m z");
result.add("re-\tdemp-\ttion", "r V\td e m\tp S V n");
result.add("re-\tdemp-\ttions", "r V\td e m\tp S V n z");
result.add("re-\tdemp-\ttive", "r V\td e m\tp t I v");
result.add("re-\tdi-\tal", "r i:\td aI\tV l");
result.add("re-\tdi-\trec-\tted", "r i:\td @r\te k\tt V d");
result.add("re-\tdi-\trec-\tting", "r i:\td @r\te k\tt I N");
result.add("re-\tdi-\trec-\ttion", "r i:\td @r\te k\tS V n");
result.add("re-\tdi-\trect", "r i:\td @r\te k t");
result.add("re-\tdid", "r i:\td I d");
result.add("re-\tdif-\tfu-\tsion", "r i:\td I f\tj u:\tZ V n");
result.add("re-\tding", "r i:\td I N");
result.add("re-\tdis-\tco-\tve-\tring", "r i:\td I s\tk V\tv @r\tI N");
result.add("re-\tdis-\tco-\tver", "r i:\td I s\tk V\tv @r");
result.add("re-\tdis-\tco-\tvered", "r i:\td I s\tk V\tv @r d");
result.add("re-\tdis-\tcove-\try", "r i:\td I s\tk V v\tr i:");
result.add("re-\tdis-\tplay", "r i:\td I s\tp l eI");
result.add("re-\tdis-\ttri-\tbu-\tted", "r i:\td I s\tt r I b\tj u:\tt I d");
result.add("re-\tdis-\ttri-\tbu-\tting", "r i:\td I s\tt r I b\tj u:\tt I N");
result.add("re-\tdis-\ttri-\tbu-\ttion", "r i:\td I s\tt r I b\tj u:\tS V n");
result.add("re-\tdis-\ttri-\tbu-\ttive", "r i:\td I s\tt r I b\tj u:\tt I v");
result.add("re-\tdis-\ttri-\tbute", "r i:\td I s\tt r I b\tj u: t");
result.add("re-\tdis-\ttric-\tting", "r i:\td I s\tt r I k\tt I N");
result.add("re-\tdo", "r i:\td u:");
result.add("re-\tdo-\ting", "r i:\td u:\tI N");
result.add("re-\tdon-\tdo", "r V\td Q n\td @U");
result.add("re-\tdone", "r i:\td V n");
result.add("re-\tdou-\tb-\tling", "r i:\td V\tb V\tl I N");
result.add("re-\tdou-\tble", "r i:\td V\tb V l");
result.add("re-\tdou-\tbled", "r i:\td V\tb V l d");
result.add("re-\tdoub-\tta-\tble", "r V\td aU\tt V\tb V l");
result.add("re-\tdoubt", "r V\td aU t");
result.add("re-\tdound", "r V\td aU n d");
result.add("re-\tdress", "r V d\tr e s");
result.add("re-\tdu-\tces", "r V\td u:\ts V z");
result.add("re-\tdu-\tci-\tble", "r V\td u:\ts V\tb V l");
result.add("re-\tdu-\tcing", "r V\td u:\ts I N");
result.add("re-\tduc-\ttion", "r V\td V k\tS V n");
result.add("re-\tduc-\ttions", "r i:\td V k\tS V n z");
result.add("re-\tduce", "r V\td u: s");
result.add("re-\tduced", "r V\td u: s t");
result.add("re-\tdun-\tdan-\tcies", "r V\td V n\td V n\ts i: z");
result.add("re-\tdun-\tdan-\tcy", "r V\td V n\td V n\ts i:");
result.add("re-\tdun-\tdant", "r V\td V n\td V n t");
result.add("re-\te-\tdu-\tca-\ttion", "r i:\te d\tj V\tk eI\tS V n");
result.add("re-\te-\tdu-\tcate", "r i:\te\tdZ V\tk eI t");
result.add("re-\te-\tlec-\tted", "r i:\tV\tl e k\tt V d");
result.add("re-\te-\tlec-\tting", "r i:\tV\tl e k\tt I N");
result.add("re-\te-\tlec-\ttion", "r i:\tV\tl e k\tS V n");
result.add("re-\te-\tlect", "r i:\tV\tl e k t");
result.add("re-\te-\tmer-\tgence", "r i:\tV\tm @r\tdZ V n s");
result.add("re-\te-\tmerge", "r i:\tV\tm @r dZ");
result.add("re-\te-\tmerged", "r i:\tV\tm @r dZ d");
result.add("re-\te-\tnac-\tted", "r i:\tV\tn { k\tt V d");
result.add("re-\te-\tnact", "r i:\tV\tn { k t");
result.add("re-\te-\tnact-\tment", "r i:\tV\tn { k\tt m V n t");
result.add("re-\te-\tnact-\tments", "r i:\tV\tn { k\tt m V n t s");
result.add("re-\te-\tnacts", "r i:\tV\tn { k t s");
result.add("re-\te-\tva-\tlu-\ta-\tted", "r i:\tV\tv { l\tj u:\teI\tt V d");
result.add("re-\te-\tva-\tlu-\ta-\tting", "r i:\tV\tv { l\tj u:\teI\tt I N");
result.add("re-\te-\tva-\tlu-\ta-\ttion", "r i:\tV\tv { l\tj u:\teI\tS V n");
result.add("re-\te-\tva-\tlu-\tate", "r i:\tV\tv {\tl u:\teI t");
result.add("re-\te-\txa-\tmi-\tna-\ttion", "r i:\tI g\tz {\tm I\tn eI\tS V n");
result.add("re-\te-\txa-\tmi-\tning", "r i:\tI g\tz {\tm I\tn I N");
result.add("re-\te-\txa-\tmine", "r i:\te g\tz {\tm I n");
result.add("re-\te-\txa-\tmined", "r i:\tI g\tz {\tm I n d");
result.add("re-\tem-\tpha-\tsize", "r i:\te m\tf V\ts aI z");
result.add("re-\tem-\tploy-\tment", "r i:\tV m\tp l OI\tm V n t");
result.add("re-\ten-\tgi-\tnee-\tring", "r i:\te n\tdZ I\tn I@\tI N");
result.add("re-\ten-\tgi-\tneer", "r i:\te n\tdZ I\tn I@");
result.add("re-\ten-\tte-\tring", "r i:\tI n\tt @r\tI N");
result.add("re-\ten-\tter", "r i:\tI n\tt @r");
result.add("re-\ten-\ttered", "r i:\tI n\tt @r d");
result.add("re-\tent-\try", "r i:\tI n\tt r i:");
result.add("re-\tes-\ttab-\tli-\tshing", "r i:\tV s\tt { b\tl I\tS I N");
result.add("re-\tes-\ttab-\tlish", "r i:\tV s\tt { b\tl I S");
result.add("re-\tes-\ttab-\tlished", "r i:\tV s\tt { b\tl I S t");
result.add("re-\tex-\tport", "r i:\te k\ts p O@ t");
result.add("re-\tex-\tports", "r i:\te k\ts p O@ t s");
result.add("re-\tfe-\tree", "r e\tf @r\ti:");
result.add("re-\tfe-\trees", "r e\tf @r\ti: z");
result.add("re-\tfe-\tree's", "r e\tf @r\ti: z");
result.add("re-\tfe-\tren-\tces", "r e\tf @r\tV n\ts V z");
result.add("re-\tfe-\tren-\tcing", "r e\tf @r\tV n\ts I N");
result.add("re-\tfe-\tren-\tda", "r e\tf @r\te n\td V");
result.add("re-\tfe-\tren-\tdum", "r e\tf @r\te n\td V m");
result.add("re-\tfe-\tren-\tdums", "r e\tf @r\te n\td V m z");
result.add("re-\tfe-\trence", "r e\tf @r\tV n s");
result.add("re-\tfe-\trenced", "r e\tf @r\tV n s t");
result.add("re-\tfer", "r V\tf @r");
result.add("re-\tfer-\tral", "r V\tf @r\tV l");
result.add("re-\tfer-\trals", "r V\tf @r\tV l z");
result.add("re-\tfer-\tring", "r V\tf @r\tI N");
result.add("re-\tferred", "r V\tf @r d");
result.add("re-\tfers", "r V\tf @r z");
result.add("re-\tfi-\tnan-\tces", "r i:\tf I\tn { n\ts V z");
result.add("re-\tfi-\tnan-\tcing", "r i:\tf I\tn { n\ts I N");
result.add("re-\tfi-\tnan-\tcings", "r i:\tf I\tn { n\ts I N z");
result.add("re-\tfi-\tnance", "r i:\tf I\tn { n s");
result.add("re-\tfi-\tnanced", "r i:\tf I\tn { n s t");
result.add("re-\tfi-\tne-\tries", "r V\tf aI\tn @r\ti: z");
result.add("re-\tfi-\tne-\try", "r V\tf aI\tn @r\ti:");
result.add("re-\tfi-\tne-\try's", "r V\tf aI\tn @r\ti: z");
result.add("re-\tfi-\tner", "r V\tf aI\tn @r");
result.add("re-\tfi-\tners", "r V\tf aI\tn @r z");
result.add("re-\tfi-\tni-\tshing", "r i:\tf I\tn I\tS I N");
result.add("re-\tfi-\tning", "r V\tf aI\tn I N");
result.add("re-\tfi-\tnish", "r i:\tf I\tn I S");
result.add("re-\tfi-\tnished", "r i:\tf I\tn I S t");
result.add("re-\tfile", "r i:\tf aI l");
result.add("re-\tfiled", "r i:\tf aI l d");
result.add("re-\tfill", "r i:\tf I l");
result.add("re-\tfilled", "r i:\tf I l d");
result.add("re-\tfills", "r i:\tf I l z");
result.add("re-\tfine", "r V\tf aI n");
result.add("re-\tfine-\tment", "r V\tf aI n\tm V n t");
result.add("re-\tfine-\tments", "r V\tf aI n\tm V n t s");
result.add("re-\tfined", "r V\tf aI n d");
result.add("re-\tfines", "r V\tf aI n z");
result.add("re-\tfit", "r i:\tf I t");
result.add("re-\tfit-\tted", "r i:\tf I\tt V d");
result.add("re-\tfit-\tting", "r i:\tf I\tt I N");
result.add("re-\tfo-\tcu-\tses", "r i:\tf @U\tk V\ts V z");
result.add("re-\tfo-\tcu-\tsing", "r i:\tf @U\tk V\ts I N");
result.add("re-\tfo-\tcus", "r i:\tf @U\tk V s");
result.add("re-\tfo-\tcused", "r i:\tf @U\tk V s t");
result.add("re-\tfo-\tres-\tta-\ttion", "r i:\tf O@\tV s\tt eI\tS V n");
result.add("re-\tfo-\trest", "r i:\tf O@\tV s t");
result.add("re-\tfor-\tma-\ttion", "r e\tf @r\tm eI\tS V n");
result.add("re-\tfor-\tma-\tto-\tries", "r V\tf O@\tm V\tt O@\ti: z");
result.add("re-\tfor-\tma-\tto-\try", "r V\tf O@\tm V\tt O@\ti:");
result.add("re-\tfor-\tmer", "r V\tf O@\tm @r");
result.add("re-\tfor-\tmers", "r V\tf O@\tm @r z");
result.add("re-\tfor-\tming", "r V\tf O@\tm I N");
result.add("re-\tfor-\tmist", "r V\tf O@\tm I s t");
result.add("re-\tfor-\tmists", "r V\tf O@\tm I s t s");
result.add("re-\tfor-\tmu-\tla-\tted", "r i:\tf O@ m\tj V\tl eI\tt V d");
result.add("re-\tfor-\tmu-\tlate", "r i:\tf O@ m\tj V\tl eI t");
result.add("re-\tform", "r V\tf O@ m");
result.add("re-\tformed", "r V\tf O@ m d");
result.add("re-\tforms", "r V\tf O@ m z");
result.add("re-\tfrac-\ttive", "r V f\tr { k\tt I v");
result.add("re-\tfrac-\tto-\tries", "r V f\tr { k\tt @r\ti: z");
result.add("re-\tfrac-\tto-\try", "r V f\tr { k\tt @r\ti:");
result.add("re-\tfrac-\ttor", "r V f\tr { k\tt @r");
result.add("re-\tfrac-\ttors", "r V f\tr { k\tt @r z");
result.add("re-\tfrai-\tning", "r V f\tr eI\tn I N");
result.add("re-\tfrain", "r V f\tr eI n");
result.add("re-\tfrained", "r V f\tr eI n d");
result.add("re-\tfrains", "r V f\tr eI n z");
result.add("re-\tfre-\tsher", "r V f\tr e\tS @r");
result.add("re-\tfre-\tshes", "r V f\tr e\tS V z");
result.add("re-\tfre-\tshing", "r V f\tr e\tS I N");
result.add("re-\tfre-\tshing-\tly", "r i: f\tr e\tS I N\tl i:");
result.add("re-\tfresh", "r V f\tr e S");
result.add("re-\tfresh-\tment", "r V f\tr e S\tm V n t");
result.add("re-\tfresh-\tments", "r V f\tr e S\tm V n t s");
result.add("re-\tfreshed", "r i: f\tr e S t");
result.add("re-\tfri-\tge-\tra-\tted", "r V f\tr I\tdZ @r\teI\tt V d");
result.add("re-\tfri-\tge-\tra-\ttion", "r V f\tr I\tdZ @r\teI\tS V n");
result.add("re-\tfri-\tge-\tra-\ttor", "r V f\tr I\tdZ @r\teI\tt @r");
result.add("re-\tfri-\tge-\tra-\ttors", "r V f\tr I\tdZ @r\teI\tt @r z");
result.add("re-\tfri-\tge-\trant", "r V f\tr I\tdZ @r\tV n t");
result.add("re-\tfri-\tge-\trants", "r V f\tr I\tdZ @r\tV n t s");
result.add("re-\tfri-\tge-\trate", "r V f\tr I\tdZ @r\teI t");
result.add("re-\tfu-\te-\tling", "r i: f\tj u:\tV\tl I N");
result.add("re-\tfu-\tel", "r i: f\tj u:\tV l");
result.add("re-\tfu-\teled", "r i: f\tj u:\tV l d");
result.add("re-\tfu-\tgee", "r e f\tj u:\tdZ i:");
result.add("re-\tfu-\tgees", "r e f\tj u:\tdZ i: z");
result.add("re-\tfu-\tges", "r e f\tj u:\tdZ V z");
result.add("re-\tfu-\tge's", "r e f\tj u:\tdZ V z");
result.add("re-\tfu-\tsal", "r V f\tj u:\tz V l");
result.add("re-\tfu-\tsals", "r V f\tj u:\tz V l z");
result.add("re-\tfu-\tses", "r V f\tj u:\tz V z");
result.add("re-\tfu-\tsing", "r V f\tj u:\tz I N");
result.add("re-\tfu-\tta-\ttion", "r e f\tj u:\tt eI\tS V n");
result.add("re-\tfu-\tted", "r V f\tj u:\tt V d");
result.add("re-\tfu-\tting", "r V f\tj u:\tt I N");
result.add("re-\tfuge", "r e f\tj u: dZ");
result.add("re-\tfun-\tda-\tble", "r V\tf V n\td V\tb V l");
result.add("re-\tfun-\tded", "r V\tf V n\td V d");
result.add("re-\tfun-\tding", "r V\tf V n\td I N");
result.add("re-\tfund", "r V\tf V n d");
result.add("re-\tfunds", "r V\tf V n d z");
result.add("re-\tfur-\tbi-\tshing", "r i:\tf @r\tb I\tS I N");
result.add("re-\tfur-\tbish", "r i:\tf @r\tb I S");
result.add("re-\tfur-\tbish-\tment", "r i:\tf @r\tb I S\tm V n t");
result.add("re-\tfur-\tbished", "r i:\tf @r\tb I S t");
result.add("re-\tfuse", "r V f\tj u: z");
result.add("re-\tfuse-\tnik", "r V f\tj u: z\tn I k");
result.add("re-\tfuse-\tniks", "r V f\tj u: z\tn I k s");
result.add("re-\tfused", "r V f\tj u: z d");
result.add("re-\tfute", "r V f\tj u: t");
result.add("re-\tfutes", "r V f\tj u: t s");
result.add("re-\tga-\tla-\tdo", "r eI\tg Q\tl Q\td @U");
result.add("re-\tga-\tlia", "r I\tg eI l\tj V");
result.add("re-\tga-\tling", "r I\tg eI\tl I N");
result.add("re-\tgai-\tning", "r V\tg eI\tn I N");
result.add("re-\tgain", "r V\tg eI n");
result.add("re-\tgained", "r i:\tg eI n d");
result.add("re-\tgains", "r i:\tg eI n z");
result.add("re-\tgal", "r i:\tg V l");
result.add("re-\tgal-\tly", "r i:\tg V\tl i:");
result.add("re-\tgaled", "r I\tg eI l d");
result.add("re-\tgan", "r i:\tg V n");
result.add("re-\tgan's", "r i:\tg V n z");
result.add("re-\tgar-\tded", "r V\tg Q@\td V d");
result.add("re-\tgar-\tding", "r V\tg Q@\td I N");
result.add("re-\tgard", "r V\tg Q@ d");
result.add("re-\tgard-\tless", "r V\tg Q@ d\tl V s");
result.add("re-\tgards", "r I\tg Q@ d z");
result.add("re-\tgat-\tta", "r I\tg Q\tt V");
result.add("re-\tgat-\ttas", "r V\tg Q\tt V z");
result.add("re-\tge-\tne-\tra-\tted", "r i:\tdZ e\tn @r\teI\tt V d");
result.add("re-\tge-\tne-\tra-\tting", "r i:\tdZ e\tn @r\teI\tt I N");
result.add("re-\tge-\tne-\tra-\ttion", "r i:\tdZ e\tn @r\teI\tS V n");
result.add("re-\tge-\tne-\trate", "r i:\tdZ e\tn @r\teI t");
result.add("re-\tgel", "r e\tg V l");
result.add("re-\tgen", "r e\tg V n");
result.add("re-\tgen-\tcy", "r i:\tdZ V n\ts i:");
result.add("re-\tgen-\tcy's", "r i:\tdZ V n\ts i: z");
result.add("re-\tgens-\tburg", "r i:\tg V n\tz b @r g");
result.add("re-\tgent", "r i:\tdZ V n t");
result.add("re-\tgents", "r i:\tdZ V n t s");
result.add("re-\tger", "r i:\tg @r");
result.add("re-\tgi-\tmen", "r e\tdZ I\tm e n");
result.add("re-\tgi-\tmen-\tta-\ttion", "r e\tdZ I\tm e n\tt eI\tS V n");
result.add("re-\tgi-\tmen-\ttal", "r e\tdZ I\tm e n\tt V l");
result.add("re-\tgi-\tmen-\tted", "r e\tdZ I\tm e n\tt I d");
result.add("re-\tgi-\tmens", "r e\tdZ I\tm e n z");
result.add("re-\tgi-\tment", "r e\tdZ I\tm e n t");
result.add("re-\tgi-\tments", "r e\tdZ I\tm V n t s");
result.add("re-\tgi-\tna", "r I\tdZ i:\tn V");
result.add("re-\tgi-\tnald", "r e\tdZ I\tn V l d");
result.add("re-\tgi-\tnald's", "r e\tdZ I\tn V l d z");
result.add("re-\tgime", "r V\tZ i: m");
result.add("re-\tgimes", "r V\tZ i: m z");
result.add("re-\tgime's", "r eI\tZ i: m z");
result.add("re-\tgio-\tna-\tlize", "r i:\tdZ V\tn V\tl aI z");
result.add("re-\tgio-\tna-\tlized", "r i:\tdZ V\tn V\tl aI z d");
result.add("re-\tgio-\tnal", "r i:\tdZ V\tn V l");
result.add("re-\tgio-\tnal-\tly", "r i:\tdZ V\tn V\tl i:");
result.add("re-\tgio-\tnals", "r i:\tdZ V\tn V l z");
result.add("re-\tgion", "r i:\tdZ V n");
result.add("re-\tgions", "r i:\tdZ V n z");
result.add("re-\tgion's", "r i:\tdZ V n z");
result.add("re-\tgis", "r i:\tdZ I s");
result.add("re-\tgis-\tte-\tring", "r e\tdZ I s\tt @r\tI N");
result.add("re-\tgis-\tter", "r e\tdZ I s\tt @r");
result.add("re-\tgis-\ttered", "r e\tdZ I s\tt @r d");
result.add("re-\tgis-\tters", "r e\tdZ I s\tt @r z");
result.add("re-\tgis-\tter's", "r e\tdZ I s\tt @r z");
result.add("re-\tgis-\ttrant", "r e\tdZ I s\tt r V n t");
result.add("re-\tgis-\ttrants", "r e\tdZ I s\tt r V n t s");
result.add("re-\tgis-\ttries", "r e\tdZ I s\tt r i: z");
result.add("re-\tgis-\ttry", "r e\tdZ I s\tt r i:");
result.add("re-\tgist-\tra-\ttion", "r e\tdZ I s\tt r eI\tS V n");
result.add("re-\tgist-\tra-\ttions", "r e\tdZ I s\tt r eI\tS V n z");
result.add("re-\tgist-\trar", "r e\tdZ I s\tt r Q@");
result.add("re-\tgist-\trars", "r e\tdZ I s\tt r Q@ z");
result.add("re-\tgo", "r e\tg @U");
result.add("re-\tgres-\tsion", "r V g\tr e\tS V n");
result.add("re-\tgres-\tsions", "r V g\tr e\tS V n z");
result.add("re-\tgres-\tsive", "r V g\tr e\ts I v");
result.add("re-\tgress", "r i: g\tr e s");
result.add("re-\tgrou-\tping", "r i: g\tr u:\tp I N");
result.add("re-\tgroup", "r i: g\tr u: p");
result.add("re-\tgrouped", "r i: g\tr u: p t");
result.add("re-\tgu-\tla", "r e\tg u:\tl V");
result.add("re-\tgu-\tla-\tri-\tty", "r e g\tj V\tl e@\tV\tt i:");
result.add("re-\tgu-\tla-\tted", "r e g\tj V\tl eI\tt V d");
result.add("re-\tgu-\tla-\tting", "r e g\tj V\tl eI\tt I N");
result.add("re-\tgu-\tla-\ttion", "r e g\tj V\tl eI\tS V n");
result.add("re-\tgu-\tla-\ttions", "r e g\tj V\tl eI\tS V n z");
result.add("re-\tgu-\tla-\ttive", "r e g\tj V\tl eI\tt I v");
result.add("re-\tgu-\tla-\tto-\try", "r e g\tj V\tl V\tt O@\ti:");
result.add("re-\tgu-\tla-\ttor", "r e g\tj V\tl eI\tt @r");
result.add("re-\tgu-\tla-\ttors", "r e g\tj V\tl eI\tt @r z");
result.add("re-\tgu-\tla-\ttor's", "r e g\tj V\tl eI\tt @r z");
result.add("re-\tgu-\tlar", "r e g\tj V\tl @r");
result.add("re-\tgu-\tlar-\tly", "r e g\tj V\tl @r\tl i:");
result.add("re-\tgu-\tlars", "r e g\tj V\tl @r z");
result.add("re-\tgu-\tlate", "r e g\tj V\tl eI t");
result.add("re-\tgu-\tlates", "r e g\tj V\tl eI t s");
result.add("re-\tha-\tbi-\tli-\tta-\tted", "r i:\th V\tb I\tl V\tt eI\tt V d");
result.add("re-\tha-\tbi-\tli-\tta-\tting", "r i:\th V\tb I\tl V\tt eI\tt I N");
result.add("re-\tha-\tbi-\tli-\tta-\ttion", "r i:\th V\tb I\tl V\tt eI\tS V n");
result.add("re-\tha-\tbi-\tli-\tta-\ttions", "r i:\th V\tb I\tl V\tt eI\tS V n z");
result.add("re-\tha-\tbi-\tli-\tta-\ttive", "r i:\th V\tb I\tl V\tt eI\tt I v");
result.add("re-\tha-\tbi-\tli-\tta-\ttor", "r i:\th V\tb I\tl V\tt eI\tt @r");
result.add("re-\tha-\tbi-\tli-\tta-\ttors", "r i:\th V\tb I\tl V\tt eI\tt @r z");
result.add("re-\tha-\tbi-\tli-\ttate", "r i:\th V\tb I\tl V\tt eI t");
result.add("re-\tha-\tshing", "r i:\th {\tS I N");
result.add("re-\thab", "r i:\th { b");
result.add("re-\thash", "r i:\th { S");
result.add("re-\thea-\tring", "r i:\th I@\tI N");
result.add("re-\thea-\trings", "r i:\th I@\tI N z");
result.add("re-\thear", "r i:\th I@");
result.add("re-\thear-\tsal", "r V\th @r\ts V l");
result.add("re-\thear-\tsals", "r V\th @r\ts V l z");
result.add("re-\thear-\tses", "r i:\th @r\ts V z");
result.add("re-\thear-\tsing", "r V\th @r\ts I N");
result.add("re-\thearse", "r i:\th @r s");
result.add("re-\thearsed", "r i:\th @r s t");
result.add("re-\thi-\tred", "r i:\th aI\t@r d");
result.add("re-\thi-\tring", "r i:\th aI\tr I N");
result.add("re-\thire", "r i:\th aI r");
result.add("re-\thyd-\tra-\ttion", "r i:\th aI d\tr eI\tS V n");
result.add("re-\thyd-\trate", "r i:\th aI d\tr eI t");
result.add("re-\ti-\tna", "r eI\ti:\tn V");
result.add("re-\ti-\tte-\tra-\tted", "r i:\tI\tt @r\teI\tt V d");
result.add("re-\ti-\tte-\tra-\tting", "r i:\tI\tt @r\teI\tt I N");
result.add("re-\ti-\tte-\tra-\ttion", "r i:\tI\tt @r\teI\tS V n");
result.add("re-\ti-\tte-\trate", "r i:\tI\tt @r\teI t");
result.add("re-\ti-\tte-\trates", "r i:\tI\tt @r\teI s");
result.add("re-\tig-\tni-\tted", "r i:\tI g\tn aI\tt V d");
result.add("re-\tig-\tni-\tting", "r i:\tI g\tn aI\tt I N");
result.add("re-\tig-\tnite", "r i:\tI g\tn aI t");
result.add("re-\tim-\tbur-\tses", "r i:\tI m\tb @r\ts V z");
result.add("re-\tim-\tbur-\tsing", "r i:\tI m\tb @r\ts I N");
result.add("re-\tim-\tburse", "r i:\tI m\tb @r s");
result.add("re-\tim-\tburse-\tment", "r i:\tI m\tb @r s\tm e n t");
result.add("re-\tim-\tburse-\tments", "r i:\tI m\tb @r s\tm e n t s");
result.add("re-\tim-\tbursed", "r i:\tI m\tb @r s t");
result.add("re-\tim-\tpo-\tsi-\ttion", "r i:\tI m\tp V\tz I\tS V n");
result.add("re-\tim-\tpo-\tsing", "r i:\tI m\tp @U\tz I N");
result.add("re-\tim-\tpose", "r i:\tI m\tp @U z");
result.add("re-\tim-\tposed", "r i:\tI m\tp @U z d");
result.add("re-\tin-\tcar-\tna-\tted", "r i:\tI n\tk Q@\tn eI\tt V d");
result.add("re-\tin-\tcar-\tna-\ttion", "r i:\tI n\tk Q@\tn eI\tS V n");
result.add("re-\tin-\tcar-\tnate", "r i:\tI n\tk Q@\tn eI t");
result.add("re-\tin-\tcor-\tpo-\tra-\tting", "r i:\tI n\tk O@\tp @r\teI\tt I N");
result.add("re-\tin-\tcor-\tpo-\tra-\ttion", "r i:\tI n\tk O@\tp @r\teI\tS V n");
result.add("re-\tin-\tcor-\tpo-\trate", "r i:\tI n\tk O@\tp @r\teI t");
result.add("re-\tin-\tdus-\ttri-\ta-\tlize", "r i:\tI n\td V s\tt r i:\tQ\tl aI z");
result.add("re-\tin-\tfor-\tces", "r i:\tI n\tf O@\ts V z");
result.add("re-\tin-\tfor-\tcing", "r i:\tI n\tf O@\ts I N");
result.add("re-\tin-\tforce", "r i:\tI n\tf O@ s");
result.add("re-\tin-\tforce-\tment", "r i:\tI n\tf O@ s\tm e n t");
result.add("re-\tin-\tforce-\tments", "r i:\tI n\tf O@ s\tm e n t s");
result.add("re-\tin-\tforced", "r i:\tI n\tf O@ s t");
result.add("re-\tin-\tspec-\ttion", "r i:\tI n\ts p e k\tS V n");
result.add("re-\tin-\tspec-\ttions", "r i:\tI n\ts p e k\tS V n s");
result.add("re-\tin-\tspect", "r i:\tI n\ts p e k t");
result.add("re-\tin-\tsta-\tted", "r i:\tI n\ts t eI\tt V d");
result.add("re-\tin-\tsta-\tting", "r i:\tI n\ts t eI\tt I N");
result.add("re-\tin-\tstall", "r i:\tI n\ts t Q l");
result.add("re-\tin-\tstalled", "r i:\tI n\ts t Q l d");
result.add("re-\tin-\tstalls", "r i:\tI n\ts t Q l z");
result.add("re-\tin-\tstate", "r i:\tI n\ts t eI t");
result.add("re-\tin-\tstate-\tment", "r i:\tI n\ts t eI t\tm V n t");
result.add("re-\tin-\tsti-\ttu-\tted", "r i:\tI n\ts t I\tt u:\tt I d");
result.add("re-\tin-\tsti-\ttu-\tting", "r i:\tI n\ts t I\tt u:\tt I N");
result.add("re-\tin-\tsti-\ttute", "r i:\tI n\ts t I\tt u: t");
result.add("re-\tin-\tsu-\trance", "r i:\tI n\tS U@\tV n s");
result.add("re-\tin-\tsu-\trer", "r i:\tI n\tS U@\t@r");
result.add("re-\tin-\tsu-\trers", "r i:\tI n\tS U@\t@r z");
result.add("re-\tin-\tsure", "r i:\tI n\tS U@");
result.add("re-\tin-\tsured", "r i:\tI n\tS U@ d");
result.add("re-\tin-\tteg-\tra-\tted", "r i:\tI n\tt V g\tr eI\tt V d");
result.add("re-\tin-\tteg-\tra-\ttion", "r i:\tI n\tt V g\tr eI\tS V n");
result.add("re-\tin-\tteg-\trate", "r i:\tI n\tt V g\tr eI t");
result.add("re-\tin-\tter-\tpre-\tta-\ttion", "r i:\tI n\tt @r p\tr V\tt eI\tS V n");
result.add("re-\tin-\tter-\tpre-\tted", "r i:\tI n\tt @r p\tr V\tt V d");
result.add("re-\tin-\tter-\tpre-\tting", "r i:\tI n\tt @r p\tr V\tt I N");
result.add("re-\tin-\tter-\tpret", "r i:\tI n\tt @r p\tr V t");
result.add("re-\tin-\ttro-\tdu-\tces", "r i:\tI n\tt r V\td u:\ts V z");
result.add("re-\tin-\ttro-\tdu-\tcing", "r i:\tI n\tt r V\td u:\ts I N");
result.add("re-\tin-\ttro-\tduc-\ttion", "r i:\tI n\tt r V\td V k\tS V n");
result.add("re-\tin-\ttro-\tduce", "r i:\tI n\tt r V\td u: s");
result.add("re-\tin-\ttro-\tduced", "r i:\tI n\tt r V\td u: s t");
result.add("re-\tin-\tven-\tted", "r i:\tI n\tv e n\tt V d");
result.add("re-\tin-\tven-\tting", "r i:\tI n\tv e n\tt I N");
result.add("re-\tin-\tven-\ttion", "r i:\tI n\tv e n\tS V n");
result.add("re-\tin-\tvent", "r i:\tI n\tv e n t");
result.add("re-\tin-\tves-\tted", "r i:\tI n\tv e s\tt I d");
result.add("re-\tin-\tves-\tting", "r i:\tI n\tv e s\tt I N");
result.add("re-\tin-\tvest", "r i:\tI n\tv e s t");
result.add("re-\tin-\tvest-\tment", "r i:\tI n\tv e s\tt m V n t");
result.add("re-\tin-\tvests", "r i:\tI n\tv e s t s");
result.add("re-\tin-\tvi-\tgo-\tra-\tted", "r i:\tI n\tv I\tg @r\teI\tt I d");
result.add("re-\tin-\tvi-\tgo-\tra-\tting", "r i:\tI n\tv I\tg @r\teI\tt I N");
result.add("re-\tin-\tvi-\tgo-\tra-\ttion", "r i:\tI n\tv I\tg @r\teI\tS V n");
result.add("re-\tin-\tvi-\tgo-\trate", "r i:\tI n\tv I\tg @r\teI t");
result.add("re-\tin-\tvi-\tted", "r i:\tI n\tv aI\tt I d");
result.add("re-\tin-\tvite", "r i:\tI n\tv aI t");
result.add("re-\tint-\tro-\tduc-\ttion", "r i:\tI n\tt r V\td V k\tS V n");
result.add("re-\tis-\tsu-\ting", "r i:\tI\tS u:\tI N");
result.add("re-\tis-\tsue", "r i:\tI\tS u:");
result.add("re-\tis-\tsued", "r i:\tI\tS u: d");
result.add("re-\tis-\tter", "r i:\tI s\tt @r");
result.add("re-\tist", "r i:\tI s t");
result.add("re-\tjec-\tted", "r I\tdZ e k\tt V d");
result.add("re-\tjec-\tting", "r I\tdZ e k\tt I N");
result.add("re-\tjec-\ttio-\tnist", "r I\tdZ e k\tS V\tn I s t");
result.add("re-\tjec-\ttio-\tnists", "r I\tdZ e k\tS V\tn I s t s");
result.add("re-\tjec-\ttion", "r I\tdZ e k\tS V n");
result.add("re-\tjec-\ttions", "r I\tdZ e k\tS V n z");
result.add("re-\tject", "r I\tdZ e k t");
result.add("re-\tjects", "r I\tdZ e k t s");
result.add("re-\tjig-\tge-\tring", "r i:\tdZ I\tg @r\tI N");
result.add("re-\tjoi-\tcing", "r I\tdZ OI\ts I N");
result.add("re-\tjoi-\tning", "r i:\tdZ OI\tn I N");
result.add("re-\tjoice", "r I\tdZ OI s");
result.add("re-\tjoiced", "r I\tdZ OI s t");
result.add("re-\tjoin", "r i:\tdZ OI n");
result.add("re-\tjoin-\tder", "r I\tdZ OI n\td @r");
result.add("re-\tjoined", "r i:\tdZ OI n d");
result.add("re-\tjoins", "r i:\tdZ OI n z");
result.add("re-\tju-\tve-\tna-\tted", "r I\tdZ u:\tv V\tn eI\tt V d");
result.add("re-\tju-\tve-\tna-\tting", "r i:\tdZ u:\tv V\tn eI\tt I N");
result.add("re-\tju-\tve-\tna-\ttion", "r I\tdZ u:\tv V\tn eI\tS V n");
result.add("re-\tju-\tve-\tnate", "r I\tdZ u:\tv V\tn eI t");
result.add("re-\tju-\tve-\tnates", "r I\tdZ u:\tv V\tn eI t s");
result.add("re-\tkin-\tdle", "r i:\tk I n\td V l");
result.add("re-\tkin-\tdled", "r i:\tk I n\td V l d");
result.add("re-\tkind-\tling", "r i:\tk I n\td l I N");
result.add("re-\tla-\tbel", "r i:\tl eI\tb V l");
result.add("re-\tla-\tted", "r V\tl eI\tt V d");
result.add("re-\tla-\tti-\tvi-\tsm", "r e\tl V\tt I\tv I\tz V m");
result.add("re-\tla-\tti-\tvi-\tty", "r e\tl V\tt I\tv V\tt i:");
result.add("re-\tla-\tti-\tvis-\ttic", "r e\tl V\tt I\tv I s\tt I k");
result.add("re-\tla-\tting", "r V\tl eI\tt I N");
result.add("re-\tla-\ttio-\tnal", "r i:\tl eI\tS V\tn V l");
result.add("re-\tla-\ttion", "r i:\tl eI\tS V n");
result.add("re-\tla-\ttion-\tship", "r i:\tl eI\tS V n\tS I p");
result.add("re-\tla-\ttion-\tships", "r i:\tl eI\tS V n\tS I p s");
result.add("re-\tla-\ttions", "r i:\tl eI\tS V n z");
result.add("re-\tla-\ttive", "r e\tl V\tt I v");
result.add("re-\tla-\ttive-\tly", "r e\tl V\tt I v\tl i:");
result.add("re-\tla-\ttives", "r e\tl V\tt I v z");
result.add("re-\tla-\txa-\ttion", "r i:\tl { k\ts eI\tS V n");
result.add("re-\tla-\txes", "r V\tl { k\ts V z");
result.add("re-\tla-\txing", "r V\tl { k\ts I N");
result.add("re-\tlap-\tses", "r i:\tl { p\ts V z");
result.add("re-\tlap-\tsing", "r V\tl { p\ts I N");
result.add("re-\tlapse", "r i:\tl { p s");
result.add("re-\tlapsed", "r i:\tl { p s t");
result.add("re-\tlate", "r V\tl eI t");
result.add("re-\tlates", "r V\tl eI t s");
result.add("re-\tlaunch", "r i:\tl O: n tS");
result.add("re-\tlax", "r V\tl { k s");
result.add("re-\tlaxed", "r V\tl { k s t");
result.add("re-\tlay", "r i:\tl eI");
result.add("re-\tlay-\ting", "r i:\tl eI\tI N");
result.add("re-\tlayed", "r i:\tl eI d");
result.add("re-\tlays", "r i:\tl eI z");
result.add("re-\tle-\tga-\tted", "r e\tl V\tg eI\tt V d");
result.add("re-\tle-\tga-\tting", "r e\tl V\tg eI\tt I N");
result.add("re-\tle-\tgate", "r e\tl V\tg eI t");
result.add("re-\tle-\tvan-\tcy", "r e\tl V\tv V n\ts i:");
result.add("re-\tle-\tvance", "r e\tl V\tv V n s");
result.add("re-\tle-\tvant", "r e\tl V\tv V n t");
result.add("re-\tlea-\tses", "r V\tl i:\ts V z");
result.add("re-\tlea-\tsing", "r i:\tl i:\ts I N");
result.add("re-\tlear-\tning", "r i:\tl e@\tn I N");
result.add("re-\tlearn", "r i:\tl e@ n");
result.add("re-\tlease", "r i:\tl i: s");
result.add("re-\tleased", "r i:\tl i: s t");
result.add("re-\tlen-\tding", "r i:\tl e n\td I N");
result.add("re-\tlen-\tted", "r V\tl e n\tt V d");
result.add("re-\tlen-\tting", "r V\tl e n\tt I N");
result.add("re-\tlend", "r i:\tl e n d");
result.add("re-\tlent", "r V\tl e n t");
result.add("re-\tlent-\tless", "r V\tl e n\tt l V s");
result.add("re-\tlent-\tless-\tly", "r V\tl e n\tt l V s\tl i:");
result.add("re-\tli-\ta-\tbi-\tli-\tty", "r i:\tl aI\tV\tb I\tl V\tt i:");
result.add("re-\tli-\ta-\tble", "r V\tl aI\tV\tb V l");
result.add("re-\tli-\tab-\tly", "r V\tl aI\tV b\tl i:");
result.add("re-\tli-\tan-\tce's", "r V\tl aI\tV n\ts V z");
result.add("re-\tli-\tance", "r V\tl aI\tV n s");
result.add("re-\tli-\tant", "r V\tl aI\tV n t");
result.add("re-\tli-\tgi-\to-\tsi-\tty", "r V\tl I\tdZ i:\tQ\ts V\tt i:");
result.add("re-\tli-\tgio-\tnist", "r i:\tl I\tdZ V\tn I s t");
result.add("re-\tli-\tgion", "r V\tl I\tdZ V n");
result.add("re-\tli-\tgions", "r i:\tl I\tdZ V n z");
result.add("re-\tli-\tgion's", "r V\tl I\tdZ V n z");
result.add("re-\tli-\tgious", "r V\tl I\tdZ V s");
result.add("re-\tli-\tgious-\tly", "r V\tl I\tdZ V s\tl i:");
result.add("re-\tli-\tshes", "r e\tl I\tS V z");
result.add("re-\tli-\tshing", "r e\tl I\tS I N");
result.add("re-\tli-\tving", "r i:\tl I\tv I N");
result.add("re-\tlic", "r e\tl I k");
result.add("re-\tlics", "r e\tl I k s");
result.add("re-\tlie-\tver", "r i:\tl i:\tv @r");
result.add("re-\tlie-\tvers", "r i:\tl i:\tv @r z");
result.add("re-\tlie-\tving", "r V\tl i:\tv I N");
result.add("re-\tlied", "r V\tl aI d");
result.add("re-\tlief", "r V\tl i: f");
result.add("re-\tliefs", "r i:\tl i: f s");
result.add("re-\tlies", "r V\tl aI z");
result.add("re-\tlieve", "r V\tl i: v");
result.add("re-\tlieved", "r V\tl i: v d");
result.add("re-\tlieves", "r i:\tl i: v z");
result.add("re-\tlin-\tqui-\tshes", "r V\tl I N\tk w I\tS V z");
result.add("re-\tlin-\tqui-\tshing", "r i:\tl I N\tk w I\tS I N");
result.add("re-\tlin-\tquish", "r V\tl I N\tk w I S");
result.add("re-\tlin-\tquished", "r V\tl I N\tk w I S t");
result.add("re-\tlish", "r e\tl I S");
result.add("re-\tlished", "r e\tl I S t");
result.add("re-\tlive", "r i:\tl I v");
result.add("re-\tlived", "r i:\tl I v d");
result.add("re-\tlo-\tca-\tted", "r i:\tl @U\tk eI\tt V d");
result.add("re-\tlo-\tca-\tting", "r i:\tl @U\tk eI\tt I N");
result.add("re-\tlo-\tca-\ttion", "r i:\tl @U\tk eI\tS V n");
result.add("re-\tlo-\tca-\ttions", "r i:\tl @U\tk eI\tS V n z");
result.add("re-\tlo-\tcate", "r i:\tl @U\tk eI t");
result.add("re-\tloa-\tded", "r i:\tl @U\td V d");
result.add("re-\tload", "r i:\tl @U d");
result.add("re-\tloads", "r i:\tl @U d z");
result.add("re-\tluc-\ttance", "r V\tl V k\tt V n s");
result.add("re-\tluc-\ttant", "r V\tl V k\tt V n t");
result.add("re-\tluc-\ttant-\tly", "r V\tl V k\tt V n\tt l i:");
result.add("re-\tly", "r V\tl aI");
result.add("re-\tly-\ting", "r i:\tl aI\tI N");
result.add("re-\tma-\tking", "r i:\tm eI\tk I N");
result.add("re-\tma-\tnu-\tfac-\tture", "r i:\tm { n\tj u:\tf { k\ttS @r");
result.add("re-\tma-\tnu-\tfac-\ttured", "r i:\tm { n\tj u:\tf { k\ttS @r d");
result.add("re-\tmade", "r i:\tm eI d");
result.add("re-\tmai-\tning", "r V\tm eI\tn I N");
result.add("re-\tmain", "r V\tm eI n");
result.add("re-\tmain-\tder", "r V\tm eI n\td @r");
result.add("re-\tmained", "r V\tm eI n d");
result.add("re-\tmains", "r V\tm eI n z");
result.add("re-\tmake", "r i:\tm eI k");
result.add("re-\tmakes", "r i:\tm eI k s");
result.add("re-\tman-\tded", "r I\tm { n\td V d");
result.add("re-\tmand", "r I\tm { n d");
result.add("re-\tmar-\tka-\tble", "r V\tm Q@\tk V\tb V l");
result.add("re-\tmar-\tkab-\tly", "r V\tm Q@\tk V b\tl i:");
result.add("re-\tmar-\tke-\tted", "r i:\tm Q@\tk V\tt V d");
result.add("re-\tmar-\tke-\tting", "r i:\tm Q@\tk V\tt I N");
result.add("re-\tmar-\tket", "r i:\tm Q@\tk V t");
result.add("re-\tmar-\tking", "r V\tm Q@\tk I N");
result.add("re-\tmar-\triage", "r i:\tm e@\tI dZ");
result.add("re-\tmar-\tried", "r i:\tm e@\ti: d");
result.add("re-\tmar-\try", "r i:\tm e@\ti:");
result.add("re-\tmar-\try-\ting", "r i:\tm e@\ti:\tI N");
result.add("re-\tmark", "r V\tm Q@ k");
result.add("re-\tmarked", "r V\tm Q@ k t");
result.add("re-\tmarks", "r V\tm Q@ k s");
result.add("re-\tmatch", "r i:\tm { tS");
result.add("re-\tme-\tdi-\ta-\ttion", "r V\tm i:\td i:\teI\tS V n");
result.add("re-\tme-\tdi-\tal", "r V\tm i:\td i:\tV l");
result.add("re-\tme-\tdi-\tate", "r i:\tm i:\td i:\tV t");
result.add("re-\tme-\tdied", "r e\tm V\td i: d");
result.add("re-\tme-\tdies", "r e\tm V\td i: z");
result.add("re-\tme-\tdy", "r e\tm V\td i:");
result.add("re-\tme-\tdy-\ting", "r e\tm V\td i:\tI N");
result.add("re-\tmem-\tbe-\tring", "r I\tm e m\tb @r\tI N");
result.add("re-\tmem-\tber", "r I\tm e m\tb @r");
result.add("re-\tmem-\tbered", "r I\tm e m\tb @r d");
result.add("re-\tmem-\tbers", "r I\tm e m\tb @r z");
result.add("re-\tmemb-\tran-\tces", "r I\tm e m\tb r V n\ts V z");
result.add("re-\tmemb-\trance", "r I:\tm e m\tb r V n s");
result.add("re-\tmer", "r i:\tm @r");
result.add("re-\tmi", "r e\tm i:");
result.add("re-\tmi-\tni-\tscen-\tces", "r e\tm I\tn I\ts e n\ts V z");
result.add("re-\tmi-\tni-\tscence", "r e\tm I\tn I\ts e n s");
result.add("re-\tmi-\tni-\tscent", "r e\tm V\tn I\ts e n t");
result.add("re-\tmi-\tni-\tsces", "r e\tm V\tn I\ts e z");
result.add("re-\tmi-\tni-\tscing", "r e\tm V\tn I\ts I N");
result.add("re-\tmi-\tnisce", "r e\tm I\tn I s");
result.add("re-\tmi-\tnisced", "r e\tm I\tn I s t");
result.add("re-\tmin-\tded", "r i:\tm aI n\td V d");
result.add("re-\tmin-\tder", "r i:\tm aI n\td @r");
result.add("re-\tmin-\tders", "r i:\tm aI n\td @r z");
result.add("re-\tmin-\tding", "r i:\tm aI n\td I N");
result.add("re-\tmind", "r i:\tm aI n d");
result.add("re-\tminds", "r i:\tm aI n d z");
result.add("re-\tming-\tton", "r e\tm I N\tt V n");
result.add("re-\tmis-\tsion", "r i:\tm I\tS V n");
result.add("re-\tmis-\tsions", "r i:\tm I\tS V n z");
result.add("re-\tmiss", "r i:\tm I s");
result.add("re-\tmit", "r i:\tm I t");
result.add("re-\tmit-\ttan-\tces", "r i:\tm I\tt V n\ts V z");
result.add("re-\tmit-\ttance", "r i:\tm I\tt V n s");
result.add("re-\tmit-\tted", "r i:\tm I\tt V d");
result.add("re-\tmo", "r e\tm @U");
result.add("re-\tmo-\tde-\tling", "r V\tm Q\td V\tl I N");
result.add("re-\tmo-\tdel", "r i:\tm Q\td V l");
result.add("re-\tmo-\tdeled", "r i:\tm Q\td V l d");
result.add("re-\tmo-\ttest", "r V\tm @U\tt V s t");
result.add("re-\tmo-\tva-\tble", "r V\tm u:\tv V\tb V l");
result.add("re-\tmo-\tval", "r V\tm u:\tv V l");
result.add("re-\tmo-\tvals", "r V\tm u:\tv V l z");
result.add("re-\tmo-\tver", "r V\tm u:\tv @r");
result.add("re-\tmo-\tving", "r i:\tm u:\tv I N");
result.add("re-\tmol-\tded", "r i:\tm @U l\td V d");
result.add("re-\tmold", "r i:\tm @U l d");
result.add("re-\tmorse", "r V\tm O@ s");
result.add("re-\tmorse-\tful", "r V\tm O@ s\tf V l");
result.add("re-\tmorse-\tless", "r V\tm O@ s\tl V s");
result.add("re-\tmote", "r V\tm @U t");
result.add("re-\tmote-\tly", "r i:\tm @U t\tl i:");
result.add("re-\tmote-\tness", "r i:\tm @U t\tn V s");
result.add("re-\tmoul-\tded", "r i:\tm @U l\td V d");
result.add("re-\tmove", "r i:\tm u: v");
result.add("re-\tmoved", "r i:\tm u: v d");
result.add("re-\tmoves", "r i:\tm u: v z");
result.add("re-\tmu-\tne-\tra-\ttion", "r V m\tj u:\tn @r\teI\tS V n");
result.add("re-\tmu-\tne-\tra-\ttive", "r i: m\tj u:\tn @r\tV\tt I v");
result.add("re-\tmu-\tne-\trate", "r V m\tj u:\tn @r\teI t");
result.add("re-\tmus", "r i:\tm V s");
result.add("re-\tmy", "r e\tm i:");
result.add("re-\tna", "r i:\tn V");
result.add("re-\tna-\tming", "r i:\tn eI\tm I N");
result.add("re-\tna-\tta", "r V\tn Q\tt V");
result.add("re-\tna-\tte", "r V\tn Q\tt V");
result.add("re-\tna-\ttio-\tna-\tli-\tza-\ttion", "r i:\tn {\tS V\tn V\tl I\tz eI\tS V n");
result.add("re-\tna-\ttio-\tna-\tlize", "r i:\tn {\tS V\tn V\tl aI z");
result.add("re-\tna-\tto", "r e\tn Q\tt @U");
result.add("re-\tnais-\tsan-\tce's", "r e\tn V\ts Q n\ts V z");
result.add("re-\tnais-\tsance", "r e\tn V\ts Q n s");
result.add("re-\tnal", "r i:\tn V l");
result.add("re-\tnal-\tdo", "r e\tn Q l\td @U");
result.add("re-\tname", "r i:\tn eI m");
result.add("re-\tnamed", "r i:\tn eI m d");
result.add("re-\tnard", "r V\tn Q@ d");
result.add("re-\tnaud", "r V\tn @U");
result.add("re-\tnault", "r V\tn @U");
result.add("re-\tnault's", "r V\tn O: l t s");
result.add("re-\tne", "r V\tn eI");
result.add("re-\tne-\tgade", "r e\tn V\tg eI d");
result.add("re-\tne-\tgades", "r e\tn V\tg eI d z");
result.add("re-\tne-\tging", "r V\tn I\tg I N");
result.add("re-\tne-\tgo-\tti-\ta-\tted", "r i:\tn I\tg @U\tS i:\teI\tt V d");
result.add("re-\tne-\tgo-\tti-\ta-\tting", "r i:\tn I\tg @U\tS i:\teI\tt I N");
result.add("re-\tne-\tgo-\tti-\ta-\ttion", "r i:\tn I\tg @U\tS i:\teI\tS V n");
result.add("re-\tne-\tgo-\tti-\ta-\ttions", "r i:\tn I\tg @U\tS i:\teI\tS V n z");
result.add("re-\tne-\tgo-\tti-\tate", "r i:\tn I\tg @U\tS i:\teI t");
result.add("re-\tne-\twa-\tble", "r i:\tn u:\tV\tb V l");
result.add("re-\tne-\twal", "r V\tn u:\tV l");
result.add("re-\tne-\twals", "r V\tn u:\tV l z");
result.add("re-\tne-\twing", "r V\tn u:\tI N");
result.add("re-\tnee", "r V\tn eI");
result.add("re-\tnege", "r V\tn I g");
result.add("re-\tneged", "r V\tn I g d");
result.add("re-\tnew", "r V\tn u:");
result.add("re-\tnewed", "r V\tn u: d");
result.add("re-\tnews", "r V\tn u: z");
result.add("re-\tni-\tta", "r e\tn i:\tt V");
result.add("re-\tnick", "r e\tn I k");
result.add("re-\tnin", "r i:\tn I n");
result.add("re-\tno", "r i:\tn @U");
result.add("re-\tno-\tmi-\tna-\tted", "r i:\tn Q\tm I\tn eI\tt I d");
result.add("re-\tno-\tmi-\tna-\ttion", "r i:\tn Q\tm I\tn eI\tS V n");
result.add("re-\tno-\tmi-\tnate", "r i:\tn O:\tm I\tn eI t");
result.add("re-\tno-\tva-\tted", "r e\tn V\tv eI\tt V d");
result.add("re-\tno-\tva-\tting", "r e\tn V\tv eI\tt I N");
result.add("re-\tno-\tva-\ttion", "r e\tn V\tv eI\tS V n");
result.add("re-\tno-\tva-\ttions", "r e\tn V\tv eI\tS V n z");
result.add("re-\tno-\tva-\ttor", "r e\tn V\tv eI\tt @r");
result.add("re-\tno-\tva-\ttors", "r e\tn V\tv eI\tt @r z");
result.add("re-\tno-\tvate", "r e\tn V\tv eI t");
result.add("re-\tnoir", "r e n\tw Q@");
result.add("re-\tno's", "r i:\tn @U z");
result.add("re-\tnoun-\tces", "r I\tn aU n\ts V z");
result.add("re-\tnoun-\tcing", "r I\tn aU n\ts I N");
result.add("re-\tnounce", "r I\tn aU n s");
result.add("re-\tnounced", "r I\tn aU n s t");
result.add("re-\tnown", "r V\tn aU n");
result.add("re-\tnowned", "r V\tn aU n d");
result.add("re-\tnun-\tci-\ta-\ttion", "r V\tn V n\ts i:\teI\tS V n");
result.add("re-\tnun-\tci-\tate", "r V\tn V n\ts i:\teI t");
result.add("re-\tny", "r i:\tn i:");
result.add("re-\to", "r i:\t@U");
result.add("re-\to-\tpe-\tning", "r i:\t@U\tp V\tn I N");
result.add("re-\to-\tpen", "r i:\t@U\tp V n");
result.add("re-\to-\tpened", "r i:\t@U\tp V n d");
result.add("re-\to-\tpens", "r i:\t@U\tp V n z");
result.add("re-\to-\tri-\tent", "r i:\tO@\ti:\te n t");
result.add("re-\toc-\tcu-\tpy", "r i:\tO: k\tj u:\tp aI");
result.add("re-\toc-\tcur", "r i:\tV\tk @r");
result.add("re-\tof-\tfe-\tring", "r i:\tO:\tf @r\tI N");
result.add("re-\tof-\tfen-\tded", "r i:\tO:\tf e n\td V d");
result.add("re-\tof-\tfend", "r i:\tO:\tf e n d");
result.add("re-\tof-\tfer", "r i:\tO:\tf @r");
result.add("re-\tof-\tfered", "r i:\tO:\tf @r d");
result.add("re-\tor-\tde-\tring", "r i:\tO@\td @r\tI N");
result.add("re-\tor-\tder", "r i:\tO@\td @r");
result.add("re-\tor-\tga-\tni-\tza-\ttion", "r i:\tO@\tg V\tn V\tz eI\tS V n");
result.add("re-\tor-\tga-\tni-\tza-\ttions", "r i:\tO@\tg V\tn V\tz eI\tS V n z");
result.add("re-\tor-\tga-\tni-\tzes", "r i:\tO@\tg V\tn aI\tz V z");
result.add("re-\tor-\tga-\tni-\tzing", "r i:\tO@\tg V\tn aI\tz I N");
result.add("re-\tor-\tga-\tnize", "r i:\tO@\tg V\tn aI z");
result.add("re-\tor-\tga-\tnized", "r i:\tO@\tg V\tn aI z d");
result.add("re-\tpa-\tra-\ttion", "r e\tp @r\teI\tS V n");
result.add("re-\tpa-\tra-\ttions", "r e\tp @r\teI\tS V n z");
result.add("re-\tpac-\tka-\tges", "r i:\tp {\tk I\tdZ V z");
result.add("re-\tpac-\tka-\tging", "r i:\tp {\tk I\tdZ I N");
result.add("re-\tpac-\tkage", "r i:\tp {\tk I dZ");
result.add("re-\tpac-\tkaged", "r i:\tp {\tk I dZ d");
result.add("re-\tpack", "r i:\tp { k");
result.add("re-\tpacked", "r i:\tp { k t");
result.add("re-\tpai-\tra-\tble", "r V\tp e@\tV\tb V l");
result.add("re-\tpai-\tring", "r V\tp e@\tI N");
result.add("re-\tpaid", "r i:\tp eI d");
result.add("re-\tpain-\tted", "r i:\tp eI n\tt V d");
result.add("re-\tpain-\tting", "r i:\tp eI n\tt I N");
result.add("re-\tpaint", "r i:\tp eI n t");
result.add("re-\tpair", "r V\tp e@");
result.add("re-\tpair-\tman", "r V\tp e@\tm { n");
result.add("re-\tpair-\tmen", "r V\tp e@\tm e n");
result.add("re-\tpaired", "r V\tp e@ d");
result.add("re-\tpairs", "r V\tp e@ z");
result.add("re-\tpar-\ttee", "r e\tp @r\tt i:");
result.add("re-\tpass", "r i:\tp { s");
result.add("re-\tpat-\tri-\ta-\tted", "r i:\tp eI t\tr i:\teI\tt V d");
result.add("re-\tpat-\tri-\ta-\tting", "r i:\tp eI t\tr i:\teI\tt I N");
result.add("re-\tpat-\tri-\ta-\ttion", "r i:\tp eI t\tr i:\teI\tS V n");
result.add("re-\tpat-\tri-\tate", "r i:\tp eI t\tr i:\teI t");
result.add("re-\tpay", "r i:\tp eI");
result.add("re-\tpay-\ta-\tble", "r i:\tp eI\tV\tb V l");
result.add("re-\tpay-\ting", "r i:\tp eI\tI N");
result.add("re-\tpay-\tment", "r i:\tp eI\tm V n t");
result.add("re-\tpay-\tments", "r i:\tp eI\tm V n t s");
result.add("re-\tpays", "r i:\tp eI z");
result.add("re-\tpe-\tti-\ttion", "r e\tp V\tt I\tS V n");
result.add("re-\tpe-\tti-\ttions", "r e\tp V\tt I\tS V n z");
result.add("re-\tpe-\tti-\ttious", "r e\tp V\tt I\tS V s");
result.add("re-\tpe-\tti-\ttive", "r V\tp e\tt V\tt I v");
result.add("re-\tpea-\tling", "r i:\tp i:\tl I N");
result.add("re-\tpea-\tta-\tble", "r V\tp i:\tt V\tb V l");
result.add("re-\tpea-\tted", "r V\tp i:\tt V d");
result.add("re-\tpea-\tted-\tly", "r V\tp i:\tt V d\tl i:");
result.add("re-\tpea-\tter", "r V\tp i:\tt @r");
result.add("re-\tpea-\tters", "r V\tp i:\tt @r z");
result.add("re-\tpea-\tting", "r V\tp i:\tt I N");
result.add("re-\tpeal", "r V\tp i: l");
result.add("re-\tpealed", "r V\tp i: l d");
result.add("re-\tpeals", "r i:\tp i: l z");
result.add("re-\tpeat", "r V\tp i: t");
result.add("re-\tpeats", "r V\tp i: t s");
result.add("re-\tpel", "r V\tp e l");
result.add("re-\tpel-\tlent", "r V\tp e\tl V n t");
result.add("re-\tpel-\tling", "r V\tp e\tl I N");
result.add("re-\tpelled", "r V\tp e l d");
result.add("re-\tpels", "r V\tp e l z");
result.add("re-\tpen-\ttance", "r V\tp e n\tt V n s");
result.add("re-\tpen-\ttant", "r V\tp e n\tt V n t");
result.add("re-\tpen-\tted", "r V\tp e n\tt V d");
result.add("re-\tpent", "r V\tp e n t");
result.add("re-\tper-\tcus-\tsion", "r i:\tp @r\tk V\tS V n");
result.add("re-\tper-\tcus-\tsions", "r i:\tp @r\tk V\tS V n z");
result.add("re-\tper-\tto-\try", "r e\tp @r\tt O@\ti:");
result.add("re-\tper-\ttoire", "r e\tp @r t\tw Q@");
result.add("re-\tplay", "r i: p\tl eI");
result.add("re-\tplay-\ting", "r i: p\tl eI\tI N");
result.add("re-\tplayed", "r i: p\tl eI d");
result.add("re-\tplays", "r i: p\tl eI z");
result.add("re-\tple-\tni-\tshing", "r i: p\tl e\tn I\tS I N");
result.add("re-\tple-\tnish", "r i: p\tl e\tn I S");
result.add("re-\tple-\tnished", "r i: p\tl e\tn I S t");
result.add("re-\tpo", "r i:\tp @U");
result.add("re-\tpo-\tsi-\ttio-\tning", "r i:\tp V\tz I\tS V\tn I N");
result.add("re-\tpo-\tsi-\ttion", "r i:\tp V\tz I\tS V n");
result.add("re-\tpo-\tsi-\ttioned", "r i:\tp V\tz I\tS V n d");
result.add("re-\tpo-\tsi-\tto-\tries", "r i:\tp Q\tz I\tt O@\ti: z");
result.add("re-\tpo-\tsi-\tto-\try", "r i:\tp Q\tz I\tt O@\ti:");
result.add("re-\tpor-\tta-\tble", "r V\tp O@\tt V\tb V l");
result.add("re-\tpor-\ttage", "r V\tp O@\tt I dZ");
result.add("re-\tpor-\tted", "r i:\tp O@\tt V d");
result.add("re-\tpor-\tted-\tly", "r V\tp O@\tt V d\tl i:");
result.add("re-\tpor-\tter", "r V\tp O@\tt @r");
result.add("re-\tpor-\tters", "r V\tp O@\tt @r z");
result.add("re-\tpor-\tter's", "r V\tp O@\tt @r z");
result.add("re-\tpor-\tting", "r i:\tp O@\tt I N");
result.add("re-\tpor-\tto-\tri-\tal", "r e\tp @r\tt O@\ti:\tV l");
result.add("re-\tport", "r i:\tp O@ t");
result.add("re-\tports", "r V\tp O@ t s");
result.add("re-\tport's", "r i:\tp O@ t s");
result.add("re-\tpos", "r i:\tp @U z");
result.add("re-\tpos-\tses-\tsion", "r i:\tp V\tz e\tS V n");
result.add("re-\tpos-\tses-\tsions", "r i:\tp V\tz e\tS V n z");
result.add("re-\tpos-\tsess", "r i:\tp V\tz e s");
result.add("re-\tpos-\tsessed", "r i:\tp V\tz e s t");
result.add("re-\tpose", "r i:\tp @U z");
result.add("re-\tpre-\tsent", "r e p\tr V\tz e n t");
result.add("re-\tpress", "r i: p\tr e s");
result.add("re-\tpu-\tdi-\ta-\tted", "r i: p\tj u:\td i:\teI\tt V d");
result.add("re-\tpu-\tdi-\ta-\tting", "r i: p\tj u:\td i:\teI\tt I N");
result.add("re-\tpu-\tdi-\ta-\ttion", "r V p\tj u:\td i:\teI\tS V n");
result.add("re-\tpu-\tdi-\tate", "r i: p\tj u:\td i:\teI t");
result.add("re-\tpu-\tdi-\tates", "r i: p\tj u:\td i:\teI t s");
result.add("re-\tpu-\tta-\tble", "r e p\tj V\tt V\tb V l");
result.add("re-\tpu-\tta-\ttion", "r e p\tj V\tt eI\tS V n");
result.add("re-\tpu-\tta-\ttions", "r e p\tj V\tt eI\tS V n z");
result.add("re-\tpu-\tted", "r V p\tj u:\tt V d");
result.add("re-\tpu-\tted-\tly", "r V p\tj u:\tt V d\tl i:");
result.add("re-\tpub-\tli-\tca-\tni-\tsm", "r V\tp V b\tl I\tk V\tn I\tz V m");
result.add("re-\tpub-\tli-\tcan", "r i:\tp V b\tl I\tk V n");
result.add("re-\tpub-\tli-\tcans", "r V\tp V b\tl I\tk V n z");
result.add("re-\tpub-\tli-\tcan's", "r i:\tp V b\tl I\tk V n z");
result.add("re-\tpub-\tlic", "r i:\tp V b\tl I k");
result.add("re-\tpub-\tlics", "r i:\tp V b\tl I k s");
result.add("re-\tpub-\tlic's", "r i:\tp V b\tl I k s");
result.add("re-\tpug-\tnant", "r V\tp V g\tn V n t");
result.add("re-\tpul-\tsing", "r i:\tp V l\ts I N");
result.add("re-\tpul-\tsive", "r i:\tp V l\ts I v");
result.add("re-\tpulse", "r i:\tp V l s");
result.add("re-\tpulsed", "r i:\tp V l s t");
result.add("re-\tpur-\tcha-\tses", "r i:\tp @r\ttS V\ts V z");
result.add("re-\tpur-\tcha-\tsing", "r i:\tp @r\ttS V\ts I N");
result.add("re-\tpur-\tchase", "r i:\tp @r\ttS V s");
result.add("re-\tpur-\tchased", "r i:\tp @r\ttS V s t");
result.add("re-\tpute", "r i: p\tj u: t");
result.add("re-\tqua-\tli-\tfy", "r i: k\tw Q\tl I\tf aI");
result.add("re-\tques-\tted", "r I k\tw e s\tt V d");
result.add("re-\tques-\tter", "r I k\tw e s\tt @r");
result.add("re-\tques-\tting", "r I k\tw e s\tt I N");
result.add("re-\tquest", "r I k\tw e s t");
result.add("re-\tquests", "r I k\tw e s t s");
result.add("re-\tqui-\tem", "r e k\tw i:\tV m");
result.add("re-\tqui-\tr-\ting", "r i: k\tw aI\t@r\tI N");
result.add("re-\tqui-\tre", "r i: k\tw aI\t@r");
result.add("re-\tqui-\tred", "r i: k\tw aI\t@r d");
result.add("re-\tqui-\tres", "r i: k\tw aI\t@r z");
result.add("re-\tqui-\tsi-\ttion", "r e k\tw I\tz I\tS V n");
result.add("re-\tqui-\tsi-\ttioned", "r e k\tw I\tz I\tS V n d");
result.add("re-\tqui-\tsite", "r e k\tw I\tz I t");
result.add("re-\tqui-\tsites", "r e k\tw I\tz I t s");
result.add("re-\tquire-\tment", "r I k\tw aI r\tm V n t");
result.add("re-\tquire-\tments", "r I k\tw aI r\tm V n t s");
result.add("re-\tre-\tgu-\tla-\ttion", "r i:\tr e g\tj V\tl eI\tS V n");
result.add("re-\tre-\tgu-\tlate", "r i:\tr e g\tj V\tl eI t");
result.add("re-\trea-\tding", "r i:\tr i:\td I N");
result.add("re-\tread", "r i:\tr i: d");
result.add("re-\trou-\tted", "r i:\tr u:\tt V d");
result.add("re-\trou-\tting", "r i:\tr u:\tt I N");
result.add("re-\troute", "r i:\tr u: t");
result.add("re-\trun", "r i:\tr V n");
result.add("re-\trun-\tning", "r i:\tr V\tn I N");
result.add("re-\truns", "r i:\tr V n z");
result.add("re-\tsale", "r i:\ts eI l");
result.add("re-\tsales", "r i:\ts eI l z");
result.add("re-\tscin-\tded", "r V\ts I n\td V d");
result.add("re-\tscin-\tding", "r V\ts I n\td I N");
result.add("re-\tscind", "r V\ts I n d");
result.add("re-\tscis-\tsion", "r V\ts I\tZ V n");
result.add("re-\tscis-\tsions", "r V\ts I\tZ V n z");
result.add("re-\tse-\tda", "r e\ts eI\td V");
result.add("re-\tse-\tting", "r i:\ts e\tt I N");
result.add("re-\tsea-\tla-\tble", "r i:\ts i:\tl V\tb V l");
result.add("re-\tseal", "r i:\ts i: l");
result.add("re-\tsealed", "r i:\ts i: l d");
result.add("re-\tseals", "r i:\ts i: l z");
result.add("re-\tsear-\tcher", "r i:\ts @r\ttS @r");
result.add("re-\tsear-\tchers", "r i:\ts @r\ttS @r z");
result.add("re-\tsear-\tches", "r i:\ts @r\ttS V z");
result.add("re-\tsear-\tching", "r i:\ts @r\ttS I N");
result.add("re-\tsear-\tch's", "r i:\ts @r\ttS V z");
result.add("re-\tsearch", "r i:\ts @r tS");
result.add("re-\tseed", "r i:\ts i: d");
result.add("re-\tsel-\tler", "r i:\ts e\tl @r");
result.add("re-\tsel-\tlers", "r i:\ts e\tl @r z");
result.add("re-\tsel-\tling", "r i:\ts e\tl I N");
result.add("re-\tsell", "r i:\ts e l");
result.add("re-\tsells", "r i:\ts e l z");
result.add("re-\tsem-\tb-\tling", "r V\tz e m\tb V\tl I N");
result.add("re-\tsem-\tble", "r V\tz e m\tb V l");
result.add("re-\tsem-\tbled", "r V\tz e m\tb V l d");
result.add("re-\tsem-\tbles", "r V\tz e m\tb V l z");
result.add("re-\tsemb-\tlan-\tces", "r i:\tz e m\tb l V n\ts V z");
result.add("re-\tsemb-\tlance", "r V\tz e m\tb l V n s");
result.add("re-\tsen-\tted", "r i:\tz e n\tt V d");
result.add("re-\tsen-\tting", "r V\tz e n\tt I N");
result.add("re-\tsent", "r V\tz e n t");
result.add("re-\tsent-\tful", "r V\tz e n\tt f V l");
result.add("re-\tsent-\tment", "r V\tz e n\tt m V n t");
result.add("re-\tsent-\tments", "r V\tz e n\tt m V n t s");
result.add("re-\tsents", "r V\tz e n t s");
result.add("re-\tser-\tva-\ttio-\tnist", "r e\tz @r\tv eI\tS V\tn I s t");
result.add("re-\tser-\tva-\ttio-\tnists", "r e\tz @r\tv eI\tS V\tn I s t s");
result.add("re-\tser-\tva-\ttion", "r e\tz @r\tv eI\tS V n");
result.add("re-\tser-\tva-\ttions", "r e\tz @r\tv eI\tS V n z");
result.add("re-\tser-\tving", "r V\tz @r\tv I N");
result.add("re-\tser-\tvist", "r V\tz @r\tv V s t");
result.add("re-\tser-\tvists", "r V\tz @r\tv V s t s");
result.add("re-\tser-\tvoir", "r e\tz V v\tw Q@");
result.add("re-\tser-\tvoirs", "r e\tz @r v\tw Q@ z");
result.add("re-\tserve", "r V\tz @r v");
result.add("re-\tserved", "r V\tz @r v d");
result.add("re-\tserves", "r V\tz @r v z");
result.add("re-\tset", "r i:\ts e t");
result.add("re-\tset-\tta-\tble", "r i:\ts e\tt V\tb V l");
result.add("re-\tset-\ttle", "r i:\ts e\tt V l");
result.add("re-\tset-\ttle-\tment", "r i:\ts e\tt V l\tm V n t");
result.add("re-\tset-\ttled", "r i:\ts e\tt V l d");
result.add("re-\tsets", "r i:\ts e t s");
result.add("re-\tsha-\tping", "r i:\tS eI\tp I N");
result.add("re-\tshape", "r i:\tS eI p");
result.add("re-\tshaped", "r i:\tS eI p t");
result.add("re-\tshot", "r i:\tS O: t");
result.add("re-\tshuf-\tf-\tling", "r i:\tS V\tf V\tl I N");
result.add("re-\tshuf-\tfle", "r i:\tS V\tf V l");
result.add("re-\tshuf-\tfled", "r i:\tS V\tf V l d");
result.add("re-\tsi-\tded", "r V\tz aI\td V d");
result.add("re-\tsi-\tden-\tces", "r e\tz I\td e n\ts V z");
result.add("re-\tsi-\tden-\tcies", "r e\ts I\td e n\ts i: z");
result.add("re-\tsi-\tden-\tcy", "r e\tz I\td e n\ts i:");
result.add("re-\tsi-\tden-\ttial", "r e\tz I\td e n\ttS V l");
result.add("re-\tsi-\tdence", "r e\tz I\td e n s");
result.add("re-\tsi-\tdent", "r e\tz I\td e n t");
result.add("re-\tsi-\tdents", "r e\tz I\td e n t s");
result.add("re-\tsi-\tdent's", "r e\tz I\td e n t s");
result.add("re-\tsi-\tding", "r V\tz aI\td I N");
result.add("re-\tsi-\tdu-\tal", "r V\tz I\tdZ u:\tV l");
result.add("re-\tsi-\tdu-\tals", "r V\tz I\tdZ u:\tV l z");
result.add("re-\tsi-\tdue", "r e\tz I\td u:");
result.add("re-\tsi-\tdues", "r e\tz I\td u: z");
result.add("re-\tsi-\tli-\tence", "r V\tz I\tl i:\tV n s");
result.add("re-\tsi-\tlien-\tcy", "r V\tz I l\tj V n\ts i:");
result.add("re-\tsi-\tlient", "r V\tz I l\tj V n t");
result.add("re-\tside", "r V\tz aI d");
result.add("re-\tsides", "r V\tz aI d z");
result.add("re-\tsig-\tna-\ttion", "r e\tz I g\tn eI\tS V n");
result.add("re-\tsig-\tna-\ttions", "r e\tz I g\tn eI\tS V n z");
result.add("re-\tsig-\tnee", "r e\tz I g\tn i:");
result.add("re-\tsig-\tning", "r V\tz aI\tn I N");
result.add("re-\tsign", "r V\tz aI n");
result.add("re-\tsigned", "r V\tz aI n d");
result.add("re-\tsigns", "r V\tz aI n z");
result.add("re-\tsin", "r e\tz I n");
result.add("re-\tsins", "r e\tz I n z");
result.add("re-\tsis-\ttance", "r V\tz I s\tt V n s");
result.add("re-\tsis-\ttant", "r V\tz I s\tt V n t");
result.add("re-\tsis-\tted", "r V\tz I s\tt V d");
result.add("re-\tsis-\ttence", "r V\tz I s\tt V n s");
result.add("re-\tsis-\tting", "r V\tz I s\tt I N");
result.add("re-\tsis-\ttive-\tness", "r I\tz I s\tt I v\tn V s");
result.add("re-\tsis-\ttors", "r V\tz I s\tt @r z");
result.add("re-\tsist", "r V\tz I s t");
result.add("re-\tsists", "r V\tz I s t s");
result.add("re-\tso", "r I\tz @U");
result.add("re-\tso-\tlu-\ttion", "r e\tz V\tl u:\tS V n");
result.add("re-\tso-\tlu-\ttions", "r e\tz V\tl u:\tS V n z");
result.add("re-\tso-\tlu-\ttion's", "r e\tz V\tl u:\tS V n z");
result.add("re-\tso-\tlute", "r e\tz V\tl u: t");
result.add("re-\tso-\tlute-\tly", "r e\tz V\tl u: t\tl i:");
result.add("re-\tso-\tna-\tted", "r e\tz V\tn eI\tt V d");
result.add("re-\tso-\tna-\tting", "r e\tz V\tn eI\tt I N");
result.add("re-\tso-\tnance", "r e\tz V\tn V n s");
result.add("re-\tso-\tnant", "r e\tz V\tn V n t");
result.add("re-\tso-\tnate", "r e\tz V\tn eI t");
result.add("re-\tso-\tnates", "r e\tz V\tn eI t s");
result.add("re-\tsol-\tving", "r i:\tz Q l\tv I N");
result.add("re-\tsold", "r i:\ts @U l d");
result.add("re-\tsolve", "r i:\tz Q l v");
result.add("re-\tsolved", "r i:\tz Q l v d");
result.add("re-\tsolves", "r i:\tz Q l v z");
result.add("re-\tsor-\tted", "r V\tz O@\tt V d");
result.add("re-\tsor-\tting", "r V\tz O@\tt I N");
result.add("re-\tsort", "r V\tz O@ t");
result.add("re-\tsorts", "r V\tz O@ t s");
result.add("re-\tsoun-\tding", "r i:\ts aU n\td I N");
result.add("re-\tsoun-\tding-\tly", "r V\tz aU n\td I N\tl i:");
result.add("re-\tsound", "r i:\ts aU n d");
result.add("re-\tsour-\tces", "r i:\ts O@\ts V z");
result.add("re-\tsource", "r i:\ts O@ s");
result.add("re-\tsource-\tful", "r i:\ts O@ s\tf V l");
result.add("re-\tsource-\tful-\tness", "r i:\ts O@ s\tf V l\tn V s");
result.add("re-\tspeak", "r i: s\tp i: k");
result.add("re-\tsta-\tted", "r i: s\tt eI\tt V d");
result.add("re-\tsta-\tting", "r i: s\tt eI\tt I N");
result.add("re-\tstar-\tted", "r i: s\tt Q@\tt V d");
result.add("re-\tstar-\tting", "r i: s\tt Q@\tt I N");
result.add("re-\tstart", "r i: s\tt Q@ t");
result.add("re-\tstate", "r i: s\tt eI t");
result.add("re-\tstate-\tment", "r i: s\tt eI t\tm V n t");
result.add("re-\tstate-\tments", "r i: s\tt eI t\tm V n t s");
result.add("re-\tstates", "r i: s\tt eI t s");
result.add("re-\tstau-\tra-\tteur", "r e s\tt @r\tV\tt @r");
result.add("re-\tstau-\tra-\tteurs", "r e s\tt @r\tV\tt @r z");
result.add("re-\tstau-\trant", "r e s\tt @r\tQ n t");
result.add("re-\tstau-\trants", "r e s\tt @r\tQ n t s");
result.add("re-\tstau-\trant's", "r e s\tt @r\tQ n t s");
result.add("re-\tstrain", "r i: s\tt r eI n");
result.add("re-\tstyle", "r i: s\tt aI l");
result.add("re-\tstyled", "r i: s\tt aI l d");
result.add("re-\tsu-\tming", "r V\tz u:\tm I N");
result.add("re-\tsub-\tmit", "r i:\ts V b\tm I t");
result.add("re-\tsub-\tmit-\tted", "r i:\ts V b\tm I\tt V d");
result.add("re-\tsub-\tmit-\tting", "r i:\ts V b\tm I\tt I N");
result.add("re-\tsul-\ttant", "r i:\tz V l\tt V n t");
result.add("re-\tsul-\tted", "r V\tz V l\tt V d");
result.add("re-\tsul-\tting", "r V\tz V l\tt I N");
result.add("re-\tsult", "r V\tz V l t");
result.add("re-\tsults", "r V\tz V l t s");
result.add("re-\tsume", "r V\tz u: m");
result.add("re-\tsumed", "r V\tz u: m d");
result.add("re-\tsumes", "r V\tz u: m z");
result.add("re-\tsump-\ttion", "r V\tz V m\tp S V n");
result.add("re-\tsupp-\tly", "r i:\ts V p\tl aI");
result.add("re-\tsur-\tfa-\tcing", "r i:\ts @r\tf V\ts I N");
result.add("re-\tsur-\tface", "r i:\ts @r\tf V s");
result.add("re-\tsur-\tfaced", "r i:\ts @r\tf V s t");
result.add("re-\tsur-\tgen-\tcy", "r V\ts @r\tdZ V n\ts i:");
result.add("re-\tsur-\tgence", "r i:\ts @r\tdZ V n s");
result.add("re-\tsur-\tgent", "r V\ts @r\tdZ V n t");
result.add("re-\tsur-\tging", "r i:\ts @r\tdZ I N");
result.add("re-\tsur-\trec-\tted", "r e\tz @r\te k\tt V d");
result.add("re-\tsur-\trec-\tting", "r e\tz @r\te k\tt I N");
result.add("re-\tsur-\trec-\ttion", "r e\tz @r\te k\tS V n");
result.add("re-\tsur-\trect", "r e\tz @r\te k t");
result.add("re-\tsus-\tci-\tta-\tted", "r V\ts V\ts I\tt eI\tt I d");
result.add("re-\tsus-\tci-\tta-\tting", "r V\ts V\ts I\tt eI\tt I N");
result.add("re-\tsus-\tci-\tta-\ttion", "r V\ts V\ts I\tt eI\tS V n");
result.add("re-\tsus-\tci-\ttate", "r V\ts V\ts V\tt eI t");
result.add("re-\tta", "r e\tt V");
result.add("re-\tta-\tken", "r i:\tt eI\tk V n");
result.add("re-\tta-\tking", "r i:\tt eI\tk I N");
result.add("re-\tta-\tli-\ta-\tted", "r V\tt {\tl i:\teI\tt V d");
result.add("re-\tta-\tli-\ta-\tting", "r V\tt {\tl i:\teI\tt I N");
result.add("re-\tta-\tli-\ta-\ttion", "r i:\tt {\tl i:\teI\tS V n");
result.add("re-\tta-\tli-\tate", "r V\tt {\tl i:\teI t");
result.add("re-\tta-\tlia-\tto-\try", "r i:\tt { l\tj V\tt O@\ti:");
result.add("re-\ttai-\tler", "r i:\tt eI\tl @r");
result.add("re-\ttai-\tlers", "r i:\tt eI\tl @r z");
result.add("re-\ttai-\tler's", "r i:\tt eI\tl @r z");
result.add("re-\ttai-\tling", "r i:\tt eI\tl I N");
result.add("re-\ttai-\tner", "r V\tt eI\tn @r");
result.add("re-\ttai-\tners", "r V\tt eI\tn @r z");
result.add("re-\ttai-\tning", "r V\tt eI\tn I N");
result.add("re-\ttail", "r i:\tt eI l");
result.add("re-\ttailed", "r i:\tt eI l d");
result.add("re-\ttails", "r i:\tt eI l z");
result.add("re-\ttain", "r V\tt eI n");
result.add("re-\ttained", "r V\tt eI n d");
result.add("re-\ttains", "r V\tt eI n z");
result.add("re-\ttake", "r i:\tt eI k");
result.add("re-\ttar-\tda-\ttion", "r i:\tt Q@\td eI\tS V n");
result.add("re-\ttar-\tdant", "r i:\tt Q@\td V n t");
result.add("re-\ttar-\tded", "r V\tt Q@\td V d");
result.add("re-\ttar-\tding", "r V\tt Q@\td I N");
result.add("re-\ttard", "r V\tt Q@ d");
result.add("re-\ttards", "r V\tt Q@ d z");
result.add("re-\ttel-\tling", "r i:\tt e\tl I N");
result.add("re-\ttell", "r i:\tt e l");
result.add("re-\tten-\ttion", "r i:\tt e n\tS V n");
result.add("re-\ttes-\tted", "r i:\tt e s\tt V d");
result.add("re-\ttes-\tting", "r i:\tt e s\tt I N");
result.add("re-\ttest", "r i:\tt e s t");
result.add("re-\ttests", "r i:\tt e s t s");
result.add("re-\tthin-\tking", "r i:\tT I N\tk I N");
result.add("re-\tthink", "r i:\tT I N k");
result.add("re-\tthought", "r i:\tT O: t");
result.add("re-\tti-\tcence", "r e\tt I\ts V n s");
result.add("re-\tti-\tcent", "r e\tt I\ts V n t");
result.add("re-\tti-\tna", "r e\tt I\tn V");
result.add("re-\tti-\tnal", "r e\tt I\tn V l");
result.add("re-\tti-\tno-\tblas-\tto-\tma", "r e\tt I\tn @U b\tl { s\tt @U\tm V");
result.add("re-\tti-\tnoid", "r e\tt I\tn OI d");
result.add("re-\tti-\tnoids", "r e\tt I\tn OI d z");
result.add("re-\tti-\tnue", "r e\tt I\tn u:");
result.add("re-\tti-\tre-\tment", "r i:\tt aI\t@r\tm V n t");
result.add("re-\tti-\tree", "r i:\tt aI\tr i:");
result.add("re-\tti-\trees", "r i:\tt aI\tr i: z");
result.add("re-\tti-\tree's", "r V\tt aI\tr i: z");
result.add("re-\tti-\tring", "r V\tt aI\tr I N");
result.add("re-\ttin", "r e\tt I n");
result.add("re-\ttire", "r V\tt aI r");
result.add("re-\ttire-\tments", "r V\tt aI r\tm V n t s");
result.add("re-\ttired", "r V\tt aI r d");
result.add("re-\ttires", "r V\tt aI r z");
result.add("re-\ttoo-\tling", "r i:\tt u:\tl I N");
result.add("re-\ttook", "r i:\tt U k");
result.add("re-\ttool", "r i:\tt u: l");
result.add("re-\ttooled", "r i:\tt u: l d");
result.add("re-\ttor-\tted", "r i:\tt O@\tt V d");
result.add("re-\ttort", "r i:\tt O@ t");
result.add("re-\ttorts", "r V\tt O@ t s");
result.add("re-\ttou-\tching", "r i:\tt V\ttS I N");
result.add("re-\ttra-\tcing", "r i: t\tr eI\ts I N");
result.add("re-\ttrace", "r i: t\tr eI s");
result.add("re-\ttraced", "r i: t\tr eI s t");
result.add("re-\ttrea-\tding", "r i: t\tr e\td I N");
result.add("re-\ttread", "r i: t\tr e d");
result.add("re-\ttreat", "r i: t\tr i: t");
result.add("re-\ttur-\tna-\tble", "r i:\tt @r\tn V\tb V l");
result.add("re-\ttur-\tnee", "r V\tt @r\tn i:");
result.add("re-\ttur-\tnees", "r V\tt @r\tn i: z");
result.add("re-\ttur-\tning", "r V\tt @r\tn I N");
result.add("re-\tturn", "r V\tt @r n");
result.add("re-\tturned", "r V\tt @r n d");
result.add("re-\tturns", "r V\tt @r n z");
result.add("re-\tu-\tni-\tfi-\tca-\ttion", "r i:\tu:\tn I\tf I\tk eI\tS V n");
result.add("re-\tu-\tni-\tfied", "r i:\tu:\tn I\tf aI d");
result.add("re-\tu-\tni-\tfy", "r i:\tu:\tn I\tf aI");
result.add("re-\tu-\tni-\tted", "r i:\tu:\tn aI\tt V d");
result.add("re-\tu-\tni-\tting", "r i:\tu:\tn aI\tt I N");
result.add("re-\tu-\tnion", "r i:\tu: n\tj V n");
result.add("re-\tu-\tnions", "r i:\tu: n\tj V n z");
result.add("re-\tu-\tnite", "r i:\tu:\tn aI t");
result.add("re-\tu-\tnites", "r i:\tu:\tn aI t s");
result.add("re-\tu-\tsa-\tble", "r i:\tu:\tz V\tb V l");
result.add("re-\tu-\tsing", "r i:\tj u:\tz I N");
result.add("re-\tuse", "r i:\tj u: s");
result.add("re-\tused", "r i:\tu: z d");
result.add("re-\tva", "r eI\tv V");
result.add("re-\tva-\tlu-\ta-\ttion", "r i:\tv { l\tj u:\teI\tS V n");
result.add("re-\tva-\tlu-\ting", "r i:\tv { l\tj u:\tI N");
result.add("re-\tva-\tlue", "r i:\tv { l\tj u:");
result.add("re-\tva-\tlued", "r i:\tv { l\tj u: d");
result.add("re-\tvam-\tping", "r i:\tv { m\tp I N");
result.add("re-\tvamp", "r i:\tv { m p");
result.add("re-\tvamped", "r i:\tv { m p t");
result.add("re-\tvamps", "r i:\tv { m p s");
result.add("re-\tve-\tla-\ttion", "r e\tv V\tl eI\tS V n");
result.add("re-\tve-\tla-\ttions", "r e\tv V\tl eI\tS V n z");
result.add("re-\tve-\tla-\tto-\try", "r I\tv e\tl V\tt O@\ti:");
result.add("re-\tve-\tler", "r e\tv V\tl @r");
result.add("re-\tve-\tlers", "r e\tv V\tl @r z");
result.add("re-\tve-\tling", "r e\tv V\tl I N");
result.add("re-\tve-\tnue", "r e\tv V\tn u:");
result.add("re-\tve-\tnues", "r e\tv V\tn u: z");
result.add("re-\tve-\tren-\ttial", "r e\tv @r\te n\ttS V l");
result.add("re-\tve-\trence", "r e\tv @r\tV n s");
result.add("re-\tve-\trend", "r e\tv @r\tV n d");
result.add("re-\tve-\trent", "r e\tv @r\tV n t");
result.add("re-\tve-\trent-\tly", "r e\tv @r\tV n\tt l i:");
result.add("re-\tve-\trie", "r e\tv @r\ti:");
result.add("re-\tve-\tries", "r e\tv @r\ti: z");
result.add("re-\tvea-\tling", "r I\tv i:\tl I N");
result.add("re-\tveal", "r I\tv i: l");
result.add("re-\tvealed", "r I\tv i: l d");
result.add("re-\tveals", "r I\tv i: l z");
result.add("re-\tvel", "r e\tv V l");
result.add("re-\tvel-\try", "r e\tv V l\tr i:");
result.add("re-\tveled", "r e\tv V l d");
result.add("re-\tvell", "r eI\tv eI l");
result.add("re-\tvels", "r e\tv V l z");
result.add("re-\tvenge", "r i:\tv e n dZ");
result.add("re-\tver-\tbe-\tra-\tted", "r I\tv @r\tb @r\teI\tt V d");
result.add("re-\tver-\tbe-\tra-\tting", "r I\tv @r\tb @r\teI\tt I N");
result.add("re-\tver-\tbe-\tra-\ttion", "r i:\tv @r\tb @r\teI\tS V n");
result.add("re-\tver-\tbe-\tra-\ttions", "r I\tv @r\tb @r\teI\tS V n z");
result.add("re-\tver-\tbe-\trate", "r I\tv @r\tb @r\teI t");
result.add("re-\tver-\tbe-\trates", "r I\tv @r\tb @r\teI t s");
result.add("re-\tver-\tsal", "r I\tv @r\ts V l");
result.add("re-\tver-\tsals", "r I\tv @r\ts V l z");
result.add("re-\tver-\tser", "r I\tv @r\ts @r");
result.add("re-\tver-\tsers", "r I\tv @r\ts @r z");
result.add("re-\tver-\tses", "r I\tv @r\ts V z");
result.add("re-\tver-\tsi-\tble", "r I\tv @r\ts I\tb V l");
result.add("re-\tver-\tsing", "r I\tv @r\ts I N");
result.add("re-\tver-\tsion", "r I\tv @r\tZ V n");
result.add("re-\tver-\tted", "r I\tv @r\tt V d");
result.add("re-\tver-\tting", "r I\tv @r\tt I N");
result.add("re-\tverb", "r i:\tv @r b");
result.add("re-\tverbed", "r i:\tv @r b d");
result.add("re-\tvere", "r I\tv I@");
result.add("re-\tvered", "r I\tv I@ d");
result.add("re-\tverse", "r I\tv @r s");
result.add("re-\tversed", "r I\tv @r s t");
result.add("re-\tvert", "r I\tv @r t");
result.add("re-\tverts", "r I\tv @r t s");
result.add("re-\tvi-\tses", "r I\tv aI\tz V z");
result.add("re-\tvi-\tsi-\tted", "r i:\tv I\tz I\tt I d");
result.add("re-\tvi-\tsi-\tting", "r i:\tv I\tz I\tt I N");
result.add("re-\tvi-\tsing", "r I\tv aI\tz I N");
result.add("re-\tvi-\tsio-\tni-\tsm", "r i:\tv I\tZ V\tn I\tz V m");
result.add("re-\tvi-\tsio-\tnist", "r i:\tv I\tZ V\tn I s t");
result.add("re-\tvi-\tsio-\tnists", "r i:\tv I\tZ V\tn I s t s");
result.add("re-\tvi-\tsion", "r i:\tv I\tZ V n");
result.add("re-\tvi-\tsions", "r i:\tv I\tZ V n z");
result.add("re-\tvi-\tsit", "r i:\tv I\tz I t");
result.add("re-\tvi-\tsits", "r i:\tv I\tz I t s");
result.add("re-\tvi-\tta-\tli-\tza-\ttion", "r i:\tv aI\tt V\tl V\tz eI\tS V n");
result.add("re-\tvi-\tta-\tli-\tzing", "r i:\tv aI\tt V\tl aI\tz I N");
result.add("re-\tvi-\tta-\tlize", "r i:\tv aI\tt V\tl aI z");
result.add("re-\tvi-\tta-\tlized", "r i:\tv aI\tt V\tl aI z d");
result.add("re-\tvi-\tva-\tlist", "r i:\tv aI\tv V\tl I s t");
result.add("re-\tvi-\tval", "r I\tv aI\tv V l");
result.add("re-\tvi-\tvals", "r i:\tv aI\tv V l z");
result.add("re-\tvi-\tving", "r I\tv aI\tv I N");
result.add("re-\tvie-\twer", "r i: v\tj u:\t@r");
result.add("re-\tvie-\twers", "r i: v\tj u:\t@r z");
result.add("re-\tvie-\twing", "r i: v\tj u:\tI N");
result.add("re-\tview", "r i: v\tj u:");
result.add("re-\tviewed", "r i: v\tj u: d");
result.add("re-\tviews", "r i: v\tj u: z");
result.add("re-\tvile", "r i:\tv aI l");
result.add("re-\tviled", "r i:\tv aI l d");
result.add("re-\tvise", "r I\tv aI z");
result.add("re-\tvised", "r I\tv aI z d");
result.add("re-\tvive", "r I\tv aI v");
result.add("re-\tvived", "r I\tv aI v d");
result.add("re-\tvives", "r i:\tv aI v z");
result.add("re-\tvo-\tca-\tble", "r e\tv V\tk V\tb V l");
result.add("re-\tvo-\tca-\ttion", "r e\tv V\tk eI\tS V n");
result.add("re-\tvo-\tca-\ttions", "r e\tv V\tk eI\tS V n z");
result.add("re-\tvo-\tking", "r I\tv @U\tk I N");
result.add("re-\tvo-\tlu-\ttio-\tna-\tries", "r e\tv V\tl u:\tS V\tn e@\ti: z");
result.add("re-\tvo-\tlu-\ttio-\tna-\try", "r e\tv V\tl u:\tS V\tn e@\ti:");
result.add("re-\tvo-\tlu-\ttio-\tni-\tzing", "r e\tv V\tl u:\tS V\tn aI\tz I N");
result.add("re-\tvo-\tlu-\ttio-\tnist", "r e\tv V\tl u:\tS V\tn V s t");
result.add("re-\tvo-\tlu-\ttio-\tnists", "r e\tv V\tl u:\tS V\tn V s t s");
result.add("re-\tvo-\tlu-\ttio-\tnize", "r e\tv V\tl u:\tS V\tn aI z");
result.add("re-\tvo-\tlu-\ttio-\tnized", "r e\tv V\tl u:\tS V\tn aI z d");
result.add("re-\tvo-\tlu-\ttion", "r e\tv V\tl u:\tS V n");
result.add("re-\tvo-\tlu-\ttions", "r e\tv V\tl u:\tS V n z");
result.add("re-\tvo-\tlu-\ttion's", "r e\tv V\tl u:\tS V n z");
result.add("re-\tvoir", "r I v\tw Q@");
result.add("re-\tvoke", "r I\tv @U k");
result.add("re-\tvoked", "r I\tv @U k t");
result.add("re-\tvol-\tted", "r I\tv @U l\tt V d");
result.add("re-\tvol-\tting", "r i:\tv @U l\tt I N");
result.add("re-\tvol-\tver", "r I\tv Q l\tv @r");
result.add("re-\tvol-\tvers", "r I\tv Q l\tv @r z");
result.add("re-\tvol-\tving", "r i:\tv Q l\tv I N");
result.add("re-\tvolt", "r I\tv @U l t");
result.add("re-\tvolts", "r i:\tv @U l t s");
result.add("re-\tvolve", "r i:\tv Q l v");
result.add("re-\tvolved", "r i:\tv Q l v d");
result.add("re-\tvolves", "r i:\tv Q l v z");
result.add("re-\tvue", "r I v\tj u:");
result.add("re-\tvues", "r I v\tj u: z");
result.add("re-\tvul-\tsion", "r I\tv V l\tS V n");
result.add("re-\twar-\tded", "r V\tw O@\td V d");
result.add("re-\twar-\tding", "r V\tw O@\td I N");
result.add("re-\tward", "r V\tw O@ d");
result.add("re-\twards", "r V\tw O@ d z");
result.add("re-\twey", "r u:\ti:");
result.add("re-\twi-\tr-\ting", "r i:\tw aI\t@r\tI N");
result.add("re-\twi-\tre", "r i:\tw aI\t@r");
result.add("re-\twi-\tred", "r i:\tw aI\t@r d");
result.add("re-\twind", "r i:\tw aI n d");
result.add("re-\twor-\tking", "r i:\tw @r\tk I N");
result.add("re-\tword", "r i:\tw @r d");
result.add("re-\twork", "r i:\tw @r k");
result.add("re-\tworked", "r i:\tw @r k t");
result.add("re-\twri-\tting", "r i:\tr aI\tt I N");
result.add("re-\twrit-\tten", "r i:\tr I\tt V n");
result.add("re-\twrite", "r i:\tr aI t");
result.add("re-\twrites", "r i:\tr aI t s");
result.add("re-\txa-\tna", "r I g\tz {\tn V");
result.add("re-\tyes", "r eI\tI s");
result.add("re-\tzo-\tning", "r i:\tz @U\tn I N");
result.add("rea", "r i:");
result.add("rea-\tcha-\tble", "r i:\ttS V\tb V l");
result.add("rea-\tches", "r i:\ttS V z");
result.add("rea-\tching", "r i:\ttS I N");
result.add("rea-\tda-\tbi-\tli-\tty", "r i:\td V\tb I\tl V\tt i:");
result.add("rea-\tda-\tble", "r i:\td V\tb V l");
result.add("rea-\tder", "r i:\td @r");
result.add("rea-\tder-\tship", "r i:\td @r\tS I p");
result.add("rea-\tders", "r i:\td @r z");
result.add("rea-\tder's", "r i:\td @r z");
result.add("rea-\tdi-\ter", "r e\td i:\t@r");
result.add("rea-\tdi-\tly", "r e\td I\tl i:");
result.add("rea-\tdi-\tness", "r e\td i:\tn V s");
result.add("rea-\tdied", "r e\td i: d");
result.add("rea-\tdies", "r e\td i: z");
result.add("rea-\tding", "r e\td I N");
result.add("rea-\tdings", "r e\td I N z");
result.add("rea-\tdus", "r e\td V s");
result.add("rea-\tdy", "r e\td i:");
result.add("rea-\tdy-\ting", "r e\td i:\tI N");
result.add("rea-\tga-\tni-\tsm", "r eI\tg V\tn I\tz V m");
result.add("rea-\tga-\tnite", "r eI\tg V\tn aI t");
result.add("rea-\tga-\tnites", "r eI\tg V\tn aI t s");
result.add("rea-\tga-\tno-\tmics", "r eI\tg V\tn Q\tm I k s");
result.add("rea-\tgan", "r eI\tg V n");
result.add("rea-\tgan's", "r eI\tg V n z");
result.add("rea-\tgen", "r i:\tg V n");
result.add("rea-\tli-\tsm", "r i:\tl I\tz V m");
result.add("rea-\tli-\tza-\ttion", "r i:\tl V\tz eI\tS V n");
result.add("rea-\tli-\tza-\ttions", "r i:\tl V\tz eI\tS V n z");
result.add("rea-\tli-\tzing", "r i:\tl aI\tz I N");
result.add("rea-\tlist", "r i:\tl I s t");
result.add("rea-\tlists", "r i:\tl I s t s");
result.add("rea-\tlize", "r i:\tl aI z");
result.add("rea-\tlized", "r i:\tl aI z d");
result.add("rea-\tmer", "r i:\tm @r");
result.add("rea-\tmers", "r i:\tm @r z");
result.add("rea-\tmer's", "r i:\tm @r z");
result.add("rea-\tmy", "r i:\tm i:");
result.add("rea-\tper", "r i:\tp @r");
result.add("rea-\tping", "r i:\tp I N");
result.add("rea-\tring", "r I@\tI N");
result.add("rea-\tso-\tna-\tble", "r i:\tz V\tn V\tb V l");
result.add("rea-\tso-\tna-\tble-\tness", "r i:\tz V\tn V\tb V l\tn V s");
result.add("rea-\tso-\tnab-\tly", "r i:\tz V\tn V b\tl i:");
result.add("rea-\tso-\tner", "r i:\tz V\tn @r");
result.add("rea-\tso-\tner's", "r i:\tz V\tn @r z");
result.add("rea-\tso-\tning", "r i:\tz V\tn I N");
result.add("rea-\tson", "r i:\tz V n");
result.add("rea-\tsoned", "r i:\tz V n d");
result.add("rea-\tsons", "r i:\tz V n z");
result.add("rea-\tver", "r i:\tv @r");
result.add("reach", "r i: tS");
result.add("reached", "r i: tS t");
result.add("read", "r e d");
result.add("read-\tout", "r i:\td aU t");
result.add("reade", "r e d");
result.add("reads", "r i: d z");
result.add("read's", "r i: d z");
result.add("real", "r i: l");
result.add("real-\tes-\ttate", "r i:\tl V s\tt eI t");
result.add("real-\tly", "r I\tl i:");
result.add("real-\tpo-\tli-\ttik", "r i: l\tp O:\tl I\tt I k");
result.add("realm", "r e l m");
result.add("realms", "r e l m z");
result.add("ream", "r i: m");
result.add("reames", "r i: m z");
result.add("reams", "r i: m z");
result.add("reap", "r i: p");
result.add("reaped", "r i: p t");
result.add("reaps", "r i: p s");
result.add("rear", "r I@");
result.add("rear-\tdon", "r I@\td V n");
result.add("rear-\tview", "r I@ v\tj u:");
result.add("reared", "r I@ d");
result.add("rears", "r I@ z");
result.add("reave", "r i: v");
result.add("reaves", "r i: v z");
result.add("reb-\tbe", "r i:\tb V");
result.add("reb-\tbe's", "r i:\tb V z");
result.add("rec", "r e k");
result.add("rec-\tko-\tning", "r e\tk V\tn I N");
result.add("rec-\tkon", "r e\tk V n");
result.add("rec-\tkoned", "r e\tk V n d");
result.add("rec-\tkons", "r e\tk V n z");
result.add("rec-\tla-\tma-\ttion", "r e k\tl V\tm eI\tS V n");
result.add("rec-\tlai-\tmer", "r i: k\tl eI\tm @r");
result.add("rec-\tlai-\tmer's", "r i: k\tl eI\tm @r z");
result.add("rec-\tlai-\tming", "r i: k\tl eI\tm I N");
result.add("rec-\tlaim", "r i: k\tl eI m");
result.add("rec-\tlaimed", "r i: k\tl eI m d");
result.add("rec-\tross", "r i: k\tr O: s");
result.add("rec-\trui-\tted", "r I k\tr u:\tt V d");
result.add("rec-\trui-\tter", "r I k\tr u:\tt @r");
result.add("rec-\trui-\tters", "r I k\tr u:\tt @r z");
result.add("rec-\trui-\tting", "r V k\tr u:\tt I N");
result.add("rec-\truit", "r V k\tr u: t");
result.add("rec-\truit-\tment", "r V k\tr u: t\tm V n t");
result.add("rec-\truits", "r V k\tr u: t s");
result.add("rec-\truit's", "r i: k\tr u: t s");
result.add("rec-\ttal", "r e k\tt V l");
result.add("rec-\ttan-\tgle", "r e k\tt { N\tg V l");
result.add("rec-\ttan-\tgles", "r e k\tt { N\tg V l z");
result.add("rec-\ttan-\tgu-\tlar", "r e k\tt { N\tg j V\tl @r");
result.add("rec-\tti-\tfi-\tca-\ttion", "r e k\tt I\tf I\tk eI\tS V n");
result.add("rec-\tti-\tfi-\ter", "r e k\tt I\tf aI\t@r");
result.add("rec-\tti-\tfi-\ters", "r e k\tt I\tf aI\t@r z");
result.add("rec-\tti-\tfied", "r e k\tt I\tf aI d");
result.add("rec-\tti-\tfy", "r e k\tt I\tf aI");
result.add("rec-\tti-\tfy-\ting", "r e k\tt I\tf aI\tI N");
result.add("rec-\tti-\ttude", "r e k\tt I\tt u: d");
result.add("rec-\tto-\try", "r e k\tt @r\ti:");
result.add("rec-\ttor", "r e k\tt @r");
result.add("rec-\ttum", "r e k\tt V m");
result.add("rech", "r e k");
result.add("rech-\tris-\tten", "r i: k\tr I\ts V n");
result.add("rech-\tris-\ttened", "r i: k\tr I\ts V n d");
result.add("reck", "r e k");
result.add("reck-\tless", "r e k\tl V s");
result.add("reck-\tless-\tly", "r e k\tl V s\tl i:");
result.add("reck-\tless-\tness", "r e k\tl V s\tn V s");
result.add("red", "r e d");
result.add("red-\tbird", "r e d\tb @r d");
result.add("red-\tbud", "r e d\tb V d");
result.add("red-\tcoat", "r e d\tk @U t");
result.add("red-\tcoats", "r e d\tk @U t s");
result.add("red-\tdell", "r e\td V l");
result.add("red-\tden", "r e\td V n");
result.add("red-\tder", "r e\td @r");
result.add("red-\tdest", "r e\td V s t");
result.add("red-\tdick", "r e\td I k");
result.add("red-\tdin", "r e\td I n");
result.add("red-\tding", "r e\td I N");
result.add("red-\tdish", "r e\td I S");
result.add("red-\tdy", "r e\td i:");
result.add("red-\tfield", "r e d\tf i: l d");
result.add("red-\tfish", "r e d\tf I S");
result.add("red-\tford", "r e d\tf @r d");
result.add("red-\tford's", "r e d\tf @r d z");
result.add("red-\tgrave", "r e d\tg r eI v");
result.add("red-\than-\tded", "r e d\th { n\td V d");
result.add("red-\thea-\tded", "r e d\th e\td V d");
result.add("red-\thead", "r e d\th e d");
result.add("red-\theads", "r e d\th e d z");
result.add("red-\tli-\tning", "r e d\tl aI\tn I N");
result.add("red-\tman", "r e d\tm { n");
result.add("red-\tmon", "r e d\tm V n");
result.add("red-\tmond", "r e d\tm V n d");
result.add("red-\tmund", "r e d\tm V n d");
result.add("red-\tneck", "r e d\tn e k");
result.add("red-\tnecks", "r e d\tn e k s");
result.add("red-\tness", "r e d\tn V s");
result.add("red-\tpoll", "r e d\tp @U l");
result.add("red-\tpolls", "r e d\tp @U l z");
result.add("red-\traf-\tted", "r i: d\tr { f\tt V d");
result.add("red-\traft", "r i: d\tr { f t");
result.add("red-\traw", "r i: d\tr O:");
result.add("red-\traw-\ting", "r i: d\tr O:\tI N");
result.add("red-\trawn", "r i: d\tr O: n");
result.add("red-\tres-\tsing", "r i: d\tr e\ts I N");
result.add("red-\tress", "r V d\tr e s");
result.add("red-\tskin", "r e d\ts k I n");
result.add("red-\tskins", "r e d\ts k I n z");
result.add("red-\tstone", "r e d\ts t @U n");
result.add("red-\tstone's", "r e d\ts t @U n z");
result.add("red-\twine", "r e d\tw aI n");
result.add("red-\twood", "r e d\tw U d");
result.add("red-\twoods", "r e d\tw U d z");
result.add("redd", "r e d");
result.add("reds", "r e d z");
result.add("ree", "r i:");
result.add("ree-\tbok", "r i:\tb Q k");
result.add("ree-\tboks", "r i:\tb Q k s");
result.add("ree-\tbok's", "r i:\tb Q k s");
result.add("ree-\tder", "r i:\td @r");
result.add("ree-\tders", "r i:\td @r z");
result.add("ree-\tdy", "r i:\td i:");
result.add("ree-\tking", "r i:\tk I N");
result.add("ree-\tling", "r i:\tl I N");
result.add("ree-\tse's", "r i:\ts V z");
result.add("reece", "r i: s");
result.add("reed", "r i: d");
result.add("reeds", "r i: d z");
result.add("reed's", "r i: d z");
result.add("reef", "r i: f");
result.add("reefs", "r i: f s");
result.add("reek", "r i: k");
result.add("reeks", "r i: k s");
result.add("reel", "r i: l");
result.add("reeled", "r i: l d");
result.add("reels", "r i: l z");
result.add("reen", "r i: n");
result.add("rees", "r i: z");
result.add("reese", "r i: s");
result.add("reeve", "r i: v");
result.add("reeves", "r i: v z");
result.add("ref", "r e f");
result.add("ref-\tla-\ttion", "r i: f\tl eI\tS V n");
result.add("ref-\tlag", "r i: f\tl { g");
result.add("ref-\tlag-\tging", "r i: f\tl {\tg I N");
result.add("ref-\tlagged", "r i: f\tl { g d");
result.add("ref-\tlate", "r i: f\tl eI t");
result.add("ref-\tle-\txes", "r i: f\tl e k\ts V z");
result.add("ref-\tle-\txi-\tvi-\tty", "r i: f\tl e k\ts I\tv I\tt i:");
result.add("ref-\tle-\txive", "r V f\tl e k\ts I v");
result.add("ref-\tle-\txive-\tly", "r i: f\tl e k\ts I v\tl i:");
result.add("ref-\tlec-\tted", "r V f\tl e k\tt V d");
result.add("ref-\tlec-\tting", "r V f\tl e k\tt I N");
result.add("ref-\tlec-\ttion", "r V f\tl e k\tS V n");
result.add("ref-\tlec-\ttions", "r V f\tl e k\tS V n z");
result.add("ref-\tlec-\ttive", "r V f\tl e k\tt I v");
result.add("ref-\tlect", "r V f\tl e k t");
result.add("ref-\tlects", "r V f\tl e k t s");
result.add("ref-\tlex", "r i: f\tl e k s");
result.add("reg", "r e g");
result.add("reg-\tgae", "r e\tg eI");
result.add("reg-\tgi-\to", "r e\tdZ i:\t@U");
result.add("reg-\tgie", "r e\tdZ i:");
result.add("reg-\tgy", "r e\tg i:");
result.add("reg-\tret", "r I g\tr e t");
result.add("reg-\tret-\tful", "r I g\tr e t\tf V l");
result.add("reg-\tret-\tful-\tly", "r I g\tr e t\tf V\tl i:");
result.add("reg-\tret-\tta-\tble", "r I g\tr e\tt V\tb V l");
result.add("reg-\tret-\ttab-\tly", "r I g\tr e\tt V b\tl i:");
result.add("reg-\tret-\tted", "r I g\tr e\tt V d");
result.add("reg-\tret-\tting", "r I g\tr e\tt I N");
result.add("reg-\trets", "r I g\tr e t s");
result.add("regs", "r e g z");
result.add("reh", "r e");
result.add("rehm", "r e m");
result.add("rehn-\tquist", "r e n\tk w I s t");
result.add("rei-\tchel", "r aI\tk V l");
result.add("rei-\tchen-\tbach", "r aI\tk V n\tb Q k");
result.add("rei-\tchen-\tberg", "r aI\tk V n\tb @r g");
result.add("rei-\tchert", "r aI\tk @r t");
result.add("rei-\tder", "r i:\td @r");
result.add("rei-\tfel", "r aI\tf V l");
result.add("rei-\tki", "r eI\tk i:");
result.add("rei-\tmer", "r aI\tm @r");
result.add("rei-\tnal-\tdo", "r eI\tn Q l\td @U");
result.add("rei-\tnecke", "r aI\tn I k");
result.add("rei-\tner", "r aI\tn @r");
result.add("rei-\tners", "r aI\tn @r z");
result.add("rei-\tner's", "r aI\tn @r z");
result.add("rei-\tnert", "r aI\tn @r t");
result.add("rei-\tnert-\tson", "r aI\tn @r t\ts V n");
result.add("rei-\tning", "r eI\tn I N");
result.add("rei-\tser", "r aI\ts @r");
result.add("rei-\tsin-\tger", "r aI\ts I n\tdZ @r");
result.add("rei-\tter", "r aI\tt @r");
result.add("reich", "r aI k");
result.add("reiche", "r aI k");
result.add("reich's", "r aI k s");
result.add("reid", "r i: d");
result.add("reid's", "r i: d z");
result.add("reif", "r i: f");
result.add("reig-\tning", "r eI\tn I N");
result.add("reign", "r eI n");
result.add("reigned", "r eI n d");
result.add("reigns", "r eI n z");
result.add("reil", "r eI l");
result.add("reil-\tly", "r aI\tl i:");
result.add("reil-\tly's", "r aI\tl i: z");
result.add("reim", "r i: m");
result.add("rein", "r eI n");
result.add("rein-\tdeer", "r eI n\td I@");
result.add("rein-\thard", "r aI n\th Q@ d");
result.add("rein-\thardt", "r aI n\th Q@ t");
result.add("rein-\thart", "r aI n\th Q@ t");
result.add("rein-\thart's", "r aI n\th Q@ t s");
result.add("rein-\thold", "r aI n\th @U l t");
result.add("rein-\tking", "r aI N\tk I N");
result.add("rein-\twald", "r aI n\tw O: l d");
result.add("reine", "r eI n");
result.add("reined", "r eI n d");
result.add("reinke", "r eI N k");
result.add("reins", "r eI n z");
result.add("reis", "r i: z");
result.add("reis-\tman", "r aI s\tm V n");
result.add("reis-\tner", "r aI s\tn @r");
result.add("reisch", "r aI S");
result.add("reiss", "r aI s");
result.add("reit", "r aI t");
result.add("reit-\tman", "r aI t\tm V n");
result.add("reith", "r i: T");
result.add("rel-\tla", "r e\tl V");
result.add("rem", "r e m");
result.add("rem-\tbert", "r e m\tb @r t");
result.add("rem-\tbrandt", "r e m\tb r { n t");
result.add("rem-\tnant", "r e m\tn V n t");
result.add("rem-\tnants", "r e m\tn V n t s");
result.add("rem-\tsen", "r e m\ts V n");
result.add("rempe", "r e m p");
result.add("ren", "r e n");
result.add("ren-\tde-\tring", "r e n\td @r\tI N");
result.add("ren-\tde-\trings", "r e n\td @r\tI N z");
result.add("ren-\tder", "r e n\td @r");
result.add("ren-\tdered", "r e n\td @r d");
result.add("ren-\tders", "r e n\td @r z");
result.add("ren-\tdez-\tvous", "r Q n\td I\tv u:");
result.add("ren-\tdi-\ttion", "r e n\td I\tS V n");
result.add("ren-\tdi-\ttions", "r e n\td I\tS V n z");
result.add("ren-\tding", "r e n\td I N");
result.add("ren-\tfred", "r e n\tf @r d");
result.add("ren-\tfrew", "r e n\tf r u:");
result.add("ren-\tmin-\tbi", "r e n\tm I n\tb i:");
result.add("ren-\tner", "r e\tn @r");
result.add("ren-\tnet", "r e\tn V t");
result.add("ren-\tnie", "r e\tn i:");
result.add("ren-\tny", "r e\tn i:");
result.add("ren-\tta-\tble", "r e n\tt V\tb V l");
result.add("ren-\ttal", "r e n\tt V l");
result.add("ren-\ttals", "r e n\tt V l z");
result.add("ren-\tted", "r e n\tt V d");
result.add("ren-\tter", "r e n\tt @r");
result.add("ren-\tters", "r e n\tt @r z");
result.add("ren-\tting", "r e n\tt I N");
result.add("ren-\tton", "r e n\tt V n");
result.add("ren-\twick", "r e n\tw I k");
result.add("renk", "r e N k");
result.add("renn", "r e n");
result.add("renne", "r e n");
result.add("rens", "r e n z");
result.add("rens-\tse-\tlaer", "r e n\ts V\tl I@");
result.add("rent", "r e n t");
result.add("rents", "r e n t s");
result.add("rentsch", "r e n tS");
result.add("rentsch-\tler", "r e n\ttS l @r");
result.add("rentz", "r e n t s");
result.add("rep", "r e p");
result.add("rep-\tla-\tcea-\tble", "r i: p\tl eI\ts V\tb V l");
result.add("rep-\tla-\tces", "r V p\tl eI\ts V z");
result.add("rep-\tla-\tcing", "r V p\tl eI\ts I N");
result.add("rep-\tlace", "r i: p\tl eI s");
result.add("rep-\tlace-\tment", "r V p\tl eI s\tm V n t");
result.add("rep-\tlace-\tments", "r i: p\tl eI s\tm V n t s");
result.add("rep-\tlaced", "r i: p\tl eI s t");
result.add("rep-\tlan-\tted", "r i: p\tl { n\tt V d");
result.add("rep-\tlan-\tting", "r i: p\tl { n\tt I N");
result.add("rep-\tlant", "r i: p\tl { n t");
result.add("rep-\tle-\tnish-\tment", "r V p\tl e\tn I S\tm V n t");
result.add("rep-\tlete", "r i: p\tl i: t");
result.add("rep-\tli-\tca", "r e p\tl I\tk V");
result.add("rep-\tli-\tca-\tted", "r e p\tl I\tk eI\tt I d");
result.add("rep-\tli-\tca-\tting", "r e p\tl I\tk eI\tt I N");
result.add("rep-\tli-\tca-\ttion", "r e p\tl I\tk eI\tS V n");
result.add("rep-\tli-\tcas", "r e p\tl I\tk V z");
result.add("rep-\tli-\tcase", "r e p\tl I\tk eI z");
result.add("rep-\tli-\tcate", "r e p\tl I\tk eI t");
result.add("rep-\tli-\tcates", "r e p\tl I\tk eI t s");
result.add("rep-\tlied", "r V p\tl aI d");
result.add("rep-\tlies", "r V p\tl aI z");
result.add("rep-\tly", "r V p\tl aI");
result.add("rep-\tly-\ting", "r V p\tl aI\tI N");
result.add("rep-\tre-\then-\tsi-\tble", "r e p\tr V\th e n\ts V\tb V l");
result.add("rep-\tre-\tsen-\tta-\ttio-\tnal", "r e p\tr V\tz V n\tt eI\tS V\tn V l");
result.add("rep-\tre-\tsen-\tta-\ttion", "r e p\tr V\tz e n\tt eI\tS V n");
result.add("rep-\tre-\tsen-\tta-\ttions", "r e p\tr V\tz V n\tt eI\tS V n z");
result.add("rep-\tre-\tsen-\tta-\ttive", "r e p\tr V\tz e n\tt V\tt I v");
result.add("rep-\tre-\tsen-\tta-\ttives", "r e p\tr V\tz e n\tt V\tt I v z");
result.add("rep-\tre-\tsen-\tta-\ttive's", "r e p\tr V\tz e n\tt V\tt I v z");
result.add("rep-\tre-\tsen-\tted", "r e p\tr V\tz e n\tt V d");
result.add("rep-\tre-\tsen-\tting", "r e p\tr V\tz e n\tt I N");
result.add("rep-\tre-\tsent", "r e p\tr V\tz e n t");
result.add("rep-\tre-\tsents", "r e p\tr V\tz e n t s");
result.add("rep-\tres-\tsing", "r i: p\tr e\ts I N");
result.add("rep-\tres-\tsion", "r i: p\tr e\tS V n");
result.add("rep-\tres-\tsions", "r i: p\tr e\tS V n z");
result.add("rep-\tres-\tsive", "r i: p\tr e\ts I v");
result.add("rep-\tress", "r i: p\tr e s");
result.add("rep-\tressed", "r i: p\tr e s t");
result.add("rep-\tri-\tcing", "r i: p\tr aI\ts I N");
result.add("rep-\tri-\tman-\tded", "r e p\tr I\tm { n\td I d");
result.add("rep-\tri-\tmand", "r e p\tr I\tm { n d");
result.add("rep-\tri-\tmands", "r e p\tr I\tm { n d z");
result.add("rep-\tri-\tsal", "r i: p\tr aI\tz V l");
result.add("rep-\tri-\tsals", "r V p\tr aI\tz V l z");
result.add("rep-\trice", "r i: p\tr aI s");
result.add("rep-\triced", "r i: p\tr aI s t");
result.add("rep-\trieve", "r i: p\tr i: v");
result.add("rep-\trin-\tted", "r i: p\tr I n\tt V d");
result.add("rep-\trin-\tting", "r i: p\tr I n\tt I N");
result.add("rep-\trint", "r i: p\tr I n t");
result.add("rep-\trints", "r i: p\tr I n t s");
result.add("rep-\trise", "r V p\tr aI z");
result.add("rep-\tro-\tbate", "r e p\tr O:\tb eI t");
result.add("rep-\tro-\tces-\tsing", "r i: p\tr O:\ts e\ts I N");
result.add("rep-\tro-\tcess", "r i: p\tr O:\ts e s");
result.add("rep-\tro-\tcessed", "r i: p\tr O:\ts e s t");
result.add("rep-\tro-\tdu-\tces", "r i: p\tr V\td u:\ts V z");
result.add("rep-\tro-\tdu-\tcing", "r i: p\tr V\td u:\ts I N");
result.add("rep-\tro-\tduc-\ttion", "r i: p\tr V\td V k\tS V n");
result.add("rep-\tro-\tduc-\ttions", "r i: p\tr V\td V k\tS V n z");
result.add("rep-\tro-\tduc-\ttive", "r i: p\tr V\td V k\tt I v");
result.add("rep-\tro-\tduce", "r i: p\tr V\td u: s");
result.add("rep-\tro-\tduced", "r i: p\tr V\td u: s t");
result.add("rep-\tro-\tgra-\tphic", "r e p\tr @U g\tr {\tf I k");
result.add("rep-\tro-\tgra-\tphics", "r e p\tr @U g\tr {\tf I k s");
result.add("rep-\tro-\tgram", "r i: p\tr @U g\tr { m");
result.add("rep-\tro-\tgram-\tming", "r i: p\tr @U g\tr {\tm I N");
result.add("rep-\tro-\tgrammed", "r i: p\tr @U g\tr { m d");
result.add("rep-\tro-\tgrams", "r i: p\tr @U g\tr { m z");
result.add("rep-\troach", "r i: p\tr @U tS");
result.add("rep-\ttile", "r e p\tt aI l");
result.add("rep-\ttiles", "r e p\tt aI l z");
result.add("rep.", "r e p");
result.add("reph-\trase", "r i: f\tr eI z");
result.add("repp", "r e p");
result.add("reps", "r e p s");
result.add("rep's", "r e p s");
result.add("res", "r eI z");
result.add("re's", "r eI z");
result.add("res-\tche-\tdu-\tling", "r i: s\tk e\tdZ u:\tl I N");
result.add("res-\tche-\tdu-\tlings", "r i: S\tk e\tdZ u:\tl I N z");
result.add("res-\tche-\tdule", "r i: s\tk e\tdZ u: l");
result.add("res-\tche-\tduled", "r i: s\tk e\tdZ u: l d");
result.add("res-\tcu-\ter", "r e s\tk j u:\t@r");
result.add("res-\tcu-\ters", "r e s\tk j u:\t@r z");
result.add("res-\tcu-\ting", "r e s\tk j u:\tI N");
result.add("res-\tcue", "r e s\tk j u:");
result.add("res-\tcued", "r e s\tk j u: d");
result.add("res-\tcues", "r e s\tk j u: z");
result.add("res-\tnais", "r e s\tn eI");
result.add("res-\tnik", "r e s\tn I k");
result.add("res-\tpec-\tta-\tbi-\tli-\tty", "r i: s\tp e k\tt V\tb I\tl V\tt i:");
result.add("res-\tpec-\tta-\tble", "r V s\tp e k\tt V\tb V l");
result.add("res-\tpec-\ttab-\tly", "r i: s\tp e k\tt V b\tl i:");
result.add("res-\tpec-\tted", "r V s\tp e k\tt V d");
result.add("res-\tpec-\tting", "r i: s\tp e k\tt I N");
result.add("res-\tpec-\ttive", "r V s\tp e k\tt I v");
result.add("res-\tpec-\ttive-\tly", "r V s\tp e k\tt I v\tl i:");
result.add("res-\tpect", "r V s\tp e k t");
result.add("res-\tpect-\tful", "r V s\tp e k\tt f V l");
result.add("res-\tpect-\tful-\tly", "r V s\tp e k\tt f V\tl i:");
result.add("res-\tpects", "r V s\tp e k t s");
result.add("res-\tpi-\tra-\ttion", "r e s\tp @r\teI\tS V n");
result.add("res-\tpi-\tra-\tto-\try", "r e s\tp @r\tV\tt O@\ti:");
result.add("res-\tpi-\tra-\ttor", "r e s\tp @r\teI\tt @r");
result.add("res-\tpi-\tra-\ttors", "r e s\tp @r\teI\tt @r z");
result.add("res-\tpite", "r e s\tp I t");
result.add("res-\tplen-\tdent", "r i: s\tp l e n\td V n t");
result.add("res-\tpon-\tded", "r V s\tp Q n\td V d");
result.add("res-\tpon-\tdent", "r V s\tp Q n\td V n t");
result.add("res-\tpon-\tdents", "r V s\tp Q n\td V n t s");
result.add("res-\tpon-\tder", "r V s\tp Q n\td @r");
result.add("res-\tpon-\tders", "r V s\tp Q n\td @r z");
result.add("res-\tpon-\tding", "r V s\tp Q n\td I N");
result.add("res-\tpon-\tses", "r V s\tp Q n\ts V z");
result.add("res-\tpon-\tsi-\tbi-\tli-\tties", "r i: s\tp Q n\ts I\tb I\tl I\tt i: z");
result.add("res-\tpon-\tsi-\tbi-\tli-\tty", "r i: s\tp Q n\ts I\tb I\tl I\tt i:");
result.add("res-\tpon-\tsi-\tble", "r i: s\tp Q n\ts I\tb V l");
result.add("res-\tpon-\tsib-\tly", "r V s\tp Q n\ts V b\tl i:");
result.add("res-\tpon-\tsive", "r V s\tp Q n\ts I v");
result.add("res-\tpon-\tsive-\tness", "r V s\tp Q n\ts I v\tn V s");
result.add("res-\tpond", "r V s\tp Q n d");
result.add("res-\tponds", "r V s\tp Q n d z");
result.add("res-\tponse", "r V s\tp Q n s");
result.add("res-\ttage", "r i: s\tt eI dZ");
result.add("res-\ttaged", "r i: s\tt eI dZ d");
result.add("res-\tted", "r e s\tt V d");
result.add("res-\tter", "r e s\tt @r");
result.add("res-\tti-\ttu-\ttion", "r e s\tt I\tt u:\tS V n");
result.add("res-\tti-\ttute", "r e s\tt I\tt u: t");
result.add("res-\tti-\tvo", "r e s\tt i:\tv @U");
result.add("res-\tting", "r e s\tt I N");
result.add("res-\ttive", "r e s\tt I v");
result.add("res-\ttive-\tness", "r e s\tt I v\tn V s");
result.add("res-\tto-\tra-\ttion", "r e s\tt @r\teI\tS V n");
result.add("res-\tto-\tra-\ttions", "r e s\tt @r\teI\tS V n z");
result.add("res-\tto-\tra-\ttive", "r V s\tt O@\tV\tt I v");
result.add("res-\tto-\trer", "r V s\tt O@\t@r");
result.add("res-\tto-\tring", "r V s\tt O@\tI N");
result.add("res-\ttoc-\tking", "r i: s\tt Q\tk I N");
result.add("res-\ttock", "r i: s\tt Q k");
result.add("res-\ttocked", "r i: s\tt Q k t");
result.add("res-\tton", "r e s\tt V n");
result.add("res-\ttore", "r V s\tt O@");
result.add("res-\ttored", "r V s\tt O@ d");
result.add("res-\ttores", "r V s\tt O@ z");
result.add("resh", "r e S");
result.add("reske", "r e s k");
result.add("ress", "r e s");
result.add("ress-\tler", "r e s\tl @r");
result.add("rest", "r e s t");
result.add("rest-\tful", "r e s\tt f V l");
result.add("rest-\tless", "r e s\tt l V s");
result.add("rest-\tless-\tly", "r e s\tt l V s\tl i:");
result.add("rest-\tless-\tness", "r e s\tt l V s\tn V s");
result.add("rest-\trai-\tning", "r i: s\tt r eI\tn I N");
result.add("rest-\train", "r i: s\tt r eI n");
result.add("rest-\trained", "r i: s\tt r eI n d");
result.add("rest-\trains", "r i: s\tt r eI n z");
result.add("rest-\traint", "r V s\tt r eI n t");
result.add("rest-\traints", "r V s\tt r eI n t s");
result.add("rest-\tric-\tted", "r i: s\tt r I k\tt V d");
result.add("rest-\tric-\tting", "r i: s\tt r I k\tt I N");
result.add("rest-\tric-\ttion", "r i: s\tt r I k\tS V n");
result.add("rest-\tric-\ttions", "r i: s\tt r I k\tS V n z");
result.add("rest-\tric-\ttive", "r i: s\tt r I k\tt I v");
result.add("rest-\tric-\ttive-\tness", "r V s\tt r I k\tt I v\tn V s");
result.add("rest-\trict", "r i: s\tt r I k t");
result.add("rest-\tricts", "r i: s\tt r I k t s");
result.add("rest-\troom", "r e s\tt r u: m");
result.add("rest-\trooms", "r e s\tt r u: m z");
result.add("rest-\truc-\ttu-\tring", "r i: s\tt r V k\ttS @r\tI N");
result.add("rest-\truc-\ttu-\trings", "r i: s\tt r V k\ttS @r\tI N z");
result.add("rest-\truc-\tture", "r i: s\tt r V k\ttS @r");
result.add("rest-\truc-\ttured", "r i: s\tt r V k\ttS @r d");
result.add("rest-\truc-\ttures", "r i: s\tt r V k\ttS @r z");
result.add("rests", "r e s t s");
result.add("ret", "r e t");
result.add("ret-\tra-\tcing", "r i: t\tr eI\ts I N");
result.add("ret-\trac-\tta-\tble", "r i: t\tr { k\tt V\tb V l");
result.add("ret-\trac-\tted", "r i: t\tr { k\tt V d");
result.add("ret-\trac-\tting", "r i: t\tr { k\tt I N");
result.add("ret-\trac-\ttion", "r i: t\tr { k\tS V n");
result.add("ret-\trace", "r i: t\tr eI s");
result.add("ret-\trace-\tment", "r i: t\tr eI s\tm V n t");
result.add("ret-\traced", "r i: t\tr eI s t");
result.add("ret-\tract", "r i: t\tr { k t");
result.add("ret-\tracts", "r i: t\tr { k t s");
result.add("ret-\trai-\tning", "r i: t\tr eI\tn I N");
result.add("ret-\train", "r i: t\tr eI n");
result.add("ret-\trained", "r i: t\tr eI n d");
result.add("ret-\trans-\tmis-\tsion", "r i: t\tr { n\tz m I\tS V n");
result.add("ret-\trea-\tding", "r i: t\tr e\td I N");
result.add("ret-\trea-\tted", "r i: t\tr i:\tt V d");
result.add("ret-\trea-\tting", "r i: t\tr i:\tt I N");
result.add("ret-\tread", "r i: t\tr e d");
result.add("ret-\treads", "r i: t\tr e d z");
result.add("ret-\treat", "r i: t\tr i: t");
result.add("ret-\treats", "r i: t\tr i: t s");
result.add("ret-\tren-\tching", "r i: t\tr e n\ttS I N");
result.add("ret-\trench", "r i: t\tr e n tS");
result.add("ret-\trench-\tment", "r i: t\tr e n\ttS m V n t");
result.add("ret-\trench-\tments", "r i: t\tr e n\ttS m V n t s");
result.add("ret-\trenched", "r i: t\tr e n tS t");
result.add("ret-\tri-\tal", "r i: t\tr aI\tV l");
result.add("ret-\tri-\tbu-\ttion", "r e t\tr I b\tj u:\tS V n");
result.add("ret-\trie-\tval", "r V t\tr i:\tv V l");
result.add("ret-\trie-\tver", "r i: t\tr i:\tv @r");
result.add("ret-\trie-\tvers", "r i: t\tr i:\tv @r z");
result.add("ret-\trie-\tving", "r i: t\tr i:\tv I N");
result.add("ret-\tried", "r i: t\tr aI d");
result.add("ret-\trieve", "r V t\tr i: v");
result.add("ret-\trieved", "r i: t\tr i: v d");
result.add("ret-\trieves", "r V t\tr i: v z");
result.add("ret-\tro", "r e t\tr @U");
result.add("ret-\tro-\tac-\tti-\tvi-\tty", "r e t\tr @U\t{ k\tt I\tv I\tt i:");
result.add("ret-\tro-\tac-\ttive", "r e t\tr @U\t{ k\tt I v");
result.add("ret-\tro-\tac-\ttive-\tly", "r e t\tr @U\t{ k\tt I v\tl i:");
result.add("ret-\tro-\tfit", "r e t\tr @U\tf I t");
result.add("ret-\tro-\tfit-\tted", "r e t\tr @U\tf I\tt V d");
result.add("ret-\tro-\tfit-\tting", "r e t\tr @U\tf I\tt I N");
result.add("ret-\tro-\tfits", "r e t\tr @U\tf I t s");
result.add("ret-\tro-\tgrade", "r e t\tr V g\tr eI d");
result.add("ret-\tro-\tvi-\tru-\tses", "r e t\tr @U\tv aI\tr V\ts V z");
result.add("ret-\tro-\tvi-\trus", "r e t\tr @U\tv aI\tr V s");
result.add("ret-\tro-\tvir", "r e t\tr @U\tv I@");
result.add("ret-\tros-\tpec-\ttive", "r e t\tr V s\tp e k\tt I v");
result.add("ret-\tros-\tpec-\ttive-\tly", "r e t\tr @U s\tp e k\tt I v\tl i:");
result.add("ret-\tros-\tpect", "r e t\tr V s\tp e k t");
result.add("ret-\try", "r i: t\tr aI");
result.add("ret-\try-\ting", "r i: t\tr aI\tI N");
result.add("ret-\tter", "r e\tt @r");
result.add("ret-\ttig", "r e\tt I g");
result.add("rett-\tke", "r e t\tk i:");
result.add("reu-\tben", "r u:\tb V n");
result.add("reu-\tter", "r OI\tt @r");
result.add("reu-\tters", "r OI\tt @r z");
result.add("reu-\tter's", "r OI\tt @r z");
result.add("reu-\tther", "r OI\tD @r");
result.add("reut-\tter", "r OI\tt @r");
result.add("rev", "r e v");
result.add("rev-\tlon", "r e v\tl Q n");
result.add("rev-\tlon's", "r e v\tl Q n z");
result.add("rev-\tving", "r e\tv I N");
result.add("revs", "r e v z");
result.add("revved", "r e v d");
result.add("rew", "r u:");
result.add("rew-\trote", "r i:\tr @U t");
result.add("rex", "r e k s");
result.add("rex-\tford", "r e k\ts f @r d");
result.add("rex-\troth", "r e k\ts r Q T");
result.add("rey", "r eI");
result.add("rey-\tna", "r eI\tn V");
result.add("rey-\tnal-\tdo", "r eI\tn Q l\td @U");
result.add("rey-\tnard", "r eI\tn @r d");
result.add("rey-\tnaud", "r eI\tn O: d");
result.add("rey-\tno-\tsa", "r i:\tn @U\ts V");
result.add("rey-\tnold", "r e\tn V l d");
result.add("rey-\tnolds", "r e\tn V l d z");
result.add("reyk-\tja-\tvik", "r e k\tj V\tv I k");
result.add("rha", "r Q");
result.add("rhame", "r eI m");
result.add("rhap-\tso-\tdi-\tzes", "r { p\ts V\td aI\tz V z");
result.add("rhap-\tso-\tdic", "r { p\ts Q\td I k");
result.add("rhap-\tso-\tdize", "r { p\ts V\td aI z");
result.add("rhap-\tso-\tdy", "r { p\ts V\td i:");
result.add("rhe-\ta", "r i:\tV");
result.add("rhe-\tsus", "r i:\ts V s");
result.add("rhe-\tta", "r i:\tt V");
result.add("rhe-\tto-\tri-\tcal", "r V\tt O@\tI\tk V l");
result.add("rhe-\tto-\tri-\tcian", "r e\tt @r\tI\tS V n");
result.add("rhe-\tto-\tri-\tcians", "r e\tt @r\tI\tS V n z");
result.add("rhe-\tto-\tric", "r e\tt @r\tI k");
result.add("rhe-\tto-\trical-\tly", "r V\tt O@\tI k\tl i:");
result.add("rhee", "r i:");
result.add("rhein", "r aI n");
result.add("rhein-\tgold", "r aI n\tg @U l d");
result.add("rhett", "r e t");
result.add("rheu-\tma-\tti-\tsm", "r u:\tm V\tt I\tz V m");
result.add("rheu-\tma-\ttic", "r u:\tm {\tt I k");
result.add("rheu-\tma-\tto-\tlo-\tgist", "r u:\tm V\tt Q\tl V\tdZ V s t");
result.add("rheu-\tma-\tto-\tlo-\tgy", "r u:\tm V\tt Q\tl V\tdZ i:");
result.add("rheu-\tma-\ttoid", "r u:\tm V\tt OI d");
result.add("rhi-\tno", "r aI\tn @U");
result.add("rhi-\tno-\tce-\tros", "r aI\tn Q\ts @r\tV s");
result.add("rhi-\tnos", "r aI\tn @U z");
result.add("rhi-\tzoi-\tdal", "r aI\tz OI\td V l");
result.add("rhi-\tzoid", "r aI\tz OI d");
result.add("rhi-\tzome", "r aI\tz @U m");
result.add("rhi-\tzomes", "r aI\tz @U m z");
result.add("rhine", "r aI n");
result.add("rhine-\thart", "r aI n\th Q@ t");
result.add("rhine-\tland", "r aI n\tl { n d");
result.add("rhine-\tstone", "r aI n\ts t @U n");
result.add("rhine-\tstones", "r aI n\ts t @U n z");
result.add("rhines", "r aI n z");
result.add("rho", "r @U");
result.add("rho-\tda", "r @U\td V");
result.add("rho-\tdanthe", "r @U\td { n T");
result.add("rho-\tde-\tsia", "r @U\td i:\tZ V");
result.add("rho-\tde-\tsian", "r @U\td i:\tZ V n");
result.add("rho-\tden", "r @U\td V n");
result.add("rho-\tdi-\ta", "r @U\td i:\tV");
result.add("rho-\tdi-\tum", "r @U\td i:\tV m");
result.add("rho-\tdies", "r @U\td i: z");
result.add("rho-\tdo-\tdend-\tron", "r @U\td V\td e n\td r V n");
result.add("rho-\tdop-\tsin", "r @U\td Q p\ts I n");
result.add("rho-\tdus", "r @U\td V s");
result.add("rho-\tdy", "r @U\td i:");
result.add("rhoades", "r @U d z");
result.add("rhoads", "r @U d z");
result.add("rhode", "r @U d");
result.add("rhodes", "r @U d z");
result.add("rhon-\tda", "r Q n\td V");
result.add("rhone", "r @U n");
result.add("rhu-\tbarb", "r u:\tb Q@ b");
result.add("rhy-\tmer", "r aI\tm @r");
result.add("rhy-\tming", "r aI\tm I N");
result.add("rhy-\tner", "r aI\tn @r");
result.add("rhy-\tthm", "r I\tD V m");
result.add("rhy-\tthms", "r I\tD V m z");
result.add("rhyme", "r aI m");
result.add("rhymed", "r aI m d");
result.add("rhymes", "r aI m z");
result.add("rhyne", "r aI n");
result.add("rhynes", "r aI n z");
result.add("rhyth-\tmic", "r I D\tm I k");
result.add("rhyth-\tmical-\tly", "r I D\tm I k\tl i:");
result.add("ri-\ta", "r i:\tV");
result.add("ri-\tal", "r aI\tV l");
result.add("ri-\tba", "r i:\tb V");
result.add("ri-\tba-\tvi-\trin", "r V\tb {\tv @r\tI n");
result.add("ri-\tbald", "r aI\tb Q l d");
result.add("ri-\tbald-\try", "r aI\tb Q l\td r i:");
result.add("ri-\tbas", "r aI\tb V z");
result.add("ri-\tbau-\tdo", "r i:\tb O:\td @U");
result.add("ri-\tbe-\tra", "r i:\tb e@\tV");
result.add("ri-\tbi-\tcoff", "r I\tb I\tk O: f");
result.add("ri-\tca", "r i:\tk V");
result.add("ri-\tcan", "r i:\tk V n");
result.add("ri-\tcans", "r I\tk V n z");
result.add("ri-\tcar-\tdo", "r I\tk Q@\td @U");
result.add("ri-\tcard", "r I\tk Q@ d");
result.add("ri-\tca's", "r i:\tk V z");
result.add("ri-\tce's", "r aI\ts V z");
result.add("ri-\tchard", "r I\ttS @r d");
result.add("ri-\tchard-\tson", "r I\ttS @r d\ts V n");
result.add("ri-\tchard-\tson's", "r I\ttS @r d\ts V n z");
result.add("ri-\tchards", "r I\ttS @r d z");
result.add("ri-\tchard's", "r I\ttS @r d z");
result.add("ri-\tchart", "r I k\th Q@ t");
result.add("ri-\tche-\tlieu", "r I\tS V\tl u:");
result.add("ri-\tcher", "r I\ttS @r");
result.add("ri-\tchert", "r I\tk @r t");
result.add("ri-\tches", "r I\ttS V z");
result.add("ri-\tchest", "r I\ttS V s t");
result.add("ri-\tchey", "r I\ttS i:");
result.add("ri-\tchie", "r I\ttS i:");
result.add("ri-\tch's", "r I\ttS V z");
result.add("ri-\tco", "r i:\tk @U");
result.add("ri-\tco-\tche-\tting", "r I\tk V\tS eI\tI N");
result.add("ri-\tco-\tchet", "r I\tk V\tS eI");
result.add("ri-\tco-\tcheted", "r I\tk V\tS eI d");
result.add("ri-\tco's", "r i:\tk @U z");
result.add("ri-\tda-\tble", "r aI\td V\tb V l");
result.add("ri-\tdeau", "r V\td @U");
result.add("ri-\tden", "r aI\td V n");
result.add("ri-\tder", "r aI\td @r");
result.add("ri-\tder-\tship", "r aI\td @r\tS I p");
result.add("ri-\tders", "r aI\td @r z");
result.add("ri-\tder's", "r aI\td @r z");
result.add("ri-\tdi-\tcu-\tling", "r I\td I k\tj u:\tl I N");
result.add("ri-\tdi-\tcu-\tlous", "r I\td I k\tj V\tl V s");
result.add("ri-\tdi-\tcu-\tlous-\tly", "r I\td I k\tj V\tl V s\tl i:");
result.add("ri-\tdi-\tcule", "r I\td I k\tj u: l");
result.add("ri-\tdi-\tculed", "r I\td I k\tj u: l d");
result.add("ri-\tdi-\tcules", "r I\td I k\tj u: l z");
result.add("ri-\tdin-\tger", "r aI\td I\tN @r");
result.add("ri-\tding", "r aI\td I N");
result.add("ri-\tdings", "r aI\td I N z");
result.add("ri-\teth", "r aI\tV T");
result.add("ri-\tfle", "r aI\tf V l");
result.add("ri-\tfle-\tman", "r aI\tf V l\tm V n");
result.add("ri-\tfle-\try", "r aI\tf V l\tr i:");
result.add("ri-\tfled", "r aI\tf V l d");
result.add("ri-\tfles", "r aI\tf V l z");
result.add("ri-\tga", "r i:\tg V");
result.add("ri-\tga-\tto-\tni", "r I\tg V\tt @U\tn i:");
result.add("ri-\tgel", "r aI\tdZ V l");
result.add("ri-\tgi-\tdi-\tties", "r I\tdZ I\td I\tt i: z");
result.add("ri-\tgi-\tdi-\tty", "r I\tdZ I\td I\tt i:");
result.add("ri-\tgid", "r I\tdZ I d");
result.add("ri-\tgid-\tly", "r I\tdZ I d\tl i:");
result.add("ri-\tgo-\tlet-\tto", "r I\tg V\tl e\tt @U");
result.add("ri-\tgo-\trous", "r I\tg @r\tV s");
result.add("ri-\tgo-\trous-\tly", "r I\tg @r\tV s\tl i:");
result.add("ri-\tgor", "r I\tg @r");
result.add("ri-\tgors", "r I\tg @r z");
result.add("ri-\tgueur", "r I g\tj u: r");
result.add("ri-\tha", "r aI\th V");
result.add("ri-\tjn", "r i:\tV n");
result.add("ri-\tker", "r aI\tk @r");
result.add("ri-\tker's", "r aI\tk @r z");
result.add("ri-\tley", "r aI\tl i:");
result.add("ri-\tley's", "r aI\tl i: z");
result.add("ri-\tma", "r i:\tm V");
result.add("ri-\tmer", "r aI\tm @r");
result.add("ri-\tna", "r i:\tn V");
result.add("ri-\tnal-\tdo", "r V\tn Q l\td @U");
result.add("ri-\tnard", "r I\tn @r d");
result.add("ri-\tner", "r aI\tn @r");
result.add("ri-\tni", "r i:\tn i:");
result.add("ri-\to", "r i:\t@U");
result.add("ri-\to-\tjas", "r i:\t@U\tj Q z");
result.add("ri-\to-\tted", "r aI\tV\tt V d");
result.add("ri-\to-\tter", "r aI\tV\tt @r");
result.add("ri-\to-\tters", "r aI\tV\tt @r z");
result.add("ri-\to-\tting", "r aI\tV\tt I N");
result.add("ri-\to-\ttous", "r aI\tV\tt V s");
result.add("ri-\ton", "r aI\tV n");
result.add("ri-\tos", "r i:\t@U s");
result.add("ri-\tot", "r aI\tV t");
result.add("ri-\tots", "r aI\tV t s");
result.add("ri-\tpa", "r i:\tp V");
result.add("ri-\tpe-\tning", "r aI\tp V\tn I N");
result.add("ri-\tpen", "r aI\tp V n");
result.add("ri-\tpened", "r aI\tp V n d");
result.add("ri-\tposte", "r V\tp @U s t");
result.add("ri-\tpostes", "r V\tp O: s t s");
result.add("ri-\tsa", "r i:\ts V");
result.add("ri-\tsen", "r I\tz V n");
result.add("ri-\tser", "r aI\tz @r");
result.add("ri-\tses", "r aI\tz V z");
result.add("ri-\tsing", "r aI\tz I N");
result.add("ri-\tson", "r I\ts V n");
result.add("ri-\tta", "r i:\tt V");
result.add("ri-\tta-\tlin", "r I\tt V\tl I n");
result.add("ri-\tta's", "r i:\tt V z");
result.add("ri-\ttu-\ta-\tlis-\tti-\tcal-\tly", "r I\ttS u:\tV\tl I s\tt I\tk V\tl i:");
result.add("ri-\ttu-\ta-\tlis-\ttic", "r I\ttS u:\tV\tl I s\tt I k");
result.add("ri-\ttu-\tal", "r I\ttS u:\tV l");
result.add("ri-\ttu-\tals", "r I\ttS u:\tV l z");
result.add("ri-\tva", "r i:\tv V");
result.add("ri-\tva-\tling", "r aI\tv V\tl I N");
result.add("ri-\tval", "r aI\tv V l");
result.add("ri-\tval-\tries", "r aI\tv V l\tr i: z");
result.add("ri-\tval-\try", "r aI\tv V l\tr i:");
result.add("ri-\tvaled", "r aI\tv V l d");
result.add("ri-\tvals", "r aI\tv V l z");
result.add("ri-\tval's", "r aI\tv V l z");
result.add("ri-\tvard", "r I\tv @r d");
result.add("ri-\tvas", "r i:\tv Q z");
result.add("ri-\tve-\tra", "r I\tv e@\tV");
result.add("ri-\tve-\tted", "r I\tv V\tt V d");
result.add("ri-\tve-\tting", "r I\tv V\tt I N");
result.add("ri-\tven", "r I\tv V n");
result.add("ri-\tver", "r I\tv @r");
result.add("ri-\tver-\tbank", "r I\tv @r\tb { N k");
result.add("ri-\tver-\tbed", "r I\tv @r\tb e d");
result.add("ri-\tver-\tboat", "r I\tv @r\tb @U t");
result.add("ri-\tver-\tboats", "r I\tv @r\tb @U t s");
result.add("ri-\tver-\tdale", "r I\tv @r\td eI l");
result.add("ri-\tver-\tfront", "r I\tv @r f\tr V n t");
result.add("ri-\tver-\thead", "r I\tv @r\th e d");
result.add("ri-\tver-\tside", "r I\tv @r\ts aI d");
result.add("ri-\tver-\tway", "r I\tv @r\tw eI");
result.add("ri-\tvers", "r I\tv @r z");
result.add("ri-\tver's", "r I\tv @r z");
result.add("ri-\tvet", "r I\tv V t");
result.add("ri-\tvets", "r I\tv V t s");
result.add("ri-\tvi-\te-\tra", "r I\tv i:\te@\tV");
result.add("ri-\tvi-\tere", "r I\tv i:\te@");
result.add("ri-\tyadh", "r i:\t{ d");
result.add("ri-\tyals", "r i:\tj Q l z");
result.add("rials", "r aI l z");
result.add("rib", "r I b");
result.add("rib-\tbing", "r I\tb I N");
result.add("rib-\tble", "r I\tb V l");
result.add("rib-\tbon", "r I\tb V n");
result.add("rib-\tbons", "r I\tb V n z");
result.add("ribbed", "r I b d");
result.add("ribs", "r I b z");
result.add("ric", "r I k");
result.add("ric-\tca", "r i:\tk V");
result.add("ric-\tcar-\tdo", "r I\tk Q@\td @U");
result.add("ric-\tci", "r i:\ttS i:");
result.add("ric-\tci-\to", "r i:\ttS i:\t@U");
result.add("ric-\tkard", "r I\tk @r d");
result.add("ric-\tkards", "r I\tk @r d z");
result.add("ric-\tke-\tty", "r I\tk V\tt i:");
result.add("ric-\tker", "r I\tk @r");
result.add("ric-\tkers", "r I\tk @r z");
result.add("ric-\tkert", "r I\tk @r t");
result.add("ric-\tkets", "r I\tk V t s");
result.add("ric-\tketts", "r I\tk V t s");
result.add("ric-\tkey", "r I\tk i:");
result.add("ric-\tki", "r I\tk i:");
result.add("ric-\tkie", "r I\tk i:");
result.add("ric-\tkles", "r I\tk V l z");
result.add("ric-\tky", "r I\tk i:");
result.add("rice", "r aI s");
result.add("rice-\tville", "r aI s\tv I l");
result.add("rich", "r I tS");
result.add("rich-\tburg", "r I tS\tb @r g");
result.add("rich-\tfield", "r I tS\tf i: l d");
result.add("rich-\tfield's", "r I tS\tf i: l d z");
result.add("rich-\tford", "r I tS\tf @r d");
result.add("rich-\tland", "r I tS\tl V n d");
result.add("rich-\tly", "r I tS\tl i:");
result.add("rich-\tman", "r I tS\tm { n");
result.add("rich-\tmond", "r I tS\tm V n d");
result.add("rich-\tmond's", "r I tS\tm V n d z");
result.add("rich-\tness", "r I tS\tn V s");
result.add("rich-\tter", "r I k\tt @r");
result.add("rich-\tton", "r I tS\tt V n");
result.add("riche", "r I tS");
result.add("richts", "r I k t s");
result.add("rick", "r I k");
result.add("rick-\tman", "r I k\tm V n");
result.add("rick-\twood", "r I k\tw U d");
result.add("ricks", "r I k s");
result.add("rick's", "r I k s");
result.add("rid", "r I d");
result.add("rid-\tdance", "r I\td V n s");
result.add("rid-\tden", "r I\td V n");
result.add("rid-\tder", "r I\td @r");
result.add("rid-\tder's", "r I\td @r z");
result.add("rid-\tding", "r I\td I N");
result.add("rid-\tdle", "r I\td V l");
result.add("rid-\tdled", "r I\td V l d");
result.add("rid-\tdles", "r I\td V l z");
result.add("rid-\tges", "r I\tdZ V z");
result.add("rid-\tge's", "r I\tdZ V s");
result.add("rid-\tley", "r I d\tl i:");
result.add("rid-\tpath", "r I d\tp { T");
result.add("ridd-\tler", "r I d\tl @r");
result.add("ride", "r aI d");
result.add("rides", "r aI d z");
result.add("ridg-\tefield", "r I dZ\tf i: l d");
result.add("ridg-\tley", "r I dZ\tl i:");
result.add("ridg-\tway", "r I dZ\tw eI");
result.add("ridge", "r I dZ");
result.add("ridge-\tcrest", "r I dZ\tk r e s t");
result.add("ridge-\tly", "r I dZ\tl i:");
result.add("ridge-\tway", "r I dZ\tw eI");
result.add("ridge-\twood", "r I dZ\tw U d");
result.add("ridged", "r I dZ d");
result.add("rids", "r I d z");
result.add("rie-\tdel", "r i:\td V l");
result.add("rie-\tgel", "r i:\tg V l");
result.add("rie-\tger", "r i:\tg @r");
result.add("rie-\tmann", "r i:\tm V n");
result.add("riehl", "r i: l");
result.add("riel", "r i: l");
result.add("ries", "r aI z");
result.add("ries-\tling", "r i: z\tl I N");
result.add("riess", "r i: s");
result.add("riet-\tveld", "r i: t\tv e l d");
result.add("rieves", "r i: v z");
result.add("rif-\tfle", "r I\tf V l");
result.add("rif-\tkin", "r I f\tk I n");
result.add("rif-\tkin's", "r I f\tk I n z");
result.add("rif-\tling", "r aI f\tl I N");
result.add("rife", "r aI f");
result.add("riff", "r I f");
result.add("riff-\traff", "r I f\tr { f");
result.add("riffs", "r I f s");
result.add("rift", "r I f t");
result.add("rifts", "r I f t s");
result.add("rig", "r I g");
result.add("rig-\tby", "r I g\tb i:");
result.add("rig-\tdon", "r I g\td V n");
result.add("rig-\tging", "r I\tg I N");
result.add("rig-\tgings", "r I\tg I N z");
result.add("rig-\tgins", "r I\tg I n z");
result.add("rigg", "r I g");
result.add("rigged", "r I g d");
result.add("riggs", "r I g z");
result.add("righ-\tted", "r aI\tt V d");
result.add("righ-\tteous", "r aI\ttS V s");
result.add("righ-\tteous-\tly", "r aI\ttS V s\tl i:");
result.add("righ-\tteous-\tness", "r aI\ttS V s\tn V s");
result.add("righ-\tter", "r aI\tt @r");
result.add("righ-\ttish", "r aI\tt I S");
result.add("righ-\ttist", "r aI\tt I s t");
result.add("righ-\ttists", "r aI\tt I s t s");
result.add("righ-\tty", "r aI\tt i:");
result.add("right", "r aI t");
result.add("right-\tful", "r aI t\tf V l");
result.add("right-\tful-\tly", "r aI t\tf V\tl i:");
result.add("right-\than-\tded", "r aI t\th { n\td V d");
result.add("right-\thand", "r aI t\th { n d");
result.add("right-\tly", "r aI t\tl i:");
result.add("right-\tness", "r aI t\tn V s");
result.add("right-\tward", "r aI t\tw @r d");
result.add("right-\twin-\tger", "r aI t\tw I\tN @r");
result.add("right-\twin-\tgers", "r aI t\tw I\tN @r z");
result.add("right-\twing", "r aI t\tw I N");
result.add("rights", "r aI t s");
result.add("rigs", "r I g z");
result.add("rigs-\tby", "r I g\tz b i:");
result.add("rik-\tki", "r I\tk i:");
result.add("riks-\tdag", "r I k\ts d { g");
result.add("ril-\tlette", "r V\tl e t");
result.add("ril-\tling", "r I\tl I N");
result.add("rile", "r aI l");
result.add("riled", "r aI l d");
result.add("riles", "r aI l z");
result.add("rill", "r I l");
result.add("rill's", "r I l z");
result.add("rim", "r I m");
result.add("rim-\tmer", "r I\tm @r");
result.add("rimes", "r aI m z");
result.add("rimmed", "r I m d");
result.add("rims", "r I m z");
result.add("rin-\tcon", "r I N\tk V n");
result.add("rin-\tg-\tler", "r I N\tg V\tl @r");
result.add("rin-\tgel", "r I N\tg V l");
result.add("rin-\tger", "r I\tN @r");
result.add("rin-\tgers", "r I\tN @r z");
result.add("rin-\tging", "r I\tN I N");
result.add("rin-\tgle", "r I N\tg V l");
result.add("rin-\tgo", "r i: N\tg @U");
result.add("rin-\tgold", "r I N\tg @U l d");
result.add("rin-\tker", "r I N\tk @r");
result.add("rin-\tsing", "r I n\ts I N");
result.add("rind", "r aI n d");
result.add("rinds", "r aI n d z");
result.add("rine", "r aI n");
result.add("rine-\thart", "r aI n\th Q@ t");
result.add("rines", "r aI n z");
result.add("ring", "r I N");
result.add("ring-\tgit", "r I\tN I t");
result.add("ring-\tgold", "r I N\tg @U l d");
result.add("ring-\tlea-\tder", "r I N\tl i:\td @r");
result.add("ring-\tlea-\tders", "r I N\tl i:\td @r z");
result.add("ring-\tling", "r I N\tl I N");
result.add("ring-\tmas-\tter", "r I N\tm { s\tt @r");
result.add("ring-\tneck", "r I N\tn e k");
result.add("ring-\tside", "r I N\ts aI d");
result.add("ring-\twood", "r I N\tw U d");
result.add("ringe", "r I N");
result.add("ringed", "r I N d");
result.add("rings", "r I N z");
result.add("ring's", "r I N z");
result.add("rink", "r I N k");
result.add("rinks", "r I N k s");
result.add("rinse", "r I n s");
result.add("rior-\tdan", "r I@\td V n");
result.add("rior-\tdan's", "r I@\td V n z");
result.add("rip", "r I p");
result.add("rip-\tley", "r I p\tl i:");
result.add("rip-\toff", "r I\tp O: f");
result.add("rip-\toffs", "r I\tp O: f s");
result.add("rip-\tp-\tling", "r I\tp V\tl I N");
result.add("rip-\tper", "r I\tp @r");
result.add("rip-\tpey", "r I\tp i:");
result.add("rip-\tping", "r I\tp I N");
result.add("rip-\tple", "r I\tp V l");
result.add("rip-\tpled", "r I\tp V l d");
result.add("rip-\tples", "r I\tp V l z");
result.add("rip-\tpon", "r I\tp V n");
result.add("ripe", "r aI p");
result.add("ripp", "r I p");
result.add("ripped", "r I p t");
result.add("rips", "r I p s");
result.add("ris-\tki-\ter", "r I s\tk i:\t@r");
result.add("ris-\tki-\test", "r I s\tk i:\tV s t");
result.add("ris-\tki-\tness", "r I s\tk i:\tn V s");
result.add("ris-\tking", "r I s\tk I N");
result.add("ris-\tky", "r I s\tk i:");
result.add("ris-\tley", "r I z\tl i:");
result.add("ris-\tque", "r I s\tk eI");
result.add("ris-\tser", "r I\ts @r");
result.add("risc", "r I s k");
result.add("rise", "r aI z");
result.add("risk", "r I s k");
result.add("risk-\tless", "r I s\tk l V s");
result.add("risked", "r I s k t");
result.add("risks", "r I s k s");
result.add("riss", "r I s");
result.add("risse", "r I s");
result.add("rist", "r I s t");
result.add("rit-\tchie", "r I\ttS i:");
result.add("rit-\tner", "r I t\tn @r");
result.add("rit-\tter", "r I\tt @r");
result.add("rit-\tzi-\test", "r I t\ts i:\tV s t");
result.add("rit-\tzy", "r I t\ts i:");
result.add("ritch", "r I tS");
result.add("rite", "r aI t");
result.add("rites", "r aI t s");
result.add("rite's", "r aI t s");
result.add("ritt", "r I t");
result.add("ritt-\tman", "r I t\tm V n");
result.add("ritts", "r I t s");
result.add("ritz", "r I t s");
result.add("riv-\tlin", "r I v\tl I n");
result.add("rives", "r aI v z");
result.add("rix", "r I k s");
result.add("riz", "r I z");
result.add("riz-\tzi", "r I\tz i:");
result.add("riz-\tzo", "r I\tz @U");
result.add("ro", "r @U");
result.add("ro-\ta", "r @U\tV");
result.add("ro-\ta-\tnoke", "r @U\tV\tn @U k");
result.add("ro-\tbai-\tna", "r @U\tb eI\tn V");
result.add("ro-\tbards", "r Q\tb @r d z");
result.add("ro-\tbe-\tson", "r @U\tb V\ts V n");
result.add("ro-\tber", "r @U\tb @r");
result.add("ro-\tber-\tson", "r Q\tb @r\ts V n");
result.add("ro-\tber-\tta", "r V\tb @r\tt V");
result.add("ro-\tber-\tto", "r V\tb e@\tt @U");
result.add("ro-\tbers", "r @U\tb @r z");
result.add("ro-\tbert", "r Q\tb @r t");
result.add("ro-\tbert-\tson", "r Q\tb @r t\ts V n");
result.add("ro-\tbert-\tson's", "r Q\tb @r t\ts V n z");
result.add("ro-\tberts", "r Q\tb @r t s");
result.add("ro-\tbert's", "r Q\tb @r t s");
result.add("ro-\tbi-\tna", "r V\tb i:\tn V");
result.add("ro-\tbi-\tnett", "r Q\tb I\tn e t");
result.add("ro-\tbi-\tnette", "r Q\tb I\tn e t");
result.add("ro-\tbi-\tni-\ta", "r @U\tb i:\tn i:\tV");
result.add("ro-\tbi-\tson", "r Q\tb I\ts V n");
result.add("ro-\tbi-\ttus-\tsin", "r Q\tb I\tt V\ts I n");
result.add("ro-\tbil-\tlard", "r Q\tb I\tl @r d");
result.add("ro-\tbin", "r Q\tb I n");
result.add("ro-\tbin-\tson", "r Q\tb I n\ts V n");
result.add("ro-\tbin-\tson's", "r Q\tb I n\ts V n z");
result.add("ro-\tbins", "r Q\tb I n z");
result.add("ro-\tbin's", "r Q\tb I n z");
result.add("ro-\tble", "r @U\tb V l");
result.add("ro-\tbles", "r @U\tb V l z");
result.add("ro-\tbo-\ttic", "r @U\tb Q\tt I k");
result.add("ro-\tbo-\ttics", "r @U\tb Q\tt I k s");
result.add("ro-\tbot", "r @U\tb Q t");
result.add("ro-\tbots", "r @U\tb Q t s");
result.add("ro-\tbot's", "r @U\tb Q t s");
result.add("ro-\tbus-\tta", "r Q\tb V s\tt V");
result.add("ro-\tbus-\ttas", "r Q\tb V s\tt V s");
result.add("ro-\tbust", "r @U\tb V s t");
result.add("ro-\tbust-\tly", "r @U\tb V s\tt l i:");
result.add("ro-\tbust-\tness", "r @U\tb V s\tt n V s");
result.add("ro-\tby", "r @U\tb i:");
result.add("ro-\tbyn", "r Q\tb I n");
result.add("ro-\tca", "r @U\tk V");
result.add("ro-\tcha", "r @U\tk V");
result.add("ro-\tchel-\tla", "r V\ttS e\tl V");
result.add("ro-\tchelle", "r @U\tS e l");
result.add("ro-\tcher", "r @U\ttS @r");
result.add("ro-\tche's", "r @U\tS V z");
result.add("ro-\tches-\tter", "r Q\ttS e s\tt @r");
result.add("ro-\tches-\tter's", "r Q\ttS e s\tt @r z");
result.add("ro-\tchette", "r V\tS e t");
result.add("ro-\tchon", "r Q\ttS V n");
result.add("ro-\tco-\tco", "r V\tk @U\tk @U");
result.add("ro-\tda", "r @U\td V");
result.add("ro-\tde-\to", "r @U\td i:\t@U");
result.add("ro-\tde-\tos", "r @U\td i:\t@U z");
result.add("ro-\tde-\tri-\tca", "r @U\td @r\ti:\tk V");
result.add("ro-\tdent", "r @U\td V n t");
result.add("ro-\tdents", "r @U\td V n t s");
result.add("ro-\tdi", "r @U\td i:");
result.add("ro-\tdin", "r @U\td I n");
result.add("ro-\tdol-\tfo", "r @U\td Q l\tf @U");
result.add("ro-\tdolph", "r @U\td Q l f");
result.add("ro-\tgaine", "r @U\tg eI n");
result.add("ro-\tgan", "r @U\tg V n");
result.add("ro-\tge-\tli-\to", "r @U\tg i:\tl i:\t@U");
result.add("ro-\tger", "r Q\tdZ @r");
result.add("ro-\tger-\tson", "r Q\tg @r\ts V n");
result.add("ro-\tgers", "r Q\tdZ @r z");
result.add("ro-\tger's", "r Q\tdZ @r z");
result.add("ro-\tgi-\ter", "r @U\tg i:\t@r");
result.add("ro-\than", "r @U\tV n");
result.add("ro-\thyp-\tnol", "r @U\th aI p\tn O: l");
result.add("ro-\tjas", "r @U\th Q s");
result.add("ro-\tka", "r @U\tk V");
result.add("ro-\tlan", "r @U\tl V n");
result.add("ro-\tlan-\tda", "r @U\tl Q n\td V");
result.add("ro-\tlan-\tdo", "r @U\tl Q n\td @U");
result.add("ro-\tland", "r @U\tl V n d");
result.add("ro-\tlette", "r @U\tl e t");
result.add("ro-\tlex", "r @U\tl e k s");
result.add("ro-\tley", "r @U\tl i:");
result.add("ro-\tlo-\tdex", "r @U\tl V\td e k s");
result.add("ro-\tma", "r @U\tm V");
result.add("ro-\tma-\tnesque", "r @U\tm V\tn e s k");
result.add("ro-\tma-\tni", "r @U\tm Q\tn i:");
result.add("ro-\tma-\tni-\ta", "r @U\tm eI\tn i:\tV");
result.add("ro-\tma-\tni-\tan", "r @U\tm eI\tn i:\tV n");
result.add("ro-\tma-\tni-\tans", "r @U\tm eI\tn i:\tV n z");
result.add("ro-\tma-\tni-\ta's", "r @U\tm eI\tn i:\tV z");
result.add("ro-\tma-\tno", "r @U\tm Q\tn @U");
result.add("ro-\tma-\tnoff", "r @U\tm V\tn O: f");
result.add("ro-\tma-\tno's", "r @U\tm Q\tn @U z");
result.add("ro-\tma-\tnov", "r @U\tm V\tn O: v");
result.add("ro-\tma-\tny", "r Q\tm V\tn i:");
result.add("ro-\tmain", "r @U\tm eI n");
result.add("ro-\tmaine", "r @U\tm eI n");
result.add("ro-\tman", "r @U\tm V n");
result.add("ro-\tman-\tces", "r @U\tm { n\ts V z");
result.add("ro-\tman-\tcing", "r @U\tm { n\ts I N");
result.add("ro-\tman-\tti-\tcal-\tly", "r @U\tm { n\tt I\tk V\tl i:");
result.add("ro-\tman-\tti-\tci-\tsm", "r @U\tm { n\tt I\ts I\tz V m");
result.add("ro-\tman-\tti-\tci-\tzing", "r @U\tm { n\tt I\ts aI\tz I N");
result.add("ro-\tman-\tti-\tcize", "r @U\tm { n\tt I\ts aI z");
result.add("ro-\tman-\tti-\tcized", "r @U\tm { n\tt I\ts aI z d");
result.add("ro-\tman-\ttic", "r @U\tm { n\tt I k");
result.add("ro-\tman-\ttics", "r @U\tm { n\tt I k s");
result.add("ro-\tmance", "r @U\tm { n s");
result.add("ro-\tmans", "r @U\tm V n z");
result.add("ro-\tman's", "r @U\tm V n z");
result.add("ro-\tmas", "r @U\tm V z");
result.add("ro-\tme-\to", "r @U\tm i:\t@U");
result.add("ro-\tme-\tro", "r @U\tm e@\t@U");
result.add("ro-\tmelle", "r V\tm e l");
result.add("ro-\tmi-\tna", "r V\tm i:\tn V");
result.add("ro-\tmi-\tne", "r V\tm i:\tn i:");
result.add("ro-\tmi-\tto", "r @U\tm i:\tt @U");
result.add("ro-\tmil-\tda", "r V\tm i: l\td V");
result.add("ro-\tmo", "r @U\tm @U");
result.add("ro-\tmo-\tla", "r Q\tm V\tl V");
result.add("ro-\tmu-\tlus", "r Q m\tj V\tl V s");
result.add("ro-\tna", "r @U\tn V");
result.add("ro-\tnal-\tda", "r @U\tn Q l\td V");
result.add("ro-\tnald", "r Q\tn V l d");
result.add("ro-\tnan", "r @U\tn V n");
result.add("ro-\tnan's", "r @U\tn V n z");
result.add("ro-\tnen", "r @U\tn V n");
result.add("ro-\tnin", "r @U\tn I n");
result.add("ro-\tper", "r @U\tp @r");
result.add("ro-\tpers", "r @U\tp @r z");
result.add("ro-\tper's", "r @U\tp @r z");
result.add("ro-\tping", "r @U\tp I N");
result.add("ro-\trie", "r O@\ti:");
result.add("ro-\try", "r O@\ti:");
result.add("ro-\tsa", "r @U\tz V");
result.add("ro-\tsa-\tbel", "r @U\tz V\tb e l");
result.add("ro-\tsa-\tbelle", "r Q\ts V\tb V l");
result.add("ro-\tsa-\tlee", "r @U\ts V\tl i:");
result.add("ro-\tsa-\tli-\ta", "r @U\tz V\tl i:\tV");
result.add("ro-\tsa-\tlie", "r @U\tz V\tl i:");
result.add("ro-\tsa-\tlin-\tda", "r @U\ts Q\tl i: n\td V");
result.add("ro-\tsa-\tlind", "r Q\tz V\tl V n d");
result.add("ro-\tsa-\tlyn", "r Q\tz V\tl V n");
result.add("ro-\tsa-\tlynd", "r Q\tz V\tl V n d");
result.add("ro-\tsa-\tlyn's", "r Q\tz V\tl V n z");
result.add("ro-\tsa-\tmond", "r @U\tz V\tm V n d");
result.add("ro-\tsa-\tmund", "r @U\tz V\tm U n d");
result.add("ro-\tsa-\tri-\ta", "r @U\tz Q@\ti:\tV");
result.add("ro-\tsa-\tri-\to", "r @U\tz Q@\ti:\t@U");
result.add("ro-\tsa-\tries", "r @U\tz @r\ti: z");
result.add("ro-\tsa-\try", "r @U\tz @r\ti:");
result.add("ro-\tsa-\tti", "r @U\tz Q\tt i:");
result.add("ro-\tsales", "r @U\ts eI l z");
result.add("ro-\tsan", "r @U\tz V n");
result.add("ro-\tsan-\tna", "r @U\tz {\tn V");
result.add("ro-\tsanne", "r @U\tz { n");
result.add("ro-\tsa's", "r @U\tz V z");
result.add("ro-\tseanne", "r @U\tz { n");
result.add("ro-\tsel", "r @U\tz V l");
result.add("ro-\tsel-\tla", "r @U\tz e\tl V");
result.add("ro-\tsel-\tlen", "r @U\tz V\tl V n");
result.add("ro-\tsen", "r @U\tz V n");
result.add("ro-\tsen-\tbaum", "r @U\tz V n\tb aU m");
result.add("ro-\tsen-\tber-\tger", "r @U\tz V n\tb @r\tg @r");
result.add("ro-\tsen-\tberg", "r @U\tz V n\tb @r g");
result.add("ro-\tsen-\tberg's", "r @U\tz V n\tb @r g z");
result.add("ro-\tsen-\tblatt", "r @U\tz V n\tb l { t");
result.add("ro-\tsen-\tblum", "r @U\tz V n\tb l u: m");
result.add("ro-\tsen-\tdale", "r @U\tz V n\td eI l");
result.add("ro-\tsen-\tfeld", "r @U\tz V n\tf e l d");
result.add("ro-\tsen-\tkrantz", "r @U\tz V n\tk r { n t s");
result.add("ro-\tsen-\tkranz", "r @U\tz V n\tk r { n t s");
result.add("ro-\tsen-\tquist", "r @U\tz V n\tk w I s t");
result.add("ro-\tsen-\tstein", "r @U\tz V n\ts t aI n");
result.add("ro-\tsen-\tthal", "r @U\tz V n\tT O: l");
result.add("ro-\tsen-\twald", "r @U\tz V n\tw O: l d");
result.add("ro-\tsene", "r Q\ts i: n");
result.add("ro-\tsen's", "r @U\tz V n z");
result.add("ro-\tsenz-\tweig", "r @U\tz V n\tz w aI g");
result.add("ro-\tser", "r @U\tz @r");
result.add("ro-\tses", "r @U\tz V z");
result.add("ro-\tse's", "r @U\tz V z");
result.add("ro-\tset-\tta", "r @U\tz e\tt V");
result.add("ro-\tsette", "r V\ts e t");
result.add("ro-\tsettes", "r @U\tz e t s");
result.add("ro-\tsi-\ter", "r @U\tz i:\t@r");
result.add("ro-\tsi-\tna", "r @U\tz i:\tn V");
result.add("ro-\tsi-\tne", "r @U\ts i:\tn i:");
result.add("ro-\tsi-\tta", "r @U\tz i:\tt V");
result.add("ro-\tsie", "r @U\tz i:");
result.add("ro-\tsie's", "r @U\tz i: z");
result.add("ro-\tsin", "r Q\tz I n");
result.add("ro-\tsin-\tski", "r V\ts I n\ts k i:");
result.add("ro-\tsing", "r @U\tz I N");
result.add("ro-\tsol", "r @U\ts O: l");
result.add("ro-\tsy", "r @U\tz i:");
result.add("ro-\tta", "r @U\tt V");
result.add("ro-\tta-\try", "r @U\tt @r\ti:");
result.add("ro-\tta-\tted", "r @U\tt eI\tt V d");
result.add("ro-\tta-\tting", "r @U\tt eI\tt I N");
result.add("ro-\tta-\ttio-\tnal", "r @U\tt eI\tS V\tn V l");
result.add("ro-\tta-\ttion", "r @U\tt eI\tS V n");
result.add("ro-\tta-\ttions", "r @U\tt eI\tS V n z");
result.add("ro-\ttan", "r @U\tt V n");
result.add("ro-\ttate", "r @U\tt eI t");
result.add("ro-\ttates", "r @U\tt eI t s");
result.add("ro-\ttel-\tla", "r @U\tt e\tl V");
result.add("ro-\tthen-\tberg", "r O:\tT V n\tb @r g");
result.add("ro-\tther", "r O:\tT @r");
result.add("ro-\tti", "r @U\tt i:");
result.add("ro-\ttis-\tse-\trie", "r @U\tt I\ts @r\ti:");
result.add("ro-\tto", "r @U\tt @U");
result.add("ro-\tto-\tlo", "r @U\tt @U\tl @U");
result.add("ro-\tto-\ttil-\tler", "r @U\tt V\tt I\tl @r");
result.add("ro-\tto-\ttil-\tling", "r @U\tt V\tt I\tl I N");
result.add("ro-\tto-\ttill", "r @U\tt V\tt I l");
result.add("ro-\tto-\ttilled", "r @U\tt V\tt I l d");
result.add("ro-\ttor", "r @U\tt @r");
result.add("ro-\ttors", "r @U\tt @r z");
result.add("ro-\ttun-\tda", "r @U\tt V n\td V");
result.add("ro-\ttun-\tdo", "r @U\tt u: n\td @U");
result.add("ro-\ttund", "r @U\tt V n d");
result.add("ro-\twan", "r @U\tV n");
result.add("ro-\twan's", "r @U\tV n z");
result.add("ro-\twe-\tna", "r @U\ti:\tn V");
result.add("ro-\twell", "r @U\tI l");
result.add("ro-\twen", "r @U\tV n");
result.add("ro-\twer", "r @U\t@r");
result.add("ro-\twing", "r @U\tI N");
result.add("ro-\txa-\tna", "r Q k\ts {\tn V");
result.add("ro-\txan-\tna", "r Q k\ts {\tn V");
result.add("ro-\txanne", "r Q k\ts { n");
result.add("ro-\txie", "r Q k\ts i:");
result.add("ro-\txine", "r Q k\ts aI n");
result.add("ro-\tx's", "r Q k\ts V z");
result.add("ro-\txy", "r Q k\ts i:");
result.add("ro-\tya-\tlist", "r OI\tV\tl I s t");
result.add("ro-\tyal", "r OI\tV l");
result.add("ro-\tyal-\tly", "r OI\tV\tl i:");
result.add("ro-\tyal-\tties", "r OI\tV l\tt i: z");
result.add("ro-\tyal-\tty", "r OI\tV l\tt i:");
result.add("ro-\tyale", "r OI\t{ l");
result.add("ro-\tyall", "r OI\tV l");
result.add("ro-\tyals", "r OI\tV l z");
result.add("ro-\tyal's", "r OI\tV l z");
result.add("ro-\tzek", "r @U\tz e k");
result.add("ro-\tzel-\tla", "r @U\tz e\tl V");
result.add("ro-\tzelle", "r V\tz e l");
result.add("roa-\tches", "r @U\ttS V z");
result.add("roa-\tdie", "r @U\td i:");
result.add("roa-\tdy", "r @U\td i:");
result.add("roa-\tming", "r @U\tm I N");
result.add("roa-\tring", "r O@\tI N");
result.add("roach", "r @U tS");
result.add("road", "r @U d");
result.add("road-\tblock", "r @U d\tb l Q k");
result.add("road-\tblocks", "r @U d\tb l Q k s");
result.add("road-\thouse", "r @U d\th aU s");
result.add("road-\tmas-\tter", "r @U d\tm { s\tt @r");
result.add("road-\trun-\tner", "r @U d\tr V\tn @r");
result.add("road-\tshow", "r @U d\tS @U");
result.add("road-\tside", "r @U d\ts aI d");
result.add("road-\tsides", "r @U d\ts aI d z");
result.add("road-\tster", "r @U d\ts t @r");
result.add("road-\tway", "r @U d\tw eI");
result.add("road-\tways", "r @U d\tw eI z");
result.add("road-\twork", "r @U d\tw @r k");
result.add("roads", "r @U d z");
result.add("road's", "r @U d z");
result.add("roald", "r @U l d");
result.add("roam", "r @U m");
result.add("roamed", "r @U m d");
result.add("roams", "r @U m z");
result.add("roan", "r @U n");
result.add("roan-\tna", "r @U\tn V");
result.add("roane", "r @U n");
result.add("roar", "r O@");
result.add("roared", "r O@ d");
result.add("roark", "r O@ k");
result.add("roarke", "r O@ k");
result.add("roars", "r O@ z");
result.add("roas-\tted", "r @U s\tt V d");
result.add("roas-\tter", "r @U s\tt @r");
result.add("roas-\tters", "r @U s\tt @r z");
result.add("roas-\tting", "r @U s\tt I N");
result.add("roast", "r @U s t");
result.add("roasts", "r @U s t s");
result.add("roath", "r @U T");
result.add("rob", "r Q b");
result.add("rob-\tbe-\tries", "r Q\tb @r\ti: z");
result.add("rob-\tbe-\try", "r Q\tb @r\ti:");
result.add("rob-\tben", "r Q\tb V n");
result.add("rob-\tber", "r Q\tb @r");
result.add("rob-\tbers", "r Q\tb @r z");
result.add("rob-\tbie", "r Q\tb i:");
result.add("rob-\tbie's", "r Q\tb i: z");
result.add("rob-\tbin", "r Q\tb I n");
result.add("rob-\tbing", "r Q\tb I N");
result.add("rob-\tbins", "r Q\tb I n z");
result.add("rob-\tby", "r Q\tb i:");
result.add("rob-\tby's", "r Q\tb i: z");
result.add("rob-\tson", "r Q b\ts V n");
result.add("robb", "r Q b");
result.add("robbed", "r Q b d");
result.add("robb's", "r Q b z");
result.add("robe", "r @U b");
result.add("robed", "r @U b d");
result.add("robes", "r @U b z");
result.add("robs", "r Q b z");
result.add("rob's", "r Q b z");
result.add("roc", "r Q k");
result.add("roc-\tca", "r Q\tk V");
result.add("roc-\tco", "r Q\tk @U");
result.add("roc-\tco's", "r Q\tk @U z");
result.add("roc-\tka-\tbil-\tly", "r Q\tk V\tb I\tl i:");
result.add("roc-\tka-\tfel-\tlow", "r Q\tk V\tf e\tl @U");
result.add("roc-\tka-\tway", "r Q\tk V\tw eI");
result.add("roc-\tke-\tfel-\tler", "r Q\tk V\tf e\tl @r");
result.add("roc-\tke-\tfel-\tler's", "r Q\tk V\tf e\tl @r z");
result.add("roc-\tke-\tted", "r Q\tk V\tt V d");
result.add("roc-\tke-\tting", "r Q\tk V\tt I N");
result.add("roc-\tkel", "r Q\tk V l");
result.add("roc-\tker", "r Q\tk @r");
result.add("roc-\tkers", "r Q\tk @r z");
result.add("roc-\tket", "r Q\tk V t");
result.add("roc-\tket-\try", "r Q\tk V t\tr i:");
result.add("roc-\tkets", "r Q\tk V t s");
result.add("roc-\tket's", "r Q\tk V t s");
result.add("roc-\tkettes", "r Q\tk e t s");
result.add("roc-\tkey", "r Q\tk i:");
result.add("roc-\tkies", "r Q\tk i: z");
result.add("roc-\tkin-\tgham", "r Q\tk I N\th { m");
result.add("roc-\tking", "r Q\tk I N");
result.add("roc-\tky", "r Q\tk i:");
result.add("roch", "r Q k");
result.add("roch-\tberg", "r @U tS\tb @r g");
result.add("roch-\tford", "r Q tS\tf @r d");
result.add("roche", "r @U tS");
result.add("rock", "r Q k");
result.add("rock-\tand-\troll", "r Q\tk { n\td r @U l");
result.add("rock-\tford", "r Q k\tf @r d");
result.add("rock-\tland", "r Q k\tl V n d");
result.add("rock-\tlin", "r Q k\tl I n");
result.add("rock-\tman", "r Q k\tm V n");
result.add("rock-\t'n'-\troll", "r Q\tk V n\tr @U l");
result.add("rock-\tne", "r Q k\tn i:");
result.add("rock-\tport", "r Q k\tp O@ t");
result.add("rock-\trose", "r Q k\tr @U z");
result.add("rock-\tville", "r Q k\tv I l");
result.add("rock-\twell", "r Q k\tw e l");
result.add("rock-\twell's", "r Q k\tw e l z");
result.add("rock-\twood", "r Q k\tw U d");
result.add("rocked", "r Q k t");
result.add("rocks", "r Q k s");
result.add("rock's", "r Q k s");
result.add("rod", "r Q d");
result.add("rod-\tden", "r Q\td V n");
result.add("rod-\tden-\tber-\try", "r Q\td V n\tb e@\ti:");
result.add("rod-\tdick", "r Q\td I k");
result.add("rod-\tdie", "r Q\td i:");
result.add("rod-\tding", "r Q\td I N");
result.add("rod-\tdy", "r Q\td i:");
result.add("rod-\tger", "r Q\tdZ @r");
result.add("rod-\tgers", "r Q\tdZ @r z");
result.add("rod-\tham", "r O:\td V m");
result.add("rod-\tman", "r Q d\tm V n");
result.add("rod-\tman's", "r Q d\tm V n z");
result.add("rod-\tney", "r Q d\tn i:");
result.add("rod-\tri-\tgo", "r V d\tr i:\tg @U");
result.add("rod-\tri-\tgue-\tz's", "r Q d\tr i:\tg e\tz V z");
result.add("rod-\tri-\tguez", "r Q d\tr i:\tg e z");
result.add("rod-\tri-\tquez", "r Q d\tr i:\tk e z");
result.add("rod-\trick", "r Q d\tr I k");
result.add("rodd", "r Q d");
result.add("rode", "r @U d");
result.add("rode-\trick", "r Q d\tr I k");
result.add("rode-\trick's", "r Q d\tr I k s");
result.add("rode-\tway", "r @U d\tw eI");
result.add("rodes", "r @U d z");
result.add("rodge", "r Q dZ");
result.add("rods", "r Q d z");
result.add("roe", "r @U");
result.add("roe-\tbuck", "r @U\tb V k");
result.add("roe-\tbuck's", "r @U\tb V k s");
result.add("roe-\tland", "r @U\tl V n d");
result.add("roe-\tmer", "r @U\tm @r");
result.add("roe-\tser", "r @U\tz @r");
result.add("roeb-\tling", "r @U b\tl I N");
result.add("roed", "r @U d");
result.add("roehm", "r @U m");
result.add("roes", "r @U z");
result.add("roff", "r O: f");
result.add("rog", "r Q g");
result.add("rogue", "r @U g");
result.add("rogues", "r @U g z");
result.add("roh", "r @U");
result.add("rohe", "r @U");
result.add("rohn", "r Q n");
result.add("roi", "r OI");
result.add("roi-\tling", "r OI\tl I N");
result.add("roil", "r OI l");
result.add("roiled", "r OI l d");
result.add("rois-\tter", "r OI s\tt @r");
result.add("rol-\tdan", "r @U l\td V n");
result.add("rol-\tla", "r Q\tl V");
result.add("rol-\tland", "r Q\tl V n d");
result.add("rol-\tland's", "r @U\tl V n d z");
result.add("rol-\tler", "r @U\tl @r");
result.add("rol-\tler-\tbla-\tding", "r @U\tl @r b\tl eI\td I N");
result.add("rol-\tler-\tblade", "r @U\tl @r b\tl eI d");
result.add("rol-\tler-\tblades", "r @U\tl @r b\tl eI d z");
result.add("rol-\tler-\tcoas-\tter", "r @U\tl @r\tk @U s\tt @r");
result.add("rol-\tlers", "r @U\tl @r z");
result.add("rol-\tlet", "r @U\tl e t");
result.add("rol-\tley", "r Q\tl i:");
result.add("rol-\tlic-\tking", "r Q\tl I\tk I N");
result.add("rol-\tlie", "r @U\tl i:");
result.add("rol-\tlin", "r Q\tl I n");
result.add("rol-\tling", "r @U\tl I N");
result.add("rol-\tlings", "r @U\tl I N z");
result.add("rol-\tlins", "r Q\tl I n z");
result.add("rol-\tlo", "r Q\tl @U");
result.add("rol-\tlout", "r @U\tl aU t");
result.add("rol-\tnick", "r @U l\tn I k");
result.add("role", "r @U l");
result.add("role-\tmo-\tdel", "r @U l\tm Q\td V l");
result.add("role-\tplay-\ting", "r @U l\tp l eI\tI N");
result.add("roles", "r @U l z");
result.add("rolf", "r @U l f");
result.add("rolfe", "r @U l f");
result.add("rolfs", "r @U l f s");
result.add("roll", "r @U l");
result.add("roll-\tback", "r @U l\tb { k");
result.add("roll-\tbacks", "r @U l\tb { k s");
result.add("roll-\tman", "r @U l\tm V n");
result.add("roll-\to-\tver", "r @U\tl @U\tv @r");
result.add("roll-\to-\tvers", "r @U\tl @U\tv @r z");
result.add("roll-\tout", "r @U\tl aU t");
result.add("roll-\ttop", "r @U l\tt Q p");
result.add("rolled", "r @U l d");
result.add("rolls", "r @U l z");
result.add("rolph", "r @U l f");
result.add("rom", "r Q m");
result.add("rom-\tberg", "r Q m\tb @r g");
result.add("rom-\tmel", "r Q\tm V l");
result.add("rom-\tney", "r Q m\tn i:");
result.add("rom-\tney's", "r Q m\tn i: z");
result.add("rom-\tping", "r Q m\tp I N");
result.add("rome", "r @U m");
result.add("rome's", "r @U m z");
result.add("romp", "r Q m p");
result.add("roms", "r Q m z");
result.add("rom's", "r Q m z");
result.add("ron", "r Q n");
result.add("ron-\tco", "r @U n\tk @U");
result.add("ron-\tda", "r Q n\td V");
result.add("ron-\tdeau", "r Q n\td @U");
result.add("ron-\tdo-\tni-\ta", "r Q n\td @U\tn i:\tV");
result.add("ron-\tdon", "r Q n\td V n");
result.add("ron-\tna", "r Q\tn V");
result.add("ron-\tnie", "r Q\tn i:");
result.add("ron-\tning", "r Q\tn I N");
result.add("ron-\tny", "r Q\tn i:");
result.add("ron-\tstadt", "r Q n\ts t { t");
result.add("rone", "r @U n");
result.add("rong", "r O: N");
result.add("ronne", "r Q n");
result.add("ron's", "r Q n z");
result.add("roo-\tfer", "r u:\tf @r");
result.add("roo-\tfers", "r u:\tf @r z");
result.add("roo-\tfing", "r u:\tf I N");
result.add("roo-\tker", "r U\tk @r");
result.add("roo-\tkie", "r U\tk i:");
result.add("roo-\tkies", "r U\tk i: z");
result.add("roo-\tmi-\ter", "r u:\tm i:\t@r");
result.add("roo-\tmi-\tness", "r u:\tm i:\tn V s");
result.add("roo-\tming", "r u:\tm I N");
result.add("roo-\tmy", "r u:\tm i:");
result.add("roo-\tney", "r u:\tn i:");
result.add("roo-\tney's", "r u:\tn i: z");
result.add("roo-\tsa", "r u:\ts V");
result.add("roo-\tse-\tvelt", "r @U\tz V\tv e l t");
result.add("roo-\tse-\tvelt's", "r @U\tz V\tv e l t s");
result.add("roo-\tted", "r u:\tt V d");
result.add("roo-\tter", "r u:\tt @r");
result.add("roo-\tters", "r u:\tt @r z");
result.add("roo-\tting", "r u:\tt I N");
result.add("rood", "r u: d");
result.add("roof", "r u: f");
result.add("roof-\ttop", "r u: f\tt Q p");
result.add("roof-\ttops", "r u: f\tt Q p s");
result.add("roof-\ttree", "r u: f\tt r i:");
result.add("roofed", "r u: f t");
result.add("roofs", "r u: f s");
result.add("rook", "r U k");
result.add("rooke", "r U k");
result.add("rooks", "r U k s");
result.add("room", "r u: m");
result.add("room-\tful", "r u: m\tf U l");
result.add("room-\tmate", "r u:\tm eI t");
result.add("room-\tmates", "r u:\tm eI t s");
result.add("rooms", "r u: m z");
result.add("room's", "r u: m z");
result.add("roop", "r u: p");
result.add("roos", "r u: z");
result.add("roos-\tted", "r u: s\tt V d");
result.add("roos-\tter", "r u: s\tt @r");
result.add("roos-\tters", "r u: s\tt @r z");
result.add("roose", "r u: z");
result.add("roost", "r u: s t");
result.add("root", "r u: t");
result.add("root-\tless", "r u: t\tl V s");
result.add("roots", "r u: t s");
result.add("rope", "r @U p");
result.add("roped", "r @U p t");
result.add("ropes", "r @U p s");
result.add("ropp", "r Q p");
result.add("rops", "r Q p s");
result.add("roque", "r @U k");
result.add("roque-\tmore", "r @U k\tm O@");
result.add("ror-\tschach", "r O@\tS Q");
result.add("rorke", "r O@ k");
result.add("ros", "r O: s");
result.add("ros-\tcoe", "r Q s\tk @U");
result.add("ros-\tlyn", "r Q z\tl I n");
result.add("ros-\tman", "r Q s\tm V n");
result.add("ros-\tmun-\tda", "r @U s\tm u: n\td V");
result.add("ros-\tner", "r Q s\tn @r");
result.add("ros-\tsen", "r O:\ts V n");
result.add("ros-\tser", "r O:\ts @r");
result.add("ros-\tset-\tti", "r @U\ts e\tt i:");
result.add("ros-\tsi", "r O:\ts i:");
result.add("ros-\tsi-\tni", "r @U\ts i:\tn i:");
result.add("ros-\tsi-\tter", "r O:\ts I\tt @r");
result.add("ros-\tsi-\tya", "r O:\ts i:\tV");
result.add("ros-\tsie", "r O:\ts i:");
result.add("ros-\tsing", "r O:\ts I N");
result.add("ros-\tten", "r Q\ts V n");
result.add("ros-\tter", "r Q s\tt @r");
result.add("ros-\tters", "r Q s\tt @r z");
result.add("ros-\ttov", "r Q s\tt Q v");
result.add("ros-\ttro-\tpo-\tvich", "r O: s\tt r V\tp @U\tv I tS");
result.add("ros-\ttrum", "r Q s\tt r V m");
result.add("ros-\twald", "r Q s\tw V l d");
result.add("ros-\twell", "r Q s\tw e l");
result.add("ros-\tzak", "r Q\tS V k");
result.add("rose", "r @U z");
result.add("rose-\tber-\try", "r @U z\tb e@\ti:");
result.add("rose-\tbo-\tro", "r @U z\tb @r\t@U");
result.add("rose-\tboom", "r @U z\tb u: m");
result.add("rose-\tbud", "r @U z\tb V d");
result.add("rose-\tbush", "r @U z\tb U S");
result.add("rose-\tcrans", "r @U z\tk r { n z");
result.add("rose-\tland", "r @U z\tl V n d");
result.add("rose-\tlawn", "r @U z\tl O: n");
result.add("rose-\tlawn's", "r @U z\tl O: n z");
result.add("rose-\tline", "r @U z\tl aI n");
result.add("rose-\tma-\trie", "r @U z\tm @r\ti:");
result.add("rose-\tma-\try", "r @U z\tm e@\ti:");
result.add("rose-\tmead", "r @U z\tm i: d");
result.add("rose-\tmont", "r @U z\tm Q n t");
result.add("rose-\tville", "r @U z\tv I l");
result.add("rose-\twood", "r @U z\tw U d");
result.add("rose-\twood's", "r @U z\tw U d z");
result.add("rosh", "r O: S");
result.add("ross", "r Q s");
result.add("ross-\tbach", "r Q s\tb Q k");
result.add("ross-\tlyn", "r Q s\tl I n");
result.add("ross-\tmore", "r Q s\tm O@");
result.add("ross-\tner", "r Q s\tn @r");
result.add("rosse", "r Q s");
result.add("rost", "r Q s t");
result.add("rot", "r Q t");
result.add("rot-\tberg", "r Q t\tb @r g");
result.add("rot-\tman", "r Q t\tm V n");
result.add("rot-\tted", "r Q\tt V d");
result.add("rot-\tten", "r Q\tt V n");
result.add("rot-\tter", "r Q\tt @r");
result.add("rot-\tter-\tdam", "r Q\tt @r\td { m");
result.add("rot-\tting", "r Q\tt I N");
result.add("rote", "r @U t");
result.add("roth", "r O: T");
result.add("roth-\tberg", "r O: T\tb @r g");
result.add("roth-\twell", "r O: T\tw e l");
result.add("roth's", "r Q T s");
result.add("roths-\tchild", "r O: T\ts tS aI l d");
result.add("roths-\tchild's", "r O: T\ttS aI l d z");
result.add("roths-\ttein", "r O: T\ts t aI n");
result.add("rots", "r Q t s");
result.add("rou-\tble", "r u:\tb V l");
result.add("rou-\tgeau", "r u:\tZ @U");
result.add("rou-\tgher", "r V\tf @r");
result.add("rou-\tghest", "r V\tf V s t");
result.add("rou-\tghing", "r V\tf I N");
result.add("rou-\tleau", "r u:\tl @U");
result.add("rou-\tlette", "r u:\tl e t");
result.add("rou-\tlettes", "r u:\tl e t s");
result.add("rou-\tlette's", "r u:\tl e t s");
result.add("rouge", "r u: Z");
result.add("rough", "r V f");
result.add("rough-\tly", "r V f\tl i:");
result.add("rough-\tneck", "r V f\tn e k");
result.add("rough-\tnecks", "r V f\tn e k s");
result.add("rough-\tness", "r V f\tn V s");
result.add("rough-\tshod", "r V f\tS Q d");
result.add("roughed", "r V f t");
result.add("rought", "r O: t");
result.add("roun-\tda-\tbout", "r aU n\td V\tb aU t");
result.add("roun-\tded", "r aU n\td V d");
result.add("roun-\tder", "r aU n\td @r");
result.add("roun-\tding", "r aU n\td I N");
result.add("roun-\tdup", "r aU n\td V p");
result.add("roun-\tdy", "r aU n\td i:");
result.add("round", "r aU n d");
result.add("round-\thead", "r aU n\td h e d");
result.add("round-\thouse", "r aU n\td h aU s");
result.add("round-\tly", "r aU n\td l i:");
result.add("round-\tta-\tble", "r aU n\td t eI\tb V l");
result.add("round-\ttree", "r aU n\td t r i:");
result.add("round-\ttrip", "r aU n\td t r I p");
result.add("round-\tworm", "r aU n\td w @r m");
result.add("round-\tworms", "r aU n\td w @r m z");
result.add("rounds", "r aU n d z");
result.add("row", "r @U");
result.add("row-\tbo-\ttham", "r @U\tb V\tT { m");
result.add("row-\tboat", "r @U\tb @U t");
result.add("row-\tdi-\tness", "r aU\td i:\tn V s");
result.add("row-\tdies", "r aU\td i: z");
result.add("row-\tdy", "r aU\td i:");
result.add("row-\tland", "r @U\tl V n d");
result.add("row-\tland's", "r @U\tl V n d z");
result.add("row-\tlett", "r @U\tl e t");
result.add("row-\tley", "r @U\tl i:");
result.add("row-\tney", "r @U\tn i:");
result.add("rowe", "r @U");
result.add("rowed", "r @U d");
result.add("rowe's", "r @U z");
result.add("rown-\ttree", "r @U n\tt r i:");
result.add("rows", "r @U z");
result.add("row's", "r @U z");
result.add("rox", "r Q k s");
result.add("rox-\tbu-\try", "r Q k\ts b e@\ti:");
result.add("roy", "r OI");
result.add("roy-\tce's", "r OI\ts V z");
result.add("roy-\tden", "r OI\td V n");
result.add("royce", "r OI s");
result.add("royd", "r OI d");
result.add("roye", "r OI");
result.add("roy's", "r OI z");
result.add("roys-\tter", "r OI s\tt @r");
result.add("roys-\tton", "r OI s\tt V n");
result.add("roz", "r Q z");
result.add("r's", "Q@ z");
result.add("ru", "r u:");
result.add("ru-\ta", "r u:\tV");
result.add("ru-\tbel", "r u:\tb V l");
result.add("ru-\tbel-\tla", "r u:\tb e\tl V");
result.add("ru-\tben", "r u:\tb V n");
result.add("ru-\tben-\tstein", "r u:\tb V n\ts t aI n");
result.add("ru-\tbens", "r u:\tb V n z");
result.add("ru-\tbi", "r u:\tb i:");
result.add("ru-\tbi-\ta", "r u:\tb i:\tV");
result.add("ru-\tbi-\tcon", "r u:\tb I\tk O: n");
result.add("ru-\tbi-\tna", "r u:\tb i:\tn V");
result.add("ru-\tbi-\to", "r u:\tb i:\t@U");
result.add("ru-\tbie", "r u:\tb i:");
result.add("ru-\tbies", "r u:\tb i: z");
result.add("ru-\tbik", "r u:\tb I k");
result.add("ru-\tbik's", "r u:\tb I k s");
result.add("ru-\tbin", "r u:\tb I n");
result.add("ru-\tbin-\tstein", "r u:\tb I n\ts t i: n");
result.add("ru-\tbin's", "r u:\tb I n z");
result.add("ru-\tble", "r u:\tb V l");
result.add("ru-\tbles", "r u:\tb V l z");
result.add("ru-\tble's", "r u:\tb V l z");
result.add("ru-\tbout", "r V\tb aU t");
result.add("ru-\tby", "r u:\tb i:");
result.add("ru-\tby's", "r u:\tb i: z");
result.add("ru-\tder", "r u:\td @r");
result.add("ru-\tder's", "r u:\td @r z");
result.add("ru-\tdest", "r u:\td V s t");
result.add("ru-\tdi-\tger", "r V\td I\tg @r");
result.add("ru-\tdi-\tmen-\tta-\try", "r u:\td I\tm e n\tt @r\ti:");
result.add("ru-\tdi-\tment", "r u:\td I\tm e n t");
result.add("ru-\tdi-\tments", "r u:\td I\tm e n t s");
result.add("ru-\tdich", "r V\td I k");
result.add("ru-\tdie", "r u:\td i:");
result.add("ru-\tdin", "r u:\td I n");
result.add("ru-\tdolf", "r u:\td Q l f");
result.add("ru-\tdolph", "r u:\td O: l f");
result.add("ru-\tdy", "r u:\td i:");
result.add("ru-\tdy's", "r u:\td i: z");
result.add("ru-\tel-\tla", "r u:\te\tl V");
result.add("ru-\telle", "r u:\te l");
result.add("ru-\tfi-\tna", "r u:\tf i:\tn V");
result.add("ru-\tford", "r u:\tf @r d");
result.add("ru-\tfus", "r u:\tf V s");
result.add("ru-\tgen", "r V\tg V n");
result.add("ru-\ti-\tning", "r u:\tI\tn I N");
result.add("ru-\ti-\tnous", "r u:\tI\tn V s");
result.add("ru-\tin", "r u:\tI n");
result.add("ru-\tined", "r u:\tI n d");
result.add("ru-\tins", "r u:\tI n z");
result.add("ru-\tiz", "r u:\tw i: z");
result.add("ru-\tkey-\tser", "r u:\tk eI\tz @r");
result.add("ru-\tler", "r u:\tl @r");
result.add("ru-\tlers", "r u:\tl @r z");
result.add("ru-\tling", "r u:\tl I N");
result.add("ru-\tlings", "r u:\tl I N z");
result.add("ru-\tling's", "r u:\tl I N z");
result.add("ru-\tma-\tni-\ta", "r u:\tm eI\tn i:\tV");
result.add("ru-\tma-\tni-\tan", "r u:\tm eI\tn i:\tV n");
result.add("ru-\tmage", "r V\tm I dZ");
result.add("ru-\tman", "r u:\tm V n");
result.add("ru-\tme-\try", "r V\tm @r\ti:");
result.add("ru-\tmen", "r u:\tm V n");
result.add("ru-\tmi-\tna", "r u:\tm I\tn V");
result.add("ru-\tmi-\tna-\tted", "r u:\tm I\tn eI\tt I d");
result.add("ru-\tmi-\tna-\ttion", "r u:\tm I\tn eI\tS V n");
result.add("ru-\tmi-\tna-\ttions", "r u:\tm I\tn eI\tS V n z");
result.add("ru-\tmi-\tnant", "r u:\tm I\tn V n t");
result.add("ru-\tmi-\tnate", "r u:\tm I\tn eI t");
result.add("ru-\tmor", "r u:\tm @r");
result.add("ru-\tmored", "r u:\tm @r d");
result.add("ru-\tmors", "r u:\tm @r z");
result.add("ru-\tmour", "r u:\tm @r");
result.add("ru-\tmours", "r u:\tm @r z");
result.add("ru-\tna-\tbout", "r V\tn V\tb aU t");
result.add("ru-\tna-\tround", "r V\tn V\tr aU n d");
result.add("ru-\tna-\tway", "r V\tn V\tw eI");
result.add("ru-\tna-\tways", "r V\tn V\tw eI z");
result.add("ru-\tnion", "r u: n\tj V n");
result.add("ru-\tnny", "r V\tn i:");
result.add("ru-\tnup", "r V\tn V p");
result.add("ru-\tnups", "r V\tn V p s");
result.add("ru-\tpee", "r u:\tp i:");
result.add("ru-\tpees", "r u:\tp i: z");
result.add("ru-\tper-\tta", "r u:\tp e@\tt V");
result.add("ru-\tpert", "r u:\tp @r t");
result.add("ru-\tpi-\tah", "r u:\tp aI\tV");
result.add("ru-\tral", "r U@\tV l");
result.add("ru-\tri-\tta-\tni-\ta", "r U@\tI\tt eI\tn i:\tV");
result.add("ru-\trik", "r U@\tI k");
result.add("ru-\tsal-\tka", "r u:\ts { l\tk V");
result.add("ru-\tses", "r u:\tz V z");
result.add("ru-\tsher", "r V\tS @r");
result.add("ru-\tshes", "r V\tS V z");
result.add("ru-\tshing", "r V\tS I N");
result.add("ru-\tsh's", "r V\tS V z");
result.add("ru-\tsin", "r u:\ts I n");
result.add("ru-\tstle", "r V\ts V l");
result.add("ru-\tta", "r u:\tt V");
result.add("ru-\ttan", "r u:\tt V n");
result.add("ru-\tthann", "r u:\tT { n");
result.add("ru-\tther", "r u:\tT @r");
result.add("ru-\tther-\tford", "r V\tT @r\tf @r d");
result.add("ru-\tthie", "r u:\tT i:");
result.add("ru-\ttile", "r u:\tt i: l");
result.add("ru-\tvo-\tlo", "r u:\tv @U\tl @U");
result.add("ru-\tzich", "r V\tz I h");
result.add("rub", "r V b");
result.add("rub-\tbe-\trize", "r V\tb @r\taI z");
result.add("rub-\tbe-\trized", "r V\tb @r\taI z d");
result.add("rub-\tbe-\try", "r V\tb @r\ti:");
result.add("rub-\tber", "r V\tb @r");
result.add("rub-\tber-\tmaid", "r V\tb @r\tm eI d");
result.add("rub-\tber-\tmaid's", "r V\tb @r\tm eI d z");
result.add("rub-\tbers", "r V\tb @r z");
result.add("rub-\tbing", "r V\tb I N");
result.add("rub-\tbish", "r V\tb I S");
result.add("rub-\tble", "r V\tb V l");
result.add("rub-\tric", "r u: b\tr I k");
result.add("rubbed", "r V b d");
result.add("rube", "r u: b");
result.add("rubs", "r V b z");
result.add("ruc-\tker", "r V\tk @r");
result.add("ruc-\tkle", "r V\tk V l");
result.add("ruc-\tkus", "r V\tk V s");
result.add("ruck", "r V k");
result.add("ruck-\tman", "r V k\tm V n");
result.add("rucks", "r V k s");
result.add("rud", "r V d");
result.add("rud-\tder", "r V\td @r");
result.add("rud-\tder-\tless", "r V\td @r\tl V s");
result.add("rud-\tdle", "r V\td V l");
result.add("rud-\tdock", "r V\td V k");
result.add("rud-\tdy", "r V\td i:");
result.add("rud-\tloff", "r V d\tl O: f");
result.add("rud-\tman", "r V d\tm V n");
result.add("rud-\tman's", "r V d\tm V n z");
result.add("rud-\tyard", "r V d\tj @r d");
result.add("rudd", "r V d");
result.add("rude", "r u: d");
result.add("rude-\tly", "r u: d\tl i:");
result.add("rude-\tness", "r u: d\tn V s");
result.add("rudge", "r V dZ");
result.add("rue", "r u:");
result.add("rue-\tful", "r u:\tf V l");
result.add("rue-\tful-\tly", "r u:\tf V\tl i:");
result.add("rue-\tter", "r u:\tt @r");
result.add("ruel", "r u: l");
result.add("ruf-\tf-\tling", "r V\tf V\tl I N");
result.add("ruf-\tfer", "r V\tf @r");
result.add("ruf-\tfin", "r V\tf I n");
result.add("ruf-\tfing", "r V\tf I N");
result.add("ruf-\tfle", "r V\tf V l");
result.add("ruf-\tfled", "r V\tf V l d");
result.add("ruf-\tfles", "r V\tf V l z");
result.add("ruf-\tfo", "r V\tf @U");
result.add("ruf-\tford", "r V\tf @r d");
result.add("rufe", "r u: f");
result.add("ruff", "r V f");
result.add("rug", "r V g");
result.add("rug-\tby", "r V g\tb i:");
result.add("rug-\tged", "r V\tg V d");
result.add("rug-\tged-\tly", "r V\tg V d\tl i:");
result.add("rug-\tgie-\tro", "r u:\tdZ I@\t@U");
result.add("rugg", "r V g");
result.add("rugs", "r V g z");
result.add("ruh", "r V");
result.add("ruhl", "r V l");
result.add("ruhnke", "r V N k");
result.add("ruhr", "r U@");
result.add("rule", "r u: l");
result.add("rule-\tbook", "r u: l\tb U k");
result.add("ruled", "r u: l d");
result.add("rules", "r u: l z");
result.add("rule's", "r u: l z");
result.add("rum", "r V m");
result.add("rum-\tb-\tling", "r V m\tb V\tl I N");
result.add("rum-\tb-\tlings", "r V m\tb V\tl I N z");
result.add("rum-\tble", "r V m\tb V l");
result.add("rum-\tbled", "r V m\tb V l d");
result.add("rum-\tbles", "r V m\tb V l z");
result.add("rum-\tford", "r V m\tf @r d");
result.add("rum-\tma-\tging", "r V\tm I\tdZ I N");
result.add("rum-\tmage", "r V\tm I dZ");
result.add("rum-\tmel", "r V\tm V l");
result.add("rum-\tmy", "r V\tm i:");
result.add("rum-\tney", "r V m\tn i:");
result.add("rum-\tple", "r V m\tp V l");
result.add("rum-\tpled", "r V m\tp V l d");
result.add("rum-\tsey", "r V m\tz i:");
result.add("rum-\tson", "r V m\ts V n");
result.add("rump", "r V m p");
result.add("rumpf", "r V m p f");
result.add("rums", "r V m z");
result.add("rums-\tfeld", "r V m\tz f e l d");
result.add("run", "r V n");
result.add("run-\ta-\tround", "r V\tn V\tr aU n d");
result.add("run-\tcie", "r V n\ts i:");
result.add("run-\tdle", "r V n\td V l");
result.add("run-\tdown", "r V n\td aU n");
result.add("run-\tkel", "r V N\tk V l");
result.add("run-\tkle", "r V N\tk V l");
result.add("run-\tkles", "r V N\tk V l z");
result.add("run-\tnells", "r V\tn V l z");
result.add("run-\tnels", "r V\tn V l z");
result.add("run-\tner", "r V\tn @r");
result.add("run-\tners", "r V\tn @r z");
result.add("run-\tner's", "r V\tn @r z");
result.add("run-\tning", "r V\tn I N");
result.add("run-\tnings", "r V\tn I N z");
result.add("run-\tnion", "r V n\tj V n");
result.add("run-\toff", "r V\tn O: f");
result.add("run-\ton", "r V\tn Q n");
result.add("run-\tup", "r V\tn V p");
result.add("run-\tway", "r V n\tw eI");
result.add("run-\tways", "r V n\tw eI z");
result.add("run-\tyon", "r V n\tj V n");
result.add("runck", "r V N k");
result.add("rund", "r V n d");
result.add("rung", "r V N");
result.add("runge", "r V n dZ");
result.add("rungs", "r V N z");
result.add("runs", "r V n z");
result.add("rup-\tpert", "r V\tp @r t");
result.add("rup-\trecht", "r V p\tr I k t");
result.add("rup-\ttu-\tring", "r V p\ttS @r\tI N");
result.add("rup-\tture", "r V p\ttS @r");
result.add("rup-\ttured", "r V p\ttS @r d");
result.add("rup-\ttures", "r V p\ttS @r z");
result.add("rus", "r V s");
result.add("rus-\tkin", "r V s\tk I n");
result.add("rus-\tsel", "r V\ts V l");
result.add("rus-\tsell", "r V\ts V l");
result.add("rus-\tsell-\tville", "r V\ts V l\tv I l");
result.add("rus-\tsell's", "r V\ts V l z");
result.add("rus-\tsel's", "r V\ts V l z");
result.add("rus-\tset", "r V\ts V t");
result.add("rus-\tsets", "r V\ts V t s");
result.add("rus-\tsi", "r u:\ts i:");
result.add("rus-\tsi-\tfi-\tca-\ttion", "r V\ts I\tf I\tk eI\tS V n");
result.add("rus-\tsi-\tfied", "r u:\ts I\tf aI d");
result.add("rus-\tsi-\tfy", "r u:\ts I\tf aI");
result.add("rus-\tsia", "r V\tS V");
result.add("rus-\tsian", "r V\tS V n");
result.add("rus-\tsians", "r V\tS V n z");
result.add("rus-\tsian's", "r V\tS V n z");
result.add("rus-\tsia's", "r V\tS V z");
result.add("rus-\tso", "r u:\ts @U");
result.add("rus-\tsom", "r V\ts V m");
result.add("rus-\tted", "r V s\tt V d");
result.add("rus-\ttic", "r V s\tt I k");
result.add("rus-\ttin", "r V s\tt I n");
result.add("rus-\tting", "r V s\tt I N");
result.add("rus-\tton", "r V s\tt V n");
result.add("rus-\tty", "r V s\tt i:");
result.add("ruse", "r u: z");
result.add("rush", "r V S");
result.add("rush-\tdie", "r V S\td i:");
result.add("rush-\tdie's", "r V S\td i: z");
result.add("rush-\tford", "r V S\tf @r d");
result.add("rush-\tmore", "r V S\tm O@");
result.add("rushed", "r V S t");
result.add("rusk", "r V s k");
result.add("rusk's", "r V s k s");
result.add("russ", "r V s");
result.add("russe", "r V s");
result.add("rust", "r V s t");
result.add("rust-\tler", "r V s\tl @r");
result.add("rust-\tlers", "r V s\tl @r z");
result.add("rust-\tling", "r V s\tl I N");
result.add("rust-\tproo-\tfing", "r V s\tt p r u:\tf I N");
result.add("rust-\tproof", "r V s\tt p r u: f");
result.add("rusts", "r V s t s");
result.add("rust's", "r V s t s");
result.add("rut", "r V t");
result.add("rut-\tgers", "r V t\tg @r z");
result.add("rut-\tger's", "r V t\tg @r z");
result.add("rut-\tland", "r V t\tl V n d");
result.add("rut-\tledge", "r V t\tl I dZ");
result.add("rut-\tted", "r V\tt V d");
result.add("rut-\tter", "r V\tt @r");
result.add("ruth", "r u: T");
result.add("ruth-\tless", "r u: T\tl V s");
result.add("ruth-\tless-\tly", "r u: T\tl V s\tl i:");
result.add("ruth-\tless-\tness", "r u: T\tl V s\tn V s");
result.add("ruth-\tven", "r V T\tv V n");
result.add("ruth's", "r u: T s");
result.add("ruts", "r V t s");
result.add("rux", "r V k s");
result.add("ruyle", "r aI l");
result.add("ry-\tal", "r i:\tQ l");
result.add("ry-\tals", "r i:\tQ l z");
result.add("ry-\tan", "r aI\tV n");
result.add("ry-\tan's", "r aI\tV n z");
result.add("ry-\tder", "r aI\td @r");
result.add("ry-\tder's", "r aI\td @r z");
result.add("ry-\ten", "r aI\tV n");
result.add("ry-\tland", "r I\tl V n d");
result.add("ry-\tley", "r aI\tl i:");
result.add("ry-\ton", "r aI\tV n");
result.add("ryd-\tberg", "r I d\tb @r g");
result.add("rye", "r aI");
result.add("ryle", "r aI l");
result.add("s", "e s");
result.add("s-\td-\tn", "e s\td i:\te n");
result.add("s-\tedu-\tcing", "s V\td u:\ts I N");
result.add("s-\th", "e\ts eI tS");
result.add("s-\tr", "s i: n\tj @r");
result.add("s'-\ts", "e\ts V z");
result.add("s-\tu-\tu", "e s\tj u:\tj u:");
result.add("s.", "e s");
result.add("sa", "s Q");
result.add("sa-\tba", "s Q\tb V");
result.add("sa-\tba-\tti-\tni", "s {\tb V\tt i:\tn i:");
result.add("sa-\tbah", "s Q\tb V");
result.add("sa-\tban", "s eI\tb V n");
result.add("sa-\tbel-\tla", "s V\tb e\tl V");
result.add("sa-\tber", "s eI\tb @r");
result.add("sa-\tbers", "s eI\tb @r z");
result.add("sa-\tbi-\ta", "s Q\tb i:\tV");
result.add("sa-\tbi-\tna", "s V\tb i:\tn V");
result.add("sa-\tbi-\tno", "s Q\tb i:\tn @U");
result.add("sa-\tbin", "s eI\tb I n");
result.add("sa-\tbine", "s V\tb i: n");
result.add("sa-\tbins", "s eI\tb I n z");
result.add("sa-\tble", "s eI\tb V l");
result.add("sa-\tbles", "s eI\tb V l z");
result.add("sa-\tbo-\tta-\tging", "s {\tb V\tt Q\tZ I N");
result.add("sa-\tbo-\ttage", "s {\tb V\tt Q Z");
result.add("sa-\tbo-\ttaged", "s {\tb V\tt Q Z d");
result.add("sa-\tbo-\tteur", "s {\tb V\tt @r");
result.add("sa-\tbo-\tteurs", "s {\tb V\tt @r z");
result.add("sa-\tbol", "s Q\tb O: l");
result.add("sa-\tbre", "s eI\tb @r");
result.add("sa-\tbres", "s eI\tb @r z");
result.add("sa-\tcha", "s {\ttS V");
result.add("sa-\tcher", "s {\tk @r");
result.add("sa-\tchi", "s {\ttS i:");
result.add("sa-\tco", "s eI\tk @U");
result.add("sa-\tda", "s Q\td V");
result.add("sa-\tdat", "s Q\td Q t");
result.add("sa-\tdat's", "s Q\td Q t s");
result.add("sa-\tdel-\tla", "s V\td e\tl V");
result.add("sa-\tdi-\tra", "s Q\td I@\tV");
result.add("sa-\tdi-\tsm", "s eI\td I\tz V m");
result.add("sa-\tdie", "s {\td i:");
result.add("sa-\tdie's", "s eI\td i: z");
result.add("sa-\tdis-\ttic", "s V\td I s\tt I k");
result.add("sa-\tdist", "s eI\td I s t");
result.add("sa-\tdo", "s eI\td @U");
result.add("sa-\tdoff", "s {\td O: f");
result.add("sa-\tdow-\tski", "s V\td O: f\ts k i:");
result.add("sa-\tdye", "s {\td aI");
result.add("sa-\teed", "s Q\ti: d");
result.add("sa-\tfa-\tri", "s V\tf Q@\ti:");
result.add("sa-\tfa-\tris", "s V\tf Q@\ti: z");
result.add("sa-\tfer", "s eI\tf @r");
result.add("sa-\tfest", "s eI\tf V s t");
result.add("sa-\tfier", "s V\tf I@");
result.add("sa-\tfing", "s eI\tf I N");
result.add("sa-\tfir", "s {\tf @r");
result.add("sa-\tfire", "s V\tf aI r");
result.add("sa-\tfire's", "s V\tf aI r z");
result.add("sa-\tga", "s Q\tg V");
result.add("sa-\tgan", "s eI\tg V n");
result.add("sa-\tgas", "s Q\tg V z");
result.add("sa-\tger", "s eI\tg @r");
result.add("sa-\tges", "s eI\tdZ V z");
result.add("sa-\tge's", "s eI\tdZ V z");
result.add("sa-\tgi-\tnaw", "s {\tg I\tn O:");
result.add("sa-\tgo", "s eI\tg @U");
result.add("sa-\tgua-\tro", "s V g\tw O@\t@U");
result.add("sa-\tha-\tra", "s V\th e@\tV");
result.add("sa-\tha-\tran", "s {\th @r\tV n");
result.add("sa-\tka-\ti", "s Q\tk Q\ti:");
result.add("sa-\tker", "s eI\tk @r");
result.add("sa-\tki", "s Q\tk i:");
result.add("sa-\tko", "s Q\tk @U");
result.add("sa-\tla", "s Q\tl V");
result.add("sa-\tla-\tble", "s eI\tl V\tb V l");
result.add("sa-\tla-\tcious", "s V\tl eI\tS V s");
result.add("sa-\tla-\tda", "s V\tl Q\td V");
result.add("sa-\tla-\tdin", "s {\tl V\td V n");
result.add("sa-\tla-\tman-\tca", "s {\tl V\tm { N\tk V");
result.add("sa-\tla-\tman-\tder", "s {\tl V\tm { n\td @r");
result.add("sa-\tla-\tman-\tders", "s {\tl V\tm { n\td @r z");
result.add("sa-\tla-\tmi", "s V\tl Q\tm i:");
result.add("sa-\tla-\tmis", "s V\tl Q\tm i: z");
result.add("sa-\tla-\tmon", "s {\tl V\tm V n");
result.add("sa-\tla-\tmone", "s {\tl V\tm @U n");
result.add("sa-\tla-\tried", "s {\tl @r\ti: d");
result.add("sa-\tla-\tries", "s {\tl @r\ti: z");
result.add("sa-\tla-\try", "s {\tl @r\ti:");
result.add("sa-\tla-\try-\tmen", "s {\tl @r\ti:\tm V n");
result.add("sa-\tla-\tzar", "s {\tl V\tz Q@");
result.add("sa-\tlaam", "s V\tl Q m");
result.add("sa-\tlad", "s {\tl V d");
result.add("sa-\tlads", "s {\tl V d z");
result.add("sa-\tlas", "s Q\tl Q z");
result.add("sa-\tlay", "s {\tl eI");
result.add("sa-\tle-\tma", "s V\tl i:\tm V");
result.add("sa-\tlea-\tble", "s eI\tl V\tb V l");
result.add("sa-\tleem", "s {\tl i: m");
result.add("sa-\tlem", "s eI\tl V m");
result.add("sa-\tlem's", "s eI\tl V m z");
result.add("sa-\tler-\tno", "s V\tl e@\tn @U");
result.add("sa-\tli-\tent", "s eI\tl i:\tV n t");
result.add("sa-\tli-\tna", "s V\tl i:\tn V");
result.add("sa-\tli-\tnas", "s V\tl i:\tn V s");
result.add("sa-\tli-\tni-\tty", "s V\tl I\tn V\tt i:");
result.add("sa-\tli-\tva", "s V\tl aI\tv V");
result.add("sa-\tli-\tva-\tted", "s {\tl I\tv eI\tt I d");
result.add("sa-\tli-\tva-\tting", "s {\tl I\tv eI\tt I N");
result.add("sa-\tli-\tvate", "s {\tl I\tv eI t");
result.add("sa-\tlim", "s {\tl I m");
result.add("sa-\tlin-\tger", "s {\tl I\tN @r");
result.add("sa-\tlin-\tger's", "s {\tl I\tN @r z");
result.add("sa-\tline", "s V\tl i: n");
result.add("sa-\tlis", "s Q\tl I s");
result.add("sa-\tlo-\tma", "s Q\tl @U\tm V");
result.add("sa-\tlo-\tme", "s V\tl @U\tm i:");
result.add("sa-\tlo-\tmi", "s Q\tl @U\tm i:");
result.add("sa-\tlo-\tmo-\tne", "s Q\tl @U\tm @U\tn i:");
result.add("sa-\tlo-\tmon", "s {\tl V\tm V n");
result.add("sa-\tlo-\tmon's", "s {\tl V\tm V n z");
result.add("sa-\tlon", "s V\tl Q n");
result.add("sa-\tlons", "s V\tl Q n z");
result.add("sa-\tloon", "s V\tl u: n");
result.add("sa-\tloons", "s V\tl u: n z");
result.add("sa-\tlu-\tta-\try", "s { l\tj V\tt e@\ti:");
result.add("sa-\tlu-\tta-\tto-\tri-\tan", "s V\tl u:\tt V\tt O@\ti:\tV n");
result.add("sa-\tlu-\tted", "s V\tl u:\tt V d");
result.add("sa-\tlu-\tting", "s V\tl u:\tt I N");
result.add("sa-\tlus", "s {\tl V s");
result.add("sa-\tlute", "s V\tl u: t");
result.add("sa-\tlutes", "s V\tl u: t s");
result.add("sa-\tly-\ter", "s Q\tl i:\t@r");
result.add("sa-\tma", "s Q\tm V");
result.add("sa-\tma-\tra", "s {\tm @r\tV");
result.add("sa-\tma-\tras", "s {\tm @r\tV z");
result.add("sa-\tma-\tri-\ta", "s eI\tm @r\ti:\tV");
result.add("sa-\tma-\tri-\ttan", "s V\tm e@\tV\tt V n");
result.add("sa-\tma-\tri-\ttans", "s V\tm e@\tV\tt V n z");
result.add("sa-\tman-\ttha", "s V\tm { n\tT V");
result.add("sa-\tmar", "s {\tm Q@");
result.add("sa-\tmar-\tkand", "s {\tm Q@\tk { n d");
result.add("sa-\tmek", "s {\tm I k");
result.add("sa-\tmel-\tla", "s V\tm e\tl V");
result.add("sa-\tmi", "s {\tm i:");
result.add("sa-\tmi's", "s {\tm i: z");
result.add("sa-\tmo-\ta", "s V\tm @U\tV");
result.add("sa-\tmo-\tan", "s V\tm @U\tV n");
result.add("sa-\tmos", "s eI\tm Q s");
result.add("sa-\tmu-\te-\tla", "s { m\tj u:\te\tl V");
result.add("sa-\tmu-\tel-\tson", "s { m\tj u:\tV l\ts V n");
result.add("sa-\tmu-\tels", "s { m\tj u:\tV l z");
result.add("sa-\tmu-\trai", "s {\tm @r\taI");
result.add("sa-\tmu-\trais", "s {\tm @r\taI z");
result.add("sa-\tmu-\trai's", "s {\tm @r\taI z");
result.add("sa-\tmuel", "s { m\tj u: l");
result.add("sa-\tmuel's", "s { m\tj u: l z");
result.add("sa-\tna", "s Q\tn V");
result.add("sa-\tnaa", "s V\tn Q");
result.add("sa-\tner", "s eI\tn @r");
result.add("sa-\tni-\tta-\try", "s {\tn I\tt e@\ti:");
result.add("sa-\tni-\tta-\ttion", "s {\tn I\tt eI\tS V n");
result.add("sa-\tni-\tti-\tzing", "s {\tn I\tt aI\tz I N");
result.add("sa-\tni-\ttize", "s {\tn I\tt aI z");
result.add("sa-\tni-\ttized", "s {\tn I\tt aI z d");
result.add("sa-\tni-\tty", "s {\tn I\tt i:");
result.add("sa-\tone", "s eI\t@U n");
result.add("sa-\tpi-\tens", "s eI\tp i:\tV n z");
result.add("sa-\tpien-\tza", "s Q\tp i: n\tz V");
result.add("sa-\tpo-\tni-\tfi-\tca-\ttion", "s V\tp Q\tn V\tf V\tk eI\tS V n");
result.add("sa-\tra", "s e@\tV");
result.add("sa-\tra-\tcens", "s e@\tV\ts V n z");
result.add("sa-\tra-\tje-\tvo", "s Q@\tV\tj eI\tv @U");
result.add("sa-\tra-\tje-\tvo's", "s Q@\tV\tj eI\tv @U z");
result.add("sa-\tra-\tso-\tta", "s e@\tV\ts @U\tt V");
result.add("sa-\tra-\tto-\tga", "s e@\tV\tt @U\tg V");
result.add("sa-\tra-\ttov", "s e@\tV\tt O: v");
result.add("sa-\tra-\twak", "s e@\tV\tw Q k");
result.add("sa-\tra-\tzen", "s e@\tV\tz V n");
result.add("sa-\trah", "s e@\tV");
result.add("sa-\trah's", "s e@\tV z");
result.add("sa-\tran", "s @r\t{ n");
result.add("sa-\tra's", "s e@\tV z");
result.add("sa-\trene", "s @r\ti: n");
result.add("sa-\trette", "s @r\te t");
result.add("sa-\tri", "s Q@\ti:");
result.add("sa-\tri-\tne", "s Q@\ti:\tn i:");
result.add("sa-\trin", "s Q@\tI n");
result.add("sa-\tris", "s Q@\ti: z");
result.add("sa-\tri's", "s Q@\ti: z");
result.add("sa-\trong", "s @r\tO: N");
result.add("sa-\trongs", "s @r\tO: N z");
result.add("sa-\tros", "s Q@\t@U s");
result.add("sa-\trum", "s {\tr V m");
result.add("sa-\tsha", "s {\tS V");
result.add("sa-\tshes", "s {\tS V z");
result.add("sa-\tta-\tni-\tsm", "s eI\tt V\tn I\tz V m");
result.add("sa-\tta-\tnic", "s V\tt {\tn I k");
result.add("sa-\tta-\tnist", "s eI\tt V\tn I s t");
result.add("sa-\ttan", "s eI\tt V n");
result.add("sa-\tted", "s eI\tt V d");
result.add("sa-\ttel-\tlite", "s {\tt V\tl aI t");
result.add("sa-\ttel-\tlites", "s {\tt V\tl aI t s");
result.add("sa-\ttel-\tlite's", "s {\tt V\tl aI t s");
result.add("sa-\tti-\tre", "s {\tt aI\t@r");
result.add("sa-\tti-\tres", "s {\tt aI\t@r z");
result.add("sa-\tti-\tri-\tcal", "s V\tt I@\tI\tk V l");
result.add("sa-\tti-\tri-\tzes", "s {\tt @r\taI\tz V z");
result.add("sa-\tti-\tri-\tzing", "s {\tt @r\taI\tz I N");
result.add("sa-\tti-\tric", "s V\tt I@\tI k");
result.add("sa-\tti-\trist", "s {\tt @r\tI s t");
result.add("sa-\tti-\trists", "s {\tt @r\tI s t s");
result.add("sa-\tti-\trize", "s {\tt @r\taI z");
result.add("sa-\ttin", "s {\tt I n");
result.add("sa-\ttis-\tfac-\ttion", "s {\tt I s\tf { k\tS V n");
result.add("sa-\ttis-\tfac-\ttions", "s {\tt I s\tf { k\tS V n z");
result.add("sa-\ttis-\tfac-\tto-\try", "s {\tt I s\tf { k\tt @r\ti:");
result.add("sa-\ttis-\tfacto-\tri-\tly", "s {\tt I s\tf { k\tt r V\tl i:");
result.add("sa-\ttis-\tfied", "s {\tt I s\tf aI d");
result.add("sa-\ttis-\tfies", "s {\tt I s\tf aI z");
result.add("sa-\ttis-\tfy", "s {\tt I s\tf aI");
result.add("sa-\ttis-\tfy-\ting", "s {\tt I s\tf aI\tI N");
result.add("sa-\tto", "s Q\tt @U");
result.add("sa-\ttu-\tra-\tted", "s {\ttS @r\teI\tt V d");
result.add("sa-\ttu-\tra-\tting", "s {\ttS @r\teI\tt I N");
result.add("sa-\ttu-\tra-\ttion", "s {\ttS @r\teI\tS V n");
result.add("sa-\ttu-\trate", "s {\ttS @r\teI t");
result.add("sa-\ttur-\tday", "s {\tt @r\td i:");
result.add("sa-\ttur-\tdays", "s {\tt @r\td i: z");
result.add("sa-\ttur-\tday's", "s {\tt @r\td i: z");
result.add("sa-\tturn", "s {\tt @r n");
result.add("sa-\tturn's", "s {\tt @r n z");
result.add("sa-\tva", "s Q\tv V");
result.add("sa-\tva-\tge-\try", "s {\tv I\tdZ e@\ti:");
result.add("sa-\tva-\tges", "s {\tv V\tdZ V z");
result.add("sa-\tva-\tging", "s {\tv I\tdZ I N");
result.add("sa-\tvage", "s {\tv I dZ");
result.add("sa-\tvage-\tly", "s {\tv I dZ\tl i:");
result.add("sa-\tvaged", "s {\tv I dZ d");
result.add("sa-\tvan-\tna", "s V\tv {\tn V");
result.add("sa-\tvan-\tnah", "s V\tv {\tn V");
result.add("sa-\tvan-\tnas", "s V\tv {\tn V z");
result.add("sa-\tvant", "s V\tv Q n t");
result.add("sa-\tvants", "s {\tv V n t s");
result.add("sa-\tvas", "s Q\tv Q z");
result.add("sa-\tve-\try", "s eI\tv @r\ti:");
result.add("sa-\tvell", "s Q\tv eI l");
result.add("sa-\tver", "s eI\tv @r");
result.add("sa-\tvers", "s eI\tv @r z");
result.add("sa-\tvi-\tna", "s V\tv i:\tn V");
result.add("sa-\tvill", "s Q\tv i: l");
result.add("sa-\tville", "s Q\tv I l");
result.add("sa-\tvin", "s {\tv I n");
result.add("sa-\tving", "s eI\tv I N");
result.add("sa-\tvings", "s eI\tv I N z");
result.add("sa-\tvin's", "s {\tv I n z");
result.add("sa-\tvior", "s eI v\tj @r");
result.add("sa-\tviors", "s eI v\tj @r z");
result.add("sa-\tvior's", "s eI v\tj @r z");
result.add("sa-\tvitt", "s V\tv I t");
result.add("sa-\tvo-\tna", "s Q\tv @U\tn V");
result.add("sa-\tvo-\tring", "s eI\tv @r\tI N");
result.add("sa-\tvo-\try", "s eI\tv @r\ti:");
result.add("sa-\tvoie", "s Q v\tw Q");
result.add("sa-\tvor", "s eI\tv @r");
result.add("sa-\tvored", "s eI\tv @r d");
result.add("sa-\tvors", "s eI\tv @r z");
result.add("sa-\tvoy", "s V\tv OI");
result.add("sa-\twing", "s O:\tI N");
result.add("sa-\txe-\tna", "s { k\ts V\tn V");
result.add("sa-\txo-\tny", "s { k\ts V\tn i:");
result.add("sa-\txo-\tpho-\tnist", "s { k\ts V\tf @U\tn I s t");
result.add("sa-\txo-\tphone", "s { k\ts V\tf @U n");
result.add("sa-\txo-\tphones", "s { k\ts V\tf @U n z");
result.add("sa-\txon", "s { k\ts V n");
result.add("sa-\txons", "s { k\ts V n z");
result.add("sa-\txon's", "s { k\ts V n z");
result.add("sa-\tyed", "s Q\tj e d");
result.add("sa-\tyer", "s eI\t@r");
result.add("sa-\tyers", "s eI\t@r z");
result.add("sa-\tying", "s eI\tI N");
result.add("sa-\tyings", "s eI\tI N z");
result.add("saa-\tri-\tnen", "s Q@\tI\tn e n");
result.add("saab", "s Q b");
result.add("saab's", "s Q b z");
result.add("saad", "s Q d");
result.add("saam", "s Q m");
result.add("saar", "s Q@");
result.add("saat-\tchi", "s Q\ttS i:");
result.add("sab-\tba-\tti-\tcal", "s V\tb {\tt I\tk V l");
result.add("sab-\tbath", "s {\tb V T");
result.add("sab-\tra", "s Q b\tr V");
result.add("sab-\tri-\tna", "s V b\tr i:\tn V");
result.add("sab's", "s { b z");
result.add("sac", "s { k");
result.add("sac-\tcha-\trin", "s {\tk @r\tI n");
result.add("sac-\tcha-\trine", "s {\tk @r\taI n");
result.add("sac-\tco", "s {\tk @U");
result.add("sac-\tco's", "s {\tk @U z");
result.add("sac-\tcule", "s { k\tj u: l");
result.add("sac-\tking", "s {\tk I N");
result.add("sac-\tra", "s { k\tr V");
result.add("sac-\tra-\tmen-\tto", "s { k\tr V\tm e n\tt @U");
result.add("sac-\tra-\tmen-\tto's", "s { k\tr V\tm e n\tt @U z");
result.add("sac-\tra-\tment", "s { k\tr V\tm V n t");
result.add("sac-\tra-\tments", "s { k\tr V\tm V n t s");
result.add("sac-\tred", "s eI k\tr V d");
result.add("sac-\tred-\tness", "s eI k\tr V d\tn V s");
result.add("sac-\tri-\tfi-\tces", "s { k\tr I\tf aI\ts V z");
result.add("sac-\tri-\tfi-\tcial", "s { k\tr I\tf I\tS V l");
result.add("sac-\tri-\tfi-\tcing", "s { k\tr I\tf aI\ts I N");
result.add("sac-\tri-\tfice", "s { k\tr I\tf aI s");
result.add("sac-\tri-\tficed", "s { k\tr I\tf aI s t");
result.add("sac-\tri-\tle-\tgious", "s { k\tr I\tl e\tdZ V s");
result.add("sac-\tri-\tlege", "s { k\tr I\tl I dZ");
result.add("sac-\tro-\tsanct", "s { k\tr @U\ts { N k t");
result.add("sach-\ts's", "s { k\ts V z");
result.add("sachs", "s { k s");
result.add("sack", "s { k");
result.add("sack-\tman", "s { k\tm V n");
result.add("sack-\tville", "s { k\tv I l");
result.add("sacked", "s { k t");
result.add("sacks", "s { k s");
result.add("sacs", "s { k s");
result.add("sad", "s { d");
result.add("sad-\td-\tler", "s {\td V\tl @r");
result.add("sad-\td-\tling", "s {\td V\tl I N");
result.add("sad-\tdam", "s Q\td V m");
result.add("sad-\tdam's", "s Q\td V m z");
result.add("sad-\tde-\tning", "s {\td V\tn I N");
result.add("sad-\tden", "s {\td V n");
result.add("sad-\tdened", "s {\td V n d");
result.add("sad-\tdens", "s {\td V n z");
result.add("sad-\tder", "s {\td @r");
result.add("sad-\tdest", "s {\td V s t");
result.add("sad-\tdle", "s {\td V l");
result.add("sad-\tdle-\tbag", "s {\td V l\tb { g");
result.add("sad-\tdle-\tbags", "s {\td V l\tb { g z");
result.add("sad-\tdled", "s {\td V l d");
result.add("sad-\tdles", "s {\td V l z");
result.add("sad-\tler", "s { d\tl @r");
result.add("sad-\tly", "s { d\tl i:");
result.add("sad-\tness", "s { d\tn V s");
result.add("sae-\tger", "s e\tg @r");
result.add("saf-\tfell", "s {\tf V l");
result.add("saf-\tford", "s {\tf @r d");
result.add("saf-\tko", "s Q f\tk @U");
result.add("safe", "s eI f");
result.add("safe-\tguar-\tded", "s eI f\tg Q@\td V d");
result.add("safe-\tguar-\tding", "s eI f\tg Q@\td I N");
result.add("safe-\tguard", "s eI f\tg Q@ d");
result.add("safe-\tguards", "s eI f\tg Q@ d z");
result.add("safe-\tkee-\tping", "s eI f\tk i:\tp I N");
result.add("safe-\tly", "s eI f\tl i:");
result.add("safe-\tty", "s eI f\tt i:");
result.add("safe-\tty's", "s eI f\tt i: z");
result.add("safe-\tway", "s eI f\tw eI");
result.add("safe-\tway's", "s eI f\tw eI z");
result.add("safes", "s eI f s");
result.add("saff-\tlo-\twer", "s { f\tl aU\t@r");
result.add("saff-\tron", "s { f\tr V n");
result.add("sag", "s { g");
result.add("sag-\tging", "s {\tg I N");
result.add("sage", "s eI dZ");
result.add("sage-\tbrush", "s eI dZ\tb r V S");
result.add("sagged", "s { g d");
result.add("sags", "s { g z");
result.add("sai", "s aI");
result.add("sai-\tgon", "s aI\tg Q n");
result.add("sai-\tler", "s eI\tl @r");
result.add("sai-\tling", "s eI\tl I N");
result.add("sai-\tlor", "s eI\tl @r");
result.add("sai-\tlors", "s eI\tl @r z");
result.add("sai-\tlor's", "s eI\tl @r z");
result.add("sai-\tpan", "s eI\tp V n");
result.add("sai-\tpan's", "s eI\tp V n z");
result.add("sai-\tto", "s eI\tt @U");
result.add("said", "s e d");
result.add("sail", "s eI l");
result.add("sail-\tboat", "s eI l\tb @U t");
result.add("sail-\tboats", "s eI l\tb @U t s");
result.add("sail-\tfish", "s eI l\tf I S");
result.add("sailed", "s eI l d");
result.add("sails", "s eI l z");
result.add("sain", "s eI n");
result.add("sain-\tted", "s eI n\tt V d");
result.add("saine", "s eI n");
result.add("sains-\tbu-\try", "s eI n\ts b e@\ti:");
result.add("saint", "s eI n t");
result.add("saint-\thood", "s eI n\tt h U d");
result.add("saint-\tly", "s eI n\tt l i:");
result.add("saints", "s eI n t s");
result.add("saint's", "s eI n t s");
result.add("saints'", "s eI n t s");
result.add("sais", "s eI z");
result.add("sak", "s { k");
result.add("sak-\tha-\tlin", "s { k\th V\tl V n");
result.add("sak-\tha-\trov", "s Q\tk @r\tQ v");
result.add("sake", "s eI k");
result.add("sakes", "s eI k s");
result.add("saks", "s { k s");
result.add("sal", "s { l");
result.add("sal-\tlade", "s {\tl eI d");
result.add("sal-\tlee", "s {\tl i:");
result.add("sal-\tley", "s {\tl i:");
result.add("sal-\tlie", "s {\tl i:");
result.add("sal-\tlies", "s {\tl i: z");
result.add("sal-\tlis", "s {\tl I s");
result.add("sal-\tly", "s {\tl i:");
result.add("sal-\tly's", "s {\tl i: z");
result.add("sal-\tman", "s {\tm V n");
result.add("sal-\tmi", "s Q l\tm i:");
result.add("sal-\tmi-\tnen", "s { l\tm I\tn e n");
result.add("sal-\tmo-\tnel-\tla", "s { l\tm V\tn e\tl V");
result.add("sal-\tmon", "s {\tm V n");
result.add("sal-\tmons", "s {\tm V n z");
result.add("sal-\tsa", "s O: l\ts V");
result.add("sal-\tta-\trel-\tli", "s O: l\tt Q@\te\tl i:");
result.add("sal-\tted", "s O: l\tt V d");
result.add("sal-\tter", "s O: l\tt @r");
result.add("sal-\tters", "s O: l\tt @r z");
result.add("sal-\tter's", "s O: l\tt @r z");
result.add("sal-\tti-\ter", "s O: l\tt i:\t@r");
result.add("sal-\tting", "s O: l\tt I N");
result.add("sal-\tton", "s O: l\tt V n");
result.add("sal-\tty", "s O: l\tt i:");
result.add("sal-\tva", "s Q l\tv V");
result.add("sal-\tva-\tdo-\tran", "s { l\tv V\td O@\tV n");
result.add("sal-\tva-\tdo-\trans", "s { l\tv V\td O@\tV n z");
result.add("sal-\tva-\tdo-\tre", "s Q l\tv Q\td O@\teI");
result.add("sal-\tva-\tdor", "s { l\tv V\td O@");
result.add("sal-\tva-\tdor's", "s { l\tv V\td O@ z");
result.add("sal-\tva-\tgea-\tble", "s { l\tv I\tdZ V\tb V l");
result.add("sal-\tva-\tger", "s { l\tv I\tdZ @r");
result.add("sal-\tva-\tgers", "s { l\tv I\tdZ @r z");
result.add("sal-\tva-\tging", "s { l\tv I\tdZ I N");
result.add("sal-\tva-\ttion", "s { l\tv eI\tS V n");
result.add("sal-\tva-\tto-\tre", "s { l\tv V\tt O@\ti:");
result.add("sal-\tvage", "s { l\tv V dZ");
result.add("sal-\tvaged", "s { l\tv I dZ d");
result.add("sal-\tvi-\ta", "s { l\tv i:\tV");
result.add("sal-\tvo", "s { l\tv @U");
result.add("sal-\tvos", "s { l\tv @U z");
result.add("sal-\tvuc-\tci", "s Q l\tv u:\ttS i:");
result.add("sale", "s eI l");
result.add("sales", "s eI l z");
result.add("sale's", "s eI l z");
result.add("sales-\tman", "s eI l\tz m V n");
result.add("sales-\tman-\tship", "s eI l\tz m V n\tS I p");
result.add("sales-\tman's", "s eI l\tz m V n z");
result.add("sales-\tmen", "s eI l\tz m e n");
result.add("sales-\tpeo-\tple", "s eI l\tz p i:\tp V l");
result.add("sales-\tper-\tson", "s eI l\tz p @r\ts V n");
result.add("sales-\two-\tman", "s eI l\tz w U\tm V n");
result.add("sales-\two-\tmen", "s eI l\tz w I\tm V n");
result.add("salis-\tbu-\try", "s { l\tz b @r\ti:");
result.add("salk", "s O: k");
result.add("salk's", "s O: k s");
result.add("sall", "s O: l");
result.add("salle", "s eI l");
result.add("salm", "s Q m");
result.add("sal's", "s { l z");
result.add("sals-\tbu-\try", "s { l\tz b @r\ti:");
result.add("salt", "s O: l t");
result.add("salt-\tbox", "s O: l\tt b Q k s");
result.add("salt-\tlike", "s O: l\tt l aI k");
result.add("salt-\tmarsh", "s O: l\tt m Q@ S");
result.add("salt-\twa-\tter", "s O: l\tt w Q\tt @r");
result.add("salts", "s O: l t s");
result.add("salts-\tman", "s O: l\tt s m V n");
result.add("saltz-\tman", "s O: l\tt s m V n");
result.add("salve", "s Q v");
result.add("salves", "s Q v z");
result.add("salz", "s O: l z");
result.add("salz-\tburg", "s O: l\tz b @r g");
result.add("salz-\tgit-\tter", "s O: l\tt s g I\tt @r");
result.add("salz-\thauer", "s O: l\tt s h aU r");
result.add("sam", "s { m");
result.add("sam-\tba", "s Q m\tb V");
result.add("sam-\tbo", "s { m\tb @U");
result.add("sam-\tbre", "s { m\tb r V");
result.add("sam-\tbu-\tca", "s { m\tb j u:\tk V");
result.add("sam-\tford", "s { m\tf @r d");
result.add("sam-\tmie", "s {\tm i:");
result.add("sam-\tmons", "s {\tm V n z");
result.add("sam-\tmy", "s {\tm i:");
result.add("sam-\tpan", "s { m\tp { n");
result.add("sam-\tpans", "s { m\tp { n z");
result.add("sam-\tple", "s { m\tp V l");
result.add("sam-\tpled", "s { m\tp V l d");
result.add("sam-\tples", "s { m\tp V l z");
result.add("sam-\tple's", "s { m\tp V l z");
result.add("sam-\tsa-\tra", "s V m\ts Q@\tV");
result.add("sam-\tso-\tnite", "s { m\ts V\tn aI t");
result.add("sam-\tson", "s { m\ts V n");
result.add("sam-\tsung", "s { m\ts V N");
result.add("same", "s eI m");
result.add("same-\tness", "s eI m\tn V s");
result.add("sames", "s eI m z");
result.add("samp", "s { m p");
result.add("samp-\tler", "s { m\tp l @r");
result.add("samp-\tlers", "s { m\tp l @r z");
result.add("samp-\tling", "s { m\tp l I N");
result.add("samp-\tlings", "s { m\tp l I N z");
result.add("samp-\tra-\ts's", "s { m\tp r V\ts V z");
result.add("samp-\tras", "s { m\tp r V s");
result.add("samp-\tson", "s { m\tp s V n");
result.add("sams", "s { m z");
result.add("sam's", "s { m z");
result.add("san", "s { n");
result.add("san-\tborn", "s { n\tb O@ n");
result.add("san-\tche-\tz's", "s { n\ttS e\tz V z");
result.add("san-\tchez", "s { n\ttS e z");
result.add("san-\tcho", "s Q n\tk @U");
result.add("san-\tdal", "s { n\td V l");
result.add("san-\tdals", "s { n\td V l z");
result.add("san-\tded", "s { n\td V d");
result.add("san-\tdell", "s { n\td e l");
result.add("san-\tder", "s { n\td @r");
result.add("san-\tder-\tson", "s { n\td @r\ts V n");
result.add("san-\tders", "s { n\td @r z");
result.add("san-\tdi", "s { n\td i:");
result.add("san-\tdi-\ta", "s { n\td i:\tV");
result.add("san-\tdi-\tnis-\tta", "s { n\td I\tn I s\tt V");
result.add("san-\tdi-\tnis-\ttas", "s { n\td I\tn i: s\tt V z");
result.add("san-\tdie", "s { n\td i:");
result.add("san-\tding", "s { n\td I N");
result.add("san-\tdo-\tval", "s { n\td @U\tv V l");
result.add("san-\tdon", "s { n\td O: n");
result.add("san-\tdor", "s { n\td @r");
result.add("san-\tdus-\tky", "s { n\td V s\tk i:");
result.add("san-\tdy", "s { n\td i:");
result.add("san-\tdy's", "s { n\td i: z");
result.add("san-\tford", "s { n\tf @r d");
result.add("san-\tford's", "s { n\tf @r d z");
result.add("san-\tger", "s {\tN @r");
result.add("san-\tgi-\to-\tvese", "s { n\tdZ i:\t@U\tv i: s");
result.add("san-\tguine", "s { N\tg w I n");
result.add("san-\tjay", "s { n\tdZ eI");
result.add("san-\tjiv", "s Q n\tdZ i: v");
result.add("san-\tka", "s { N\tk V");
result.add("san-\tkey", "s { N\tk i:");
result.add("san-\tko", "s { N\tk @U");
result.add("san-\tsom", "s { n\ts V m");
result.add("san-\tson", "s { n\ts V n");
result.add("san-\tsone", "s { n\ts V n");
result.add("san-\tta", "s { n\tt V");
result.add("san-\tta-\tna", "s { n\tt {\tn V");
result.add("san-\tta-\tya-\tna", "s { n\tt aI\tQ\tn V");
result.add("san-\ttan-\tder", "s { n\tt { n\td @r");
result.add("san-\tta's", "s { n\tt V");
result.add("san-\tte-\tri-\ta", "s { n\tt e@\ti:\tV");
result.add("san-\tter", "s { n\tt @r");
result.add("san-\tti-\ta-\tgo", "s { n\tt i:\tQ\tg @U");
result.add("san-\tti-\tni", "s { n\tt i:\tn i:");
result.add("san-\tto", "s { n\tt @U");
result.add("san-\tto-\tro", "s { n\tt O@\t@U");
result.add("san-\tton", "s { n\tt V n");
result.add("san-\ttos", "s { n\tt @U s");
result.add("san-\tty", "s { n\tt i:");
result.add("san-\twa", "s { n\tw V");
result.add("sanc-\tti-\tfi-\tca-\ttion", "s { N\tk t I\tf I\tk eI\tS V n");
result.add("sanc-\tti-\tfy", "s { N\tk t I\tf aI");
result.add("sanc-\tti-\tmo-\tni-\tous", "s { N\tk t I\tm @U\tn i:\tV s");
result.add("sanc-\tti-\tmo-\tny", "s { N\tk t I\tm @U\tn i:");
result.add("sanc-\tti-\tty", "s { N\tk t I\tt i:");
result.add("sanc-\ttio-\tning", "s { N\tk S V\tn I N");
result.add("sanc-\ttion", "s { N\tk S V n");
result.add("sanc-\ttioned", "s { N\tk S V n d");
result.add("sanc-\ttions", "s { N\tk S V n z");
result.add("sanc-\ttu-\ta-\tries", "s { N\tk tS u:\te@\ti: z");
result.add("sanc-\ttu-\ta-\try", "s { N\tk tS u:\te@\ti:");
result.add("sanc-\ttum", "s { N\tk t V m");
result.add("sand", "s { n d");
result.add("sand-\tbag", "s { n\td b { g");
result.add("sand-\tbag-\tger", "s { n\td b {\tg @r");
result.add("sand-\tbag-\tgers", "s { n\td b {\tg @r z");
result.add("sand-\tbag-\tging", "s { n\td b {\tg I N");
result.add("sand-\tbagged", "s { n\td b { g d");
result.add("sand-\tbags", "s { n\td b { g z");
result.add("sand-\tbar", "s { n\td b Q@");
result.add("sand-\tberg", "s { n\td b @r g");
result.add("sand-\tbox", "s { n\td b Q k s");
result.add("sand-\tburg", "s { n\td b @r g");
result.add("sand-\thill", "s { n\td h I l");
result.add("sand-\thog", "s { n\td h O: g");
result.add("sand-\thogs", "s { n\td h O: g z");
result.add("sand-\tler", "s { n\td l @r");
result.add("sand-\tling", "s { d\tl I N");
result.add("sand-\tman", "s { n\td m { n");
result.add("sand-\tpa-\tper", "s { n\td p eI\tp @r");
result.add("sand-\tpoint", "s { n\td p OI n t");
result.add("sand-\tra", "s { n\td r V");
result.add("sand-\tro", "s { n\td r @U");
result.add("sand-\trock", "s { n\td r Q k");
result.add("sand-\tstone", "s { n\td s t @U n");
result.add("sand-\tstorm", "s { n\td s t O@ m");
result.add("sand-\tstorms", "s { n\td s t O@ m z");
result.add("sand-\tstrom", "s { n\td s t r V m");
result.add("sand-\twi-\tches", "s { n\td w I\ttS V z");
result.add("sand-\twich", "s { n\td w I tS");
result.add("sand-\twiched", "s { n\td w I tS t");
result.add("sandb-\tlas-\tted", "s { n\td b l { s\tt V d");
result.add("sandb-\tlast", "s { n\td b l { s t");
result.add("sande", "s { n d");
result.add("sands", "s { n d z");
result.add("sand's", "s { n d z");
result.add("sane", "s eI n");
result.add("sang", "s { N");
result.add("sank", "s { N k");
result.add("sans", "s { n z");
result.add("sans-\tbu-\try", "s { n\ts b e@\ti:");
result.add("sansk-\trit", "s { n\ts k r I t");
result.add("sant", "s { n t");
result.add("sao", "s aU");
result.add("sap", "s { p");
result.add("sap-\tling", "s { p\tl I N");
result.add("sap-\tlings", "s { p\tl I N z");
result.add("sap-\tper", "s {\tp @r");
result.add("sap-\tphi-\tre", "s {\tf aI\t@r");
result.add("sap-\tping", "s {\tp I N");
result.add("sap-\tpo-\tro", "s V\tp O@\t@U");
result.add("sapped", "s { p t");
result.add("saps", "s { p s");
result.add("sar", "s Q@");
result.add("sar-\tca-\tsm", "s Q@\tk {\tz V m");
result.add("sar-\tcas-\ttic", "s Q@\tk { s\tt I k");
result.add("sar-\tcas-\ttical-\tly", "s Q@\tk { s\tt I k\tl i:");
result.add("sar-\tchet", "s Q@\tS e t");
result.add("sar-\tco-\tma", "s Q@\tk @U\tm @r");
result.add("sar-\tco-\tpha-\tgus", "s Q@\tk Q\tf V\tg V s");
result.add("sar-\tdel-\tla", "s Q@\td e\tl V");
result.add("sar-\tdi-\tna", "s Q@\td i:\tn V");
result.add("sar-\tdi-\tni-\ta", "s Q@\td i:\tn i:\tV");
result.add("sar-\tdine", "s Q@\td i: n");
result.add("sar-\tdines", "s Q@\td i: n z");
result.add("sar-\tdo", "s Q@\td @U");
result.add("sar-\tdo-\tni-\tcal-\tly", "s Q@\td Q\tn I\tk V\tl i:");
result.add("sar-\tdo-\tnic", "s Q@\td Q\tn I k");
result.add("sar-\tgas-\tso", "s Q@\tg {\ts @U");
result.add("sar-\tgeant", "s Q@\tdZ V n t");
result.add("sar-\tgent", "s Q@\tdZ V n t");
result.add("sar-\tkar", "s Q@\tk Q@");
result.add("sar-\tkis", "s Q@\tk I s");
result.add("sar-\tma-\ttian", "s Q@\tm eI\tS V n");
result.add("sar-\tna", "s Q@\tn V");
result.add("sar-\tney", "s Q@\tn i:");
result.add("sar-\tnoff", "s Q@\tn O: f");
result.add("sar-\tra", "s Q@\tV");
result.add("sar-\tra-\tzin", "s Q@\tV\tz I n");
result.add("sar-\ttain", "s Q@\tt eI n");
result.add("sar-\tti", "s Q@\tt i:");
result.add("sar-\ttin", "s Q@\tt I n");
result.add("sar-\tto-\tri-\tal", "s Q@\tt O@\ti:\tV l");
result.add("sar-\tto-\tri-\tus", "s Q@\tt O@\ti:\tV s");
result.add("sar-\ttor", "s Q@\tt @r");
result.add("sar-\ttre", "s Q@ t\tr V");
result.add("sar-\tver", "s Q@\tv @r");
result.add("sare", "s e@");
result.add("sarge", "s Q@ dZ");
result.add("sark", "s Q@ k");
result.add("sarles", "s Q@ l z");
result.add("sars", "s Q@ z");
result.add("sas", "s { s");
result.add("sas-\tka-\ttoon", "s { s\tk V\tt u: n");
result.add("sas-\tkat-\tche-\twan", "s { s\tk {\ttS V\tw O: n");
result.add("sas-\tnett", "s { s\tn e t");
result.add("sas-\tsa-\tfra-\ts's", "s {\ts V f\tr {\ts V z");
result.add("sas-\tsa-\tfras", "s {\ts V f\tr { s");
result.add("sas-\tser", "s {\ts @r");
result.add("sas-\tser's", "s {\ts @r z");
result.add("sas-\tsoon", "s V\ts u: n");
result.add("sas-\tsy", "s {\ts i:");
result.add("sash", "s { S");
result.add("sass", "s { s");
result.add("sasse", "s { s");
result.add("sat", "s { t");
result.add("sat-\tter-\tfield", "s {\tt @r\tf i: l d");
result.add("sat-\tter-\tlee", "s {\tt @r\tl i:");
result.add("sat-\tya", "s Q t\tj V");
result.add("sate", "s eI t");
result.add("sates", "s eI t s");
result.add("sau-\tcer", "s O:\ts @r");
result.add("sau-\tcers", "s O:\ts @r z");
result.add("sau-\tces", "s O:\ts V z");
result.add("sau-\tci-\ter", "s O:\ts i:\t@r");
result.add("sau-\tcy", "s O:\ts i:");
result.add("sau-\tder", "s O:\td @r");
result.add("sau-\tdi", "s O:\td i:");
result.add("sau-\tdis", "s O:\td i: z");
result.add("sau-\ter", "s aU\t@r");
result.add("sau-\ter-\tkraut", "s aU\t@r k\tr aU t");
result.add("sau-\ters", "s aU\t@r z");
result.add("sau-\tger-\tties", "s O:\tg @r\tt i: z");
result.add("sau-\tna", "s O:\tn V");
result.add("sau-\tnas", "s O:\tn V z");
result.add("sau-\tsa-\tges", "s O:\ts I\tdZ V z");
result.add("sau-\tsa-\tli-\tto", "s O:\ts V\tl i:\tt @U");
result.add("sau-\tsage", "s O:\ts V dZ");
result.add("sau-\tte", "s O:\tt eI");
result.add("sau-\tte-\tr", "s O:\tt eI\t@r");
result.add("sau-\tteed", "s O:\tt eI d");
result.add("sau-\tterne", "s @U\tt @r n");
result.add("sau-\tternes", "s @U\tt @r n z");
result.add("sau-\tvig-\tnon", "s O:\tv I n\tj Q n");
result.add("sauce", "s O: s");
result.add("sauce-\tpan", "s O: s\tp { n");
result.add("saud", "s O: d");
result.add("sauk", "s O: k");
result.add("saul", "s O: l");
result.add("saul-\tter", "s O: l\tt @r");
result.add("sauls", "s O: l z");
result.add("sauls-\tbu-\try", "s O: l\ts b e@\ti:");
result.add("sault", "s O: l t");
result.add("saum", "s O: m");
result.add("saun-\tder-\tson", "s O: n\td @r\ts V n");
result.add("saun-\tders", "s O: n\td @r z");
result.add("saun-\tdra", "s O: n\td r V");
result.add("saun-\tdra's", "s O: n\td r V z");
result.add("saun-\tter", "s O: n\tt @r");
result.add("saur", "s O@");
result.add("sauve", "s O: v");
result.add("sav-\tvi-\test", "s {\tv i:\tV s t");
result.add("sav-\tvy", "s {\tv i:");
result.add("save", "s eI v");
result.add("saved", "s eI v d");
result.add("saves", "s eI v z");
result.add("save's", "s eI v z");
result.add("saw", "s O:");
result.add("saw-\tdust", "s O:\td V s t");
result.add("saw-\tmill", "s O:\tm I l");
result.add("saw-\tmills", "s O:\tm I l z");
result.add("saw-\ttelle", "s O:\tt e l");
result.add("saw-\tyer", "s O:\tj @r");
result.add("saw-\tyers", "s O:\tj @r z");
result.add("saw-\tyer's", "s O:\tj @r z");
result.add("sawed", "s O: d");
result.add("saws", "s O: z");
result.add("sax", "s { k s");
result.add("sax-\tton", "s { k\ts t V n");
result.add("saxe", "s { k s");
result.add("say", "s eI");
result.add("say-\tbrook", "s eI b\tr U k");
result.add("say-\tlor", "s eI\tl @r");
result.add("say-\tyid", "s aI\tI d");
result.add("saye", "s eI");
result.add("sayles", "s eI l z");
result.add("sayre", "s e@");
result.add("sayres", "s e@ z");
result.add("says", "s e z");
result.add("sca-\tla", "s k Q\tl V");
result.add("sca-\tlar", "s k eI\tl @r");
result.add("sca-\tli-\ta", "s k Q\tl i:\tV");
result.add("sca-\tli-\ta's", "s k Q\tl i:\tV z");
result.add("sca-\tling", "s k eI\tl I N");
result.add("sca-\tni-\ta", "s k Q\tn i:\tV");
result.add("sca-\tpa", "s k Q\tp V");
result.add("sca-\tpu-\tla", "s k { p\tj V\tl V");
result.add("sca-\tra-\tmouch", "s k {\tr V\tm aU tS");
result.add("sca-\tri-\ter", "s k e@\ti:\t@r");
result.add("sca-\tri-\test", "s k e@\ti:\tV s t");
result.add("sca-\tring", "s k e@\tI N");
result.add("sca-\tro-\tla", "s k Q@\t@U\tl V");
result.add("sca-\try", "s k e@\ti:");
result.add("sca-\tthing", "s k eI\tD I N");
result.add("sca-\tven-\tger", "s k {\tv V n\tdZ @r");
result.add("sca-\tven-\tgers", "s k {\tv V n\tdZ @r z");
result.add("sca-\tven-\tging", "s k {\tv V n\tdZ I N");
result.add("sca-\tvenge", "s k {\tv V n dZ");
result.add("scab", "s k { b");
result.add("scab-\tbard", "s k {\tb @r d");
result.add("scabs", "s k { b z");
result.add("scad", "s k { d");
result.add("scads", "s k { d z");
result.add("scaf-\tfol-\tding", "s k {\tf V l\td I N");
result.add("scaf-\tfold", "s k {\tf V l d");
result.add("scaf-\tfolds", "s k {\tf V l d z");
result.add("scaff", "s k { f");
result.add("scags", "s k { g z");
result.add("scaife", "s k eI f");
result.add("scal-\tded", "s k O: l\td V d");
result.add("scal-\tding", "s k O: l\td I N");
result.add("scal-\tlion", "s k { l\tj V n");
result.add("scal-\tlions", "s k { l\tj V n z");
result.add("scal-\tlop", "s k {\tl V p");
result.add("scal-\tloped", "s k Q\tl V p t");
result.add("scal-\tlops", "s k {\tl V p s");
result.add("scal-\tly", "s k {\tl i:");
result.add("scal-\tpel", "s k { l\tp V l");
result.add("scal-\tpels", "s k { l\tp V l z");
result.add("scal-\tper", "s k { l\tp @r");
result.add("scal-\tpers", "s k { l\tp @r z");
result.add("scal-\tping", "s k { l\tp I N");
result.add("scald", "s k O: l d");
result.add("scalds", "s k O: l d z");
result.add("scale", "s k eI l");
result.add("scaled", "s k eI l d");
result.add("scales", "s k eI l z");
result.add("scalf", "s k { l f");
result.add("scalp", "s k { l p");
result.add("scalped", "s k { l p t");
result.add("scalps", "s k { l p s");
result.add("scam", "s k { m");
result.add("scam-\tmer", "s k {\tm @r");
result.add("scam-\tmers", "s k {\tm @r z");
result.add("scam-\tmon", "s k {\tm V n");
result.add("scam-\tpe-\tring", "s k { m\tp @r\tI N");
result.add("scam-\tper", "s k { m\tp @r");
result.add("scam-\tpered", "s k { m\tp @r d");
result.add("scammed", "s k { m d");
result.add("scams", "s k { m z");
result.add("scan", "s k { n");
result.add("scan-\tda-\tlize", "s k { n\td V\tl aI z");
result.add("scan-\tda-\tlized", "s k { n\td V\tl aI z d");
result.add("scan-\tda-\tlous", "s k { n\td V\tl V s");
result.add("scan-\tdal", "s k { n\td V l");
result.add("scan-\tdals", "s k { n\td V l z");
result.add("scan-\tdal's", "s k { n\td V l z");
result.add("scan-\tdi-\ta", "s k { n\td i:\tV");
result.add("scan-\tdi-\tna-\tvi-\ta", "s k { n\td I\tn eI\tv i:\tV");
result.add("scan-\tdi-\tna-\tvi-\tan", "s k { n\td I\tn eI\tv i:\tV n");
result.add("scan-\tdi-\tna-\tvi-\tans", "s k { n\td I\tn eI\tv i:\tV n z");
result.add("scan-\tdi-\tna-\tvi-\ta's", "s k { n\td I\tn eI\tv i:\tV z");
result.add("scan-\tner", "s k {\tn @r");
result.add("scan-\tners", "s k {\tn @r z");
result.add("scan-\tning", "s k {\tn I N");
result.add("scan-\tti-\tly", "s k { n\tt I\tl i:");
result.add("scan-\tti-\tness", "s k { n\tt i:\tn e s");
result.add("scan-\tty", "s k { n\tt i:");
result.add("scanned", "s k { n d");
result.add("scans", "s k { n z");
result.add("scant", "s k { n t");
result.add("scape", "s k eI p");
result.add("scape-\tgoa-\tted", "s k eI p\tg @U\tt V d");
result.add("scape-\tgoa-\tting", "s k eI p\tg @U\tt I N");
result.add("scape-\tgoat", "s k eI p\tg @U t");
result.add("scape-\tgoats", "s k eI p\tg @U t s");
result.add("scar", "s k Q@");
result.add("scar-\tbo-\trough", "s k Q@\tb @r\t@U");
result.add("scar-\tcer", "s k e@\ts @r");
result.add("scar-\tci-\tty", "s k e@\ts I\tt i:");
result.add("scar-\tface", "s k Q@\tf eI s");
result.add("scar-\tgill", "s k Q@\tg I l");
result.add("scar-\tlet", "s k Q@\tl V t");
result.add("scar-\tlett", "s k Q@\tl e t");
result.add("scar-\tpa", "s k Q@\tp V");
result.add("scar-\tring", "s k Q@\tI N");
result.add("scar-\try", "s k {\tr i:");
result.add("scarb-\tro", "s k Q@ b\tr @U");
result.add("scarce", "s k e@ s");
result.add("scarce-\tly", "s k e@ s\tl i:");
result.add("scare", "s k e@");
result.add("scare-\tcrow", "s k { r\tk r @U");
result.add("scared", "s k e@ d");
result.add("scares", "s k e@ z");
result.add("scarf", "s k Q@ f");
result.add("scarfs", "s k Q@ f s");
result.add("scarp", "s k Q@ p");
result.add("scarred", "s k Q@ d");
result.add("scars", "s k Q@ z");
result.add("scars-\tdale", "s k Q@ z\td eI l");
result.add("scarves", "s k Q@ v z");
result.add("scat", "s k { t");
result.add("scat-\tte-\tring", "s k {\tt @r\tI N");
result.add("scat-\tter", "s k {\tt @r");
result.add("scat-\tter-\tgood", "s k {\tt @r\tg U d");
result.add("scat-\tter-\tshot", "s k {\tt @r\tS Q t");
result.add("scat-\ttered", "s k {\tt @r d");
result.add("sce-\tna-\tri-\to", "s V\tn e@\ti:\t@U");
result.add("sce-\tna-\tri-\tos", "s V\tn e@\ti:\t@U z");
result.add("sce-\tne-\tries", "s i:\tn @r\ti: z");
result.add("sce-\tne-\try", "s i:\tn @r\ti:");
result.add("sce-\tnic", "s i:\tn I k");
result.add("scen-\tted", "s e n\tt V d");
result.add("scene", "s i: n");
result.add("scenes", "s i: n z");
result.add("scent", "s e n t");
result.add("scents", "s e n t s");
result.add("scep-\ttre", "s e p\tt @r");
result.add("scha-\tfer", "S eI\tf @r");
result.add("scha-\tper", "S eI\tp @r");
result.add("scha-\tpi-\tro", "S {\tp aI\tr @U");
result.add("schaab", "S Q b");
result.add("schacht", "S { k t");
result.add("schae-\tfer", "S eI\tf @r");
result.add("schaef-\tfer", "S e\tf @r");
result.add("schaf-\tfer", "S eI\tf @r");
result.add("schaff-\tner", "S { f\tn @r");
result.add("schal-\tler", "S O:\tl @r");
result.add("schantz", "S { n t s");
result.add("schanz", "S { n s");
result.add("scharf", "S Q@ f");
result.add("scharff", "S Q@ f");
result.add("scharn-\thorst", "S Q@ n\th O@ s t");
result.add("schatz", "S { t s");
result.add("schaum-\tburg", "S aU m\tb @r g");
result.add("sche-\tdu-\tler", "s k e d\tdZ U\tl @r");
result.add("sche-\tdu-\tlers", "s k e d\tdZ U\tl @r z");
result.add("sche-\tdu-\tling", "s k e\tdZ U\tl I N");
result.add("sche-\tdule", "s k e\tdZ U l");
result.add("sche-\tduled", "s k e\tdZ U l d");
result.add("sche-\tdules", "s k e\tdZ U l z");
result.add("sche-\tler", "S i:\tl @r");
result.add("sche-\tma-\tta", "s k V\tm {\tt V");
result.add("sche-\tma-\ttic", "s k V\tm {\tt I k");
result.add("sche-\tmer", "s k i:\tm @r");
result.add("sche-\tming", "s k i:\tm I N");
result.add("sche-\tnec-\tta-\tdy", "s k V\tn e k\tt V\td i:");
result.add("sche-\tnec-\tta-\tdy's", "s k V\tn e k\tt V\td i: z");
result.add("schear", "S I@");
result.add("schec-\tter", "S e k\tt @r");
result.add("schech-\tter", "S e k\tt @r");
result.add("scheck", "S e k");
result.add("scheel", "S i: l");
result.add("scheele", "S i: l");
result.add("scheer", "S I@");
result.add("schef-\tfel", "S e\tf V l");
result.add("schei-\tder", "S aI\td @r");
result.add("schei-\tner", "S aI\tn @r");
result.add("scheidt", "S aI t");
result.add("schein", "S aI n");
result.add("schel-\tler", "s k e\tl @r");
result.add("schel-\tling", "s k e\tl I N");
result.add("schell", "s k e l");
result.add("scheme", "s k i: m");
result.add("schemed", "s k i: m d");
result.add("schemes", "s k i: m z");
result.add("schen-\tley", "S e n\tl i:");
result.add("schenck", "S e N k");
result.add("schenk", "S e N k");
result.add("scher-\tman", "S @r\tm V n");
result.add("schertz", "S @r t s");
result.add("schi-\ta-\tvo-\tne", "s k i:\tQ\tv @U\tn i:");
result.add("schi-\ta-\tvo-\tni", "s k i:\tQ\tv @U\tn i:");
result.add("schi-\tro", "s k I@\t@U");
result.add("schi-\tsm", "s k I\tz V m");
result.add("schi-\tsms", "s k I\tz V m z");
result.add("schi-\tzoph-\tre-\tni-\ta", "s k I t\ts V f\tr i:\tn i:\tV");
result.add("schi-\tzoph-\tre-\tnic", "S I\tz V f\tr e\tn I k");
result.add("schick", "S I k");
result.add("schiele", "S i: l");
result.add("schiff", "S I f");
result.add("schiff-\tman", "S I f\tm V n");
result.add("schil-\tler", "S I\tl @r");
result.add("schil-\tler's", "S I\tl @r z");
result.add("schil-\tling", "S I\tl I N");
result.add("schil-\tlings", "S I\tl I N z");
result.add("schil-\tling's", "S I\tl I N z");
result.add("schild", "S aI l d");
result.add("schilt", "S I l t");
result.add("schim-\tmel", "S I\tm V l");
result.add("schind-\tler", "S I n\td l @r");
result.add("schind-\tler's", "S I n\td l @r z");
result.add("schip-\tpers", "S I\tp @r z");
result.add("schist", "S I s t");
result.add("schists", "S I s t s");
result.add("schla-\tter", "S l eI\tt @r");
result.add("schlang", "S l { N");
result.add("schle-\tgel", "S l eI\tg V l");
result.add("schle-\tsin-\tger", "S l e\ts I n\tdZ @r");
result.add("schlepp", "S l e p");
result.add("schles-\tsin-\tger", "S l e\ts I n\tdZ @r");
result.add("schles-\twig", "S l e s\tw I g");
result.add("schley", "S l eI");
result.add("schli-\tcher", "S l I\tk @r");
result.add("schlick", "S l I k");
result.add("schlitz", "S l I t s");
result.add("schlock", "S l Q k");
result.add("schlos-\tser", "S l O:\ts @r");
result.add("schloss", "S l O: s");
result.add("schlu-\tter", "S l u:\tt @r");
result.add("schmaltz", "S m Q l t s");
result.add("schmalz", "S m O: l z");
result.add("schme-\tling", "S m e\tl I N");
result.add("schmeck", "S m e k");
result.add("schmelt-\tzer", "S m e l\tt z @r");
result.add("schmelz", "S m e l z");
result.add("schmidt", "S m I t");
result.add("schmidt's", "S m I t s");
result.add("schmitt", "S m I t");
result.add("schmitz", "S m I t s");
result.add("schmoo-\tzing", "S m u:\tz I N");
result.add("schmooze", "S m u: z");
result.add("schmuck", "S m V k");
result.add("schna-\tbel", "S n {\tb V l");
result.add("schnapp", "S n { p");
result.add("schnapps", "S n { p s");
result.add("schnau-\tzer", "S n aU\tz @r");
result.add("schnei-\tder", "S n aI\td @r");
result.add("schnei-\tder-\tman", "S n aI\td @r\tm V n");
result.add("schnei-\tder-\tman's", "S n aI\td @r\tm V n z");
result.add("schnei-\tder's", "S n aI\td @r z");
result.add("schnell", "S n e l");
result.add("schnitt-\tke", "S n I t\tk i:");
result.add("schnitz", "S n I t s");
result.add("schnitz-\tler", "S n I t\ts l @r");
result.add("schnook", "S n U k");
result.add("schnooks", "S n U k s");
result.add("schnorr", "S n O@");
result.add("schnur", "S n @r");
result.add("schnurr", "S n @r");
result.add("scho-\tber", "S @U\tb @r");
result.add("scho-\te-\tning", "S Q\tV\tn I N");
result.add("scho-\tfield", "s k @U\tf i: l d");
result.add("scho-\tlar", "s k Q\tl @r");
result.add("scho-\tlar-\tly", "s k Q\tl @r\tl i:");
result.add("scho-\tlar-\tship", "s k Q\tl @r\tS I p");
result.add("scho-\tlar-\tships", "s k Q\tl @r\tS I p s");
result.add("scho-\tlars", "s k Q\tl @r z");
result.add("scho-\tlar's", "s k Q\tl @r z");
result.add("scho-\tlas-\ttic", "s k V\tl { s\tt I k");
result.add("scho-\tu-\tten", "S Q\tu:\tt V n");
result.add("schoen-\tberg", "S @U n\tb @r g");
result.add("schoen-\tfel-\tder", "S @U n\tf e l\td @r");
result.add("scholz", "S @U l z");
result.add("schon-\tberg", "S Q n\tb @r g");
result.add("schon-\tfeld", "S Q n\tf e l d");
result.add("schone", "S @U n");
result.add("schoo-\tler", "s k u:\tl @r");
result.add("schoo-\tlers", "s k u:\tl @r z");
result.add("schoo-\tling", "s k u:\tl I N");
result.add("schoo-\tner", "s k u:\tn @r");
result.add("schoo-\tners", "s k u:\tn @r z");
result.add("schoof", "S U f");
result.add("school", "s k u: l");
result.add("school-\tbook", "s k u: l\tb U k");
result.add("school-\tbooks", "s k u: l\tb U k s");
result.add("school-\tboy", "s k u: l\tb OI");
result.add("school-\tboys", "s k u: l\tb OI z");
result.add("school-\tchild", "s k u: l\ttS aI l d");
result.add("school-\tchild-\tren", "s k u: l\ttS I l\td r V n");
result.add("school-\tcraft", "s k u: l\tk r { f t");
result.add("school-\thouse", "s k u: l\th aU s");
result.add("school-\tmas-\tter", "s k u: l\tm { s\tt @r");
result.add("school-\tmate", "s k u: l\tm eI t");
result.add("school-\tmates", "s k u: l\tm eI t s");
result.add("school-\troom", "s k u: l\tr u: m");
result.add("school-\ttea-\tcher", "s k u: l\tt i:\ttS @r");
result.add("school-\ttea-\tchers", "s k u: l\tt i:\ttS @r z");
result.add("school-\ttime", "s k u: l\tt aI m");
result.add("school-\twork", "s k u: l\tw @r k");
result.add("school-\tyard", "s k u: l\tj Q@ d");
result.add("schooled", "s k u: l d");
result.add("schools", "s k u: l z");
result.add("school's", "s k u: l z");
result.add("schoon", "s k u: n");
result.add("schott", "S Q t");
result.add("schott's", "S Q t s");
result.add("schou", "S u:");
result.add("schow", "S aU");
result.add("schra-\tder", "S r eI\td @r");
result.add("schram", "S r { m");
result.add("schrank", "S r { N k");
result.add("schreck", "S r e k");
result.add("schrei-\tber", "S r aI\tb @r");
result.add("schrei-\tner", "S r aI\tn @r");
result.add("schreib-\tman", "S r aI b\tm V n");
result.add("schrick", "S r I k");
result.add("schrie-\tver", "S r i:\tv @r");
result.add("schro-\tder", "S r @U\td @r");
result.add("schro-\ter", "S r @U\t@r");
result.add("schroe-\tder", "S r @U\td @r");
result.add("schroe-\tder's", "S r @U\td @r z");
result.add("schroth", "S r O: T");
result.add("schtick", "S t I k");
result.add("schu-\tbert", "S u:\tb @r t");
result.add("schu-\tbert's", "S u:\tb @r t s");
result.add("schu-\tlen-\tburg", "S u:\tl V n\tb @r g");
result.add("schu-\tler", "S u:\tl @r");
result.add("schu-\tma-\tcher", "S u:\tm Q\tk @r");
result.add("schu-\tman", "S u:\tm V n");
result.add("schu-\tmann", "S u:\tm V n");
result.add("schu-\tmann's", "S u:\tm V n z");
result.add("schu-\tmer", "S u:\tm @r");
result.add("schu-\tmer's", "S u:\tm @r z");
result.add("schug", "S V g");
result.add("schuh", "S u:");
result.add("schul", "S U l");
result.add("schul-\tman", "S u: l\tm V n");
result.add("schultz", "S U l t s");
result.add("schultze", "S V l t z");
result.add("schulz", "S U l t s");
result.add("schulze", "S U l t s");
result.add("schur-\tman", "S @r\tm V n");
result.add("schus-\tter", "S u: s\tt @r");
result.add("schuy-\tler", "s k aI\tl @r");
result.add("schuyl-\tkill", "s k j u: l\tk I l");
result.add("schwab", "S w Q b");
result.add("schwab's", "S w Q b z");
result.add("schwar-\tze-\tneg-\tger", "S w O@\tz V\tn eI\tg @r");
result.add("schwar-\tze-\tneg-\tger's", "S w O@\tz V\tn eI\tg @r z");
result.add("schwar-\tzkopf", "S w O@ t\ts k O: p f");
result.add("schwar-\tzkopf's", "S w O@ t\ts k O: p f s");
result.add("schwartz", "S w O@ t s");
result.add("schwarz", "S w O@ t s");
result.add("schwe-\trin", "S w e@\tI n");
result.add("schwei-\tzer", "S w aI\tz @r");
result.add("schweit-\tzer", "S w aI t\ts @r");
result.add("schweit-\tzer's", "S w aI t\ts @r z");
result.add("schwenk", "S w e N k");
result.add("schweppes", "S w e p s");
result.add("schwert-\tner", "S w @r t\tn @r");
result.add("schwin-\tger", "S w I\tN @r");
result.add("schwing", "S w I N");
result.add("schwinn", "S w I n");
result.add("sci", "s i:");
result.add("sci-\ten-\tces", "s aI\tV n\ts V z");
result.add("sci-\ten-\tce's", "s aI\tV n\ts V z");
result.add("sci-\ten-\tti-\tfi-\tcal-\tly", "s aI\tV n\tt I\tf I\tk V\tl i:");
result.add("sci-\ten-\tti-\tfic", "s aI\tV n\tt I\tf I k");
result.add("sci-\ten-\tti-\tfic's", "s aI\tV n\tt I\tf I k s");
result.add("sci-\ten-\ttist", "s aI\tV n\tt V s t");
result.add("sci-\ten-\ttists", "s aI\tV n\tt V s t s");
result.add("sci-\ten-\ttist's", "s aI\tV n\tt V s t s");
result.add("sci-\ten-\tto-\tlo-\tgist", "s aI\te n\tt Q\tl V\tdZ I s t");
result.add("sci-\ten-\tto-\tlo-\tgists", "s aI\te n\tt Q\tl V\tdZ I s t s");
result.add("sci-\ten-\tto-\tlo-\tgy", "s aI\tV n\tt Q\tl V\tdZ i:");
result.add("sci-\tence", "s aI\tV n s");
result.add("sci-\tmone", "s V\tm @U n");
result.add("sci-\ton", "s aI\tV n");
result.add("sci-\tpi-\to", "s I\tp i:\t@U");
result.add("scia-\tra", "S Q@\tV");
result.add("scil-\tla", "s I\tl V");
result.add("scil-\tlas", "s I\tl V z");
result.add("scin-\ttil-\tla", "s I n\tt I\tl V");
result.add("scire", "s aI r");
result.add("scis-\tsor", "s I\tz @r");
result.add("scis-\tsors", "s I\tz @r z");
result.add("scle-\tro-\tder-\tma", "s k l I@\tV\td @r\tm V");
result.add("scle-\tro-\tsis", "s k l @r\t@U\ts I s");
result.add("sco-\tbey", "s k @U\tb i:");
result.add("sco-\tfield", "s k @U\tf i: l d");
result.add("sco-\tlia", "s k @U l\tj V");
result.add("sco-\tping", "s k @U\tp I N");
result.add("sco-\tpo-\tla-\tmine", "s k O:\tp V\tl V\tm i: n");
result.add("sco-\trer", "s k O@\t@r");
result.add("sco-\trers", "s k O@\t@r z");
result.add("sco-\tring", "s k O@\tI N");
result.add("sco-\ttia", "s k @U\tS V");
result.add("sco-\ttia's", "s k @U\tS V z");
result.add("sco-\tur", "s k aU\t@r");
result.add("sco-\tvel", "s k @U\tv V l");
result.add("sco-\tville", "s k @U\tv I l");
result.add("scof-\tflaws", "s k Q f\tl O: z");
result.add("scoff", "s k O: f");
result.add("scoffed", "s k O: f t");
result.add("scoffs", "s k O: f s");
result.add("scog-\tgin", "s k Q\tg I n");
result.add("scol-\tded", "s k @U l\td V d");
result.add("scol-\tding", "s k @U l\td I N");
result.add("scold", "s k @U l d");
result.add("scolds", "s k @U l d z");
result.add("scoles", "s k @U l z");
result.add("scon-\tces", "s k Q n\ts V z");
result.add("sconce", "s k Q n s");
result.add("scone", "s k @U n");
result.add("scones", "s k @U n z");
result.add("scoo-\tper", "s k u:\tp @r");
result.add("scoo-\tping", "s k u:\tp I N");
result.add("scoo-\tter", "s k u:\tt @r");
result.add("scoo-\tters", "s k u:\tt @r z");
result.add("scoop", "s k u: p");
result.add("scooped", "s k u: p t");
result.add("scoops", "s k u: p s");
result.add("scoot", "s k u: t");
result.add("scoots", "s k u: t s");
result.add("scope", "s k @U p");
result.add("scopes", "s k @U p s");
result.add("scor-\tcher", "s k O@\ttS @r");
result.add("scor-\tching", "s k O@\ttS I N");
result.add("scor-\tpi-\to", "s k O@\tp i:\t@U");
result.add("scor-\tpi-\ton", "s k O@\tp i:\tV n");
result.add("scor-\tpi-\tons", "s k O@\tp i:\tV n z");
result.add("scor-\tse-\tse's", "s k O@\ts i:\tz V z");
result.add("scor-\tsese", "s k O@\ts i: z");
result.add("scor-\tza", "s k O@\tz V");
result.add("scorch", "s k O@ tS");
result.add("scorched", "s k O@ tS t");
result.add("score", "s k O@");
result.add("score-\tboard", "s k O@\tb O@ d");
result.add("score-\tcard", "s k O@\tk Q@ d");
result.add("score-\tcards", "s k O@\tk Q@ d z");
result.add("score-\tkee-\tper", "s k O@\tk i:\tp @r");
result.add("score-\tkee-\tpers", "s k O@\tk i:\tp @r z");
result.add("score-\tkee-\tping", "s k O@\tk i:\tp I N");
result.add("score-\tless", "s k O@\tl V s");
result.add("scored", "s k O@ d");
result.add("scores", "s k O@ z");
result.add("scorn", "s k O@ n");
result.add("scorn-\tful", "s k O@ n\tf V l");
result.add("scorned", "s k O@ n d");
result.add("scorns", "s k O@ n z");
result.add("scot", "s k Q t");
result.add("scot-\tches", "s k Q\ttS V z");
result.add("scot-\tland", "s k Q t\tl V n d");
result.add("scot-\tland's", "s k Q t\tl V n d z");
result.add("scot-\ttie", "s k Q\tt i:");
result.add("scot-\ttish", "s k Q\tt I S");
result.add("scot-\tto", "s k @U\tt @U");
result.add("scot-\tty", "s k Q\tt i:");
result.add("scot-\tty's", "s k Q\tt i: z");
result.add("scotch", "s k Q tS");
result.add("scotch-\tgard", "s k Q tS\tg Q@ d");
result.add("scotched", "s k Q tS t");
result.add("scots", "s k Q t s");
result.add("scots-\tman", "s k Q t\ts m V n");
result.add("scott", "s k Q t");
result.add("scotts", "s k Q t s");
result.add("scott's", "s k Q t s");
result.add("scotts-\tbluff", "s k Q t\ts b l V f");
result.add("scotts-\tdale", "s k Q t\ts d eI l");
result.add("scou-\tr-\ting", "s k aU\t@r\tI N");
result.add("scou-\tred", "s k aU\t@r d");
result.add("scou-\trs", "s k aU\t@r z");
result.add("scou-\tted", "s k aU\tt V d");
result.add("scou-\tter", "s k aU\tt @r");
result.add("scou-\tters", "s k aU\tt @r z");
result.add("scou-\tting", "s k aU\tt I N");
result.add("scoun-\tdrel", "s k aU n\td r V l");
result.add("scoun-\tdrels", "s k aU n\td r V l z");
result.add("scour-\tges", "s k @r\tdZ V z");
result.add("scourge", "s k @r dZ");
result.add("scout", "s k aU t");
result.add("scout-\tmas-\tter", "s k aU t\tm { s\tt @r");
result.add("scouts", "s k aU t s");
result.add("scout's", "s k aU t s");
result.add("scow", "s k aU");
result.add("scow-\tling", "s k aU\tl I N");
result.add("scowl", "s k aU l");
result.add("scowled", "s k aU l d");
result.add("scra-\tper", "s k r eI\tp @r");
result.add("scra-\tpers", "s k r eI\tp @r z");
result.add("scra-\tping", "s k r eI\tp I N");
result.add("scra-\tpings", "s k r eI\tp I N z");
result.add("scra-\ttches", "s k r {\ttS V z");
result.add("scra-\ttching", "s k r {\ttS I N");
result.add("scra-\ttchy", "s k r {\ttS i:");
result.add("scrab-\tble", "s k r {\tb V l");
result.add("scrag-\tgle", "s k r {\tg V l");
result.add("scragg-\tly", "s k r { g\tl i:");
result.add("scram-\tb-\tling", "s k r { m\tb V\tl I N");
result.add("scram-\tble", "s k r { m\tb V l");
result.add("scram-\tbled", "s k r { m\tb V l d");
result.add("scram-\tbles", "s k r { m\tb V l z");
result.add("scran-\tton", "s k r { n\tt V n");
result.add("scrap", "s k r { p");
result.add("scrap-\tbook", "s k r { p\tb U k");
result.add("scrap-\tbooks", "s k r { p\tb U k s");
result.add("scrap-\tping", "s k r {\tp I N");
result.add("scrap-\tpy", "s k r {\tp i:");
result.add("scrape", "s k r eI p");
result.add("scraped", "s k r eI p t");
result.add("scrapes", "s k r eI p s");
result.add("scrapped", "s k r { p t");
result.add("scraps", "s k r { p s");
result.add("scratch", "s k r { tS");
result.add("scratched", "s k r { tS t");
result.add("scraw-\tny", "s k r O:\tn i:");
result.add("scrawl", "s k r O: l");
result.add("scrawled", "s k r O: l d");
result.add("scre-\twy", "s k r u:\ti:");
result.add("screa-\tmer", "s k r i:\tm @r");
result.add("screa-\tmers", "s k r i:\tm @r z");
result.add("screa-\tming", "s k r i:\tm I N");
result.add("screa-\tming-\tly", "s k r i:\tm I N\tl i:");
result.add("scream", "s k r i: m");
result.add("screamed", "s k r i: m d");
result.add("screams", "s k r i: m z");
result.add("scree-\tches", "s k r i:\ttS V z");
result.add("scree-\tching", "s k r i:\ttS I N");
result.add("scree-\tner", "s k r i:\tn @r");
result.add("scree-\tners", "s k r i:\tn @r z");
result.add("scree-\tning", "s k r i:\tn I N");
result.add("scree-\tnings", "s k r i:\tn I N z");
result.add("screech", "s k r i: tS");
result.add("screeched", "s k r i: tS t");
result.add("screed", "s k r i: d");
result.add("screen", "s k r i: n");
result.add("screen-\tplay", "s k r i: n\tp l eI");
result.add("screen-\tplays", "s k r i: n\tp l eI z");
result.add("screen-\twri-\tter", "s k r i: n\tr aI\tt @r");
result.add("screen-\twri-\tters", "s k r i: n\tr aI\tt @r z");
result.add("screen-\twri-\tting", "s k r i: n\tr aI\tt I N");
result.add("screened", "s k r i: n d");
result.add("screens", "s k r i: n z");
result.add("screw", "s k r u:");
result.add("screw-\tball", "s k r u:\tb O: l");
result.add("screw-\tdri-\tver", "s k r u: d\tr aI\tv @r");
result.add("screw-\tdri-\tvers", "s k r u: d\tr aI\tv @r z");
result.add("screw-\ting", "s k r u:\tI N");
result.add("screwed", "s k r u: d");
result.add("screws", "s k r u: z");
result.add("scri-\tber", "s k r aI\tb @r");
result.add("scri-\tven", "s k r I\tv I n");
result.add("scri-\tvens", "s k r aI\tv V n z");
result.add("scri-\tver", "s k r aI\tv @r");
result.add("scrib-\tb-\tling", "s k r I\tb V\tl I N");
result.add("scrib-\tble", "s k r I\tb V l");
result.add("scrib-\tbled", "s k r I\tb V l d");
result.add("scrib-\tbles", "s k r I\tb V l z");
result.add("scrib-\tner", "s k r I b\tn @r");
result.add("scrib-\tners", "s k r I b\tn @r z");
result.add("scrib-\tner's", "s k r I b\tn @r z");
result.add("scribb-\tler", "s k r I b\tl @r");
result.add("scribb-\tlers", "s k r I b\tl @r z");
result.add("scribe", "s k r aI b");
result.add("scribes", "s k r aI b z");
result.add("scrim-\tmage", "s k r I\tm I dZ");
result.add("scrim-\tping", "s k r I m\tp I N");
result.add("scrim-\tshaw", "s k r I m\tS O:");
result.add("scrimp", "s k r I m p");
result.add("scrip", "s k r I p");
result.add("scrip-\tted", "s k r I p\tt V d");
result.add("scrip-\ttu-\tral", "s k r I p\ttS @r\tV l");
result.add("scrip-\tture", "s k r I p\ttS @r");
result.add("scrip-\ttures", "s k r I p\ttS @r z");
result.add("scripps", "s k r I p s");
result.add("script", "s k r I p t");
result.add("script-\twri-\tter", "s k r I p\tt r aI\tt @r");
result.add("script-\twri-\tters", "s k r I p\tt r aI\tt @r z");
result.add("script-\twri-\tting", "s k r I p\tt r aI\tt I N");
result.add("scripts", "s k r I p t s");
result.add("scrive-\tner", "s k r I v\tn @r");
result.add("scrod", "s k r Q d");
result.add("scrog-\tgins", "s k r Q\tg I n z");
result.add("scroll", "s k r @U l");
result.add("scrolls", "s k r @U l z");
result.add("scrooge", "s k r u: dZ");
result.add("scroun-\tging", "s k r aU n\tdZ I N");
result.add("scrounge", "s k r aU n dZ");
result.add("scrounged", "s k r aU n dZ d");
result.add("scru-\tple", "s k r u:\tp V l");
result.add("scru-\tples", "s k r u:\tp V l z");
result.add("scru-\tpu-\tlous", "s k r u: p\tj V\tl V s");
result.add("scru-\tpu-\tlous-\tly", "s k r u: p\tj V\tl V s\tl i:");
result.add("scru-\tti-\tni-\tzes", "s k r u:\tt I\tn aI\tz V z");
result.add("scru-\tti-\tni-\tzing", "s k r u:\tt I\tn aI\tz I N");
result.add("scru-\tti-\tnize", "s k r u:\tt I\tn aI z");
result.add("scru-\tti-\tnized", "s k r u:\tt I\tn aI z d");
result.add("scru-\tti-\tny", "s k r u:\tt I\tn i:");
result.add("scrub", "s k r V b");
result.add("scrub-\tber", "s k r V\tb @r");
result.add("scrub-\tbers", "s k r V\tb @r z");
result.add("scrub-\tbing", "s k r V\tb I N");
result.add("scrub-\tby", "s k r V\tb i:");
result.add("scrubbed", "s k r V b d");
result.add("scruf-\tfy", "s k r V\tf i:");
result.add("scruggs", "s k r V g z");
result.add("scrunch", "s k r V n tS");
result.add("scrunched", "s k r V n tS t");
result.add("scu-\tba", "s k u:\tb V");
result.add("scud", "s k V d");
result.add("scud-\tder", "s k V\td @r");
result.add("scuds", "s k V d z");
result.add("scuf-\tfle", "s k V\tf V l");
result.add("scuf-\tfled", "s k V\tf V l d");
result.add("scuf-\tfles", "s k V\tf V l z");
result.add("scuff", "s k V f");
result.add("scuffed", "s k V f t");
result.add("scul-\tley", "s k V\tl i:");
result.add("scul-\tley's", "s k V\tl i: z");
result.add("scul-\tlin", "s k V\tl I n");
result.add("scul-\tlion", "s k V l\tj V n");
result.add("scul-\tly", "s k V\tl i:");
result.add("scull", "s k V l");
result.add("sculp-\tted", "s k V l\tp t V d");
result.add("sculp-\tting", "s k V l\tp t I N");
result.add("sculp-\ttor", "s k V l\tp t @r");
result.add("sculp-\ttors", "s k V l\tp t @r z");
result.add("sculp-\ttu-\tral", "s k V l\tp tS @r\tV l");
result.add("sculp-\ttu-\tring", "s k V l\tp t @r\tI N");
result.add("sculp-\tture", "s k V l\tp tS @r");
result.add("sculp-\ttured", "s k V l\tp tS @r d");
result.add("sculp-\ttures", "s k V l\tp tS @r z");
result.add("sculpt", "s k V l p t");
result.add("sculpts", "s k V l p t s");
result.add("scum", "s k V m");
result.add("scup-\tper", "s k V\tp @r");
result.add("scur-\tlock", "s k @r\tl V k");
result.add("scur-\tri-\tlous", "s k @r\tI\tl V s");
result.add("scur-\tried", "s k @r\ti: d");
result.add("scur-\try", "s k @r\ti:");
result.add("scur-\try-\ting", "s k @r\ti:\tI N");
result.add("scut-\tt-\tling", "s k V\tt V\tl I N");
result.add("scut-\ttle", "s k V\tt V l");
result.add("scut-\ttle-\tbutt", "s k V\tt V l\tb V t");
result.add("scut-\ttled", "s k V\tt V l d");
result.add("scutt", "s k V t");
result.add("scy-\tthi-\tan", "s I\tT i:\tV n");
result.add("se-\tance", "s eI\tQ n s");
result.add("se-\tat-\ttle", "s i:\t{\tt V l");
result.add("se-\tat-\ttle's", "s i:\t{\tt V l z");
result.add("se-\tba-\tceous", "s V\tb eI\tS V s");
result.add("se-\tbas-\tti-\ta-\tna", "s V\tb { s\tt i:\tQ\tn V");
result.add("se-\tbas-\ttian", "s V\tb { s\ttS V n");
result.add("se-\tbas-\ttian's", "s V\tb { s\ttS V n z");
result.add("se-\tbree", "s V b\tr i:");
result.add("se-\tcau-\tcus", "s I\tk O:\tk V s");
result.add("se-\tce-\tded", "s V\ts i:\td V d");
result.add("se-\tce-\tding", "s V\ts i:\td I N");
result.add("se-\tcede", "s V\ts i: d");
result.add("se-\tces-\tsio-\tnist", "s V\ts e\tS V\tn V s t");
result.add("se-\tces-\tsio-\tnists", "s V\ts e\tS V\tn V s t s");
result.add("se-\tces-\tsion", "s V\ts e\tS V n");
result.add("se-\tco", "s e\tk @U");
result.add("se-\tcon-\tda-\tri-\tly", "s e\tk V n\td e@\tV\tl i:");
result.add("se-\tcon-\tda-\tries", "s e\tk V n\td e@\ti: z");
result.add("se-\tcon-\tda-\try", "s e\tk V n\td e@\ti:");
result.add("se-\tcon-\tded", "s e\tk V n\td V d");
result.add("se-\tcond", "s e\tk V n d");
result.add("se-\tcond-\thand", "s e\tk V n\td h { n d");
result.add("se-\tcond-\tly", "s e\tk V n\td l i:");
result.add("se-\tconds", "s e\tk V n d z");
result.add("se-\tcor", "s e\tk @r");
result.add("se-\tcr-\test", "s e\tk @r\tI s t");
result.add("se-\tcre-\tcy", "s i: k\tr V\ts i:");
result.add("se-\tcu-\tla-\tri-\tsm", "s e k\tj V\tl @r\tI\tz V m");
result.add("se-\tcu-\tla-\trist", "s e k\tj V\tl @r\tV s t");
result.add("se-\tcu-\tla-\trists", "s e k\tj V\tl @r\tV s t s");
result.add("se-\tcu-\tla-\trized", "s e k\tj V\tl @r\taI z d");
result.add("se-\tcu-\tlar", "s e k\tj V\tl @r");
result.add("se-\tcu-\tri-\tti-\tza-\ttion", "s I k\tj U@\tI\tt I\tz eI\tS V n");
result.add("se-\tcu-\tri-\tti-\tzing", "s I k\tj U@\tI\tt aI\tz I N");
result.add("se-\tcu-\tri-\tties", "s I k\tj U@\tI\tt i: z");
result.add("se-\tcu-\tri-\ttize", "s I k\tj U@\tI\tt aI z");
result.add("se-\tcu-\tri-\ttized", "s I k\tj U@\tI\tt aI z d");
result.add("se-\tcu-\tri-\tty", "s I k\tj U@\tI\tt i:");
result.add("se-\tcu-\tri-\tty's", "s I k\tj U@\tI\tt i: z");
result.add("se-\tcu-\tring", "s I k\tj U@\tI N");
result.add("se-\tcun-\tda", "s I\tk V n\td V");
result.add("se-\tcure", "s I k\tj U@");
result.add("se-\tcure-\tly", "s I k\tj U@\tl i:");
result.add("se-\tcured", "s I k\tj U@ d");
result.add("se-\tcures", "s I k\tj U@ z");
result.add("se-\tda", "s eI\td V");
result.add("se-\tda-\tted", "s V\td eI\tt V d");
result.add("se-\tda-\tting", "s V\td eI\tt I N");
result.add("se-\tda-\ttion", "s V\td eI\tS V n");
result.add("se-\tda-\ttive", "s e\td V\tt I v");
result.add("se-\tdan", "s V\td { n");
result.add("se-\tdans", "s V\td { n z");
result.add("se-\tdate", "s V\td eI t");
result.add("se-\tden-\tta-\try", "s e\td V n\tt e@\ti:");
result.add("se-\tder", "s eI\td @r");
result.add("se-\tdi-\tmen-\tta-\try", "s e\td I\tm e n\tt @r\ti:");
result.add("se-\tdi-\tmen-\tta-\ttion", "s e\td I\tm e n\tt eI\tS V n");
result.add("se-\tdi-\tment", "s e\td I\tm e n t");
result.add("se-\tdi-\tments", "s e\td I\tm e n t s");
result.add("se-\tdi-\ttion", "s V\td I\tS V n");
result.add("se-\tdi-\ttious", "s V\td I\tS V s");
result.add("se-\tdo-\tna", "s V\td @U\tn V");
result.add("se-\tdu-\tcer", "s V\td u:\ts @r");
result.add("se-\tduc-\ttion", "s V\td V k\tS V n");
result.add("se-\tduc-\ttive", "s V\td V k\tt I v");
result.add("se-\tduc-\ttive-\tly", "s V\td V k\tt I v\tl i:");
result.add("se-\tduce", "s V\td u: s");
result.add("se-\tduced", "s V\td u: s t");
result.add("se-\tdum", "s e\td V m");
result.add("se-\tdums", "s e\td V m z");
result.add("se-\tga", "s i:\tg V");
result.add("se-\tgal", "s i:\tg V l");
result.add("se-\tgar", "s i:\tg @r");
result.add("se-\tgars", "s e\tg @r z");
result.add("se-\tga's", "s eI\tg V z");
result.add("se-\tger", "s i:\tg @r");
result.add("se-\tgo", "s i:\tg @U");
result.add("se-\tgo-\tvi-\ta", "s e\tg @U\tv i:\tV");
result.add("se-\tgre-\tga-\tted", "s e g\tr V\tg eI\tt V d");
result.add("se-\tgre-\tga-\tting", "s e g\tr I\tg eI\tt I N");
result.add("se-\tgre-\tga-\ttio-\tnist", "s e g\tr V\tg eI\tS V\tn V s t");
result.add("se-\tgre-\tga-\ttio-\tnists", "s e g\tr V\tg eI\tS V\tn V s t s");
result.add("se-\tgre-\tga-\ttion", "s e g\tr V\tg eI\tS V n");
result.add("se-\tgre-\tgate", "s e g\tr V\tg eI t");
result.add("se-\tgu-\tra", "s eI\tg U@\tV");
result.add("se-\tguin", "s V\tg i: n");
result.add("se-\tgun-\tdo", "s e\tg U n\td @U");
result.add("se-\tgur", "s eI\tg U@");
result.add("se-\tla", "s e\tl V");
result.add("se-\tlan-\tder", "s e\tl V n\td @r");
result.add("se-\tlas-\tsie", "s V\tl {\ts i:");
result.add("se-\tle-\tna", "s V\tl i:\tn V");
result.add("se-\tle-\tna's", "s V\tl i:\tn V z");
result.add("se-\tle-\tni-\tum", "s V\tl i:\tn i:\tV m");
result.add("se-\tle-\tnite", "s e\tl V\tn aI t");
result.add("se-\tlec-\tted", "s V\tl e k\tt V d");
result.add("se-\tlec-\tti-\tvi-\tty", "s V\tl e k\tt I\tv V\tt i:");
result.add("se-\tlec-\tting", "s V\tl e k\tt I N");
result.add("se-\tlec-\ttion", "s V\tl e k\tS V n");
result.add("se-\tlec-\ttions", "s V\tl e k\tS V n z");
result.add("se-\tlec-\ttive", "s V\tl e k\tt I v");
result.add("se-\tlec-\ttive-\tly", "s V\tl e k\tt I v\tl i:");
result.add("se-\tlect", "s V\tl e k t");
result.add("se-\tlects", "s V\tl e k t s");
result.add("se-\tlene", "s V\tl i: n");
result.add("se-\tles", "s e\tl e s");
result.add("se-\tli-\ta", "s e\tl i:\tV");
result.add("se-\tli-\tna", "s V\tl i:\tn V");
result.add("se-\tlie", "s e\tl i:");
result.add("se-\tlig", "s e\tl I g");
result.add("se-\tlig-\tman", "s e\tl I g\tm V n");
result.add("se-\tlig-\tmann", "s e\tl I g\tm V n");
result.add("se-\tlin-\tda", "s e\tl i: n\td V");
result.add("se-\tman-\ttic", "s V\tm { n\tt I k");
result.add("se-\tman-\ttics", "s V\tm { n\tt I k s");
result.add("se-\tme-\tle", "s e\tm V\tl i:");
result.add("se-\tmel", "s e\tm V l");
result.add("se-\tmen", "s i:\tm V n");
result.add("se-\tmes-\tter", "s V\tm e s\tt @r");
result.add("se-\tmes-\tters", "s V\tm e s\tt @r z");
result.add("se-\tmi", "s e\tm i:");
result.add("se-\tmi-\tan-\tnu-\tal", "s e\tm i:\t{ n\tj V\tw V l");
result.add("se-\tmi-\tan-\tnu-\tal-\tly", "s e\tm i:\t{\tn u:\tV\tl i:");
result.add("se-\tmi-\tau-\tto-\tma-\ttic", "s e\tm i:\tO:\tt V\tm {\tt I k");
result.add("se-\tmi-\tcir-\tcu-\tlar", "s e\tm i:\ts @r k\tj V\tl @r");
result.add("se-\tmi-\tclas-\tsi-\tcal", "s e\tm i: k\tl {\ts I\tk V l");
result.add("se-\tmi-\tco-\tlon", "s e\tm i:\tk @U\tl V n");
result.add("se-\tmi-\tcon-\tduc-\ttor", "s e\tm i:\tk V n\td V k\tt @r");
result.add("se-\tmi-\tcon-\tduc-\ttors", "s e\tm i:\tk V n\td V k\tt @r z");
result.add("se-\tmi-\tcon-\tduc-\ttor's", "s e\tm i:\tk V n\td V k\tt @r z");
result.add("se-\tmi-\tcy-\tlin-\tdri-\tcal", "s e\tm i:\ts V\tl I n\td r I\tk V l");
result.add("se-\tmi-\tdry", "s e\tm i: d\tr aI");
result.add("se-\tmi-\tdry-\ting", "s e\tm i: d\tr aI\tI N");
result.add("se-\tmi-\tfi-\tna-\tlist", "s e\tm i:\tf aI\tn V\tl V s t");
result.add("se-\tmi-\tfi-\tna-\tlists", "s e\tm i:\tf aI\tn V\tl V s t s");
result.add("se-\tmi-\tfi-\tnal", "s e\tm i:\tf aI\tn V l");
result.add("se-\tmi-\tfi-\tnals", "s e\tm i:\tf aI\tn V l z");
result.add("se-\tmi-\tfi-\tnish", "s e\tm i:\tf I\tn I S");
result.add("se-\tmi-\tfi-\tnished", "s e\tm i:\tf I\tn I S t");
result.add("se-\tmi-\tgloss", "s e\tm i: g\tl Q s");
result.add("se-\tmi-\tle-\tgen-\tda-\try", "s e\tm i:\tl e\tdZ V n\td e@\ti:");
result.add("se-\tmi-\tna-\tri-\tan", "s e\tm I\tn e@\ti:\tV n");
result.add("se-\tmi-\tna-\tri-\tans", "s e\tm I\tn e@\ti:\tV n z");
result.add("se-\tmi-\tna-\tries", "s e\tm I\tn e@\ti: z");
result.add("se-\tmi-\tna-\try", "s e\tm I\tn e@\ti:");
result.add("se-\tmi-\tnal", "s e\tm I\tn V l");
result.add("se-\tmi-\tnar", "s e\tm I\tn Q@");
result.add("se-\tmi-\tnars", "s e\tm I\tn Q@ z");
result.add("se-\tmi-\tnole", "s e\tm I\tn @U l");
result.add("se-\tmi-\tnoles", "s e\tm I\tn @U l z");
result.add("se-\tmi-\to-\ttic", "s i:\tm i:\tQ\tt I k");
result.add("se-\tmi-\to-\ttics", "s i:\tm i:\tQ\tt I k s");
result.add("se-\tmi-\tper-\tma-\tnent", "s e\tm i:\tp @r\tm V\tn V n t");
result.add("se-\tmi-\tpre-\tcious", "s e\tm i: p\tr e\tS V s");
result.add("se-\tmi-\tre-\tli-\tgious", "s e\tm i:\tr V\tl I\tdZ V s");
result.add("se-\tmi-\tsec-\tre-\tcy", "s e\tm i:\ts i: k\tr V\ts i:");
result.add("se-\tmi-\tti-\tsm", "s e\tm I\tt I\tz V m");
result.add("se-\tmi-\ttic", "s V\tm I\tt I k");
result.add("se-\tmi-\ttrai-\tler", "s e\tm i: t\tr eI\tl @r");
result.add("se-\tmi-\ttro-\tpi-\tcal", "s e\tm i: t\tr Q\tp I\tk V l");
result.add("se-\tmis", "s e\tm aI z");
result.add("se-\tmite", "s e\tm aI t");
result.add("se-\tna", "s e\tn V");
result.add("se-\tna-\tto-\tri-\tal", "s e\tn V\tt O@\ti:\tV l");
result.add("se-\tna-\ttor", "s e\tn V\tt @r");
result.add("se-\tna-\ttors", "s e\tn V\tt @r z");
result.add("se-\tna-\ttor's", "s e\tn V\tt @r z");
result.add("se-\tnate", "s e\tn V t");
result.add("se-\tnate's", "s e\tn V t s");
result.add("se-\tne-\tca", "s e\tn V\tk V");
result.add("se-\tne-\tcal", "s e\tn I\tk V l");
result.add("se-\tne-\tchal", "s e\tn I\tk V l");
result.add("se-\tne-\tgal", "s e\tn V\tg O: l");
result.add("se-\tne-\tsac", "s e\tn V\ts { k");
result.add("se-\tne-\tscence", "s V\tn e\ts V n s");
result.add("se-\tney", "s e\tn i:");
result.add("se-\tni-\tli-\tty", "s V\tn I\tl V\tt i:");
result.add("se-\tnile", "s i:\tn aI l");
result.add("se-\tnio-\tri-\tty", "s i: n\tj O@\tI\tt i:");
result.add("se-\tnior", "s i: n\tj @r");
result.add("se-\tniors", "s i: n\tj @r z");
result.add("se-\tno-\tra", "s i: n\tj O@\tV");
result.add("se-\tnor", "s i: n\tj O@");
result.add("se-\to", "s i:\t@U");
result.add("se-\tow", "s i:\t@U");
result.add("se-\tow's", "s i:\t@U z");
result.add("se-\tpa-\tra-\tted", "s e\tp @r\teI\tt V d");
result.add("se-\tpa-\tra-\tti-\tsm", "s e\tp @r\tV\tt I\tz V m");
result.add("se-\tpa-\tra-\tting", "s e\tp @r\teI\tt I N");
result.add("se-\tpa-\tra-\ttion", "s e\tp @r\teI\tS V n");
result.add("se-\tpa-\tra-\ttions", "s e\tp @r\teI\tS V n z");
result.add("se-\tpa-\tra-\ttist", "s e\tp @r\tV\tt V s t");
result.add("se-\tpa-\tra-\ttists", "s e\tp @r\tV\tt V s t s");
result.add("se-\tpa-\trate", "s e\tp @r\teI t");
result.add("se-\tpa-\trate-\tly", "s e\tp @r\tV t\tl i:");
result.add("se-\tpa-\trate-\tness", "s e\tp @r\tV t\tn V s");
result.add("se-\tpa-\trates", "s e\tp @r\teI t s");
result.add("se-\tphar-\tdic", "s V\tf Q@\td I k");
result.add("se-\tphar-\tdim", "s e\tf Q@\td I m");
result.add("se-\tpi-\ta", "s i:\tp i:\tV");
result.add("se-\tpul-\tve-\tda", "s eI\tp u: l\tv eI\td V");
result.add("se-\tqua", "s e k\tw V");
result.add("se-\tquel", "s i: k\tw V l");
result.add("se-\tquels", "s i: k\tw V l z");
result.add("se-\tquen-\tces", "s i: k\tw V n\ts V z");
result.add("se-\tquen-\tcing", "s i: k\tw V n\ts I N");
result.add("se-\tquen-\ttial", "s V k\tw e n\ttS V l");
result.add("se-\tquen-\ttial-\tly", "s V k\tw e n\ttS V\tl i:");
result.add("se-\tquence", "s i: k\tw V n s");
result.add("se-\tquent", "s i: k\tw V n t");
result.add("se-\tques-\tte-\tring", "s I k\tw e s\tt @r\tI N");
result.add("se-\tques-\tter", "s I k\tw e s\tt @r");
result.add("se-\tques-\ttered", "s I k\tw e s\tt @r d");
result.add("se-\tques-\tters", "s I k\tw e s\tt @r z");
result.add("se-\tques-\ttra-\ttion", "s e k\tw V s\tt r eI\tS V n");
result.add("se-\tqui-\ttur", "s e k\tw I\tt @r");
result.add("se-\tqui-\tturs", "s e k\tw I\tt @r z");
result.add("se-\tquin", "s i: k\tw I n");
result.add("se-\tquined", "s i: k\tw I n d");
result.add("se-\tquins", "s i: k\tw I n z");
result.add("se-\tquo-\tyah", "s V k\tw OI\tV");
result.add("se-\tquoi-\ta", "s I k\tw OI\tV");
result.add("se-\tquoi-\tas", "s I k\tw OI\tV z");
result.add("se-\tra", "s I@\tV");
result.add("se-\tra-\tfi-\tna", "s @r\tQ\tf i:\tn V");
result.add("se-\tra-\tfi-\tne", "s @r\tQ\tf i:\tn i:");
result.add("se-\tra-\tfin", "s e@\tV\tf I n");
result.add("se-\tra-\tphi-\tna", "s @r\tQ\tf i:\tn V");
result.add("se-\tra-\tphi-\tne", "s @r\tQ\tf i:\tn i:");
result.add("se-\traw", "s @r\tQ");
result.add("se-\tre-\tna-\tded", "s e@\tV\tn eI\td V d");
result.add("se-\tre-\tna-\tding", "s e@\tV\tn eI\td I N");
result.add("se-\tre-\tnade", "s e@\tV\tn eI d");
result.add("se-\tre-\tne-\tly", "s @r\ti:\tn V\tl i:");
result.add("se-\tre-\tni-\tty", "s @r\te\tn I\tt i:");
result.add("se-\tre-\tno", "s e@\teI\tn @U");
result.add("se-\tren-\tdi-\tpi-\ttous", "s e@\tV n\td I\tp V\tt V s");
result.add("se-\tren-\tdi-\tpi-\tty", "s e@\tV n\td I\tp V\tt i:");
result.add("se-\tren-\tge-\tti", "s e@\tV n\tg e\tt i:");
result.add("se-\trene", "s @r\ti: n");
result.add("se-\tri-\ta", "s i:\tr i:\tV");
result.add("se-\tri-\ta-\tlize", "s I@\ti:\tV\tl aI z");
result.add("se-\tri-\ta-\tlized", "s I@\ti:\tV\tl aI z d");
result.add("se-\tri-\tal", "s I@\ti:\tV l");
result.add("se-\tri-\tals", "s I@\ti:\tV l z");
result.add("se-\tri-\to", "s i:\tr i:\t@U");
result.add("se-\tri-\tous", "s I@\ti:\tV s");
result.add("se-\tri-\tous-\tly", "s I@\ti:\tV s\tl i:");
result.add("se-\tri-\tous-\tness", "s I@\ti:\tV s\tn V s");
result.add("se-\tries", "s I@\ti: z");
result.add("se-\tril-\tda", "s @r\ti: l\td V");
result.add("se-\tro-\tka", "s e@\t@U\tk V");
result.add("se-\tro-\tlo-\tgi-\tcal", "s e@\tV\tl O:\tdZ I\tk V l");
result.add("se-\tro-\tlo-\tgist", "s e@\tQ\tl V\tdZ V s t");
result.add("se-\tro-\tlo-\tgy", "s e@\tQ\tl V\tdZ i:");
result.add("se-\tro-\tto-\tnin", "s @r\tV\tt @U\tn I n");
result.add("se-\trum", "s I@\tV m");
result.add("se-\tsa-\tme", "s e\ts V\tm i:");
result.add("se-\tthi", "s e\tT i:");
result.add("se-\tti", "s e\tt i:");
result.add("se-\tto", "s e\tt @U");
result.add("se-\tton", "s i:\tt V n");
result.add("se-\tve-\trance", "s e\tv @r\tV n s");
result.add("se-\tve-\trest", "s V\tv I@\tV s t");
result.add("se-\tve-\tri-\tni", "s e\tv @r\ti:\tn i:");
result.add("se-\tve-\tri-\tty", "s I\tv e@\tV\tt i:");
result.add("se-\tve-\trin", "s e\tv @r\tI n");
result.add("se-\tve-\tring", "s e\tv @r\tI N");
result.add("se-\tven", "s e\tv V n");
result.add("se-\tven-\tfold", "s e\tv V n\tf @U l d");
result.add("se-\tven-\tteen", "s e\tv V n\tt i: n");
result.add("se-\tven-\tteens", "s e\tv V n\tt i: n z");
result.add("se-\tven-\tteenth", "s e\tv V n\tt i: n T");
result.add("se-\tven-\tti-\teth", "s e\tv V n\tt i:\tV T");
result.add("se-\tven-\tties", "s e\tv V n\tt i: z");
result.add("se-\tven-\tty", "s e\tv V n\tt i:");
result.add("se-\tven-\tty's", "s e\tv V n\tt i: z");
result.add("se-\tvens", "s e\tv V n z");
result.add("se-\tven's", "s e\tv V n z");
result.add("se-\tventh", "s e\tv V n T");
result.add("se-\tvenths", "s e\tv V n T s");
result.add("se-\tver", "s e\tv @r");
result.add("se-\tver-\tson", "s e\tv @r\ts V n");
result.add("se-\tvere", "s V\tv I@");
result.add("se-\tvere-\tly", "s V\tv I@\tl i:");
result.add("se-\tvered", "s e\tv @r d");
result.add("se-\tvern", "s e\tv @r n");
result.add("se-\tvers", "s e\tv @r z");
result.add("se-\tvier", "s e v\tj @r");
result.add("se-\tvil-\tla", "s e\tv I\tl V");
result.add("se-\tville", "s V\tv I l");
result.add("se-\tvin", "s e\tv I n");
result.add("se-\twage", "s u:\tI dZ");
result.add("se-\tward", "s u:\t@r d");
result.add("se-\twe-\trage", "s u:\t@r\tI dZ");
result.add("se-\twell", "s u:\tV l");
result.add("se-\twer", "s u:\t@r");
result.add("se-\twers", "s u:\t@r z");
result.add("se-\twing", "s @U\tI N");
result.add("se-\txes", "s e k\ts V z");
result.add("se-\txi-\ter", "s e k\ts i:\t@r");
result.add("se-\txi-\test", "s e k\ts i:\tV s t");
result.add("se-\txi-\tsm", "s e k\ts I\tz V m");
result.add("se-\txist", "s e k\ts I s t");
result.add("se-\txy", "s e k\ts i:");
result.add("sea", "s i:");
result.add("sea-\tbeach", "s i:\tb i: tS");
result.add("sea-\tbed", "s i:\tb e d");
result.add("sea-\tbee", "s i:\tb i:");
result.add("sea-\tbees", "s i:\tb i: z");
result.add("sea-\tber-\try", "s i:\tb e@\ti:");
result.add("sea-\tboard", "s i:\tb O@ d");
result.add("sea-\tborne", "s i:\tb O@ n");
result.add("sea-\tbrook", "s i: b\tr U k");
result.add("sea-\tbrook's", "s i: b\tr U k s");
result.add("sea-\tbu-\try", "s i:\tb e@\ti:");
result.add("sea-\tcoast", "s i:\tk @U s t");
result.add("sea-\tdrift", "s i: d\tr I f t");
result.add("sea-\tfa-\trer", "s i:\tf e@\t@r");
result.add("sea-\tfa-\trers", "s i:\tf e@\t@r z");
result.add("sea-\tfood", "s i:\tf u: d");
result.add("sea-\tfoods", "s i:\tf u: d z");
result.add("sea-\tford", "s i:\tf @r d");
result.add("sea-\tfront", "s i: f\tr V n t");
result.add("sea-\tgate", "s i:\tg eI t");
result.add("sea-\tgate's", "s i:\tg eI t s");
result.add("sea-\tgo-\ting", "s i:\tg @U\tI N");
result.add("sea-\tgram", "s i: g\tr V m");
result.add("sea-\tgram's", "s i: g\tr V m z");
result.add("sea-\tgrave", "s i: g\tr eI v");
result.add("sea-\tgraves", "s i: g\tr eI v z");
result.add("sea-\tgull", "s i:\tg V l");
result.add("sea-\tgulls", "s i:\tg V l z");
result.add("sea-\thawk", "s i:\th O: k");
result.add("sea-\thawks", "s i:\th O: k s");
result.add("sea-\tlant", "s i:\tl V n t");
result.add("sea-\tlants", "s i:\tl V n t s");
result.add("sea-\tler", "s i:\tl @r");
result.add("sea-\tlift", "s i:\tl I f t");
result.add("sea-\tling", "s i:\tl I N");
result.add("sea-\tly", "s i:\tl i:");
result.add("sea-\tman", "s i:\tm V n");
result.add("sea-\tman's", "s i:\tm V n z");
result.add("sea-\tmen", "s i:\tm V n");
result.add("sea-\tmus", "S eI\tm V s");
result.add("sea-\tmy", "s i:\tm i:");
result.add("sea-\tnor", "s i:\tn @r");
result.add("sea-\tport", "s i:\tp O@ t");
result.add("sea-\tports", "s i:\tp O@ t s");
result.add("sea-\tring", "s I@\tI N");
result.add("sea-\tshell", "s i:\tS e l");
result.add("sea-\tshells", "s i:\tS e l z");
result.add("sea-\tshore", "s i:\tS O@");
result.add("sea-\tsick", "s i:\ts I k");
result.add("sea-\tside", "s i:\ts aI d");
result.add("sea-\tso-\tna-\tble", "s i:\tz V\tn V\tb V l");
result.add("sea-\tso-\tna-\tli-\tty", "s i:\tz V\tn {\tl V\tt i:");
result.add("sea-\tso-\tnal", "s i:\tz V\tn V l");
result.add("sea-\tso-\tnal-\tly", "s i:\tz V\tn V\tl i:");
result.add("sea-\tso-\tning", "s i:\tz V\tn I N");
result.add("sea-\tso-\tnings", "s i:\tz V\tn I N z");
result.add("sea-\tson", "s i:\tz V n");
result.add("sea-\tsoned", "s i:\tz V n d");
result.add("sea-\tsons", "s i:\tz V n z");
result.add("sea-\tson's", "s i:\tz V n z");
result.add("sea-\tstrand", "s i: s\tt r { n d");
result.add("sea-\tted", "s i:\tt V d");
result.add("sea-\tter", "s i:\tt @r");
result.add("sea-\tting", "s i:\tt I N");
result.add("sea-\ttings", "s i:\tt I N z");
result.add("sea-\tto", "s i:\tt @U");
result.add("sea-\tton", "s i:\tt V n");
result.add("sea-\ttrain", "s i: t\tr eI n");
result.add("sea-\tver", "s i:\tv @r");
result.add("sea-\tvey", "s i:\tv i:");
result.add("sea-\twa-\tter", "s i:\tw Q\tt @r");
result.add("sea-\tward", "s i:\tw @r d");
result.add("sea-\tway", "s i:\tw eI");
result.add("sea-\tweed", "s i:\tw i: d");
result.add("sea-\tweeds", "s i:\tw i: d z");
result.add("sea-\twor-\tthy", "s i:\tw O@\tD i:");
result.add("seal", "s i: l");
result.add("seale", "s i: l");
result.add("sealed", "s i: l d");
result.add("seals", "s i: l z");
result.add("seal's", "s i: l z");
result.add("seam", "s i: m");
result.add("seam-\tless", "s i: m\tl V s");
result.add("seam-\tless-\tly", "s i: m\tl V s\tl i:");
result.add("seam-\tster", "s i: m\ts t @r");
result.add("seams", "s i: m z");
result.add("seams-\ttres-\tses", "s i: m\ts t r V\ts V z");
result.add("seams-\ttress", "s i: m\ts t r V s");
result.add("sean", "S O: n");
result.add("sean's", "S O: n z");
result.add("sear", "s I@");
result.add("sear-\tcher", "s @r\ttS @r");
result.add("sear-\tchers", "s @r\ttS @r z");
result.add("sear-\tches", "s @r\ttS V z");
result.add("sear-\tching", "s @r\ttS I N");
result.add("sear-\ts's", "s I@\tz V z");
result.add("search", "s @r tS");
result.add("search-\tlight", "s @r tS\tl aI t");
result.add("search-\tlights", "s @r tS\tl aI t s");
result.add("searched", "s @r tS t");
result.add("seared", "s I@ d");
result.add("searle", "s @r l");
result.add("searles", "s @r l z");
result.add("searle's", "s @r l z");
result.add("sears", "s I@ z");
result.add("seas", "s i: z");
result.add("sea's", "s i: z");
result.add("sease", "s i: z");
result.add("seat", "s i: t");
result.add("seat-\tbelt", "s i: t\tb e l t");
result.add("seat-\tbelts", "s i: t\tb e l t s");
result.add("seats", "s i: t s");
result.add("seat's", "s i: t s");
result.add("seb-\tring", "s i: b\tr I N");
result.add("sec", "s e k");
result.add("sec-\tkel", "s e\tk V l");
result.add("sec-\tlu-\tded", "s I k\tl u:\td V d");
result.add("sec-\tlu-\tsion", "s I k\tl u:\tZ V n");
result.add("sec-\tlude", "s I k\tl u: d");
result.add("sec-\tre-\tta-\tri-\tal", "s e k\tr V\tt e@\ti:\tV l");
result.add("sec-\tre-\tta-\tri-\tat", "s e k\tr V\tt e@\ti:\tV t");
result.add("sec-\tre-\tta-\tries", "s e k\tr V\tt e@\ti: z");
result.add("sec-\tre-\tta-\try", "s e k\tr V\tt e@\ti:");
result.add("sec-\tre-\tta-\try's", "s e k\tr V\tt e@\ti: z");
result.add("sec-\tre-\tted", "s V k\tr i:\tt V d");
result.add("sec-\tre-\ttion", "s V k\tr i:\tS V n");
result.add("sec-\tre-\ttions", "s V k\tr i:\tS V n z");
result.add("sec-\tre-\ttive", "s i: k\tr V\tt I v");
result.add("sec-\tre-\ttive-\tness", "s i: k\tr V\tt I v\tn V s");
result.add("sec-\tret", "s i: k\tr V t");
result.add("sec-\tret-\tly", "s i: k\tr V t\tl i:");
result.add("sec-\trete", "s I k\tr i: t");
result.add("sec-\trets", "s i: k\tr V t s");
result.add("sec-\tta-\tri-\ta-\tni-\tsm", "s e k\tt e@\ti:\tV\tn I\tz V m");
result.add("sec-\tta-\tri-\tan", "s e k\tt e@\ti:\tV n");
result.add("sec-\ttio-\tnal", "s e k\tS V\tn V l");
result.add("sec-\ttio-\tning", "s e k\tS V\tn I N");
result.add("sec-\ttion", "s e k\tS V n");
result.add("sec-\ttioned", "s e k\tS V n d");
result.add("sec-\ttions", "s e k\tS V n z");
result.add("sec-\ttion's", "s e k\tS V n z");
result.add("sec-\tto-\tral", "s e k\tt @r\tV l");
result.add("sec-\ttor", "s e k\tt @r");
result.add("sec-\ttors", "s e k\tt @r z");
result.add("sec-\ttor's", "s e k\tt @r z");
result.add("seck", "s e k");
result.add("sect", "s e k t");
result.add("sects", "s e k t s");
result.add("sect's", "s e k t s");
result.add("sed-\tber-\try", "s e d\tb e@\ti:");
result.add("sed-\tdon", "s e\td V n");
result.add("sedg-\twick", "s e dZ\tw I k");
result.add("sedge", "s e dZ");
result.add("sedge-\twick", "s e dZ\tw I k");
result.add("see", "s i:");
result.add("see-\tbeck", "s i:\tb e k");
result.add("see-\tded", "s i:\td V d");
result.add("see-\tding", "s i:\td I N");
result.add("see-\tdy", "s i:\td i:");
result.add("see-\tger", "s i:\tg @r");
result.add("see-\ting", "s i:\tI N");
result.add("see-\tker", "s i:\tk @r");
result.add("see-\tkers", "s i:\tk @r z");
result.add("see-\tker's", "s i:\tk @r z");
result.add("see-\tking", "s i:\tk I N");
result.add("see-\tkonk", "s i:\tk Q N k");
result.add("see-\tley", "s i:\tl i:");
result.add("see-\tling", "s i:\tl I N");
result.add("see-\tly", "s i:\tl i:");
result.add("see-\tma", "s i:\tm Q");
result.add("see-\tming", "s i:\tm I N");
result.add("see-\tming-\tly", "s i:\tm I N\tl i:");
result.add("see-\tpage", "s i:\tp I dZ");
result.add("see-\tping", "s i:\tp I N");
result.add("see-\tsaw", "s i:\ts O:");
result.add("see-\tsaw-\ting", "s i:\ts O:\tI N");
result.add("see-\tsawed", "s i:\ts O: d");
result.add("see-\tthing", "s i:\tT I N");
result.add("seed", "s i: d");
result.add("seed-\tea-\tter", "s i:\td i:\tt @r");
result.add("seed-\tea-\tters", "s i:\td i:\tt @r z");
result.add("seed-\tling", "s i: d\tl I N");
result.add("seed-\tlings", "s i: d\tl I N z");
result.add("seed-\tpod", "s i: d\tp Q d");
result.add("seeds", "s i: d z");
result.add("seeds-\tman", "s i: d\tz m V n");
result.add("seek", "s i: k");
result.add("seeks", "s i: k s");
result.add("seel", "s i: l");
result.add("seem", "s i: m");
result.add("seemed", "s i: m d");
result.add("seems", "s i: m z");
result.add("seen", "s i: n");
result.add("seep", "s i: p");
result.add("seeped", "s i: p t");
result.add("seeps", "s i: p s");
result.add("seer", "s i: r");
result.add("seers", "s i: r z");
result.add("sees", "s i: z");
result.add("seethe", "s i: D");
result.add("sef-\tton", "s e f\tt V n");
result.add("seg-\tmen-\tta-\ttion", "s e g\tm V n\tt eI\tS V n");
result.add("seg-\tmen-\tted", "s e g\tm e n\tt V d");
result.add("seg-\tment", "s e g\tm V n t");
result.add("seg-\tments", "s e g\tm V n t s");
result.add("seg-\tment's", "s e g\tm V n t s");
result.add("seg-\tner", "s e g\tn @r");
result.add("segue", "s e g");
result.add("sei-\tber", "s aI\tb @r");
result.add("sei-\tbert", "s aI\tb @r t");
result.add("sei-\tbold", "s aI\tb @U l d");
result.add("sei-\tdel", "s aI\td V l");
result.add("sei-\tden", "s aI\td V n");
result.add("sei-\tfert", "s aI\tf @r t");
result.add("sei-\tg-\tler", "s aI\tg V\tl @r");
result.add("sei-\tgel", "s aI\tg V l");
result.add("sei-\tko", "s eI\tk @U");
result.add("sei-\tne", "s eI\tn i:");
result.add("sei-\tser", "s aI\ts @r");
result.add("sei-\tter", "s aI\tt @r");
result.add("sei-\tzes", "s i:\tz V z");
result.add("sei-\tzing", "s i:\tz I N");
result.add("sei-\tzure", "s i:\tZ @r");
result.add("sei-\tzures", "s i:\tZ @r z");
result.add("seid", "s aI d");
result.add("seid-\tler", "s aI d\tl @r");
result.add("seif", "s i: f");
result.add("seig-\tni-\to-\trage", "s i: g\tn i:\t@r\tI dZ");
result.add("seige", "s i: dZ");
result.add("seil", "s aI l");
result.add("seils", "s aI l z");
result.add("sein-\tfeld", "s aI n\tf e l d");
result.add("sein-\tfeld's", "s aI n\tf e l d z");
result.add("seis", "s i: s");
result.add("seis-\tmic", "s aI z\tm I k");
result.add("seis-\tmo-\tlo-\tgist", "s aI z\tm Q\tl V\tdZ V s t");
result.add("seis-\tmo-\tlo-\tgists", "s aI z\tm Q\tl V\tdZ V s t s");
result.add("seis-\tmo-\tlo-\tgy", "s aI z\tm Q\tl V\tdZ i:");
result.add("seitz", "s aI t s");
result.add("seize", "s i: z");
result.add("seized", "s i: z d");
result.add("sejm", "s eI m");
result.add("sel-\tby", "s e l\tb i:");
result.add("sel-\tda", "s e l\td V");
result.add("sel-\tden", "s e l\td V n");
result.add("sel-\tdom", "s e l\td V m");
result.add("sel-\tdon", "s e l\td V n");
result.add("sel-\tfish", "s e l\tf I S");
result.add("sel-\tfish-\tness", "s e l\tf I S\tn V s");
result.add("sel-\tkirk", "s e l\tk @r k");
result.add("sel-\tkirk's", "s e l\tk @r k s");
result.add("sel-\tla", "s e\tl V");
result.add("sel-\tlar-\ts's", "s e\tl @r\tz V z");
result.add("sel-\tlars", "s e\tl @r z");
result.add("sel-\tler", "s e\tl @r");
result.add("sel-\tlers", "s e\tl @r z");
result.add("sel-\tler's", "s e\tl @r z");
result.add("sel-\tlers'", "s e\tl @r z");
result.add("sel-\tling", "s e\tl I N");
result.add("sel-\tma", "s e l\tm V");
result.add("sel-\tmer", "s e l\tm @r");
result.add("sel-\tva", "s eI l\tv V");
result.add("sel-\tvage", "s e l\tv I dZ");
result.add("sel-\tway", "s e l\tw eI");
result.add("sel-\twin", "s e l\tw I n");
result.add("sel-\twyn", "s e l\tw I n");
result.add("self", "s e l f");
result.add("self-\tag-\tgran-\tdi-\tzing", "s e l\tf V g\tr { n\td aI\tz I N");
result.add("self-\tag-\tgran-\tdize-\tment", "s e l\tf { g\tr V n\td aI z\tm V n t");
result.add("self-\tcon-\tfi-\tdence", "s e l\tf k Q n\tf I\td e n s");
result.add("self-\tcon-\tfi-\tdent", "s e l\tf k Q n\tf I\td e n t");
result.add("self-\tcon-\tsis-\ttent", "s e l\tf k V n\ts I s\tt V n t");
result.add("self-\tcon-\ttained", "s e l\tf k V n\tt eI n d");
result.add("self-\tcong-\tra-\ttu-\tla-\ttion", "s e l\tf k V n\tg r {\ttS V\tl eI\tS V n");
result.add("self-\tcont-\trol", "s e l\tf k V n\tt r @U l");
result.add("self-\tde-\tcei-\tving", "s e l\tf d i:\ts i:\tv I N");
result.add("self-\tde-\tcep-\ttion", "s e l\tf d V\ts e p\tS V n");
result.add("self-\tde-\tter-\tmi-\tna-\ttion", "s e l\tf d V\tt @r\tm V\tn eI\tS V n");
result.add("self-\tdep-\tre-\tca-\tting", "s e l\tf d e p\tr V\tk eI\tt I N");
result.add("self-\ten-\trich-\tment", "s e l\tf V n\tr I tS\tm V n t");
result.add("self-\tgo-\tver-\tning", "s e l\tf g V\tv @r\tn I N");
result.add("self-\tgo-\tvern-\tment", "s e l\tf g V\tv @r n\tm V n t");
result.add("self-\thelp", "s e l\tf h e l p");
result.add("self-\timp-\trove-\tment", "s e l\tf I m\tp r u: v\tm V n t");
result.add("self-\tless", "s e l\tf l V s");
result.add("self-\tless-\tness", "s e l\tf l V s\tn V s");
result.add("self-\tper-\tpe-\ttu-\ta-\tting", "s e l\tf p @r\tp e\ttS u:\teI\tt I N");
result.add("self-\tper-\tpe-\ttu-\ta-\ttion", "s e l\tf p @r\tp e\ttS u:\teI\tS V n");
result.add("self-\tport-\trait", "s e l\tf p O@ t\tr eI t");
result.add("self-\tpro-\tfessed", "s e l\tf p r V\tf e s t");
result.add("self-\tridge", "s e l\tf r I dZ");
result.add("self-\tsub-\tsis-\ttence", "s e l\tf s V b\ts I s\tt V n s");
result.add("self-\tsuf-\tfi-\tcien-\tcy", "s e l\tf s V\tf I\tS V n\ts i:");
result.add("self-\tsuf-\tfi-\tcient", "s e l\tf s V\tf I\tS V n t");
result.add("self-\ttor-\tment", "s e l\tf t O@\tm e n t");
result.add("selfs", "s e l f s");
result.add("self's", "s e l f s");
result.add("sell", "s e l");
result.add("sell-\toff", "s e\tl O: f");
result.add("sell-\toffs", "s e\tl O: f s");
result.add("sell-\tout", "s e\tl aU t");
result.add("sell-\touts", "s e\tl aU t s");
result.add("selle", "s e l");
result.add("sells", "s e l z");
result.add("selt-\tzer", "s e l\tt s @r");
result.add("selves", "s e l v z");
result.add("selz", "s e l z");
result.add("sem-\tblance", "s e m\tb l V n s");
result.add("sem-\tmel", "s e\tm V l");
result.add("sem-\tple", "s e m\tp V l");
result.add("sem-\ttex", "s e m\tt e k s");
result.add("semmes", "s e m z");
result.add("sen", "s e n");
result.add("sen-\tdak", "s e n\td { k");
result.add("sen-\tder", "s e n\td @r");
result.add("sen-\tders", "s e n\td @r z");
result.add("sen-\tding", "s e n\td I N");
result.add("sen-\tna", "s e\tn V");
result.add("sen-\tnet", "s e\tn V t");
result.add("sen-\tnett", "s e\tn e t");
result.add("sen-\tsa-\ttio-\tna-\tli-\tsm", "s e n\ts eI\tS V\tn V\tl I\tz V m");
result.add("sen-\tsa-\ttio-\tna-\tli-\tzes", "s e n\ts eI\tS V\tn V\tl aI\tz V z");
result.add("sen-\tsa-\ttio-\tna-\tli-\tzing", "s e n\ts eI\tS V\tn V\tl aI\tz I N");
result.add("sen-\tsa-\ttio-\tna-\tlis-\ttic", "s e n\ts eI\tS V\tn V\tl I s\tt I k");
result.add("sen-\tsa-\ttio-\tna-\tlist", "s e n\ts eI\tS V\tn V\tl I s t");
result.add("sen-\tsa-\ttio-\tna-\tlize", "s e n\ts eI\tS V\tn V\tl aI z");
result.add("sen-\tsa-\ttio-\tna-\tlized", "s e n\ts eI\tS V\tn V\tl aI z d");
result.add("sen-\tsa-\ttio-\tnal", "s e n\ts eI\tS V\tn V l");
result.add("sen-\tsa-\ttion", "s e n\ts eI\tS V n");
result.add("sen-\tsa-\ttions", "s e n\ts eI\tS V n z");
result.add("sen-\tses", "s e n\ts V z");
result.add("sen-\tsi-\tbi-\tli-\tties", "s e n\ts I\tb I\tl I\tt i: z");
result.add("sen-\tsi-\tbi-\tli-\tty", "s e n\ts I\tb I\tl I\tt i:");
result.add("sen-\tsi-\tble", "s e n\ts I\tb V l");
result.add("sen-\tsi-\tti-\tvi-\tties", "s e n\ts I\tt I\tv I\tt i: z");
result.add("sen-\tsi-\tti-\tvi-\tty", "s e n\ts I\tt I\tv I\tt i:");
result.add("sen-\tsi-\ttive", "s e n\ts I\tt I v");
result.add("sen-\tsi-\ttive-\tly", "s e n\ts I\tt I v\tl i:");
result.add("sen-\tsi-\ttive-\tness", "s e n\ts I\tt I v\tn e s");
result.add("sen-\tsi-\ttize", "s e n\ts I\tt aI z");
result.add("sen-\tsi-\ttized", "s e n\ts I\tt aI z d");
result.add("sen-\tsib-\tly", "s e n\ts I b\tl i:");
result.add("sen-\tsing", "s e n\ts I N");
result.add("sen-\tso-\try", "s e n\ts @r\ti:");
result.add("sen-\tsor", "s e n\ts @r");
result.add("sen-\tsors", "s e n\ts @r z");
result.add("sen-\tsor's", "s e n\ts @r z");
result.add("sen-\tsu-\ta-\tli-\tty", "s e n\ttS V\tw {\tl V\tt i:");
result.add("sen-\tsu-\tal", "s e n\ttS V\tw V l");
result.add("sen-\tsu-\tous", "s e n\ttS V\tw V s");
result.add("sen-\tten-\tces", "s e n\tt V n\ts V z");
result.add("sen-\tten-\tcing", "s e n\tt V n\ts I N");
result.add("sen-\ttence", "s e n\tt V n s");
result.add("sen-\ttenced", "s e n\tt V n s t");
result.add("sen-\tti-\tmen-\tta-\tli-\tty", "s e n\tt I\tm e n\tt {\tl I\tt i:");
result.add("sen-\tti-\tmen-\ttal", "s e n\tt I\tm e n\tt V l");
result.add("sen-\tti-\tment", "s e n\tt I\tm e n t");
result.add("sen-\tti-\tments", "s e n\tt I\tm e n t s");
result.add("sen-\tti-\tnel", "s e n\tt I\tn e l");
result.add("sen-\tti-\tnels", "s e n\tt I\tn e l z");
result.add("send", "s e n d");
result.add("sends", "s e n d z");
result.add("senn", "s e n");
result.add("sens", "s e n z");
result.add("sense", "s e n s");
result.add("sense-\tless", "s e n\ts l V s");
result.add("sensed", "s e n s t");
result.add("sent", "s e n t");
result.add("sent-\tries", "s e n\tt r i: z");
result.add("sent-\try", "s e n\tt r i:");
result.add("seoul", "s @U l");
result.add("seoul's", "s @U l z");
result.add("sep", "s e p");
result.add("sep-\tpa-\tla", "s e\tp Q\tl V");
result.add("sep-\tsis", "s e p\ts I s");
result.add("sep-\tta", "s e p\tt V");
result.add("sep-\ttem-\tber", "s e p\tt e m\tb @r");
result.add("sep-\ttem-\tber's", "s e p\tt e m\tb @r z");
result.add("sep-\tti-\tma", "s e p\tt i:\tm V");
result.add("sep-\ttic", "s e p\tt I k");
result.add("sep-\ttu-\ta-\tge-\tna-\tri-\tan", "s e p\ttS u:\tV\tdZ V\tn e@\ti:\tV n");
result.add("sept", "s e p t");
result.add("ser-\tbi-\ta", "s @r\tb i:\tV");
result.add("ser-\tbi-\tan", "s @r\tb i:\tV n");
result.add("ser-\tbi-\tans", "s @r\tb i:\tV n z");
result.add("ser-\tbi-\ta's", "s @r\tb i:\tV z");
result.add("ser-\tgeant", "s Q@\tdZ V n t");
result.add("ser-\tgeants", "s Q@\tdZ V n t s");
result.add("ser-\tgei", "s @r\tg eI");
result.add("ser-\tgent", "s @r\tdZ V n t");
result.add("ser-\tgi-\to", "s @r\tdZ i:\t@U");
result.add("ser-\tgi-\tus", "s @r\tdZ i:\tV s");
result.add("ser-\tle", "s O@\tV l");
result.add("ser-\tmon", "s @r\tm V n");
result.add("ser-\tmons", "s @r\tm V n z");
result.add("ser-\tpen-\ttine", "s @r\tp V n\tt aI n");
result.add("ser-\tpent", "s @r\tp V n t");
result.add("ser-\tpents", "s @r\tp V n t s");
result.add("ser-\tpent's", "s @r\tp V n t s");
result.add("ser-\tra", "s e@\tV");
result.add("ser-\tra-\tno", "s @r\tQ\tn @U");
result.add("ser-\tra-\tno's", "s @r\tQ\tn @U z");
result.add("ser-\tra-\tted", "s e@\teI\tt V d");
result.add("ser-\tra's", "s e@\tV z");
result.add("ser-\trate", "s e@\teI t");
result.add("ser-\tres", "s e@\te s");
result.add("ser-\tvais", "s @r\tv eI");
result.add("ser-\tvant", "s @r\tv V n t");
result.add("ser-\tvants", "s @r\tv V n t s");
result.add("ser-\tver", "s @r\tv @r");
result.add("ser-\tvers", "s @r\tv @r z");
result.add("ser-\tvi-\tcea-\tble", "s @r\tv V\ts V\tb V l");
result.add("ser-\tvi-\tcer", "s @r\tv V\ts @r");
result.add("ser-\tvi-\tces", "s @r\tv V\ts V z");
result.add("ser-\tvi-\tce's", "s @r\tv V\ts V z");
result.add("ser-\tvi-\tcing", "s @r\tv V\ts I N");
result.add("ser-\tvi-\ttude", "s @r\tv V\tt u: d");
result.add("ser-\tvice", "s @r\tv V s");
result.add("ser-\tvice-\tman", "s @r\tv V s\tm { n");
result.add("ser-\tvice-\tmen", "s @r\tv V s\tm e n");
result.add("ser-\tviced", "s @r\tv V s t");
result.add("ser-\tvile", "s @r\tv V l");
result.add("ser-\tving", "s @r\tv I N");
result.add("ser-\tvings", "s @r\tv I N z");
result.add("ser-\tvo", "s @r\tv @U");
result.add("serb", "s @r b");
result.add("serbs", "s @r b z");
result.add("serb's", "s @r b z");
result.add("sere", "s I@");
result.add("seres", "s i: r z");
result.add("serf", "s @r f");
result.add("serfs", "s @r f s");
result.add("serge", "s @r dZ");
result.add("serr", "s e@");
result.add("serv", "s @r v");
result.add("serve", "s @r v");
result.add("served", "s @r v d");
result.add("serves", "s @r v z");
result.add("ses-\tsa", "s e\ts V");
result.add("ses-\tsion", "s e\tS V n");
result.add("ses-\tsions", "s e\tS V n z");
result.add("ses-\tsion's", "s e\tS V n z");
result.add("sess-\tler", "s e s\tl @r");
result.add("set", "s e t");
result.add("set-\tback", "s e t\tb { k");
result.add("set-\tbacks", "s e t\tb { k s");
result.add("set-\tt-\tler", "s e\tt V\tl @r");
result.add("set-\tt-\tling", "s e\tt V\tl I N");
result.add("set-\tter", "s e\tt @r");
result.add("set-\tters", "s e\tt @r z");
result.add("set-\tting", "s e\tt I N");
result.add("set-\ttings", "s e\tt I N z");
result.add("set-\ttle", "s e\tt V l");
result.add("set-\ttle-\tment", "s e\tt V l\tm V n t");
result.add("set-\ttle-\tments", "s e\tt V l\tm V n t s");
result.add("set-\ttle-\tment's", "s e\tt V l\tm V n t s");
result.add("set-\ttled", "s e\tt V l d");
result.add("set-\ttles", "s e\tt V l z");
result.add("set-\tup", "s e\tt V p");
result.add("set-\tups", "s e\tt V p s");
result.add("seth", "s e T");
result.add("seth's", "s e T s");
result.add("sets", "s e t s");
result.add("sett-\tlers", "s e t\tl @r z");
result.add("seuss", "s u: s");
result.add("sev-\tru-\tga", "s e v\tr u:\tg V");
result.add("seve-\tral", "s e v\tr V l");
result.add("seve-\tral-\tly", "s e v\tr V\tl i:");
result.add("sew", "s @U");
result.add("sewed", "s @U d");
result.add("sewn", "s @U n");
result.add("sex", "s e k s");
result.add("sex-\tless", "s e k\ts l V s");
result.add("sex-\ttet", "s e k\ts t e t");
result.add("sex-\tton", "s e k\ts t V n");
result.add("sex-\ttup-\tlet", "s e k\ts t V p\tl V t");
result.add("sex-\ttup-\tlets", "s e k\ts t V p\tl V t s");
result.add("sex-\ttus", "s e k\ts t V s");
result.add("sex-\tu-\ta-\tli-\tty", "s e k\tS u:\t{\tl V\tt i:");
result.add("sex-\tu-\tal", "s e k\tS u:\tV l");
result.add("sex-\tu-\tal-\tly", "s e k\tS u:\tV\tl i:");
result.add("sexed", "s e k s t");
result.add("sey-\tfert", "s eI\tf @r t");
result.add("sey-\tler", "s eI\tl @r");
result.add("sey-\tmour", "s i:\tm O@");
result.add("sey-\tmour's", "s i:\tm O@ z");
result.add("sfor-\tza", "s f O@\tz V");
result.add("sha", "S Q");
result.add("sha-\tded", "S eI\td V d");
result.add("sha-\tder", "S eI\td @r");
result.add("sha-\tding", "S eI\td I N");
result.add("sha-\tdings", "S eI\td I N z");
result.add("sha-\tdo-\twy", "S {\td @U\ti:");
result.add("sha-\tdow", "S {\td @U");
result.add("sha-\tdow-\ting", "S {\td @U\tI N");
result.add("sha-\tdow-\tland", "S {\td @U\tl { n d");
result.add("sha-\tdow-\tlands", "S {\td @U\tl { n d z");
result.add("sha-\tdowed", "S {\td @U d");
result.add("sha-\tdows", "S {\td @U z");
result.add("sha-\tdy", "S eI\td i:");
result.add("sha-\ter", "S eI\t@r");
result.add("sha-\tfer", "S eI\tf @r");
result.add("sha-\theen", "S V\th i: n");
result.add("sha-\thin", "S {\th I n");
result.add("sha-\tka", "S Q\tk V");
result.add("sha-\tken", "S eI\tk V n");
result.add("sha-\tker", "S eI\tk @r");
result.add("sha-\tkers", "S eI\tk @r z");
result.add("sha-\tki-\ter", "S eI\tk i:\t@r");
result.add("sha-\tki-\test", "S eI\tk i:\tV s t");
result.add("sha-\tki-\tness", "S eI\tk i:\tn V s");
result.add("sha-\tking", "S eI\tk I N");
result.add("sha-\tky", "S eI\tk i:");
result.add("sha-\tlom", "S V\tl @U m");
result.add("sha-\tman", "S eI\tm V n");
result.add("sha-\tmans", "S eI\tm V n z");
result.add("sha-\tmas", "S {\tm V s");
result.add("sha-\tming", "S eI\tm I N");
result.add("sha-\tmir", "S V\tm I@");
result.add("sha-\tmus", "S eI\tm V s");
result.add("sha-\tna", "S {\tn V");
result.add("sha-\tna-\than", "S {\tn V\th { n");
result.add("sha-\tner", "S eI\tn @r");
result.add("sha-\tpi-\tro", "S V\tp I@\t@U");
result.add("sha-\tpi-\tro's", "S V\tp I@\t@U z");
result.add("sha-\tping", "S eI\tp I N");
result.add("sha-\tra", "S Q@\tV");
result.add("sha-\trer", "S e@\t@r");
result.add("sha-\tri", "S Q@\ti:");
result.add("sha-\tri-\ta", "S e@\ti:\tV");
result.add("sha-\trif", "S @r\ti: f");
result.add("sha-\tring", "S e@\tI N");
result.add("sha-\tron", "S e@\tV n");
result.add("sha-\tron's", "S e@\tV n z");
result.add("sha-\tryl", "S e@\tV l");
result.add("sha-\tven", "S eI\tv V n");
result.add("sha-\tver", "S eI\tv @r");
result.add("sha-\tvers", "S eI\tv @r z");
result.add("sha-\tving", "S eI\tv I N");
result.add("sha-\tvings", "S eI\tv I N z");
result.add("shab-\tby", "S {\tb i:");
result.add("shac-\tkle", "S {\tk V l");
result.add("shac-\tkle-\tton", "S {\tk V l\tt V n");
result.add("shac-\tkled", "S {\tk V l d");
result.add("shac-\tkles", "S {\tk V l z");
result.add("shack", "S { k");
result.add("shacks", "S { k s");
result.add("shad", "S { d");
result.add("shad-\tbush", "S { d\tb U S");
result.add("shad-\tdock", "S {\td V k");
result.add("shad-\twell", "S { d\tw e l");
result.add("shade", "S eI d");
result.add("shades", "S eI d z");
result.add("shad's", "S { d z");
result.add("shae-\tfer", "S eI\tf @r");
result.add("shaef-\tfer", "S e\tf @r");
result.add("shaf-\tfer", "S eI\tf @r");
result.add("shaf-\tted", "S { f\tt V d");
result.add("shaf-\tting", "S { f\tt I N");
result.add("shaff", "S { f");
result.add("shaft", "S { f t");
result.add("shafts", "S { f t s");
result.add("shag", "S { g");
result.add("shag-\tgy", "S {\tg i:");
result.add("shah", "S Q");
result.add("shah's", "S Q z");
result.add("shaikh", "S eI k");
result.add("shaine", "S eI n");
result.add("shake", "S eI k");
result.add("shake-\tdown", "S eI k\td aU n");
result.add("shake-\tdowns", "S eI k\td aU n z");
result.add("shake-\tout", "S eI\tk aU t");
result.add("shake-\tspear-\te-\tan", "S eI k\ts p I@\ti:\tV n");
result.add("shake-\tspeare", "S eI k\ts p i: r");
result.add("shake-\tup", "S eI\tk V p");
result.add("shake-\tups", "S eI\tk V p s");
result.add("shakes", "S eI k s");
result.add("shal-\tlo-\twer", "S {\tl @U\t@r");
result.add("shal-\tlow", "S {\tl @U");
result.add("shal-\tlow-\tness", "S {\tl @U\tn V s");
result.add("shale", "S eI l");
result.add("shales", "S eI l z");
result.add("shall", "S { l");
result.add("shalt", "S { l t");
result.add("sham", "S { m");
result.add("sham-\tbaugh", "S { m\tb O:");
result.add("sham-\tble", "S { m\tb V l");
result.add("sham-\tbles", "S { m\tb V l z");
result.add("sham-\tpoo", "S { m\tp u:");
result.add("sham-\tpooed", "S { m\tp u: d");
result.add("sham-\tpoos", "S { m\tp u: z");
result.add("sham-\trock", "S { m\tr Q k");
result.add("sham-\trock's", "S { m\tr Q k s");
result.add("shame", "S eI m");
result.add("shame-\tful", "S eI m\tf V l");
result.add("shame-\tless", "S eI m\tl V s");
result.add("shame-\tless-\tly", "S eI m\tl V s\tl i:");
result.add("shamed", "S eI m d");
result.add("shames", "S eI m z");
result.add("shan", "S { n");
result.add("shan-\tdong", "S Q n\td @U N");
result.add("shan-\tdy", "S { n\td i:");
result.add("shan-\tghai", "S { N\th aI");
result.add("shan-\tghai's", "S { N\th aI z");
result.add("shan-\tker", "S { N\tk @r");
result.add("shan-\tley", "S { n\tl i:");
result.add("shan-\tnon", "S {\tn V n");
result.add("shan-\tnon's", "S {\tn V n z");
result.add("shan-\tti", "S { n\tt i:");
result.add("shan-\tties", "S { n\tt i: z");
result.add("shan-\tty", "S { n\tt i:");
result.add("shan-\tty-\ttown", "S { n\tt i:\tt aU n");
result.add("shan-\tty-\ttowns", "S { n\tt i:\tt aU n z");
result.add("shand", "S { n d");
result.add("shands", "S { n d z");
result.add("shane", "S eI n");
result.add("shank", "S { N k");
result.add("shanks", "S { N k s");
result.add("shap", "S { p");
result.add("shap-\tley", "S { p\tl i:");
result.add("shape", "S eI p");
result.add("shape-\tless", "S eI p\tl V s");
result.add("shape-\tly", "S eI p\tl i:");
result.add("shaped", "S eI p t");
result.add("shapes", "S eI p s");
result.add("shar-\tking", "S Q@\tk I N");
result.add("shar-\tla", "S Q@\tl V");
result.add("shar-\tleen", "S Q@\tl i: n");
result.add("shar-\tlene", "S Q@\tl i: n");
result.add("shar-\tline", "S Q@\tl aI n");
result.add("shar-\tma", "S Q@\tm V");
result.add("shar-\tman", "S Q@\tm V n");
result.add("shar-\tma's", "S Q@\tm V z");
result.add("shar-\tpe-\tning", "S Q@\tp V\tn I N");
result.add("shar-\tpen", "S Q@\tp V n");
result.add("shar-\tpened", "S Q@\tp V n d");
result.add("shar-\tpens", "S Q@\tp V n z");
result.add("shar-\tper", "S Q@\tp @r");
result.add("shar-\tpest", "S Q@\tp V s t");
result.add("shar-\tpie", "S Q@\tp i:");
result.add("shar-\tples", "S Q@\tp V l z");
result.add("shar-\tpy", "S Q@\tp i:");
result.add("shar-\tpy's", "S Q@\tp i: z");
result.add("shar-\tron", "S {\tr V n");
result.add("shar-\trow", "S {\tr @U");
result.add("shar-\try", "S Q@\ti:");
result.add("shard", "S Q@ d");
result.add("shards", "S Q@ d z");
result.add("share", "S e@");
result.add("share-\tcrop-\tper", "S e@ k\tr Q\tp @r");
result.add("share-\tcrop-\tpers", "S e@ k\tr Q\tp @r z");
result.add("share-\thol-\tder", "S e@\th @U l\td @r");
result.add("share-\thol-\tders", "S e@\th @U l\td @r z");
result.add("share-\thol-\tder's", "S e@\th @U l\td @r z");
result.add("share-\thol-\tding", "S e@\th @U l\td I N");
result.add("share-\thol-\tdings", "S e@\th @U l\td I N z");
result.add("share-\tow-\tner", "S e@\t@U\tn @r");
result.add("share-\tware", "S e@\tw e@");
result.add("shared", "S e@ d");
result.add("shares", "S e@ z");
result.add("share's", "S e@ z");
result.add("shark", "S Q@ k");
result.add("shark-\tlike", "S Q@ k\tl aI k");
result.add("sharks", "S Q@ k s");
result.add("sharp", "S Q@ p");
result.add("sharp-\tly", "S Q@ p\tl i:");
result.add("sharp-\tness", "S Q@ p\tn V s");
result.add("sharp-\tshoo-\tter", "S Q@ p\tS u:\tt @r");
result.add("sharp-\tshoo-\tters", "S Q@ p\tS u:\tt @r z");
result.add("sharpe", "S Q@ p");
result.add("sharps", "S Q@ p s");
result.add("sharp's", "S Q@ p s");
result.add("shas-\tta", "S { s\tt V");
result.add("shas-\tta's", "S { s\tt V z");
result.add("shash-\tlik", "S { S\tl I k");
result.add("shat-\tner", "S { t\tn @r");
result.add("shat-\tte-\tring", "S {\tt @r\tI N");
result.add("shat-\tter", "S {\tt @r");
result.add("shat-\tter-\tproof", "S {\tt @r p\tr u: f");
result.add("shat-\ttered", "S {\tt @r d");
result.add("shat-\tters", "S {\tt @r z");
result.add("shat-\ttuck", "S {\tt V k");
result.add("shat-\tzer", "S eI t\tz @r");
result.add("shau-\tna", "S O:\tn V");
result.add("shaugh-\tnes-\tsy", "S O:\tn V\ts i:");
result.add("shaul", "S O: l");
result.add("shaun", "S O: n");
result.add("shave", "S eI v");
result.add("shaved", "S eI v d");
result.add("shaves", "S eI v z");
result.add("shaw", "S O:");
result.add("shaw-\tley", "S O:\tl i:");
result.add("shaw-\tmut", "S O:\tm V t");
result.add("shaw-\tmut's", "S O:\tm V t s");
result.add("shaw-\tna", "S O:\tn V");
result.add("shaw-\tnee", "S O:\tn i:");
result.add("shawl", "S O: l");
result.add("shawls", "S O: l z");
result.add("shawn", "S O: n");
result.add("shawn's", "S O: n z");
result.add("shaw's", "S O: z");
result.add("shay", "S eI");
result.add("shayne", "S eI n");
result.add("shays", "S eI z");
result.add("shcha-\tran-\tsky", "S @r\t{ n\ts k i:");
result.add("shched-\trin", "S e d\tr I n");
result.add("she", "S i:");
result.add("she-\tba", "S i:\tb V");
result.add("she-\tboy-\tgan", "S V\tb OI\tg V n");
result.add("she-\tkel", "S e\tk V l");
result.add("she-\tkels", "S e\tk V l z");
result.add("she-\tley", "S i:\tl i:");
result.add("she-\tline", "S e\tl aI n");
result.add("she-\tna", "S i:\tn V");
result.add("she-\tna-\tni-\tgan", "S V\tn {\tn I\tg V n");
result.add("she-\tna-\tni-\tgans", "S V\tn {\tn I\tg V n z");
result.add("she-\tnan-\tdo-\tah", "S e\tn V n\td @U\tV");
result.add("she-\tpard", "S e\tp @r d");
result.add("she-\tpard's", "S e\tp @r d z");
result.add("she-\tpher-\tded", "S e\tp @r\td V d");
result.add("she-\tpher-\tding", "S e\tp @r\td I N");
result.add("she-\tpherd", "S e\tp @r d");
result.add("she-\tpherds", "S e\tp @r d z");
result.add("she-\tpherd's", "S e\tp @r d z");
result.add("she-\tpley", "S e p\tl i:");
result.add("she-\tra-\tton", "S e@\tV\tt V n");
result.add("she-\tra-\tton's", "S e@\tV\tt V n z");
result.add("she-\trard", "S e@\t@r d");
result.add("she-\tree", "S @r\ti:");
result.add("she-\trer", "S I@\t@r");
result.add("she-\tri", "S e@\ti:");
result.add("she-\tri-\tdan", "S e@\tI\td V n");
result.add("she-\triff", "S e@\tI f");
result.add("she-\triffs", "S e@\tI f s");
result.add("she-\triff's", "S e@\tI f s");
result.add("she-\trod", "S e@\tV d");
result.add("she-\tryl", "S e@\tV l");
result.add("she-\tvard-\tnad-\tze", "S e\tv @r d\tn Q d\tz i:");
result.add("she-\tvard-\tnad-\tze's", "S e\tv @r d\tn Q d\tz i: z");
result.add("shea", "S eI");
result.add("shea-\trer", "S I@\t@r");
result.add("shea-\tring", "S I@\tI N");
result.add("shea-\tthing", "S i:\tD I N");
result.add("sheaf", "S i: f");
result.add("shear", "S I@");
result.add("shear-\tman", "S i: r\tm V n");
result.add("sheard", "S I@ d");
result.add("sheared", "S I@ d");
result.add("shearn", "S I@ n");
result.add("shears", "S i: r z");
result.add("shear's", "S i: r z");
result.add("shea's", "S eI z");
result.add("sheath", "S i: T");
result.add("sheath-\tbill", "S i: T\tb I l");
result.add("sheath-\tbills", "S i: T\tb I l z");
result.add("sheathe", "S i: D");
result.add("sheathed", "S i: D d");
result.add("sheaves", "S i: v z");
result.add("shed", "S e d");
result.add("she'd", "S i: d");
result.add("shed-\tding", "S e\td I N");
result.add("shedd", "S e d");
result.add("sheds", "S e d z");
result.add("shee-\tdy", "S i:\td i:");
result.add("shee-\than", "S i:\tV n");
result.add("shee-\than's", "S i:\tV n z");
result.add("shee-\tla", "S i:\tl V");
result.add("shee-\tlah", "S i:\tl V");
result.add("shee-\tler", "S i:\tl @r");
result.add("shee-\tly", "S i:\tl i:");
result.add("shee-\tna", "S i:\tn V");
result.add("shee-\tpish", "S i:\tp I S");
result.add("shee-\tpish-\tly", "S i:\tp I S\tl i:");
result.add("shee-\tran", "S I@\tV n");
result.add("shee-\trer", "S i:\tr @r");
result.add("shee-\tting", "S i:\tt I N");
result.add("sheen", "S i: n");
result.add("sheep", "S i: p");
result.add("sheep-\tskin", "S i: p\ts k I n");
result.add("sheep's", "S i: p s");
result.add("sheer", "S I@");
result.add("sheesh", "S i: S");
result.add("sheet", "S i: t");
result.add("sheets", "S i: t s");
result.add("shef-\tfield", "S e\tf i: l d");
result.add("sheff", "S e f");
result.add("shei-\tla", "S i:\tl V");
result.add("shei-\tlah", "S i:\tl V");
result.add("shei-\tla's", "S i:\tl V z");
result.add("sheik", "S i: k");
result.add("sheik-\tdom", "S i: k\td V m");
result.add("sheik-\tdoms", "S i: k\td V m z");
result.add("sheikh", "S i: k");
result.add("sheiks", "S i: k s");
result.add("sheik's", "S i: k s");
result.add("shel-\tburne", "S e l\tb @r n");
result.add("shel-\tby", "S e l\tb i:");
result.add("shel-\tby-\tville", "S e l\tb i:\tv I l");
result.add("shel-\tby's", "S e l\tb i: z");
result.add("shel-\tdahl", "S e l\td Q l");
result.add("shel-\tden", "S e l\td V n");
result.add("shel-\tdon", "S e l\td V n");
result.add("shel-\tler", "S e\tl @r");
result.add("shel-\tley", "S e\tl i:");
result.add("shel-\tley's", "S e\tl i: z");
result.add("shel-\tling", "S e\tl I N");
result.add("shel-\tlings", "S e\tl I N z");
result.add("shel-\tly", "S e\tl i:");
result.add("shel-\tman", "S e l\tm V n");
result.add("shel-\tte-\tring", "S e l\tt @r\tI N");
result.add("shel-\tter", "S e l\tt @r");
result.add("shel-\ttered", "S e l\tt @r d");
result.add("shel-\tters", "S e l\tt @r z");
result.add("shel-\tton", "S e l\tt V n");
result.add("shel-\tton's", "S e l\tt V n z");
result.add("shel-\tving", "S e l\tv I N");
result.add("shelf", "S e l f");
result.add("shell", "S e l");
result.add("she'll", "S i: l");
result.add("shell-\tfish", "S e l\tf I S");
result.add("shell-\tman", "S e l\tm V n");
result.add("shell-\tshock", "S e l\tS Q k");
result.add("shell-\tshocked", "S e l\tS Q k t");
result.add("shelled", "S e l d");
result.add("shells", "S e l z");
result.add("shell's", "S e l z");
result.add("shelve", "S e l v");
result.add("shelved", "S e l v d");
result.add("shelves", "S e l v z");
result.add("shen", "S e n");
result.add("shen-\tyang", "S e n\tj { N");
result.add("sheng", "S e N");
result.add("shep", "S e p");
result.add("shep-\tpard", "S e\tp @r d");
result.add("shep-\tperd", "S e\tp @r d");
result.add("shepp", "S e p");
result.add("sher", "S @r");
result.add("sher-\tbert", "S @r\tb @r t");
result.add("sher-\tbet", "S @r\tb V t");
result.add("sher-\tborne", "S @r\tb @r n");
result.add("sher-\tburn", "S @r\tb @r n");
result.add("sher-\tburne", "S @r\tb @r n");
result.add("sher-\tfield", "S @r\tf i: l d");
result.add("sher-\tley", "S @r\tl i:");
result.add("sher-\tlock", "S @r\tl Q k");
result.add("sher-\tlock's", "S @r\tl Q k s");
result.add("sher-\tman", "S @r\tm V n");
result.add("sher-\tman's", "S @r\tm V n z");
result.add("sher-\trard", "S e@\t@r d");
result.add("sher-\trer", "S e@\t@r");
result.add("sher-\tri", "S e@\ti:");
result.add("sher-\trie", "S e@\ti:");
result.add("sher-\trill", "S e@\tI l");
result.add("sher-\tri's", "S e@\ti: z");
result.add("sher-\trod", "S e@\tV d");
result.add("sher-\try", "S e@\ti:");
result.add("sher-\try's", "S e@\ti: z");
result.add("sher-\twin", "S @r\tw I n");
result.add("sher-\twood", "S @r\tw U d");
result.add("sher-\twood's", "S @r\tw U d z");
result.add("shere", "S I@");
result.add("sherr", "S e@");
result.add("sherr's", "S e@ z");
result.add("she's", "S i: z");
result.add("shet-\tland", "S e t\tl V n d");
result.add("sheth", "S e T");
result.add("shev-\tlin", "S e v\tl I n");
result.add("shew", "S u:");
result.add("shew-\tchuk", "S u:\ttS V k");
result.add("shew-\tma-\tker", "S u:\tm eI\tk @r");
result.add("shi", "S i:");
result.add("shi-\ta", "S i:\tV");
result.add("shi-\tas", "S i:\tV z");
result.add("shi-\td-\tler", "S aI\td V\tl @r");
result.add("shi-\ter", "S aI\t@r");
result.add("shi-\tite", "S i:\taI t");
result.add("shi-\tites", "S i:\taI t s");
result.add("shi-\tloh", "S aI\tl @U");
result.add("shi-\tner", "S aI\tn @r");
result.add("shi-\tning", "S aI\tn I N");
result.add("shi-\tny", "S aI\tn i:");
result.add("shi-\tra", "S I@\tV");
result.add("shi-\trah", "S I@\tV");
result.add("shi-\tre-\tman", "S I@\teI\tm V n");
result.add("shi-\tro-\tma", "S I@\t@U\tm V");
result.add("shi-\tva", "S i:\tv V");
result.add("shi-\tve-\tring", "S I\tv @r\tI N");
result.add("shi-\tver", "S I\tv @r");
result.add("shi-\tvered", "S I\tv @r d");
result.add("shi-\tvers", "S I\tv @r z");
result.add("shi-\tzuo-\tka", "S i: z\tw @U\tk V");
result.add("shib-\tbo-\tleth", "S I\tb V\tl e T");
result.add("shick", "S I k");
result.add("shied", "S aI d");
result.add("shieh", "S i:");
result.add("shiel", "S i: l");
result.add("shiel-\tded", "S i: l\td V d");
result.add("shiel-\tding", "S i: l\td I N");
result.add("shield", "S i: l d");
result.add("shields", "S i: l d z");
result.add("shield's", "S i: l d z");
result.add("shiels", "S i: l z");
result.add("shies", "S aI z");
result.add("shif-\tlett", "S I f\tl e t");
result.add("shif-\tted", "S I f\tt V d");
result.add("shif-\tter", "S I f\tt @r");
result.add("shif-\tting", "S I f\tt I N");
result.add("shif-\tty", "S I f\tt i:");
result.add("shiff", "S I f");
result.add("shift", "S I f t");
result.add("shift-\tless", "S I f\tt l V s");
result.add("shifts", "S I f t s");
result.add("shih", "S i:");
result.add("shil-\tler", "S I\tl @r");
result.add("shil-\tling", "S I\tl I N");
result.add("shil-\tling-\tton", "S I\tl I N\tt V n");
result.add("shil-\tlings", "S I\tl I N z");
result.add("shill", "S I l");
result.add("shim", "S I m");
result.add("shim-\tkus", "S I m\tk V s");
result.add("shim-\tme-\tring", "S I\tm @r\tI N");
result.add("shim-\tmer", "S I\tm @r");
result.add("shim-\tmered", "S I\tm @r d");
result.add("shim-\tmers", "S I\tm @r z");
result.add("shim-\tmy", "S I\tm i:");
result.add("shin", "S I n");
result.add("shin-\tbone", "S I n\tb @U n");
result.add("shin-\tdig", "S I n\td I g");
result.add("shin-\tdle", "S I n\td V l");
result.add("shin-\tgle", "S I N\tg V l");
result.add("shin-\tgle-\tton", "S I N\tg V l\tt V n");
result.add("shin-\tgles", "S I N\tg V l z");
result.add("shin-\tto", "S I n\tt @U");
result.add("shine", "S aI n");
result.add("shined", "S aI n d");
result.add("shines", "S aI n z");
result.add("shing", "S I N");
result.add("shing-\tler", "S I N\tl @r");
result.add("ship", "S I p");
result.add("ship-\tboard", "S I p\tb O@ d");
result.add("ship-\tbuil-\tder", "S I p\tb I l\td @r");
result.add("ship-\tbuil-\tders", "S I p\tb I l\td @r z");
result.add("ship-\tbuil-\tding", "S I p\tb I l\td I N");
result.add("ship-\tbuil-\tdings", "S I p\tb I l\td I N z");
result.add("ship-\tley", "S I p\tl i:");
result.add("ship-\tload", "S I p\tl @U d");
result.add("ship-\tloads", "S I p\tl @U d z");
result.add("ship-\tman", "S I p\tm V n");
result.add("ship-\tmate", "S I p\tm eI t");
result.add("ship-\tmates", "S I p\tm eI t s");
result.add("ship-\tment", "S I p\tm V n t");
result.add("ship-\tments", "S I p\tm V n t s");
result.add("ship-\tow-\tner", "S I\tp @U\tn @r");
result.add("ship-\tow-\tners", "S I\tp @U\tn @r z");
result.add("ship-\tpee", "S I\tp i:");
result.add("ship-\tper", "S I\tp @r");
result.add("ship-\tpers", "S I\tp @r z");
result.add("ship-\tper's", "S I\tp @r z");
result.add("ship-\tping", "S I\tp I N");
result.add("ship-\tpy", "S I\tp i:");
result.add("ship-\tshape", "S I p\tS eI p");
result.add("ship-\twreck", "S I p\tr e k");
result.add("ship-\twright", "S I p\tr aI t");
result.add("ship-\twrights", "S I p\tr aI t s");
result.add("ship-\tyard", "S I p\tj Q@ d");
result.add("ship-\tyards", "S I p\tj Q@ d z");
result.add("ship-\tyard's", "S I p\tj Q@ d z");
result.add("shipp", "S I p");
result.add("shipped", "S I p t");
result.add("shipp's", "S I p s");
result.add("ships", "S I p s");
result.add("ship's", "S I p s");
result.add("shir", "S @r");
result.add("shir-\tking", "S @r\tk I N");
result.add("shir-\tlee", "S @r\tl i:");
result.add("shir-\tleen", "S @r\tl i: n");
result.add("shir-\tlene", "S @r\tl i: n");
result.add("shir-\tley", "S @r\tl i:");
result.add("shir-\tley's", "S @r\tl i: z");
result.add("shir-\tlie", "S @r\tl i:");
result.add("shire", "S aI r");
result.add("shires", "S aI r z");
result.add("shirk", "S @r k");
result.add("shirked", "S @r k t");
result.add("shirl", "S @r l");
result.add("shirr", "S @r");
result.add("shirt", "S @r t");
result.add("shirt-\tsleeve", "S @r t\ts l i: v");
result.add("shirts", "S @r t s");
result.add("shit", "S i: t");
result.add("shive", "S aI v");
result.add("shive-\tly", "S aI v\tl i:");
result.add("shives", "S aI v z");
result.add("sho-\tgun", "S @U\tg V n");
result.add("sho-\tji", "S @U\tdZ i:");
result.add("sho-\tlem", "S @U\tl V m");
result.add("sho-\tr", "S i:\t@r");
result.add("sho-\tring", "S O@\tI N");
result.add("sho-\tsho-\tne", "S @U\tS @U\tn i:");
result.add("sho-\tval", "S @U\tv { l");
result.add("sho-\tvel", "S V\tv V l");
result.add("sho-\tveled", "S V\tv V l d");
result.add("sho-\tvels", "S V\tv V l z");
result.add("sho-\tver", "S V\tv @r");
result.add("sho-\tving", "S V\tv I N");
result.add("sho-\twa", "S @U\tV");
result.add("sho-\twe-\tring", "S aU\t@r\tI N");
result.add("sho-\twell", "S Q\tw e l");
result.add("sho-\twer", "S aU\t@r");
result.add("sho-\twered", "S aU\t@r d");
result.add("sho-\twers", "S aU\t@r z");
result.add("sho-\twi-\test", "S @U\ti:\tV s t");
result.add("sho-\twing", "S @U\tI N");
result.add("sho-\twings", "S @U\tI N z");
result.add("sho-\twy", "S @U\ti:");
result.add("shoals", "S @U l z");
result.add("shoc-\tker", "S Q\tk @r");
result.add("shoc-\tking", "S Q\tk I N");
result.add("shoc-\tking-\tly", "S Q\tk I N\tl i:");
result.add("shock", "S Q k");
result.add("shock-\tley", "S Q k\tl i:");
result.add("shock-\twave", "S Q k\tw eI v");
result.add("shocked", "S Q k t");
result.add("shocks", "S Q k s");
result.add("shod", "S Q d");
result.add("shod-\tdy", "S Q\td i:");
result.add("shoe", "S u:");
result.add("shoe-\tbox", "S @U\tb Q k s");
result.add("shoe-\thorn", "S u:\th O@ n");
result.add("shoe-\thorned", "S u:\th O@ n d");
result.add("shoe-\tla-\tces", "S u:\tl eI\ts V z");
result.add("shoe-\tlace", "S u:\tl eI s");
result.add("shoe-\tma-\tker", "S u:\tm eI\tk @r");
result.add("shoe-\tma-\tkers", "S u:\tm eI\tk @r z");
result.add("shoe-\tmake", "S u:\tm eI k");
result.add("shoe-\tshine", "S u:\tS aI n");
result.add("shoe-\tstring", "S u: s\tt r I N");
result.add("shoes", "S u: z");
result.add("shoe's", "S u: z");
result.add("sholes", "S @U l z");
result.add("shone", "S Q n");
result.add("shoo", "S u:");
result.add("shoo-\tfly", "S u: f\tl aI");
result.add("shoo-\tter", "S u:\tt @r");
result.add("shoo-\tters", "S u:\tt @r z");
result.add("shoo-\tting", "S u:\tt I N");
result.add("shoo-\ttings", "S u:\tt I N z");
result.add("shooed", "S u: d");
result.add("shook", "S U k");
result.add("shoop", "S u: p");
result.add("shoot", "S u: t");
result.add("shoot-\tdown", "S u: t\td aU n");
result.add("shoot-\tout", "S u:\tt aU t");
result.add("shoot-\touts", "S u:\tt aU t s");
result.add("shoots", "S u: t s");
result.add("shop", "S Q p");
result.add("shop-\tkee-\tper", "S Q p\tk i:\tp @r");
result.add("shop-\tkee-\tpers", "S Q p\tk i:\tp @r z");
result.add("shop-\tlif-\tter", "S Q p\tl I f\tt @r");
result.add("shop-\tlif-\tters", "S Q p\tl I f\tt @r z");
result.add("shop-\tlif-\tting", "S Q p\tl I f\tt I N");
result.add("shop-\tlift", "S Q p\tl I f t");
result.add("shop-\tper", "S Q\tp @r");
result.add("shop-\tpers", "S Q\tp @r z");
result.add("shop-\tper's", "S Q\tp @r z");
result.add("shop-\tping", "S Q\tp I N");
result.add("shop-\tping's", "S Q\tp I N z");
result.add("shop-\tworn", "S Q p\tw O@ n");
result.add("shope", "S @U p");
result.add("shoppe", "S Q p");
result.add("shopped", "S Q p t");
result.add("shoppes", "S Q p s");
result.add("shops", "S Q p s");
result.add("shop's", "S Q p s");
result.add("shor-\tta-\tges", "S O@\tt V\tdZ V z");
result.add("shor-\ttage", "S O@\tt V dZ");
result.add("shor-\tte-\tning", "S O@\tt V\tn I N");
result.add("shor-\tted", "S O@\tt V d");
result.add("shor-\tten", "S O@\tt V n");
result.add("shor-\ttened", "S O@\tt V n d");
result.add("shor-\ttens", "S O@\tt V n z");
result.add("shor-\tter", "S O@\tt @r");
result.add("shor-\tter's", "S O@\tt @r z");
result.add("shor-\ttest", "S O@\tt V s t");
result.add("shor-\tting", "S O@\tt I N");
result.add("shor-\tty", "S O@\tt i:");
result.add("shore", "S O@");
result.add("shore-\tbird", "S O@\tb @r d");
result.add("shore-\tham", "S O@\tV m");
result.add("shore-\tline", "S O@\tl aI n");
result.add("shore-\tward", "S O@\tw @r d");
result.add("shored", "S O@ d");
result.add("shores", "S O@ z");
result.add("shore's", "S O@ z");
result.add("shorn", "S O@ n");
result.add("short", "S O@ t");
result.add("short-\tcake", "S O@ t\tk eI k");
result.add("short-\tchan-\tging", "S O@ t\ttS eI n\tdZ I N");
result.add("short-\tchange", "S O@ t\ttS eI n dZ");
result.add("short-\tchanged", "S O@ t\ttS eI n dZ d");
result.add("short-\tco-\tming", "S O@ t\tk V\tm I N");
result.add("short-\tco-\tmings", "S O@ t\tk V\tm I N z");
result.add("short-\tcut", "S O@ t\tk V t");
result.add("short-\tcuts", "S O@ t\tk V t s");
result.add("short-\tfall", "S O@ t\tf O: l");
result.add("short-\tfalls", "S O@ t\tf O: l z");
result.add("short-\tgrass", "S O@ t\tg r { s");
result.add("short-\thair", "S O@ t\th e@");
result.add("short-\thaired", "S O@ t\th e@ d");
result.add("short-\thand", "S O@ t\th { n d");
result.add("short-\tlived", "S O@ t\tl I v d");
result.add("short-\tly", "S O@ t\tl i:");
result.add("short-\tness", "S O@ t\tn V s");
result.add("short-\tsigh-\tted", "S O@ t\ts aI\tt V d");
result.add("short-\tsigh-\tted-\tness", "S O@ t\ts aI\tt V d\tn V s");
result.add("short-\tstop", "S O@ t\ts t Q p");
result.add("short-\tterm", "S O@ t\tt @r m");
result.add("short-\twave", "S O@ t\tw eI v");
result.add("short-\twin-\tded", "S O@ t\tw I n\td V d");
result.add("shorts", "S O@ t s");
result.add("shos-\tta-\tko-\tvich", "S O: s\tt V\tk @U\tv I tS");
result.add("shot", "S Q t");
result.add("shot-\tgun", "S Q t\tg V n");
result.add("shot-\tguns", "S Q t\tg V n z");
result.add("shot-\twell", "S Q t\tw e l");
result.add("shots", "S Q t s");
result.add("shott", "S Q t");
result.add("shotts", "S Q t s");
result.add("shou-\tted", "S aU\tt V d");
result.add("shou-\tting", "S aU\tt I N");
result.add("shough", "S aU");
result.add("shoul-\tde-\tring", "S @U l\td @r\tI N");
result.add("shoul-\tder", "S @U l\td @r");
result.add("shoul-\tdered", "S @U l\td @r d");
result.add("shoul-\tders", "S @U l\td @r z");
result.add("shoul-\tdn't", "S U\td V n t");
result.add("should", "S U d");
result.add("shoup", "S u: p");
result.add("shouse", "s h aU s");
result.add("shout", "S aU t");
result.add("shouts", "S aU t s");
result.add("shove", "S V v");
result.add("shove-\tling", "S V v\tl I N");
result.add("shoved", "S V v d");
result.add("shoves", "S V v z");
result.add("show", "S @U");
result.add("show-\tbiz", "S @U\tb I z");
result.add("show-\tboat", "S @U\tb @U t");
result.add("show-\tboat's", "S @U\tb @U t s");
result.add("show-\tca-\tses", "S @U\tk eI\ts V z");
result.add("show-\tca-\tsing", "S @U\tk eI\ts I N");
result.add("show-\tcase", "S @U\tk eI s");
result.add("show-\tcased", "S @U\tk eI s t");
result.add("show-\tdown", "S @U\td aU n");
result.add("show-\tdowns", "S @U\td aU n z");
result.add("show-\tgirl", "S @U\tg @r l");
result.add("show-\tgirls", "S @U\tg @r l z");
result.add("show-\tman", "S @U\tm V n");
result.add("show-\tman-\tship", "S @U\tm V n\tS I p");
result.add("show-\tpiece", "S @U\tp i: s");
result.add("show-\tplace", "S @U p\tl eI s");
result.add("show-\troom", "S @U\tr U m");
result.add("show-\trooms", "S @U\tr u: m z");
result.add("show-\ttime", "S @U\tt aI m");
result.add("showed", "S @U d");
result.add("shown", "S @U n");
result.add("shows", "S @U z");
result.add("shrank", "S r { N k");
result.add("shrap-\tnel", "S r { p\tn V l");
result.add("shred", "S r e d");
result.add("shred-\tded", "S r e\td V d");
result.add("shred-\tder", "S r e\td @r");
result.add("shred-\tders", "S r e\td @r z");
result.add("shred-\tding", "S r e\td I N");
result.add("shreds", "S r e d z");
result.add("shreeve", "S r i: v");
result.add("shreve", "S r i: v");
result.add("shreve-\tport", "S r i: v\tp O@ t");
result.add("shrew-\tdest", "S r u:\td V s t");
result.add("shrewd", "S r u: d");
result.add("shrewd-\tly", "S r u: d\tl i:");
result.add("shrewd-\tness", "S r u: d\tn V s");
result.add("shrews-\tbu-\try", "S r u: z\tb e@\ti:");
result.add("shri", "S r i:");
result.add("shri-\tner", "S r aI\tn @r");
result.add("shri-\tners", "S r aI\tn @r z");
result.add("shri-\tve-\tling", "S r I\tv V\tl I N");
result.add("shri-\tvel", "S r I\tv V l");
result.add("shri-\tveled", "S r I\tv V l d");
result.add("shri-\tver", "S r aI\tv @r");
result.add("shrie-\tking", "S r i:\tk I N");
result.add("shriek", "S r i: k");
result.add("shrieked", "S r i: k t");
result.add("shrieks", "S r i: k s");
result.add("shrift", "S r I f t");
result.add("shrill", "S r I l");
result.add("shrim-\tper", "S r I m\tp @r");
result.add("shrim-\tpers", "S r I m\tp @r z");
result.add("shrimp", "S r I m p");
result.add("shrin-\tkage", "S r I N\tk I dZ");
result.add("shrin-\tking", "S r I N\tk I N");
result.add("shrine", "S r aI n");
result.add("shrines", "S r aI n z");
result.add("shrink", "S r I N k");
result.add("shrinks", "S r I N k s");
result.add("shroff", "S r O: f");
result.add("shrop-\tshire", "S r Q p\tS aI r");
result.add("shrou-\tded", "S r aU\td V d");
result.add("shrou-\tding", "S r aU\td I N");
result.add("shroud", "S r aU d");
result.add("shrouds", "S r aU d z");
result.add("shrub", "S r V b");
result.add("shrub-\tbe-\try", "S r V\tb @r\ti:");
result.add("shrub-\tby", "S r V\tb i:");
result.add("shrub-\tlike", "S r V b\tl aI k");
result.add("shrubs", "S r V b z");
result.add("shrug", "S r V g");
result.add("shrug-\tging", "S r V\tg I N");
result.add("shrugged", "S r V g d");
result.add("shrugs", "S r V g z");
result.add("shrun-\tken", "S r V N\tk V n");
result.add("shrunk", "S r V N k");
result.add("shtick", "S t I k");
result.add("shu", "S u:");
result.add("shu-\tbert", "S u:\tb @r t");
result.add("shu-\tgart", "S V\tg Q@ t");
result.add("shu-\tla", "S u:\tl V");
result.add("shu-\tler", "S u:\tl @r");
result.add("shu-\tman", "S u:\tm V n");
result.add("shu-\tmard", "S u:\tm @r d");
result.add("shu-\tping", "S u:\tp I N");
result.add("shuc-\tking", "S V\tk I N");
result.add("shuck", "S V k");
result.add("shucked", "S V k t");
result.add("shucks", "S V k s");
result.add("shud-\tde-\tring", "S V\td @r\tI N");
result.add("shud-\tder", "S V\td @r");
result.add("shud-\tdered", "S V\td @r d");
result.add("shud-\tders", "S V\td @r z");
result.add("shue", "S u:");
result.add("shuf-\tf-\tler", "S V\tf V\tl @r");
result.add("shuf-\tf-\tlers", "S V\tf V\tl @r z");
result.add("shuf-\tfle", "S V\tf V l");
result.add("shuf-\tfled", "S V\tf V l d");
result.add("shuf-\tfles", "S V\tf V l z");
result.add("shuff", "S V f");
result.add("shuff-\tling", "S V f\tl I N");
result.add("shul-\tman", "S U l\tm V n");
result.add("shull", "S V l");
result.add("shult-\tz's", "S U l\tt s I z");
result.add("shultz", "S U l t s");
result.add("shum", "S V m");
result.add("shum-\tway", "S V m\tw eI");
result.add("shun", "S V n");
result.add("shun-\tning", "S V\tn I N");
result.add("shun-\tted", "S V n\tt V d");
result.add("shun-\tting", "S V n\tt I N");
result.add("shunk", "S V N k");
result.add("shunned", "S V n d");
result.add("shuns", "S V n z");
result.add("shunt", "S V n t");
result.add("shure", "S U@");
result.add("shut", "S V t");
result.add("shut-\tdown", "S V t\td aU n");
result.add("shut-\tdowns", "S V t\td aU n z");
result.add("shut-\tout", "S V\tt aU t");
result.add("shut-\tt-\tling", "S V\tt V\tl I N");
result.add("shut-\tte-\tring", "S V\tt @r\tI N");
result.add("shut-\tter", "S V\tt @r");
result.add("shut-\ttered", "S V\tt @r d");
result.add("shut-\tters", "S V\tt @r z");
result.add("shut-\tting", "S V\tt I N");
result.add("shut-\ttle", "S V\tt V l");
result.add("shut-\ttled", "S V\tt V l d");
result.add("shut-\ttles", "S V\tt V l z");
result.add("shut-\ttle's", "S V\tt V l z");
result.add("shute", "S u: t");
result.add("shutes", "S u: t s");
result.add("shuts", "S V t s");
result.add("shy", "S aI");
result.add("shy-\ting", "S aI\tI N");
result.add("shy-\tlock", "S aI\tl Q k");
result.add("shy-\tly", "S aI\tl i:");
result.add("shy-\tness", "S aI\tn V s");
result.add("shy-\tster", "S aI s\tt @r");
result.add("shy-\tsters", "S aI s\tt @r z");
result.add("si", "s i:");
result.add("si-\ta-\tmese", "s aI\tV\tm i: z");
result.add("si-\tam", "s aI\t{ m");
result.add("si-\tbe-\tri-\ta", "s aI\tb I@\ti:\tV");
result.add("si-\tbe-\tri-\tan", "s aI\tb I@\ti:\tV n");
result.add("si-\tbelle", "s I\tb e l");
result.add("si-\tbil-\tla", "s I\tb I\tl V");
result.add("si-\tble", "s aI\tb V l");
result.add("si-\tbyl", "s I\tb V l");
result.add("si-\tca", "s i:\tk V");
result.add("si-\tcard", "s I\tk @r d");
result.add("si-\tchuan", "s I tS\tw Q n");
result.add("si-\tci-\tli-\ta-\tno", "s i:\ttS i:\tl i:\tQ\tn @U");
result.add("si-\tci-\tli-\tan", "s I\ts I\tl i:\tV n");
result.add("si-\tci-\tlia", "s I\ts I l\tj V");
result.add("si-\tci-\tly", "s I\ts I\tl i:");
result.add("si-\td-\tler", "s aI\td V\tl @r");
result.add("si-\tde-\tro-\tgra-\tpher", "s aI\td @r\tO: g\tr V\tf @r");
result.add("si-\tdearm", "s aI\td Q@ m");
result.add("si-\tdearms", "s aI\td Q@ m z");
result.add("si-\tded", "s aI\td V d");
result.add("si-\tdell", "s aI\td V l");
result.add("si-\tder", "s aI\td @r");
result.add("si-\tders", "s aI\td @r z");
result.add("si-\tdhu", "s I d\th u:");
result.add("si-\tding", "s aI\td I N");
result.add("si-\tdle", "s aI\td V l");
result.add("si-\tdo-\tni-\ta", "s i:\td @U\tn i:\tV");
result.add("si-\tdon", "s aI\td V n");
result.add("si-\ten-\tna", "s i:\te\tn V");
result.add("si-\ten-\tna's", "s i:\te\tn V z");
result.add("si-\ter-\tra", "s i:\te@\tV");
result.add("si-\ter-\tras", "s i:\te@\tV z");
result.add("si-\ter-\tra's", "s i:\te@\tV z");
result.add("si-\tg-\tler", "s aI\tg V\tl @r");
result.add("si-\tgel", "s I\tg V l");
result.add("si-\tghing", "s aI\tI N");
result.add("si-\tgour-\tney", "s I\tg O@\tn i:");
result.add("si-\tgrid", "s I g\tr I d");
result.add("si-\tgurd", "s I\tg @r d");
result.add("si-\tha-\tnouk", "s i:\tV\tn U k");
result.add("si-\tkor-\tski", "s I\tk O@ s\tk i:");
result.add("si-\tkor-\tsky", "s I\tk O@ s\tk i:");
result.add("si-\tlas", "s aI\tl V s");
result.add("si-\tle-\tsia", "s V\tl i:\tz V");
result.add("si-\tlen-\tces", "s aI\tl V n\ts V z");
result.add("si-\tlen-\tcing", "s aI\tl V n\ts I N");
result.add("si-\tlence", "s aI\tl V n s");
result.add("si-\tlenced", "s aI\tl V n s t");
result.add("si-\tlent", "s aI\tl V n t");
result.add("si-\tlent-\tly", "s aI\tl V n\tt l i:");
result.add("si-\tler", "s aI\tl @r");
result.add("si-\tlex", "s I\tl V k s");
result.add("si-\tli-\tca", "s I\tl I\tk V");
result.add("si-\tli-\tcate", "s I\tl I\tk V t");
result.add("si-\tli-\tcates", "s I\tl I\tk V t s");
result.add("si-\tli-\tcon", "s I\tl I\tk V n");
result.add("si-\tli-\tcone", "s I\tl I\tk @U n");
result.add("si-\tli-\tcones", "s I\tl I\tk @U n z");
result.add("si-\tlo", "s aI\tl @U");
result.add("si-\tlos", "s aI\tl @U z");
result.add("si-\tma", "s i:\tm V");
result.add("si-\tmas", "s aI\tm V z");
result.add("si-\tme-\ton", "s I\tm i:\tV n");
result.add("si-\tmi", "s i:\tm i:");
result.add("si-\tmi-\tan", "s I\tm i:\tV n");
result.add("si-\tmi-\tla-\tri-\tties", "s I\tm I\tl e@\tI\tt i: z");
result.add("si-\tmi-\tla-\tri-\tty", "s I\tm I\tl e@\tI\tt i:");
result.add("si-\tmi-\tlar", "s I\tm I\tl @r");
result.add("si-\tmi-\tlar-\tly", "s I\tm I\tl @r\tl i:");
result.add("si-\tmo-\tna", "s I\tm @U\tn V");
result.add("si-\tmo-\tnet-\tta", "s i:\tm V\tn e\tt V");
result.add("si-\tmo-\tnette", "s I\tm V\tn e t");
result.add("si-\tmo-\tni-\tan", "s I\tm @U\tn i:\tV n");
result.add("si-\tmo-\tny", "s aI\tm V\tn i:");
result.add("si-\tmon", "s aI\tm V n");
result.add("si-\tmon-\tsen", "s I\tm V n\ts V n");
result.add("si-\tmon-\tson", "s I\tm V n\ts V n");
result.add("si-\tmon-\tton", "s aI\tm V n\tt V n");
result.add("si-\tmone", "s I\tm @U n");
result.add("si-\tmons", "s aI\tm V n z");
result.add("si-\tmon's", "s aI\tm V n z");
result.add("si-\tmu-\tla-\tted", "s I m\tj V\tl eI\tt V d");
result.add("si-\tmu-\tla-\tting", "s I m\tj V\tl eI\tt I N");
result.add("si-\tmu-\tla-\ttion", "s I m\tj V\tl eI\tS V n");
result.add("si-\tmu-\tla-\ttions", "s I m\tj V\tl eI\tS V n z");
result.add("si-\tmu-\tla-\ttor", "s I m\tj V\tl eI\tt @r");
result.add("si-\tmu-\tla-\ttors", "s I m\tj V\tl eI\tt @r z");
result.add("si-\tmu-\tlate", "s I m\tj V\tl eI t");
result.add("si-\tmu-\tlates", "s I m\tj V\tl eI t s");
result.add("si-\tmul-\tcast", "s aI m\tj V l\tk { s t");
result.add("si-\tmul-\tta-\tne-\tous", "s aI\tm V l\tt eI\tn i:\tV s");
result.add("si-\tmul-\tta-\tne-\tous-\tly", "s aI\tm V l\tt eI\tn i:\tV s\tl i:");
result.add("si-\tna-\ttra", "s V\tn Q t\tr V");
result.add("si-\tna-\ttra's", "s V\tn Q t\tr V z");
result.add("si-\tnai", "s aI\tn aI");
result.add("si-\tne-\tad", "s I\tn eI\t{ d");
result.add("si-\tne-\twy", "s I n\tj u:\ti:");
result.add("si-\tnis-\tter", "s I\tn I s\tt @r");
result.add("si-\tno", "s aI\tn @U");
result.add("si-\tno-\tpo-\tli", "s i:\tn @U\tp @U\tl i:");
result.add("si-\tnu-\tses", "s aI\tn V\ts V z");
result.add("si-\tnus", "s aI\tn V s");
result.add("si-\tpho-\tning", "s aI\tf V\tn I N");
result.add("si-\tphon", "s aI\tf V n");
result.add("si-\tphoned", "s aI\tf V n d");
result.add("si-\tphons", "s aI\tf V n z");
result.add("si-\tple", "s aI\tp V l");
result.add("si-\tra-\tcu-\tsa", "s I@\tQ\tk u:\ts V");
result.add("si-\tre", "s aI\t@r");
result.add("si-\tre-\tna", "s I@\te\tn V");
result.add("si-\tren", "s aI\tr V n");
result.add("si-\trens", "s aI\tr V n z");
result.add("si-\tri", "s I@\ti:");
result.add("si-\tris", "s aI\tr I s");
result.add("si-\trois", "s aI r\tw Q");
result.add("si-\tson", "s I\ts V n");
result.add("si-\ttar", "s I\tt @r");
result.add("si-\tted", "s aI\tt V d");
result.add("si-\tting", "s aI\tt I N");
result.add("si-\ttu-\ta-\tted", "s I\ttS u:\teI\tt V d");
result.add("si-\ttu-\ta-\ttio-\tnal", "s I\ttS u:\teI\tS V\tn V l");
result.add("si-\ttu-\ta-\ttion", "s I\ttS u:\teI\tS V n");
result.add("si-\ttu-\ta-\ttions", "s I\ttS u:\teI\tS V n z");
result.add("si-\ttu-\ta-\ttion's", "s I\ttS u:\teI\tS V n z");
result.add("si-\ttu-\tate", "s I\ttS u:\teI t");
result.add("si-\ttus", "s aI\tt V s");
result.add("si-\tu", "s i:\tu:");
result.add("si-\tver", "s aI\tv @r");
result.add("si-\txes", "s I k\ts V z");
result.add("si-\tx's", "s I k\ts V z");
result.add("si-\tza-\tble", "s aI\tz V\tb V l");
result.add("si-\tzea-\tble", "s aI\tz V\tb V l");
result.add("si-\tzer", "s aI\tz @r");
result.add("si-\tzes", "s aI\tz V z");
result.add("si-\tzing", "s aI\tz I N");
result.add("siang", "s j { N");
result.add("sias", "Z O: z");
result.add("sib", "s I b");
result.add("sib-\tbie", "s I\tb i:");
result.add("sib-\tby", "s I\tb i:");
result.add("sib-\tley", "s I b\tl i:");
result.add("sib-\tling", "s I b\tl I N");
result.add("sib-\tlings", "s I b\tl I N z");
result.add("sic", "s I k");
result.add("sic-\tke-\tning", "s I\tk V\tn I N");
result.add("sic-\tken", "s I\tk V n");
result.add("sic-\tkened", "s I\tk V n d");
result.add("sic-\tker", "s I\tk @r");
result.add("sic-\tkest", "s I\tk V s t");
result.add("sic-\tkle", "s I\tk V l");
result.add("sic-\tkles", "s I\tk V l z");
result.add("sick", "s I k");
result.add("sick-\tler", "s I k\tl @r");
result.add("sick-\tly", "s I k\tl i:");
result.add("sick-\tness", "s I k\tn V s");
result.add("sid", "s I d");
result.add("sid-\tdhar-\ttha", "s V\td Q@\tt V");
result.add("sid-\tdons", "s I\td V n z");
result.add("sid-\tman", "s I d\tm V n");
result.add("sid-\tney", "s I d\tn i:");
result.add("sid-\tra", "s I d\tr V");
result.add("sid-\twell", "s I d\tw e l");
result.add("side", "s aI d");
result.add("side-\tbar", "s aI d\tb Q@");
result.add("side-\tbars", "s aI d\tb Q@ z");
result.add("side-\tkick", "s aI d\tk I k");
result.add("side-\tline", "s aI d\tl aI n");
result.add("side-\tlined", "s aI d\tl aI n d");
result.add("side-\tlines", "s aI d\tl aI n z");
result.add("side-\tman", "s aI d\tm { n");
result.add("side-\tshow", "s aI d\tS @U");
result.add("side-\tshows", "s aI d\tS @U z");
result.add("side-\tstep", "s aI d\ts t e p");
result.add("side-\tstep-\tping", "s aI d\ts t e\tp I N");
result.add("side-\tstepped", "s aI d\ts t e p t");
result.add("side-\tsteps", "s aI d\ts t e p s");
result.add("side-\tstream", "s aI d\ts t r i: m");
result.add("side-\ttrack", "s aI d\tt r { k");
result.add("side-\ttracked", "s aI d\tt r { k t");
result.add("side-\twalk", "s aI d\tw O: k");
result.add("side-\twalks", "s aI d\tw O: k s");
result.add("side-\tways", "s aI d\tw eI z");
result.add("side-\twin-\tder", "s aI d\tw aI n\td @r");
result.add("side-\twise", "s aI d\tw aI z");
result.add("sides", "s aI d z");
result.add("side's", "s aI d z");
result.add("sids", "s I d z");
result.add("sid's", "s I d z");
result.add("sie", "s i:");
result.add("sie-\tben", "s i:\tb V n");
result.add("sie-\tber", "s i:\tb @r");
result.add("sie-\tcle", "s i:\tk V l");
result.add("sie-\tgel", "s i:\tg V l");
result.add("sie-\tgel's", "s i:\tg V l z");
result.add("sie-\tger", "s i:\tg @r");
result.add("sie-\tges", "s i:\tdZ V z");
result.add("sie-\tmens", "s i:\tm V n z");
result.add("sie-\tmens's", "s i:\tm V n z");
result.add("sie-\trac-\tki", "s I@\tQ t\ts k i:");
result.add("sie-\tver", "s i:\tv @r");
result.add("sie-\tvers", "s i:\tv @r z");
result.add("sie-\tvert", "s i:\tv @r t");
result.add("sie-\tving", "s I\tv I N");
result.add("sieg", "s i: g");
result.add("sieg-\tfried", "s i: g\tf r i: d");
result.add("sieg-\tler", "s i: g\tl @r");
result.add("sieg-\tmund", "s i: g\tm V n d");
result.add("siege", "s i: dZ");
result.add("siege-\tcraft", "s i: dZ\tk r { f t");
result.add("sieve", "s I v");
result.add("sieves", "s I v z");
result.add("sif-\tford", "s I\tf @r d");
result.add("sif-\tted", "s I f\tt V d");
result.add("sif-\tting", "s I f\tt I N");
result.add("sift", "s I f t");
result.add("sifts", "s I f t s");
result.add("sig", "s I g");
result.add("sig-\tma", "s I g\tm V");
result.add("sig-\tmund", "s I g\tm V n d");
result.add("sig-\tna", "s I g\tn V");
result.add("sig-\tna-\tling", "s I g\tn V\tl I N");
result.add("sig-\tna-\tto-\tries", "s I g\tn V\tt O@\ti: z");
result.add("sig-\tna-\tto-\try", "s I g\tn V\tt O@\ti:");
result.add("sig-\tna-\tture", "s I g\tn V\ttS @r");
result.add("sig-\tna-\ttures", "s I g\tn V\ttS @r z");
result.add("sig-\tnage", "s aI\tn I dZ");
result.add("sig-\tnal", "s I g\tn V l");
result.add("sig-\tnal-\tling", "s I g\tn V\tl I N");
result.add("sig-\tnaled", "s I g\tn V l d");
result.add("sig-\tnalled", "s I g\tn V l d");
result.add("sig-\tnals", "s I g\tn V l z");
result.add("sig-\tnal's", "s I g\tn V l z");
result.add("sig-\tner", "s aI\tn @r");
result.add("sig-\tners", "s aI\tn @r z");
result.add("sig-\tnet", "s I g\tn e t");
result.add("sig-\tni-\tfi-\tcance", "s I g\tn I\tf I\tk V n s");
result.add("sig-\tni-\tfi-\tcant", "s I g\tn I\tf I\tk V n t");
result.add("sig-\tni-\tfi-\tcant-\tly", "s I g\tn I\tf I\tk V n\tt l i:");
result.add("sig-\tni-\tfied", "s I g\tn I\tf aI d");
result.add("sig-\tni-\tfies", "s I g\tn I\tf aI z");
result.add("sig-\tni-\tfy", "s I g\tn I\tf aI");
result.add("sig-\tni-\tfy-\ting", "s I g\tn I\tf aI\tI N");
result.add("sig-\tning", "s aI\tn I N");
result.add("sig-\tnings", "s aI\tn I N z");
result.add("sig-\tno-\tre", "s i: n\tj O@\teI");
result.add("sig-\tno-\trel-\tli", "s i: g\tn O@\te\tl i:");
result.add("sig-\tno-\tri", "s I g\tn O@\ti:");
result.add("sig-\tnor", "s i: n\tj O@");
result.add("sigh", "s aI");
result.add("sigh-\tted", "s aI\tt V d");
result.add("sigh-\tting", "s aI\tt I N");
result.add("sigh-\ttings", "s aI\tt I N z");
result.add("sighed", "s aI d");
result.add("sighs", "s aI z");
result.add("sight", "s aI t");
result.add("sight-\tse-\ters", "s aI t\ts i:\t@r z");
result.add("sight-\tsee", "s aI t\ts i:");
result.add("sight-\tsee-\ting", "s aI t\ts i:\tI N");
result.add("sight-\tseer", "s aI t\ts i: r");
result.add("sights", "s aI t s");
result.add("sign", "s aI n");
result.add("sign-\tpost", "s aI n\tp @U s t");
result.add("sign-\tposts", "s aI n\tp @U s t s");
result.add("signed", "s aI n d");
result.add("signs", "s aI n z");
result.add("sign's", "s aI n z");
result.add("sikes", "s aI k s");
result.add("sikh", "s i: k");
result.add("sikhs", "s i: k s");
result.add("sil", "s I l");
result.add("sil-\tber", "s I l\tb @r");
result.add("sil-\tber-\tman", "s I l\tb @r\tm V n");
result.add("sil-\tho-\tuet-\tted", "s I\tl V\tw e\tt I d");
result.add("sil-\tho-\tuette", "s I\tl V\tw e t");
result.add("sil-\tho-\tuettes", "s I\tl V\tw e t s");
result.add("sil-\tky", "s I l\tk i:");
result.add("sil-\tler", "s I\tl @r");
result.add("sil-\tli-\ter", "s I\tl i:\t@r");
result.add("sil-\tli-\test", "s I\tl i:\tV s t");
result.add("sil-\tli-\tness", "s I\tl i:\tn V s");
result.add("sil-\tly", "s I\tl i:");
result.add("sil-\tva", "s I l\tv V");
result.add("sil-\tva-\tna", "s I l\tv Q\tn V");
result.add("sil-\tvas", "s I l\tv V z");
result.add("sil-\tva's", "s I l\tv V z");
result.add("sil-\tve-\tra-\tdo", "s I l\tv @r\tQ\td @U");
result.add("sil-\tve-\try", "s I l\tv @r\ti:");
result.add("sil-\tver", "s I l\tv @r");
result.add("sil-\tver-\tman", "s I l\tv @r\tm { n");
result.add("sil-\tver-\tplate", "s I l\tv @r p\tl eI t");
result.add("sil-\tver-\tside", "s I l\tv @r\ts aI d");
result.add("sil-\tver-\tsides", "s I l\tv @r\ts aI d z");
result.add("sil-\tver-\tstein", "s I l\tv @r s\tt i: n");
result.add("sil-\tver-\tware", "s I l\tv @r\tw e@");
result.add("sil-\tvers", "s I l\tv @r z");
result.add("sil-\tver's", "s I l\tv @r z");
result.add("sil-\tves-\tter", "s I l\tv e s\tt @r");
result.add("sil-\tves-\ttro", "s i: l\tv eI s\tt r @U");
result.add("sil-\tvi-\ta", "s I l\tv i:\tV");
result.add("sil-\tvi-\to", "s I l\tv i:\t@U");
result.add("sil-\tvi-\tus", "s I l\tv i:\tV s");
result.add("sil-\tvie", "s I l\tv i:");
result.add("sil-\tvis", "s I l\tv I s");
result.add("silk", "s I l k");
result.add("silk-\twood", "s I l\tk w U d");
result.add("silk-\tworm", "s I l\tk w @r m");
result.add("silk-\tworms", "s I l\tk w @r m z");
result.add("silks", "s I l k s");
result.add("sill", "s I l");
result.add("sills", "s I l z");
result.add("sils-\tby", "s I l\ts b i:");
result.add("silt", "s I l t");
result.add("sim", "s I m");
result.add("sim-\tba", "s I m\tb V");
result.add("sim-\tba's", "s I m\tb V z");
result.add("sim-\tkin", "s I m\tk I n");
result.add("sim-\tkins", "s I m\tk I n z");
result.add("sim-\tme-\tring", "s I\tm @r\tI N");
result.add("sim-\tmer", "s I\tm @r");
result.add("sim-\tmered", "s I\tm @r d");
result.add("sim-\tmers", "s I\tm @r z");
result.add("sim-\tmon", "s I\tm V n");
result.add("sim-\tmon-\ts's", "s I\tm V n\tz V z");
result.add("sim-\tmonds", "s I\tm V n d z");
result.add("sim-\tmons", "s I\tm V n z");
result.add("sim-\tp-\tler", "s I m\tp V\tl @r");
result.add("sim-\tper", "s I m\tp @r");
result.add("sim-\tple", "s I m\tp V l");
result.add("sim-\tson", "s I m\ts V n");
result.add("sime", "s aI m");
result.add("simm", "s I m");
result.add("simms", "s I m z");
result.add("simp-\tkins", "s I m\tp k I n z");
result.add("simp-\tlesse", "s I m\tp l e s");
result.add("simp-\tlest", "s I m\tp l V s t");
result.add("simp-\tlex", "s I m\tp l e k s");
result.add("simp-\tli-\tci-\tty", "s I m\tp l I\ts I\tt i:");
result.add("simp-\tli-\tfi-\tca-\ttion", "s I m\tp l I\tf I\tk eI\tS V n");
result.add("simp-\tli-\tfied", "s I m\tp l I\tf aI d");
result.add("simp-\tli-\tfies", "s I m\tp l I\tf aI z");
result.add("simp-\tli-\tfy", "s I m\tp l I\tf aI");
result.add("simp-\tli-\tfy-\ting", "s I m\tp l I\tf aI\tI N");
result.add("simp-\tlis-\ttic", "s I m\tp l I s\tt I k");
result.add("simp-\tly", "s I m\tp l i:");
result.add("simp-\tson", "s I m\tp s V n");
result.add("simp-\tson's", "s I m\tp s V n z");
result.add("sims", "s I m z");
result.add("sims-\tbu-\try", "s I m\tz b e@\ti:");
result.add("sin", "s I n");
result.add("sin-\tbad", "s I n\tb { d");
result.add("sin-\tce-\tri-\tty", "s I n\ts e@\tI\tt i:");
result.add("sin-\tcere", "s I n\ts I@");
result.add("sin-\tcere-\tly", "s I n\ts I@\tl i:");
result.add("sin-\tfo-\tni-\ta", "s I n\tf @U\tn i:\tV");
result.add("sin-\tful", "s I n\tf V l");
result.add("sin-\tg-\tler", "s I N\tg V\tl @r");
result.add("sin-\tg-\tling", "s I N\tg V\tl I N");
result.add("sin-\tga-\tpo-\tre-\tan", "s I N\tg V\tp O@\ti:\tV n");
result.add("sin-\tga-\tpo-\tre-\tans", "s I N\tg V\tp O@\ti:\tV n z");
result.add("sin-\tga-\tpore", "s I\tN V\tp O@");
result.add("sin-\tga-\tpore's", "s I\tN V\tp O@ z");
result.add("sin-\tger", "s I\tN @r");
result.add("sin-\tgers", "s I\tN @r z");
result.add("sin-\tger's", "s I\tN @r z");
result.add("sin-\tging", "s I\tN I N");
result.add("sin-\tgle", "s I N\tg V l");
result.add("sin-\tgle-\than-\tded", "s I N\tg V l\th { n\td V d");
result.add("sin-\tgle-\than-\tded-\tly", "s I N\tg V l\th { n\td V d\tl i:");
result.add("sin-\tgle-\tta-\try", "s I N\tg V l\tt e@\ti:");
result.add("sin-\tgle-\tton", "s I N\tg V l\tt V n");
result.add("sin-\tgle-\tton's", "s I N\tg V l\tt V n z");
result.add("sin-\tgled", "s I N\tg V l d");
result.add("sin-\tgles", "s I N\tg V l z");
result.add("sin-\tgu-\tla-\tri-\tza-\ttion", "s I N\tg j V\tl @r\tV\tz eI\tS V n");
result.add("sin-\tgu-\tlar", "s I N\tg j V\tl @r");
result.add("sin-\tgu-\tlar-\tly", "s I N\tg j V\tl @r\tl i:");
result.add("sin-\tha-\tlese", "s I\tn V\tl i: z");
result.add("sin-\tker", "s I N\tk @r");
result.add("sin-\tking", "s I N\tk I N");
result.add("sin-\tner", "s I\tn @r");
result.add("sin-\tners", "s I\tn @r z");
result.add("sin-\tning", "s I\tn I N");
result.add("sin-\tton", "s I n\tt V n");
result.add("sinc-\tlair", "s I n\tk l e@");
result.add("since", "s I n s");
result.add("sind", "s I n d");
result.add("sine", "s aI n");
result.add("sines", "s aI n z");
result.add("sing", "s I N");
result.add("sing-\tly", "s I N\tg l i:");
result.add("singe", "s I n dZ");
result.add("singed", "s I n dZ d");
result.add("singh", "s I N");
result.add("singh's", "s I N z");
result.add("sings", "s I N z");
result.add("sink", "s I N k");
result.add("sink-\tfield", "s I N\tk f i: l d");
result.add("sink-\thole", "s I N\tk h @U l");
result.add("sinks", "s I N k s");
result.add("sinn", "s I n");
result.add("sinned", "s I n d");
result.add("sins", "s I n z");
result.add("sinu-\tous", "s I n\tw V s");
result.add("sio-\tbhan", "S aU\tb Q n");
result.add("sioux", "s u:");
result.add("sip", "s I p");
result.add("sip-\tping", "s I\tp I N");
result.add("sip-\tple", "s I\tp V l");
result.add("sipe", "s aI p");
result.add("sipes", "s aI p s");
result.add("sipp", "s I p");
result.add("sipped", "s I p t");
result.add("sips", "s I p s");
result.add("sir", "s @r");
result.add("sir-\tkin", "s @r\tk I n");
result.add("sir-\tmons", "s @r\tm V n z");
result.add("sires", "s aI r z");
result.add("sis", "s I s");
result.add("sis-\tco", "s i: s\tk @U");
result.add("sis-\tkin", "s I s\tk I n");
result.add("sis-\tkind", "s I s\tk I n d");
result.add("sis-\tley", "s I z\tl i:");
result.add("sis-\tsel", "s I\ts V l");
result.add("sis-\tsie", "s I\ts i:");
result.add("sis-\tson", "s I\ts V n");
result.add("sis-\tsy", "s I\ts i:");
result.add("sis-\tter", "s I s\tt @r");
result.add("sis-\tter-\thood", "s I s\tt @r\th U d");
result.add("sis-\tters", "s I s\tt @r z");
result.add("sis-\tter's", "s I s\tt @r z");
result.add("sis-\ttine", "s I s\tt i: n");
result.add("sis-\tto", "s I s\tt @U");
result.add("sit", "s I t");
result.add("sit-\tcom", "s I t\tk Q m");
result.add("sit-\tcoms", "s I t\tk Q m z");
result.add("sit-\tka", "s I t\tk V");
result.add("sit-\tter", "s I\tt @r");
result.add("sit-\tters", "s I\tt @r z");
result.add("sit-\tting", "s I\tt I N");
result.add("site", "s aI t");
result.add("sites", "s aI t s");
result.add("site's", "s aI t s");
result.add("sithe", "s aI D");
result.add("sits", "s I t s");
result.add("sitz", "s I t s");
result.add("six", "s I k s");
result.add("six-\tfold", "s I k\ts f @U l d");
result.add("six-\tteen", "s I k\ts t i: n");
result.add("six-\tteens", "s I k\ts t i: n z");
result.add("six-\tteen's", "s I k\ts t i: n z");
result.add("six-\tteenth", "s I k\ts t i: n T");
result.add("six-\tteenths", "s I k\ts t i: n T s");
result.add("six-\tti-\teth", "s I k\ts t i:\tV T");
result.add("six-\tties", "s I k\ts t i: z");
result.add("six-\tty", "s I k\ts t i:");
result.add("six-\tty's", "s I k\ts t i: z");
result.add("sixth", "s I k s T");
result.add("sixths", "s I k s T s");
result.add("siz-\tz-\tling", "s I\tz V\tl I N");
result.add("siz-\tzle", "s I\tz V l");
result.add("siz-\tzled", "s I\tz V l d");
result.add("size", "s aI z");
result.add("sized", "s aI z d");
result.add("sizz-\tler", "s I z\tl @r");
result.add("sjo-\tberg", "S @U\tb @r g");
result.add("ska-\tted", "s k eI\tt V d");
result.add("ska-\tter", "s k eI\tt @r");
result.add("ska-\tters", "s k eI\tt @r z");
result.add("ska-\tting", "s k eI\tt I N");
result.add("skaff", "s k { f");
result.add("skan-\tdi-\ta", "s k { n\td i:\tV");
result.add("skate", "s k eI t");
result.add("skate-\tboar-\tding", "s k eI t\tb O@\td I N");
result.add("skate-\tboard", "s k eI t\tb O@ d");
result.add("skates", "s k eI t s");
result.add("ske-\tle-\ttal", "s k e\tl V\tt V l");
result.add("ske-\tle-\tton", "s k e\tl V\tt V n");
result.add("ske-\tle-\ttons", "s k e\tl V\tt V n z");
result.add("ske-\twer", "s k j u:\t@r");
result.add("ske-\twered", "s k j u:\t@r d");
result.add("ske-\twers", "s k j u:\t@r z");
result.add("ske-\twing", "s k j u:\tI N");
result.add("skeat", "s k i: t");
result.add("skee-\tter", "s k i:\tt @r");
result.add("skee-\tters", "s k i:\tt @r z");
result.add("skeel", "s k i: l");
result.add("skeen", "s k i: n");
result.add("skeens", "s k i: n z");
result.add("skees", "s k i: z");
result.add("skeet", "s k i: t");
result.add("skeets", "s k i: t s");
result.add("skel-\tly", "s k e\tl i:");
result.add("skel-\tter", "s k e l\tt @r");
result.add("skel-\tton", "s k e l\tt V n");
result.add("skene", "s k i: n");
result.add("skep-\tti-\tcal", "s k e p\tt V\tk V l");
result.add("skep-\tti-\tcal-\tly", "s k e p\tt I\tk V\tl i:");
result.add("skep-\tti-\tci-\tsm", "s k e p\tt I\ts I\tz V m");
result.add("skep-\ttic", "s k e p\tt I k");
result.add("skep-\ttics", "s k e p\tt I k s");
result.add("sker-\try", "s k e@\ti:");
result.add("sket-\tches", "s k e\ttS V z");
result.add("sket-\tching", "s k e\ttS I N");
result.add("sket-\tchy", "s k e\ttS i:");
result.add("sketch", "s k e tS");
result.add("sketch-\tbook", "s k e tS\tb U k");
result.add("sketch-\tbooks", "s k e tS\tb U k s");
result.add("sketched", "s k e tS t");
result.add("skew", "s k j u:");
result.add("skewed", "s k j u: d");
result.add("skews", "s k j u: z");
result.add("ski", "s k i:");
result.add("ski-\tba", "s k aI\tb V");
result.add("ski-\ter", "s k i:\t@r");
result.add("ski-\ters", "s k i:\t@r z");
result.add("ski-\ting", "s k i:\tI N");
result.add("ski-\tver", "s k aI\tv @r");
result.add("skid", "s k I d");
result.add("skid-\tded", "s k I\td V d");
result.add("skid-\tding", "s k I\td I N");
result.add("skid-\tmore", "s k I d\tm O@");
result.add("skids", "s k I d z");
result.add("skied", "s k i: d");
result.add("skies", "s k aI z");
result.add("skiff", "s k I f");
result.add("skiffs", "s k I f s");
result.add("skil-\tlern", "s k I\tl @r n");
result.add("skil-\tlet", "s k I\tl V t");
result.add("skil-\tling", "s k I\tl I N");
result.add("skil-\tlings", "s k I\tl I N z");
result.add("skill", "s k I l");
result.add("skill-\tful", "s k I l\tf V l");
result.add("skill-\tful-\tly", "s k I l\tf V\tl i:");
result.add("skill-\tman", "s k I l\tm V n");
result.add("skilled", "s k I l d");
result.add("skills", "s k I l z");
result.add("skim", "s k I m");
result.add("skim-\tmer", "s k I\tm @r");
result.add("skim-\tmers", "s k I\tm @r z");
result.add("skim-\tming", "s k I\tm I N");
result.add("skim-\tpi-\ter", "s k I m\tp i:\t@r");
result.add("skim-\tpi-\test", "s k I m\tp i:\tV s t");
result.add("skim-\tping", "s k I m\tp I N");
result.add("skim-\tpy", "s k I m\tp i:");
result.add("skimmed", "s k I m d");
result.add("skimp", "s k I m p");
result.add("skin", "s k I n");
result.add("skin-\thead", "s k I n\th e d");
result.add("skin-\theads", "s k I n\th e d z");
result.add("skin-\tless", "s k I n\tl V s");
result.add("skin-\tner", "s k I\tn @r");
result.add("skin-\tner's", "s k I\tn @r z");
result.add("skin-\tni-\ter", "s k I\tn i:\t@r");
result.add("skin-\tni-\test", "s k I\tn i:\tV s t");
result.add("skin-\tny", "s k I\tn i:");
result.add("skinks", "s k I N k s");
result.add("skinned", "s k I n d");
result.add("skins", "s k I n z");
result.add("skin's", "s k I n z");
result.add("skip", "s k I p");
result.add("skip-\tjack", "s k I p\tdZ { k");
result.add("skip-\tjacks", "s k I p\tdZ { k s");
result.add("skip-\tjack's", "s k I p\tdZ { k s");
result.add("skip-\tper", "s k I\tp @r");
result.add("skip-\tpers", "s k I\tp @r z");
result.add("skip-\tper's", "s k I\tp @r z");
result.add("skip-\tping", "s k I\tp I N");
result.add("skip-\tpy", "s k I\tp i:");
result.add("skip-\tton", "s k I p\tt V n");
result.add("skip-\twith", "s k I p\tw I T");
result.add("skipp", "s k I p");
result.add("skipped", "s k I p t");
result.add("skips", "s k I p s");
result.add("skir-\tmi-\tshes", "s k @r\tm I\tS V z");
result.add("skir-\tmi-\tshing", "s k @r\tm I\tS I N");
result.add("skir-\tmish", "s k @r\tm I S");
result.add("skir-\tted", "s k @r\tt V d");
result.add("skir-\tting", "s k @r\tt I N");
result.add("skirt", "s k @r t");
result.add("skirts", "s k @r t s");
result.add("skis", "s k i: z");
result.add("skit", "s k I t");
result.add("skit-\ttish", "s k I\tt I S");
result.add("skit-\ttish-\tness", "s k I\tt I S\tn V s");
result.add("skit-\ttle", "s k I\tt V l");
result.add("skit-\ttles", "s k I\tt V l z");
result.add("skits", "s k I t s");
result.add("sklar", "s k l Q@");
result.add("sko-\tda", "s k @U\td V");
result.add("sko-\tkie", "s k @U\tk i:");
result.add("skoal", "s k @U l");
result.add("skoff", "s k O: f");
result.add("skol-\tnik", "s k @U l\tn I k");
result.add("skow-\the-\tgan", "s k @U\th i:\tg V n");
result.add("skulk", "s k V l k");
result.add("skull", "s k V l");
result.add("skulls", "s k V l z");
result.add("skunk", "s k V N k");
result.add("skunks", "s k V N k s");
result.add("sky", "s k aI");
result.add("sky-\tbo-\txes", "s k aI\tb Q k\ts V z");
result.add("sky-\tbox", "s k aI\tb Q k s");
result.add("sky-\tcap", "s k aI\tk { p");
result.add("sky-\tdi-\tving", "s k aI\td aI\tv I N");
result.add("sky-\tdive", "s k aI\td aI v");
result.add("sky-\thigh", "s k aI\th aI");
result.add("sky-\tlark", "s k aI\tl Q@ k");
result.add("sky-\tlight", "s k aI\tl aI t");
result.add("sky-\tlights", "s k aI\tl aI t s");
result.add("sky-\tline", "s k aI\tl aI n");
result.add("sky-\troc-\tke-\tted", "s k aI\tr Q\tk V\tt V d");
result.add("sky-\troc-\tke-\tting", "s k aI\tr Q\tk V\tt I N");
result.add("sky-\troc-\tket", "s k aI\tr Q\tk V t");
result.add("sky-\tscra-\tper", "s k aI s\tk r eI\tp @r");
result.add("sky-\tscra-\tpers", "s k aI s\tk r eI\tp @r z");
result.add("sky-\tward", "s k aI\tw @r d");
result.add("sky-\twave", "s k aI\tw eI v");
result.add("sky-\tway", "s k aI\tw eI");
result.add("sky-\twri-\tter", "s k aI\tr aI\tt @r");
result.add("sky-\twri-\tters", "s k aI\tr aI\tt @r z");
result.add("sky-\twri-\tting", "s k aI\tr aI\tt I N");
result.add("sky's", "s k aI z");
result.add("sla-\tby", "s l eI\tb i:");
result.add("sla-\tgle", "s l eI\tg V l");
result.add("sla-\tlom", "s l Q\tl V m");
result.add("sla-\tsher", "s l {\tS @r");
result.add("sla-\tshes", "s l {\tS V z");
result.add("sla-\tshing", "s l {\tS I N");
result.add("sla-\tted", "s l eI\tt V d");
result.add("sla-\tter", "s l eI\tt @r");
result.add("sla-\tton", "s l {\tt V n");
result.add("sla-\tve-\try", "s l eI\tv @r\ti:");
result.add("sla-\tvic", "s l Q\tv I k");
result.add("sla-\tvin", "s l {\tv I n");
result.add("sla-\tvish", "s l eI\tv I S");
result.add("sla-\tvish-\tly", "s l {\tv I S\tl i:");
result.add("sla-\tvo-\tni-\ta", "s l V\tv @U\tn i:\tV");
result.add("slab", "s l { b");
result.add("slabs", "s l { b z");
result.add("slac-\tke-\tning", "s l {\tk V\tn I N");
result.add("slac-\tken", "s l {\tk V n");
result.add("slac-\tkened", "s l {\tk V n d");
result.add("slac-\tkens", "s l {\tk V n z");
result.add("slac-\tker", "s l {\tk @r");
result.add("slac-\tkers", "s l {\tk @r z");
result.add("slack", "s l { k");
result.add("slack-\tness", "s l { k\tn V s");
result.add("slacked", "s l { k t");
result.add("slacks", "s l { k s");
result.add("slade", "s l eI d");
result.add("slag", "s l { g");
result.add("slain", "s l eI n");
result.add("slam", "s l { m");
result.add("slam-\tmer", "s l {\tm @r");
result.add("slam-\tming", "s l {\tm I N");
result.add("slammed", "s l { m d");
result.add("slams", "s l { m z");
result.add("slan-\tde-\trous", "s l { n\td @r\tV s");
result.add("slan-\tder", "s l { n\td @r");
result.add("slan-\tdered", "s l { n\td @r d");
result.add("slan-\tted", "s l { n\tt V d");
result.add("slan-\tting", "s l { n\tt I N");
result.add("slane", "s l eI n");
result.add("slang", "s l { N");
result.add("slant", "s l { n t");
result.add("slap", "s l { p");
result.add("slap-\tdash", "s l { p\td { S");
result.add("slap-\tping", "s l {\tp I N");
result.add("slap-\tstick", "s l { p\ts t I k");
result.add("slape", "s l eI p");
result.add("slapped", "s l { p t");
result.add("slaps", "s l { p s");
result.add("slash", "s l { S");
result.add("slashed", "s l { S t");
result.add("slat", "s l { t");
result.add("slat-\tkin", "s l { t\tk I n");
result.add("slat-\tte-\try", "s l {\tt @r\ti:");
result.add("slat-\tter", "s l {\tt @r");
result.add("slate", "s l eI t");
result.add("slates", "s l eI t s");
result.add("slats", "s l { t s");
result.add("slaugh-\tte-\tring", "s l O:\tt @r\tI N");
result.add("slaugh-\tte-\trings", "s l O:\tt @r\tI N z");
result.add("slaugh-\tter", "s l O:\tt @r");
result.add("slaugh-\tter-\thou-\tses", "s l O:\tt @r\th aU\ts V z");
result.add("slaugh-\tter-\thouse", "s l O:\tt @r\th aU s");
result.add("slaugh-\ttered", "s l O:\tt @r d");
result.add("slaugh-\tters", "s l O:\tt @r z");
result.add("slav", "s l Q v");
result.add("slave", "s l eI v");
result.add("slaves", "s l eI v z");
result.add("slavs", "s l Q v z");
result.add("slaw", "s l O:");
result.add("slay", "s l eI");
result.add("slay-\tden", "s l eI\td V n");
result.add("slay-\ter", "s l eI\t@r");
result.add("slay-\ting", "s l eI\tI N");
result.add("slay-\tings", "s l eI\tI N z");
result.add("slay-\tton", "s l eI\tt V n");
result.add("slea-\tzy", "s l i:\tz i:");
result.add("sleaze", "s l i: z");
result.add("sled", "s l e d");
result.add("sled-\tding", "s l e\td I N");
result.add("sledge", "s l e dZ");
result.add("sledge-\tham-\tmer", "s l e dZ\th {\tm @r");
result.add("sleds", "s l e d z");
result.add("slee", "s l i:");
result.add("slee-\tker", "s l i:\tk @r");
result.add("slee-\tkest", "s l i:\tk V s t");
result.add("slee-\tper", "s l i:\tp @r");
result.add("slee-\tpers", "s l i:\tp @r z");
result.add("slee-\tpi-\tly", "s l i:\tp I\tl i:");
result.add("slee-\tpi-\tness", "s l i:\tp i:\tn V s");
result.add("slee-\tping", "s l i:\tp I N");
result.add("slee-\tpy", "s l i:\tp i:");
result.add("sleek", "s l i: k");
result.add("sleek-\tly", "s l i: k\tl i:");
result.add("sleep", "s l i: p");
result.add("sleep-\tless", "s l i: p\tl V s");
result.add("sleep-\twal-\tker", "s l i: p\tw O:\tk @r");
result.add("sleep-\twal-\tkers", "s l i: p\tw O:\tk @r z");
result.add("sleep-\twal-\tking", "s l i: p\tw O:\tk I N");
result.add("sleep-\twalk", "s l i: p\tw O: k");
result.add("sleep-\twear", "s l i: p\tw e@");
result.add("sleeps", "s l i: p s");
result.add("sleet", "s l i: t");
result.add("sleeve", "s l i: v");
result.add("sleeve-\tless", "s l i: v\tl V s");
result.add("sleeved", "s l i: v d");
result.add("sleeves", "s l i: v z");
result.add("sleigh", "s l eI");
result.add("sleight", "s l aI t");
result.add("slem-\tmer", "s l e\tm @r");
result.add("slemp", "s l e m p");
result.add("slen-\tder", "s l e n\td @r");
result.add("slept", "s l e p t");
result.add("slet-\tten", "s l e\tt V n");
result.add("sleu-\tthing", "s l u:\tT I N");
result.add("sleuth", "s l u: T");
result.add("sleuths", "s l u: T s");
result.add("slew", "s l u:");
result.add("sli-\tcer", "s l aI\ts @r");
result.add("sli-\tces", "s l aI\ts V z");
result.add("sli-\tcing", "s l aI\ts I N");
result.add("sli-\tder", "s l aI\td @r");
result.add("sli-\tding", "s l aI\td I N");
result.add("sli-\tmy", "s l aI\tm i:");
result.add("sli-\tthe-\tring", "s l I\tD @r\tI N");
result.add("sli-\tther", "s l I\tD @r");
result.add("sli-\tver", "s l I\tv @r");
result.add("sli-\tvers", "s l I\tv @r z");
result.add("sli-\tvo-\tvitz", "s l I\tv V\tv I t s");
result.add("sli-\twa", "s l aI\tv V");
result.add("slic-\tker", "s l I\tk @r");
result.add("slic-\tkers", "s l I\tk @r z");
result.add("slic-\tkest", "s l I\tk V s t");
result.add("slice", "s l aI s");
result.add("sliced", "s l aI s t");
result.add("slick", "s l I k");
result.add("slick-\tly", "s l I k\tl i:");
result.add("slicked", "s l I k t");
result.add("slicks", "s l I k s");
result.add("slid", "s l I d");
result.add("slide", "s l aI d");
result.add("slides", "s l aI d z");
result.add("slif-\tka", "s l I f\tk V");
result.add("sligh-\tted", "s l aI\tt V d");
result.add("sligh-\ttest", "s l aI\tt V s t");
result.add("sligh-\tting", "s l aI\tt I N");
result.add("slight", "s l aI t");
result.add("slight-\tly", "s l aI t\tl i:");
result.add("slights", "s l aI t s");
result.add("slim", "s l I m");
result.add("slim-\tmer", "s l I\tm @r");
result.add("slim-\tmest", "s l I\tm V s t");
result.add("slim-\tming", "s l I\tm I N");
result.add("slime", "s l aI m");
result.add("slimmed", "s l I m d");
result.add("slims", "s l I m z");
result.add("slin-\tger", "s l I\tN @r");
result.add("slin-\tging", "s l I\tN I N");
result.add("slin-\tker", "s l I N\tk @r");
result.add("slin-\tky", "s l I N\tk i:");
result.add("sling", "s l I N");
result.add("sling-\tshot", "s l I N\tS Q t");
result.add("sling-\tshots", "s l I N\tS Q t s");
result.add("slings", "s l I N z");
result.add("slip", "s l I p");
result.add("slip-\ton", "s l I\tp Q n");
result.add("slip-\tpage", "s l I\tp I dZ");
result.add("slip-\tpe-\try", "s l I\tp @r\ti:");
result.add("slip-\tper", "s l I\tp @r");
result.add("slip-\tpers", "s l I\tp @r z");
result.add("slip-\tping", "s l I\tp I N");
result.add("slip-\tshod", "s l I p\tS Q d");
result.add("slipped", "s l I p t");
result.add("slips", "s l I p s");
result.add("slit", "s l I t");
result.add("slit-\tting", "s l I\tt I N");
result.add("slits", "s l I t s");
result.add("slo-\tcomb", "s l @U\tk V m");
result.add("slo-\tcum", "s l @U\tk V m");
result.add("slo-\tgan", "s l @U\tg V n");
result.add("slo-\tgans", "s l @U\tg V n z");
result.add("slo-\tper", "s l @U\tp @r");
result.add("slo-\tping", "s l @U\tp I N");
result.add("slo-\tshing", "s l Q\tS I N");
result.add("slo-\tva-\tki-\ta", "s l @U\tv Q\tk i:\tV");
result.add("slo-\tva-\tki-\ta's", "s l @U\tv Q\tk i:\tV z");
result.add("slo-\tvak", "s l @U\tv { k");
result.add("slo-\tvaks", "s l @U\tv { k s");
result.add("slo-\tve-\tni-\ta", "s l @U\tv i:\tn i:\tV");
result.add("slo-\tve-\tni-\tan", "s l @U\tv i:\tn i:\tV n");
result.add("slo-\tven-\tli-\tness", "s l V\tv V n\tl i:\tn V s");
result.add("slo-\tven-\tly", "s l V\tv V n\tl i:");
result.add("slo-\tvene", "s l @U\tv i: n");
result.add("slo-\tvenes", "s l @U\tv i: n z");
result.add("slo-\twer", "s l @U\t@r");
result.add("slo-\twest", "s l @U\tV s t");
result.add("slo-\twing", "s l @U\tI N");
result.add("sloan", "s l @U n");
result.add("sloane", "s l @U n");
result.add("sloan's", "s l @U n z");
result.add("sloat", "s l @U t");
result.add("slob", "s l Q b");
result.add("slob-\tbe-\tring", "s l Q\tb @r\tI N");
result.add("slob-\tber", "s l Q\tb @r");
result.add("slobs", "s l Q b z");
result.add("sloe", "s l @U");
result.add("slog", "s l Q g");
result.add("slog-\tging", "s l Q\tg I N");
result.add("slogged", "s l Q g d");
result.add("slone", "s l @U n");
result.add("sloop", "s l u: p");
result.add("slop", "s l Q p");
result.add("slop-\tpi-\ter", "s l Q\tp i:\t@r");
result.add("slop-\tpi-\test", "s l Q\tp i:\tV s t");
result.add("slop-\tpi-\tly", "s l Q\tp I\tl i:");
result.add("slop-\tpi-\tness", "s l Q\tp i:\tn V s");
result.add("slop-\tpy", "s l Q\tp i:");
result.add("slope", "s l @U p");
result.add("slopes", "s l @U p s");
result.add("slosh", "s l Q S");
result.add("slot", "s l Q t");
result.add("slot-\tnick", "s l Q t\tn I k");
result.add("slot-\tted", "s l Q\tt V d");
result.add("slot-\tting", "s l Q\tt I N");
result.add("sloth", "s l @U T");
result.add("slots", "s l Q t s");
result.add("slou-\tches", "s l aU\ttS V z");
result.add("slou-\tching", "s l aU\ttS I N");
result.add("slouch", "s l aU tS");
result.add("slough", "s l V f");
result.add("sloughs", "s l V f s");
result.add("slow", "s l @U");
result.add("slow-\tdown", "s l @U\td aU n");
result.add("slow-\tdowns", "s l @U\td aU n z");
result.add("slow-\tly", "s l @U\tl i:");
result.add("slow-\tness", "s l @U\tn V s");
result.add("slow-\tpoke", "s l @U\tp @U k");
result.add("slowed", "s l @U d");
result.add("slows", "s l @U z");
result.add("slu-\tsher", "s l V\tS @r");
result.add("slud-\tgy", "s l V\tdZ i:");
result.add("sludge", "s l V dZ");
result.add("slug", "s l V g");
result.add("slug-\tfest", "s l V g\tf e s t");
result.add("slug-\tger", "s l V\tg @r");
result.add("slug-\tgers", "s l V\tg @r z");
result.add("slug-\tging", "s l V\tg I N");
result.add("slug-\tgish", "s l V\tg I S");
result.add("slug-\tgish-\tly", "s l V\tg I S\tl i:");
result.add("slug-\tgish-\tness", "s l V\tg I S\tn V s");
result.add("slugged", "s l V g d");
result.add("slugs", "s l V g z");
result.add("slui-\tcing", "s l u:\ts I N");
result.add("slui-\tter", "s l u:\tt @r");
result.add("sluice", "s l u: s");
result.add("slum", "s l V m");
result.add("slum-\tbe-\tring", "s l V m\tb @r\tI N");
result.add("slum-\tber", "s l V m\tb @r");
result.add("slum-\tping", "s l V m\tp I N");
result.add("slump", "s l V m p");
result.add("slumped", "s l V m p t");
result.add("slumps", "s l V m p s");
result.add("slums", "s l V m z");
result.add("slung", "s l V N");
result.add("slur", "s l @r");
result.add("slur-\tring", "s l @r\tI N");
result.add("slur-\try", "s l @r\ti:");
result.add("slurp", "s l @r p");
result.add("slurred", "s l @r d");
result.add("slurs", "s l @r z");
result.add("slush", "s l V S");
result.add("slut", "s l V t");
result.add("sly", "s l aI");
result.add("sly-\tly", "s l aI\tl i:");
result.add("sly-\tness", "s l aI\tn V s");
result.add("sma-\tsher", "s m {\tS @r");
result.add("sma-\tshes", "s m {\tS V z");
result.add("sma-\tshing", "s m {\tS I N");
result.add("smac-\tking", "s m {\tk I N");
result.add("smack", "s m { k");
result.add("smacked", "s m { k t");
result.add("smacks", "s m { k s");
result.add("smail", "s m eI l");
result.add("smal-\tlen", "s m O:\tl V n");
result.add("smal-\tler", "s m O:\tl @r");
result.add("smal-\tlest", "s m O:\tl V s t");
result.add("smal-\tley", "s m Q\tl i:");
result.add("smal-\tling", "s m O:\tl I N");
result.add("smal-\tlish", "s m O:\tl I S");
result.add("small", "s m O: l");
result.add("small-\tman", "s m O: l\tm V n");
result.add("small-\tness", "s m O: l\tn V s");
result.add("small-\tpox", "s m O: l\tp Q k s");
result.add("small-\ttalk", "s m O: l\tt O: k");
result.add("small-\ttown", "s m O: l\tt aU n");
result.add("small-\twood", "s m O: l\tw U d");
result.add("smalls", "s m O: l z");
result.add("smaltz", "s m { l t s");
result.add("smar-\tmy", "s m Q@\tm i:");
result.add("smar-\tter", "s m Q@\tt @r");
result.add("smar-\ttest", "s m Q@\tt V s t");
result.add("smar-\tting", "s m Q@\tt I N");
result.add("smarr", "s m { r");
result.add("smart", "s m Q@ t");
result.add("smart-\tly", "s m Q@ t\tl i:");
result.add("smarts", "s m Q@ t s");
result.add("smartt", "s m Q@ t");
result.add("smash", "s m { S");
result.add("smashed", "s m { S t");
result.add("smat-\tte-\tring", "s m {\tt @r\tI N");
result.add("smat-\tter", "s m {\tt @r");
result.add("sme-\tta-\tna", "s m e\tt V\tn V");
result.add("smea-\tring", "s m I@\tI N");
result.add("smear", "s m I@");
result.add("smeared", "s m I@ d");
result.add("smears", "s m I@ z");
result.add("smed-\tley", "s m e d\tl i:");
result.add("smee", "s m i:");
result.add("smel-\tling", "s m e\tl I N");
result.add("smel-\tly", "s m e\tl i:");
result.add("smel-\tter", "s m e l\tt @r");
result.add("smel-\tters", "s m e l\tt @r z");
result.add("smel-\tter's", "s m e l\tt @r z");
result.add("smel-\tting", "s m e l\tt I N");
result.add("smell", "s m e l");
result.add("smelled", "s m e l d");
result.add("smells", "s m e l z");
result.add("smelt", "s m e l t");
result.add("smi-\tley", "s m aI\tl i:");
result.add("smi-\tling", "s m aI\tl I N");
result.add("smi-\tling-\tly", "s m aI\tl I N\tl i:");
result.add("smi-\tthe-\treen", "s m I\tD @r\ti: n");
result.add("smi-\tthe-\treens", "s m I\tD @r\ti: n z");
result.add("smi-\tther", "s m I\tD @r");
result.add("smi-\tthers", "s m I\tD @r z");
result.add("smid-\tdy", "s m I\td i:");
result.add("smid-\tgen", "s m I\tdZ V n");
result.add("smile", "s m aI l");
result.add("smiled", "s m aI l d");
result.add("smiles", "s m aI l z");
result.add("smir-\tking", "s m @r\tk I N");
result.add("smir-\tnoff", "s m @r\tn O: f");
result.add("smir-\tnov", "s m @r\tn Q f");
result.add("smirk", "s m @r k");
result.add("smirks", "s m @r k s");
result.add("smit", "s m I t");
result.add("smit-\tten", "s m I\tt V n");
result.add("smit-\ttle", "s m I\tt V l");
result.add("smit-\tty", "s m I\tt i:");
result.add("smith", "s m I T");
result.add("smith-\tburg", "s m I T\tb @r g");
result.add("smith-\tfield", "s m I T\tf i: l d");
result.add("smith-\tso-\tni-\tan", "s m I T\ts @U\tn i:\tV n");
result.add("smith-\tso-\tni-\tan's", "s m I T\ts @U\tn i:\tV n z");
result.add("smith-\tson", "s m I T\ts V n");
result.add("smith-\tson's", "s m I T\ts V n z");
result.add("smith-\ttown", "s m I T\tt aU n");
result.add("smith-\twick", "s m I T\tw I k");
result.add("smiths", "s m I T s");
result.add("smith's", "s m I T s");
result.add("smits", "s m I t s");
result.add("smo-\tker", "s m @U\tk @r");
result.add("smo-\tkers", "s m @U\tk @r z");
result.add("smo-\tker's", "s m @U\tk @r z");
result.add("smo-\tkey", "s m @U\tk i:");
result.add("smo-\tking", "s m @U\tk I N");
result.add("smo-\tking's", "s m @U\tk I N z");
result.add("smo-\tky", "s m @U\tk i:");
result.add("smo-\tlensk", "s m @U\tl e n s k");
result.add("smo-\tthe-\tring", "s m V\tD @r\tI N");
result.add("smo-\tther", "s m V\tD @r");
result.add("smo-\tthered", "s m V\tD @r d");
result.add("smo-\tthers", "s m V\tD @r z");
result.add("smock", "s m Q k");
result.add("smog", "s m Q g");
result.add("smog-\tgi-\test", "s m Q\tg i:\tV s t");
result.add("smog-\tgy", "s m O:\tg i:");
result.add("smoke", "s m @U k");
result.add("smoke-\tjum-\tper", "s m @U k\tdZ V m\tp @r");
result.add("smoke-\tjum-\tpers", "s m @U k\tdZ V m\tp @r z");
result.add("smoke-\tless", "s m @U k\tl V s");
result.add("smoke-\tscreen", "s m @U k\ts k r i: n");
result.add("smoke-\tstack", "s m @U k\ts t { k");
result.add("smoke-\tstacks", "s m @U k\ts t { k s");
result.add("smoked", "s m @U k t");
result.add("smokes", "s m @U k s");
result.add("smol-\tde-\tring", "s m @U l\td @r\tI N");
result.add("smol-\tder", "s m @U l\td @r");
result.add("smoo-\tthen", "s m u:\tD V n");
result.add("smoo-\tthens", "s m u:\tD V n z");
result.add("smoo-\tther", "s m u:\tD @r");
result.add("smoo-\tthest", "s m u:\tD V s t");
result.add("smoo-\tthing", "s m u:\tD I N");
result.add("smoot", "s m u: t");
result.add("smooth", "s m u: D");
result.add("smooth-\tly", "s m u: D\tl i:");
result.add("smooth-\tness", "s m u: D\tn V s");
result.add("smoothed", "s m u: D d");
result.add("smooths", "s m u: D z");
result.add("smoots", "s m u: t s");
result.add("smor-\tgas-\tbord", "s m O@\tg V s\tb O@ d");
result.add("smouse", "s m aU s");
result.add("smuc-\tker", "s m V\tk @r");
result.add("smudge", "s m V dZ");
result.add("smudged", "s m V dZ d");
result.add("smug", "s m V g");
result.add("smug-\tgle", "s m V\tg V l");
result.add("smug-\tgled", "s m V\tg V l d");
result.add("smug-\tly", "s m V g\tl i:");
result.add("smug-\tness", "s m V g\tn V s");
result.add("smugg-\tler", "s m V g\tl @r");
result.add("smugg-\tlers", "s m V g\tl @r z");
result.add("smugg-\tler's", "s m V g\tl @r z");
result.add("smugg-\tling", "s m V g\tl I N");
result.add("smurf", "s m @r f");
result.add("smurfs", "s m @r f s");
result.add("smut", "s m V t");
result.add("smyr-\tna", "s m @r\tn V");
result.add("smyth", "s m aI T");
result.add("smythe", "s m aI D");
result.add("sna-\tfu", "s n {\tf u:");
result.add("sna-\tfus", "s n {\tf V s");
result.add("sna-\tking", "s n eI\tk I N");
result.add("sna-\tring", "s n e@\tI N");
result.add("snack", "s n { k");
result.add("snacks", "s n { k s");
result.add("snag", "s n { g");
result.add("snag-\tger", "s n {\tg @r");
result.add("snag-\tging", "s n {\tg I N");
result.add("snagged", "s n { g d");
result.add("snags", "s n { g z");
result.add("snail", "s n eI l");
result.add("snails", "s n eI l z");
result.add("snail's", "s n eI l z");
result.add("snake", "s n eI k");
result.add("snake-\tbite", "s n eI k\tb aI t");
result.add("snake-\tbites", "s n eI k\tb aI t s");
result.add("snake-\tlike", "s n eI k\tl aI k");
result.add("snakes", "s n eI k s");
result.add("snake's", "s n eI k s");
result.add("snap", "s n { p");
result.add("snap-\tdra-\tgon", "s n { p\td r {\tg V n");
result.add("snap-\tdra-\tgons", "s n { p\td r {\tg V n z");
result.add("snap-\tper", "s n {\tp @r");
result.add("snap-\tping", "s n {\tp I N");
result.add("snap-\tple", "s n {\tp V l");
result.add("snap-\tple's", "s n {\tp V l z");
result.add("snap-\tpy", "s n {\tp i:");
result.add("snap-\tshot", "s n { p\tS Q t");
result.add("snap-\tshots", "s n { p\tS Q t s");
result.add("snape", "s n eI p");
result.add("snapp", "s n { p");
result.add("snapped", "s n { p t");
result.add("snaps", "s n { p s");
result.add("snar-\tled", "s n Q@\tV l d");
result.add("snar-\tling", "s n Q@\tl I N");
result.add("snare", "s n e@");
result.add("snared", "s n e@ d");
result.add("snares", "s n e@ z");
result.add("snarl", "s n Q@ l");
result.add("snarls", "s n Q@ l z");
result.add("snat-\tcher", "s n {\ttS @r");
result.add("snat-\tchers", "s n {\ttS @r z");
result.add("snat-\tches", "s n {\ttS V z");
result.add("snat-\tching", "s n {\ttS I N");
result.add("snatch", "s n { tS");
result.add("snatched", "s n { tS t");
result.add("snaz-\tzi-\ter", "s n {\tz i:\t@r");
result.add("snaz-\tzy", "s n {\tz i:");
result.add("snea-\tker", "s n i:\tk @r");
result.add("snea-\tkers", "s n i:\tk @r z");
result.add("snea-\tking", "s n i:\tk I N");
result.add("snea-\tky", "s n i:\tk i:");
result.add("snead", "s n i: d");
result.add("sneak", "s n i: k");
result.add("sneaked", "s n i: k t");
result.add("sneaks", "s n i: k s");
result.add("sneath", "s n e T");
result.add("snee", "s n i:");
result.add("snee-\tring", "s n I@\tI N");
result.add("snee-\tzes", "s n i:\tz V z");
result.add("snee-\tzing", "s n i:\tz I N");
result.add("sneed", "s n i: d");
result.add("sneer", "s n I@");
result.add("sneered", "s n I@ d");
result.add("sneers", "s n I@ z");
result.add("sneeze", "s n i: z");
result.add("sneezed", "s n i: z d");
result.add("snel-\tlen", "s n e\tl V n");
result.add("snel-\tler", "s n e\tl @r");
result.add("snel-\tling", "s n e\tl I N");
result.add("snell", "s n e l");
result.add("sni-\tder", "s n aI\td @r");
result.add("sni-\tper", "s n aI\tp @r");
result.add("sni-\tpers", "s n aI\tp @r z");
result.add("sni-\tper's", "s n aI\tp @r z");
result.add("sni-\tping", "s n aI\tp I N");
result.add("snic-\tke-\tring", "s n I\tk @r\tI N");
result.add("snic-\tker", "s n I\tk @r");
result.add("snic-\tkered", "s n I\tk @r d");
result.add("snic-\tkers", "s n I\tk @r z");
result.add("snide", "s n aI d");
result.add("snif-\tfer", "s n I\tf @r");
result.add("snif-\tfing", "s n I\tf I N");
result.add("snif-\tfy", "s n I\tf i:");
result.add("sniff", "s n I f");
result.add("sniffed", "s n I f t");
result.add("sniffs", "s n I f s");
result.add("snip", "s n I p");
result.add("snip-\tpet", "s n I\tp V t");
result.add("snip-\tpets", "s n I\tp V t s");
result.add("snipe", "s n aI p");
result.add("sniped", "s n aI p t");
result.add("snipes", "s n aI p s");
result.add("snips", "s n I p s");
result.add("snit-\tching", "s n I\ttS I N");
result.add("snitch", "s n I tS");
result.add("snive-\tly", "s n aI v\tl i:");
result.add("sno-\tho-\tmish", "s n Q\th V\tm I S");
result.add("sno-\tring", "s n O@\tI N");
result.add("sno-\tver", "s n @U\tv @r");
result.add("sno-\twing", "s n @U\tI N");
result.add("sno-\twy", "s n @U\ti:");
result.add("snob", "s n Q b");
result.add("snob-\tbe-\try", "s n Q\tb @r\ti:");
result.add("snob-\tbish", "s n Q\tb I S");
result.add("snob-\tby", "s n Q\tb i:");
result.add("snobs", "s n Q b z");
result.add("snod-\tdy", "s n Q\td i:");
result.add("snod-\tgrass", "s n Q d\tg r { s");
result.add("snoke", "s n @U k");
result.add("snoo-\tker", "s n U\tk @r");
result.add("snoo-\tkered", "s n U\tk @r d");
result.add("snoo-\tping", "s n u:\tp I N");
result.add("snoo-\tpy", "s n u:\tp i:");
result.add("snoo-\tty", "s n u:\tt i:");
result.add("snoo-\tzing", "s n u:\tz I N");
result.add("snook", "s n U k");
result.add("snooks", "s n U k s");
result.add("snoop", "s n u: p");
result.add("snooze", "s n u: z");
result.add("snor-\tted", "s n O@\tt V d");
result.add("snor-\tting", "s n O@\tt I N");
result.add("snore", "s n O@");
result.add("snort", "s n O@ t");
result.add("snorts", "s n O@ t s");
result.add("snot", "s n O: t");
result.add("snout", "s n aU t");
result.add("snow", "s n @U");
result.add("snow-\tbal-\tling", "s n @U\tb O:\tl I N");
result.add("snow-\tball", "s n @U\tb O: l");
result.add("snow-\tballed", "s n @U\tb O: l d");
result.add("snow-\tballs", "s n @U\tb O: l z");
result.add("snow-\tball's", "s n @U\tb O: l z");
result.add("snow-\tbird", "s n @U\tb @r d");
result.add("snow-\tbirds", "s n @U\tb @r d z");
result.add("snow-\tboar-\tder", "s n @U\tb O@\td @r");
result.add("snow-\tboar-\tders", "s n @U\tb O@\td @r z");
result.add("snow-\tboard", "s n @U\tb O@ d");
result.add("snow-\tboards", "s n @U\tb O@ d z");
result.add("snow-\tbound", "s n @U\tb aU n d");
result.add("snow-\tdon", "s n @U\td V n");
result.add("snow-\tfall", "s n @U\tf Q l");
result.add("snow-\tfalls", "s n @U\tf Q l z");
result.add("snow-\tflake", "s n @U f\tl eI k");
result.add("snow-\tflakes", "s n @U f\tl eI k s");
result.add("snow-\tman", "s n @U\tm { n");
result.add("snow-\tmo-\tbile", "s n @U\tm @U\tb i: l");
result.add("snow-\tmo-\tbiles", "s n @U\tm @U\tb i: l z");
result.add("snow-\tplow", "s n @U p\tl aU");
result.add("snow-\tplows", "s n @U p\tl aU z");
result.add("snow-\tshoe", "s n @U\tS u:");
result.add("snow-\tstorm", "s n @U s\tt O@ m");
result.add("snow-\tstorms", "s n @U s\tt O@ m z");
result.add("snowed", "s n @U d");
result.add("snows", "s n @U z");
result.add("snub", "s n V b");
result.add("snub-\tbing", "s n V\tb I N");
result.add("snubbed", "s n V b d");
result.add("snuck", "s n V k");
result.add("snuf-\tfer", "s n V\tf @r");
result.add("snuf-\tfing", "s n V\tf I N");
result.add("snuff", "s n V f");
result.add("snuffed", "s n V f t");
result.add("snuffs", "s n V f s");
result.add("snug", "s n V g");
result.add("snug-\tging", "s n V\tg I N");
result.add("snug-\tgle", "s n V\tg V l");
result.add("snug-\tly", "s n V g\tl i:");
result.add("sny-\tder", "s n aI\td @r");
result.add("sny-\tder's", "s n aI\td @r z");
result.add("so", "s @U");
result.add("so-\tbe-\tring", "s @U\tb @r\tI N");
result.add("so-\tbel", "s @U\tb V l");
result.add("so-\tber", "s @U\tb @r");
result.add("so-\tber-\tly", "s @U\tb @r\tl i:");
result.add("so-\tbered", "s @U\tb @r d");
result.add("so-\tbers", "s @U\tb @r z");
result.add("so-\tbi-\tbor", "s @U\tb i:\tb O@");
result.add("so-\tble", "s @U\tb V l");
result.add("so-\tbri-\te-\tty", "s V b\tr aI\tV\tt i:");
result.add("so-\tbri-\tquet", "s @U b\tr I\tk eI");
result.add("so-\tcalled", "s @U\tk O: l d");
result.add("so-\tci-\te-\ttal", "s V\ts aI\tV\tt V l");
result.add("so-\tci-\te-\tte", "s @U\ts i:\te\tt eI");
result.add("so-\tci-\te-\tties", "s V\ts aI\tV\tt i: z");
result.add("so-\tci-\te-\tty", "s V\ts aI\tV\tt i:");
result.add("so-\tci-\te-\tty's", "s V\ts aI\tV\tt i: z");
result.add("so-\tci-\to", "s @U\ts i:\t@U");
result.add("so-\tci-\to-\te-\tco-\tno-\tmic", "s @U\ts i:\t@U\te\tk V\tn Q\tm I k");
result.add("so-\tci-\to-\tlo-\tgi-\tcal", "s @U\ts i:\tV\tl Q\tdZ I\tk V l");
result.add("so-\tci-\to-\tlo-\tgist", "s @U\ts i:\tQ\tl V\tdZ V s t");
result.add("so-\tci-\to-\tlo-\tgists", "s @U\ts i:\tQ\tl V\tdZ V s t s");
result.add("so-\tci-\to-\tlo-\tgy", "s @U\ts i:\tQ\tl V\tdZ i:");
result.add("so-\tci-\to-\tpath", "s @U\ts i:\t@U\tp { T");
result.add("so-\tcia-\tble", "s @U\tS V\tb V l");
result.add("so-\tcia-\tli-\tsm", "s @U\tS V\tl I\tz V m");
result.add("so-\tcia-\tli-\tza-\ttion", "s @U\tS V\tl I\tz eI\tS V n");
result.add("so-\tcia-\tli-\tzing", "s @U\tS V\tl aI\tz I N");
result.add("so-\tcia-\tlis-\ttic", "s @U\tS V\tl I s\tt I k");
result.add("so-\tcia-\tlist", "s @U\tS V\tl I s t");
result.add("so-\tcia-\tlists", "s @U\tS V\tl I s t s");
result.add("so-\tcia-\tlite", "s @U\tS V\tl aI t");
result.add("so-\tcia-\tlites", "s @U\tS V\tl aI t s");
result.add("so-\tcia-\tlize", "s @U\tS V\tl aI z");
result.add("so-\tcia-\tlized", "s @U\tS V\tl aI z d");
result.add("so-\tcial", "s @U\tS V l");
result.add("so-\tcial-\tly", "s @U\tS V\tl i:");
result.add("so-\tda", "s @U\td V");
result.add("so-\tdas", "s @U\td V z");
result.add("so-\tda's", "s @U\td V z");
result.add("so-\tder-\tblom", "s @U\td @r b\tl Q m");
result.add("so-\tder-\tstrom", "s Q\td @r s\tt r V m");
result.add("so-\tdi-\tum", "s @U\td i:\tV m");
result.add("so-\tdo-\tmize", "s V\td V\tm aI z");
result.add("so-\tdo-\tmized", "s V\td V\tm aI z d");
result.add("so-\tdo-\tmy", "s Q\td V\tm i:");
result.add("so-\tdom", "s Q\td V m");
result.add("so-\tdus", "s @U\td V s");
result.add("so-\tfa", "s @U\tf V");
result.add("so-\tfas", "s @U\tf V z");
result.add("so-\tfer", "s @U\tf @r");
result.add("so-\tfer's", "s @U\tf @r z");
result.add("so-\tfi-\ta", "s @U\tf i:\tV");
result.add("so-\tfi-\ta's", "s @U\tf i:\tV z");
result.add("so-\tfie", "s Q\tf i:");
result.add("so-\tfte-\tner", "s O:\tf V\tn @r");
result.add("so-\tfte-\tning", "s O:\tf V\tn I N");
result.add("so-\tftened", "s O:\tf V n d");
result.add("so-\tftens", "s O:\tf V n z");
result.add("so-\thi-\to", "s @U\th aI\t@U");
result.add("so-\tho", "s @U\th @U");
result.add("so-\tja", "s @U\tdZ V");
result.add("so-\tjourn", "s @U\tdZ @r n");
result.add("so-\tkai-\tya", "s V\tk aI\tj V");
result.add("so-\tko-\tlov", "s Q\tk V\tl Q v");
result.add("so-\tkol", "s @U\tk V l");
result.add("so-\tla", "s @U\tl V");
result.add("so-\tla-\tna", "s @U\tl {\tn V");
result.add("so-\tla-\tno", "s @U\tl Q\tn @U");
result.add("so-\tlace", "s Q\tl V s");
result.add("so-\tlan", "s @U\tl V n");
result.add("so-\tland", "s Q\tl V n d");
result.add("so-\tlar", "s @U\tl @r");
result.add("so-\tleil", "s @U\tl aI l");
result.add("so-\tlem-\tni-\tty", "s V\tl e m\tn V\tt i:");
result.add("so-\tlemn", "s Q\tl V m");
result.add("so-\tlemn-\tly", "s O:\tl V m\tl i:");
result.add("so-\tler", "s @U\tl @r");
result.add("so-\tli", "s @U\tl i:");
result.add("so-\tli-\tci-\tta-\ttion", "s V\tl I\ts V\tt eI\tS V n");
result.add("so-\tli-\tci-\tta-\ttions", "s V\tl I\ts V\tt eI\tS V n z");
result.add("so-\tli-\tci-\tted", "s V\tl I\ts V\tt V d");
result.add("so-\tli-\tci-\tting", "s V\tl I\ts V\tt I N");
result.add("so-\tli-\tci-\ttor", "s V\tl I\ts V\tt @r");
result.add("so-\tli-\tci-\ttors", "s V\tl I\ts V\tt @r z");
result.add("so-\tli-\tci-\ttous", "s V\tl I\ts V\tt V s");
result.add("so-\tli-\tci-\ttude", "s V\tl I\ts V\tt u: d");
result.add("so-\tli-\tcit", "s V\tl I\ts V t");
result.add("so-\tli-\tcits", "s V\tl I\ts V t s");
result.add("so-\tli-\tda-\tri-\tty", "s Q\tl I\td e@\tI\tt i:");
result.add("so-\tli-\tda-\tri-\tty's", "s Q\tl I\td e@\tI\tt i: z");
result.add("so-\tli-\tdi-\tfied", "s V\tl I\td I\tf aI d");
result.add("so-\tli-\tdi-\tfies", "s V\tl I\td I\tf aI z");
result.add("so-\tli-\tdi-\tfy", "s V\tl I\td I\tf aI");
result.add("so-\tli-\tdi-\tfy-\ting", "s V\tl I\td I\tf aI\tI N");
result.add("so-\tli-\tdi-\tty", "s V\tl I\td I\tt i:");
result.add("so-\tli-\tlo-\tquize", "s V\tl I\tl V k\tw aI z");
result.add("so-\tli-\tlo-\tquy", "s @U\tl I\tl Q k\tw i:");
result.add("so-\tli-\tman", "s Q\tl I\tm V n");
result.add("so-\tli-\tman's", "s Q\tl I\tm V n z");
result.add("so-\tli-\tta", "s @U\tl i:\tt V");
result.add("so-\tli-\tta-\tri-\tness", "s Q\tl I\tt e@\ti:\tn V s");
result.add("so-\tli-\tta-\try", "s Q\tl I\tt e@\ti:");
result.add("so-\tli-\ttaire", "s Q\tl I\tt e@");
result.add("so-\tli-\ttude", "s Q\tl I\tt u: d");
result.add("so-\tlid", "s Q\tl I d");
result.add("so-\tlid-\tly", "s Q\tl I d\tl i:");
result.add("so-\tlids", "s Q\tl I d z");
result.add("so-\tlin-\tgen", "s @U\tl I N\tg e n");
result.add("so-\tlis", "s @U\tl I s");
result.add("so-\tlo", "s @U\tl @U");
result.add("so-\tlo-\tist", "s @U\tl @U\tI s t");
result.add("so-\tlo-\tists", "s @U\tl @U\tI s t s");
result.add("so-\tlo-\tman", "s @U\tl @U\tm { n");
result.add("so-\tlo-\tmon", "s Q\tl V\tm V n");
result.add("so-\tlo-\tmon's", "s Q\tl V\tm V n z");
result.add("so-\tlo-\tviev", "s Q\tl @U\tv i: v");
result.add("so-\tlon", "s @U\tl V n");
result.add("so-\tlos", "s @U\tl @U z");
result.add("so-\tlu-\tble", "s Q l\tj V\tb V l");
result.add("so-\tlu-\ttion", "s V\tl u:\tS V n");
result.add("so-\tlu-\ttions", "s V\tl u:\tS V n z");
result.add("so-\tlum", "s @U\tl V m");
result.add("so-\tma", "s @U\tm V");
result.add("so-\tma-\tli", "s V\tm Q\tl i:");
result.add("so-\tma-\tli-\ta", "s V\tm Q\tl i:\tV");
result.add("so-\tma-\tli-\ta's", "s V\tm Q\tl i:\tV z");
result.add("so-\tma-\tli-\tland", "s V\tm Q\tl i:\tl { n d");
result.add("so-\tma-\tlian", "s V\tm Q l\tj V n");
result.add("so-\tma-\tlians", "s V\tm Q l\tj V n z");
result.add("so-\tma-\tlis", "s V\tm Q\tl i: z");
result.add("so-\tma-\tto-\ttro-\tpin", "s @U\tm V\tt Q t\tr V\tp V n");
result.add("so-\tmer-\tsaul-\tting", "s V\tm @r\ts O: l\tt I N");
result.add("so-\tmer-\tsault", "s V\tm @r\ts O: l t");
result.add("so-\tmer-\tsaults", "s V\tm @r\ts O: l t s");
result.add("so-\tmer-\tset", "s V\tm @r\ts e t");
result.add("so-\tmer-\tton", "s V\tm @r\tt V n");
result.add("so-\tmer-\tville", "s V\tm @r\tv I l");
result.add("so-\tmers", "s V\tm @r z");
result.add("so-\tmo-\tza", "s V\tm @U\tz V");
result.add("so-\tna-\tta", "s V\tn Q\tt V");
result.add("so-\tna-\ttas", "s Q\tn Q\tt V z");
result.add("so-\tnar", "s @U\tn Q@");
result.add("so-\tnet", "s @U\tn V t");
result.add("so-\tni", "s @U\tn i:");
result.add("so-\tnia", "s @U n\tj V");
result.add("so-\tnic", "s Q\tn I k");
result.add("so-\tnics", "s Q\tn I k s");
result.add("so-\tno-\tgram", "s O:\tn V g\tr { m");
result.add("so-\tno-\tgrams", "s O:\tn V g\tr { m z");
result.add("so-\tno-\tma", "s V\tn @U\tm V");
result.add("so-\tno-\tra", "s V\tn O@\tV");
result.add("so-\tno-\trous", "s Q\tn @r\tV s");
result.add("so-\tny", "s @U\tn i:");
result.add("so-\tny's", "s @U\tn i: z");
result.add("so-\tper", "s @U\tp @r");
result.add("so-\tpher", "s Q\tf @r");
result.add("so-\tphi-\ta", "s @U\tf i:\tV");
result.add("so-\tphie", "s @U\tf i:");
result.add("so-\tphie's", "s @U\tf i: z");
result.add("so-\tphis-\tti-\tca-\tted", "s V\tf I s\tt I\tk eI\tt V d");
result.add("so-\tphis-\tti-\tca-\ttion", "s V\tf I s\tt I\tk eI\tS V n");
result.add("so-\tphis-\tti-\tcate", "s V\tf I s\tt I\tk eI t");
result.add("so-\tphis-\tti-\tcates", "s V\tf I s\tt I\tk I t s");
result.add("so-\tpho-\tmo-\tric", "s Q\tf @U\tm Q@\tI k");
result.add("so-\tphoc-\tles", "s Q\tf V k\tl i: z");
result.add("so-\tphy", "s @U\tf i:");
result.add("so-\trel", "s O@\tV l");
result.add("so-\trell", "s O@\tV l");
result.add("so-\tren-\tsen", "s O@\tV n\ts V n");
result.add("so-\tren-\tson", "s O@\tV n\ts V n");
result.add("so-\tren-\tto", "s @r\te n\tt @U");
result.add("so-\tren-\tto's", "s @r\te n\tt @U z");
result.add("so-\tro-\tri-\tties", "s @r\tO@\tI\tt i: z");
result.add("so-\tro-\tri-\tty", "s @r\tO@\tI\tt i:");
result.add("so-\trus", "s O@\tV s");
result.add("so-\tsa", "s @U\ts V");
result.add("so-\tso", "s @U\ts @U");
result.add("so-\tter", "s @U\tt @r");
result.add("so-\tthe-\tby", "s Q\tT V\tb i:");
result.add("so-\tthe-\tby's", "s Q\tT V\tb i: z");
result.add("so-\tto", "s @U\tt @U");
result.add("so-\tur", "s aU\t@r");
result.add("so-\tur-\ting", "s aU\t@r\tI N");
result.add("so-\turs", "s aU\t@r z");
result.add("so-\tvi-\te-\tto-\tlo-\tgist", "s @U\tv i:\tV\tt Q\tl V\tdZ I s t");
result.add("so-\tvi-\te-\tto-\tlo-\tgists", "s @U\tv i:\tV\tt Q\tl V\tdZ I s t s");
result.add("so-\tvi-\tet", "s @U\tv i:\tV t");
result.add("so-\tvi-\tets", "s @U\tv i:\te t s");
result.add("so-\tvi-\tet's", "s @U\tv i:\te t s");
result.add("so-\twe-\tto", "s @U\teI\tt @U");
result.add("so-\twell", "s Q\tw e l");
result.add("so-\twer", "s @U\t@r");
result.add("so-\twers", "s @U\t@r z");
result.add("so-\twing", "s @U\tI N");
result.add("so-\tx's", "s Q k\ts V z");
result.add("so-\tya", "s OI\tV");
result.add("so-\tyuz", "s OI\tu: z");
result.add("soa-\tking", "s @U\tk I N");
result.add("soa-\tpy", "s @U\tp i:");
result.add("soa-\tres", "s O@\te s");
result.add("soa-\tring", "s O@\tI N");
result.add("soak", "s @U k");
result.add("soaked", "s @U k t");
result.add("soaks", "s @U k s");
result.add("soap", "s @U p");
result.add("soap-\tbox", "s @U p\tb Q k s");
result.add("soaps", "s @U p s");
result.add("soar", "s O@");
result.add("soared", "s O@ d");
result.add("soars", "s O@ z");
result.add("soave", "s @U v");
result.add("sob", "s Q b");
result.add("sob-\tbing", "s Q\tb I N");
result.add("sob-\tbing-\tly", "s Q\tb I N\tl i:");
result.add("sobbed", "s Q b d");
result.add("sobs", "s Q b z");
result.add("soc-\tcer", "s Q\tk @r");
result.add("soc-\tcer's", "s Q\tk @r z");
result.add("soc-\tha", "s @U\ttS V");
result.add("soc-\thi", "s @U\ttS i:");
result.add("soc-\thor", "s Q\tk @r");
result.add("soc-\tket", "s Q\tk V t");
result.add("soc-\tkets", "s Q\tk V t s");
result.add("soc-\tking", "s Q\tk I N");
result.add("soc-\tra-\ttes", "s Q k\tr V\tt i: z");
result.add("soc-\tra-\ttic", "s V k\tr {\tt I k");
result.add("sock", "s Q k");
result.add("socked", "s Q k t");
result.add("socks", "s Q k s");
result.add("sod", "s Q d");
result.add("sod-\tden", "s Q\td V n");
result.add("sof-\tfel", "s O:\tf V l");
result.add("sof-\tten", "s O:\tf V n");
result.add("sof-\tter", "s Q f\tt @r");
result.add("sof-\ttest", "s O: f\tt V s t");
result.add("soft", "s Q f t");
result.add("soft-\tball", "s O: f\tt b O: l");
result.add("soft-\tballs", "s O: f\tt b O: l z");
result.add("soft-\tly", "s O: f\tt l i:");
result.add("soft-\tness", "s O: f\tt n V s");
result.add("soft-\tsoap", "s O: f\tt s @U p");
result.add("soft-\tspo-\tken", "s O: f\tt s p @U\tk V n");
result.add("soft-\tware", "s O: f\tt w e@");
result.add("soft-\tware's", "s O: f\tt w e@ z");
result.add("soft-\twood", "s O: f\tt w U d");
result.add("sog-\tgy", "s Q\tg i:");
result.add("sohn", "s Q n");
result.add("soi-\tree", "s w Q@\teI");
result.add("soil", "s OI l");
result.add("soiled", "s OI l d");
result.add("soils", "s OI l z");
result.add("soil's", "s OI l z");
result.add("soir", "s OI r");
result.add("sok", "s Q k");
result.add("sol", "s Q l");
result.add("sol-\tberg", "s @U l\tb @r g");
result.add("sol-\tdan", "s @U l\td V n");
result.add("sol-\tde-\tring", "s Q\td @r\tI N");
result.add("sol-\tder", "s Q\td @r");
result.add("sol-\tdie-\tring", "s @U l\tdZ @r\tI N");
result.add("sol-\tdier", "s @U l\tdZ @r");
result.add("sol-\tdiers", "s @U l\tdZ @r z");
result.add("sol-\tdier's", "s @U l\tdZ @r z");
result.add("sol-\tdiers'", "s @U l\tdZ @r z");
result.add("sol-\tdo", "s @U l\td @U");
result.add("sol-\tlars", "s Q\tl @r z");
result.add("sol-\tler", "s Q\tl @r");
result.add("sol-\tlers", "s Q\tl @r z");
result.add("sol-\tley", "s Q\tl i:");
result.add("sol-\tlie", "s Q\tl i:");
result.add("sol-\tly", "s Q\tl i:");
result.add("sol-\tsti-\tces", "s O: l\ts t I\ts V z");
result.add("sol-\tstice", "s O: l\ts t I s");
result.add("sol-\tti", "s @U l\tt i:");
result.add("sol-\tva-\tble", "s Q l\tv V\tb V l");
result.add("sol-\tvay", "s @U l\tv eI");
result.add("sol-\tven-\tcy", "s O: l\tv V n\ts i:");
result.add("sol-\tvent", "s Q l\tv V n t");
result.add("sol-\tvents", "s O: l\tv V n t s");
result.add("sol-\tver", "s Q l\tv @r");
result.add("sol-\tvers", "s Q l\tv @r z");
result.add("sol-\tving", "s Q l\tv I N");
result.add("sol-\tzhe-\tnit-\tsyn", "s @U l\tz V\tn I t\ts I n");
result.add("sold", "s @U l d");
result.add("sole", "s @U l");
result.add("sole-\tdad", "s @U l\td { d");
result.add("sole-\tly", "s @U l\tl i:");
result.add("soles", "s @U l z");
result.add("soll", "s Q l");
result.add("solve", "s Q l v");
result.add("solved", "s Q l v d");
result.add("solves", "s Q l v z");
result.add("som", "s Q m");
result.add("som-\tber", "s Q m\tb @r");
result.add("som-\tber-\tly", "s Q m\tb @r\tl i:");
result.add("som-\tbre-\tro", "s Q m\tb r e@\t@U");
result.add("som-\tma", "s Q\tm V");
result.add("som-\tmer", "s V\tm @r");
result.add("som-\tmer-\tfeld", "s Q\tm @r\tf e l d");
result.add("som-\tmers", "s V\tm @r r z");
result.add("som-\tno-\tlent", "s Q m\tn V\tl V n t");
result.add("some", "s V m");
result.add("some-\tbo-\tdy", "s V m\tb Q\td i:");
result.add("some-\tbo-\tdy's", "s V m\tb Q\td i:");
result.add("some-\tday", "s V m\td eI");
result.add("some-\thow", "s V m\th aU");
result.add("some-\tone", "s V m\tw V n");
result.add("some-\tone's", "s V m\tw V n z");
result.add("some-\tplace", "s V m\tp l eI s");
result.add("some-\tthing", "s V m\tT I N");
result.add("some-\tthings", "s V m\tT I N z");
result.add("some-\ttime", "s V m\tt aI m");
result.add("some-\ttimes", "s V m\tt aI m z");
result.add("some-\twhat", "s V m\tw V t");
result.add("some-\twhere", "s V m\tw e@");
result.add("some-\twheres", "s V m\tw e@ z");
result.add("son", "s V n");
result.add("son-\tger", "s O:\tN @r");
result.add("son-\tgy", "s Q n\tdZ i:");
result.add("son-\tja", "s @U n\tj V");
result.add("son-\tnet", "s Q\tn e t");
result.add("son-\tnets", "s Q\tn e t s");
result.add("son-\tny", "s V\tn i:");
result.add("son-\tny's", "s V\tn i: z");
result.add("son-\ttag", "s Q n\tt { g");
result.add("son-\tya", "s @U n\tj V");
result.add("sond-\thei-\tmer", "s Q n\td h aI\tm @r");
result.add("sond-\theim", "s Q n\td h aI m");
result.add("sond-\theim's", "s Q n\td h aI m z");
result.add("sond-\tra", "s Q n\td r V");
result.add("sones", "s @U n z");
result.add("song", "s O: N");
result.add("song-\tbird", "s O: N\tb @r d");
result.add("song-\tbirds", "s O: N\tb @r d z");
result.add("song-\twri-\tter", "s O: N\tr aI\tt @r");
result.add("song-\twri-\tters", "s O: N\tr aI\tt @r z");
result.add("song-\twri-\tting", "s O: N\tr aI\tt I N");
result.add("songs", "s O: N z");
result.add("song's", "s O: N z");
result.add("sonne", "s Q n");
result.add("sons", "s V n z");
result.add("son's", "s V n z");
result.add("soo", "s u:");
result.add("soo-\tner", "s u:\tn @r");
result.add("soo-\tners", "s u:\tn @r z");
result.add("soo-\tner's", "s u:\tn @r z");
result.add("soo-\tnest", "s u:\tn V s t");
result.add("soo-\tter", "s U\tt @r");
result.add("soo-\tthing", "s u:\tD I N");
result.add("soo-\tthing-\tly", "s u:\tD I N\tl i:");
result.add("soo-\tty", "s u:\tt i:");
result.add("soon", "s u: n");
result.add("soong", "s u: N");
result.add("soot", "s U t");
result.add("sooth-\tsa-\tyer", "s u: T\ts eI\t@r");
result.add("sooth-\tsa-\tyers", "s u: T\ts eI\t@r z");
result.add("soothe", "s u: D");
result.add("soothed", "s u: D d");
result.add("soothes", "s u: D z");
result.add("soots", "s U t s");
result.add("sop", "s Q p");
result.add("sop-\tping", "s Q\tp I N");
result.add("sop-\tra-\tno", "s V p\tr Q\tn @U");
result.add("sop-\tra-\tnos", "s V p\tr {\tn @U z");
result.add("sope", "s @U p");
result.add("soph-\tro-\tni-\ta", "s @U f\tr @U\tn i:\tV");
result.add("sopho-\tmore", "s Q f\tm O@");
result.add("sopho-\tmores", "s Q f\tm O@ z");
result.add("sops", "s Q p s");
result.add("sor", "s O@");
result.add("sor-\tbet", "s O@\tb eI");
result.add("sor-\tbo", "s O@\tb @U");
result.add("sor-\tbonne", "s O@\tb Q n");
result.add("sor-\tbus", "s O@\tb V s");
result.add("sor-\tce-\trer", "s O@\ts @r\t@r");
result.add("sor-\tce-\trers", "s O@\ts @r\t@r z");
result.add("sor-\tce-\try", "s O@\ts @r\ti:");
result.add("sor-\tcha", "s O@\tk V");
result.add("sor-\tci", "s O@\ttS i:");
result.add("sor-\tdid", "s O@\td I d");
result.add("sor-\tghum", "s O@\tg V m");
result.add("sor-\tkin", "s O@\tk I n");
result.add("sor-\trel", "s O@\tV l");
result.add("sor-\trels", "s O@\tV l z");
result.add("sor-\trow", "s Q@\t@U");
result.add("sor-\trow-\tful", "s Q@\t@U\tf V l");
result.add("sor-\trows", "s Q@\t@U z");
result.add("sor-\try", "s Q@\ti:");
result.add("sor-\tted", "s O@\tt V d");
result.add("sor-\tter", "s O@\tt @r");
result.add("sor-\tters", "s O@\tt @r z");
result.add("sor-\ttie", "s O@\tt i:");
result.add("sor-\tties", "s O@\tt i: z");
result.add("sor-\tting", "s O@\tt I N");
result.add("sorce", "s O@ s");
result.add("sore", "s O@");
result.add("sore-\tly", "s O@\tl i:");
result.add("sores", "s O@ z");
result.add("sorge", "s O@ dZ");
result.add("sort", "s O@ t");
result.add("sorts", "s O@ t s");
result.add("so's", "s @U z");
result.add("sos-\tna", "s @U s\tn V");
result.add("soss", "s O: s");
result.add("sou-\tder", "s aU\td @r");
result.add("sou-\tli-\ter", "s u:\tl i:\t@r");
result.add("sou-\tpy", "s u:\tp i:");
result.add("sou-\tred", "s aU\t@r d");
result.add("sou-\tris", "s u:\tr I s");
result.add("sou-\tsa", "s u:\tz V");
result.add("sou-\tsa-\tphone", "s u:\tz V\tf @U n");
result.add("sou-\tsa's", "s u:\tz V z");
result.add("sou-\ttar", "s u:\tt Q@");
result.add("sou-\tter", "s u:\tt @r");
result.add("sou-\tthamp-\tton", "s aU T\th { m\tp t V n");
result.add("sou-\tthard", "s aU\tT @r d");
result.add("sou-\tther", "s V\tD @r");
result.add("sou-\tther-\tland", "s V\tD @r\tl V n d");
result.add("sou-\tther-\tly", "s V\tD @r\tl i:");
result.add("sou-\tther-\tner", "s V\tD @r\tn @r");
result.add("sou-\tther-\tners", "s V\tD @r\tn @r z");
result.add("sou-\tthern", "s V\tD @r n");
result.add("sou-\tthern-\tmost", "s V\tD @r n\tm @U s t");
result.add("sou-\tthers", "s V\tD @r z");
result.add("sou-\tve-\tnir", "s u:\tv V\tn I@");
result.add("sou-\tve-\tnirs", "s u:\tv V\tn I@ z");
result.add("sou-\tza", "s u:\tz V");
result.add("souf-\tfle", "s u: f\tl eI");
result.add("sought", "s O: t");
result.add("souk", "s u: k");
result.add("soul", "s @U l");
result.add("soul-\tful", "s @U l\tf V l");
result.add("soul-\tless", "s @U l\tl V s");
result.add("soule", "s aU l");
result.add("souls", "s @U l z");
result.add("soun-\tded", "s aU n\td V d");
result.add("soun-\tder", "s aU n\td @r");
result.add("soun-\tdest", "s aU n\td V s t");
result.add("soun-\tding", "s aU n\td I N");
result.add("soun-\tdings", "s aU n\td I N z");
result.add("sound", "s aU n d");
result.add("sound-\tbite", "s aU n\td b aI t");
result.add("sound-\tbites", "s aU n\td b aI t s");
result.add("sound-\tly", "s aU n\td l i:");
result.add("sound-\tness", "s aU n\td n V s");
result.add("sound-\ttrack", "s aU n\td t r { k");
result.add("sound-\ttracks", "s aU n\td t r { k s");
result.add("sounds", "s aU n d z");
result.add("sound's", "s aU n d z");
result.add("soup", "s u: p");
result.add("souped", "s u: p t");
result.add("soups", "s u: p s");
result.add("soup's", "s u: p s");
result.add("sour-\tces", "s O@\ts V z");
result.add("sour-\tcing", "s O@\ts I N");
result.add("source", "s O@ s");
result.add("source-\tbook", "s O@ s\tb U k");
result.add("sous", "s u: z");
result.add("south", "s aU T");
result.add("south-\tbound", "s aU T\tb aU n d");
result.add("south-\tdown", "s aU T\td aU n");
result.add("south-\tdown's", "s aU T\td aU n z");
result.add("south-\teas-\ttern", "s aU\tT i: s\tt @r n");
result.add("south-\teast", "s aU\tT i: s t");
result.add("south-\teast's", "s aU\tT i: s t s");
result.add("south-\tfield", "s aU T\tf i: l d");
result.add("south-\tgate", "s aU T\tg eI t");
result.add("south-\tland", "s aU T\tl { n d");
result.add("south-\tland's", "s aU T\tl { n d z");
result.add("south-\tport", "s aU T\tp O@ t");
result.add("south-\tward", "s aU T\tw @r d");
result.add("south-\twes-\ttern", "s aU T\tw e s\tt @r n");
result.add("south-\twest", "s aU T\tw e s t");
result.add("south-\twest's", "s aU T\tw e s t s");
result.add("south-\twood", "s aU T\tw U d");
result.add("south-\tworth", "s aU T\tw @r T");
result.add("souths", "s aU T s");
result.add("south's", "s aU T s");
result.add("sov-\tran", "s Q v\tr V n");
result.add("sov-\trans", "s Q v\tr V n z");
result.add("sov-\tran's", "s Q v\tr V n z");
result.add("sove-\treign", "s Q v\tr V n");
result.add("sove-\treign-\tty", "s Q v\tr V n\tt i:");
result.add("sove-\treigns", "s Q v\tr V n z");
result.add("sow", "s aU");
result.add("sow-\tder", "s @U\td @r");
result.add("sowed", "s aU d");
result.add("sowle", "s @U l");
result.add("sowles", "s @U l z");
result.add("sown", "s @U n");
result.add("sows", "s @U z");
result.add("sox", "s Q k s");
result.add("soy", "s OI");
result.add("soy-\tbean", "s OI\tb i: n");
result.add("soy-\tbeans", "s OI\tb i: n z");
result.add("spa", "s p Q");
result.add("spa-\tcer", "s p eI\ts @r");
result.add("spa-\tcers", "s p eI\ts @r z");
result.add("spa-\tces", "s p eI\ts V z");
result.add("spa-\tcey", "s p eI\ts i:");
result.add("spa-\tcing", "s p eI\ts I N");
result.add("spa-\tcious", "s p eI\tS V s");
result.add("spa-\tda", "s p Q\td V");
result.add("spa-\tder", "s p eI\td @r");
result.add("spa-\tghet-\tti", "s p V\tg e\tt i:");
result.add("spa-\tniard", "s p { n\tj @r d");
result.add("spa-\tniards", "s p { n\tj @r d z");
result.add("spa-\tniel", "s p { n\tj V l");
result.add("spa-\tniol", "s p { n\tj V l");
result.add("spa-\tnish", "s p {\tn I S");
result.add("spa-\tnos", "s p eI\tn @U z");
result.add("spa-\tring", "s p e@\tI N");
result.add("spa-\tring-\tly", "s p e@\tI N\tl i:");
result.add("spa-\tsm", "s p {\tz V m");
result.add("spa-\tsms", "s p {\tz V m z");
result.add("spa-\ttial", "s p eI\tS V l");
result.add("spa-\tto-\tla", "s p Q\tt @U\tl V");
result.add("spa-\ttu-\tla", "s p {\ttS U\tl V");
result.add("space", "s p eI s");
result.add("space-\tband", "s p eI s\tb { n d");
result.add("space-\tbands", "s p eI s\tb { n d z");
result.add("space-\tcraft", "s p eI s\tk r { f t");
result.add("space-\tcraft's", "s p eI s\tk r { f t s");
result.add("space-\tport", "s p eI s\tp O@ t");
result.add("space-\tship", "s p eI s\tS I p");
result.add("space-\tships", "s p eI s\tS I p s");
result.add("space-\tsuit", "s p eI\ts u: t");
result.add("space-\tsuits", "s p eI\ts u: t s");
result.add("space-\twal-\tking", "s p eI s\tw Q\tk I N");
result.add("space-\twalk", "s p eI s\tw Q k");
result.add("space-\twalks", "s p eI s\tw Q k s");
result.add("spaced", "s p eI s t");
result.add("spack", "s p { k");
result.add("spade", "s p eI d");
result.add("spade-\twork", "s p eI d\tw @r k");
result.add("spades", "s p eI d z");
result.add("spaf-\tford", "s p {\tf @r d");
result.add("spag-\tnu-\to-\tlo", "s p Q g\tn j u:\t@U\tl @U");
result.add("spahn", "s p Q n");
result.add("spaid", "s p eI d");
result.add("spain", "s p eI n");
result.add("spain's", "s p eI n z");
result.add("spak", "s p { k");
result.add("spake", "s p eI k");
result.add("spal-\tding", "s p O: l\td I N");
result.add("spal-\tla", "s p {\tl V");
result.add("spall", "s p O: l");
result.add("spam", "s p { m");
result.add("span", "s p { n");
result.add("span-\tdex", "s p { n\td V k s");
result.add("span-\tg-\tler", "s p { N\tg V\tl @r");
result.add("span-\tgle", "s p { N\tg V l");
result.add("span-\tgled", "s p { N\tg V l d");
result.add("span-\tking", "s p { N\tk I N");
result.add("span-\tky", "s p { n\tk i:");
result.add("span-\tner", "s p {\tn @r");
result.add("span-\tning", "s p {\tn I N");
result.add("spang", "s p { N");
result.add("spank", "s p { N k");
result.add("spanked", "s p { N k t");
result.add("spann", "s p { n");
result.add("spanned", "s p { n d");
result.add("spans", "s p { n z");
result.add("span's", "s p { n z");
result.add("spar", "s p Q@");
result.add("spar-\tger", "s p Q@\tdZ @r");
result.add("spar-\tking", "s p Q@\tk I N");
result.add("spar-\tkle", "s p Q@\tk V l");
result.add("spar-\tkled", "s p Q@\tk V l d");
result.add("spar-\tkles", "s p Q@\tk V l z");
result.add("spar-\tky", "s p Q@\tk i:");
result.add("spar-\tling", "s p Q@\tl I N");
result.add("spar-\tring", "s p Q@\tI N");
result.add("spar-\trow", "s p e@\t@U");
result.add("spar-\trows", "s p e@\t@U z");
result.add("spar-\tta", "s p Q@\tt V");
result.add("spar-\tta-\tcus", "s p Q@\tt V\tk V s");
result.add("spar-\ttan", "s p Q@\tt V n");
result.add("spar-\ttan-\tburg", "s p Q@\tt V n\tb @r g");
result.add("sparc", "s p Q@ k");
result.add("spare", "s p e@");
result.add("spared", "s p e@ d");
result.add("spares", "s p e@ z");
result.add("spark", "s p Q@ k");
result.add("spark-\tling", "s p Q@ k\tl I N");
result.add("spark-\tly", "s p Q@ k\tl i:");
result.add("spark-\tman", "s p Q@ k\tm V n");
result.add("sparked", "s p Q@ k t");
result.add("sparkes", "s p Q@ k s");
result.add("sparks", "s p Q@ k s");
result.add("sparr", "s p { r");
result.add("sparred", "s p Q@ d");
result.add("sparse", "s p Q@ s");
result.add("sparse-\tly", "s p Q@ s\tl i:");
result.add("spas", "s p Q z");
result.add("spat", "s p { t");
result.add("spat-\tte-\tring", "s p {\tt @r\tI N");
result.add("spat-\tter", "s p {\tt @r");
result.add("spat-\ttered", "s p {\tt @r d");
result.add("spat-\tters", "s p {\tt @r z");
result.add("spate", "s p eI t");
result.add("spates", "s p eI t s");
result.add("spath", "s p { T");
result.add("spats", "s p { t s");
result.add("spatz", "s p { t s");
result.add("spaul-\tding", "s p O: l\td I N");
result.add("spaw", "s p O:");
result.add("spaw-\tning", "s p Q\tn I N");
result.add("spawn", "s p Q n");
result.add("spawned", "s p O: n d");
result.add("spawns", "s p Q n z");
result.add("spayd", "s p eI d");
result.add("spe-\tci-\ta-\tli-\tty", "s p e\tS i:\t{\tl I\tt i:");
result.add("spe-\tci-\tfi-\tca-\ttion", "s p e\ts I\tf I\tk eI\tS V n");
result.add("spe-\tci-\tfi-\tca-\ttions", "s p e\ts I\tf I\tk eI\tS V n z");
result.add("spe-\tci-\tfi-\tci-\tty", "s p e\ts I\tf I\ts I\tt i:");
result.add("spe-\tci-\tfic", "s p V\ts I\tf I k");
result.add("spe-\tci-\tfical-\tly", "s p V\ts I\tf I k\tl i:");
result.add("spe-\tci-\tfics", "s p V\ts I\tf I k s");
result.add("spe-\tci-\tfied", "s p e\ts I\tf aI d");
result.add("spe-\tci-\tfies", "s p e\ts I\tf aI z");
result.add("spe-\tci-\tfy", "s p e\ts I\tf aI");
result.add("spe-\tci-\tfy-\ting", "s p e\ts I\tf aI\tI N");
result.add("spe-\tci-\tmen", "s p e\ts I\tm V n");
result.add("spe-\tci-\tmens", "s p e\ts I\tm V n z");
result.add("spe-\tcia-\tli-\tza-\ttion", "s p e\tS V\tl I\tz eI\tS V n");
result.add("spe-\tcia-\tli-\tzes", "s p e\tS V\tl aI\tz V z");
result.add("spe-\tcia-\tli-\tzing", "s p e\tS V\tl aI\tz I N");
result.add("spe-\tcia-\tlist", "s p e\tS V\tl I s t");
result.add("spe-\tcia-\tlists", "s p e\tS V\tl I s t s");
result.add("spe-\tcia-\tlize", "s p e\tS V\tl aI z");
result.add("spe-\tcia-\tlized", "s p e\tS V\tl aI z d");
result.add("spe-\tcial", "s p e\tS V l");
result.add("spe-\tcial-\tly", "s p e\tS V\tl i:");
result.add("spe-\tcial-\tties", "s p e\tS V l\tt i: z");
result.add("spe-\tcial-\tty", "s p e\tS V l\tt i:");
result.add("spe-\tciali-\tties", "s p e\tS V l\tt i: z");
result.add("spe-\tcials", "s p e\tS V l z");
result.add("spe-\tcies", "s p i:\tS i: z");
result.add("spe-\tcious", "s p i:\tS V s");
result.add("spe-\tcu-\tla-\tted", "s p e k\tj V\tl eI\tt V d");
result.add("spe-\tcu-\tla-\tting", "s p e k\tj V\tl eI\tt I N");
result.add("spe-\tcu-\tla-\ttion", "s p e k\tj V\tl eI\tS V n");
result.add("spe-\tcu-\tla-\ttions", "s p e k\tj V\tl eI\tS V n z");
result.add("spe-\tcu-\tla-\ttive", "s p e k\tj V\tl V\tt I v");
result.add("spe-\tcu-\tla-\ttor", "s p e k\tj V\tl eI\tt @r");
result.add("spe-\tcu-\tla-\ttors", "s p e k\tj V\tl eI\tt @r z");
result.add("spe-\tcu-\tlate", "s p e k\tj V\tl eI t");
result.add("spe-\tcu-\tlates", "s p e k\tj V\tl eI t s");
result.add("spe-\tran-\tza", "s p @r\tQ n\tz V");
result.add("spe-\tro", "s p e@\t@U");
result.add("spea-\tker", "s p i:\tk @r");
result.add("spea-\tker-\tship", "s p i:\tk @r\tS I p");
result.add("spea-\tkers", "s p i:\tk @r z");
result.add("spea-\tker's", "s p i:\tk @r z");
result.add("spea-\tking", "s p i:\tk I N");
result.add("spea-\tring", "s p I@\tI N");
result.add("speak", "s p i: k");
result.add("speaks", "s p i: k s");
result.add("spear", "s p I@");
result.add("spear-\thea-\tded", "s p I@\th e\td V d");
result.add("spear-\thea-\tding", "s p I@\th e\td I N");
result.add("spear-\thead", "s p I@\th e d");
result.add("spear-\tman", "s p I@\tm V n");
result.add("spears", "s p I@ z");
result.add("spec", "s p e k");
result.add("spec-\tkle", "s p e\tk V l");
result.add("spec-\tkled", "s p e\tk V l d");
result.add("spec-\tta-\tcle", "s p e k\tt V\tk V l");
result.add("spec-\tta-\tcles", "s p e k\tt V\tk V l z");
result.add("spec-\tta-\tcu-\tlar", "s p e k\tt { k\tj V\tl @r");
result.add("spec-\tta-\tcu-\tlar-\tly", "s p e k\tt { k\tj V\tl @r\tl i:");
result.add("spec-\tta-\ttor", "s p e k\tt eI\tt @r");
result.add("spec-\tta-\ttors", "s p e k\tt eI\tt @r z");
result.add("spec-\tter", "s p e k\tt @r");
result.add("spec-\tter's", "s p e k\tt @r z");
result.add("spec-\ttor", "s p e k\tt @r");
result.add("spec-\ttra", "s p e k\tt r V");
result.add("spec-\ttra's", "s p e k\tt r V z");
result.add("spec-\ttre", "s p e k\tt @r");
result.add("spec-\ttro-\tgraph", "s p e k\tt r V g\tr { f");
result.add("spec-\ttro-\tme-\tter", "s p e k\tt r Q\tm V\tt @r");
result.add("spec-\ttro-\tmet-\try", "s p e k\tt r Q\tm V t\tr i:");
result.add("spec-\ttro-\tsco-\tpy", "s p e k\tt r Q s\tk V\tp i:");
result.add("spec-\ttrum", "s p e k\tt r V m");
result.add("spec-\ttrums", "s p e k\tt r V m z");
result.add("spec-\ttrum's", "s p e k\tt r V m z");
result.add("specht", "s p e k t");
result.add("speck", "s p e k");
result.add("specks", "s p e k s");
result.add("specs", "s p e k s");
result.add("sped", "s p e d");
result.add("spee-\tches", "s p i:\ttS V z");
result.add("spee-\tded", "s p i:\td V d");
result.add("spee-\tder", "s p i:\td @r");
result.add("spee-\tders", "s p i:\td @r z");
result.add("spee-\tdi-\ter", "s p i:\td i:\t@r");
result.add("spee-\tdi-\tly", "s p i:\td I\tl i:");
result.add("spee-\tding", "s p i:\td I N");
result.add("spee-\tdo-\tme-\tter", "s p i:\td Q\tm V\tt @r");
result.add("spee-\tdy", "s p i:\td i:");
result.add("speece", "s p i: s");
result.add("speech", "s p i: tS");
result.add("speech-\tless", "s p i: tS\tl V s");
result.add("speech-\twri-\tter", "s p i: tS\tr aI\tt @r");
result.add("speech-\twri-\tters", "s p i: tS\tr aI\tt @r z");
result.add("speed", "s p i: d");
result.add("speed-\tboat", "s p i: d\tb @U t");
result.add("speed-\tboats", "s p i: d\tb @U t s");
result.add("speed-\tska-\tting", "s p i: d\ts k eI\tt I N");
result.add("speed-\tup", "s p i:\td V p");
result.add("speed-\tway", "s p i: d\tw eI");
result.add("speeds", "s p i: d z");
result.add("speer", "s p I@");
result.add("spei-\tcher", "s p aI\tk @r");
result.add("speight", "s p eI t");
result.add("speir", "s p I@");
result.add("speirs", "s p I@ z");
result.add("spel-\tler", "s p e\tl @r");
result.add("spel-\tlers", "s p e\tl @r z");
result.add("spel-\tling", "s p e\tl I N");
result.add("spel-\tlings", "s p e\tl I N z");
result.add("spel-\tling's", "s p e\tl I N z");
result.add("spel-\tman", "s p e l\tm V n");
result.add("spell", "s p e l");
result.add("spell-\tbin-\tding", "s p e l\tb aI n\td I N");
result.add("spell-\tbound", "s p e l\tb aU n d");
result.add("spell-\tman", "s p e l\tm V n");
result.add("spelled", "s p e l d");
result.add("spells", "s p e l z");
result.add("speltz", "s p e l t s");
result.add("spen-\tcer", "s p e n\ts @r");
result.add("spen-\tcer's", "s p e n\ts @r z");
result.add("spen-\tda-\tble", "s p e n\td V\tb V l");
result.add("spen-\tder", "s p e n\td @r");
result.add("spen-\tders", "s p e n\td @r z");
result.add("spen-\tding", "s p e n\td I N");
result.add("spen-\tg-\tler", "s p I\tN V\tl @r");
result.add("spen-\tser", "s p e n\ts @r");
result.add("spen-\tser's", "s p e n\ts @r z");
result.add("spence", "s p e n s");
result.add("spend", "s p e n d");
result.add("spend-\tthrift", "s p e n\td T r I f t");
result.add("spends", "s p e n d z");
result.add("spent", "s p e n t");
result.add("sper-\tling", "s p @r\tl I N");
result.add("sper-\try", "s p e@\ti:");
result.add("sperm", "s p @r m");
result.add("sperms", "s p @r m z");
result.add("spets-\tnaz", "s p e t\ts n { z");
result.add("spew", "s p j u:");
result.add("spew-\ting", "s p j u:\tI N");
result.add("spewed", "s p j u: d");
result.add("spews", "s p j u: z");
result.add("spey", "s p eI");
result.add("spey-\ter", "s p eI\t@r");
result.add("sphe-\tri-\tcal", "s f e@\tI\tk V l");
result.add("sphe-\troid", "s f I@\tOI d");
result.add("sphere", "s f I@");
result.add("spheres", "s f I@ z");
result.add("sphinx", "s f I N k s");
result.add("spi-\tcer", "s p aI\ts @r");
result.add("spi-\tces", "s p aI\ts V z");
result.add("spi-\tcey", "s p aI\ts i:");
result.add("spi-\tcing", "s p aI\ts I N");
result.add("spi-\tcy", "s p aI\ts i:");
result.add("spi-\tder", "s p aI\td @r");
result.add("spi-\tder-\tman", "s p aI\td @r\tm { n");
result.add("spi-\tders", "s p aI\td @r z");
result.add("spi-\te-\tring", "s p aI\t@r\tI N");
result.add("spi-\ter", "s p aI\t@r");
result.add("spi-\ters", "s p aI\t@r z");
result.add("spi-\tgot", "s p I\tg V t");
result.add("spi-\tgots", "s p I\tg V t s");
result.add("spi-\tker", "s p aI\tk @r");
result.add("spi-\tking", "s p aI\tk I N");
result.add("spi-\tky", "s p aI\tk i:");
result.add("spi-\tna", "s p i:\tn V");
result.add("spi-\tnach", "s p I\tn V tS");
result.add("spi-\tnal", "s p aI\tn V l");
result.add("spi-\tno-\tsa", "s p i:\tn @U\ts V");
result.add("spi-\tno-\tza", "s p V\tn @U\tz V");
result.add("spi-\tnoff", "s p I\tn O: f");
result.add("spi-\tnoffs", "s p I\tn O: f s");
result.add("spi-\tny", "s p aI\tn i:");
result.add("spi-\tra", "s p I@\tV");
result.add("spi-\tra-\tling", "s p aI\tr V\tl I N");
result.add("spi-\tral", "s p aI\tr V l");
result.add("spi-\tral-\tling", "s p aI\tr V\tl I N");
result.add("spi-\traled", "s p aI\tr V l d");
result.add("spi-\trals", "s p aI\tr V l z");
result.add("spi-\tri-\tted", "s p I@\tI\tt I d");
result.add("spi-\tri-\tted-\tness", "s p I@\tI\tt I d\tn V s");
result.add("spi-\tri-\tto", "s p I@\ti:\tt @U");
result.add("spi-\tri-\ttu-\ta-\tli-\tty", "s p I@\tI\ttS V\tw {\tl I\tt i:");
result.add("spi-\tri-\ttu-\ta-\tlism", "s p I@\tI\ttS V\tw V\tl I z m");
result.add("spi-\tri-\ttu-\ta-\tlist", "s p I@\tI\ttS V\tw V\tl I s t");
result.add("spi-\tri-\ttu-\ta-\tlists", "s p I@\tI\ttS V\tw V\tl I s t s");
result.add("spi-\tri-\ttu-\tal", "s p I@\tI\ttS V\tw V l");
result.add("spi-\tri-\ttu-\tal-\tly", "s p I@\tI\ttS V\tw V\tl i:");
result.add("spi-\tri-\ttu-\tals", "s p I@\tI\ttS V\tw V l z");
result.add("spi-\trit", "s p I@\tI t");
result.add("spi-\trits", "s p I@\tI t s");
result.add("spi-\tro", "s p I@\t@U");
result.add("spi-\tvey", "s p I\tv i:");
result.add("spic", "s p I k");
result.add("spic-\tkard", "s p I\tk @r d");
result.add("spice", "s p aI s");
result.add("spice-\tland", "s p aI s\tl { n d");
result.add("spiced", "s p aI s t");
result.add("spie", "s p i:");
result.add("spie-\tgel", "s p i:\tg V l");
result.add("spie-\tgel-\tman", "s p i:\tg V l\tm V n");
result.add("spie-\tler", "s p i:\tl @r");
result.add("spied", "s p aI d");
result.add("spiel", "s p i: l");
result.add("spiel-\tberg", "s p i: l\tb @r g");
result.add("spiel-\tberg's", "s p i: l\tb @r g z");
result.add("spiel-\tman", "s p i: l\tm V n");
result.add("spies", "s p aI z");
result.add("spif-\tfing", "s p I\tf I N");
result.add("spif-\tfy", "s p I\tf i:");
result.add("spight", "s p aI t");
result.add("spike", "s p aI k");
result.add("spiked", "s p aI k t");
result.add("spikes", "s p aI k s");
result.add("spil-\tlage", "s p I\tl I dZ");
result.add("spil-\tlane", "s p I\tl V n");
result.add("spil-\tler", "s p I\tl @r");
result.add("spil-\tlers", "s p I\tl @r z");
result.add("spil-\tling", "s p I\tl I N");
result.add("spil-\tlo-\tver", "s p I\tl @U\tv @r");
result.add("spill", "s p I l");
result.add("spill-\tway", "s p I l\tw eI");
result.add("spilled", "s p I l d");
result.add("spills", "s p I l z");
result.add("spilt", "s p I l t");
result.add("spin", "s p I n");
result.add("spin-\td-\tler", "s p I n\td V\tl @r");
result.add("spin-\tdle", "s p I n\td V l");
result.add("spin-\tner", "s p I\tn @r");
result.add("spin-\tners", "s p I\tn @r z");
result.add("spin-\tner's", "s p I\tn @r z");
result.add("spin-\tney", "s p I\tn i:");
result.add("spin-\tning", "s p I\tn I N");
result.add("spin-\toff", "s p I\tn O: f");
result.add("spin-\tster", "s p I n\ts t @r");
result.add("spine", "s p aI n");
result.add("spine-\tless", "s p aI n\tl V s");
result.add("spines", "s p aI n z");
result.add("spink", "s p I N k");
result.add("spinks", "s p I N k s");
result.add("spins", "s p I n z");
result.add("spire", "s p aI r");
result.add("spires", "s p aI r z");
result.add("spit", "s p I t");
result.add("spit-\tball", "s p I t\tb O: l");
result.add("spit-\tball's", "s p I t\tb O: l z");
result.add("spit-\tting", "s p I\tt I N");
result.add("spit-\ttle", "s p I\tt V l");
result.add("spit-\tzer", "s p I t\tz @r");
result.add("spite", "s p aI t");
result.add("spite-\tful", "s p aI t\tf V l");
result.add("spits", "s p I t s");
result.add("spitz", "s p I t s");
result.add("spla-\tshes", "s p l {\tS V z");
result.add("spla-\tshing", "s p l {\tS I N");
result.add("spla-\tshy", "s p l {\tS i:");
result.add("splash", "s p l { S");
result.add("splashed", "s p l { S t");
result.add("splat", "s p l { t");
result.add("splat-\tter", "s p l {\tt @r");
result.add("splat-\ttered", "s p l {\tt @r d");
result.add("sple-\tnic", "s p l e\tn I k");
result.add("spleen", "s p l i: n");
result.add("splen-\tdid", "s p l e n\td I d");
result.add("splen-\tdid-\tly", "s p l e n\td I d\tl i:");
result.add("splen-\tdor", "s p l e n\td @r");
result.add("spli-\tces", "s p l aI\ts V z");
result.add("spli-\tcing", "s p l aI\ts I N");
result.add("splice", "s p l aI s");
result.add("spliced", "s p l aI s t");
result.add("splin-\tte-\tring", "s p l I n\tt @r\tI N");
result.add("splin-\tte-\try", "s p l I n\tt @r\ti:");
result.add("splin-\tter", "s p l I n\tt @r");
result.add("splin-\ttered", "s p l I n\tt @r d");
result.add("splint", "s p l I n t");
result.add("splints", "s p l I n t s");
result.add("split", "s p l I t");
result.add("split-\tting", "s p l I\tt I N");
result.add("splits", "s p l I t s");
result.add("splur-\tging", "s p l @r\tdZ I N");
result.add("splurge", "s p l @r dZ");
result.add("splurged", "s p l @r dZ d");
result.add("spo-\tkane", "s p @U\tk { n");
result.add("spo-\tken", "s p @U\tk V n");
result.add("spo-\tra-\tdic", "s p @r\t{\td I k");
result.add("spo-\tra-\tdical-\tly", "s p @r\t{\td I k\tl i:");
result.add("spo-\trer", "s p O@\t@r");
result.add("spo-\tsa-\tto", "s p @U\ts Q\tt @U");
result.add("spock", "s p Q k");
result.add("spof-\tford", "s p Q\tf @r d");
result.add("spohr", "s p Q@");
result.add("spoi-\tlage", "s p OI\tl V dZ");
result.add("spoi-\tler", "s p OI\tl @r");
result.add("spoi-\tlers", "s p OI\tl @r z");
result.add("spoi-\tling", "s p OI\tl I N");
result.add("spoil", "s p OI l");
result.add("spoiled", "s p OI l d");
result.add("spoils", "s p OI l z");
result.add("spoke", "s p @U k");
result.add("spokes", "s p @U k s");
result.add("spokes-\tman", "s p @U k\ts m V n");
result.add("spokes-\tmen", "s p @U k\ts m e n");
result.add("spokes-\tpeo-\tple", "s p @U k\ts p i:\tp V l");
result.add("spokes-\tper-\tson", "s p @U k\ts p @r\ts V n");
result.add("spokes-\tper-\tsons", "s p @U k\ts p @r\ts V n z");
result.add("spokes-\two-\tman", "s p @U k\ts w U\tm V n");
result.add("spokes-\two-\tmen", "s p @U k\ts w I\tm e n");
result.add("spon-\tges", "s p V n\tdZ V z");
result.add("spon-\tgy", "s p V n\tdZ i:");
result.add("spon-\tso-\tring", "s p Q n\ts @r\tI N");
result.add("spon-\tsor", "s p Q n\ts @r");
result.add("spon-\tsor-\tship", "s p Q n\ts @r\tS I p");
result.add("spon-\tsor-\tships", "s p Q n\ts @r\tS I p s");
result.add("spon-\tsored", "s p Q n\ts @r d");
result.add("spon-\tsors", "s p Q n\ts @r z");
result.add("spon-\tsor's", "s p Q n\ts @r z");
result.add("spon-\tta-\tne-\ti-\tty", "s p Q n\tt V\tn i:\tV\tt i:");
result.add("spon-\tta-\tne-\tous", "s p Q n\tt eI\tn i:\tV s");
result.add("spon-\tta-\tne-\tous-\tly", "s p Q n\tt eI\tn i:\tV s\tl i:");
result.add("spong", "s p O: N");
result.add("sponge", "s p V n dZ");
result.add("sponged", "s p V n dZ d");
result.add("spoo-\tfing", "s p u:\tf I N");
result.add("spoo-\tky", "s p u:\tk i:");
result.add("spoo-\tner", "s p u:\tn @r");
result.add("spoof", "s p u: f");
result.add("spoofed", "s p u: f t");
result.add("spoofs", "s p u: f s");
result.add("spook", "s p u: k");
result.add("spooked", "s p u: k t");
result.add("spooks", "s p u: k s");
result.add("spool", "s p u: l");
result.add("spoon", "s p u: n");
result.add("spoon-\tful", "s p u: n\tf U l");
result.add("spoons", "s p u: n z");
result.add("spoor", "s p U@");
result.add("spoor's", "s p U@ z");
result.add("spor-\tted", "s p O@\tt V d");
result.add("spor-\tti-\ter", "s p O@\tt i:\t@r");
result.add("spor-\tting", "s p O@\tt I N");
result.add("spor-\tting-\tly", "s p O@\tt I N\tl i:");
result.add("spor-\tty", "s p O@\tt i:");
result.add("spore", "s p O@");
result.add("spores", "s p O@ z");
result.add("sporo-\tphyte", "s p O@\tf aI t");
result.add("sporo-\tphytes", "s p O@\tf aI t s");
result.add("sport", "s p O@ t");
result.add("sports", "s p O@ t s");
result.add("sport's", "s p O@ t s");
result.add("sports-\tcas-\tter", "s p O@ t\ts k { s\tt @r");
result.add("sports-\tcas-\tters", "s p O@ t\ts k { s\tt @r z");
result.add("sports-\tman", "s p O@ t\ts m V n");
result.add("sports-\tman-\tship", "s p O@ t\ts m V n\tS I p");
result.add("sports-\tmen", "s p O@ t\ts m e n");
result.add("sports-\twear", "s p O@ t\ts w e@");
result.add("sports-\twri-\tter", "s p O@ t\ts r aI\tt @r");
result.add("sports-\twri-\tters", "s p O@ t\ts r aI\tt @r z");
result.add("spot", "s p Q t");
result.add("spot-\tless", "s p Q t\tl V s");
result.add("spot-\tligh-\tted", "s p Q t\tl aI\tt V d");
result.add("spot-\tligh-\tting", "s p Q t\tl aI\tt I N");
result.add("spot-\tlight", "s p Q t\tl aI t");
result.add("spot-\tlights", "s p Q t\tl aI t s");
result.add("spot-\tted", "s p Q\tt V d");
result.add("spot-\tter", "s p Q\tt @r");
result.add("spot-\tters", "s p Q\tt @r z");
result.add("spot-\tting", "s p Q\tt I N");
result.add("spot-\tty", "s p Q\tt i:");
result.add("spots", "s p Q t s");
result.add("spou-\tsal", "s p aU\tz V l");
result.add("spou-\tses", "s p aU\ts V z");
result.add("spou-\tse's", "s p aU\ts V z");
result.add("spou-\tted", "s p aU\tt V d");
result.add("spou-\tting", "s p aU\tt I N");
result.add("spouse", "s p aU s");
result.add("spout", "s p aU t");
result.add("spra-\tyer", "s p r eI\t@r");
result.add("spra-\tyers", "s p r eI\t@r z");
result.add("spra-\tying", "s p r eI\tI N");
result.add("sprac-\tk-\tlen", "s p r {\tk V\tl V n");
result.add("sprague", "s p r eI g");
result.add("sprague's", "s p r eI g z");
result.add("sprain", "s p r eI n");
result.add("sprained", "s p r eI n d");
result.add("sprains", "s p r eI n z");
result.add("sprang", "s p r { N");
result.add("spratt", "s p r { t");
result.add("spraw-\tling", "s p r O:\tl I N");
result.add("sprawl", "s p r O: l");
result.add("sprawled", "s p r O: l d");
result.add("sprawls", "s p r O: l z");
result.add("spray", "s p r eI");
result.add("sprayed", "s p r eI d");
result.add("sprays", "s p r eI z");
result.add("sprea-\tder", "s p r e\td @r");
result.add("sprea-\tding", "s p r e\td I N");
result.add("spread", "s p r e d");
result.add("spread-\tsheet", "s p r e d\tS i: t");
result.add("spread-\tsheets", "s p r e d\tS i: t s");
result.add("spreads", "s p r e d z");
result.add("spree", "s p r i:");
result.add("sprees", "s p r i: z");
result.add("spreng", "s p r e N");
result.add("sprigg", "s p r I g");
result.add("sprigged", "s p r I g d");
result.add("spright-\tly", "s p r aI t\tl i:");
result.add("sprin-\tger", "s p r I\tN @r");
result.add("sprin-\tger-\tville", "s p r I\tN @r\tv I l");
result.add("sprin-\tging", "s p r I\tN I N");
result.add("sprin-\tkle", "s p r I N\tk V l");
result.add("sprin-\tkled", "s p r I N\tk V l d");
result.add("sprin-\tkles", "s p r I N\tk V l z");
result.add("sprin-\tted", "s p r I n\tt V d");
result.add("sprin-\tter", "s p r I n\tt @r");
result.add("sprin-\tters", "s p r I n\tt @r z");
result.add("sprin-\tting", "s p r I n\tt I N");
result.add("spring", "s p r I N");
result.add("spring-\tboard", "s p r I N\tb O@ d");
result.add("spring-\tdale", "s p r I N\td eI l");
result.add("spring-\tfield", "s p r I N\tf i: l d");
result.add("spring-\tfield's", "s p r I N\tf i: l d z");
result.add("spring-\tsteen", "s p r I N\ts t i: n");
result.add("spring-\tsteen's", "s p r I N\ts t i: n z");
result.add("spring-\ttime", "s p r I N\tt aI m");
result.add("springs", "s p r I N z");
result.add("spring's", "s p r I N z");
result.add("sprink-\tler", "s p r I N\tk l @r");
result.add("sprink-\tlers", "s p r I N\tk l @r z");
result.add("sprink-\tling", "s p r I N\tk l I N");
result.add("sprint", "s p r I n t");
result.add("sprints", "s p r I n t s");
result.add("sprint's", "s p r I n t s");
result.add("sprite", "s p r aI t");
result.add("sproat", "s p r @U t");
result.add("sproc-\tket", "s p r Q\tk V t");
result.add("sprong", "s p r O: N");
result.add("sprott", "s p r Q t");
result.add("sprou-\tted", "s p r aU\tt V d");
result.add("sprou-\tting", "s p r aU\tt I N");
result.add("sproul", "s p r aU l");
result.add("sprout", "s p r aU t");
result.add("sprouts", "s p r aU t s");
result.add("spru-\tcing", "s p r u:\ts I N");
result.add("spruce", "s p r u: s");
result.add("spruced", "s p r u: s t");
result.add("sprung", "s p r V N");
result.add("spry", "s p r aI");
result.add("spu-\tri-\tous", "s p j U@\ti:\tV s");
result.add("spud", "s p V d");
result.add("spuds", "s p V d z");
result.add("spud's", "s p V d z");
result.add("spun", "s p V n");
result.add("spun-\tky", "s p V N\tk i:");
result.add("spunk", "s p V N k");
result.add("spur", "s p @r");
result.add("spur-\tgeon", "s p @r\tdZ V n");
result.add("spur-\tling", "s p @r\tl I N");
result.add("spur-\tlock", "s p @r\tl Q k");
result.add("spur-\tning", "s p @r\tn I N");
result.add("spur-\tri-\ter", "s p @r\ti:\t@r");
result.add("spur-\tring", "s p @r\tI N");
result.add("spur-\tted", "s p @r\tt V d");
result.add("spur-\tting", "s p @r\tt I N");
result.add("spurge", "s p @r dZ");
result.add("spurn", "s p @r n");
result.add("spurned", "s p @r n d");
result.add("spurns", "s p @r n z");
result.add("spurred", "s p @r d");
result.add("spurs", "s p @r z");
result.add("spurt", "s p @r t");
result.add("spurts", "s p @r t s");
result.add("sput-\tnik", "s p V t\tn I k");
result.add("sput-\tniks", "s p V t\tn I k s");
result.add("sput-\tte-\tring", "s p V\tt @r\tI N");
result.add("sput-\tter", "s p V\tt @r");
result.add("sput-\ttered", "s p V\tt @r d");
result.add("sput-\tters", "s p V\tt @r z");
result.add("spy", "s p aI");
result.add("spy-\tglass", "s p aI g\tl { s");
result.add("spy-\ting", "s p aI\tI N");
result.add("squa-\tdron", "s k w Q d\tr V n");
result.add("squa-\tdrons", "s k w Q d\tr V n z");
result.add("squa-\tlid", "s k w Q\tl I d");
result.add("squa-\tlor", "s k w Q\tl @r");
result.add("squa-\tring", "s k w e@\tI N");
result.add("squa-\tshing", "s k w Q\tS I N");
result.add("squa-\tshy", "s k w Q\tS i:");
result.add("squab-\tb-\tling", "s k w Q\tb V\tl I N");
result.add("squab-\tble", "s k w Q\tb V l");
result.add("squab-\tbled", "s k w Q\tb V l d");
result.add("squab-\tbles", "s k w Q\tb V l z");
result.add("squad", "s k w Q d");
result.add("squads", "s k w Q d z");
result.add("squad's", "s k w Q d z");
result.add("squall", "s k w O: l");
result.add("squalls", "s k w O: l z");
result.add("squan-\tde-\tring", "s k w Q n\td @r\tI N");
result.add("squan-\tder", "s k w Q n\td @r");
result.add("squan-\tdered", "s k w Q n\td @r d");
result.add("square", "s k w e@");
result.add("square-\tly", "s k w e@\tl i:");
result.add("squared", "s k w e@ d");
result.add("squares", "s k w e@ z");
result.add("squash", "s k w Q S");
result.add("squashed", "s k w Q S t");
result.add("squat", "s k w Q t");
result.add("squat-\tter", "s k w Q\tt @r");
result.add("squat-\tters", "s k w Q\tt @r z");
result.add("squat-\tting", "s k w Q\tt I N");
result.add("squats", "s k w Q t s");
result.add("squaw-\tking", "s k w O:\tk I N");
result.add("squawk", "s k w O: k");
result.add("squawks", "s k w O: k s");
result.add("squea-\tker", "s k w i:\tk @r");
result.add("squea-\tkers", "s k w i:\tk @r z");
result.add("squea-\tking", "s k w i:\tk I N");
result.add("squea-\tky", "s k w i:\tk i:");
result.add("squea-\tling", "s k w i:\tl I N");
result.add("squea-\tmish", "s k w i:\tm I S");
result.add("squea-\tmish-\tness", "s k w i:\tm I S\tn V s");
result.add("squeak", "s k w i: k");
result.add("squeaked", "s k w i: k t");
result.add("squeaks", "s k w i: k s");
result.add("squeal", "s k w i: l");
result.add("squeals", "s k w i: l z");
result.add("squee-\tgee", "s k w i:\tdZ i:");
result.add("squee-\tzes", "s k w i:\tz V z");
result.add("squee-\tzing", "s k w i:\tz I N");
result.add("squeeze", "s k w i: z");
result.add("squeezed", "s k w i: z d");
result.add("squel-\tching", "s k w e l\ttS I N");
result.add("squelch", "s k w e l tS");
result.add("squelched", "s k w e l tS t");
result.add("squi-\ter", "s k w aI\t@r");
result.add("squi-\ters", "s k w aI\t@r z");
result.add("squi-\tres", "s k w aI\t@r z");
result.add("squi-\tshy", "s k w I\tS i:");
result.add("squibb", "s k w I b");
result.add("squibb's", "s k w I b z");
result.add("squid", "s k w I d");
result.add("squig-\tgle", "s k w I\tg V l");
result.add("squig-\tgles", "s k w I\tg V l z");
result.add("squin-\tting", "s k w I n\tt I N");
result.add("squint", "s k w I n t");
result.add("squir-\tming", "s k w @r\tm I N");
result.add("squir-\trel", "s k w @r\tV l");
result.add("squir-\treled", "s k w @r\tV l d");
result.add("squir-\trels", "s k w @r\tV l z");
result.add("squir-\tted", "s k w @r\tt V d");
result.add("squir-\tting", "s k w @r\tt I N");
result.add("squire", "s k w aI r");
result.add("squirm", "s k w @r m");
result.add("squirms", "s k w @r m z");
result.add("squirt", "s k w @r t");
result.add("squirts", "s k w @r t s");
result.add("sram", "S r { m");
result.add("sri", "S r i:");
result.add("sri-\tlan-\tka", "s r i:\tl { N\tk V");
result.add("sri-\tna-\tgar", "s r i:\tn V\tg Q@");
result.add("st", "s t r i: t");
result.add("sta", "s t V");
result.add("sta-\tb-\tler", "s t eI\tb V\tl @r");
result.add("sta-\tb-\tlest", "s t eI\tb V\tl V s t");
result.add("sta-\tbi-\tli-\tty", "s t V\tb I\tl I\tt i:");
result.add("sta-\tbi-\tli-\tza-\ttion", "s t eI\tb I\tl I\tz eI\tS V n");
result.add("sta-\tbi-\tli-\tzer", "s t eI\tb I\tl aI\tz @r");
result.add("sta-\tbi-\tli-\tzers", "s t eI\tb I\tl aI\tz @r z");
result.add("sta-\tbi-\tli-\tzes", "s t eI\tb I\tl aI\tz V z");
result.add("sta-\tbi-\tli-\tzing", "s t eI\tb I\tl aI\tz I N");
result.add("sta-\tbi-\tlize", "s t eI\tb I\tl aI z");
result.add("sta-\tbi-\tlized", "s t eI\tb I\tl aI z d");
result.add("sta-\tbile", "s t eI\tb I l");
result.add("sta-\tble", "s t eI\tb V l");
result.add("sta-\tbles", "s t eI\tb V l z");
result.add("sta-\tcey", "s t eI\ts i:");
result.add("sta-\tcia", "s t Q\ttS V");
result.add("sta-\tcie", "s t {\tk i:");
result.add("sta-\tcy", "s t eI\ts i:");
result.add("sta-\tder", "s t eI\td @r");
result.add("sta-\tdi-\ta", "s t eI\td i:\tV");
result.add("sta-\tdi-\tum", "s t eI\td i:\tV m");
result.add("sta-\tdi-\tums", "s t eI\td i:\tV m z");
result.add("sta-\tdi-\tum's", "s t eI\td i:\tV m z");
result.add("sta-\tger", "s t eI\tdZ @r");
result.add("sta-\tges", "s t eI\tdZ V z");
result.add("sta-\tging", "s t eI\tdZ I N");
result.add("sta-\tker", "s t eI\tk @r");
result.add("sta-\tking", "s t eI\tk I N");
result.add("sta-\tley", "s t eI\tl i:");
result.add("sta-\tley's", "s t eI\tl i: z");
result.add("sta-\tli-\tni-\tsm", "s t Q\tl I\tn I\tz V m");
result.add("sta-\tli-\tni-\tza-\ttion", "s t Q\tl I\tn I\tz eI\tS V n");
result.add("sta-\tli-\tnist", "s t Q\tl I\tn I s t");
result.add("sta-\tli-\tnists", "s t Q\tl I\tn I s t s");
result.add("sta-\tli-\tnize", "s t {\tl I\tn aI z");
result.add("sta-\tlin", "s t Q\tl I n");
result.add("sta-\tlin-\tgrad", "s t Q\tl I n\tg r { d");
result.add("sta-\tlin's", "s t Q\tl I n z");
result.add("sta-\tmi-\tna", "s t {\tm I\tn V");
result.add("sta-\tnek", "s t {\tn I k");
result.add("sta-\tnis-\tlas", "s t V\tn I s\tl V s");
result.add("sta-\tnis-\tlaw", "s t {\tn I s\tl O:");
result.add("sta-\tp-\tler", "s t eI\tp V\tl @r");
result.add("sta-\tp-\tlers", "s t eI\tp V\tl @r z");
result.add("sta-\tp-\tling", "s t eI\tp V\tl I N");
result.add("sta-\tple", "s t eI\tp V l");
result.add("sta-\tple-\tton", "s t eI\tp V l\tt V n");
result.add("sta-\tpled", "s t eI\tp V l d");
result.add("sta-\tples", "s t eI\tp V l z");
result.add("sta-\trer", "s t e@\t@r");
result.add("sta-\tring", "s t e@\tI N");
result.add("sta-\try", "s t e@\ti:");
result.add("sta-\tshing", "s t {\tS I N");
result.add("sta-\tted", "s t eI\tt V d");
result.add("sta-\tten", "s t {\tt V n");
result.add("sta-\tter", "s t eI\tt @r");
result.add("sta-\tters", "s t eI\tt @r z");
result.add("sta-\tter's", "s t eI\tt @r z");
result.add("sta-\ttes-\tman-\tlike", "s t V\tt e s\tm V n\tl aI k");
result.add("sta-\ttham", "s t {\tT V m");
result.add("sta-\tti-\tsm", "s t eI\tt I\tz V m");
result.add("sta-\ttic", "s t {\tt I k");
result.add("sta-\tting", "s t eI\tt I N");
result.add("sta-\ttio-\tna-\try", "s t eI\tS V\tn e@\ti:");
result.add("sta-\ttio-\tne-\try", "s t eI\tS V\tn e@\ti:");
result.add("sta-\ttio-\tner", "s t eI\tS V\tn @r");
result.add("sta-\ttio-\tners", "s t eI\tS V\tn @r z");
result.add("sta-\ttio-\tning", "s t eI\tS V\tn I N");
result.add("sta-\ttion", "s t eI\tS V n");
result.add("sta-\ttioned", "s t eI\tS V n d");
result.add("sta-\ttions", "s t eI\tS V n z");
result.add("sta-\ttion's", "s t eI\tS V n z");
result.add("sta-\ttis-\tti-\tcal", "s t V\tt I s\tt I\tk V l");
result.add("sta-\ttis-\tti-\tcal-\tly", "s t V\tt I s\tt I\tk V\tl i:");
result.add("sta-\ttis-\tti-\tcian", "s t {\tt I s\tt I\tS V n");
result.add("sta-\ttis-\tti-\tcians", "s t {\tt I s\tt I\tS V n z");
result.add("sta-\ttis-\ttic", "s t V\tt I s\tt I k");
result.add("sta-\ttis-\ttics", "s t V\tt I s\tt I k s");
result.add("sta-\ttist", "s t eI\tt I s t");
result.add("sta-\ttists", "s t eI\tt I s t s");
result.add("sta-\ttu-\ta-\try", "s t {\ttS u:\te@\ti:");
result.add("sta-\ttu-\tesque", "s t {\ttS u:\te s k");
result.add("sta-\ttu-\tette", "s t {\ttS u:\te t");
result.add("sta-\ttu-\tettes", "s t {\ttS u:\te t s");
result.add("sta-\ttu-\tto-\tri-\tly", "s t {\ttS V\tt O@\tV\tl i:");
result.add("sta-\ttu-\tto-\try", "s t {\ttS V\tt O@\ti:");
result.add("sta-\ttue", "s t {\ttS u:");
result.add("sta-\ttues", "s t {\ttS u: z");
result.add("sta-\tture", "s t {\ttS @r");
result.add("sta-\ttus", "s t {\tt V s");
result.add("sta-\ttute", "s t {\ttS u: t");
result.add("sta-\ttutes", "s t {\ttS u: t s");
result.add("sta-\ttute's", "s t {\ttS u: t s");
result.add("sta-\tver", "s t eI\tv @r");
result.add("sta-\tving", "s t eI\tv I N");
result.add("sta-\tyer", "s t eI\t@r");
result.add("sta-\tying", "s t eI\tI N");
result.add("staab", "s t Q b");
result.add("staal", "s t Q l");
result.add("stab", "s t { b");
result.add("stab-\tbing", "s t {\tb I N");
result.add("stab-\tbings", "s t {\tb I N z");
result.add("stabbed", "s t { b d");
result.add("stabs", "s t { b z");
result.add("stac-\tca-\tto", "s t V\tk Q\tt @U");
result.add("stac-\tker", "s t {\tk @r");
result.add("stac-\tking", "s t {\tk I N");
result.add("stack", "s t { k");
result.add("stacked", "s t { k t");
result.add("stacks", "s t { k s");
result.add("stade", "s t eI d");
result.add("stadt", "s t { d t");
result.add("staf-\tfa", "s t Q\tf V");
result.add("staf-\tfer", "s t {\tf @r");
result.add("staf-\tfers", "s t {\tf @r z");
result.add("staf-\tfing", "s t {\tf I N");
result.add("staf-\tford", "s t {\tf @r d");
result.add("staf-\tford-\tshire", "s t {\tf @r d\tS @r");
result.add("staf-\tford-\tshire's", "s t {\tf @r d\tS @r z");
result.add("staf-\tford's", "s t {\tf @r d z");
result.add("staff", "s t { f");
result.add("staffed", "s t { f t");
result.add("staffs", "s t { f s");
result.add("staff's", "s t { f s");
result.add("stag", "s t { g");
result.add("stag-\tfla-\ttion", "s t { g\tf l eI\tS V n");
result.add("stag-\tge-\tring", "s t {\tg @r\tI N");
result.add("stag-\tger", "s t {\tg @r");
result.add("stag-\tgered", "s t {\tg @r d");
result.add("stag-\tgers", "s t {\tg @r z");
result.add("stag-\tna-\tted", "s t { g\tn eI\tt V d");
result.add("stag-\tna-\tting", "s t { g\tn eI\tt I N");
result.add("stag-\tna-\ttion", "s t { g\tn eI\tS V n");
result.add("stag-\tnant", "s t { g\tn V n t");
result.add("stag-\tnate", "s t { g\tn eI t");
result.add("stage", "s t eI dZ");
result.add("stage-\tcoach", "s t eI dZ\tk @U tS");
result.add("stage-\tcraft", "s t eI dZ\tk r { f t");
result.add("stage-\thand", "s t eI dZ\th { n d");
result.add("stage-\thands", "s t eI dZ\th { n d z");
result.add("staged", "s t eI dZ d");
result.add("stagg", "s t { g");
result.add("stahl", "s t Q l");
result.add("stai-\tning", "s t eI\tn I N");
result.add("staid", "s t eI d");
result.add("stain", "s t eI n");
result.add("stain-\tless", "s t eI n\tl V s");
result.add("stained", "s t eI n d");
result.add("staines", "s t eI n z");
result.add("stains", "s t eI n z");
result.add("stair", "s t e@");
result.add("stair-\tca-\tses", "s t e@\tk eI\ts V z");
result.add("stair-\tcase", "s t e@\tk eI s");
result.add("stair-\tway", "s t e@\tw eI");
result.add("stair-\tways", "s t e@\tw eI z");
result.add("stair-\twell", "s t e@\tw e l");
result.add("stair-\twells", "s t e@\tw e l z");
result.add("stairs", "s t e@ z");
result.add("stake", "s t eI k");
result.add("stake-\thol-\tder", "s t eI k\th @U l\td @r");
result.add("stake-\thol-\tders", "s t eI k\th @U l\td @r z");
result.add("stake-\tout", "s t eI\tk aU t");
result.add("stake-\touts", "s t eI\tk aU t s");
result.add("staked", "s t eI k t");
result.add("stakes", "s t eI k s");
result.add("stake's", "s t eI k s");
result.add("stal-\tder", "s t O: l\td @r");
result.add("stal-\tker", "s t O:\tk @r");
result.add("stal-\tkers", "s t O:\tk @r z");
result.add("stal-\tking", "s t O:\tk I N");
result.add("stal-\tky", "s t O:\tk i:");
result.add("stal-\tlard", "s t {\tl @r d");
result.add("stal-\tler", "s t O:\tl @r");
result.add("stal-\tling", "s t O:\tl I N");
result.add("stal-\tlings", "s t O:\tl I N z");
result.add("stal-\tlion", "s t { l\tj V n");
result.add("stal-\tlions", "s t { l\tj V n z");
result.add("stal-\tlone", "s t V\tl @U n");
result.add("stal-\tlone's", "s t V\tl @U n z");
result.add("stal-\twart", "s t O: l\tw @r t");
result.add("stal-\twarts", "s t O: l\tw @r t s");
result.add("stale", "s t eI l");
result.add("stale-\tma-\tted", "s t eI l\tm eI\tt V d");
result.add("stale-\tmate", "s t eI l\tm eI t");
result.add("stalk", "s t O: k");
result.add("stalked", "s t O: k t");
result.add("stalks", "s t O: k s");
result.add("stall", "s t O: l");
result.add("stall-\tman", "s t O: l\tm V n");
result.add("stall-\tworth", "s t O: l\tw @r T");
result.add("stalled", "s t O: l d");
result.add("stalls", "s t O: l z");
result.add("stam", "s t { m");
result.add("stam-\tbaugh", "s t { m\tb O:");
result.add("stam-\tford", "s t { m\tf @r d");
result.add("stam-\tmer", "s t {\tm @r");
result.add("stam-\tpe-\tded", "s t { m\tp i:\td V d");
result.add("stam-\tpe-\tding", "s t { m\tp i:\td I N");
result.add("stam-\tpede", "s t { m\tp i: d");
result.add("stam-\tper", "s t { m\tp @r");
result.add("stam-\tping", "s t { m\tp I N");
result.add("stam-\tpings", "s t { m\tp I N z");
result.add("stamp", "s t { m p");
result.add("stamped", "s t { m p t");
result.add("stamps", "s t { m p s");
result.add("stan", "s t { n");
result.add("stan-\tber-\try", "s t { n\tb e@\ti:");
result.add("stan-\tces", "s t { n\ts V z");
result.add("stan-\tching", "s t { n\ttS I N");
result.add("stan-\tdar-\tdi-\tza-\ttion", "s t { n\td @r\td I\tz eI\tS V n");
result.add("stan-\tdar-\tdi-\tzing", "s t { n\td @r\td aI\tz I N");
result.add("stan-\tdar-\tdize", "s t { n\td @r\td aI z");
result.add("stan-\tdar-\tdized", "s t { n\td @r\td aI z d");
result.add("stan-\tdard", "s t { n\td @r d");
result.add("stan-\tdard-\tbea-\trer", "s t { n\td @r d\tb e@\t@r");
result.add("stan-\tdard-\tbea-\trers", "s t { n\td @r d\tb e@\t@r z");
result.add("stan-\tdards", "s t { n\td @r d z");
result.add("stan-\tdard's", "s t { n\td @r d z");
result.add("stan-\tden", "s t { n\td V n");
result.add("stan-\tder", "s t { n\td @r");
result.add("stan-\tding", "s t { n\td I N");
result.add("stan-\tdings", "s t { n\td I N z");
result.add("stan-\tdish", "s t { n\td I S");
result.add("stan-\tfield", "s t { n\tf i: l d");
result.add("stan-\tfill", "s t { n\tf I l");
result.add("stan-\tford", "s t { n\tf @r d");
result.add("stan-\tford's", "s t { n\tf @r d z");
result.add("stan-\thope", "s t {\tn V p");
result.add("stan-\tleigh", "s t { n\tl V");
result.add("stan-\tley", "s t { n\tl i:");
result.add("stan-\tley-\ttown", "s t { n\tl i:\tt aU n");
result.add("stan-\tley's", "s t { n\tl i: z");
result.add("stan-\tly", "s t { n\tl i:");
result.add("stan-\tnard", "s t {\tn @r d");
result.add("stan-\tton", "s t { n\tt V n");
result.add("stan-\tway", "s t { n\tw eI");
result.add("stan-\twood", "s t { n\tw U d");
result.add("stan-\tza", "s t { n\tz V");
result.add("stan-\tzas", "s t { n\tz V z");
result.add("stance", "s t { n s");
result.add("stanch", "s t { n tS");
result.add("stanch-\tfield", "s t { n\ttS f i: l d");
result.add("stanched", "s t { n tS t");
result.add("stand", "s t { n d");
result.add("stand-\tby", "s t { n\td b aI");
result.add("stand-\tbys", "s t { n\td b aI z");
result.add("stand-\tley", "s t { n\td l i:");
result.add("stand-\toff", "s t { n\td O: f");
result.add("stand-\toffs", "s t { n\td O: f s");
result.add("stand-\tout", "s t { n\td aU t");
result.add("stand-\touts", "s t { n\td aU t s");
result.add("stand-\tpoint", "s t { n\td p OI n t");
result.add("stand-\tpoints", "s t { n\td p OI n t s");
result.add("stand-\tstill", "s t { n\td s t I l");
result.add("stand-\tup", "s t { n\td V p");
result.add("stands", "s t { n d z");
result.add("stang", "s t { N");
result.add("stank", "s t { N k");
result.add("stan's", "s t { n z");
result.add("star", "s t Q@");
result.add("star-\tbird", "s t Q@\tb @r d");
result.add("star-\tboard", "s t Q@\tb @r d");
result.add("star-\tboards", "s t Q@\tb @r r d z");
result.add("star-\tbuck", "s t Q@\tb V k");
result.add("star-\tbucks", "s t Q@\tb V k s");
result.add("star-\tbuck's", "s t Q@\tb V k s");
result.add("star-\tcher", "s t Q@\ttS @r");
result.add("star-\tches", "s t Q@\ttS V z");
result.add("star-\tchy", "s t Q@\ttS i:");
result.add("star-\tcraft", "s t Q@ k\tr { f t");
result.add("star-\tdom", "s t Q@\td V m");
result.add("star-\tdust", "s t Q@\td V s t");
result.add("star-\tfish", "s t Q@\tf I S");
result.add("star-\tga-\tzer", "s t Q@\tg eI\tz @r");
result.add("star-\tga-\tzers", "s t Q@\tg eI\tz @r z");
result.add("star-\tgate", "s t Q@\tg eI t");
result.add("star-\tker", "s t Q@\tk @r");
result.add("star-\tkey", "s t Q@\tk i:");
result.add("star-\tlet", "s t Q@\tl V t");
result.add("star-\tlets", "s t Q@\tl V t s");
result.add("star-\tlight", "s t Q@\tl aI t");
result.add("star-\tlike", "s t Q@\tl aI k");
result.add("star-\tlin", "s t Q@\tl I n");
result.add("star-\tling", "s t Q@\tl I N");
result.add("star-\tlit", "s t Q@\tl I t");
result.add("star-\tring", "s t Q@\tI N");
result.add("star-\try", "s t Q@\ti:");
result.add("star-\tship", "s t Q@\tS I p");
result.add("star-\tstruck", "s t Q@ s\tt r V k");
result.add("star-\tted", "s t Q@\tt V d");
result.add("star-\tter", "s t Q@\tt @r");
result.add("star-\tters", "s t Q@\tt @r z");
result.add("star-\tting", "s t Q@\tt I N");
result.add("star-\ttle", "s t Q@\tt V l");
result.add("star-\ttled", "s t Q@\tt V l d");
result.add("star-\ttles", "s t Q@\tt V l z");
result.add("star-\tva-\ttion", "s t Q@\tv eI\tS V n");
result.add("star-\tving", "s t Q@\tv I N");
result.add("starch", "s t Q@ tS");
result.add("starch-\tlike", "s t Q@ tS\tl aI k");
result.add("starched", "s t Q@ tS t");
result.add("stare", "s t e@");
result.add("stared", "s t e@ d");
result.add("stares", "s t e@ z");
result.add("stark", "s t Q@ k");
result.add("stark-\tly", "s t Q@ k\tl i:");
result.add("stark-\tness", "s t Q@ k\tn V s");
result.add("stark-\twea-\tther", "s t Q@ k\tw e\tD @r");
result.add("starke", "s t Q@ k");
result.add("starks", "s t Q@ k s");
result.add("stark's", "s t Q@ k s");
result.add("starn", "s t Q@ n");
result.add("starns", "s t Q@ n z");
result.add("starr", "s t Q@");
result.add("starred", "s t Q@ d");
result.add("starrs", "s t Q@ z");
result.add("starr's", "s t Q@ z");
result.add("stars", "s t Q@ z");
result.add("star's", "s t Q@ z");
result.add("start", "s t Q@ t");
result.add("start-\tling", "s t Q@ t\tl I N");
result.add("start-\tling-\tly", "s t Q@ t\tl I N\tl i:");
result.add("start-\tup", "s t Q@\tt V p");
result.add("start-\tups", "s t Q@\tt V p s");
result.add("starts", "s t Q@ t s");
result.add("starve", "s t Q@ v");
result.add("starved", "s t Q@ v d");
result.add("stas-\tny", "s t { s\tn i:");
result.add("stas-\tsen", "s t {\ts V n");
result.add("stash", "s t { S");
result.add("stashed", "s t { S t");
result.add("stat", "s t { t");
result.add("stat-\tler", "s t { t\tl @r");
result.add("state", "s t eI t");
result.add("state-\tcraft", "s t eI t\tk r { f t");
result.add("state-\thood", "s t eI t\th U d");
result.add("state-\thou-\tses", "s t eI t\th aU\ts V z");
result.add("state-\thouse", "s t eI t\th aU s");
result.add("state-\tless", "s t eI t\tl V s");
result.add("state-\tly", "s t eI t\tl i:");
result.add("state-\tment", "s t eI t\tm V n t");
result.add("state-\tments", "s t eI t\tm V n t s");
result.add("state-\tment's", "s t eI t\tm V n t s");
result.add("state-\tside", "s t eI t\ts aI d");
result.add("state-\twide", "s t eI t\tw aI d");
result.add("states", "s t eI t s");
result.add("state's", "s t eI t s");
result.add("states'", "s t eI t s");
result.add("states-\tman", "s t eI t\ts m V n");
result.add("states-\tman-\tship", "s t eI t\ts m V n\tS I p");
result.add("states-\tman's", "s t eI t\ts m V n z");
result.add("states-\tmen", "s t eI t\ts m e n");
result.add("stats", "s t { t s");
result.add("statz", "s t { t s");
result.add("stau-\tder", "s t aU\td @r");
result.add("stau-\tdin-\tger", "s t aU\td I\tN @r");
result.add("stau-\tter", "s t aU\tt @r");
result.add("stauf-\tfer", "s t O:\tf @r");
result.add("stauf-\tfer's", "s t O:\tf @r z");
result.add("staun-\tchest", "s t O: n\ttS V s t");
result.add("staun-\tton", "s t O: n\tt V n");
result.add("staunch", "s t O: n tS");
result.add("staunch-\tly", "s t O: n\ttS l i:");
result.add("staup", "s t O: p");
result.add("stav-\tro-\tpou-\tlos", "s t V v\tr Q\tp V\tl V s");
result.add("stav-\tros", "s t V v\tr @U z");
result.add("stave", "s t eI v");
result.add("staved", "s t eI v d");
result.add("staves", "s t eI v z");
result.add("stay", "s t eI");
result.add("stay-\to-\tver", "s t eI\t@U\tv @r");
result.add("stay-\tton", "s t eI\tt V n");
result.add("stayed", "s t eI d");
result.add("stays", "s t eI z");
result.add("ste-\tber", "s t i:\tb @r");
result.add("ste-\tcher", "s t e\tk @r");
result.add("ste-\tfa", "s t e\tf V");
result.add("ste-\tfa-\tnie", "s t e\tf V\tn i:");
result.add("ste-\tfa-\tno", "s t e\tf V\tn @U");
result.add("ste-\tfan", "s t e\tf Q n");
result.add("ste-\tger", "s t i:\tg @r");
result.add("ste-\tgo-\tsau-\trus", "s t e\tg V\ts O@\tV s");
result.add("ste-\tno", "s t e\tn @U");
result.add("ste-\tno-\tgra-\tpher", "s t e\tn V g\tr V\tf @r");
result.add("ste-\tno-\tgra-\tphic", "s t e\tn V g\tr {\tf I k");
result.add("ste-\tpha", "s t e\tf V");
result.add("ste-\tpha-\tna", "s t e\tf Q\tn V");
result.add("ste-\tpha-\tni", "s t e\tf V\tn i:");
result.add("ste-\tpha-\tni-\ta", "s t V\tf {\tn i:\tV");
result.add("ste-\tpha-\tnie", "s t e\tf V\tn i:");
result.add("ste-\tpha-\tny", "s t e\tf V\tn i:");
result.add("ste-\tphan", "s t e\tf V n");
result.add("ste-\tphane", "s t e\tf Q n");
result.add("ste-\tphen", "s t i:\tv V n");
result.add("ste-\tphen-\tson", "s t i:\tv V n\ts V n");
result.add("ste-\tphen-\tville", "s t i:\tv V n\tv I l");
result.add("ste-\tphens", "s t i:\tv V n z");
result.add("ste-\tphen's", "s t i:\tv V n z");
result.add("ste-\tre-\to", "s t e@\ti:\t@U");
result.add("ste-\tre-\to-\tgra-\tphic", "s t e@\ti:\tV g\tr {\tf I k");
result.add("ste-\tre-\to-\tmi-\tcro-\tscope", "s t e@\ti:\t@U\tm aI k\tr V s\tk @U p");
result.add("ste-\tre-\to-\tty-\tpi-\tcal", "s t e@\ti:\t@U\tt I\tp I\tk V l");
result.add("ste-\tre-\to-\tty-\tping", "s t e@\ti:\tV\tt aI\tp I N");
result.add("ste-\tre-\to-\ttype", "s t e@\ti:\tV\tt aI p");
result.add("ste-\tre-\to-\ttyped", "s t e@\ti:\tV\tt aI p t");
result.add("ste-\tre-\to-\ttypes", "s t e@\ti:\tV\tt aI p s");
result.add("ste-\tre-\tos", "s t e@\ti:\t@U z");
result.add("ste-\tri-\tli-\tty", "s t @r\tI\tl I\tt i:");
result.add("ste-\tri-\tli-\tza-\ttion", "s t e@\tI\tl I\tz eI\tS V n");
result.add("ste-\tri-\tli-\tza-\ttions", "s t e@\tI\tl I\tz eI\tS V n z");
result.add("ste-\tri-\tli-\tzer", "s t e@\tI\tl aI\tz @r");
result.add("ste-\tri-\tli-\tzers", "s t e@\tI\tl aI\tz @r z");
result.add("ste-\tri-\tli-\tzes", "s t e@\tI\tl aI\tz V z");
result.add("ste-\tri-\tli-\tzing", "s t e@\tI\tl aI\tz I N");
result.add("ste-\tri-\tlize", "s t e@\tI\tl aI z");
result.add("ste-\tri-\tlized", "s t e@\tI\tl aI z d");
result.add("ste-\trile", "s t e@\tI l");
result.add("ste-\troid", "s t @r\tOI d");
result.add("ste-\troids", "s t e@\tOI d z");
result.add("ste-\ttho-\tscope", "s t e\tT V s\tk @U p");
result.add("ste-\ttho-\tscopes", "s t e\tT V s\tk @U p s");
result.add("ste-\tva-\tna", "s t I\tv {\tn V");
result.add("ste-\tve-\tdo-\tring", "s t i:\tv V\td O@\tI N");
result.add("ste-\tve-\tdore", "s t i:\tv V\td O@");
result.add("ste-\tve-\tna", "s t e\tv V\tn V");
result.add("ste-\tven", "s t i:\tv V n");
result.add("ste-\tven-\tson", "s t i:\tv V n\ts V n");
result.add("ste-\tvens", "s t i:\tv V n z");
result.add("ste-\tven's", "s t i:\tv V n z");
result.add("ste-\tvie", "s t i:\tv i:");
result.add("ste-\twar-\tdes-\tses", "s t u:\t@r\td V\ts V z");
result.add("ste-\twar-\tdess", "s t u:\t@r\td V s");
result.add("ste-\tward", "s t u:\t@r d");
result.add("ste-\tward-\tship", "s t u:\t@r d\tS I p");
result.add("ste-\twards", "s t u:\t@r d z");
result.add("ste-\twart", "s t u:\t@r t");
result.add("ste-\twart's", "s t u:\t@r t s");
result.add("ste-\twing", "s t u:\tI N");
result.add("ste-\tyer", "s t eI\t@r");
result.add("stea-\tdi-\ter", "s t e\td i:\t@r");
result.add("stea-\tdi-\tly", "s t e\td I\tl i:");
result.add("stea-\tdi-\tness", "s t e\td i:\tn V s");
result.add("stea-\tdied", "s t e\td i: d");
result.add("stea-\tdy", "s t e\td i:");
result.add("stea-\tler", "s t i:\tl @r");
result.add("stea-\tling", "s t i:\tl I N");
result.add("stea-\tmer", "s t i:\tm @r");
result.add("stea-\tmers", "s t i:\tm @r z");
result.add("stea-\tmi-\tly", "s t i:\tm I\tl i:");
result.add("stea-\tming", "s t i:\tm I N");
result.add("stea-\tmy", "s t i:\tm i:");
result.add("stea-\tric", "s t i:\tr I k");
result.add("stead", "s t e d");
result.add("stead-\tfast", "s t e d\tf { s t");
result.add("stead-\tfast-\tly", "s t e d\tf { s\tt l i:");
result.add("stead-\tfast-\tness", "s t e d\tf { s\tt n V s");
result.add("stead-\tman", "s t e d\tm V n");
result.add("steak", "s t eI k");
result.add("steak-\thou-\tses", "s t eI k\th aU\ts V z");
result.add("steak-\thouse", "s t eI k\th aU s");
result.add("steaks", "s t eI k s");
result.add("steal", "s t i: l");
result.add("steals", "s t i: l z");
result.add("stealth", "s t e l T");
result.add("steam", "s t i: m");
result.add("steam-\tboat", "s t i: m\tb @U t");
result.add("steam-\tboats", "s t i: m\tb @U t s");
result.add("steam-\trol-\tler", "s t i: m\tr @U\tl @r");
result.add("steam-\trol-\tlered", "s t i: m\tr @U\tl @r d");
result.add("steam-\tship", "s t i: m\tS I p");
result.add("steamed", "s t i: m d");
result.add("steams", "s t i: m z");
result.add("stear", "s t I@");
result.add("stearn", "s t @r n");
result.add("stearne", "s t @r n");
result.add("stearns", "s t @r n z");
result.add("stears", "s t i: r z");
result.add("steb-\tbins", "s t e\tb I n z");
result.add("stech", "s t e k");
result.add("steck", "s t e k");
result.add("sted-\tman", "s t e d\tm V n");
result.add("stee-\tler", "s t i:\tl @r");
result.add("stee-\tlers", "s t i:\tl @r z");
result.add("stee-\tly", "s t i:\tl i:");
result.add("stee-\tpened", "s t i:\tp V n d");
result.add("stee-\tper", "s t i:\tp @r");
result.add("stee-\tpest", "s t i:\tp V s t");
result.add("stee-\tple", "s t i:\tp V l");
result.add("stee-\tple-\tchase", "s t i:\tp V l\ttS eI s");
result.add("stee-\tring", "s t I@\tI N");
result.add("stee-\tver", "s t i:\tv @r");
result.add("steed", "s t i: d");
result.add("steed-\tman", "s t i: d\tm V n");
result.add("steed's", "s t i: d z");
result.add("steel", "s t i: l");
result.add("steel-\thead", "s t i: l\th e d");
result.add("steel-\tma-\tker", "s t i: l\tm eI\tk @r");
result.add("steel-\tma-\tkers", "s t i: l\tm eI\tk @r z");
result.add("steel-\tma-\tker's", "s t i: l\tm eI\tk @r z");
result.add("steel-\tma-\tking", "s t i: l\tm eI\tk I N");
result.add("steel-\tman", "s t i: l\tm V n");
result.add("steel-\twor-\tker", "s t i: l\tw @r\tk @r");
result.add("steel-\twor-\tkers", "s t i: l\tw @r\tk @r z");
result.add("steel-\tworks", "s t i: l\tw @r k s");
result.add("steele", "s t i: l");
result.add("steels", "s t i: l z");
result.add("steel's", "s t i: l z");
result.add("steen", "s t i: n");
result.add("steep", "s t i: p");
result.add("steep-\tly", "s t i: p\tl i:");
result.add("steep-\tness", "s t i: p\tn V s");
result.add("steeped", "s t i: p t");
result.add("steer", "s t I@");
result.add("steere", "s t I@");
result.add("steered", "s t I@ d");
result.add("steers", "s t I@ z");
result.add("steeves", "s t i: v z");
result.add("stef-\tfan", "s t e\tf V n");
result.add("stef-\tfen", "s t e\tf V n");
result.add("stef-\tfens", "s t e\tf V n z");
result.add("stef-\tfi", "s t e\tf i:");
result.add("stef-\tfie", "s t e\tf i:");
result.add("stef-\tfy", "s t e\tf i:");
result.add("steg-\tman", "s t e g\tm V n");
result.add("stei-\tchen", "s t aI\tk V n");
result.add("stei-\ter", "s t aI\t@r");
result.add("stei-\tger", "s t aI\tg @r");
result.add("stei-\tnem", "s t aI\tn V m");
result.add("stei-\tner", "s t aI\tn @r");
result.add("stei-\tner's", "s t aI\tn @r z");
result.add("steil", "s t i: l");
result.add("stein", "s t aI n");
result.add("stein-\tbeck", "s t aI n\tb e k");
result.add("stein-\tbeck's", "s t aI n\tb e k s");
result.add("stein-\tber-\tger", "s t aI n\tb @r\tg @r");
result.add("stein-\tberg", "s t aI n\tb @r g");
result.add("stein-\tberg's", "s t aI n\tb @r g z");
result.add("stein-\tbock", "s t aI n\tb Q k");
result.add("stein-\tman", "s t aI n\tm V n");
result.add("stein-\tmetz", "s t aI n\tm e t s");
result.add("stein-\tway", "s t aI n\tw eI");
result.add("stein-\tway's", "s t aI n\tw eI z");
result.add("steinke", "s t aI N k");
result.add("stein's", "s t aI n z");
result.add("stel-\tla", "s t e\tl V");
result.add("stel-\tlar", "s t e\tl @r");
result.add("stel-\tla's", "s t e\tl V z");
result.add("stel-\tlen-\tbosch", "s t e\tl V n\tb O: S");
result.add("stel-\tler", "s t e\tl @r");
result.add("stel-\tling", "s t e\tl I N");
result.add("stel-\tmach", "s t e l\tm V k");
result.add("stell", "s t e l");
result.add("stelle", "s t e l");
result.add("stem", "s t e m");
result.add("stem-\tlike", "s t e m\tl aI k");
result.add("stem-\tmer", "s t e\tm @r");
result.add("stem-\tming", "s t e\tm I N");
result.add("stem-\tpel", "s t e m\tp V l");
result.add("stem-\tpien", "s t e m\tp i: n");
result.add("stem-\tple", "s t e m\tp V l");
result.add("stemmed", "s t e m d");
result.add("stems", "s t e m z");
result.add("sten", "s t e n");
result.add("sten-\tci-\tling", "s t e n\ts I\tl I N");
result.add("sten-\tcil", "s t e n\ts I l");
result.add("sten-\tciled", "s t e n\ts I l d");
result.add("sten-\tdal", "s t e n\td V l");
result.add("sten-\tgel", "s t e N\tg V l");
result.add("sten-\tger", "s t e n\tdZ @r");
result.add("sten-\ttor", "s t e n\tt @r");
result.add("sten-\ttors", "s t e n\tt @r z");
result.add("stench", "s t e n tS");
result.add("stent", "s t e n t");
result.add("step", "s t e p");
result.add("step-\tchild", "s t e p\ttS aI l d");
result.add("step-\tchild-\tren", "s t e p\ttS I l\td r V n");
result.add("step-\tdaugh-\tter", "s t e p\td O:\tt @r");
result.add("step-\tdaugh-\tters", "s t e p\td O:\tt @r z");
result.add("step-\tfa-\tther", "s t e p\tf Q\tD @r");
result.add("step-\tlad-\tder", "s t e p\tl {\td @r");
result.add("step-\tlad-\tders", "s t e p\tl {\td @r z");
result.add("step-\tmo-\tther", "s t e p\tm V\tD @r");
result.add("step-\tney", "s t e p\tn i:");
result.add("step-\tpen-\twolf", "s t e\tp V n\tw U l f");
result.add("step-\tper", "s t e\tp @r");
result.add("step-\tpers", "s t e\tp @r z");
result.add("step-\tping", "s t e\tp I N");
result.add("step-\tpings-\ttone", "s t e\tp I N\ts t @U n");
result.add("step-\tsis-\tter", "s t e p\ts I s\tt @r");
result.add("step-\tsis-\tters", "s t e p\ts I s\tt @r z");
result.add("step-\tson", "s t e p\ts V n");
result.add("step-\ttoe", "s t e p\tt @U");
result.add("steppe", "s t e p");
result.add("stepped", "s t e p t");
result.add("steppes", "s t e p s");
result.add("steps", "s t e p s");
result.add("ster-\tling", "s t @r\tl I N");
result.add("ster-\tling's", "s t @r\tl I N z");
result.add("ster-\tner", "s t @r\tn @r");
result.add("ster-\tnest", "s t @r\tn V s t");
result.add("ster-\trett", "s t e@\te t");
result.add("sterk", "s t @r k");
result.add("stern", "s t @r n");
result.add("stern-\tberg", "s t @r n\tb @r g");
result.add("stern-\tly", "s t @r n\tl i:");
result.add("stern-\tness", "s t @r n\tn V s");
result.add("stern-\tpost", "s t @r n\tp @U s t");
result.add("stern-\tposts", "s t @r n\tp @U s t s");
result.add("sterne", "s t @r n");
result.add("sterns", "s t @r n z");
result.add("stern's", "s t @r n z");
result.add("stet", "s t e t");
result.add("stet-\tson", "s t e t\ts V n");
result.add("steu-\tben", "s t j u:\tb V n");
result.add("steu-\tben-\tville", "s t u:\tb V n\tv I l");
result.add("steve", "s t i: v");
result.add("steve's", "s t i: v z");
result.add("stew", "s t u:");
result.add("stewed", "s t u: d");
result.add("stews", "s t u: z");
result.add("stew's", "s t u: z");
result.add("sti-\ter", "s t aI\t@r");
result.add("sti-\tfle", "s t aI\tf V l");
result.add("sti-\tfled", "s t aI\tf V l d");
result.add("sti-\tfles", "s t aI\tf V l z");
result.add("sti-\tlet-\tto", "s t V\tl e\tt @U");
result.add("sti-\tlet-\ttos", "s t V\tl e\tt @U z");
result.add("sti-\tmu-\tla-\tted", "s t I m\tj V\tl eI\tt V d");
result.add("sti-\tmu-\tla-\tting", "s t I m\tj V\tl eI\tt I N");
result.add("sti-\tmu-\tla-\ttion", "s t I m\tj V\tl eI\tS V n");
result.add("sti-\tmu-\tla-\ttive", "s t I m\tj V\tl eI\tt I v");
result.add("sti-\tmu-\tla-\ttor", "s t I m\tj V\tl eI\tt @r");
result.add("sti-\tmu-\tla-\ttors", "s t I m\tj V\tl eI\tt @r z");
result.add("sti-\tmu-\tlant", "s t I m\tj V\tl V n t");
result.add("sti-\tmu-\tlants", "s t I m\tj V\tl V n t s");
result.add("sti-\tmu-\tlate", "s t I m\tj V\tl eI t");
result.add("sti-\tmu-\tlates", "s t I m\tj V\tl eI t s");
result.add("sti-\tmu-\tli", "s t I m\tj V\tl aI");
result.add("sti-\tmu-\tlus", "s t I m\tj V\tl V s");
result.add("sti-\tpend", "s t aI\tp V n d");
result.add("sti-\tpends", "s t aI\tp V n d z");
result.add("sti-\tpu-\tla-\tted", "s t I p\tj V\tl eI\tt V d");
result.add("sti-\tpu-\tla-\tting", "s t I p\tj V\tl eI\tt I N");
result.add("sti-\tpu-\tla-\ttion", "s t I p\tj V\tl eI\tS V n");
result.add("sti-\tpu-\tla-\ttions", "s t I p\tj V\tl eI\tS V n z");
result.add("sti-\tpu-\tlate", "s t I p\tj V\tl eI t");
result.add("sti-\tpu-\tlates", "s t I p\tj V\tl eI t s");
result.add("sti-\tver", "s t aI\tv @r");
result.add("sti-\tvers", "s t aI\tv @r z");
result.add("stic-\tk-\tler", "s t I\tk V\tl @r");
result.add("stic-\tkel", "s t I\tk V l");
result.add("stic-\tker", "s t I\tk @r");
result.add("stic-\tkers", "s t I\tk @r z");
result.add("stic-\tki-\ter", "s t I\tk i:\t@r");
result.add("stic-\tki-\test", "s t I\tk i:\tV s t");
result.add("stic-\tking", "s t I\tk I N");
result.add("stic-\tkle", "s t I\tk V l");
result.add("stic-\tkles", "s t I\tk V l z");
result.add("stic-\tky", "s t I\tk i:");
result.add("stich", "s t I tS");
result.add("stich-\tter", "s t I k\tt @r");
result.add("stick", "s t I k");
result.add("stick-\tball", "s t I k\tb O: l");
result.add("stick-\tney", "s t I k\tn i:");
result.add("stick-\ttight", "s t I k\tt aI t");
result.add("stick-\ttights", "s t I k\tt aI t s");
result.add("sticks", "s t I k s");
result.add("stid-\tham", "s t I d\th V m");
result.add("stieg-\tler", "s t i: g\tl @r");
result.add("stieg-\tlitz", "s t i: g\tl I t s");
result.add("stieve", "s t i: v");
result.add("stif-\tfe-\tner", "s t I\tf V\tn @r");
result.add("stif-\tfe-\tning", "s t I\tf V\tn I N");
result.add("stif-\tfen", "s t I\tf V n");
result.add("stif-\tfened", "s t I\tf V n d");
result.add("stif-\tfens", "s t I\tf V n z");
result.add("stif-\tfer", "s t I\tf @r");
result.add("stif-\tfest", "s t I\tf V s t");
result.add("stif-\tling", "s t aI f\tl I N");
result.add("stiff", "s t I f");
result.add("stiff-\tler", "s t I f\tl @r");
result.add("stiff-\tly", "s t I f\tl i:");
result.add("stiff-\tness", "s t I f\tn V s");
result.add("stiffed", "s t I f t");
result.add("stiffs", "s t I f s");
result.add("stig", "s t I g");
result.add("stig-\tler", "s t I g\tl @r");
result.add("stig-\tma", "s t I g\tm V");
result.add("stig-\tma-\tti-\tsm", "s t I g\tm V\tt I\tz V m");
result.add("stig-\tma-\tti-\tzing", "s t I g\tm V\tt aI\tz I N");
result.add("stig-\tma-\ttize", "s t I g\tm V\tt aI z");
result.add("stig-\tma-\ttized", "s t I g\tm V\tt aI z d");
result.add("stil-\tler", "s t I\tl @r");
result.add("stil-\tler's", "s t I\tl @r z");
result.add("stil-\tlings", "s t I\tl I N z");
result.add("stil-\tlion", "s t I l\tj V n");
result.add("stil-\tted", "s t I l\tt V d");
result.add("stil-\twell", "s t I l\tw e l");
result.add("stile", "s t aI l");
result.add("stiles", "s t aI l z");
result.add("still", "s t I l");
result.add("still-\tborn", "s t I l\tb O@ n");
result.add("still-\tman", "s t I l\tm V n");
result.add("still-\tness", "s t I l\tn V s");
result.add("still-\tson", "s t I l\ts V n");
result.add("still-\twa-\tter", "s t I l\tw O:\tt @r");
result.add("still-\twell", "s t I l\tw e l");
result.add("still-\twell's", "s t I l\tw e l z");
result.add("stilled", "s t I l d");
result.add("stills", "s t I l z");
result.add("stilt", "s t I l t");
result.add("stilts", "s t I l t s");
result.add("stim-\tpert", "s t I m\tp @r t");
result.add("stim-\tson", "s t I m\ts V n");
result.add("stin-\tger", "s t I\tN @r");
result.add("stin-\tgers", "s t I\tN @r z");
result.add("stin-\tgi-\ter", "s t I n\tdZ i:\t@r");
result.add("stin-\tgi-\tness", "s t I n\tdZ i:\tn V s");
result.add("stin-\tging", "s t I\tN I N");
result.add("stin-\tgy", "s t I n\tdZ i:");
result.add("stin-\tkers", "s t I N\tk @r z");
result.add("stin-\tking", "s t I N\tk I N");
result.add("stin-\tky", "s t I N\tk i:");
result.add("stin-\tnett", "s t I\tn I t");
result.add("stin-\tson", "s t I n\ts V n");
result.add("stine", "s t aI n");
result.add("sting", "s t I N");
result.add("stings", "s t I N z");
result.add("stink", "s t I N k");
result.add("stink-\tbug", "s t I N\tk b V g");
result.add("stink-\tbugs", "s t I N\tk b V g z");
result.add("stinks", "s t I N k s");
result.add("stint", "s t I n t");
result.add("stints", "s t I n t s");
result.add("stipe", "s t aI p");
result.add("stipes", "s t aI p s");
result.add("stir", "s t @r");
result.add("stir-\tling", "s t @r\tl I N");
result.add("stir-\tling's", "s t @r\tl I N z");
result.add("stir-\tring", "s t @r\tI N");
result.add("stir-\trings", "s t @r\tI N z");
result.add("stir-\trup", "s t @r\tV p");
result.add("stir-\trups", "s t @r\tV p s");
result.add("stires", "s t aI r z");
result.add("stirred", "s t @r d");
result.add("stirs", "s t @r z");
result.add("stit-\tches", "s t I\ttS V z");
result.add("stit-\tching", "s t I\ttS I N");
result.add("stit-\tzer", "s t I t\tz @r");
result.add("stitch", "s t I tS");
result.add("stitched", "s t I tS t");
result.add("stites", "s t aI t s");
result.add("stith", "s t I T");
result.add("sto-\tga", "s t @U\tg V");
result.add("sto-\ti-\tci-\tsm", "s t @U\tI\ts I\tz V m");
result.add("sto-\tic", "s t @U\tI k");
result.add("sto-\tical-\tly", "s t @U\tI k\tl i:");
result.add("sto-\tics", "s t @U\tI k s");
result.add("sto-\tker", "s t @U\tk @r");
result.add("sto-\tking", "s t @U\tk I N");
result.add("sto-\tlen", "s t @U\tl V n");
result.add("sto-\tlich-\tna-\tya", "s t @U\tl I k\tn aI\tV");
result.add("sto-\tlid", "s t Q\tl I d");
result.add("sto-\tma-\tta", "s t @U\tm V\tt V");
result.add("sto-\tmach", "s t V\tm V k");
result.add("sto-\tmachs", "s t V\tm V k s");
result.add("sto-\tner", "s t @U\tn @r");
result.add("sto-\tney", "s t @U\tn i:");
result.add("sto-\tning", "s t @U\tn I N");
result.add("sto-\tny", "s t @U\tn i:");
result.add("sto-\tpa", "s t @U\tp V");
result.add("sto-\trage", "s t O@\tV dZ");
result.add("sto-\trer", "s t O@\t@r");
result.add("sto-\trer's", "s t O@\t@r z");
result.add("sto-\trey", "s t O@\ti:");
result.add("sto-\tried", "s t O@\ti: d");
result.add("sto-\tries", "s t O@\ti: z");
result.add("sto-\tring", "s t O@\tI N");
result.add("sto-\try", "s t O@\ti:");
result.add("sto-\try-\tboard", "s t O@\ti:\tb O@ d");
result.add("sto-\try-\tbook", "s t O@\ti:\tb U k");
result.add("sto-\try-\tbooks", "s t O@\ti:\tb U k s");
result.add("sto-\try-\tline", "s t O@\ti:\tl aI n");
result.add("sto-\try-\tlines", "s t O@\ti:\tl aI n z");
result.add("sto-\try-\ttel-\tler", "s t O@\ti:\tt e\tl @r");
result.add("sto-\try-\ttel-\tlers", "s t O@\ti:\tt e\tl @r z");
result.add("sto-\try-\ttel-\tling", "s t O@\ti:\tt e\tl I N");
result.add("sto-\try's", "s t O@\ti: z");
result.add("sto-\tvall", "s t @U\tv Q l");
result.add("sto-\tver", "s t @U\tv @r");
result.add("sto-\twell", "s t Q\tw e l");
result.add("sto-\twer", "s t @U\t@r");
result.add("sto-\twers", "s t @U\t@r z");
result.add("stoc-\tker", "s t Q\tk @r");
result.add("stoc-\tkett", "s t Q\tk e t");
result.add("stoc-\tkin-\tger", "s t Q\tk I\tN @r");
result.add("stoc-\tking", "s t Q\tk I N");
result.add("stoc-\tkings", "s t Q\tk I N z");
result.add("stoc-\tky", "s t Q\tk i:");
result.add("stock", "s t Q k");
result.add("stock-\tbridge", "s t Q k\tb r I dZ");
result.add("stock-\tbro-\tke-\tra-\tges", "s t Q k\tb r @U\tk @r\tI\tdZ V z");
result.add("stock-\tbro-\tke-\trage", "s t Q k\tb r @U\tk @r\tI dZ");
result.add("stock-\tbro-\tker", "s t Q k\tb r @U\tk @r");
result.add("stock-\tbro-\tkers", "s t Q k\tb r @U\tk @r z");
result.add("stock-\tbro-\tker's", "s t Q k\tb r @U\tk @r z");
result.add("stock-\tbro-\tking", "s t Q k\tb r @U\tk I N");
result.add("stock-\tdale", "s t Q k\td eI l");
result.add("stock-\tdale's", "s t Q k\td eI l z");
result.add("stock-\thau-\tsen", "s t Q k\th aU\tz V n");
result.add("stock-\thol-\tder", "s t Q k\th @U l\td @r");
result.add("stock-\thol-\tders", "s t Q k\th @U l\td @r z");
result.add("stock-\thol-\tding", "s t Q k\th @U l\td I N");
result.add("stock-\thol-\tdings", "s t Q k\th @U l\td I N z");
result.add("stock-\tholm", "s t Q k\th @U l m");
result.add("stock-\tholm's", "s t Q k\th @U l m z");
result.add("stock-\tman", "s t Q k\tm V n");
result.add("stock-\tman's", "s t Q k\tm { n z");
result.add("stock-\tpi-\tling", "s t Q k\tp aI\tl I N");
result.add("stock-\tpile", "s t Q k\tp aI l");
result.add("stock-\tpiled", "s t Q k\tp aI l d");
result.add("stock-\tpiles", "s t Q k\tp aI l z");
result.add("stock-\troom", "s t Q k\tr u: m");
result.add("stock-\tstill", "s t Q k\ts t I l");
result.add("stock-\tton", "s t Q k\tt V n");
result.add("stock-\twell", "s t Q k\tw e l");
result.add("stock-\tyard", "s t Q k\tj Q@ d");
result.add("stock-\tyards", "s t Q k\tj Q@ d z");
result.add("stocked", "s t Q k t");
result.add("stocks", "s t Q k s");
result.add("stock's", "s t Q k s");
result.add("stod-\tdard", "s t Q\td @r d");
result.add("stod-\tdard's", "s t Q\td @r d z");
result.add("stod-\tgy", "s t Q\tdZ i:");
result.add("stoe-\tber", "s t @U\tb @r");
result.add("stoec-\tker", "s t @U\tk @r");
result.add("stof-\tfel", "s t Q\tf V l");
result.add("stoff", "s t O: f");
result.add("stoke", "s t @U k");
result.add("stoke-\tly", "s t @U k\tl i:");
result.add("stoked", "s t @U k t");
result.add("stokes", "s t @U k s");
result.add("stol", "s t @U l");
result.add("stol-\tlen", "s t Q\tl V n");
result.add("stol-\tler", "s t @U\tl @r");
result.add("stol-\tlings", "s t @U\tl I N z");
result.add("stole", "s t @U l");
result.add("stoll", "s t @U l");
result.add("stom-\tping", "s t Q m\tp I N");
result.add("stomp", "s t Q m p");
result.add("stomped", "s t Q m p t");
result.add("stone", "s t @U n");
result.add("stone-\tcut-\tter", "s t @U n\tk V\tt @r");
result.add("stone-\tcut-\tters", "s t @U n\tk V\tt @r z");
result.add("stone-\tham", "s t @U\tn V m");
result.add("stone-\thenge", "s t @U n\th e n dZ");
result.add("stone-\tman", "s t @U n\tm V n");
result.add("stone-\twal-\tling", "s t @U n\tw O:\tl I N");
result.add("stone-\twall", "s t @U n\tw O: l");
result.add("stone-\twalled", "s t @U n\tw O: l d");
result.add("stone-\tware", "s t @U n\tw e@");
result.add("stoned", "s t @U n d");
result.add("stones", "s t @U n z");
result.add("stone's", "s t @U n z");
result.add("stong", "s t O: N");
result.add("stoo-\tges", "s t u:\tdZ V z");
result.add("stoo-\tping", "s t u:\tp I N");
result.add("stood", "s t U d");
result.add("stooge", "s t u: dZ");
result.add("stool", "s t u: l");
result.add("stools", "s t u: l z");
result.add("stoop", "s t u: p");
result.add("stooped", "s t u: p t");
result.add("stoops", "s t u: p s");
result.add("stop", "s t Q p");
result.add("stop-\tgap", "s t Q p\tg { p");
result.add("stop-\tlight", "s t Q p\tl aI t");
result.add("stop-\tlights", "s t Q p\tl aI t s");
result.add("stop-\to-\tver", "s t Q\tp @U\tv @r");
result.add("stop-\to-\tvers", "s t Q\tp @U\tv @r z");
result.add("stop-\tpa-\tges", "s t Q\tp I\tdZ V z");
result.add("stop-\tpage", "s t Q\tp I dZ");
result.add("stop-\tpel", "s t Q\tp V l");
result.add("stop-\tper", "s t Q\tp @r");
result.add("stop-\tpers", "s t Q\tp @r z");
result.add("stop-\tping", "s t Q\tp I N");
result.add("stop-\twat-\tches", "s t Q p\tw Q\ttS V z");
result.add("stop-\twatch", "s t Q p\tw Q tS");
result.add("stopped", "s t Q p t");
result.add("stops", "s t Q p s");
result.add("stor-\tfer", "s t O@\tf @r");
result.add("stor-\tmer", "s t O@\tm @r");
result.add("stor-\tmi-\test", "s t O@\tm i:\tV s t");
result.add("stor-\tming", "s t O@\tm I N");
result.add("stor-\tmont", "s t O@\tm @U n t");
result.add("stor-\tmy", "s t O@\tm i:");
result.add("stor-\tting", "s t O@\tt I N");
result.add("store", "s t O@");
result.add("store-\tfront", "s t O@ f\tr Q n t");
result.add("store-\tfronts", "s t O@ f\tr Q n t s");
result.add("store-\thou-\tses", "s t O@\th aU\tz V z");
result.add("store-\thou-\tse's", "s t O@\th aU\ts V z");
result.add("store-\thouse", "s t O@\th aU s");
result.add("store-\tkee-\tper", "s t O@\tk i:\tp @r");
result.add("store-\tkee-\tpers", "s t O@\tk i:\tp @r z");
result.add("store-\troom", "s t O@\tr u: m");
result.add("stored", "s t O@ d");
result.add("stores", "s t O@ z");
result.add("store's", "s t O@ z");
result.add("stork", "s t O@ k");
result.add("storm", "s t O@ m");
result.add("stormed", "s t O@ m d");
result.add("storms", "s t O@ m z");
result.add("storm's", "s t O@ m z");
result.add("storr", "s t O@");
result.add("storrs", "s t O@ z");
result.add("stortz", "s t O@ t s");
result.add("storz", "s t O@ z");
result.add("stott", "s t Q t");
result.add("stouf-\tfer", "s t V\tf @r");
result.add("stough-\tton", "s t @U\tt V n");
result.add("stoup", "s t u: p");
result.add("stout", "s t aU t");
result.add("stout-\tly", "s t aU t\tl i:");
result.add("stout-\tness", "s t aU t\tn V s");
result.add("stove", "s t @U v");
result.add("stoves", "s t @U v z");
result.add("stow", "s t @U");
result.add("stowe", "s t @U");
result.add("stowed", "s t @U d");
result.add("stoy", "s t OI");
result.add("stra-\tder", "s t r eI\td @r");
result.add("stra-\tdi-\tva-\tri-\tus", "s t r {\td I\tv e@\ti:\tV s");
result.add("stra-\tfing", "s t r eI\tf I N");
result.add("stra-\tna-\than", "s t r {\tn V\th { n");
result.add("stra-\tta", "s t r {\tt V");
result.add("stra-\tta-\tgems", "s t r {\tt V\tdZ V m z");
result.add("stra-\ttas", "s t r {\tt V z");
result.add("stra-\tte-\tgem", "s t r {\tt I\tdZ e m");
result.add("stra-\tte-\tgi-\tcal", "s t r V\tt i:\tdZ I\tk V l");
result.add("stra-\tte-\tgi-\tzing", "s t r {\tt V\tdZ aI\tz I N");
result.add("stra-\tte-\tgic", "s t r V\tt i:\tdZ I k");
result.add("stra-\tte-\tgical-\tly", "s t r V\tt i:\tdZ I k\tl i:");
result.add("stra-\tte-\tgies", "s t r {\tt V\tdZ i: z");
result.add("stra-\tte-\tgist", "s t r {\tt I\tdZ I s t");
result.add("stra-\tte-\tgists", "s t r {\tt I\tdZ I s t s");
result.add("stra-\tte-\tgize", "s t r {\tt V\tdZ aI z");
result.add("stra-\tte-\tgy", "s t r {\tt V\tdZ i:");
result.add("stra-\tte-\tgy's", "s t r {\tt V\tdZ i: z");
result.add("stra-\tti-\tfied", "s t r {\tt I\tf aI d");
result.add("stra-\tti-\tfy", "s t r {\tt I\tf aI");
result.add("stra-\tti-\tgra-\tphic", "s t r {\tt I g\tr {\tf I k");
result.add("stra-\ttos-\tphe-\tric", "s t r {\tt V s\tf I@\tI k");
result.add("stra-\ttos-\tphere", "s t r {\tt V s\tf I@");
result.add("stra-\ttu-\ts's", "s t r {\tt V\ts V z");
result.add("stra-\ttum", "s t r {\tt V m");
result.add("stra-\ttus", "s t r {\tt V s");
result.add("stra-\tvin-\tsky", "s t r V\tv I n\ts k i:");
result.add("stra-\tvin-\tsky's", "s t r V\tv I n\ts k i: z");
result.add("stra-\tyer", "s t r eI\t@r");
result.add("strack", "s t r { k");
result.add("strad-\tdle", "s t r {\td V l");
result.add("strad-\tdled", "s t r {\td V l d");
result.add("strad-\tdles", "s t r {\td V l z");
result.add("stradd-\tling", "s t r { d\tl I N");
result.add("strafe", "s t r eI f");
result.add("strag-\tgle", "s t r {\tg V l");
result.add("strag-\tgled", "s t r {\tg V l d");
result.add("stragg-\tler", "s t r { g\tl @r");
result.add("stragg-\tlers", "s t r { g\tl @r z");
result.add("strai-\tning", "s t r eI\tn I N");
result.add("straigh-\tta-\tway", "s t r eI\tt V\tw eI");
result.add("straigh-\tte-\tning", "s t r eI\tt V\tn I N");
result.add("straigh-\ttedge", "s t r eI\tt e dZ");
result.add("straigh-\tten", "s t r eI\tt V n");
result.add("straigh-\ttened", "s t r eI\tt V n d");
result.add("straigh-\ttens", "s t r eI\tt V n z");
result.add("straigh-\tter", "s t r eI\tt @r");
result.add("straight", "s t r eI t");
result.add("straights", "s t r eI t s");
result.add("strain", "s t r eI n");
result.add("strained", "s t r eI n d");
result.add("strains", "s t r eI n z");
result.add("strait", "s t r eI t");
result.add("strait-\tjac-\tket", "s t r eI t\tdZ {\tk V t");
result.add("straits", "s t r eI t s");
result.add("stram", "s t r { m");
result.add("stran-\tded", "s t r { n\td V d");
result.add("stran-\tding", "s t r { n\td I N");
result.add("stran-\tg-\tling", "s t r { N\tg V\tl I N");
result.add("stran-\tger", "s t r eI n\tdZ @r");
result.add("stran-\tgers", "s t r eI n\tdZ @r z");
result.add("stran-\tger's", "s t r eI n\tdZ @r z");
result.add("stran-\tgest", "s t r eI n\tdZ V s t");
result.add("stran-\tgle", "s t r { N\tg V l");
result.add("stran-\tgle-\thold", "s t r { N\tg V l\th @U l d");
result.add("stran-\tgled", "s t r { N\tg V l d");
result.add("stran-\tgu-\tla-\ttion", "s t r { N\tg j V\tl eI\tS V n");
result.add("stran-\tgu-\tla-\ttions", "s t r { N\tg j V\tl eI\tS V n z");
result.add("stran-\tgu-\tlate", "s t r { N\tg j V\tl eI t");
result.add("strand", "s t r { n d");
result.add("strand-\tline", "s t r { n\td l aI n");
result.add("strand-\tlines", "s t r { n\td l aI n z");
result.add("strands", "s t r { n d z");
result.add("strang", "s t r { N");
result.add("strang-\tler", "s t r { N\tg l @r");
result.add("strange", "s t r eI n dZ");
result.add("strange-\tly", "s t r eI n\tdZ l i:");
result.add("strange-\tness", "s t r eI n\tdZ n V s");
result.add("strap", "s t r { p");
result.add("strap-\tping", "s t r {\tp I N");
result.add("strapped", "s t r { p t");
result.add("straps", "s t r { p s");
result.add("stras-\tberg", "s t r { s\tb @r g");
result.add("stras-\tbourg", "s t r { s\tb O@ g");
result.add("stras-\tburg", "s t r { s\tb @r g");
result.add("strass-\tburg", "s t r { s\tb @r g");
result.add("strat-\tford", "s t r { t\tf @r d");
result.add("strat-\tton", "s t r {\tt V n");
result.add("strate", "s t r eI t");
result.add("straub", "s t r aU b");
result.add("straugh-\tter", "s t r O:\tt @r");
result.add("straughn", "s t r O: n");
result.add("straus", "s t r aU s");
result.add("strauss", "s t r aU s");
result.add("straw", "s t r O:");
result.add("straw-\tber-\tries", "s t r O:\tb e@\ti: z");
result.add("straw-\tber-\try", "s t r O:\tb e@\ti:");
result.add("strawn", "s t r O: n");
result.add("straws", "s t r O: z");
result.add("stray", "s t r eI");
result.add("stray-\ting", "s t r eI\tI N");
result.add("strayed", "s t r eI d");
result.add("strays", "s t r eI z");
result.add("stre-\tnu-\tous", "s t r e n\tj u:\tV s");
result.add("stre-\tnu-\tous-\tly", "s t r e n\tj u:\tV s\tl i:");
result.add("strea-\tker", "s t r i:\tk @r");
result.add("strea-\tking", "s t r i:\tk I N");
result.add("strea-\tmer", "s t r i:\tm @r");
result.add("strea-\tmers", "s t r i:\tm @r z");
result.add("strea-\tming", "s t r i:\tm I N");
result.add("streak", "s t r i: k");
result.add("streaked", "s t r i: k t");
result.add("streaks", "s t r i: k s");
result.add("stream", "s t r i: m");
result.add("stream-\tli-\tning", "s t r i: m\tl aI\tn I N");
result.add("stream-\tline", "s t r i: m\tl aI n");
result.add("stream-\tlined", "s t r i: m\tl aI n d");
result.add("streamed", "s t r i: m d");
result.add("streams", "s t r i: m z");
result.add("streck", "s t r e k");
result.add("stree-\tter", "s t r i:\tt @r");
result.add("stree-\tters", "s t r i:\tt @r z");
result.add("stree-\tty", "s t r i:\tt i:");
result.add("streep", "s t r i: p");
result.add("street", "s t r i: t");
result.add("street-\tcar", "s t r i: t\tk Q@");
result.add("street-\tman", "s t r i: t\tm V n");
result.add("street-\twise", "s t r i: t\tw aI z");
result.add("streets", "s t r i: t s");
result.add("street's", "s t r i: t s");
result.add("strei-\tsand", "s t r aI\tz V n d");
result.add("strei-\tsand's", "s t r aI\tz V n d z");
result.add("streight", "s t r eI t");
result.add("streit", "s t r aI t");
result.add("streng", "s t r e N");
result.add("streng-\tthe-\tning", "s t r e N\tT V\tn I N");
result.add("streng-\tthen", "s t r e N\tT V n");
result.add("streng-\tthened", "s t r e N\tT V n d");
result.add("streng-\tthens", "s t r e N\tT V n z");
result.add("strength", "s t r e N k T");
result.add("strengths", "s t r e N k T s");
result.add("strep", "s t r e p");
result.add("strep-\tto-\tcoc-\tcus", "s t r e p\tt V\tk O:\tk V s");
result.add("strep-\tto-\tki-\tnase", "s t r e p\tt V\tk aI\tn eI s");
result.add("streps", "s t r e p s");
result.add("stres-\tses", "s t r e\ts V z");
result.add("stres-\tsing", "s t r e\ts I N");
result.add("stres-\tsor", "s t r e\ts @r");
result.add("stres-\tsors", "s t r e\ts @r z");
result.add("stress", "s t r e s");
result.add("stress-\tful", "s t r e s\tf V l");
result.add("stressed", "s t r e s t");
result.add("stret-\tcher", "s t r e\ttS @r");
result.add("stret-\tchers", "s t r e\ttS @r z");
result.add("stret-\tches", "s t r e\ttS V z");
result.add("stret-\tching", "s t r e\ttS I N");
result.add("stret-\tto", "s t r e\tt @U");
result.add("stretch", "s t r e tS");
result.add("stretched", "s t r e tS t");
result.add("strew", "s t r u:");
result.add("strewn", "s t r u: n");
result.add("strey", "s t r eI");
result.add("stri-\tden-\tcy", "s t r aI\td V n\ts i:");
result.add("stri-\tdent", "s t r aI\td V n t");
result.add("stri-\tdent-\tly", "s t r aI\td V n\tt l i:");
result.add("stri-\tder", "s t r aI\td @r");
result.add("stri-\tding", "s t r aI\td I N");
result.add("stri-\tker", "s t r aI\tk @r");
result.add("stri-\tkers", "s t r aI\tk @r z");
result.add("stri-\tking", "s t r aI\tk I N");
result.add("stri-\tking-\tly", "s t r aI\tk I N\tl i:");
result.add("stri-\tper", "s t r aI\tp @r");
result.add("stri-\tpers", "s t r aI\tp @r z");
result.add("stri-\tven", "s t r I\tv V n");
result.add("stri-\tving", "s t r aI\tv I N");
result.add("stri-\tvings", "s t r aI\tv I N z");
result.add("stric-\tken", "s t r I\tk V n");
result.add("stric-\tker", "s t r I\tk @r");
result.add("stric-\tter", "s t r I k\tt @r");
result.add("stric-\ttest", "s t r I k\tt V s t");
result.add("stric-\tture", "s t r I k\ttS @r");
result.add("stric-\ttures", "s t r I k\ttS @r z");
result.add("strick", "s t r I k");
result.add("strick-\tland", "s t r I k\tl V n d");
result.add("strick-\tler", "s t r I k\tl @r");
result.add("strick-\tling", "s t r I k\tl I N");
result.add("strict", "s t r I k t");
result.add("strict-\tly", "s t r I k\tt l i:");
result.add("stride", "s t r aI d");
result.add("strides", "s t r aI d z");
result.add("strife", "s t r aI f");
result.add("strifes", "s t r aI f s");
result.add("strike", "s t r aI k");
result.add("strike-\tbrea-\tker", "s t r aI k\tb r eI\tk @r");
result.add("strike-\tbrea-\tkers", "s t r aI k\tb r eI\tk @r z");
result.add("strike-\tout", "s t r aI\tk aU t");
result.add("strike-\touts", "s t r aI\tk aU t s");
result.add("strikes", "s t r aI k s");
result.add("strin-\tgen-\tcy", "s t r I n\tdZ V n\ts i:");
result.add("strin-\tgent", "s t r I n\tdZ V n t");
result.add("strin-\tgent-\tly", "s t r I n\tdZ V n\tt l i:");
result.add("strin-\tger", "s t r I\tN @r");
result.add("strin-\tgers", "s t r I\tN @r z");
result.add("strin-\tging", "s t r I\tN I N");
result.add("strin-\tgy", "s t r I\tN i:");
result.add("strine", "s t r aI n");
result.add("string", "s t r I N");
result.add("stringed", "s t r I N d");
result.add("strings", "s t r I N z");
result.add("strip", "s t r I p");
result.add("strip-\tling", "s t r I p\tl I N");
result.add("strip-\tper", "s t r I\tp @r");
result.add("strip-\tpers", "s t r I\tp @r z");
result.add("strip-\tping", "s t r I\tp I N");
result.add("strip-\ttease", "s t r I p\tt i: z");
result.add("stripe", "s t r aI p");
result.add("striped", "s t r aI p t");
result.add("stripes", "s t r aI p s");
result.add("stripped", "s t r I p t");
result.add("strips", "s t r I p s");
result.add("strip's", "s t r I p s");
result.add("strive", "s t r aI v");
result.add("strives", "s t r aI v z");
result.add("stro-\tga-\tnoff", "s t r @U\tg V\tn O: f");
result.add("stro-\tking", "s t r @U\tk I N");
result.add("stro-\tma", "s t r @U\tm V");
result.add("stro-\tther", "s t r Q\tD @r");
result.add("strobe", "s t r @U b");
result.add("strode", "s t r @U d");
result.add("stroess-\tner", "s t r @U s\tn @r");
result.add("stroh", "s t r @U");
result.add("strohl", "s t r @U l");
result.add("stroke", "s t r @U k");
result.add("stroked", "s t r @U k t");
result.add("strokes", "s t r @U k s");
result.add("strol-\tler", "s t r @U\tl @r");
result.add("strol-\tlers", "s t r @U\tl @r z");
result.add("strol-\tling", "s t r @U\tl I N");
result.add("stroll", "s t r @U l");
result.add("strolled", "s t r @U l d");
result.add("strolls", "s t r @U l z");
result.add("strom", "s t r Q m");
result.add("strom-\tberg", "s t r Q m\tb @r g");
result.add("strom-\tbo-\tli", "s t r Q m\tb @U\tl i:");
result.add("strom-\tbo-\tli's", "s t r Q m\tb @U\tl i: z");
result.add("strome", "s t r @U m");
result.add("stron-\tger", "s t r O:\tN @r");
result.add("stron-\tgest", "s t r O: N\tg V s t");
result.add("stron-\tti-\tum", "s t r Q n\tt i:\tV m");
result.add("strong", "s t r O: N");
result.add("strong-\thold", "s t r O: N\th @U l d");
result.add("strong-\tholds", "s t r O: N\th @U l d z");
result.add("strong-\tly", "s t r O: N\tl i:");
result.add("strong-\tman", "s t r O: N\tm { n");
result.add("stroot", "s t r u: t");
result.add("stroud", "s t r aU d");
result.add("stroup", "s t r u: p");
result.add("strout", "s t r aU t");
result.add("strove", "s t r @U v");
result.add("strow", "s t r @U");
result.add("stru-\tthers", "s t r V\tD @r z");
result.add("strub", "s t r V b");
result.add("struc-\ttu-\tral", "s t r V k\ttS @r\tV l");
result.add("struc-\ttu-\tral-\tly", "s t r V k\ttS @r\tV\tl i:");
result.add("struc-\ttu-\tring", "s t r V k\ttS @r\tI N");
result.add("struc-\tture", "s t r V k\ttS @r");
result.add("struc-\ttured", "s t r V k\ttS @r d");
result.add("struc-\ttures", "s t r V k\ttS @r z");
result.add("struc-\tture's", "s t r V k\ttS @r z");
result.add("struck", "s t r V k");
result.add("strug-\tg-\tling", "s t r V\tg V\tl I N");
result.add("strug-\tgle", "s t r V\tg V l");
result.add("strug-\tgled", "s t r V\tg V l d");
result.add("strug-\tgles", "s t r V\tg V l z");
result.add("strum", "s t r V m");
result.add("strum-\tming", "s t r V\tm I N");
result.add("strums", "s t r V m z");
result.add("strung", "s t r V N");
result.add("strunk", "s t r V N k");
result.add("strunk's", "s t r V N k s");
result.add("strut", "s t r V t");
result.add("strut-\tting", "s t r V\tt I N");
result.add("struts", "s t r V t s");
result.add("struve", "s t r u: v");
result.add("stry-\tker", "s t r aI\tk @r");
result.add("strych-\tnine", "s t r I k\tn aI n");
result.add("stu", "s t u:");
result.add("stu-\tart", "s t u:\t@r t");
result.add("stu-\tarts", "s t u:\t@r t s");
result.add("stu-\tart's", "s t u:\t@r t s");
result.add("stu-\tber", "s t u:\tb @r");
result.add("stu-\tde-\tba-\tker", "s t u:\td V\tb eI\tk @r");
result.add("stu-\tdent", "s t u:\td V n t");
result.add("stu-\tdents", "s t u:\td V n t s");
result.add("stu-\tdent's", "s t u:\td V n t s");
result.add("stu-\tdi-\to", "s t u:\td i:\t@U");
result.add("stu-\tdi-\tos", "s t u:\td i:\t@U z");
result.add("stu-\tdi-\to's", "s t u:\td i:\t@U z");
result.add("stu-\tdi-\tous", "s t u:\td i:\tV s");
result.add("stu-\tdi-\tous-\tly", "s t u:\td i:\tV s\tl i:");
result.add("stu-\tdied", "s t V\td i: d");
result.add("stu-\tdies", "s t V\td i: z");
result.add("stu-\tdy", "s t V\td i:");
result.add("stu-\tdy-\ting", "s t V\td i:\tI N");
result.add("stu-\tdy's", "s t V\td i: z");
result.add("stu-\tka", "s t u:\tk V");
result.add("stu-\tpa", "s t u:\tp V");
result.add("stu-\tpen-\tdous", "s t u:\tp e n\td V s");
result.add("stu-\tpi-\tdest", "s t u:\tp I\td e s t");
result.add("stu-\tpi-\tdi-\tty", "s t u:\tp I\td I\tt i:");
result.add("stu-\tpid", "s t u:\tp I d");
result.add("stu-\tpid-\tly", "s t u:\tp I d\tl i:");
result.add("stu-\tpor", "s t u:\tp @r");
result.add("stub", "s t V b");
result.add("stub-\tble", "s t V\tb V l");
result.add("stub-\tble-\tfield", "s t V\tb V l\tf i: l d");
result.add("stub-\tborn", "s t V\tb @r n");
result.add("stub-\tborn-\tly", "s t V\tb @r n\tl i:");
result.add("stub-\tborn-\tness", "s t V\tb @r n\tn V s");
result.add("stub-\tby", "s t V\tb i:");
result.add("stubbed", "s t V b d");
result.add("stubbs", "s t V b z");
result.add("stubs", "s t V b z");
result.add("stuc-\tco", "s t V\tk @U");
result.add("stuc-\tker", "s t V\tk @r");
result.add("stuc-\tkey", "s t V\tk i:");
result.add("stuck", "s t V k");
result.add("stud", "s t V d");
result.add("stud-\tdard", "s t V\td @r d");
result.add("stud-\tded", "s t V\td V d");
result.add("stud-\tley", "s t V d\tl i:");
result.add("stude", "s t u: d");
result.add("studs", "s t V d z");
result.add("stuf-\tfer", "s t V\tf @r");
result.add("stuf-\tfing", "s t V\tf I N");
result.add("stuf-\tfy", "s t V\tf i:");
result.add("stuff", "s t V f");
result.add("stuffed", "s t V f t");
result.add("stuffs", "s t V f s");
result.add("stul-\tler", "s t V\tl @r");
result.add("stul-\tti-\tfy", "s t V l\tt I\tf aI");
result.add("stul-\tti-\tfy-\ting", "s t V l\tt I\tf aI\tI N");
result.add("stull", "s t V l");
result.add("stultz", "s t V l t s");
result.add("stum", "s t V m");
result.add("stum-\tb-\tling", "s t V m\tb V\tl I N");
result.add("stum-\tble", "s t V m\tb V l");
result.add("stum-\tbled", "s t V m\tb V l d");
result.add("stum-\tbles", "s t V m\tb V l z");
result.add("stum-\tpage", "s t V m\tp I dZ");
result.add("stum-\tping", "s t V m\tp I N");
result.add("stumm", "s t V m");
result.add("stump", "s t V m p");
result.add("stumped", "s t V m p t");
result.add("stumps", "s t V m p s");
result.add("stun", "s t V n");
result.add("stun-\tning", "s t V\tn I N");
result.add("stun-\tning-\tly", "s t V\tn I N\tl i:");
result.add("stun-\tted", "s t V n\tt V d");
result.add("stung", "s t V N");
result.add("stunk", "s t V N k");
result.add("stunned", "s t V n d");
result.add("stunt", "s t V n t");
result.add("stunts", "s t V n t s");
result.add("stupp", "s t V p");
result.add("stur-\tbridge", "s t @r b\tr I dZ");
result.add("stur-\tdi-\ter", "s t @r\td i:\t@r");
result.add("stur-\tdi-\tness", "s t @r\td i:\tn V s");
result.add("stur-\tdi-\tvant", "s t @r\td I\tv V n t");
result.add("stur-\tdy", "s t @r\td i:");
result.add("stur-\tgeon", "s t @r\tdZ V n");
result.add("stur-\tgeons", "s t @r\tdZ V n z");
result.add("stur-\tges", "s t @r\tdZ V z");
result.add("stur-\tgis", "s t @r\tdZ I s");
result.add("stur-\tkie", "s t @r\tk i:");
result.add("stur-\tmer", "s t @r\tm @r");
result.add("stur-\trock", "s t O@\tV k");
result.add("stur-\tte-\tvant", "s t @r\tt V\tv V n t");
result.add("sturm", "s t @r m");
result.add("stut-\tte-\tring", "s t V\tt @r\tI N");
result.add("stut-\tter", "s t V\tt @r");
result.add("stut-\tters", "s t V\tt @r z");
result.add("stuts-\tman", "s t V t\ts m V n");
result.add("stutt-\tgart", "s t V t\tg @r t");
result.add("stutz-\tman", "s t V t\ts m V n");
result.add("stuy-\tve-\tsant", "s t aI\tv V\ts V n t");
result.add("sty", "s t aI");
result.add("sty-\tling", "s t aI\tl I N");
result.add("sty-\tlis-\ttic", "s t aI\tl I s\tt I k");
result.add("sty-\tlis-\ttical-\tly", "s t aI\tl I s\tt I k\tl i:");
result.add("sty-\tlish", "s t aI\tl I S");
result.add("sty-\tlish-\tly", "s t aI\tl I S\tl i:");
result.add("sty-\tlist", "s t aI\tl I s t");
result.add("sty-\tlists", "s t aI\tl I s t s");
result.add("sty-\tlites", "s t I\tl aI t s");
result.add("sty-\tlize", "s t aI\tl aI z");
result.add("sty-\tlized", "s t aI\tl aI z d");
result.add("sty-\tlus", "s t aI\tl V s");
result.add("sty-\tmie", "s t aI\tm i:");
result.add("sty-\tmied", "s t aI\tm i: d");
result.add("sty-\tmies", "s t aI\tm i: z");
result.add("sty-\trene", "s t aI\tr i: n");
result.add("sty-\tro-\tfoam", "s t aI\tr V\tf @U m");
result.add("sty-\tron", "s t aI\tr O: n");
result.add("style", "s t aI l");
result.add("styled", "s t aI l d");
result.add("styles", "s t aI l z");
result.add("styx", "s t I k s");
result.add("su", "s u:");
result.add("su-\tba", "s u:\tb V");
result.add("su-\tba-\tcute", "s V\tb V k\tj u: t");
result.add("su-\tba-\tru", "s u:\tb @r\tu:");
result.add("su-\tber", "s u:\tb @r");
result.add("su-\tbic", "s u:\tb I k");
result.add("su-\tbur-\tba-\tni-\tza-\ttion", "s V\tb @r\tb V\tn V\tz eI\tS V n");
result.add("su-\tbur-\tba-\tnite", "s V\tb @r\tb V\tn aI t");
result.add("su-\tbur-\tba-\tnites", "s V\tb @r\tb V\tn aI t s");
result.add("su-\tbur-\tba-\tnize", "s V\tb @r\tb V\tn aI z");
result.add("su-\tbur-\tban", "s V\tb @r\tb V n");
result.add("su-\tbur-\tbans", "s V\tb @r\tb V n z");
result.add("su-\tbur-\tbi-\ta", "s V\tb @r\tb i:\tV");
result.add("su-\tburb", "s V\tb @r b");
result.add("su-\tburbs", "s V\tb @r b z");
result.add("su-\tburb's", "s V\tb @r b z");
result.add("su-\tcre", "s u:\tk @r");
result.add("su-\tda-\tfed", "s u:\td V\tf e d");
result.add("su-\tda-\tnese", "s u:\td V\tn i: z");
result.add("su-\tdan", "s u:\td { n");
result.add("su-\tdan's", "s u:\td { n z");
result.add("su-\te-\tz's", "s u:\te\tz V z");
result.add("su-\tey", "s u:\ti:");
result.add("su-\tez", "s u:\te z");
result.add("su-\tga-\try", "S U\tg @r\ti:");
result.add("su-\tgar", "S U\tg @r");
result.add("su-\tgared", "S U\tg @r d");
result.add("su-\tgars", "S U\tg @r z");
result.add("su-\tgar's", "S U\tg @r z");
result.add("su-\tgi-\tha-\tra", "s u:\tg i:\th Q@\tV");
result.add("su-\thar-\tto", "s u:\th Q@\tt @U");
result.add("su-\thar-\tto's", "s u:\th Q@\tt @U z");
result.add("su-\ti", "s u:\ti:");
result.add("su-\ti-\tci-\tdal", "s u:\tI\ts aI\td V l");
result.add("su-\ti-\tcide", "s u:\tI\ts aI d");
result.add("su-\ti-\tcides", "s u:\tI\ts aI d z");
result.add("su-\ting", "s u:\tI N");
result.add("su-\tkar-\tno", "s u:\tk Q@\tn @U");
result.add("su-\tkar-\tno's", "s u:\tk Q@\tn @U z");
result.add("su-\tkey", "s u:\tk i:");
result.add("su-\tki", "s u:\tk i:");
result.add("su-\tki-\tya-\tki", "s u:\tk i:\tQ\tk i:");
result.add("su-\tla-\twe-\tsi", "s u:\tl V\tw e\ts i:");
result.add("su-\tmac", "s u:\tm { k");
result.add("su-\tmat-\tra", "s u:\tm Q t\tr V");
result.add("su-\tmat-\tran", "s u:\tm Q t\tr V n");
result.add("su-\tme-\tri-\ta", "s V\tm @r\ti:\tV");
result.add("su-\tmer-\tlin", "s V\tm @r\tl I n");
result.add("su-\tmo", "s u:\tm @U");
result.add("su-\tni-\ta", "s u:\tn i:\tV");
result.add("su-\tnil", "s u:\tn I l");
result.add("su-\tnup", "s V\tn V p");
result.add("su-\tny", "s u:\tn i:");
result.add("su-\tpe-\tri-\to-\tri-\tty", "s u:\tp I@\ti:\tO@\tI\tt i:");
result.add("su-\tpe-\tri-\tor", "s u:\tp I@\ti:\t@r");
result.add("su-\tpe-\tri-\tors", "s u:\tp I@\ti:\t@r z");
result.add("su-\tpe-\tri-\tor's", "s u:\tp i:\tr i:\t@r z");
result.add("su-\tpe-\tro-\txide", "s u:\tp @r\tQ k\ts aI d");
result.add("su-\tper", "s u:\tp @r");
result.add("su-\tper-\tbowl", "s u:\tp @r\tb @U l");
result.add("su-\tper-\tbowl's", "s u:\tp @r\tb @U l z");
result.add("su-\tper-\tcen-\tter", "s u:\tp @r\ts e n\tt @r");
result.add("su-\tper-\tcen-\tters", "s u:\tp @r\ts e n\tt @r s");
result.add("su-\tper-\tcharge", "s u:\tp @r\ttS Q@ dZ");
result.add("su-\tper-\tcharged", "s u:\tp @r\ttS Q@ dZ d");
result.add("su-\tper-\tci-\tli-\tous", "s u:\tp @r\ts I\tl i:\tV s");
result.add("su-\tper-\tcol-\tli-\tder", "s u:\tp @r\tk V\tl aI\td @r");
result.add("su-\tper-\tcom-\tpu-\tter", "s u:\tp @r\tk V m\tp j u:\tt @r");
result.add("su-\tper-\tcom-\tpu-\tters", "s u:\tp @r\tk V m\tp j u:\tt @r z");
result.add("su-\tper-\tcom-\tpu-\tting", "s u:\tp @r\tk V m\tp j u:\tt I N");
result.add("su-\tper-\tcon-\tduc-\tti-\tvi-\tty", "s u:\tp @r\tk Q n\td V k\tt I\tv I\tt i:");
result.add("su-\tper-\tcon-\tduc-\tting", "s u:\tp @r\tk V n\td V k\tt I N");
result.add("su-\tper-\tcon-\tduc-\ttive", "s u:\tp @r\tk V n\td V k\tt I v");
result.add("su-\tper-\tcon-\tduc-\ttor", "s u:\tp @r\tk V n\td V k\tt @r");
result.add("su-\tper-\tcon-\tduc-\ttors", "s u:\tp @r\tk V n\td V k\tt @r z");
result.add("su-\tper-\tcool", "s u:\tp @r\tk u: l");
result.add("su-\tper-\tcooled", "s u:\tp @r\tk u: l d");
result.add("su-\tper-\tde-\tle-\tgate", "s u:\tp @r\td e\tl V\tg V t");
result.add("su-\tper-\tde-\tle-\tgates", "s u:\tp @r\td e\tl V\tg V t s");
result.add("su-\tper-\tfami-\tly", "s u:\tp @r\tf { m\tl i:");
result.add("su-\tper-\tfan", "s u:\tp @r\tf { n");
result.add("su-\tper-\tfast", "s u:\tp @r\tf { s t");
result.add("su-\tper-\tfi-\tcial", "s u:\tp @r\tf I\tS V l");
result.add("su-\tper-\tfi-\tcial-\tly", "s u:\tp @r\tf I\tS V l\tl i:");
result.add("su-\tper-\tflu-\ti-\tdi-\tty", "s u:\tp @r f\tl u:\tI\td I\tt i:");
result.add("su-\tper-\tfluous", "s u:\tp @r f\tl w V s");
result.add("su-\tper-\tfund", "s u:\tp @r\tf V n d");
result.add("su-\tper-\tgi-\tant", "s u:\tp @r\tdZ aI\tV n t");
result.add("su-\tper-\tgi-\tants", "s u:\tp @r\tdZ aI\tV n t s");
result.add("su-\tper-\the-\tro", "s u:\tp @r\th i:\tr @U");
result.add("su-\tper-\the-\troes", "s u:\tp @r\th i:\tr @U z");
result.add("su-\tper-\the-\tte-\tro-\tdyne", "s u:\tp @r\th e\tt @r\tV\td aI n");
result.add("su-\tper-\thea-\tted", "s u:\tp @r\th i:\tt V d");
result.add("su-\tper-\thigh-\tway", "s u:\tp @r\th aI\tw eI");
result.add("su-\tper-\thigh-\tways", "s u:\tp @r\th aI\tw eI z");
result.add("su-\tper-\thu-\tman", "s u:\tp @r h\tj u:\tm V n");
result.add("su-\tper-\tim-\tpose", "s u:\tp @r\tI m\tp @U z");
result.add("su-\tper-\tim-\tposed", "s u:\tp @r\tI m\tp @U z d");
result.add("su-\tper-\tin-\tten-\tdant", "s u:\tp @r\tI n\tt e n\td V n t");
result.add("su-\tper-\tin-\tten-\tdent", "s u:\tp @r\tI n\tt e n\td V n t");
result.add("su-\tper-\tin-\tten-\tdents", "s u:\tp @r\tI n\tt e n\td V n t s");
result.add("su-\tper-\tin-\tten-\tdent's", "s u:\tp @r\tI n\tt e n\td V n t s");
result.add("su-\tper-\tla-\ttive", "s U\tp @r\tl V\tt I v");
result.add("su-\tper-\tla-\ttives", "s U\tp @r\tl V\tt I v z");
result.add("su-\tper-\tma-\tjo-\tri-\tty", "s u:\tp @r\tm V\tdZ O@\tV\tt i:");
result.add("su-\tper-\tman", "s u:\tp @r\tm { n");
result.add("su-\tper-\tman's", "s u:\tp @r\tm { n z");
result.add("su-\tper-\tmar-\tket", "s u:\tp @r\tm Q@\tk I t");
result.add("su-\tper-\tmar-\tkets", "s u:\tp @r\tm Q@\tk V t s");
result.add("su-\tper-\tmar-\tket's", "s u:\tp @r\tm Q@\tk V t s");
result.add("su-\tper-\tmi-\tni-\tcom-\tpu-\tter", "s u:\tp @r\tm I\tn i:\tk V m\tp j u:\tt @r");
result.add("su-\tper-\tmi-\tni-\tcom-\tpu-\tters", "s u:\tp @r\tm I\tn i:\tk V m\tp j u:\tt @r z");
result.add("su-\tper-\tmo-\tdel", "s u:\tp @r\tm Q\td V l");
result.add("su-\tper-\tmo-\tdels", "s u:\tp @r\tm Q\td V l z");
result.add("su-\tper-\tna-\ttu-\tra-\tli-\tsm", "s u:\tp @r\tn {\ttS @r\tV\tl I\tz V m");
result.add("su-\tper-\tna-\ttu-\tral", "s u:\tp @r\tn {\ttS @r\tV l");
result.add("su-\tper-\tno-\tva", "s u:\tp @r\tn @U\tv V");
result.add("su-\tper-\tpo-\twer", "s u:\tp @r\tp aU\t@r");
result.add("su-\tper-\tpo-\twers", "s u:\tp @r\tp aU\t@r z");
result.add("su-\tper-\tpre-\tmi-\tum", "s u:\tp @r p\tr i:\tm i:\tV m");
result.add("su-\tper-\tre-\tgio-\tnal", "s u:\tp @r\tr i:\tdZ V\tn V l");
result.add("su-\tper-\tsa-\tver", "s u:\tp @r\ts eI\tv @r");
result.add("su-\tper-\tse-\tded", "s u:\tp @r\ts i:\td V d");
result.add("su-\tper-\tse-\tding", "s u:\tp @r\ts i:\td I N");
result.add("su-\tper-\tsec-\tret", "s u:\tp @r\ts i: k\tr V t");
result.add("su-\tper-\tsede", "s u:\tp @r\ts i: d");
result.add("su-\tper-\tsedes", "s u:\tp @r\ts i: d z");
result.add("su-\tper-\tso-\tnic", "s u:\tp @r\ts Q\tn I k");
result.add("su-\tper-\tsta-\ttion", "s u:\tp @r s\tt eI\tS V n");
result.add("su-\tper-\tstar", "s u:\tp @r s\tt Q@");
result.add("su-\tper-\tstars", "s u:\tp @r s\tt Q@ z");
result.add("su-\tper-\tsti-\ttion", "s u:\tp @r s\tt I\tS V n");
result.add("su-\tper-\tsti-\ttions", "s u:\tp @r s\tt I\tS V n z");
result.add("su-\tper-\tsti-\ttious", "s u:\tp @r s\tt I\tS V s");
result.add("su-\tper-\tstore", "s u:\tp @r s\tt O@");
result.add("su-\tper-\tstores", "s u:\tp @r s\tt O@ z");
result.add("su-\tper-\tstruc-\tture", "s u:\tp @r s\tt r V k\ttS @r");
result.add("su-\tper-\tstruc-\ttures", "s u:\tp @r s\tt r V k\ttS @r z");
result.add("su-\tper-\ttan-\tker", "s u:\tp @r\tt { N\tk @r");
result.add("su-\tper-\tvi-\tses", "s u:\tp @r\tv aI\tz V z");
result.add("su-\tper-\tvi-\tsing", "s u:\tp @r\tv aI\tz I N");
result.add("su-\tper-\tvi-\tsion", "s u:\tp @r\tv I\tZ V n");
result.add("su-\tper-\tvi-\tso-\try", "s u:\tp @r\tv aI\tz @r\ti:");
result.add("su-\tper-\tvi-\tsor", "s u:\tp @r\tv aI\tz @r");
result.add("su-\tper-\tvi-\tsors", "s u:\tp @r\tv aI\tz @r z");
result.add("su-\tper-\tvise", "s u:\tp @r\tv aI z");
result.add("su-\tper-\tvised", "s u:\tp @r\tv aI z d");
result.add("su-\tper-\two-\tman", "s u:\tp @r\tw U\tm V n");
result.add("su-\tper-\two-\tmen", "s u:\tp @r\tw I\tm e n");
result.add("su-\tperb", "s U\tp @r b");
result.add("su-\tperb-\tly", "s u:\tp @r b\tl i:");
result.add("su-\tpers", "s u:\tp @r z");
result.add("su-\tpine", "s V\tp aI n");
result.add("su-\tra", "s U@\tV");
result.add("su-\trat", "s @r\tQ t");
result.add("su-\trat's", "s @r\tQ t s");
result.add("su-\tre-\tty", "S U@\tV\tt i:");
result.add("su-\trer", "S U@\t@r");
result.add("su-\trest", "S U@\tV s t");
result.add("su-\trette", "s @r\te t");
result.add("su-\tri-\tnam", "s U@\tI\tn Q m");
result.add("su-\tri-\tname", "s @r\tI\tn Q m");
result.add("su-\tsa", "s u:\ts V");
result.add("su-\tsa-\tna", "s u:\ts Q\tn V");
result.add("su-\tsan", "s u:\tz V n");
result.add("su-\tsan-\tna", "s u:\tz {\tn V");
result.add("su-\tsan-\tnah", "s u:\ts {\tn V");
result.add("su-\tsann", "s u:\tz { n");
result.add("su-\tsanne", "s u:\tz { n");
result.add("su-\tsan's", "s u:\tz V n z");
result.add("su-\tsette", "s u:\tz e t");
result.add("su-\tshi", "s u:\tS i:");
result.add("su-\tsi", "s u:\ts i:");
result.add("su-\tsie", "s u:\tz i:");
result.add("su-\tsie's", "s u:\tz i: z");
result.add("su-\tsu-\tmu", "s u:\ts u:\tm u:");
result.add("su-\tsy", "s u:\tz i:");
result.add("su-\tter", "s u:\tt @r");
result.add("su-\tther", "s V\tD @r");
result.add("su-\tther-\tland", "s V\tD @r\tl V n d");
result.add("su-\tther-\tlin", "s V\tT @r\tl I n");
result.add("su-\tto", "s u:\tt @U");
result.add("su-\ttor", "s u:\tt @r");
result.add("su-\tture", "s u:\ttS @r");
result.add("su-\ttures", "s u:\ttS @r z");
result.add("su-\tva", "s u:\tv V");
result.add("su-\tzan-\tna", "s u:\tz {\tn V");
result.add("su-\tzanne", "s u:\tz { n");
result.add("su-\tzette", "s u:\tz e t");
result.add("su-\tzie", "s V\tz i:");
result.add("su-\tzu-\tki", "s V\tz u:\tk i:");
result.add("su-\tzy", "s u:\tz i:");
result.add("su-\tzy's", "s u:\tz i: z");
result.add("sua-\trez", "s w Q@\te z");
result.add("sua-\tsion", "s w eI\tZ V n");
result.add("suave", "s w Q v");
result.add("sub", "s V b");
result.add("sub-\ta-\tto-\tmic", "s V\tb V\tt Q\tm I k");
result.add("sub-\tas-\tsemb-\tlies", "s V\tb V\ts e m\tb l i: z");
result.add("sub-\tas-\tsemb-\tly", "s V\tb V\ts e m\tb l i:");
result.add("sub-\tbing", "s V\tb I N");
result.add("sub-\tchap-\tter", "s V b\ttS { p\tt @r");
result.add("sub-\tcom-\tman-\tder", "s V b\tk V\tm { n\td @r");
result.add("sub-\tcom-\tman-\tders", "s V b\tk V\tm { n\td @r z");
result.add("sub-\tcom-\tman-\tder's", "s V b\tk V\tm { n\td @r z");
result.add("sub-\tcom-\tmit-\ttee", "s V b\tk V\tm I\tt i:");
result.add("sub-\tcom-\tmit-\ttees", "s V b\tk V\tm I\tt i: z");
result.add("sub-\tcom-\tmit-\ttee's", "s V b\tk V\tm I\tt i: z");
result.add("sub-\tcom-\tpact", "s V b\tk Q m\tp { k t");
result.add("sub-\tcom-\tpacts", "s V b\tk Q m\tp { k t s");
result.add("sub-\tcon-\tscious", "s V b\tk Q n\tS V s");
result.add("sub-\tcon-\tscious-\tly", "s V b\tk Q n\tS V s\tl i:");
result.add("sub-\tcon-\tti-\tnent", "s V b\tk Q n\tt V\tn V n t");
result.add("sub-\tcon-\tti-\tnents", "s V b\tk Q n\tt V\tn V n t s");
result.add("sub-\tcont-\trac-\tted", "s V b\tk Q n\tt r { k\tt V d");
result.add("sub-\tcont-\trac-\tting", "s V b\tk V n\tt r { k\tt I N");
result.add("sub-\tcont-\trac-\ttor", "s V b\tk Q n\tt r { k\tt @r");
result.add("sub-\tcont-\trac-\ttors", "s V b\tk Q n\tt r { k\tt @r z");
result.add("sub-\tcont-\tract", "s V b\tk Q n\tt r { k t");
result.add("sub-\tcont-\tracts", "s V b\tk Q n\tt r { k t s");
result.add("sub-\tcul-\tture", "s V b\tk V l\ttS @r");
result.add("sub-\tcul-\ttures", "s V b\tk V l\ttS @r z");
result.add("sub-\tdi-\tvi-\tded", "s V b\td I\tv aI\td I d");
result.add("sub-\tdi-\tvi-\tsion", "s V b\td I\tv I\tZ V n");
result.add("sub-\tdi-\tvi-\tsions", "s V b\td I\tv I\tZ V n z");
result.add("sub-\tdi-\tvide", "s V b\td I\tv aI d");
result.add("sub-\tdu-\ting", "s V b\td u:\tI N");
result.add("sub-\tdue", "s V b\td u:");
result.add("sub-\tdued", "s V b\td u: d");
result.add("sub-\tfa-\tmi-\tlies", "s V b\tf {\tm I\tl i: z");
result.add("sub-\tfa-\tmi-\tly", "s V b\tf {\tm I\tl i:");
result.add("sub-\tgroup", "s V b\tg r u: p");
result.add("sub-\tgroups", "s V b\tg r u: p s");
result.add("sub-\thu-\tman", "s V b\th j u:\tm V n");
result.add("sub-\tjec-\tted", "s V b\tdZ e k\tt V d");
result.add("sub-\tjec-\tti-\tvi-\tty", "s V b\tdZ e k\tt I\tv V\tt i:");
result.add("sub-\tjec-\tting", "s V b\tdZ e k\tt I N");
result.add("sub-\tjec-\ttive", "s V b\tdZ e k\tt I v");
result.add("sub-\tject", "s V b\tdZ e k t");
result.add("sub-\tjects", "s V b\tdZ I k t s");
result.add("sub-\tject's", "s V b\tdZ I k t s");
result.add("sub-\tju-\tga-\tted", "s V b\tdZ V\tg eI\tt V d");
result.add("sub-\tju-\tgate", "s V b\tdZ V\tg eI t");
result.add("sub-\tking-\tdom", "s V b\tk I N\td V m");
result.add("sub-\tlea-\tsing", "s V b\tl i:\ts I N");
result.add("sub-\tlease", "s V b\tl i: s");
result.add("sub-\tlet", "s V b\tl e t");
result.add("sub-\tlett", "s u: b\tl e t");
result.add("sub-\tli-\tmi-\tnal", "s V b\tl I\tm V\tn V l");
result.add("sub-\tli-\tmi-\tnal-\tly", "s V b\tl I\tm V\tn V\tl i:");
result.add("sub-\tlime", "s V b\tl aI m");
result.add("sub-\tlu-\txa-\ttion", "s V b\tl V k\ts eI\tS V n");
result.add("sub-\tlu-\txa-\ttions", "s V b\tl V k\ts eI\tS V n z");
result.add("sub-\tma-\tchine", "s V b\tm I\tS i: n");
result.add("sub-\tma-\trine", "s V b\tm @r\ti: n");
result.add("sub-\tma-\trines", "s V b\tm @r\ti: n z");
result.add("sub-\tma-\trine's", "s V b\tm @r\ti: n z");
result.add("sub-\tmer-\tgence", "s V b\tm @r\tdZ V n s");
result.add("sub-\tmer-\tsi-\tble", "s V b\tm @r\ts V\tb V l");
result.add("sub-\tmer-\tsion", "s V b\tm @r\tZ V n");
result.add("sub-\tmerge", "s V b\tm @r dZ");
result.add("sub-\tmerged", "s V b\tm @r dZ d");
result.add("sub-\tmerse", "s V b\tm @r s");
result.add("sub-\tmersed", "s V b\tm @r s t");
result.add("sub-\tmi-\tni-\tmum", "s V b\tm I\tn V\tm V m");
result.add("sub-\tmis-\tsion", "s V b\tm I\tS V n");
result.add("sub-\tmis-\tsions", "s V b\tm I\tS V n z");
result.add("sub-\tmis-\tsive", "s V b\tm I\ts I v");
result.add("sub-\tmit", "s V b\tm I t");
result.add("sub-\tmit-\tted", "s V b\tm I\tt V d");
result.add("sub-\tmit-\tting", "s V b\tm I\tt I N");
result.add("sub-\tmits", "s V b\tm I t s");
result.add("sub-\tnote-\tbook", "s V b\tn @U t\tb U k");
result.add("sub-\tor-\tdi-\tna-\tted", "s V\tb O@\td V\tn eI\tt V d");
result.add("sub-\tor-\tdi-\tna-\tting", "s V\tb O@\td V\tn eI\tt I N");
result.add("sub-\tor-\tdi-\tna-\ttion", "s V\tb O@\td V\tn eI\tS V n");
result.add("sub-\tor-\tdi-\tnate", "s V\tb O@\td V\tn eI t");
result.add("sub-\tor-\tdi-\tnates", "s V\tb O@\td V\tn eI t s");
result.add("sub-\tpar", "s V b\tp Q@");
result.add("sub-\tpoe-\tna", "s V\tp i:\tn V");
result.add("sub-\tpoe-\tna-\ting", "s V\tp i:\tn V\tI N");
result.add("sub-\tpoe-\tnaed", "s V\tp i:\tn V d");
result.add("sub-\tpoe-\tnas", "s V\tp i:\tn V z");
result.add("sub-\tprin-\tci-\tpal", "s V b\tp r I n\ts V\tp V l");
result.add("sub-\tprin-\tci-\tpals", "s V b\tp r I n\ts V\tp V l z");
result.add("sub-\tsa-\tha-\tran", "s V b\ts V\th e@\tV n");
result.add("sub-\tse-\tquent", "s V b\ts V k\tw V n t");
result.add("sub-\tse-\tquent-\tly", "s V b\ts V k\tw V n\tt l i:");
result.add("sub-\tsec-\ttion", "s V b\ts e k\tS V n");
result.add("sub-\tser-\tvi-\tence", "s V b\ts @r\tv i:\tV n s");
result.add("sub-\tser-\tvi-\tent", "s V b\ts @r\tv i:\tV n t");
result.add("sub-\tset", "s V b\ts e t");
result.add("sub-\tsi-\tded", "s V b\ts aI\td V d");
result.add("sub-\tsi-\tdence", "s V b\ts aI\td V n s");
result.add("sub-\tsi-\tdi-\ta-\tries", "s V b\ts I\td i:\te@\ti: z");
result.add("sub-\tsi-\tdi-\ta-\try", "s V b\ts I\td i:\te@\ti:");
result.add("sub-\tsi-\tdi-\ta-\try's", "s V b\ts I\td i:\te@\ti: z");
result.add("sub-\tsi-\tdi-\tza-\ttion", "s V b\ts I\td I\tz eI\tS V n");
result.add("sub-\tsi-\tdi-\tzes", "s V b\ts I\td aI\tz V z");
result.add("sub-\tsi-\tdi-\tzing", "s V b\ts I\td aI\tz I N");
result.add("sub-\tsi-\tdies", "s V b\ts I\td i: z");
result.add("sub-\tsi-\tding", "s V b\ts aI\td I N");
result.add("sub-\tsi-\tdize", "s V b\ts I\td aI z");
result.add("sub-\tsi-\tdized", "s V b\ts I\td aI z d");
result.add("sub-\tsi-\tdy", "s V b\ts I\td i:");
result.add("sub-\tside", "s V b\ts aI d");
result.add("sub-\tsides", "s V b\ts aI d z");
result.add("sub-\tsis-\ttence", "s V b\ts I s\tt e n s");
result.add("sub-\tsist", "s V b\ts I s t");
result.add("sub-\tsoil", "s V b\ts OI l");
result.add("sub-\tsur-\tface", "s V b\ts @r\tf V s");
result.add("sub-\tsys-\ttem", "s V b\ts I s\tt V m");
result.add("sub-\tsys-\ttems", "s V b\ts I s\tt V m z");
result.add("sub-\tt-\tler", "s V\tt V\tl @r");
result.add("sub-\tt-\tly", "s V\tt V\tl i:");
result.add("sub-\tter-\tfuge", "s V b\tt @r f\tj u: dZ");
result.add("sub-\tter-\tra-\tne-\tan", "s V b\tt @r\teI\tn i:\tV n");
result.add("sub-\ttext", "s V b\tt e k s t");
result.add("sub-\tti-\ttle", "s V b\tt aI\tt V l");
result.add("sub-\tti-\ttled", "s V b\tt aI\tt V l d");
result.add("sub-\tti-\ttles", "s V b\tt aI\tt V l z");
result.add("sub-\ttle", "s V\tt V l");
result.add("sub-\ttle-\tties", "s V\tt V l\tt i: z");
result.add("sub-\ttle-\tty", "s V\tt V l\tt i:");
result.add("sub-\ttype", "s V b\tt aI p");
result.add("sub-\tver-\tsion", "s V b\tv @r\tZ V n");
result.add("sub-\tver-\tsive", "s V b\tv @r\ts I v");
result.add("sub-\tver-\tsives", "s V b\tv @r\ts I v z");
result.add("sub-\tver-\tted", "s V b\tv @r\tt V d");
result.add("sub-\tver-\tting", "s V b\tv @r\tt I N");
result.add("sub-\tvert", "s V b\tv @r t");
result.add("sub-\tverts", "s V b\tv @r t s");
result.add("sub-\tway", "s V b\tw eI");
result.add("sub-\tways", "s V b\tw eI z");
result.add("sub-\tze-\tro", "s V b\tz I@\t@U");
result.add("subbed", "s V b d");
result.add("subp-\tlot", "s V b\tp l Q t");
result.add("subp-\tlots", "s V b\tp l Q t s");
result.add("subs", "s V b z");
result.add("sub's", "s V b z");
result.add("subs-\tcri-\tber", "s V b\ts k r aI\tb @r");
result.add("subs-\tcri-\tbers", "s V b\ts k r aI\tb @r z");
result.add("subs-\tcri-\tber's", "s V b\ts k r aI\tb @r z");
result.add("subs-\tcri-\tbing", "s V b\ts k r aI\tb I N");
result.add("subs-\tcribe", "s V b\ts k r aI b");
result.add("subs-\tcribed", "s V b\ts k r aI b d");
result.add("subs-\tcribes", "s V b\ts k r aI b z");
result.add("subs-\tcrip-\ttion", "s V b\ts k r I p\tS V n");
result.add("subs-\tcrip-\ttions", "s V b\ts k r I p\tS V n z");
result.add("subs-\tta-\ttion", "s V b\ts t eI\tS V n");
result.add("subs-\ttan-\tces", "s V b\ts t V n\ts V z");
result.add("subs-\ttan-\tdard", "s V b\ts t { n\td @r d");
result.add("subs-\ttan-\tti-\ta-\tted", "s V b\ts t { n\tS i:\teI\tt V d");
result.add("subs-\ttan-\tti-\ta-\ttion", "s V b\ts t { n\ttS i:\teI\tS V n");
result.add("subs-\ttan-\tti-\tate", "s V b\ts t { n\ttS i:\teI t");
result.add("subs-\ttan-\tti-\tates", "s V b\ts t { n\ttS i:\teI t s");
result.add("subs-\ttan-\ttial", "s V b\ts t { n\ttS V l");
result.add("subs-\ttan-\ttial-\tly", "s V b\ts t { n\tS V\tl i:");
result.add("subs-\ttan-\ttive", "s V b\ts t V n\tt I v");
result.add("subs-\ttan-\ttive-\tly", "s V b\ts t V n\tt I v\tl i:");
result.add("subs-\ttance", "s V b\ts t V n s");
result.add("subs-\tti-\ttu-\tted", "s V b\ts t I\tt u:\tt I d");
result.add("subs-\tti-\ttu-\tting", "s V b\ts t I\tt u:\tt I N");
result.add("subs-\tti-\ttu-\ttion", "s V b\ts t I\tt u:\tS V n");
result.add("subs-\tti-\ttu-\ttions", "s V b\ts t I\tt u:\tS V n z");
result.add("subs-\tti-\ttute", "s V b\ts t I\tt u: t");
result.add("subs-\tti-\ttutes", "s V b\ts t I\tt u: t s");
result.add("subst-\trate", "s V b\ts t r eI t");
result.add("subst-\trates", "s V b\ts t r eI t s");
result.add("subt-\trac-\tted", "s V b\tt r { k\tt V d");
result.add("subt-\trac-\tting", "s V b\tt r { k\tt I N");
result.add("subt-\trac-\ttion", "s V b\tt r { k\tS V n");
result.add("subt-\tract", "s V b\tt r { k t");
result.add("suc-\tcee-\tded", "s V k\ts i:\td V d");
result.add("suc-\tcee-\tding", "s V k\ts i:\td I N");
result.add("suc-\tceed", "s V k\ts i: d");
result.add("suc-\tceeds", "s V k\ts i: d z");
result.add("suc-\tces-\tses", "s V k\ts e\ts V z");
result.add("suc-\tces-\tsion", "s V k\ts e\tS V n");
result.add("suc-\tces-\tsive", "s V k\ts e\ts I v");
result.add("suc-\tces-\tsive-\tly", "s V k\ts e\ts I v\tl i:");
result.add("suc-\tces-\tsor", "s V k\ts e\ts @r");
result.add("suc-\tces-\tsors", "s V k\ts e\ts @r z");
result.add("suc-\tcess", "s V k\ts e s");
result.add("suc-\tcess-\tful", "s V k\ts e s\tf V l");
result.add("suc-\tcess-\tful-\tly", "s V k\ts e s\tf V\tl i:");
result.add("suc-\tcinct", "s V k\ts I N k t");
result.add("suc-\tcinct-\tly", "s V k\ts I N\tk t l i:");
result.add("suc-\tcor", "s V\tk @r");
result.add("suc-\tcu-\tlent", "s V k\tj V\tl V n t");
result.add("suc-\tcu-\tlents", "s V k\tj V\tl V n t s");
result.add("suc-\tcum-\tbing", "s V\tk V\tm I N");
result.add("suc-\tcumb", "s V\tk V m");
result.add("suc-\tcumbed", "s V\tk V m d");
result.add("suc-\tcumbs", "s V\tk V m z");
result.add("suc-\tker", "s V\tk @r");
result.add("suc-\tkered", "s V\tk @r d");
result.add("suc-\tkers", "s V\tk @r z");
result.add("suc-\tking", "s V\tk I N");
result.add("suc-\tkle", "s V\tk V l");
result.add("suc-\tkow", "s V\tk aU");
result.add("suc-\trose", "s u: k\tr @U s");
result.add("suc-\ttion", "s V k\tS V n");
result.add("such", "s V tS");
result.add("suck", "s V k");
result.add("suck-\tling", "s V k\tl I N");
result.add("sucked", "s V k t");
result.add("sucks", "s V k s");
result.add("sud-\tbu-\try", "s V d\tb e@\ti:");
result.add("sud-\tbu-\try's", "s V d\tb e@\ti: z");
result.add("sud-\tden", "s V\td V n");
result.add("sud-\tden-\tly", "s V\td V n\tl i:");
result.add("sud-\tden-\tness", "s V\td V n\tn V s");
result.add("sud-\tderth", "s V\td @r T");
result.add("sudd", "s V d");
result.add("suds", "s V d z");
result.add("sue", "s u:");
result.add("sued", "s u: d");
result.add("suede", "s w eI d");
result.add("suedes", "s w eI d z");
result.add("sues", "s u: z");
result.add("suf-\tfe-\trer", "s V\tf @r\t@r");
result.add("suf-\tfe-\trers", "s V\tf @r\t@r z");
result.add("suf-\tfe-\tring", "s V\tf @r\tI N");
result.add("suf-\tfe-\trings", "s V\tf @r\tI N z");
result.add("suf-\tfer", "s V\tf @r");
result.add("suf-\tfered", "s V\tf @r d");
result.add("suf-\tfern", "s V\tf @r n");
result.add("suf-\tfers", "s V\tf @r z");
result.add("suf-\tfi-\tces", "s V\tf aI\ts V z");
result.add("suf-\tfi-\tcien-\tcy", "s V\tf I\tS V n\ts i:");
result.add("suf-\tfi-\tcient", "s V\tf I\tS V n t");
result.add("suf-\tfi-\tcient-\tly", "s V\tf I\tS V n\tt l i:");
result.add("suf-\tfice", "s V\tf aI s");
result.add("suf-\tficed", "s V\tf aI s t");
result.add("suf-\tfield", "s V\tf i: l d");
result.add("suf-\tfield's", "s V\tf i: l d z");
result.add("suf-\tfix", "s V\tf I k s");
result.add("suf-\tfo-\tca-\tted", "s V\tf V\tk eI\tt V d");
result.add("suf-\tfo-\tca-\tting", "s V\tf V\tk eI\tt I N");
result.add("suf-\tfo-\tca-\ttion", "s V\tf V\tk eI\tS V n");
result.add("suf-\tfo-\tcate", "s V\tf V\tk eI t");
result.add("suf-\tfolk", "s V\tf V k");
result.add("suf-\tfuse", "s V f\tj u: z");
result.add("suf-\tfused", "s V f\tj u: z d");
result.add("suff-\tra-\tgette", "s V f\tr V\tdZ e t");
result.add("suff-\tra-\tgettes", "s V f\tr V\tdZ e t s");
result.add("suff-\tra-\tgist", "s V f\tr V\tdZ I s t");
result.add("suff-\tra-\tgists", "s V f\tr V\tdZ I s t s");
result.add("suff-\trage", "s V f\tr I dZ");
result.add("sug-\tden", "s V g\td V n");
result.add("sug-\tges-\tted", "s V g\tdZ e s\tt V d");
result.add("sug-\tges-\tti-\tble", "s V g\tdZ e s\tt V\tb V l");
result.add("sug-\tges-\tting", "s V g\tdZ e s\tt I N");
result.add("sug-\tges-\ttion", "s V g\tdZ e s\ttS V n");
result.add("sug-\tges-\ttions", "s V g\tdZ e s\ttS V n z");
result.add("sug-\tges-\ttive", "s V g\tdZ e s\tt I v");
result.add("sug-\tges-\ttive-\tness", "s V g\tdZ e s\tt I v\tn V s");
result.add("sug-\tgest", "s V g\tdZ e s t");
result.add("sug-\tgests", "s V g\tdZ e s t s");
result.add("sugg", "s V g");
result.add("suh", "s V");
result.add("sui-\tta-\tbi-\tli-\tty", "s u:\tt V\tb I\tl V\tt i:");
result.add("sui-\tta-\tble", "s u:\tt V\tb V l");
result.add("sui-\ttab-\tly", "s u:\tt V b\tl i:");
result.add("sui-\tted", "s u:\tt V d");
result.add("sui-\tter", "s u:\tt @r");
result.add("sui-\ttor", "s u:\tt @r");
result.add("sui-\ttors", "s u:\tt @r z");
result.add("sui-\ttor's", "s u:\tt @r z");
result.add("suis-\tse's", "s w I\ts V z");
result.add("suisse", "s w I s");
result.add("suit", "s u: t");
result.add("suit-\tca-\tses", "s u: t\tk eI\ts V z");
result.add("suit-\tcase", "s u: t\tk eI s");
result.add("suite", "s w i: t");
result.add("suites", "s w i: t s");
result.add("suits", "s u: t s");
result.add("suit's", "s u: t s");
result.add("suk", "s V k");
result.add("suk-\thu-\tmi", "s u: k\th u:\tm i:");
result.add("sul", "s V l");
result.add("sul-\tfa", "s V l\tf V");
result.add("sul-\tfate", "s V l\tf eI t");
result.add("sul-\tfide", "s V l\tf aI d");
result.add("sul-\tfite", "s V l\tf aI t");
result.add("sul-\tfites", "s V l\tf aI t s");
result.add("sul-\tfu-\tric", "s V l\tf j U@\tI k");
result.add("sul-\tfur", "s V l\tf @r");
result.add("sul-\tking", "s V l\tk I N");
result.add("sul-\tlen", "s V\tl V n");
result.add("sul-\tlens", "s V\tl V n z");
result.add("sul-\tli-\tvan", "s V\tl I\tv V n");
result.add("sul-\tli-\tvan's", "s V\tl I\tv V n z");
result.add("sul-\tlied", "s V\tl i: d");
result.add("sul-\tly", "s V\tl i:");
result.add("sul-\tphate", "s V l\tf eI t");
result.add("sul-\tphates", "s V l\tf eI t s");
result.add("sul-\tphur", "s V l\tf @r");
result.add("sul-\tta-\tnate", "s V l\tt V\tn V t");
result.add("sul-\ttan", "s V l\tt V n");
result.add("sul-\ttans", "s V l\tt V n z");
result.add("sul-\ttan's", "s V l\tt V n z");
result.add("sul-\ttry", "s V l\tt r i:");
result.add("sulk", "s V l k");
result.add("sulked", "s V l k t");
result.add("sulz-\tber-\tger", "s V l\tt s b @r\tg @r");
result.add("sum", "s V m");
result.add("sum-\tgait", "s V m\tg eI t");
result.add("sum-\tma", "s u:\tm V");
result.add("sum-\tma-\tri-\tly", "s V\tm e@\tV\tl i:");
result.add("sum-\tma-\tri-\tzes", "s V\tm @r\taI\tz V z");
result.add("sum-\tma-\tri-\tzing", "s V\tm @r\taI\tz I N");
result.add("sum-\tma-\tries", "s V\tm @r\ti: z");
result.add("sum-\tma-\trize", "s V\tm @r\taI z");
result.add("sum-\tma-\trized", "s V\tm @r\taI z d");
result.add("sum-\tma-\try", "s V\tm @r\ti:");
result.add("sum-\tma-\ttion", "s V\tm eI\tS V n");
result.add("sum-\tma-\ttions", "s V\tm eI\tS V n z");
result.add("sum-\tmar", "s V\tm @r");
result.add("sum-\tmer", "s V\tm @r");
result.add("sum-\tmer-\tfield", "s V\tm @r\tf i: l d");
result.add("sum-\tmer-\ttime", "s V\tm @r\tt aI m");
result.add("sum-\tmer-\tville", "s V\tm @r\tv I l");
result.add("sum-\tmers", "s V\tm @r z");
result.add("sum-\tmer's", "s V\tm @r z");
result.add("sum-\tmi-\tteer", "s V\tm I\tt I@");
result.add("sum-\tmi-\tteers", "s V\tm I\tt I@ z");
result.add("sum-\tmi-\ttry", "s V\tm I t\tr i:");
result.add("sum-\tming", "s V\tm I N");
result.add("sum-\tmit", "s V\tm I t");
result.add("sum-\tmit-\tville", "s V\tm I t\tv I l");
result.add("sum-\tmits", "s V\tm I t s");
result.add("sum-\tmit's", "s V\tm I t s");
result.add("sum-\tmo-\tning", "s V\tm V\tn I N");
result.add("sum-\tmon", "s V\tm V n");
result.add("sum-\tmon-\tses", "s V\tm V n\tz V z");
result.add("sum-\tmoned", "s V\tm V n d");
result.add("sum-\tmons", "s V\tm V n z");
result.add("sum-\tmonsed", "s V\tm V n z d");
result.add("sum-\tmum", "s V\tm V m");
result.add("sum-\tner", "s V m\tn @r");
result.add("sum-\trall", "s V m\tr V l");
result.add("sum-\tter", "s V m\tt @r");
result.add("summed", "s V m d");
result.add("sump", "s V m p");
result.add("sump-\tter", "s V m\tp t @r");
result.add("sump-\ttuous", "s V m\tp tS w V s");
result.add("sums", "s V m z");
result.add("sun", "s V n");
result.add("sun-\tba-\tthing", "s V n\tb eI\tD I N");
result.add("sun-\tbath", "s V n\tb { T");
result.add("sun-\tbathe", "s V n\tb eI D");
result.add("sun-\tbeam", "s V n\tb i: m");
result.add("sun-\tbeam's", "s V n\tb i: m z");
result.add("sun-\tbelt", "s V n\tb e l t");
result.add("sun-\tbelt's", "s V n\tb e l t s");
result.add("sun-\tbird", "s V n\tb @r d");
result.add("sun-\tbirds", "s V n\tb @r d z");
result.add("sun-\tburn", "s V n\tb @r n");
result.add("sun-\tburned", "s V n\tb @r n d");
result.add("sun-\tcook", "s V n\tk U k");
result.add("sun-\tdae", "s V n\td eI");
result.add("sun-\tdae's", "s V n\td eI z");
result.add("sun-\tdance", "s V n\td { n s");
result.add("sun-\tday", "s V n\td eI");
result.add("sun-\tdays", "s V n\td eI z");
result.add("sun-\tday's", "s V n\td eI z");
result.add("sun-\tder", "s V n\td @r");
result.add("sun-\tder-\tland", "s V n\td @r\tl V n d");
result.add("sun-\tdews", "s V n\td u: z");
result.add("sun-\tdial", "s V n\td aI l");
result.add("sun-\tdin", "s V n\td I n");
result.add("sun-\tdown", "s V n\td aU n");
result.add("sun-\tfish", "s V n\tf I S");
result.add("sun-\tflo-\twer", "s V n\tf l aU\t@r");
result.add("sun-\tflo-\twers", "s V n\tf l aU\t@r z");
result.add("sun-\tglas-\tses", "s V n\tg l {\ts V z");
result.add("sun-\tglass", "s V n\tg l { s");
result.add("sun-\tken", "s V N\tk V n");
result.add("sun-\tkist", "s V n\tk I s t");
result.add("sun-\tland", "s V n\tl { n d");
result.add("sun-\tlight", "s V n\tl aI t");
result.add("sun-\tlit", "s V n\tl I t");
result.add("sun-\tni", "s u:\tn i:");
result.add("sun-\tning", "s V\tn I N");
result.add("sun-\tnis", "s U\tn i: z");
result.add("sun-\tny", "s V\tn i:");
result.add("sun-\tny-\tside", "s V\tn i:\ts aI d");
result.add("sun-\tny-\tvale", "s V\tn i:\tv eI l");
result.add("sun-\tri-\tse's", "s V n\tr aI\tz V z");
result.add("sun-\trise", "s V n\tr aI z");
result.add("sun-\troof", "s V n\tr u: f");
result.add("sun-\troom", "s V n\tr u: m");
result.add("sun-\tset", "s V n\ts e t");
result.add("sun-\tsets", "s V n\ts e t s");
result.add("sun-\tshi-\tny", "s V n\tS aI\tn i:");
result.add("sun-\tshine", "s V n\tS aI n");
result.add("sun-\tshine's", "s V n\tS aI n z");
result.add("sun-\ttan", "s V n\tt { n");
result.add("sun-\tward", "s V n\tw @r d");
result.add("sund-\tberg", "s V n\td b @r g");
result.add("sund-\try", "s V n\td r i:");
result.add("sunds-\ttrom", "s V n\td s t r V m");
result.add("sung", "s V N");
result.add("sung's", "s V N z");
result.add("sunk", "s V N k");
result.add("suns", "s V n z");
result.add("sun's", "s V n z");
result.add("suns-\tpot", "s V n\ts p Q t");
result.add("suns-\tpots", "s V n\ts p Q t s");
result.add("suns-\ttar", "s V n\ts t Q@");
result.add("sunsc-\treen", "s V n\ts k r i: n");
result.add("sunsc-\treens", "s V n\ts k r i: n z");
result.add("sup", "s V p");
result.add("sup-\tpa", "s u:\tp V");
result.add("sup-\tper", "s V\tp @r");
result.add("sup-\tpers", "s V\tp @r z");
result.add("sup-\tple", "s V\tp V l");
result.add("sup-\tple-\tmen-\tta-\try", "s V p\tl V\tm e n\tt @r\ti:");
result.add("sup-\tple-\tmen-\ttal", "s V p\tl V\tm e n\tt V l");
result.add("sup-\tple-\tment", "s V p\tl V\tm V n t");
result.add("sup-\tpo-\tsed-\tly", "s V\tp @U\tz V d\tl i:");
result.add("sup-\tpo-\tses", "s V\tp @U\tz V z");
result.add("sup-\tpo-\tsi-\ttion", "s V\tp V\tz I\tS V n");
result.add("sup-\tpo-\tsi-\ttions", "s V\tp V\tz I\tS V n z");
result.add("sup-\tpo-\tsing", "s V\tp @U\tz I N");
result.add("sup-\tpor-\tta-\tble", "s V\tp O@\tt V\tb V l");
result.add("sup-\tpor-\tted", "s V\tp O@\tt V d");
result.add("sup-\tpor-\tter", "s V\tp O@\tt @r");
result.add("sup-\tpor-\tters", "s V\tp O@\tt @r z");
result.add("sup-\tpor-\tting", "s V\tp O@\tt I N");
result.add("sup-\tpor-\ttive", "s V\tp O@\tt I v");
result.add("sup-\tport", "s V\tp O@ t");
result.add("sup-\tports", "s V\tp O@ t s");
result.add("sup-\tpose", "s V\tp @U z");
result.add("sup-\tposed", "s V\tp @U z d");
result.add("sup-\tpres-\tsant", "s V p\tr e\ts V n t");
result.add("sup-\tpres-\tses", "s V p\tr e\ts V z");
result.add("sup-\tpres-\tsing", "s V p\tr e\ts I N");
result.add("sup-\tpres-\tsion", "s V p\tr e\tS V n");
result.add("sup-\tpres-\tsor", "s V p\tr e\ts @r");
result.add("sup-\tpress", "s V p\tr e s");
result.add("sup-\tpressed", "s V p\tr e s t");
result.add("sup-\tra", "s u: p\tr V");
result.add("sup-\tra-\tna-\ttio-\tnal", "s u: p\tr V\tn {\tS V\tn V l");
result.add("sup-\tre-\tma-\tcist", "s u: p\tr e\tm V\ts V s t");
result.add("sup-\tre-\tma-\tcists", "s u: p\tr e\tm V\ts V s t s");
result.add("sup-\tre-\tma-\tcy", "s V p\tr e\tm V\ts i:");
result.add("sup-\tre-\tme-\tly", "s u: p\tr i:\tm V\tl i:");
result.add("sup-\treme", "s V p\tr i: m");
result.add("sup-\tremes", "s u: p\tr i: m z");
result.add("supp-\tlan-\tted", "s V p\tl { n\tt V d");
result.add("supp-\tlan-\tting", "s V p\tl { n\tt I N");
result.add("supp-\tlant", "s V p\tl { n t");
result.add("supp-\tle-\tmen-\tted", "s V p\tl V\tm e n\tt V d");
result.add("supp-\tle-\tmen-\tting", "s V p\tl V\tm V n\tt I N");
result.add("supp-\tle-\tments", "s V p\tl V\tm V n t s");
result.add("supp-\tli-\tcant", "s V p\tl I\tk V n t");
result.add("supp-\tli-\ter", "s V p\tl aI\t@r");
result.add("supp-\tli-\ters", "s V p\tl aI\t@r z");
result.add("supp-\tli-\ter's", "s V p\tl aI\t@r z");
result.add("supp-\tlied", "s V p\tl aI d");
result.add("supp-\tlies", "s V p\tl aI z");
result.add("supp-\tly", "s V p\tl aI");
result.add("supp-\tly-\ting", "s V p\tl aI\tI N");
result.add("supp-\tly's", "s V p\tl aI z");
result.add("sur", "s @r");
result.add("sur-\tchar-\tges", "s @r\ttS Q@\tdZ V z");
result.add("sur-\tcharge", "s @r\ttS Q@ dZ");
result.add("sur-\tfa-\tces", "s @r\tf V\ts V z");
result.add("sur-\tfa-\tcing", "s @r\tf V\ts I N");
result.add("sur-\tfac-\ttant", "s @r\tf { k\tt V n t");
result.add("sur-\tface", "s @r\tf V s");
result.add("sur-\tface-\tness", "s @r\tf V s\tn V s");
result.add("sur-\tfaced", "s @r\tf V s t");
result.add("sur-\tfeit", "s @r\tf V t");
result.add("sur-\tfer", "s @r\tf @r");
result.add("sur-\tfers", "s @r\tf @r z");
result.add("sur-\tfing", "s @r\tf I N");
result.add("sur-\tge-\tries", "s @r\tdZ @r\ti: z");
result.add("sur-\tge-\try", "s @r\tdZ @r\ti:");
result.add("sur-\tgeon", "s @r\tdZ V n");
result.add("sur-\tgeons", "s @r\tdZ V n z");
result.add("sur-\tgeon's", "s @r\tdZ V n z");
result.add("sur-\tges", "s @r\tdZ V z");
result.add("sur-\tgi-\tcal", "s @r\tdZ I\tk V l");
result.add("sur-\tgi-\tcal-\tly", "s @r\tdZ I\tk V\tl i:");
result.add("sur-\tging", "s @r\tdZ I N");
result.add("sur-\tly", "s @r\tl i:");
result.add("sur-\tma", "s @r\tm V");
result.add("sur-\tmi-\tses", "s @r\tm aI\tz V z");
result.add("sur-\tmise", "s @r\tm aI z");
result.add("sur-\tmised", "s @r\tm aI z d");
result.add("sur-\tmoun-\tted", "s @r\tm aU n\tt V d");
result.add("sur-\tmoun-\tting", "s @r\tm aU n\tt I N");
result.add("sur-\tmount", "s @r\tm aU n t");
result.add("sur-\tname", "s @r\tn eI m");
result.add("sur-\tnames", "s @r\tn eI m z");
result.add("sur-\tpas-\tses", "s @r\tp {\ts V z");
result.add("sur-\tpas-\tsing", "s @r\tp {\ts I N");
result.add("sur-\tpass", "s @r\tp { s");
result.add("sur-\tpassed", "s @r\tp { s t");
result.add("sur-\tre-\tbut-\ttal", "s @r\tV\tb V\tt V l");
result.add("sur-\trea-\tli-\tsm", "s @r\ti:\tl I\tz V m");
result.add("sur-\trea-\tli-\tsms", "s @r\ti:\tl I\tz V m z");
result.add("sur-\trea-\tli-\tsm's", "s @r\ti:\tl I\tz V m z");
result.add("sur-\trea-\tlis-\ttic", "s @r\ti:\tl I s\tt I k");
result.add("sur-\treal", "s @r\ti: l");
result.add("sur-\tren-\tcy", "s O@\tV n\ts i:");
result.add("sur-\tren-\tde-\tring", "s @r\te n\td @r\tI N");
result.add("sur-\tren-\tder", "s @r\te n\td @r");
result.add("sur-\tren-\tdered", "s @r\te n\td @r d");
result.add("sur-\tren-\tders", "s @r\te n\td @r z");
result.add("sur-\trep-\tti-\ttious", "s @r\tV p\tt I\tS V s");
result.add("sur-\trep-\tti-\ttious-\tly", "s @r\tV p\tt I\tS V s\tl i:");
result.add("sur-\trey", "s @r\ti:");
result.add("sur-\tro-\tga-\tcy", "s @r\tV\tg V\ts i:");
result.add("sur-\tro-\tgate", "s @r\tV\tg V t");
result.add("sur-\tro-\tgates", "s @r\tV\tg V t s");
result.add("sur-\troun-\tded", "s @r\taU n\td V d");
result.add("sur-\troun-\tding", "s @r\taU n\td I N");
result.add("sur-\troun-\tdings", "s @r\taU n\td I N z");
result.add("sur-\tround", "s @r\taU n d");
result.add("sur-\trounds", "s @r\taU n d z");
result.add("sur-\try", "s @r\ti:");
result.add("sur-\tta-\txes", "s @r\tt { k\ts V z");
result.add("sur-\ttax", "s @r\tt { k s");
result.add("sur-\tve-\tyor", "s @r\tv eI\t@r");
result.add("sur-\tve-\tyors", "s @r\tv eI\t@r z");
result.add("sur-\tveil", "s @r\tv eI l");
result.add("sur-\tveil-\tlance", "s @r\tv eI\tl V n s");
result.add("sur-\tveil-\tling", "s @r\tv eI\tl I N");
result.add("sur-\tvey", "s @r\tv eI");
result.add("sur-\tvey-\ting", "s @r\tv eI\tI N");
result.add("sur-\tveyed", "s @r\tv eI d");
result.add("sur-\tveys", "s @r\tv eI z");
result.add("sur-\tvey's", "s @r\tv eI z");
result.add("sur-\tvi-\tva-\tbi-\tli-\tty", "s @r\tv aI\tv V\tb I\tl V\tt i:");
result.add("sur-\tvi-\tva-\tble", "s @r\tv aI\tv V\tb V l");
result.add("sur-\tvi-\tva-\tlist", "s @r\tv aI\tv V\tl V s t");
result.add("sur-\tvi-\tva-\tlists", "s @r\tv aI\tv V\tl V s t s");
result.add("sur-\tvi-\tval", "s @r\tv aI\tv V l");
result.add("sur-\tvi-\tving", "s @r\tv aI\tv I N");
result.add("sur-\tvi-\tvor", "s @r\tv aI\tv @r");
result.add("sur-\tvi-\tvors", "s @r\tv aI\tv @r z");
result.add("sur-\tvi-\tvor's", "s @r\tv aI\tv @r z");
result.add("sur-\tvive", "s @r\tv aI v");
result.add("sur-\tvived", "s @r\tv aI v d");
result.add("sur-\tvives", "s @r\tv aI v z");
result.add("sure", "S U@");
result.add("sure-\tly", "S U@\tl i:");
result.add("sures", "S U@ z");
result.add("surf", "s @r f");
result.add("surf-\tboard", "s @r f\tb O@ d");
result.add("surf-\tboards", "s @r f\tb O@ d z");
result.add("surfed", "s @r f t");
result.add("surf's", "s @r f s");
result.add("surge", "s @r dZ");
result.add("surged", "s @r dZ d");
result.add("surp-\tlu-\tses", "s @r p\tl V\ts V z");
result.add("surp-\tlus", "s @r p\tl V s");
result.add("surp-\tri-\tses", "s @r p\tr aI\tz V z");
result.add("surp-\tri-\tsing", "s @r p\tr aI\tz I N");
result.add("surp-\tri-\tsing-\tly", "s @r p\tr aI\tz I N\tl i:");
result.add("surp-\trise", "s @r p\tr aI z");
result.add("surp-\trised", "s @r p\tr aI z d");
result.add("sus", "s V s");
result.add("sus-\tcep-\tti-\tbi-\tli-\tty", "s V\ts e p\tt V\tb I\tl V\tt i:");
result.add("sus-\tcep-\tti-\tble", "s V\ts e p\tt V\tb V l");
result.add("sus-\tpec-\tted", "s V s\tp e k\tt V d");
result.add("sus-\tpec-\tting", "s V s\tp e k\tt I N");
result.add("sus-\tpect", "s V s\tp e k t");
result.add("sus-\tpects", "s V s\tp e k t s");
result.add("sus-\tpen-\tded", "s V s\tp e n\td V d");
result.add("sus-\tpen-\tder", "s V s\tp e n\td @r");
result.add("sus-\tpen-\tders", "s V s\tp e n\td @r z");
result.add("sus-\tpen-\tding", "s V s\tp e n\td I N");
result.add("sus-\tpen-\tsion", "s V s\tp e n\tS V n");
result.add("sus-\tpen-\tsions", "s V s\tp e n\tS V n z");
result.add("sus-\tpend", "s V s\tp e n d");
result.add("sus-\tpends", "s V s\tp e n d z");
result.add("sus-\tpense", "s V s\tp e n s");
result.add("sus-\tpense-\tful", "s V s\tp e n\ts f V l");
result.add("sus-\tpi-\tcion", "s V s\tp I\tS V n");
result.add("sus-\tpi-\tcions", "s V s\tp I\tS V n z");
result.add("sus-\tpi-\tcious", "s V s\tp I\tS V s");
result.add("sus-\tpi-\tcious-\tly", "s V s\tp I\tS V s\tl i:");
result.add("sus-\tque-\than-\tna", "s u: s\tk w e\th {\tn V");
result.add("sus-\tque-\than-\tna's", "s u: s\tk w e\th {\tn V z");
result.add("sus-\tsex", "s V\ts I k s");
result.add("sus-\ttai-\tna-\tbi-\tli-\tty", "s V s\tt eI\tn V\tb I\tl V\tt i:");
result.add("sus-\ttai-\tna-\tble", "s V s\tt eI\tn V\tb V l");
result.add("sus-\ttai-\tning", "s V s\tt eI\tn I N");
result.add("sus-\ttain", "s V s\tt eI n");
result.add("sus-\ttained", "s V s\tt eI n d");
result.add("sus-\ttains", "s V s\tt eI n z");
result.add("sus-\tte-\tnance", "s V s\tt V\tn V n s");
result.add("suss", "s V s");
result.add("suss-\tman", "s V s\tm V n");
result.add("sut-\tcliffe", "s V t\tk l I f");
result.add("sut-\tphin", "s V t\tf I n");
result.add("sut-\tter", "s V\tt @r");
result.add("sut-\ttle", "s V\tt V l");
result.add("sut-\ttles", "s V\tt V l z");
result.add("sut-\tton", "s V\tt V n");
result.add("sut-\tton's", "s V\tt V n z");
result.add("suz-\thou", "s u: z\th @U");
result.add("sve-\trige", "s v e@\tI dZ");
result.add("svelte", "s v e l t");
result.add("sven", "s v e n");
result.add("sverd-\tlovsk", "s v @r d\tl Q v s k");
result.add("svet-\tla-\tna", "s v e t\tl Q\tn V");
result.add("sviz-\tze-\tra", "s v I\tz e@\tV");
result.add("svo-\tbo-\tda", "s v @U\tb @U\td V");
result.add("swa-\tger", "s w eI\tg @r");
result.add("swa-\tger-\tty", "s w {\tdZ @r\tt i:");
result.add("swa-\thi-\tli", "s w Q\th i:\tl i:");
result.add("swa-\tmi", "s w Q\tm i:");
result.add("swa-\tnee", "s w Q\tn i:");
result.add("swa-\ttow", "s w Q\tt @U");
result.add("swa-\tzi", "s w Q\tz i:");
result.add("swa-\tzi-\tland", "s w Q\tz I\tl V n d");
result.add("swab", "s w Q b");
result.add("swabs", "s w Q b z");
result.add("swag-\tge-\tring", "s w {\tg @r\tI N");
result.add("swag-\tger", "s w {\tg @r");
result.add("swails", "s w eI l z");
result.add("swain", "s w eI n");
result.add("swaine", "s w eI n");
result.add("swal-\tlow", "s w Q\tl @U");
result.add("swal-\tlow-\ting", "s w Q\tl @U\tI N");
result.add("swal-\tlowed", "s w Q\tl @U d");
result.add("swal-\tlows", "s w Q\tl @U z");
result.add("swales", "s w eI l z");
result.add("swam", "s w { m");
result.add("swam-\tper", "s w Q m\tp @r");
result.add("swam-\tpers", "s w Q m\tp @r z");
result.add("swam-\tping", "s w Q m\tp I N");
result.add("swam-\tpy", "s w Q m\tp i:");
result.add("swamp", "s w Q m p");
result.add("swamped", "s w Q m p t");
result.add("swamps", "s w Q m p s");
result.add("swan", "s w Q n");
result.add("swan-\tky", "s w Q N\tk i:");
result.add("swan-\tner", "s w Q\tn @r");
result.add("swan-\tson", "s w Q n\ts V n");
result.add("swan-\tton", "s w Q n\tt V n");
result.add("swank", "s w { N k");
result.add("swann", "s w Q n");
result.add("swann's", "s w Q n z");
result.add("swans", "s w Q n z");
result.add("swap", "s w Q p");
result.add("swap-\tping", "s w Q\tp I N");
result.add("swape", "s w eI p");
result.add("swapped", "s w Q p t");
result.add("swaps", "s w Q p s");
result.add("swar-\tming", "s w O@\tm I N");
result.add("swar-\tthout", "s w O@\tT aU t");
result.add("swar-\tthy", "s w O@\tD i:");
result.add("sward", "s w Q@ d");
result.add("swarm", "s w O@ m");
result.add("swarmed", "s w O@ m d");
result.add("swarms", "s w O@ m z");
result.add("swart", "s w O@ t");
result.add("swarth-\tmore", "s w O@ T\tm O@");
result.add("swarts", "s w O@ t s");
result.add("swartz", "s w O@ t s");
result.add("swas-\tti-\tka", "s w Q s\tt I\tk V");
result.add("swas-\tti-\tkas", "s w Q s\tt I\tk V z");
result.add("swash-\tbuck-\tling", "s w Q S\tb V k\tl I N");
result.add("swat", "s w Q t");
result.add("swat-\tches", "s w Q\ttS V z");
result.add("swat-\tted", "s w Q\tt V d");
result.add("swatch", "s w Q tS");
result.add("swath", "s w Q T");
result.add("swathe", "s w Q D");
result.add("swathed", "s w Q D d");
result.add("sway", "s w eI");
result.add("sway-\ting", "s w eI\tI N");
result.add("swayed", "s w eI d");
result.add("swayne", "s w eI n");
result.add("sways", "s w eI z");
result.add("swe-\tden", "s w i:\td V n");
result.add("swe-\tden's", "s w i:\td V n z");
result.add("swe-\tdish", "s w i:\td I S");
result.add("swea-\tring", "s w e@\tI N");
result.add("swea-\tted", "s w e\tt V d");
result.add("swea-\tter", "s w e\tt @r");
result.add("swea-\tters", "s w e\tt @r z");
result.add("swea-\tting", "s w e\tt I N");
result.add("swea-\tty", "s w e\tt i:");
result.add("swear", "s w e@");
result.add("swears", "s w e@ z");
result.add("sweat", "s w e t");
result.add("sweat-\tpants", "s w e t\tp { n t s");
result.add("sweat-\tshirt", "s w e t\tS @r t");
result.add("sweat-\tshirts", "s w e t\tS @r t s");
result.add("sweat-\tshop", "s w e t\tS Q p");
result.add("sweat-\tshops", "s w e t\tS Q p s");
result.add("sweat-\tsuit", "s w e t\ts u: t");
result.add("sweats", "s w e t s");
result.add("sweatt", "s w i: t");
result.add("swed", "s w e d");
result.add("swede", "s w i: d");
result.add("swedes", "s w i: d z");
result.add("swee-\tden", "s w i:\td V n");
result.add("swee-\tney", "s w i:\tn i:");
result.add("swee-\tny", "s w i:\tn i:");
result.add("swee-\tper", "s w i:\tp @r");
result.add("swee-\tpers", "s w i:\tp @r z");
result.add("swee-\tping", "s w i:\tp I N");
result.add("swee-\tte-\tner", "s w i:\tt V\tn @r");
result.add("swee-\tte-\tners", "s w i:\tt V\tn @r z");
result.add("swee-\tte-\tning", "s w i:\tt V\tn I N");
result.add("swee-\tten", "s w i:\tt V n");
result.add("swee-\ttened", "s w i:\tt V n d");
result.add("swee-\ttens", "s w i:\tt V n z");
result.add("swee-\tter", "s w i:\tt @r");
result.add("swee-\ttest", "s w i:\tt V s t");
result.add("swee-\ttie", "s w i:\tt i:");
result.add("swee-\tting", "s w i:\tt I N");
result.add("sweep", "s w i: p");
result.add("sweep-\tstake", "s w i: p\ts t eI k");
result.add("sweep-\tstakes", "s w i: p\ts t eI k s");
result.add("sweeps", "s w i: p s");
result.add("sweet", "s w i: t");
result.add("sweet-\theart", "s w i: t\th Q@ t");
result.add("sweet-\thearts", "s w i: t\th Q@ t s");
result.add("sweet-\tland", "s w i: t\tl V n d");
result.add("sweet-\tly", "s w i: t\tl i:");
result.add("sweet-\tman", "s w i: t\tm V n");
result.add("sweet-\tness", "s w i: t\tn V s");
result.add("sweet-\tser", "s w i: t\ts @r");
result.add("sweet-\twa-\tter", "s w i: t\tw Q\tt @r");
result.add("sweets", "s w i: t s");
result.add("swel-\tling", "s w e\tl I N");
result.add("swel-\tte-\tring", "s w e l\tt @r\tI N");
result.add("swel-\tter", "s w e l\tt @r");
result.add("swell", "s w e l");
result.add("swelled", "s w e l d");
result.add("swells", "s w e l z");
result.add("swen-\tson", "s w e n\ts V n");
result.add("swept", "s w e p t");
result.add("swerve", "s w @r v");
result.add("swerved", "s w @r v d");
result.add("swi-\tgart", "s w I\tg Q@ t");
result.add("swi-\thart", "s w I\th Q@ t");
result.add("swi-\tney", "s w aI\tn i:");
result.add("swi-\tping", "s w aI\tp I N");
result.add("swi-\tsher", "s w I\tS @r");
result.add("swi-\tshes", "s w I\tS V z");
result.add("swi-\tve-\tling", "s w I\tv V\tl I N");
result.add("swi-\tvel", "s w I\tv V l");
result.add("swi-\tvels", "s w I\tv V l z");
result.add("swick", "s w I k");
result.add("swif-\tter", "s w I f\tt @r");
result.add("swif-\ttest", "s w I f\tt V s t");
result.add("swift", "s w I f t");
result.add("swift-\tly", "s w I f\tt l i:");
result.add("swift-\tness", "s w I f\tt n V s");
result.add("swifts", "s w I f t s");
result.add("swift's", "s w I f t s");
result.add("swig", "s w I g");
result.add("swil-\tling", "s w I\tl I N");
result.add("swill", "s w I l");
result.add("swim", "s w I m");
result.add("swim-\tmer", "s w I\tm @r");
result.add("swim-\tmers", "s w I\tm @r z");
result.add("swim-\tming", "s w I\tm I N");
result.add("swim-\tsuit", "s w I m\ts u: t");
result.add("swim-\tsuits", "s w I m\ts u: t s");
result.add("swim-\twear", "s w I m\tw e@");
result.add("swims", "s w I m z");
result.add("swin-\tburne's", "s w I n\tb @r n z");
result.add("swin-\td-\tler", "s w I n\td V\tl @r");
result.add("swin-\tdle", "s w I n\td V l");
result.add("swin-\tdled", "s w I n\td V l d");
result.add("swin-\tdles", "s w I n\td V l z");
result.add("swin-\tger", "s w I\tN @r");
result.add("swin-\tgers", "s w I\tN @r z");
result.add("swin-\tging", "s w I\tN I N");
result.add("swin-\tgle", "s w I N\tg V l");
result.add("swin-\tney", "s w I\tn i:");
result.add("swin-\tton", "s w I n\tt V n");
result.add("swind-\tlers", "s w I n\td l @r z");
result.add("swind-\tling", "s w I n\td l I N");
result.add("swine", "s w aI n");
result.add("swing", "s w I N");
result.add("swings", "s w I N z");
result.add("swink", "s w I N k");
result.add("swipe", "s w aI p");
result.add("swiped", "s w aI p t");
result.add("swipes", "s w aI p s");
result.add("swir-\tling", "s w @r\tl I N");
result.add("swir-\tsky", "s w @r s\tk i:");
result.add("swire", "s w aI r");
result.add("swirl", "s w @r l");
result.add("swirled", "s w @r l d");
result.add("swirls", "s w @r l z");
result.add("swis-\tsair", "s w I\ts e@");
result.add("swish", "s w I S");
result.add("swished", "s w I S t");
result.add("swiss", "s w I s");
result.add("swit-\tcher", "s w I\ttS @r");
result.add("swit-\tchers", "s w I\ttS @r z");
result.add("swit-\tches", "s w I\ttS V z");
result.add("swit-\tching", "s w I\ttS I N");
result.add("swit-\tzer", "s w I t\ts @r");
result.add("swit-\tzer-\tland", "s w I t\ts @r\tl V n d");
result.add("swit-\tzer-\tland's", "s w I t\ts @r\tl V n d z");
result.add("switch", "s w I tS");
result.add("switch-\tblade", "s w I tS\tb l eI d");
result.add("switch-\tblades", "s w I tS\tb l eI d z");
result.add("switch-\tboard", "s w I tS\tb O@ d");
result.add("switch-\tboards", "s w I tS\tb O@ d z");
result.add("switched", "s w I tS t");
result.add("swol-\tlen", "s w @U\tl V n");
result.add("swoo-\tning", "s w u:\tn I N");
result.add("swoo-\tping", "s w u:\tp I N");
result.add("swoon", "s w u: n");
result.add("swooned", "s w u: n d");
result.add("swoop", "s w u: p");
result.add("swoope", "s w u: p");
result.add("swooped", "s w u: p t");
result.add("swoops", "s w u: p s");
result.add("swoosh", "s w u: S");
result.add("swooshed", "s w u: S t");
result.add("swope", "s w @U p");
result.add("swor", "s w @r");
result.add("sword", "s O@ d");
result.add("sword-\tfi-\tsh's", "s O@ d\tf I\tS V z");
result.add("sword-\tfish", "s O@ d\tf I S");
result.add("sword-\tlike", "s O@ d\tl aI k");
result.add("sword-\tplay", "s O@ d\tp l eI");
result.add("sword-\tplays", "s O@ d\tp l eI z");
result.add("swords", "s O@ d z");
result.add("swore", "s w O@");
result.add("sworn", "s w O@ n");
result.add("swum", "s w V m");
result.add("swung", "s w V N");
result.add("sy", "s aI");
result.add("sy-\tbert", "s I\tb @r t");
result.add("sy-\tbil", "s I\tb I l");
result.add("sy-\tbil-\tla", "s I\tb I\tl V");
result.add("sy-\tbille", "s I\tb I l");
result.add("sy-\tca-\tmore", "s I\tk V\tm O@");
result.add("sy-\tco-\tphan-\ttic", "s I\tk V\tf { n\tt I k");
result.add("sy-\tming-\tton", "s I\tm I N\tt V n");
result.add("sy-\tmon", "s I\tm V n");
result.add("sy-\tmonds", "s I\tm V n d z");
result.add("sy-\tmons", "s I\tm V n z");
result.add("sy-\tna-\tgogue", "s I\tn V\tg O: g");
result.add("sy-\tna-\tgogues", "s I\tn V\tg O: g z");
result.add("sy-\tner-\tgi-\tsm", "s I\tn @r\tdZ I\tz V m");
result.add("sy-\tner-\tgies", "s I\tn @r\tdZ i: z");
result.add("sy-\tner-\tgis-\ttic", "s I\tn @r\tdZ I s\tt I k");
result.add("sy-\tner-\tgy", "s I\tn @r\tdZ i:");
result.add("sy-\tner-\tgy's", "s I\tn @r\tdZ i: z");
result.add("sy-\tno-\tny-\tmous", "s V\tn Q\tn V\tm V s");
result.add("sy-\tno-\tny-\tmous-\tly", "s V\tn Q\tn V\tm V s\tl i:");
result.add("sy-\tno-\tnym", "s I\tn V\tn I m");
result.add("sy-\tnod", "s I\tn V d");
result.add("sy-\tnod's", "s I\tn V d z");
result.add("sy-\tnop-\tsis", "s V\tn Q p\ts V s");
result.add("sy-\tnop-\ttics", "s V\tn Q p\tt I k s");
result.add("sy-\tpher", "s I\tf @r");
result.add("sy-\tphers", "s I\tf @r z");
result.add("sy-\tphi-\tlis", "s I\tf I\tl I s");
result.add("sy-\tphon", "s aI\tf V n");
result.add("sy-\tra-\tcuse", "s I@\tV k\tj u: z");
result.add("sy-\tri-\ta", "s I@\ti:\tV");
result.add("sy-\tri-\tan", "s I@\ti:\tV n");
result.add("sy-\tri-\tans", "s I@\ti:\tV n z");
result.add("sy-\tri-\ta's", "s I@\ti:\tV z");
result.add("sy-\trin-\tges", "s @r\tI n\tdZ V z");
result.add("sy-\tringe", "s @r\tI n dZ");
result.add("sy-\trup", "s @r\tV p");
result.add("sy-\trups", "s @r\tV p s");
result.add("sy-\tver-\tson", "s I\tv @r\ts V n");
result.add("syd", "s I d");
result.add("syd-\tney", "s I d\tn i:");
result.add("syd-\tney's", "s I d\tn i: z");
result.add("syed", "s aI d");
result.add("sykes", "s aI k s");
result.add("syl-\tla-\tbic", "s V\tl {\tb I k");
result.add("syl-\tla-\tble", "s I\tl V\tb V l");
result.add("syl-\tla-\tbles", "s I\tl V\tb V l z");
result.add("syl-\tla-\tbus", "s I\tl V\tb V s");
result.add("syl-\tmar", "s I l\tm Q@");
result.add("syl-\tva", "s I l\tv V");
result.add("syl-\tva-\tna", "s I l\tv {\tn V");
result.add("syl-\tva-\tni-\ta", "s I l\tv eI\tn i:\tV");
result.add("syl-\tva-\tnus", "s I l\tv V\tn V s");
result.add("syl-\tvan", "s I l\tv V n");
result.add("syl-\tves-\tter", "s I l\tv e s\tt @r");
result.add("syl-\tvi-\ta", "s I l\tv i:\tV");
result.add("syl-\tvi-\ta's", "s I l\tv i:\tV z");
result.add("syl-\tvie", "s I l\tv i:");
result.add("syl-\tvite", "s I l\tv aI t");
result.add("sym", "s I m");
result.add("sym-\tbi-\to-\tsis", "s I m\tb aI\t@U\ts I s");
result.add("sym-\tbi-\to-\ttic", "s I m\tb i:\tQ\tt I k");
result.add("sym-\tbi-\ton", "s I m\tb i:\tV n");
result.add("sym-\tbo-\tli-\tcal-\tly", "s I m\tb Q\tl I\tk V\tl i:");
result.add("sym-\tbo-\tli-\tsm", "s I m\tb V\tl I\tz V m");
result.add("sym-\tbo-\tli-\tzes", "s I m\tb V\tl aI\tz V z");
result.add("sym-\tbo-\tli-\tzing", "s I m\tb V\tl aI\tz I N");
result.add("sym-\tbo-\tlic", "s I m\tb Q\tl I k");
result.add("sym-\tbo-\tlics", "s I m\tb Q\tl I k s");
result.add("sym-\tbo-\tlists", "s I m\tb V\tl V s t s");
result.add("sym-\tbo-\tlize", "s I m\tb V\tl aI z");
result.add("sym-\tbo-\tlized", "s I m\tb V\tl aI z d");
result.add("sym-\tbol", "s I m\tb V l");
result.add("sym-\tbols", "s I m\tb V l z");
result.add("sym-\tbol's", "s I m\tb V l z");
result.add("sym-\tme-\ttri-\tcal", "s V\tm e t\tr I\tk V l");
result.add("sym-\tme-\ttrical-\tly", "s V\tm e t\tr I k\tl i:");
result.add("sym-\tmet-\try", "s I\tm V t\tr i:");
result.add("sym-\tpa-\tthe-\tti-\tcal-\tly", "s I m\tp V\tT e\tt I\tk V\tl i:");
result.add("sym-\tpa-\tthe-\ttic", "s I m\tp V\tT e\tt I k");
result.add("sym-\tpa-\tthi-\tzer", "s I m\tp V\tT aI\tz @r");
result.add("sym-\tpa-\tthi-\tzers", "s I m\tp V\tT aI\tz @r z");
result.add("sym-\tpa-\tthi-\tzes", "s I m\tp V\tT aI\tz V z");
result.add("sym-\tpa-\tthi-\tzing", "s I m\tp V\tT aI\tz I N");
result.add("sym-\tpa-\tthies", "s I m\tp V\tT i: z");
result.add("sym-\tpa-\tthize", "s I m\tp V\tT aI z");
result.add("sym-\tpa-\tthized", "s I m\tp V\tT aI z d");
result.add("sym-\tpa-\tthy", "s I m\tp V\tT i:");
result.add("sym-\tpho-\tnic", "s I m\tf Q\tn I k");
result.add("sym-\tpho-\tnies", "s I m\tf V\tn i: z");
result.add("sym-\tpho-\tny", "s I m\tf V\tn i:");
result.add("sym-\tpho-\tny's", "s I m\tf V\tn i: z");
result.add("sym-\tpo-\tsi-\tum", "s I m\tp @U\tz i:\tV m");
result.add("sym-\tpo-\tsi-\tums", "s I m\tp @U\tz i:\tV m z");
result.add("symp-\tto-\tma-\ttic", "s I m\tp t V\tm {\tt I k");
result.add("symp-\ttom", "s I m\tp t V m");
result.add("symp-\ttoms", "s I m\tp t V m z");
result.add("syn", "s I n");
result.add("syn-\tco-\tpa-\tted", "s I N\tk V\tp eI\tt V d");
result.add("syn-\tco-\tpa-\ttion", "s I N\tk V\tp eI\tS V n");
result.add("syn-\tco-\tpate", "s I N\tk V\tp eI t");
result.add("syn-\tcom", "s I N\tk Q m");
result.add("syn-\tdi-\tca-\tted", "s I n\td I\tk eI\tt I d");
result.add("syn-\tdi-\tca-\tting", "s I n\td I\tk eI\tt I N");
result.add("syn-\tdi-\tca-\ttion", "s I n\td I\tk eI\tS V n");
result.add("syn-\tdi-\tca-\ttions", "s I n\td I\tk eI\tS V n z");
result.add("syn-\tdi-\tca-\ttor", "s I n\td I\tk eI\tt @r");
result.add("syn-\tdi-\tca-\ttors", "s I n\td I\tk eI\tt @r z");
result.add("syn-\tdi-\tcate", "s I n\td I\tk eI t");
result.add("syn-\tdi-\tcates", "s I n\td I\tk eI t s");
result.add("syn-\tdi-\tcate's", "s I n\td I\tk eI t s");
result.add("syn-\ttax", "s I n\tt { k s");
result.add("syn-\tthe-\tsi-\tzer", "s I n\tT V\ts aI\tz @r");
result.add("syn-\tthe-\tsi-\tzers", "s I n\tT V\ts aI\tz @r z");
result.add("syn-\tthe-\tsi-\tzing", "s I n\tT V\ts aI\tz I N");
result.add("syn-\tthe-\tsis", "s I n\tT V\ts V s");
result.add("syn-\tthe-\tsize", "s I n\tT V\ts aI z");
result.add("syn-\tthe-\tsized", "s I n\tT V\ts aI z d");
result.add("syn-\tthe-\ttic", "s I n\tT e\tt I k");
result.add("syn-\tthe-\ttical-\tly", "s I n\tT e\tt I k\tl i:");
result.add("syn-\tthe-\ttics", "s I n\tT e\tt I k s");
result.add("sync", "s I N k");
result.add("synch", "s I n tS");
result.add("synch-\tro", "s I N\tk r @U");
result.add("synch-\tro-\tnic", "s I N\tk r Q\tn I k");
result.add("synch-\tro-\tnize", "s I N\tk r V\tn aI z");
result.add("synch-\tro-\tnized", "s I N\tk r V\tn aI z d");
result.add("synd-\trome", "s I n\td r @U m");
result.add("synd-\tromes", "s I n\td r @U m z");
result.add("syng-\tman", "s I N\tm V n");
result.add("sys-\tte-\tma-\ttic", "s I s\tt V\tm {\tt I k");
result.add("sys-\tte-\tma-\ttical-\tly", "s I s\tt V\tm {\tt I k\tl i:");
result.add("sys-\tte-\tma-\ttics", "s I s\tt V\tm {\tt I k s");
result.add("sys-\tte-\tmic", "s I s\tt e\tm I k");
result.add("sys-\tte-\tmical-\tly", "s V s\tt e\tm I k\tl i:");
result.add("sys-\ttem", "s I s\tt V m");
result.add("sys-\ttem-\twide", "s I s\tt V m\tw aI d");
result.add("sys-\ttems", "s I s\tt V m z");
result.add("sys-\ttem's", "s I s\tt V m z");
result.add("szeke-\tly", "S i: k\tl i:");
result.add("szi-\tlard", "s I\tl @r d");
result.add("szy-\tma-\tnow-\tski", "S I\tm V\tn O: f\ts k i:");
result.add("t", "th i:");
result.add("t-\tb", "th i:\tb i:");
result.add("t-\tbi-\tli-\tsi", "th V\tb I\tl i:\ts i:");
result.add("t-\tc-\ta-\ts", "th i:\ts i:\teI\te s");
result.add("t-\th", "th i:\teI tS");
result.add("t-\ts", "th i:\te s");
result.add("t-\tv", "th i:\tv i:");
result.add("t.", "th i:");
result.add("ta", "th Q");
result.add("ta-\tb-\tler", "th eI\tb V\tl @r");
result.add("ta-\tb-\tling", "th eI\tb V\tl I N");
result.add("ta-\tbas-\tco", "th V\tb { s\tk @U");
result.add("ta-\tber", "th eI\tb @r");
result.add("ta-\tber-\tna-\tcle", "th {\tb @r\tn {\tk V l");
result.add("ta-\tbi-\ttha", "th {\tb I\tT V");
result.add("ta-\tble", "th eI\tb V l");
result.add("ta-\tble-\tcloth", "th eI\tb V l\tk l O: T");
result.add("ta-\tble-\tcloths", "th eI\tb V l\tk l O: T s");
result.add("ta-\tble-\tspoon", "th eI\tb V l\ts p u: n");
result.add("ta-\tble-\tspoons", "th eI\tb V l\ts p u: n z");
result.add("ta-\tble-\ttop", "th eI\tb V l\tt Q p");
result.add("ta-\tble-\tware", "th eI\tb V l\tw e@");
result.add("ta-\tbled", "th eI\tb V l d");
result.add("ta-\tbles", "th eI\tb V l z");
result.add("ta-\tble's", "th eI\tb V l z");
result.add("ta-\tboo", "th {\tb u:");
result.add("ta-\tboos", "th {\tb u: z");
result.add("ta-\tbor", "th eI\tb @r");
result.add("ta-\tbor's", "th eI\tb @r z");
result.add("ta-\tbu-\tla-\tted", "th { b\tj V\tl eI\tt V d");
result.add("ta-\tbu-\tla-\tting", "th { b\tj V\tl eI\tt I N");
result.add("ta-\tbu-\tla-\ttion", "th { b\tj V\tl eI\tS V n");
result.add("ta-\tbu-\tla-\ttions", "th { b\tj V\tl eI\tS V n z");
result.add("ta-\tbu-\tlate", "th { b\tj V\tl eI t");
result.add("ta-\tci-\tta", "th Q\ttS i:\tt V");
result.add("ta-\tci-\tturn", "th {\ts I\tt @r n");
result.add("ta-\tcit", "th {\ts I t");
result.add("ta-\tcit-\tly", "th {\ts I t\tl i:");
result.add("ta-\tco", "th Q\tk @U");
result.add("ta-\tco-\tma", "th V\tk @U\tm V");
result.add("ta-\tco-\tma's", "th V\tk @U\tm V z");
result.add("ta-\tcos", "th Q\tk @U z");
result.add("ta-\tcy", "th eI\ts i:");
result.add("ta-\tda", "th Q\td V");
result.add("ta-\tda-\tshi", "th Q\td Q\tS i:");
result.add("ta-\tga-\tlog", "th {\tg V\tl Q g");
result.add("ta-\tga-\tmet", "th {\tg V\tm e t");
result.add("ta-\tger", "th eI\tg @r");
result.add("ta-\thi-\tti", "th V\th i:\tt i:");
result.add("ta-\thoe", "th {\th @U");
result.add("ta-\ti-\tra", "th Q\tI@\tV");
result.add("ta-\tji-\tkis-\ttan", "th Q\tdZ i:\tk I s\tt { n");
result.add("ta-\tjik", "th Q\tdZ I k");
result.add("ta-\tka-\to", "th Q\tk Q\t@U");
result.add("ta-\tka-\tra", "th Q\tk Q@\tV");
result.add("ta-\tka-\tshi", "th Q\tk Q\tS i:");
result.add("ta-\tke-\to", "th Q\tk eI\t@U");
result.add("ta-\tke-\tshi", "th V\tk e\tS i:");
result.add("ta-\tken", "th eI\tk V n");
result.add("ta-\tker", "th eI\tk @r");
result.add("ta-\tkers", "th eI\tk @r z");
result.add("ta-\tketh", "th eI\tk V T");
result.add("ta-\tki", "th {\tk i:");
result.add("ta-\tking", "th eI\tk I N");
result.add("ta-\tkings", "th eI\tk I N z");
result.add("ta-\tku", "th Q\tk u:");
result.add("ta-\tla-\tve-\tra", "th Q\tl Q\tv e@\tV");
result.add("ta-\tlen-\tted", "th {\tl V n\tt V d");
result.add("ta-\tlent", "th {\tl V n t");
result.add("ta-\tlents", "th {\tl V n t s");
result.add("ta-\tli-\tban", "th {\tl I\tb { n");
result.add("ta-\tli-\ttha", "th {\tl I\tD V");
result.add("ta-\tlis-\tman", "th {\tl I s\tm V n");
result.add("ta-\tlon", "th {\tl V n");
result.add("ta-\tlons", "th {\tl V n z");
result.add("ta-\tma", "th Q\tm V");
result.add("ta-\tma-\tles", "th V\tm Q\tl i: z");
result.add("ta-\tma-\tna-\tha", "th Q\tm Q\tn Q\th V");
result.add("ta-\tma-\tra", "th V\tm Q@\tV");
result.add("ta-\tma-\trin", "th {\tm @r\tI n");
result.add("ta-\tma-\trins", "th {\tm @r\tI n z");
result.add("ta-\tma-\trisk", "th {\tm @r\tI s k");
result.add("ta-\tma-\trisks", "th {\tm @r\tI s k s");
result.add("ta-\tma-\tyo", "th Q\tm Q\tj @U");
result.add("ta-\tmas", "th Q\tm V z");
result.add("ta-\tmer", "th eI\tm @r");
result.add("ta-\tmil", "th {\tm I l");
result.add("ta-\tmils", "th {\tm I l z");
result.add("ta-\tming", "th eI\tm I N");
result.add("ta-\tmo-\txi-\tfen", "th {\tm Q k\ts I\tf e n");
result.add("ta-\tna-\tka", "th Q\tn Q\tk V");
result.add("ta-\tney", "th eI\tn i:");
result.add("ta-\tni", "th Q\tn i:");
result.add("ta-\tnia", "th Q n\tj V");
result.add("ta-\tnis", "th {\tn I s");
result.add("ta-\tpas", "th V\tp V s");
result.add("ta-\tpe-\tring", "th eI\tp @r\tI N");
result.add("ta-\tper", "th eI\tp @r");
result.add("ta-\tpered", "th eI\tp @r d");
result.add("ta-\tpers", "th eI\tp @r z");
result.add("ta-\tpest-\tries", "th {\tp V s\tt r i: z");
result.add("ta-\tpest-\try", "th {\tp V s\tt r i:");
result.add("ta-\tpi-\ta", "th Q\tp i:\tV");
result.add("ta-\tping", "th eI\tp I N");
result.add("ta-\tpings", "th eI\tp I N z");
result.add("ta-\tra", "th e@\tV");
result.add("ta-\tra-\thu-\tma-\tra", "th Q@\tV\th u:\tm Q@\tV");
result.add("ta-\tran-\tti-\tno", "th Q@\tQ n\tt i:\tn @U");
result.add("ta-\tran-\tto", "th @r\t{ n\tt @U");
result.add("ta-\tran-\tto's", "th @r\t{ n\tt @U z");
result.add("ta-\tran-\ttu-\tla", "th V\tr { n\ttS u:\tl V");
result.add("ta-\tran-\ttu-\tlas", "th V\tr { n\ttS u:\tl V z");
result.add("ta-\tras", "th Q@\tV z");
result.add("ta-\triff", "th e@\tI f");
result.add("ta-\triffs", "th e@\tI f s");
result.add("ta-\trin", "th Q@\ti: n");
result.add("ta-\tro", "th e@\t@U");
result.add("ta-\trot", "th {\tr @U");
result.add("ta-\trots", "th {\tr @U z");
result.add("ta-\tser", "th eI\tz @r");
result.add("ta-\tsm", "th {\ts V m");
result.add("ta-\ttar", "th {\tt @r");
result.add("ta-\ttars", "th {\tt @r z");
result.add("ta-\tti-\ta-\tna", "th {\tt i:\t{\tn V");
result.add("ta-\ttu", "th Q\tt u:");
result.add("ta-\ttum", "th eI\tt V m");
result.add("ta-\tva-\tres", "th Q\tv Q@\te s");
result.add("ta-\tvel", "th Q\tv e l");
result.add("ta-\tver-\tna", "th Q\tv e@\tn V");
result.add("ta-\tver-\tni-\ter", "th {\tv @r\tn i:\t@r");
result.add("ta-\tvern", "th {\tv @r n");
result.add("ta-\tverns", "th {\tv @r n z");
result.add("ta-\tvie", "th eI\tv i:");
result.add("ta-\tvis", "th Q\tv I s");
result.add("ta-\tvish", "th eI\tv I S");
result.add("ta-\tvy", "th eI\tv i:");
result.add("ta-\txa-\tbi-\tli-\tty", "th { k\ts V\tb I\tl V\tt i:");
result.add("ta-\txa-\tble", "th { k\ts V\tb V l");
result.add("ta-\txa-\tbles", "th { k\ts V\tb V l z");
result.add("ta-\txa-\ttion", "th { k\ts eI\tS V n");
result.add("ta-\txer", "th { k\ts @r");
result.add("ta-\txers", "th { k\ts @r z");
result.add("ta-\txes", "th { k\ts V z");
result.add("ta-\txi", "th { k\ts i:");
result.add("ta-\txi-\tcab", "th { k\ts i:\tk { b");
result.add("ta-\txi-\tcabs", "th { k\ts i:\tk { b z");
result.add("ta-\txi-\ting", "th { k\ts i:\tI N");
result.add("ta-\txied", "th { k\ts i: d");
result.add("ta-\txing", "th { k\ts I N");
result.add("ta-\txis", "th { k\ts i: z");
result.add("ta-\txi's", "th { k\ts i: z");
result.add("ta-\txol", "th { k\ts Q l");
result.add("ta-\tx's", "th { k\ts V z");
result.add("tab", "th { b");
result.add("tab-\tbing", "th {\tb I N");
result.add("tab-\tby", "th {\tb i:");
result.add("tab-\tla-\tture", "th { b\tl V\ttS @r");
result.add("tab-\tleau", "th V b\tl @U");
result.add("tab-\tleaux", "th V b\tl @U");
result.add("tab-\tlet", "th { b\tl V t");
result.add("tab-\tlets", "th { b\tl V t s");
result.add("tab-\tloid", "th { b\tl OI d");
result.add("tab-\tloids", "th { b\tl OI d z");
result.add("tabb", "th { b");
result.add("tabs", "th { b z");
result.add("tac", "th { k");
result.add("tac-\tker", "th {\tk @r");
result.add("tac-\tking", "th {\tk I N");
result.add("tac-\tkle", "th {\tk V l");
result.add("tac-\tkled", "th {\tk V l d");
result.add("tac-\tkles", "th {\tk V l z");
result.add("tac-\tky", "th {\tk i:");
result.add("tac-\tti-\tcal", "th { k\tt I\tk V l");
result.add("tac-\tti-\tcal-\tly", "th { k\tt I\tk V\tl i:");
result.add("tac-\tti-\tcian", "th { k\tt I\tS V n");
result.add("tac-\tti-\tcians", "th { k\tt I\tS V n z");
result.add("tac-\ttic", "th { k\tt I k");
result.add("tac-\ttics", "th { k\tt I k s");
result.add("tac-\ttile", "th { k\tt I l");
result.add("tack", "th { k");
result.add("tack-\tling", "th { k\tl I N");
result.add("tacked", "th { k t");
result.add("tacks", "th { k s");
result.add("tact", "th { k t");
result.add("tact-\tful", "th { k\tt f V l");
result.add("tact-\tful-\tly", "th { k\tt f V\tl i:");
result.add("tad", "th { d");
result.add("tad-\tde-\to", "th Q\td i:\t@U");
result.add("tad-\tpole", "th { d\tp @U l");
result.add("tad-\tpoles", "th { d\tp @U l z");
result.add("tadd", "th { d");
result.add("tae", "th eI");
result.add("tae-\tgu", "th eI\tg u:");
result.add("taf-\tfe-\tta", "th {\tf V\tt V");
result.add("taf-\tfel", "th {\tf V l");
result.add("taf-\tfy", "th {\tf i:");
result.add("taft", "th { f t");
result.add("taft's", "th { f t s");
result.add("tag", "th { g");
result.add("tag-\tgart", "th {\tg @r t");
result.add("tag-\tgart's", "th {\tg @r t s");
result.add("tag-\tging", "th {\tg I N");
result.add("tag-\tline", "th { g\tl aI n");
result.add("tagged", "th { g d");
result.add("tags", "th { g z");
result.add("tai", "th aI");
result.add("tai-\tling", "th eI\tl I N");
result.add("tai-\tlings", "th eI\tl I N z");
result.add("tai-\tlo-\tring", "th eI\tl @r\tI N");
result.add("tai-\tlor", "th eI\tl @r");
result.add("tai-\tlored", "th eI\tl @r d");
result.add("tai-\tlors", "th eI\tl @r z");
result.add("tai-\tma", "th aI\tm V");
result.add("tai-\tpei", "th aI\tp eI");
result.add("tai-\tpei's", "th aI\tp eI z");
result.add("tai-\tsho", "th eI\tS @U");
result.add("tai-\twa-\tnese", "th aI\tw Q\tn i: z");
result.add("tai-\twan", "th aI\tw Q n");
result.add("tai-\twan's", "th aI\tw Q n z");
result.add("tail", "th eI l");
result.add("tail-\tgate", "th eI l\tg eI t");
result.add("tail-\tpipe", "th eI l\tp aI p");
result.add("tail-\tspin", "th eI l\ts p I n");
result.add("tailed", "th eI l d");
result.add("tails", "th eI l z");
result.add("tain-\tted", "th eI n\tt V d");
result.add("tain-\tting", "th eI n\tt I N");
result.add("taint", "th eI n t");
result.add("taints", "th eI n t s");
result.add("tait", "th eI t");
result.add("taite", "th eI t");
result.add("taj", "th Q Z");
result.add("tak", "th { k");
result.add("tak-\tla-\tma-\tkan", "th { k\tl V\tm eI\tk V n");
result.add("take", "th eI k");
result.add("take-\to-\tver", "th eI\tk @U\tv @r");
result.add("take-\to-\tvers", "th eI\tk @U\tv @r z");
result.add("take-\toff", "th eI\tk O: f");
result.add("take-\toffs", "th eI\tk O: f s");
result.add("take-\tout", "th eI\tk aU t");
result.add("takes", "th eI k s");
result.add("tal", "th Q l");
result.add("tal-\tbert", "th { l\tb @r t");
result.add("tal-\tbot", "th { l\tb V t");
result.add("tal-\tbots", "th { l\tb V t s");
result.add("tal-\tbot's", "th { l\tb V t s");
result.add("tal-\tbott", "th { l\tb V t");
result.add("tal-\tbott's", "th { l\tb V t s");
result.add("tal-\tcott", "th { l\tk V t");
result.add("tal-\tcum", "th { l\tk V m");
result.add("tal-\tka-\tble", "th O:\tk V\tb V l");
result.add("tal-\tka-\ttive", "th O:\tk V\tt I v");
result.add("tal-\tker", "th O:\tk @r");
result.add("tal-\tkers", "th O:\tk @r z");
result.add("tal-\tkie", "th O:\tk i:");
result.add("tal-\tkies", "th O:\tk i: z");
result.add("tal-\tking", "th O:\tk I N");
result.add("tal-\tky", "th O:\tk i:");
result.add("tal-\tla-\tde-\tga", "th {\tl V\td eI\tg V");
result.add("tal-\tla-\thas-\tsee", "th {\tl V\th {\ts i:");
result.add("tal-\tla-\thas-\tsee's", "th {\tl V\th {\ts i: z");
result.add("tal-\tlent", "th Q\tl V n t");
result.add("tal-\tler", "th O:\tl @r");
result.add("tal-\tlest", "th O:\tl V s t");
result.add("tal-\tley", "th {\tl i:");
result.add("tal-\tlie", "th O:\tl i:");
result.add("tal-\tlied", "th {\tl i: d");
result.add("tal-\tlies", "th {\tl i: z");
result.add("tal-\tlow", "th {\tl @U");
result.add("tal-\tlu-\tla", "th Q\tl u:\tl V");
result.add("tal-\tlu-\tlah", "th {\tl u:\tl V");
result.add("tal-\tly", "th {\tl i:");
result.add("tal-\tly-\tho", "th {\tl i:\th @U");
result.add("tal-\tly-\ting", "th {\tl i:\tI N");
result.add("tal-\tmage", "th { l\tm I dZ");
result.add("tal-\tmud", "th { l\tm V d");
result.add("talc", "th { l k");
result.add("talcs", "th { l k s");
result.add("tale", "th eI l");
result.add("tales", "th eI l z");
result.add("talk", "th O: k");
result.add("talk-\tback", "th O: k\tb { k");
result.add("talked", "th O: k t");
result.add("talks", "th O: k s");
result.add("tall", "th O: l");
result.add("tall-\tgrass", "th Q l\tg r { s");
result.add("tall-\tmadge", "th { l\tm { dZ");
result.add("tall-\tman", "th O: l\tm V n");
result.add("tam", "th { m");
result.add("tam-\tbo", "th { m\tb @U");
result.add("tam-\tbou-\trine", "th { m\tb @r\ti: n");
result.add("tam-\tbu-\trel-\tlo", "th Q m\tb U@\te\tl @U");
result.add("tam-\tma-\tny", "th {\tm V\tn i:");
result.add("tam-\tmie", "th {\tm i:");
result.add("tam-\tmy", "th {\tm i:");
result.add("tam-\tpa", "th { m\tp V");
result.add("tam-\tpa's", "th { m\tp V z");
result.add("tam-\tpax", "th { m\tp { k s");
result.add("tam-\tpe-\tring", "th { m\tp @r\tI N");
result.add("tam-\tper", "th { m\tp @r");
result.add("tam-\tpered", "th { m\tp @r d");
result.add("tam-\tping", "th { m\tp I N");
result.add("tam-\tpon", "th { m\tp Q n");
result.add("tam-\tpons", "th { m\tp Q n z");
result.add("tame", "th eI m");
result.add("tamed", "th eI m d");
result.add("tames", "th eI m z");
result.add("tamp", "th { m p");
result.add("tamps", "th { m p s");
result.add("tan", "th { n");
result.add("tan-\tdem", "th { n\td V m");
result.add("tan-\tdem's", "th { n\td V m z");
result.add("tan-\tdy", "th { n\td i:");
result.add("tan-\tdy's", "th { n\td i: z");
result.add("tan-\tge-\trine", "th { n\tdZ @r\ti: n");
result.add("tan-\tge-\trines", "th { n\tdZ @r\ti: n z");
result.add("tan-\tgen-\ttial", "th { n\tdZ e n\ttS V l");
result.add("tan-\tgen-\ttial-\tly", "th { n\tdZ e n\ttS V\tl i:");
result.add("tan-\tgent", "th { n\tdZ V n t");
result.add("tan-\tger", "th {\tN @r");
result.add("tan-\tgi-\tble", "th { n\tdZ I\tb V l");
result.add("tan-\tgi-\tbles", "th { n\tdZ I\tb V l z");
result.add("tan-\tgiers", "th { n\tdZ I@ z");
result.add("tan-\tgle", "th { N\tg V l");
result.add("tan-\tgle-\twood", "th { N\tg V l\tw U d");
result.add("tan-\tgled", "th { N\tg V l d");
result.add("tan-\tgles", "th { N\tg V l z");
result.add("tan-\tgo", "th { N\tg @U");
result.add("tan-\tgos", "th { N\tg @U z");
result.add("tan-\tkard", "th { N\tk @r d");
result.add("tan-\tker", "th { N\tk @r");
result.add("tan-\tkers", "th { N\tk @r z");
result.add("tan-\tking", "th { N\tk I N");
result.add("tan-\tnen", "th {\tn V n");
result.add("tan-\tnen-\tbaum", "th {\tn V n\tb aU m");
result.add("tan-\tner", "th {\tn @r");
result.add("tan-\tnest", "th {\tn V s t");
result.add("tan-\tney", "th {\tn i:");
result.add("tan-\tning", "th {\tn I N");
result.add("tan-\tsey", "th { n\tz i:");
result.add("tan-\tsy", "th { n\tz i:");
result.add("tan-\tta-\tli-\tzes", "th { n\tt V\tl aI\tz V z");
result.add("tan-\tta-\tli-\tzing", "th { n\tt V\tl aI\tz I N");
result.add("tan-\tta-\tli-\tzing-\tly", "th { n\tt V\tl aI\tz I N\tl i:");
result.add("tan-\tta-\tlize", "th { n\tt V\tl aI z");
result.add("tan-\tta-\tlized", "th { n\tt V\tl aI z d");
result.add("tan-\tta-\tlum", "th { n\tt V\tl V m");
result.add("tan-\tta-\tlus", "th { n\tt V\tl V s");
result.add("tan-\tta-\tmount", "th { n\tt V\tm aU n t");
result.add("tan-\tya", "th Q n\tj V");
result.add("tan-\tza-\tni-\ta", "th { n\tz eI\tn i:\tV");
result.add("tan-\tza-\tni-\tan", "th { n\tz eI\tn i:\tV n");
result.add("tan-\tza-\tni-\ta's", "th { n\tz eI\tn i:\tV z");
result.add("tang", "th { N");
result.add("t'ang", "th { N");
result.add("tang-\tling", "th { N\tg l I N");
result.add("tangs", "th { N z");
result.add("tank", "th { N k");
result.add("tanked", "th { N k t");
result.add("tanks", "th { N k s");
result.add("tank's", "th { N k s");
result.add("tann", "th { n");
result.add("tann-\thau-\tser", "th { n\th aU\tz @r");
result.add("tanned", "th { n d");
result.add("tans", "th { n z");
result.add("tant", "th { n t");
result.add("tant-\tric", "th { n\tt r I k");
result.add("tant-\trum", "th { n\tt r V m");
result.add("tant-\trums", "th { n\tt r V m z");
result.add("tao", "th aU");
result.add("tao-\ti-\tsm", "dh aU\tI\tz V m");
result.add("tao-\tist", "dh aU\tV s t");
result.add("tao-\tists", "dh aU\tI s t s");
result.add("taos", "th aU z");
result.add("tap", "th { p");
result.add("tap-\tley", "th { p\tl i:");
result.add("tap-\tlin", "th { p\tl I n");
result.add("tap-\tpan", "th {\tp V n");
result.add("tap-\tpen", "th {\tp V n");
result.add("tap-\tper", "th {\tp @r");
result.add("tap-\tpet", "th {\tp V t");
result.add("tap-\tping", "th {\tp I N");
result.add("tape", "th eI p");
result.add("taped", "th eI p t");
result.add("tapes", "th eI p s");
result.add("tape's", "th eI p s");
result.add("tapped", "th { p t");
result.add("taps", "th { p s");
result.add("tar", "th Q@");
result.add("tar-\tbell", "th Q@\tb e l");
result.add("tar-\tbet", "th Q@\tb e t");
result.add("tar-\tbox", "th Q@\tb Q k s");
result.add("tar-\tdi-\tness", "th Q@\td i:\tn V s");
result.add("tar-\tdy", "th Q@\td i:");
result.add("tar-\tge-\tted", "th Q@\tg V\tt V d");
result.add("tar-\tge-\tting", "th Q@\tg V\tt I N");
result.add("tar-\tget", "th Q@\tg V t");
result.add("tar-\tgets", "th Q@\tg V t s");
result.add("tar-\tget's", "th Q@\tg V t s");
result.add("tar-\theel", "th Q@\th i: l");
result.add("tar-\theels", "th Q@\th i: l z");
result.add("tar-\tking-\tton", "th Q@\tk I N\tt V n");
result.add("tar-\tmac", "th Q@\tm { k");
result.add("tar-\tmacs", "th Q@\tm { k s");
result.add("tar-\tman", "th Q@\tm V n");
result.add("tar-\tni-\tshing", "th Q@\tn I\tS I N");
result.add("tar-\tnish", "th Q@\tn I S");
result.add("tar-\tnished", "th Q@\tn I S t");
result.add("tar-\tnow", "th Q@\tn @U");
result.add("tar-\tpon", "th Q@\tp V n");
result.add("tar-\trance", "th Q@\tV n s");
result.add("tar-\trant", "th Q@\tV n t");
result.add("tar-\tring", "th Q@\tI N");
result.add("tar-\try", "th e@\ti:");
result.add("tar-\try-\ttown", "th e@\ti:\tt aU n");
result.add("tar-\tsus", "th Q@\ts V s");
result.add("tar-\ttag-\tli-\ta", "th Q@\tt { g\tl i:\tV");
result.add("tar-\ttan", "th Q@\tt V n");
result.add("tar-\ttar", "th Q@\tt @r");
result.add("tar-\ttars", "th Q@\tt @r z");
result.add("tar-\tter", "th Q@\tt @r");
result.add("tar-\tzan", "th Q@\tz { n");
result.add("tar-\tzan's", "th Q@\tz { n z");
result.add("tarl-\tton", "th Q@ l\tt V n");
result.add("tarp", "th Q@ p");
result.add("tarp-\tley", "th Q@ p\tl i:");
result.add("tarps", "th Q@ p s");
result.add("tarr", "th Q@");
result.add("tarred", "th Q@ d");
result.add("tart", "th Q@ t");
result.add("tart-\tness", "th Q@ t\tn V s");
result.add("tarte", "th Q@ t");
result.add("tarts", "th Q@ t s");
result.add("tas-\tker", "th { s\tk @r");
result.add("tas-\tking", "th { s\tk I N");
result.add("tas-\tma-\tni-\ta", "th { z\tm eI\tn i:\tV");
result.add("tas-\tma-\tni-\tan", "th { z\tm eI\tn i:\tV n");
result.add("tas-\tman", "th { z\tm V n");
result.add("tas-\tsel", "th {\ts V l");
result.add("tas-\tseled", "th {\ts V l d");
result.add("tas-\tso", "th {\ts @U");
result.add("tas-\tted", "th eI s\tt V d");
result.add("tas-\tter", "th eI s\tt @r");
result.add("tas-\tters", "th eI s\tt @r z");
result.add("tas-\tter's", "th eI s\tt @r z");
result.add("tas-\tti-\ter", "th eI s\tt i:\t@r");
result.add("tas-\tti-\tness", "th eI s\tt i:\tn V s");
result.add("tas-\tting", "th eI s\tt I N");
result.add("tas-\ttings", "th eI s\tt I N z");
result.add("tas-\tty", "th eI s\tt i:");
result.add("tash", "th { S");
result.add("tash-\tkent", "th { S\tk e n t");
result.add("task", "th { s k");
result.add("task-\tforce", "th { s\tk f O@ s");
result.add("task-\tmas-\tter", "th { s\tk m { s\tt @r");
result.add("tasked", "th { s k t");
result.add("tasks", "th { s k s");
result.add("tass", "th { s");
result.add("taste", "th eI s t");
result.add("taste-\tful", "th eI s\tt f V l");
result.add("taste-\tful-\tly", "th eI s\tt f V\tl i:");
result.add("taste-\tless", "th eI s\tt l V s");
result.add("tastes", "th eI s t s");
result.add("tat", "th { t");
result.add("tat-\tman", "th { t\tm V n");
result.add("tat-\tra", "th { t\tr V");
result.add("tat-\tter", "th {\tt @r");
result.add("tat-\tter-\tsall", "th {\tt @r\ts V l");
result.add("tat-\ttered", "th {\tt @r d");
result.add("tat-\tters", "th {\tt @r z");
result.add("tat-\ttle", "th {\tt V l");
result.add("tat-\ttled", "th {\tt V l d");
result.add("tat-\ttoo", "th {\tt u:");
result.add("tat-\ttoo-\ting", "th {\tt u:\tI N");
result.add("tat-\ttooed", "th {\tt u: d");
result.add("tat-\ttoos", "th {\tt u: z");
result.add("tat-\tty", "th {\tt i:");
result.add("tate", "th eI t");
result.add("tate's", "th eI t s");
result.add("tatt-\tler", "th { t\tl @r");
result.add("tau-\tru-\tses", "th O@\tV\ts V z");
result.add("tau-\trus", "th O@\tV s");
result.add("taub", "th aU b");
result.add("taube", "th O: b");
result.add("taubes", "th aU b z");
result.add("taught", "th O: t");
result.add("taun-\tted", "th O: n\tt V d");
result.add("taun-\tting", "th O: n\tt I N");
result.add("taun-\tton", "th O: n\tt V n");
result.add("taunt", "th O: n t");
result.add("taunts", "th O: n t s");
result.add("taus-\tsig", "th aU\ts I g");
result.add("taut", "th O: t");
result.add("taw-\tdry", "th O: d\tr i:");
result.add("taw-\tney", "th O:\tn i:");
result.add("taw-\tny", "th Q\tn i:");
result.add("tawes", "th O: z");
result.add("tax", "th { k s");
result.add("tax-\tpa-\tyer", "th { k\ts p eI\t@r");
result.add("tax-\tpa-\tyers", "th { k\ts p eI\t@r z");
result.add("tax-\tpa-\tyer's", "th { k\ts p eI\t@r z");
result.add("tax-\tpay-\ting", "th { k\ts p eI\tI N");
result.add("taxed", "th { k s t");
result.add("tay", "th eI");
result.add("tay-\tler", "th eI\tl @r");
result.add("tay-\tlor", "th eI\tl @r");
result.add("tay-\tlors", "th eI\tl @r z");
result.add("tay-\tlor's", "th eI\tl @r z");
result.add("tays", "th eI z");
result.add("tchai-\tkov-\tsky", "tS eI\tk Q v\ts k i:");
result.add("tchai-\tkov-\tsky's", "tS eI\tk Q v\ts k i: z");
result.add("te", "th i:");
result.add("te-\tchie", "th e\tk i:");
result.add("te-\tchies", "th e\tk i: z");
result.add("te-\tchy", "th e\ttS i:");
result.add("te-\tco", "th i:\tk @U");
result.add("te-\tcum-\tseh", "th V\tk V m\ts V");
result.add("te-\tdes-\tchi", "th e\td e s\tk i:");
result.add("te-\tdes-\tco", "th e\td e s\tk @U");
result.add("te-\tdi-\tous", "th i:\td i:\tV s");
result.add("te-\tdi-\tous-\tly", "th i:\td i:\tV s\tl i:");
result.add("te-\tdi-\tum", "th i:\td i:\tV m");
result.add("te-\tgu-\tci-\tgal-\tpa", "th e\tg u:\ts i:\tg { l\tp V");
result.add("te-\the-\tran", "th e\th @r\tQ n");
result.add("te-\the-\tran's", "th e\th @r\tQ n z");
result.add("te-\tja-\tno", "th eI\tj Q\tn @U");
result.add("te-\tjon", "th e\tdZ Q n");
result.add("te-\tla-\tmon", "th e\tl V\tm V n");
result.add("te-\tle", "th e\tl i:");
result.add("te-\tle-\tcast", "th e\tl V\tk { s t");
result.add("te-\tle-\tcasts", "th e\tl V\tk { s t s");
result.add("te-\tle-\tcom", "th e\tl V\tk Q m");
result.add("te-\tle-\tcom-\tmu-\tni-\tca-\ttion", "th e\tl V\tk V m\tj u:\tn I\tk eI\tS V n");
result.add("te-\tle-\tcom-\tmu-\tni-\tca-\ttions", "th e\tl V\tk V m\tj u:\tn V\tk eI\tS V n z");
result.add("te-\tle-\tcom-\tmu-\tter", "th e\tl V\tk V m\tj u:\tt @r");
result.add("te-\tle-\tcom-\tmu-\tters", "th e\tl V\tk V m\tj u:\tt @r z");
result.add("te-\tle-\tcom-\tmu-\tting", "th e\tl V\tk V m\tj u:\tt I N");
result.add("te-\tle-\tcom-\tmute", "th e\tl V\tk V m\tj u: t");
result.add("te-\tle-\tcoms", "th e\tl V\tk Q m z");
result.add("te-\tle-\tconfe-\tren-\tcing", "th e\tl V\tk Q n\tf r V n\ts I N");
result.add("te-\tle-\tconfe-\trence", "th e\tl V\tk Q n\tf r V n s");
result.add("te-\tle-\tdyne", "th e\tl V\td aI n");
result.add("te-\tle-\tdyne's", "th e\tl V\td aI n z");
result.add("te-\tle-\tfun-\tken", "th e\tl V\tf V N\tk V n");
result.add("te-\tle-\tge-\tnic", "th e\tl V\tdZ e\tn I k");
result.add("te-\tle-\tgram", "th e\tl V g\tr { m");
result.add("te-\tle-\tgrams", "th e\tl V g\tr { m z");
result.add("te-\tle-\tgraph", "th e\tl V g\tr { f");
result.add("te-\tle-\tgraphed", "th e\tl V g\tr { f t");
result.add("te-\tle-\tgraph's", "th e\tl V g\tr { f s");
result.add("te-\tle-\tma-\ttic", "th e\tl V\tm {\tt I k");
result.add("te-\tle-\tma-\ttics", "th e\tl V\tm {\tt I k s");
result.add("te-\tle-\tmar-\tke-\tter", "th e\tl V\tm Q@\tk V\tt @r");
result.add("te-\tle-\tmar-\tke-\tters", "th e\tl V\tm Q@\tk V\tt @r z");
result.add("te-\tle-\tmar-\tke-\tting", "th e\tl V\tm Q@\tk V\tt I N");
result.add("te-\tle-\tme-\tdi-\tcine", "th e\tl V\tm e\td V\ts V n");
result.add("te-\tle-\tmet-\try", "th V\tl e\tm V t\tr i:");
result.add("te-\tle-\to-\tlo-\tgi-\tcal", "th i:\tl i:\tV\tl O:\tdZ I\tk V l");
result.add("te-\tle-\tpa-\tthic", "th e\tl V\tp {\tT V k");
result.add("te-\tle-\tpa-\tthy", "th e\tl V\tp {\tT i:");
result.add("te-\tle-\tpho-\tnic", "th e\tl V\tf Q\tn I k");
result.add("te-\tle-\tpho-\tnics", "th e\tl V\tf Q\tn I k s");
result.add("te-\tle-\tpho-\tning", "th e\tl V\tf @U\tn I N");
result.add("te-\tle-\tpho-\tny", "th e\tl V\tf @U\tn i:");
result.add("te-\tle-\tpho-\tto", "th e\tl V\tf @U\tt @U");
result.add("te-\tle-\tphone", "th e\tl V\tf @U n");
result.add("te-\tle-\tphoned", "th e\tl V\tf @U n d");
result.add("te-\tle-\tphones", "th e\tl V\tf @U n z");
result.add("te-\tle-\tphone's", "th e\tl V\tf @U n z");
result.add("te-\tle-\tpic-\tture", "th e\tl V\tp I k\ttS @r");
result.add("te-\tle-\tport", "th e\tl V\tp O@ t");
result.add("te-\tle-\tport's", "th e\tl V\tp O@ t s");
result.add("te-\tle-\tpromp-\tter", "th e\tl V p\tr Q m\tp t @r");
result.add("te-\tle-\tsci-\ten-\tces", "th e\tl V\ts aI\tV n\ts V z");
result.add("te-\tle-\tsci-\tence", "th e\tl V\ts aI\tV n s");
result.add("te-\tle-\tsco-\tpic", "th e\tl V s\tk O:\tp I k");
result.add("te-\tle-\tscope", "th e\tl V s\tk @U p");
result.add("te-\tle-\tscopes", "th e\tl V s\tk @U p s");
result.add("te-\tle-\tscope's", "th e\tl V s\tk @U p s");
result.add("te-\tle-\tscript", "th e\tl V s\tk r I p t");
result.add("te-\tle-\tsi-\ts's", "th e\tl V\ts I\ts V z");
result.add("te-\tle-\tsis", "th e\tl V\ts I s");
result.add("te-\tle-\ttext", "th e\tl V\tt e k s t");
result.add("te-\tle-\tthon", "th e\tl V\tT O: n");
result.add("te-\tle-\ttron", "th e\tl V t\tr Q n");
result.add("te-\tle-\ttype", "th e\tl V\tt aI p");
result.add("te-\tle-\ttypes", "th e\tl V\tt aI p s");
result.add("te-\tle-\tvan-\tge-\tlist", "th e\tl V\tv { n\tdZ V\tl V s t");
result.add("te-\tle-\tvan-\tge-\tlists", "th e\tl V\tv { n\tdZ V\tl V s t s");
result.add("te-\tle-\tvi-\tde-\to", "th e\tl V\tv I\td i:\t@U");
result.add("te-\tle-\tvi-\tsing", "th e\tl V\tv aI\tz I N");
result.add("te-\tle-\tvi-\tsion", "th e\tl V\tv I\tZ V n");
result.add("te-\tle-\tvi-\tsions", "th e\tl V\tv I\tZ V n z");
result.add("te-\tle-\tvi-\tsion's", "th e\tl V\tv I\tZ V n z");
result.add("te-\tle-\tvise", "th e\tl V\tv aI z");
result.add("te-\tle-\tvised", "th e\tl V\tv aI z d");
result.add("te-\tle-\txes", "th e\tl e k\ts V s");
result.add("te-\tle-\tx's", "th e\tl e k\ts V z");
result.add("te-\tlex", "th e\tl e k s");
result.add("te-\tlexed", "th e\tl e s k t");
result.add("te-\tlos", "th e\tl @U s");
result.add("te-\tlu-\tgu", "th e\tl U\tg u:");
result.add("te-\tme-\tcu-\tla", "th V\tm e k\tj V\tl V");
result.add("te-\tme-\tri-\tty", "th V\tm e@\tV\tt i:");
result.add("te-\tna", "th e\tn V");
result.add("te-\tna-\tble", "th e\tn V\tb V l");
result.add("te-\tna-\tci-\tty", "th V\tn {\ts V\tt i:");
result.add("te-\tna-\tcious", "th V\tn eI\tS V s");
result.add("te-\tna-\tcious-\tly", "th V\tn eI\tS V s\tl i:");
result.add("te-\tnan-\tcy", "th e\tn V n\ts i:");
result.add("te-\tnant", "th e\tn V n t");
result.add("te-\tnants", "th e\tn V n t s");
result.add("te-\tnant's", "th e\tn V n t s");
result.add("te-\tne-\tment", "th e\tn V\tm V n t");
result.add("te-\tne-\tments", "th e\tn V\tm V n t s");
result.add("te-\tnen-\tbaum", "th e\tn V n\tb aU m");
result.add("te-\tnet", "th e\tn V t");
result.add("te-\tnets", "th e\tn V t s");
result.add("te-\tnor", "th e\tn @r");
result.add("te-\tnore", "th e\tn O@");
result.add("te-\tnors", "th e\tn @r z");
result.add("te-\tnuo-\tus", "th e n\tj V\tw V s");
result.add("te-\tnure", "th e n\tj @r");
result.add("te-\tnured", "th e n\tj @r d");
result.add("te-\tnures", "th e n\tj @r z");
result.add("te-\to", "th eI\t@U");
result.add("te-\to-\tdo-\tro", "th i:\t@U\td O@\t@U");
result.add("te-\tpid", "th e\tp I d");
result.add("te-\tqui-\tla", "th V\tk i:\tl V");
result.add("te-\tre-\tsa", "th @r\ti:\ts V");
result.add("te-\tre-\tsa's", "th @r\ti:\ts V z");
result.add("te-\tre-\tsi-\tta", "th @r\te\ts i:\tt V");
result.add("te-\tren-\tce's", "th e@\tV n\ts V z");
result.add("te-\tren-\ttia", "th @r\te n\tS V");
result.add("te-\trence", "th e@\tV n s");
result.add("te-\tres-\tsa", "th @r\te\ts V");
result.add("te-\trese", "th e@\ti: z");
result.add("te-\tri", "th e@\ti:");
result.add("te-\tri-\tya-\tki", "th e@\tI\tj Q\tk i:");
result.add("te-\ts-\tler", "th e\ts V\tl @r");
result.add("te-\tta-\tnus", "th e\tt V\tn V s");
result.add("te-\tter", "th i:\tt @r");
result.add("te-\tther", "th e\tD @r");
result.add("te-\tthered", "th e\tD @r d");
result.add("te-\tthers", "th e\tD @r z");
result.add("te-\tton", "th i:\tt V n");
result.add("te-\tvat-\tron", "th e\tv V t\tr Q n");
result.add("te-\tvis", "th e\tv I s");
result.add("te-\twell", "th e\tw e l");
result.add("te-\txa-\tco", "th e k\ts V\tk @U");
result.add("te-\txa-\tco's", "th e k\ts V\tk @U z");
result.add("te-\txa-\ts's", "th e k\ts V\ts V z");
result.add("te-\txan", "th e k\ts V n");
result.add("te-\txans", "th e k\ts V n z");
result.add("te-\txar-\tka-\tna", "th e k\ts Q@\tk {\tn V");
result.add("te-\txas", "th e k\ts V s");
result.add("tea", "th i:");
result.add("tea-\tcha-\tble", "th i:\ttS V\tb V l");
result.add("tea-\tcher", "th i:\ttS @r");
result.add("tea-\tchers", "th i:\ttS @r z");
result.add("tea-\tcher's", "th i:\ttS @r z");
result.add("tea-\tches", "th i:\ttS V z");
result.add("tea-\tchey", "th i:\ttS i:");
result.add("tea-\tching", "th i:\ttS I N");
result.add("tea-\tchings", "th i:\ttS I N z");
result.add("tea-\tcup", "th i:\tk V p");
result.add("tea-\tgar-\tden", "th i:\tg Q@\td V n");
result.add("tea-\tgle", "th i:\tg V l");
result.add("tea-\than", "th i:\tV n");
result.add("tea-\tmer", "th i:\tm @r");
result.add("tea-\tming", "th i:\tm I N");
result.add("tea-\tneck", "th i:\tn e k");
result.add("tea-\tpot", "th i:\tp Q t");
result.add("tea-\tring", "th e@\tI N");
result.add("tea-\trle", "th O@\tV l");
result.add("tea-\try", "th I@\ti:");
result.add("tea-\tser", "th i:\tz @r");
result.add("tea-\tses", "th i:\tz V z");
result.add("tea-\tsing", "th i:\tz I N");
result.add("tea-\tspoon", "th i: s\tp u: n");
result.add("tea-\tspoons", "th i: s\tp u: n z");
result.add("tea-\ttro", "th i: t\tr @U");
result.add("teach", "th i: tS");
result.add("teague", "th i: g");
result.add("teak", "th i: k");
result.add("teak-\twood", "th i: k\tw U d");
result.add("teal", "th i: l");
result.add("team", "th i: m");
result.add("team-\tmate", "th i:\tm eI t");
result.add("team-\tmates", "th i: m\tm eI t s");
result.add("team-\twork", "th i: m\tw @r k");
result.add("teamed", "th i: m d");
result.add("teams", "th i: m z");
result.add("team's", "th i: m z");
result.add("teams-\tter", "th i: m\ts t @r");
result.add("teams-\tters", "th i: m\ts t @r z");
result.add("teams-\tter's", "th i: m\ts t @r z");
result.add("tear", "th e@");
result.add("tear-\tful", "th I@\tf V l");
result.add("tear-\tful-\tly", "th I@\tf V\tl i:");
result.add("tears", "th e@ z");
result.add("teas", "th i: z");
result.add("teas-\tdale", "th i: z\td eI l");
result.add("tease", "th i: z");
result.add("teased", "th i: z d");
result.add("teat", "th i: t");
result.add("teats", "th i: t s");
result.add("teb-\tbetts", "th e\tb e t s");
result.add("tec", "th e k");
result.add("tec-\tla", "th e k\tl V");
result.add("tec-\tto-\tnic", "th e k\tt Q\tn I k");
result.add("tec-\tto-\tnics", "th e k\tt Q\tn I k s");
result.add("tech", "th e k");
result.add("tech-\tni-\tca-\tli-\tties", "th e k\tn I\tk {\tl I\tt i: z");
result.add("tech-\tni-\tca-\tli-\tty", "th e k\tn I\tk {\tl I\tt i:");
result.add("tech-\tni-\tcal", "th e k\tn I\tk V l");
result.add("tech-\tni-\tcal-\tly", "th e k\tn I\tk V\tl i:");
result.add("tech-\tni-\tcals", "th e k\tn I\tk V l z");
result.add("tech-\tni-\tcian", "th e k\tn I\tS V n");
result.add("tech-\tni-\tcians", "th e k\tn I\tS V n z");
result.add("tech-\tni-\tcian's", "th e k\tn I\tS V n z");
result.add("tech-\tni-\tco-\tlor", "th e k\tn I\tk V\tl @r");
result.add("tech-\tni-\tcon", "th e k\tn I\tk Q n");
result.add("tech-\tnic", "th e k\tn I k");
result.add("tech-\tnics", "th e k\tn I k s");
result.add("tech-\tnique", "th e k\tn i: k");
result.add("tech-\tniques", "th e k\tn i: k s");
result.add("tech-\tno", "th e k\tn @U");
result.add("tech-\tno-\tcra-\ttic", "th e k\tn V k\tr {\tt I k");
result.add("tech-\tno-\tcrat", "th e k\tn V k\tr { t");
result.add("tech-\tno-\tcrats", "th e k\tn V k\tr { t s");
result.add("tech-\tno-\tlo-\tgi-\tcal", "th e k\tn V\tl Q\tdZ I\tk V l");
result.add("tech-\tno-\tlo-\tgi-\tcal-\tly", "th e k\tn V\tl Q\tdZ I\tk V\tl i:");
result.add("tech-\tno-\tlo-\tgic", "th e k\tn V\tl Q\tdZ I k");
result.add("tech-\tno-\tlo-\tgies", "th e k\tn Q\tl I\tdZ i: z");
result.add("tech-\tno-\tlo-\tgist", "th e k\tn Q\tl I\tdZ I s t");
result.add("tech-\tno-\tlo-\tgists", "th e k\tn Q\tl I\tdZ I s t s");
result.add("tech-\tno-\tlo-\tgy", "th e k\tn Q\tl I\tdZ i:");
result.add("tech-\tno-\tlo-\tgy's", "th e k\tn Q\tl I\tdZ i: z");
result.add("tech-\tno-\tphobe", "th e k\tn @U\tf @U b");
result.add("tech-\tno-\tphobes", "th e k\tn @U\tf @U b z");
result.add("techs", "th e k s");
result.add("tech's", "th e k s");
result.add("teck", "th e k");
result.add("ted", "th e d");
result.add("ted-\tder", "th e\td @r");
result.add("ted-\tdie", "th e\td i:");
result.add("ted-\tdy", "th e\td i:");
result.add("ted-\tdy's", "th e\td i: z");
result.add("ted-\tman", "th e d\tm V n");
result.add("ted-\tmund", "th e d\tm V n d");
result.add("ted's", "th e d z");
result.add("tee", "th i:");
result.add("tee-\ting", "th i:\tI N");
result.add("tee-\tming", "th i:\tm I N");
result.add("tee-\tna", "th i:\tn V");
result.add("tee-\tna-\tger", "th i:\tn eI\tdZ @r");
result.add("tee-\tna-\tgers", "th i:\tn eI\tdZ @r z");
result.add("tee-\tna-\tger's", "th i:\tn eI\tdZ @r z");
result.add("tee-\tnage", "th i:\tn eI dZ");
result.add("tee-\tnaged", "th i:\tn eI dZ d");
result.add("tee-\tnie", "th i:\tn i:");
result.add("tee-\tny", "th i:\tn i:");
result.add("tee-\tte-\tring", "th i:\tt @r\tI N");
result.add("tee-\tter", "th i:\tt @r");
result.add("tee-\ttered", "th i:\tt @r d");
result.add("tee-\tters", "th i:\tt @r z");
result.add("tee-\tter's", "th i:\tt @r z");
result.add("tee-\tthing", "th i:\tD I N");
result.add("teed", "th i: d");
result.add("teel", "th i: l");
result.add("teem", "th i: m");
result.add("teems", "th i: m z");
result.add("teen", "th i: n");
result.add("teen-\ta-\tger", "th i:\tn eI\tdZ @r");
result.add("teen-\tage", "th i:\tn eI dZ");
result.add("teen-\taged", "th i:\tn eI dZ d");
result.add("teen-\tsy", "th i: n\ts i:");
result.add("teens", "th i: n z");
result.add("teer", "th I@");
result.add("tees", "th i: z");
result.add("teet", "th i: t");
result.add("teeth", "th i: T");
result.add("teethe", "th i: D");
result.add("tef-\tlon", "th e f\tl V n");
result.add("tefft", "th e f t");
result.add("teh-\tran", "th eI\tr Q n");
result.add("tei-\tcher", "th aI\tk @r");
result.add("teig", "th i: g");
result.add("tek-\ttro-\tnix", "th e k\tt r Q\tn I k s");
result.add("tel", "th e l");
result.add("tel-\ta-\tviv", "th e\tl Q\tv i: v");
result.add("tel-\tco", "th e l\tk @U");
result.add("tel-\tfer", "th e l\tf @r");
result.add("tel-\tford", "th e l\tf @r d");
result.add("tel-\tler", "th e\tl @r");
result.add("tel-\tlers", "th e\tl @r z");
result.add("tel-\tler's", "th e\tl @r z");
result.add("tel-\tlez", "th eI\tl e z");
result.add("tel-\tling", "th e\tl I N");
result.add("tel-\tling-\tly", "th e\tl I N\tl i:");
result.add("tel-\tlo", "th e\tl @U");
result.add("tel-\tlu-\tri-\tum", "th e\tl U@\ti:\tV m");
result.add("tel-\tlu-\tride", "th e l\tj @r\taI d");
result.add("tel-\tlu-\trides", "th e l\tj @r\taI d z");
result.add("tel-\tly", "th e\tl i:");
result.add("tel-\tstar", "th e l\ts t Q@");
result.add("tell", "th e l");
result.add("tell-\ttale", "th e l\tt eI l");
result.add("tell-\ttales", "th e l\tt eI l z");
result.add("tells", "th e l z");
result.add("tem-\tp-\tler", "th e m\tp V\tl @r");
result.add("tem-\tpe", "th e m\tp i:");
result.add("tem-\tpe-\tra", "th e m\tp @r\tV");
result.add("tem-\tpe-\trance", "th e m\tp @r\tV n s");
result.add("tem-\tpe-\tring", "th e m\tp @r\tI N");
result.add("tem-\tpel", "th e m\tp V l");
result.add("tem-\tper", "th e m\tp @r");
result.add("tem-\tpera-\tmen-\ttal", "th e m\tp r V\tm e n\tt V l");
result.add("tem-\tpera-\tmen-\ttal-\tly", "th e m\tp r V\tm e n\tt V\tl i:");
result.add("tem-\tpera-\tment", "th e m\tp r V\tm V n t");
result.add("tem-\tpera-\tments", "th e m\tp r V\tm V n t s");
result.add("tem-\tpera-\tture", "th e m\tp r V\ttS @r");
result.add("tem-\tpered", "th e m\tp @r d");
result.add("tem-\tpers", "th e m\tp @r z");
result.add("tem-\tpes-\ttu-\tous", "th e m\tp e s\ttS u:\tV s");
result.add("tem-\tpest", "th e m\tp V s t");
result.add("tem-\tple", "th e m\tp V l");
result.add("tem-\tple-\tman", "th e m\tp V l\tm V n");
result.add("tem-\tple-\tton", "th e m\tp V l\tt V n");
result.add("tem-\tple-\tton's", "th e m\tp V l\tt V n z");
result.add("tem-\tples", "th e m\tp V l z");
result.add("tem-\tple's", "th e m\tp V l z");
result.add("tem-\tpo", "th e m\tp @U");
result.add("tem-\tpo-\tra-\tri-\tly", "th e m\tp @r\te@\tI\tl i:");
result.add("tem-\tpo-\tra-\tries", "th e m\tp @r\te@\ti: z");
result.add("tem-\tpo-\tra-\try", "th e m\tp @r\te@\ti:");
result.add("tem-\tpo-\tral", "th e m\tp @r\tV l");
result.add("tem-\tpo-\tral-\tly", "th e m\tp @r\tV\tl i:");
result.add("tem-\tpo-\tri-\tzing", "th e m\tp @r\taI\tz I N");
result.add("tem-\tpo-\trize", "th e m\tp @r\taI z");
result.add("tem-\tpore", "th e m\tp O@");
result.add("tem-\tpos", "th e m\tp @U z");
result.add("temb-\tlor", "th e m\tb l @r");
result.add("temb-\tlors", "th e m\tb l @r z");
result.add("temp", "th e m p");
result.add("temp-\tlar", "th e m\tp l @r");
result.add("temp-\tlars", "th e m\tp l @r z");
result.add("temp-\tlate", "th e m\tp l V t");
result.add("temp-\tlet", "th e m\tp l V t");
result.add("temp-\tta-\ttion", "th e m\tt eI\tS V n");
result.add("temp-\tta-\ttions", "th e m\tt eI\tS V n z");
result.add("temp-\tted", "th e m\tp t V d");
result.add("temp-\tting", "th e m\tp t I N");
result.add("tempe-\tra-\ttures", "th e m\tp r V\ttS @r z");
result.add("tempe-\trate", "th e m\tp r V t");
result.add("temps", "th e m p s");
result.add("tempt", "th e m p t");
result.add("tempt-\tress", "th e m\tp t r V s");
result.add("tempts", "th e m p t s");
result.add("ten", "th e n");
result.add("ten-\tde-\tring", "th e n\td @r\tI N");
result.add("ten-\tded", "th e n\td V d");
result.add("ten-\tden-\tcies", "th e n\td V n\ts i: z");
result.add("ten-\tden-\tcy", "th e n\td V n\ts i:");
result.add("ten-\tden-\ttious", "th e n\td e n\tS V s");
result.add("ten-\tder", "th e n\td @r");
result.add("ten-\tder-\tloin", "th e n\td @r\tl OI n");
result.add("ten-\tder-\tly", "th e n\td @r\tl i:");
result.add("ten-\tder-\tness", "th e n\td @r\tn V s");
result.add("ten-\tdered", "th e n\td @r d");
result.add("ten-\tders", "th e n\td @r z");
result.add("ten-\tding", "th e n\td I N");
result.add("ten-\tdon", "th e n\td V n");
result.add("ten-\tdons", "th e n\td V n z");
result.add("ten-\tfold", "th e n\tf @U l d");
result.add("ten-\tnant", "th e\tn V n t");
result.add("ten-\tne-\tco", "th e\tn V\tk @U");
result.add("ten-\tne-\tco's", "th e\tn V\tk @U z");
result.add("ten-\tnent", "th e\tn V n t");
result.add("ten-\tner", "th e\tn @r");
result.add("ten-\tnes-\tse-\tan", "th e\tn V\ts i:\tV n");
result.add("ten-\tnes-\tse-\tans", "th e\tn V\ts i:\tV n z");
result.add("ten-\tnes-\tsee", "th e\tn V\ts i:");
result.add("ten-\tnes-\tsee's", "th e\tn V\ts i: z");
result.add("ten-\tney", "th e\tn i:");
result.add("ten-\tni-\ts's", "th e\tn I\ts V z");
result.add("ten-\tnis", "th e\tn I s");
result.add("ten-\tny", "th e\tn i:");
result.add("ten-\tny-\tson", "th e\tn V\ts V n");
result.add("ten-\tpen-\tny", "th e n\tp e\tn i:");
result.add("ten-\trecs", "th e n\tr e k s");
result.add("ten-\tsi-\to-\tme-\tter", "th e n\ts i:\tQ\tm V\tt @r");
result.add("ten-\tsile", "th e n\ts I l");
result.add("ten-\tsion", "th e n\tS V n");
result.add("ten-\tsions", "th e n\ttS V n z");
result.add("ten-\tta-\tcle", "th e n\tt V\tk V l");
result.add("ten-\tta-\tcles", "th e n\tt V\tk V l z");
result.add("ten-\tta-\ttive", "th e n\tt V\tt I v");
result.add("ten-\tta-\ttive-\tly", "th e n\tt V\tt I v\tl i:");
result.add("ten-\tting", "th e n\tt I N");
result.add("tench", "th e n tS");
result.add("tend", "th e n d");
result.add("tends", "th e n d z");
result.add("teng", "th e N");
result.add("tens", "th e n z");
result.add("ten's", "th e n z");
result.add("tense", "th e n s");
result.add("tense-\tly", "th e n\ts l i:");
result.add("tent", "th e n t");
result.add("tenth", "th e n T");
result.add("tenths", "th e n T s");
result.add("tents", "th e n t s");
result.add("tep-\tper", "th e\tp @r");
result.add("tepe", "th i: p");
result.add("ter", "th @r");
result.add("ter-\tcel", "th @r\ts V l");
result.add("ter-\thune", "th @r h\tj u: n");
result.add("ter-\tkel", "th @r\tk V l");
result.add("ter-\tman", "th @r\tm V n");
result.add("ter-\tmer", "th @r\tm @r");
result.add("ter-\tmers", "th @r\tm @r z");
result.add("ter-\tmi-\tna-\tted", "th @r\tm I\tn eI\tt I d");
result.add("ter-\tmi-\tna-\tting", "th @r\tm I\tn eI\tt I N");
result.add("ter-\tmi-\tna-\ttion", "th @r\tm I\tn eI\tS V n");
result.add("ter-\tmi-\tna-\ttions", "th @r\tm I\tn eI\tS V n z");
result.add("ter-\tmi-\tna-\ttor", "th @r\tm I\tn eI\tt @r");
result.add("ter-\tmi-\tnal", "th @r\tm I\tn V l");
result.add("ter-\tmi-\tnal-\tly", "th @r\tm I\tn V\tl i:");
result.add("ter-\tmi-\tnals", "th @r\tm I\tn V l z");
result.add("ter-\tmi-\tnate", "th @r\tm I\tn eI t");
result.add("ter-\tmi-\tnates", "th @r\tm I\tn eI t s");
result.add("ter-\tmi-\tni", "th @r\tm I\tn aI");
result.add("ter-\tmi-\tno-\tlo-\tgy", "th @r\tm I\tn Q\tl V\tdZ i:");
result.add("ter-\tmine", "th @r\tm I n");
result.add("ter-\tming", "th @r\tm I N");
result.add("ter-\tmite", "th @r\tm aI t");
result.add("ter-\tmites", "th @r\tm aI t s");
result.add("ter-\tra", "th e@\tV");
result.add("ter-\tra-\tces", "th e@\tV\ts V z");
result.add("ter-\trace", "th e@\tV s");
result.add("ter-\traced", "th e@\tV s t");
result.add("ter-\train", "th @r\teI n");
result.add("ter-\trains", "th @r\teI n z");
result.add("ter-\tral", "th e@\tV l");
result.add("ter-\trance", "th e@\tV n s");
result.add("ter-\tra's", "th e@\tV z");
result.add("ter-\tre", "th e@\tV");
result.add("ter-\tre-\tbon-\tne", "th @r\te\tb @U\tn i:");
result.add("ter-\trel", "th e@\tV l");
result.add("ter-\trell", "th e@\tV l");
result.add("ter-\trence", "th e@\tV n s");
result.add("ter-\tres-\ttri-\tal", "th @r\te s\tt r i:\tV l");
result.add("ter-\tri", "th e@\ti:");
result.add("ter-\tri-\tble", "th e@\tI\tb V l");
result.add("ter-\tri-\ter", "th e@\ti:\t@r");
result.add("ter-\tri-\ters", "th e@\ti:\t@r z");
result.add("ter-\tri-\tfic", "th @r\tI\tf I k");
result.add("ter-\tri-\tfical-\tly", "th @r\tI\tf I k\tl i:");
result.add("ter-\tri-\tfied", "th e@\tI\tf aI d");
result.add("ter-\tri-\tfies", "th e@\tI\tf aI z");
result.add("ter-\tri-\tfy", "th e@\tI\tf aI");
result.add("ter-\tri-\tfy-\ting", "th e@\tI\tf aI\tI N");
result.add("ter-\tri-\tto-\tri-\ta-\tli-\tsm", "th e@\tI\tt O@\ti:\tV\tl I\tz V m");
result.add("ter-\tri-\tto-\tri-\tal", "th e@\tI\tt O@\ti:\tV l");
result.add("ter-\tri-\tto-\tri-\tal-\tly", "th e@\tI\tt O@\ti:\tV\tl i:");
result.add("ter-\tri-\tto-\tries", "th e@\tI\tt O@\ti: z");
result.add("ter-\tri-\tto-\try", "th e@\tI\tt O@\ti:");
result.add("ter-\tri-\tto-\try's", "th e@\tI\tt O@\ti: z");
result.add("ter-\trib-\tly", "th e@\tI b\tl i:");
result.add("ter-\trie", "th e@\ti:");
result.add("ter-\trill", "th e@\tI l");
result.add("ter-\tris", "th e@\tI s");
result.add("ter-\tro-\tri-\tsm", "th e@\t@r\tI\tz V m");
result.add("ter-\tro-\tri-\tzes", "th e@\t@r\taI\tz V z");
result.add("ter-\tro-\tri-\tzing", "th e@\t@r\taI\tz I N");
result.add("ter-\tro-\tris-\ttic", "th e@\t@r\tI s\tt I k");
result.add("ter-\tro-\trist", "th e@\t@r\tI s t");
result.add("ter-\tro-\trists", "th e@\t@r\tI s t s");
result.add("ter-\tro-\trize", "th e@\t@r\taI z");
result.add("ter-\tro-\trized", "th e@\t@r\taI z d");
result.add("ter-\tror", "th e@\t@r");
result.add("ter-\trors", "th e@\t@r z");
result.add("ter-\try", "th e@\ti:");
result.add("ter-\try's", "th e@\ti: z");
result.add("ter-\tti-\tus", "th @r\tt i:\tV s");
result.add("ter-\ttia", "th e@\tS V");
result.add("ter-\ttia-\try", "th @r\tS @r\ti:");
result.add("term", "th @r m");
result.add("termed", "th @r m d");
result.add("terms", "th @r m z");
result.add("term's", "th @r m z");
result.add("ternes", "th @r n z");
result.add("terns", "th @r n z");
result.add("terpst-\tra", "th e@ p\ts t r V");
result.add("terse", "th @r s");
result.add("terse-\tly", "th @r s\tl i:");
result.add("tes-\tla", "th e s\tl V");
result.add("tes-\tsa", "th e\ts V");
result.add("tes-\tse-\tla-\tted", "th e\ts V\tl eI\tt V d");
result.add("tes-\tse-\tlate", "th e\ts V\tl eI t");
result.add("tes-\tsie", "th e\ts i:");
result.add("tes-\tsy", "th e\ts i:");
result.add("tes-\tta", "th e s\tt V");
result.add("tes-\tta-\tmen-\tta-\try", "th e s\tt V\tm e n\tt @r\ti:");
result.add("tes-\tta-\tment", "th e s\tt V\tm V n t");
result.add("tes-\tted", "th e s\tt V d");
result.add("tes-\tter", "th e s\tt @r");
result.add("tes-\tters", "th e s\tt @r z");
result.add("tes-\ttes", "th e s\tt i: z");
result.add("tes-\tti-\tcle", "th e s\tt I\tk V l");
result.add("tes-\tti-\tcles", "th e s\tt I\tk V l z");
result.add("tes-\tti-\tcu-\tlar", "th e s\tt I k\tj V\tl @r");
result.add("tes-\tti-\tfied", "th e s\tt I\tf aI d");
result.add("tes-\tti-\tfies", "th e s\tt I\tf aI z");
result.add("tes-\tti-\tfy", "th e s\tt I\tf aI");
result.add("tes-\tti-\tfy-\ting", "th e s\tt I\tf aI\tI N");
result.add("tes-\tti-\tly", "th e s\tt I\tl i:");
result.add("tes-\tti-\tmo-\tni-\tal", "th e s\tt I\tm @U\tn i:\tV l");
result.add("tes-\tti-\tmo-\tni-\tals", "th e s\tt I\tm @U\tn i:\tV l z");
result.add("tes-\tti-\tmo-\tnies", "th e s\tt V\tm @U\tn i: z");
result.add("tes-\tti-\tmo-\tny", "th e s\tt V\tm @U\tn i:");
result.add("tes-\tting", "th e s\tt I N");
result.add("tes-\tton", "th e s\tt V n");
result.add("tes-\ttor", "th e s\tt @r");
result.add("tes-\ttos-\tte-\trone", "th e s\tt Q s\tt @r\t@U n");
result.add("tes-\tty", "th e s\tt i:");
result.add("tess", "th e s");
result.add("tess-\tler", "th e s\tl @r");
result.add("test", "th e s t");
result.add("tests", "th e s t s");
result.add("test's", "th e s t s");
result.add("tet", "th e t");
result.add("tet-\tra", "th e t\tr V");
result.add("tet-\tra-\thed-\tral", "th e t\tr V\th i: d\tr V l");
result.add("tet-\tra-\thed-\tron", "th e t\tr V\th i: d\tr V n");
result.add("tet-\tra-\tme-\trous", "th e t\tr {\tm @r\tV s");
result.add("tet-\tra-\tva-\tlent", "th e t\tr V\tv eI\tl V n t");
result.add("tet-\trads", "th e t\tr { d z");
result.add("tete", "th e t");
result.add("teu-\tfel", "th OI\tf V l");
result.add("tew", "tS u:");
result.add("tewks-\tbu-\try", "th u: k\ts b @r\ti:");
result.add("tews", "tS u: z");
result.add("tex", "th e k s");
result.add("tex-\ttile", "th e k\ts t aI l");
result.add("tex-\ttiles", "th e k\ts t aI l z");
result.add("tex-\ttu-\tal", "th e k\ts tS V\tw V l");
result.add("tex-\tture", "th e k\ts tS @r");
result.add("tex-\ttured", "th e k\ts tS @r d");
result.add("tex-\ttures", "th e k\ts tS @r z");
result.add("text", "th e k s t");
result.add("text-\tbook", "th e k\ts t b U k");
result.add("text-\tbooks", "th e k\ts t b U k s");
result.add("text-\tron", "th e k\ts t r Q n");
result.add("text-\tron's", "th e k\ts t r Q n z");
result.add("texts", "th e k s t s");
result.add("tha-\tcher", "T {\tk @r");
result.add("tha-\tcke-\tray", "T {\tk @r\ti:");
result.add("tha-\tcker", "T {\tk @r");
result.add("tha-\tgard", "T {\tg @r d");
result.add("tha-\tla-\tmus", "T {\tl V\tm V s");
result.add("tha-\tlas-\tsa", "T Q\tl Q\ts V");
result.add("tha-\tler", "T eI\tl @r");
result.add("tha-\tli-\tdo-\tmide", "T V\tl I\td V\tm aI d");
result.add("tha-\tlia", "T eI l\tj V");
result.add("tha-\tlia's", "T eI l\tj V z");
result.add("tha-\tnos", "T Q\tn @U s");
result.add("tha-\tt'd", "D {\tt V d");
result.add("tha-\tt'll", "D {\tt V l");
result.add("tha-\twing", "T O:\tI N");
result.add("thach", "T { tS");
result.add("thad", "T { d");
result.add("thad-\tde-\tus", "T {\td i:\tV s");
result.add("thai", "th aI");
result.add("thai-\tland", "th aI\tl { n d");
result.add("thai-\tland's", "th aI\tl { n d z");
result.add("thain", "T eI n");
result.add("thaine", "T eI n");
result.add("thais", "th aI z");
result.add("thal-\tli-\tum", "T {\tl i:\tV m");
result.add("tham", "T { m");
result.add("thames", "th e m z");
result.add("than", "D { n");
result.add("than-\tking", "T { N\tk I N");
result.add("thane", "T eI n");
result.add("thanh", "T { n");
result.add("thank", "T { N k");
result.add("thank-\tful", "T { N\tk f V l");
result.add("thank-\tful-\tly", "T { N\tk f V\tl i:");
result.add("thank-\tless", "T { N\tk l V s");
result.add("thanked", "T { N k t");
result.add("thanks", "T { N k s");
result.add("thanks-\tgi-\tving", "T { N\tk s g I\tv I N");
result.add("thar", "T Q@");
result.add("tharp", "T Q@ p");
result.add("that", "D { t");
result.add("that-\tche-\tri-\tsm", "T {\ttS @r\tI\tz V m");
result.add("that-\tche-\trite", "T {\ttS @r\taI t");
result.add("that-\tcher", "T {\ttS @r");
result.add("that-\tcher's", "T {\ttS @r z");
result.add("that-\tches", "T {\ttS V z");
result.add("thatch", "T { tS");
result.add("thatched", "T { tS t");
result.add("that's", "D { t s");
result.add("thaw", "T O:");
result.add("thawed", "T O: d");
result.add("thaws", "T O: z");
result.add("thax-\tter", "T { k\ts t @r");
result.add("thax-\tton", "T { k\ts t V n");
result.add("thay-\ter", "T eI\t@r");
result.add("thayne", "T eI n");
result.add("the", "D V");
result.add("the-\ta", "T i:\tV");
result.add("the-\ta-\tter", "T i:\tV\tt @r");
result.add("the-\ta-\tters", "T i:\tV\tt @r z");
result.add("the-\ta-\tter's", "T i:\tV\tt @r z");
result.add("the-\ta-\ttre", "T i:\tV\tt @r");
result.add("the-\ta-\ttres", "T i:\tV\tt @r z");
result.add("the-\ta-\ttre's", "T i:\tV\tt @r z");
result.add("the-\ta-\ttri-\tca-\tli-\tty", "T i:\t{ t\tr I\tk {\tl I\tt i:");
result.add("the-\ta-\ttri-\tcal", "T i:\t{ t\tr I\tk V l");
result.add("the-\ta-\ttri-\tcal-\tly", "T i:\t{ t\tr I\tk V\tl i:");
result.add("the-\tberge", "T e\tb @r dZ");
result.add("the-\tda", "T i:\td V");
result.add("the-\ti-\tsm", "T i:\tI\tz V m");
result.add("the-\tma-\ttic", "T i:\tm {\tt I k");
result.add("the-\tma-\ttical-\tly", "T V\tm {\tt I k\tl i:");
result.add("the-\to", "T i:\t@U");
result.add("the-\to-\tbald", "T i:\tV\tb V l d");
result.add("the-\to-\tcra-\tcy", "T i:\tQ k\tr V\ts i:");
result.add("the-\to-\tcra-\ttic", "T i:\tV k\tr {\tt I k");
result.add("the-\to-\tdo-\tra", "T i:\tV\td O@\tV");
result.add("the-\to-\tdor", "T i:\tV\td @r");
result.add("the-\to-\tdore", "T i:\tV\td O@");
result.add("the-\to-\tla", "T i:\tV\tl V");
result.add("the-\to-\tlo-\tgi-\tan", "T i:\tV\tl @U\tdZ i:\tV n");
result.add("the-\to-\tlo-\tgi-\tcal", "T i:\tV\tl Q\tdZ I\tk V l");
result.add("the-\to-\tlo-\tgians", "T i:\tV\tl @U\tdZ V n z");
result.add("the-\to-\tlo-\tgical-\tly", "T i:\tV\tl Q\tdZ I k\tl i:");
result.add("the-\to-\tlo-\tgy", "T i:\tQ\tl V\tdZ i:");
result.add("the-\to-\tpha-\tni-\ta", "T i:\tV\tf {\tn i:\tV");
result.add("the-\to-\tphi-\tla", "T eI\tV\tf i:\tl V");
result.add("the-\to-\tre-\tti-\tcal", "T i:\t@r\te\tt I\tk V l");
result.add("the-\to-\tre-\tti-\tcal-\tly", "T i:\t@r\te\tt I\tk V\tl i:");
result.add("the-\to-\tre-\tti-\tcian", "T i:\t@r\tV\tt I\tS V n");
result.add("the-\to-\tre-\tti-\tcians", "T i:\t@r\tV\tt I\tS V n z");
result.add("the-\to-\tri-\tzes", "T i:\t@r\taI\tz V z");
result.add("the-\to-\tri-\tzing", "T i:\t@r\taI\tz I N");
result.add("the-\to-\trist", "T i:\t@r\tI s t");
result.add("the-\to-\trists", "T i:\t@r\tI s t s");
result.add("the-\to-\trize", "T i:\t@r\taI z");
result.add("the-\to-\trized", "T i:\t@r\taI z d");
result.add("the-\ton", "T i:\tV n");
result.add("the-\tone", "T i:\tQ n");
result.add("the-\to's", "T i:\t@U z");
result.add("the-\tra", "T e@\tV");
result.add("the-\tra-\tpeu-\tti-\tcal-\tly", "T e@\tV p\tj u:\tt I\tk V\tl i:");
result.add("the-\tra-\tpeu-\ttic", "T e@\tV p\tj u:\tt I k");
result.add("the-\tra-\tpeu-\ttics", "T e@\tV p\tj u:\tt I k s");
result.add("the-\tra-\tpies", "T e@\tV\tp i: z");
result.add("the-\tra-\tpist", "T e@\tV\tp V s t");
result.add("the-\tra-\tpists", "T e@\tV\tp V s t s");
result.add("the-\tra-\tpist's", "T e@\tV\tp V s t s");
result.add("the-\tra-\tpy", "T e@\tV\tp i:");
result.add("the-\tre-\tsa", "th @r\ti:\ts V");
result.add("the-\tre'll", "D e@\tV l");
result.add("the-\trese", "T e@\ti: s");
result.add("the-\treu-\tpon", "D e@\tV\tp Q n");
result.add("the-\tri-\tot", "T I@\ti:\tQ t");
result.add("the-\tron", "T e@\tV n");
result.add("the-\troux", "T @r\tu:");
result.add("the-\tsau-\trus", "T V\ts O@\tV s");
result.add("the-\tses", "T i:\ts i: z");
result.add("the-\tsis", "T i:\ts I s");
result.add("the-\tta", "T eI\tt V");
result.add("the-\ttis", "T i:\tt I s");
result.add("thea-\tter-\tgo-\ter", "T i:\tt @r\tg @U\t@r");
result.add("thea-\tter-\tgo-\ters", "T i:\tt @r\tg @U\t@r z");
result.add("thea-\ttrics", "T i: t\tr I k s");
result.add("theall", "T i: l");
result.add("thebes", "T i: b z");
result.add("thec-\tla", "T e k\tl V");
result.add("thed-\tford", "T e d\tf @r d");
result.add("thee", "D i:");
result.add("theft", "T e f t");
result.add("thefts", "T e f t s");
result.add("thei-\tler", "T aI\tl @r");
result.add("thein", "T aI n");
result.add("their", "D e@");
result.add("their-\tself", "D e@\ts e l f");
result.add("theirs", "D e@ z");
result.add("theis", "D aI z");
result.add("theiss", "T aI s");
result.add("thek-\tla", "T e k\tl V");
result.add("thel-\tma", "T e l\tm V");
result.add("thel-\tma's", "T e l\tm V z");
result.add("them", "D e m");
result.add("them-\tself", "D e m\ts e l f");
result.add("them-\tselves", "D e m\ts e l v z");
result.add("theme", "T i: m");
result.add("themed", "T i: m d");
result.add("themes", "T i: m z");
result.add("then", "D e n");
result.add("thence", "D e n s");
result.add("thence-\tforth", "D e n\ts f O@ T");
result.add("theo-\trem", "T I@\tV m");
result.add("theo-\tries", "T I@\ti: z");
result.add("theo-\try", "T I@\ti:");
result.add("theo-\try's", "T I@\ti: z");
result.add("ther-\tmae", "T @r\tm i:");
result.add("ther-\tmal", "T @r\tm V l");
result.add("ther-\tmits", "T @r\tm I t s");
result.add("ther-\tmo", "T @r\tm @U");
result.add("ther-\tmo-\tme-\tter", "T @r\tm Q\tm V\tt @r");
result.add("ther-\tmo-\tme-\tters", "T @r\tm Q\tm V\tt @r z");
result.add("ther-\tmo-\tnuc-\tle-\tar", "T @r\tm @U\tn u: k\tl i:\t@r");
result.add("ther-\tmo-\tplas-\ttic", "T @r\tm V p\tl { s\tt I k");
result.add("ther-\tmo-\tplas-\ttics", "T @r\tm V p\tl { s\tt I k s");
result.add("ther-\tmo-\tset-\tting", "T @r\tm @U\ts e\tt I N");
result.add("ther-\tmos", "T @r\tm V s");
result.add("ther-\tmos-\ttat", "T @r\tm V s\tt { t");
result.add("ther-\tmos-\ttats", "T @r\tm V s\tt { t s");
result.add("there", "D e@");
result.add("there-\ta-\tbouts", "D e@\tV\tb aU t s");
result.add("there-\taf-\tter", "D e@\t{ f\tt @r");
result.add("there-\tby", "D e@\tb aI");
result.add("there-\tfore", "D e@\tf O@");
result.add("there-\tin", "D e@\tI n");
result.add("there-\tof", "T e@\tV v");
result.add("there'd", "D e@ d");
result.add("there's", "D e@ z");
result.add("therm", "T @r m");
result.add("thes-\tpi-\tan", "T e s\tp i:\tV n");
result.add("these", "D i: z");
result.add("thet-\tford", "T e t\tf @r d");
result.add("theu-\trer", "T @r\t@r");
result.add("thew", "T u:");
result.add("they", "D eI");
result.add("they'd", "D eI d");
result.add("they'll", "D eI l");
result.add("they're", "D e@");
result.add("they've", "D eI v");
result.add("thi", "T i:");
result.add("thi-\ta-\tmin", "T aI\tV\tm V n");
result.add("thi-\tbault", "T V\tb @U");
result.add("thi-\ter", "T i:\t@r");
result.add("thi-\to-\tdig-\tly-\tcol", "T aI\t@U\td I g\tl I\tk Q l");
result.add("thi-\to-\tkol", "T aI\tV\tk O: l");
result.add("thi-\ts'll", "D I\ts V l");
result.add("thi-\tstle", "T I\ts V l");
result.add("thi-\tstles", "T I\ts V l z");
result.add("thic-\tke-\tner", "T I\tk V\tn @r");
result.add("thic-\tke-\tning", "T I\tk V\tn I N");
result.add("thic-\tken", "T I\tk V n");
result.add("thic-\tkened", "T I\tk V n d");
result.add("thic-\tkens", "T I\tk V n z");
result.add("thic-\tker", "T I\tk @r");
result.add("thic-\tkest", "T I\tk V s t");
result.add("thic-\tket", "T I\tk V t");
result.add("thic-\tkets", "T I\tk V t s");
result.add("thick", "T I k");
result.add("thick-\thead", "T I k\th e d");
result.add("thick-\tly", "T I k\tl i:");
result.add("thick-\tness", "T I k\tn V s");
result.add("thie-\tlen", "T i:\tl V n");
result.add("thie-\tve-\try", "T i:\tv @r\ti:");
result.add("thie-\tving", "T i:\tv I N");
result.add("thief", "T i: f");
result.add("thief's", "T i: f s");
result.add("thier-\try", "T I@\ti:");
result.add("thieves", "T i: v z");
result.add("thieves'", "T i: v z");
result.add("thigh", "T aI");
result.add("thighs", "T aI z");
result.add("thill", "T I l");
result.add("thim-\tble", "T I m\tb V l");
result.add("thin", "T I n");
result.add("thin-\tgy", "T I\tN i:");
result.add("thin-\tker", "T I N\tk @r");
result.add("thin-\tkers", "T I N\tk @r z");
result.add("thin-\tking", "T I N\tk I N");
result.add("thin-\tly", "T I n\tl i:");
result.add("thin-\tner", "T I\tn @r");
result.add("thin-\tness", "T I n\tn V s");
result.add("thin-\tnest", "T I\tn V s t");
result.add("thin-\tning", "T I\tn I N");
result.add("thine", "D aI n");
result.add("thing", "T I N");
result.add("things", "T I N z");
result.add("thing's", "T I N z");
result.add("think", "T I N k");
result.add("thinks", "T I N k s");
result.add("thinned", "T I n d");
result.add("thins", "T I n z");
result.add("thir-\tteen", "T @r\tt i: n");
result.add("thir-\tteen's", "T @r\tt i: n z");
result.add("thir-\tteenth", "T @r\tt i: n T");
result.add("thir-\tteenths", "T @r\tt i: n T s");
result.add("thir-\tti-\teth", "T @r\tt i:\tV T");
result.add("thir-\tties", "T @r\tt i: z");
result.add("thir-\tty", "T @r\td i:");
result.add("thir-\tty-\tsome-\tthing", "T @r\tt i:\ts V m\tT I N");
result.add("thir-\tty's", "T @r\td i: z");
result.add("thir-\tza", "T @r\tz V");
result.add("third", "T @r d");
result.add("third-\tly", "T @r d\tl i:");
result.add("thirds", "T @r d z");
result.add("thirs-\tty", "T @r s\tt i:");
result.add("thirst", "T @r s t");
result.add("this", "D I s");
result.add("this-\tsen", "T I\ts V n");
result.add("tho", "D @U");
result.add("tho-\tma", "T @U\tm V");
result.add("tho-\tma-\tsi-\tna", "T @U\tm Q\ts i:\tn V");
result.add("tho-\tma-\tsi-\tne", "T @U\tm Q\ts i:\tn i:");
result.add("tho-\tman", "T @U\tm V n");
result.add("tho-\tmas", "th Q\tm V s");
result.add("tho-\tmas-\tville", "th Q\tm V s\tv I l");
result.add("tho-\tra", "T O@\tV");
result.add("tho-\tra-\tcic", "T O@\t{\ts I k");
result.add("tho-\trax", "T O@\t{ k s");
result.add("tho-\treau", "T @r\t@U");
result.add("tho-\tri-\tum", "T Q@\ti:\tV m");
result.add("tho-\trough", "T @r\t@U");
result.add("tho-\trough-\tbred", "T @r\t@U b\tr e d");
result.add("tho-\trough-\tbreds", "T @r\t@U b\tr e d z");
result.add("tho-\trough-\tfare", "T @r\t@U\tf e@");
result.add("tho-\trough-\tfares", "T @r\t@U\tf e@ z");
result.add("tho-\trough-\tly", "T @r\t@U\tl i:");
result.add("tho-\trough-\tness", "T @r\t@U\tn V s");
result.add("thole", "T @U l");
result.add("thom", "th Q m");
result.add("thom-\tsen", "T Q m\ts V n");
result.add("thom-\tson", "th Q m\ts V n");
result.add("thom-\tson's", "th Q m\ts V n z");
result.add("thome", "T @U m");
result.add("thomp-\tson", "th Q m\tp s V n");
result.add("thomp-\tsons", "th Q m\tp s V n z");
result.add("thomp-\tson's", "th Q m\tp s V n z");
result.add("thon", "T Q n");
result.add("thone", "T @U n");
result.add("thong", "T O: N");
result.add("thor", "T O@");
result.add("thor-\tbert", "T O@\tb @r t");
result.add("thor-\tburn", "T O@\tb @r n");
result.add("thor-\tdi-\ta", "T O@\td i:\tV");
result.add("thor-\tdis", "T O@\td I s");
result.add("thor-\tley", "T O@\tl i:");
result.add("thor-\tman", "T O@\tm V n");
result.add("thor-\tner", "T O@\tn @r");
result.add("thor-\tni-\test", "T O@\tn i:\tV s t");
result.add("thor-\tny", "T O@\tn i:");
result.add("thor-\tsten", "th O@ s\tt V n");
result.add("thor-\tvald", "T O@\tv Q l d");
result.add("thorn", "T O@ n");
result.add("thorn-\tburg", "T O@ n\tb @r g");
result.add("thorn-\tdike", "T O@ n\td I k");
result.add("thorn-\tdyke", "T O@ n\td aI k");
result.add("thorn-\tton", "T O@ n\tt V n");
result.add("thorne", "T O@ n");
result.add("thorns", "T O@ n z");
result.add("thorn's", "T O@ n z");
result.add("thorp", "T O@ p");
result.add("thorpe", "T O@ p");
result.add("those", "D @U z");
result.add("thou", "D aU");
result.add("thou-\tsand", "T aU\tz V n d");
result.add("thou-\tsands", "T aU\tz V n d z");
result.add("thou-\tsandth", "T aU\tz V n d T");
result.add("thou-\tsandths", "T aU\tz V n d T s");
result.add("though", "D @U");
result.add("thought", "T O: t");
result.add("thought-\tful", "T O: t\tf V l");
result.add("thought-\tful-\tly", "T O: t\tf V\tl i:");
result.add("thought-\tful-\tness", "T O: t\tf V l\tn V s");
result.add("thought-\tless", "T O: t\tl V s");
result.add("thoughts", "T O: t s");
result.add("thous", "D aU z");
result.add("thra-\tsher", "T r {\tS @r");
result.add("thra-\tshes", "T r {\tS V z");
result.add("thra-\tshing", "T r {\tS I N");
result.add("thrall", "T r O: l");
result.add("thrash", "T r { S");
result.add("thrashed", "T r { S t");
result.add("thre-\tsher", "T r e\tS @r");
result.add("thre-\tshold", "T r e\tS @U l d");
result.add("thre-\tsholds", "T r e S\th @U l d z");
result.add("threa-\tded", "T r e\td V d");
result.add("threa-\tding", "T r e\td I N");
result.add("threa-\tte-\tning", "T r e\tt V\tn I N");
result.add("threa-\tte-\tning-\tly", "T r e\tt V\tn I N\tl i:");
result.add("threa-\tten", "T r e\tt V n");
result.add("threa-\ttened", "T r e\tt V n d");
result.add("threa-\ttens", "T r e\tt V n z");
result.add("thread", "T r e d");
result.add("thread-\tbare", "T r e d\tb e@");
result.add("thread-\tfin", "T r e d\tf I n");
result.add("threads", "T r e d z");
result.add("threat", "T r e t");
result.add("threats", "T r e t s");
result.add("three", "T r i:");
result.add("three-\tfold", "T r i:\tf @U l d");
result.add("three-\tsome", "T r i:\ts V m");
result.add("threes", "T r i: z");
result.add("three's", "T r i: z");
result.add("threl-\tkeld", "T r e l\tk e l d");
result.add("thresh", "T r e S");
result.add("threw", "T r u:");
result.add("thri-\tving", "T r aI\tv I N");
result.add("thrice", "T r aI s");
result.add("thrif-\tti-\ter", "T r I f\tt i:\t@r");
result.add("thrif-\tty", "T r I f\tt i:");
result.add("thrift", "T r I f t");
result.add("thrifts", "T r I f t s");
result.add("thrift's", "T r I f t s");
result.add("thril-\tler", "T r I\tl @r");
result.add("thril-\tlers", "T r I\tl @r z");
result.add("thril-\tling", "T r I\tl I N");
result.add("thrill", "T r I l");
result.add("thrilled", "T r I l d");
result.add("thrills", "T r I l z");
result.add("thrips", "T r I p s");
result.add("thris-\tting", "T r I s\tt I N");
result.add("thrive", "T r aI v");
result.add("thrived", "T r aI v d");
result.add("thrives", "T r aI v z");
result.add("thro-\twa-\tway", "T r @U\tV\tw eI");
result.add("thro-\twer", "T r @U\t@r");
result.add("thro-\twers", "T r @U\t@r z");
result.add("thro-\twing", "T r @U\tI N");
result.add("throa-\tted", "T r @U\tt V d");
result.add("throat", "T r @U t");
result.add("throats", "T r @U t s");
result.add("throb", "T r Q b");
result.add("throb-\tbing", "T r Q\tb I N");
result.add("throes", "T r @U z");
result.add("throm-\tbo-\tly-\tsis", "T r Q m\tb @U\tl V\ts V s");
result.add("throm-\tbo-\tly-\ttic", "T r Q m\tb @U\tl I\tt I k");
result.add("throm-\tbo-\tsis", "T r Q m\tb @U\ts I s");
result.add("throne", "T r @U n");
result.add("throne-\tber-\try", "T r @U n\tb e@\ti:");
result.add("throng", "T r O: N");
result.add("thronged", "T r O: N d");
result.add("throngs", "T r O: N z");
result.add("throop", "T r u: p");
result.add("throt-\tt-\tling", "T r Q\tt V\tl I N");
result.add("throt-\ttle", "T r Q\tt V l");
result.add("throt-\ttled", "T r Q\tt V l d");
result.add("throt-\ttles", "T r Q\tt V l z");
result.add("through", "T r u:");
result.add("through-\tout", "T r u:\taU t");
result.add("through-\tput", "T r u:\tp U t");
result.add("through-\tway", "T r u:\tw eI");
result.add("throve", "T r @U v");
result.add("throw", "T r @U");
result.add("throw-\tback", "T r @U\tb { k");
result.add("thrown", "T r @U n");
result.add("throws", "T r @U z");
result.add("thru", "T r u:");
result.add("thru-\tshes", "T r V\tS V z");
result.add("thru-\tway", "T r u:\tw eI");
result.add("thrus-\tter", "T r V s\tt @r");
result.add("thrus-\tters", "T r V s\tt @r z");
result.add("thrus-\tting", "T r V s\tt I N");
result.add("thrush", "T r V S");
result.add("thrust", "T r V s t");
result.add("thrusts", "T r V s t s");
result.add("thud", "T V d");
result.add("thug", "T V g");
result.add("thug-\tge-\try", "T V\tg @r\ti:");
result.add("thugs", "T V g z");
result.add("thum-\tbing", "T V\tm I N");
result.add("thum-\tper", "T V m\tp @r");
result.add("thum-\tping", "T V m\tp I N");
result.add("thumb", "T V m");
result.add("thumb-\tnail", "T V m\tn eI l");
result.add("thumbed", "T V m d");
result.add("thumbs", "T V m z");
result.add("thump", "T V m p");
result.add("thumped", "T V m p t");
result.add("thumps", "T V m p s");
result.add("thun", "T V n");
result.add("thun-\tde-\tring", "T V n\td @r\tI N");
result.add("thun-\tde-\trous", "T V n\td @r\tV s");
result.add("thun-\tder", "T V n\td @r");
result.add("thun-\tder-\tbird", "T V n\td @r\tb @r d");
result.add("thun-\tder-\tbirds", "T V n\td @r\tb @r d z");
result.add("thun-\tder-\tbolt", "T V n\td @r\tb O: l t");
result.add("thun-\tder-\tsho-\twer", "T V n\td @r\tS aU\tw @r");
result.add("thun-\tder-\tsho-\twers", "T V n\td @r\tS aU\tw @r z");
result.add("thun-\tder-\tstorm", "T V n\td @r s\tt O@ m");
result.add("thun-\tder-\tstorms", "T V n\td @r s\tt O@ m z");
result.add("thun-\tder-\tstruck", "T V n\td @r s\tt r V k");
result.add("thun-\tdered", "T V n\td @r d");
result.add("thun-\tders", "T V n\td @r z");
result.add("thunk", "T V n k");
result.add("thur", "D @r");
result.add("thur-\tber", "T @r\tb @r");
result.add("thur-\tgood", "T @r\tg U d");
result.add("thur-\tlow", "T @r\tl @U");
result.add("thur-\tman", "T @r\tm V n");
result.add("thur-\tmond", "T @r\tm V n d");
result.add("thur-\tmond's", "T @r\tm V n d z");
result.add("thur-\tnau", "T @r\tn @U");
result.add("thurm", "T @r m");
result.add("thurn", "T @r n");
result.add("thurs-\tby", "T @r s\tb i:");
result.add("thurs-\tday", "T @r z\td eI");
result.add("thurs-\tdays", "T @r z\td eI z");
result.add("thurs-\tday's", "T @r z\td i: z");
result.add("thurs-\ttan", "T @r s\tt V n");
result.add("thurs-\tton", "T @r s\tt V n");
result.add("thus", "D V s");
result.add("thus-\tly", "D V s\tl i:");
result.add("thwar-\tted", "T w O@\tt V d");
result.add("thwar-\tting", "T w O@\tt I N");
result.add("thwart", "T w O@ t");
result.add("thwarts", "T w O@ t s");
result.add("thwing", "T w I N");
result.add("thy", "D aI");
result.add("thy-\tmi-\tdine", "T I\tm I\td i: n");
result.add("thy-\troid", "T aI\tr OI d");
result.add("thyme", "T aI m");
result.add("thys-\tsen", "th aI\ts V n");
result.add("thys-\tsen's", "th aI\ts V n z");
result.add("ti", "th i:");
result.add("ti-\ta", "th i:\tV");
result.add("ti-\ta-\tnan-\tmen", "th i:\te\tn { n\tm e n");
result.add("ti-\ta-\tra", "th i:\tQ@\tV");
result.add("ti-\tan-\tjin", "th i:\t{ n\tdZ I n");
result.add("ti-\tbe-\ttan", "th V\tb e\tt V n");
result.add("ti-\tbe-\ttans", "th V\tb e\tt V n z");
result.add("ti-\tber", "th aI\tb @r");
result.add("ti-\tbet", "th V\tb e t");
result.add("ti-\tbi-\ta", "th I\tb i:\tV");
result.add("ti-\tcer", "th aI\ts @r");
result.add("ti-\tchy", "th I\ttS i:");
result.add("ti-\tcon-\tde-\tro-\tga", "th aI\tk Q n\td @r\t@U\tg V");
result.add("ti-\tcon-\tde-\tro-\tga's", "th aI\tk Q n\td @r\t@U\tg V z");
result.add("ti-\tdal", "th aI\td V l");
result.add("ti-\tding", "th aI\td I N");
result.add("ti-\tdings", "th aI\td I N z");
result.add("ti-\tdy", "th aI\td i:");
result.add("ti-\tger", "th aI\tg @r");
result.add("ti-\tgers", "th aI\tg @r z");
result.add("ti-\tger's", "th aI\tg @r z");
result.add("ti-\tgon", "th I\tg V n");
result.add("ti-\tjua-\tna", "th i:\tw Q\tn V");
result.add("ti-\tmer", "th aI\tm @r");
result.add("ti-\tmers", "th aI\tm @r z");
result.add("ti-\tmex", "th aI\tm e k s");
result.add("ti-\tmi-\tdi-\tty", "th V\tm I\td I\tt i:");
result.add("ti-\tmi-\tso-\ta-\tra", "th I\tm I\ts @U\tQ@\tV");
result.add("ti-\tmid", "th I\tm I d");
result.add("ti-\tmid-\tly", "th I\tm I d\tl i:");
result.add("ti-\tming", "th aI\tm I N");
result.add("ti-\tmo-\trese", "th i:\tm O@\ti: z");
result.add("ti-\tmo-\trous", "th I\tm @r\tV s");
result.add("ti-\tmo-\tthe-\ta", "th I\tm V\tD i:\tV");
result.add("ti-\tmo-\tthy", "th I\tm V\tT i:");
result.add("ti-\tmon", "th aI\tm V n");
result.add("ti-\tmor", "th i:\tm O@");
result.add("ti-\tmor's", "th i:\tm O@ z");
result.add("ti-\tna", "th i:\tn V");
result.add("ti-\tna's", "th i:\tn V z");
result.add("ti-\tni-\ter", "th aI\tn i:\t@r");
result.add("ti-\tni-\test", "th aI\tn i:\tV s t");
result.add("ti-\tno", "th i:\tn @U");
result.add("ti-\tny", "th aI\tn i:");
result.add("ti-\tpoff", "th I\tp O: f");
result.add("ti-\tra-\tmi-\tsu", "th I@\tV\tm I\ts u:");
result.add("ti-\tra-\tna", "th I@\tQ\tn V");
result.add("ti-\trade", "th aI\tr eI d");
result.add("ti-\trades", "th aI\tr eI d z");
result.add("ti-\trane", "th I@\teI n");
result.add("ti-\tre", "th aI\t@r");
result.add("ti-\tre-\tless", "th aI\t@r\tl V s");
result.add("ti-\tre-\tsome", "th aI\t@r\ts V m");
result.add("ti-\tred", "th aI\t@r d");
result.add("ti-\tred-\tness", "th aI\t@r d\tn V s");
result.add("ti-\tres", "th aI\t@r z");
result.add("ti-\tring", "th aI\tr I N");
result.add("ti-\tros", "th aI\tr @U z");
result.add("ti-\tsh's", "th I\tS V z");
result.add("ti-\tta", "th i:\tt V");
result.add("ti-\tta-\tnate", "th aI\tt V\tn eI t");
result.add("ti-\tta-\tni-\tum", "th aI\tt eI\tn i:\tV m");
result.add("ti-\tta-\tnia", "th V\tt Q n\tj V");
result.add("ti-\tta-\tnic", "th aI\tt {\tn I k");
result.add("ti-\ttan", "th aI\tt V n");
result.add("ti-\ttans", "th aI\tt V n z");
result.add("ti-\tthing", "th aI\tD I N");
result.add("ti-\ttian", "th I\tS V n");
result.add("ti-\ttil-\tla-\tted", "th I\tt I\tl eI\tt I d");
result.add("ti-\ttil-\tla-\tting", "th I\tt I\tl eI\tt I N");
result.add("ti-\ttil-\tla-\ttion", "th I\tt I\tl eI\tS V n");
result.add("ti-\ttil-\tlate", "th I\tt I\tl eI t");
result.add("ti-\ttle", "th aI\tt V l");
result.add("ti-\ttle-\thol-\tder", "th aI\tt V l\th @U l\td @r");
result.add("ti-\ttled", "th aI\tt V l d");
result.add("ti-\ttles", "th aI\tt V l z");
result.add("ti-\tto", "th i:\tt @U");
result.add("ti-\tto's", "th i:\tt @U z");
result.add("ti-\ttu-\tlar", "th I\ttS V\tl @r");
result.add("ti-\ttus", "th aI\tt V s");
result.add("ti-\ttus-\tville", "th aI\tt V s\tv I l");
result.add("ti-\tvo-\tli", "th I\tv V\tl i:");
result.add("tian", "th j Q n");
result.add("tib-\tbett", "th I\tb e t");
result.add("tib-\tbetts", "th I\tb e t s");
result.add("tib-\tbie", "th I\tb i:");
result.add("tib-\tbitts", "th I\tb I t s");
result.add("tib-\tby", "th I\tb i:");
result.add("tibbs", "th I b z");
result.add("tic", "th I k");
result.add("tic-\tk-\tlish", "th I\tk V\tl I S");
result.add("tic-\tke-\tted", "th I\tk V\tt V d");
result.add("tic-\tke-\tting", "th I\tk V\tt I N");
result.add("tic-\tker", "th I\tk @r");
result.add("tic-\tket", "th I\tk V t");
result.add("tic-\tket-\tless", "th I\tk V t\tl V s");
result.add("tic-\tket-\tmas-\tter", "th I\tk V t\tm { s\tt @r");
result.add("tic-\tket-\tmas-\tter's", "th I\tk V t\tm { s\tt @r z");
result.add("tic-\tkets", "th I\tk V t s");
result.add("tic-\tket's", "th I\tk V t s");
result.add("tic-\tking", "th I\tk I N");
result.add("tic-\tkle", "th I\tk V l");
result.add("tic-\tkled", "th I\tk V l d");
result.add("tic-\tkles", "th I\tk V l z");
result.add("tice", "th aI s");
result.add("tick", "th I k");
result.add("tick-\tnor", "th I k\tn @r");
result.add("ticked", "th I k t");
result.add("ticks", "th I k s");
result.add("tics", "th I k s");
result.add("tid-\tbit", "th I d\tb I t");
result.add("tid-\tbits", "th I d\tb I t s");
result.add("tid-\tdly-\twinks", "th I d\tl V\tw I N k s");
result.add("tid-\twell", "th I d\tw V l");
result.add("tide", "th aI d");
result.add("tide-\twa-\tter", "th aI d\tw O:\tt @r");
result.add("tides", "th aI d z");
result.add("tie", "th aI");
result.add("tie-\ting", "th aI\tI N");
result.add("tie-\tless", "th aI\tl V s");
result.add("tie-\tnan-\tmen", "th j e\tn V n\tm e n");
result.add("tied", "th aI d");
result.add("tiede-\tman", "th i: d\tm V n");
result.add("tien", "th j e n");
result.add("tier", "th i: r");
result.add("tier-\tnan", "th I@\tn V n");
result.add("tier-\tney", "th I@\tn i:");
result.add("tierce", "th i: r s");
result.add("tiered", "th i: r d");
result.add("tiers", "th i: r z");
result.add("ties", "th aI z");
result.add("tif-\tfa-\tny", "th I\tf V\tn i:");
result.add("tif-\tfa-\tny's", "th I\tf V\tn i: z");
result.add("tif-\tfin", "th I\tf I n");
result.add("tif-\tton", "th I f\tt V n");
result.add("tiff", "th I f");
result.add("tift", "th I f t");
result.add("tig", "th I g");
result.add("tig-\trean", "th I g\tr i: n");
result.add("tig-\tris", "th aI g\tr I s");
result.add("tigges", "th I g z");
result.add("tigh-\tte-\tning", "th aI\tt V\tn I N");
result.add("tigh-\tte-\tnings", "th aI\tt V\tn I N z");
result.add("tigh-\tten", "th aI\tt V n");
result.add("tigh-\ttened", "th aI\tt V n d");
result.add("tigh-\ttens", "th aI\tt V n z");
result.add("tigh-\tter", "th aI\tt @r");
result.add("tigh-\ttest", "th aI\tt V s t");
result.add("tight", "th aI t");
result.add("tight-\tfis-\tted", "th aI t\tf I s\tt V d");
result.add("tight-\tly", "th aI t\tl i:");
result.add("tight-\tness", "th aI t\tn V s");
result.add("tight-\trope", "th aI t\tr @U p");
result.add("tight-\twad", "th aI t\tw Q d");
result.add("tights", "th aI t s");
result.add("tike", "th aI k");
result.add("tikes", "th aI k s");
result.add("til", "th I l");
result.add("til-\tbu-\try", "th I l\tb e@\ti:");
result.add("til-\tda", "th I l\td V");
result.add("til-\tden", "th I l\td V n");
result.add("til-\tford", "th I l\tf @r d");
result.add("til-\tle-\try", "th I\tl @r\ti:");
result.add("til-\tler", "th I\tl @r");
result.add("til-\tley", "th I\tl i:");
result.add("til-\tlie", "th I\tl i:");
result.add("til-\tling", "th I\tl I N");
result.add("til-\tlot-\tson", "th I\tl V t\ts V n");
result.add("til-\tly", "th I\tl i:");
result.add("til-\tney", "th I l\tn i:");
result.add("til-\tted", "th I l\tt V d");
result.add("til-\tting", "th I l\tt I N");
result.add("til-\tton", "th I l\tt V n");
result.add("tile", "th aI l");
result.add("tiled", "th aI l d");
result.add("tiles", "th aI l z");
result.add("tilgh-\tman", "th I l\tm V n");
result.add("till", "th I l");
result.add("till-\tman", "th I l\tm V n");
result.add("till-\tson", "th I l\ts V n");
result.add("tilt", "th I l t");
result.add("tilth", "th I l T");
result.add("tilts", "th I l t s");
result.add("tim", "th I m");
result.add("tim-\tber", "th I m\tb @r");
result.add("tim-\tber-\tland", "th I m\tb @r\tl { n d");
result.add("tim-\tber-\tlands", "th I m\tb @r\tl { n d z");
result.add("tim-\tber-\tline", "th I m\tb @r\tl aI n");
result.add("tim-\tber-\tman", "th I m\tb @r\tm V n");
result.add("tim-\tbers", "th I m\tb @r z");
result.add("tim-\tbre", "th I m\tb @r");
result.add("tim-\tbuk-\ttu", "th I m\tb V k\tt u:");
result.add("tim-\tken", "th I m\tk V n");
result.add("tim-\tmer", "th I\tm @r");
result.add("tim-\tmie", "th I\tm i:");
result.add("tim-\tmons", "th I\tm V n z");
result.add("tim-\tmy", "th I\tm i:");
result.add("tim-\tpa-\tni", "th I m\tp V\tn i:");
result.add("timb-\tlin", "th I m\tb l I n");
result.add("time", "th aI m");
result.add("time-\tframe", "th aI m\tf r eI m");
result.add("time-\tless", "th aI m\tl V s");
result.add("time-\tli-\tness", "th aI m\tl i:\tn V s");
result.add("time-\tline", "th aI m\tl aI n");
result.add("time-\tlines", "th aI m\tl aI n z");
result.add("time-\tly", "th aI m\tl i:");
result.add("time-\tout", "th aI\tm aU t");
result.add("time-\tpiece", "th aI m\tp i: s");
result.add("time-\tshare", "th aI m\tS e@");
result.add("time-\tta-\tble", "th aI m\tt eI\tb V l");
result.add("time-\tta-\tbles", "th aI m\tt eI\tb V l z");
result.add("timed", "th aI m d");
result.add("times", "th aI m z");
result.add("time's", "th aI m z");
result.add("timms", "th I m z");
result.add("timp-\tson", "th I m\tp s V n");
result.add("tims", "th I m z");
result.add("tim's", "th I m z");
result.add("tin", "th I n");
result.add("tin-\tdal", "th I n\td V l");
result.add("tin-\tdall", "th I n\td V l");
result.add("tin-\tder", "th I n\td @r");
result.add("tin-\tder-\tbox", "th I n\td @r\tb Q k s");
result.add("tin-\tg-\tler", "th I N\tg V\tl @r");
result.add("tin-\tg-\tling", "th I N\tg V\tl I N");
result.add("tin-\tgen", "th I\tN V n");
result.add("tin-\tgey", "th I N\tg i:");
result.add("tin-\tgle", "th I N\tg V l");
result.add("tin-\tk-\tler", "th I N\tk V\tl @r");
result.add("tin-\tk-\tling", "th I N\tk V\tl I N");
result.add("tin-\tke-\trer", "th I N\tk @r\t@r");
result.add("tin-\tke-\trers", "th I N\tk @r\t@r z");
result.add("tin-\tke-\tring", "th I N\tk @r\tI N");
result.add("tin-\tker", "th I N\tk @r");
result.add("tin-\tkered", "th I N\tk @r d");
result.add("tin-\tker's", "th I N\tk @r z");
result.add("tin-\tkle", "th I N\tk V l");
result.add("tin-\tkled", "th I N\tk V l d");
result.add("tin-\tley", "th I n\tl i:");
result.add("tin-\tman", "th I n\tm { n");
result.add("tin-\tny", "th I\tn i:");
result.add("tin-\tsel", "th I n\ts V l");
result.add("tin-\tsel-\ttown", "th I n\ts V l\tt aU n");
result.add("tin-\tted", "th I n\tt V d");
result.add("tin-\ttype", "th I n\tt aI p");
result.add("tinc-\tture", "th I N\tk tS @r");
result.add("tinc-\ttures", "th I N\tk tS @r z");
result.add("tine", "th aI n");
result.add("tines", "th aI n z");
result.add("ting", "th I N");
result.add("ting-\tley", "th I N\tg l i:");
result.add("tinge", "th I n dZ");
result.add("tinged", "th I N d");
result.add("tins", "th I n z");
result.add("tins-\tley", "th I n\ts l i:");
result.add("tins-\tman", "th I n\ts m V n");
result.add("tint", "th I n t");
result.add("tints", "th I n t s");
result.add("tip", "th I p");
result.add("tip-\toff", "th I\tp O: f");
result.add("tip-\tpe-\tra-\try", "th I\tp @r\te@\ti:");
result.add("tip-\tper", "th I\tp @r");
result.add("tip-\tpers", "th I\tp @r z");
result.add("tip-\tpet", "th I\tp V t");
result.add("tip-\tpets", "th I\tp e t s");
result.add("tip-\tpett", "th I\tp e t");
result.add("tip-\tping", "th I\tp I N");
result.add("tip-\tple", "th I\tp V l");
result.add("tip-\tpy", "th I\tp i:");
result.add("tip-\tsy", "th I p\ts i:");
result.add("tip-\ttoe", "th I p\tt @U");
result.add("tip-\ttoe-\ting", "th I p\tt @U\tI N");
result.add("tip-\ttoed", "th I p\tt @U d");
result.add("tip-\tton", "th I p\tt V n");
result.add("tipp", "th I p");
result.add("tipped", "th I p t");
result.add("tips", "th I p s");
result.add("tips-\tter", "th I p\ts t @r");
result.add("tir-\trell", "th I@\teI l");
result.add("tire-\tless-\tly", "th aI r\tl V s\tl i:");
result.add("tire-\tma-\tker", "th aI r\tm eI\tk @r");
result.add("tis", "th I z");
result.add("tis-\tdale", "th I s\td eI l");
result.add("tis-\tsue", "th I s\tj u:");
result.add("tis-\tsues", "th I s\tj u: z");
result.add("tish", "th I S");
result.add("tit", "th I t");
result.add("tit-\tfor-\ttat", "th I t\tf O@\tt { t");
result.add("tit-\tman", "th I t\tm V n");
result.add("tit-\tter", "th I\tt @r");
result.add("tit-\ttle", "th I\tt V l");
result.add("tithe", "th aI D");
result.add("tiz-\tzy", "th I\tz i:");
result.add("tja-\tden", "dZ eI\td V n");
result.add("tlin-\tgit", "th l i: N\tg I t");
result.add("to", "th u:");
result.add("to-\ta", "th @U\tV");
result.add("to-\tba-\tgo", "th V\tb eI\tg @U");
result.add("to-\tbac-\tco", "th V\tb {\tk @U");
result.add("to-\tbac-\tcos", "th V\tb {\tk @U z");
result.add("to-\tbac-\tco's", "th V\tb {\tk @U z");
result.add("to-\tback", "tS u:\tb { k");
result.add("to-\tbey", "th @U\tb i:");
result.add("to-\tbi-\tas", "th V\tb aI\tV s");
result.add("to-\tbie", "th @U\tb i:");
result.add("to-\tbin", "th @U\tb I n");
result.add("to-\tbog-\tgan", "th V\tb Q\tg V n");
result.add("to-\tbog-\tgans", "th V\tb Q\tg V n z");
result.add("to-\tby", "th @U\tb i:");
result.add("to-\tda", "th @U\td V");
result.add("to-\tday", "th V\td eI");
result.add("to-\tday'll", "th V\td eI l");
result.add("to-\tdays", "th V\td eI z");
result.add("to-\tday's", "th V\td eI z");
result.add("to-\tfu", "th @U\tf u:");
result.add("to-\tga", "th @U\tg V");
result.add("to-\tge-\tther", "th V\tg e\tD @r");
result.add("to-\tge-\tther-\tness", "th V\tg e\tD @r\tn V s");
result.add("to-\tge-\tthers", "th V\tg e\tD @r z");
result.add("to-\tgo", "th @U\tg @U");
result.add("to-\tke-\tni-\tsm", "th @U\tk V\tn I\tz V m");
result.add("to-\tken", "th @U\tk V n");
result.add("to-\tkens", "th @U\tk V n z");
result.add("to-\tki-\to", "th @U\tk i:\t@U");
result.add("to-\tkos", "th @U\tk @U s");
result.add("to-\tky-\to", "th @U\tk i:\t@U");
result.add("to-\tky-\to's", "th @U\tk i:\t@U z");
result.add("to-\tlan", "th @U\tl V n");
result.add("to-\tland", "th @U\tl V n d");
result.add("to-\tlar", "th @U\tl @r");
result.add("to-\tle-\tdo", "th V\tl i:\td @U");
result.add("to-\tle-\tra-\tble", "th Q\tl @r\tV\tb V l");
result.add("to-\tle-\tra-\tted", "th Q\tl @r\teI\tt V d");
result.add("to-\tle-\tra-\tting", "th Q\tl @r\teI\tt I N");
result.add("to-\tle-\tra-\ttion", "th Q\tl @r\teI\tS V n");
result.add("to-\tle-\tran-\tces", "th Q\tl @r\tV n\ts V z");
result.add("to-\tle-\trance", "th Q\tl @r\tV n s");
result.add("to-\tle-\trant", "th Q\tl @r\tV n t");
result.add("to-\tle-\trate", "th Q\tl @r\teI t");
result.add("to-\tle-\trates", "th O:\tl @r\teI t s");
result.add("to-\tler", "th @U\tl @r");
result.add("to-\tma", "th @U\tm V");
result.add("to-\tma-\thawk", "th Q\tm V\th O: k");
result.add("to-\tma-\thawks", "th Q\tm V\th O: k s");
result.add("to-\tma-\tsi-\tna", "th O:\tm V\ts i:\tn V");
result.add("to-\tma-\tsi-\tne", "th @U\tm Q\ts i:\tn i:");
result.add("to-\tma-\tso", "th @U\tm Q\ts @U");
result.add("to-\tma-\tto", "th V\tm eI\tt @U");
result.add("to-\tma-\ttoes", "th V\tm eI\tt @U z");
result.add("to-\tman", "th @U\tm V n");
result.add("to-\tmas", "th @U\tm Q s");
result.add("to-\tmor-\trow", "th V\tm Q@\t@U");
result.add("to-\tmor-\trows", "th V\tm Q@\t@U z");
result.add("to-\tmor-\trow's", "th V\tm Q@\t@U z");
result.add("to-\tna-\tli-\tties", "th @U\tn {\tl I\tt i: z");
result.add("to-\tna-\tli-\tty", "th @U\tn {\tl I\tt i:");
result.add("to-\tna-\twan-\tda", "th Q\tn V\tw Q n\td V");
result.add("to-\tnal", "th @U\tn V l");
result.add("to-\tner", "th @U\tn @r");
result.add("to-\tney", "th @U\tn i:");
result.add("to-\tni", "th @U\tn i:");
result.add("to-\tni-\ta", "th @U\tn i:\tV");
result.add("to-\tni-\test", "th @U\tn i:\tV s t");
result.add("to-\tnic", "th Q\tn I k");
result.add("to-\tnics", "th Q\tn I k s");
result.add("to-\tnie", "th @U\tn i:");
result.add("to-\tnight", "th V\tn aI t");
result.add("to-\tnight's", "th V\tn aI t s");
result.add("to-\tning", "th @U\tn I N");
result.add("to-\tnite", "th V\tn aI t");
result.add("to-\tny", "th @U\tn i:");
result.add("to-\tnys", "th @U\tn i: z");
result.add("to-\tny's", "th @U\tn i: z");
result.add("to-\tpan-\tga", "th V\tp { n\tg V");
result.add("to-\tpaz", "th @U\tp { z");
result.add("to-\tpe-\tka", "th V\tp i:\tk V");
result.add("to-\tpe-\tka's", "th V\tp i:\tk V z");
result.add("to-\tpete", "th Q\tp i: t");
result.add("to-\tpi-\ta-\try", "th @U\tp i:\te@\ti:");
result.add("to-\tpi-\tcal", "th Q\tp I\tk V l");
result.add("to-\tpic", "th Q\tp I k");
result.add("to-\tpics", "th Q\tp I k s");
result.add("to-\tpo-\tgra-\tphic", "th Q\tp V g\tr {\tf I k");
result.add("to-\tpo-\tgra-\tphy", "th V\tp Q g\tr V\tf i:");
result.add("to-\tpol-\tski", "th V\tp @U l\ts k i:");
result.add("to-\trah", "th O@\tV");
result.add("to-\tran", "th O@\tQ n");
result.add("to-\trel-\tli", "th O@\te\tl i:");
result.add("to-\trey", "th O@\ti:");
result.add("to-\tri", "th O@\ti:");
result.add("to-\tri-\tno", "th O@\ti:\tn @U");
result.add("to-\trie", "th O@\ti:");
result.add("to-\tries", "th O@\ti: z");
result.add("to-\tro", "th O@\t@U");
result.add("to-\tro-\tsian", "th @r\tQ\tZ V n");
result.add("to-\tron-\tto", "th @r\tQ n\tt @U");
result.add("to-\tron-\tto's", "th @r\tQ n\tt @U z");
result.add("to-\tru", "th O@\tu:");
result.add("to-\try", "th O@\ti:");
result.add("to-\tshi-\tba", "th @U\tS i:\tb V");
result.add("to-\tshi-\tba's", "th @U\tS i:\tb V z");
result.add("to-\tsi", "th @U\ts i:");
result.add("to-\tta-\tli-\tta-\tri-\ta-\tni-\tsm", "th @U\tt {\tl I\tt e@\ti:\tV\tn I\tz V m");
result.add("to-\tta-\tli-\tta-\tri-\tan", "th @U\tt {\tl I\tt e@\ti:\tV n");
result.add("to-\tta-\tli-\tta-\tri-\tans", "th @U\tt {\tl I\tt e@\ti:\tV n z");
result.add("to-\tta-\tli-\tty", "th @U\tt {\tl I\tt i:");
result.add("to-\tta-\tling", "th @U\tt V\tl I N");
result.add("to-\ttal", "th @U\tt V l");
result.add("to-\ttal-\tling", "th @U\tt V\tl I N");
result.add("to-\ttal-\tly", "th @U\tt V\tl i:");
result.add("to-\ttaled", "th @U\tt V l d");
result.add("to-\ttalled", "th @U\tt V l d");
result.add("to-\ttals", "th @U\tt V l z");
result.add("to-\ttal's", "th @U\tt V l z");
result.add("to-\tted", "th @U\tt V d");
result.add("to-\ttem", "th @U\tt V m");
result.add("to-\ttems", "th @U\tt V m z");
result.add("to-\tti", "th @U\tt i:");
result.add("to-\tting", "th @U\tt I N");
result.add("to-\tto", "th @U\tt @U");
result.add("to-\tvar", "th @U\tv Q@");
result.add("to-\tvey", "th @U\tv i:");
result.add("to-\tward", "th V\tw O@ d");
result.add("to-\twards", "th V\tw O@ d z");
result.add("to-\twe-\tling", "th aU\tV\tl I N");
result.add("to-\twe-\try", "th @U\t@r\ti:");
result.add("to-\twel", "th aU\tV l");
result.add("to-\twels", "th aU\tV l z");
result.add("to-\twer", "th aU\t@r");
result.add("to-\twer-\ting", "th aU\t@r\tI N");
result.add("to-\twered", "th aU\t@r d");
result.add("to-\twers", "th aU\t@r z");
result.add("to-\twer's", "th aU\t@r z");
result.add("to-\twing", "th @U\tI N");
result.add("to-\txi-\tci-\tty", "th Q k\ts I\ts I\tt i:");
result.add("to-\txi-\tco-\tlo-\tgi-\tcal", "th Q k\ts I\tk V\tl Q\tdZ I\tk V l");
result.add("to-\txi-\tco-\tlo-\tgist", "th Q k\ts I\tk Q\tl V\tdZ I s t");
result.add("to-\txi-\tco-\tlo-\tgists", "th Q k\ts I\tk Q\tl V\tdZ I s t s");
result.add("to-\txi-\tco-\tlo-\tgy", "th Q k\ts I\tk Q\tl V\tdZ i:");
result.add("to-\txic", "th Q k\ts I k");
result.add("to-\txics", "th Q k\ts I k s");
result.add("to-\txin", "th Q k\ts I n");
result.add("to-\txins", "th Q k\ts I n z");
result.add("to-\tya-\tma", "th @U\tj Q\tm V");
result.add("to-\tyo", "th @U\tj @U");
result.add("to-\tyo-\tda", "th @U\tj @U\td V");
result.add("to-\tyo-\tta", "th @U\tj @U\tt V");
result.add("to-\tyo-\ttas", "th OI\t@U\tt V z");
result.add("to-\tyo-\tta's", "th @U\tj @U\tt V z");
result.add("to-\tzer", "th @U\tz @r");
result.add("toad", "th @U d");
result.add("toads", "th @U d z");
result.add("toas-\tted", "th @U s\tt V d");
result.add("toas-\tter", "th @U s\tt @r");
result.add("toas-\tters", "th @U s\tt @r z");
result.add("toas-\tting", "th @U s\tt I N");
result.add("toast", "th @U s t");
result.add("toast-\tmas-\tter", "th @U s\tt m { s\tt @r");
result.add("toasts", "th @U s t s");
result.add("tobe", "th @U b");
result.add("toc-\tci", "th @U\ttS i:");
result.add("tock", "th Q k");
result.add("tocque-\tville", "th @U k\tv I l");
result.add("tod", "th Q d");
result.add("tod-\tdle", "th Q\td V l");
result.add("tod-\thun-\tter", "th Q d\th V n\tt @r");
result.add("todd", "th Q d");
result.add("todd-\tler", "th Q d\tl @r");
result.add("todd-\tlers", "th Q d\tl @r z");
result.add("todd-\tling", "th Q d\tl I N");
result.add("todd's", "th Q d z");
result.add("todt", "th Q d t");
result.add("toe", "th @U");
result.add("toe-\thold", "th @U\th @U l d");
result.add("toe-\ting", "th @U\tI N");
result.add("toe-\tnail", "th @U\tn eI l");
result.add("toe-\tnails", "th @U\tn eI l z");
result.add("toed", "th @U d");
result.add("toes", "th @U z");
result.add("tof-\tfee", "th Q\tf i:");
result.add("toft", "th Q f t");
result.add("tofte", "th @U f t");
result.add("tog-\tgle", "th Q\tg V l");
result.add("tog-\tgled", "th Q\tg V l d");
result.add("togg-\tling", "th Q g\tl I N");
result.add("togs", "th Q g z");
result.add("toi-\tlet", "th OI\tl V t");
result.add("toi-\tlet-\tries", "th OI\tl V t\tr i: z");
result.add("toi-\tlet-\try", "th OI\tl V t\tr i:");
result.add("toi-\tlets", "th OI\tl V t s");
result.add("toi-\tling", "th OI\tl I N");
result.add("toi-\tty", "th OI\tt i:");
result.add("toil", "th OI l");
result.add("toiled", "th OI l d");
result.add("toils", "th OI l z");
result.add("tol-\tbert", "th @U l\tb @r t");
result.add("tol-\tland", "th Q\tl V n d");
result.add("tol-\tland's", "th Q\tl V n d z");
result.add("tol-\tle-\tson", "th Q\tl V\ts V n");
result.add("tol-\tler", "th @U\tl @r");
result.add("tol-\tley", "th Q\tl i:");
result.add("tol-\tli-\tver", "th @U\tl I\tv @r");
result.add("tol-\tling", "th @U\tl I N");
result.add("tol-\tly", "th @U\tl i:");
result.add("tol-\tman", "th Q l\tm V n");
result.add("told", "th @U l d");
result.add("tole", "th @U l");
result.add("toles", "th @U l z");
result.add("toll", "th @U l");
result.add("toll-\tbooth", "th @U l\tb u: T");
result.add("tolled", "th @U l d");
result.add("tolls", "th @U l z");
result.add("tols-\ttoy", "th @U l\ts t OI");
result.add("tols-\ttoy's", "th @U l\ts t OI z");
result.add("tom", "th Q m");
result.add("tom-\tboy", "th Q m\tb OI");
result.add("tom-\tcat", "th Q m\tk { t");
result.add("tom-\tkin", "th Q m\tk I n");
result.add("tom-\tkins", "th Q m\tk I n z");
result.add("tom-\tlin", "th Q m\tl I n");
result.add("tom-\tlin-\tson", "th Q m\tl I n\ts V n");
result.add("tom-\tmie", "th Q\tm i:");
result.add("tom-\tmy", "th Q\tm i:");
result.add("tom-\tmy's", "th Q\tm i: z");
result.add("tomb", "th u: m");
result.add("tomb-\tlike", "th u: m\tl aI k");
result.add("tomb-\tstone", "th u: m\ts t @U n");
result.add("tomb-\tstones", "th u: m\ts t @U n z");
result.add("tombs", "th u: m z");
result.add("tome", "th @U m");
result.add("tomes", "th @U m z");
result.add("tomp-\tkins", "th Q m\tp k I n z");
result.add("toms", "th Q m z");
result.add("tom's", "th Q m z");
result.add("ton", "th V n");
result.add("ton-\tjes", "th @U n\tj e s");
result.add("ton-\tka", "th Q N\tk V");
result.add("ton-\tkin", "th Q N\tk I n");
result.add("ton-\tna-\tges", "th V\tn V\tdZ V z");
result.add("ton-\tnage", "th V\tn V dZ");
result.add("ton-\tner", "th V\tn @r");
result.add("ton-\tsil", "th Q n\ts I l");
result.add("ton-\tsil-\tlec-\tto-\tmies", "th Q n\ts I\tl e k\tt V\tm i: z");
result.add("ton-\tsil-\tlec-\tto-\tmy", "th Q n\ts I\tl e k\tt V\tm i:");
result.add("ton-\tsils", "th Q n\ts I l z");
result.add("ton-\tya", "th Q n\tj V");
result.add("ton-\tya's", "th Q n\tj V z");
result.add("tone", "th @U n");
result.add("toned", "th @U n d");
result.add("tones", "th @U n z");
result.add("tong", "th O: N");
result.add("tongs", "th Q N z");
result.add("tongue", "th V N");
result.add("tongued", "th V N d");
result.add("tongues", "th V N z");
result.add("tonk", "th O: N k");
result.add("tonks", "th Q N k s");
result.add("tonn", "th Q n");
result.add("tonne", "th V n");
result.add("tonnes", "th V n z");
result.add("tons", "th V n z");
result.add("too", "th u:");
result.add("too-\tgood", "th u:\tg U d");
result.add("too-\tley", "th u:\tl i:");
result.add("too-\tling", "th u:\tl I N");
result.add("too-\tmer", "th u:\tm @r");
result.add("too-\tmey", "th u:\tm i:");
result.add("too-\tthy", "th u:\tT i:");
result.add("too-\ttle", "th u:\tt V l");
result.add("took", "th U k");
result.add("tooke", "th U k");
result.add("tool", "th u: l");
result.add("tool-\tbox", "th u: l\tb O: k s");
result.add("tool-\tma-\tker", "th u: l\tm eI\tk @r");
result.add("tool-\tma-\tkers", "th u: l\tm eI\tk @r z");
result.add("tool-\troom", "th u: l\tr u: m");
result.add("toole", "th u: l");
result.add("tooled", "th u: l d");
result.add("tools", "th u: l z");
result.add("toombs", "th u: m z");
result.add("toon", "th u: n");
result.add("toone", "th u: n");
result.add("toot", "th u: t");
result.add("toot-\tsie", "th u: t\ts i:");
result.add("tooth", "th u: T");
result.add("tooth-\tbru-\tshes", "th u: T\tb r V\tS V z");
result.add("tooth-\tbrush", "th u: T\tb r V S");
result.add("tooth-\tless", "th u: T\tl V s");
result.add("tooth-\tlike", "th u: T\tl aI k");
result.add("tooth-\tpaste", "th u: T\tp eI s t");
result.add("tooth-\tpastes", "th u: T\tp eI s t s");
result.add("tooth-\tpick", "th u: T\tp I k");
result.add("tooth-\tpicks", "th u: T\tp I k s");
result.add("toothed", "th u: T t");
result.add("toots", "th u: t s");
result.add("top", "th Q p");
result.add("top-\tknot", "th Q p\tn Q t");
result.add("top-\tless", "th Q p\tl V s");
result.add("top-\tp-\tling", "th Q\tp V\tl I N");
result.add("top-\tper", "th Q\tp @r");
result.add("top-\tpers", "th Q\tp @r z");
result.add("top-\tping", "th Q\tp I N");
result.add("top-\tpings", "th Q\tp I N z");
result.add("top-\tple", "th Q\tp V l");
result.add("top-\tpled", "th Q\tp V l d");
result.add("top-\tples", "th Q\tp V l z");
result.add("top-\tsoil", "th Q p\ts OI l");
result.add("top-\tsy", "th Q p\ts i:");
result.add("top-\tsy-\ttur-\tvy", "th Q p\ts i:\tt @r\tv i:");
result.add("tope", "th @U p");
result.add("topped", "th Q p t");
result.add("tops", "th Q p s");
result.add("tor", "th O@");
result.add("tor-\tbert", "th O@\tb @r t");
result.add("tor-\tches", "th O@\ttS V z");
result.add("tor-\tching", "th O@\ttS I N");
result.add("tor-\tma", "th O@\tm V");
result.add("tor-\tmen-\tta", "th O@\tm e n\tt V");
result.add("tor-\tmen-\tted", "th O@\tm e n\tt V d");
result.add("tor-\tmen-\tting", "th O@\tm e n\tt I N");
result.add("tor-\tmen-\ttor", "th O@\tm e n\tt @r");
result.add("tor-\tmen-\ttors", "th O@\tm e n\tt @r z");
result.add("tor-\tment", "th O@\tm e n t");
result.add("tor-\tments", "th O@\tm e n t s");
result.add("tor-\tna-\tdic", "th O@\tn eI\td I k");
result.add("tor-\tna-\tdo", "th O@\tn eI\td @U");
result.add("tor-\tna-\tdoes", "th O@\tn eI\td @U z");
result.add("tor-\tna-\tdos", "th O@\tn eI\td @U z");
result.add("tor-\tna-\tdo's", "th O@\tn eI\td @U z");
result.add("tor-\tney", "th O@\tn i:");
result.add("tor-\tpe-\tdo", "th O@\tp i:\td @U");
result.add("tor-\tpe-\tdo-\ting", "th O@\tp i:\td @U\tI N");
result.add("tor-\tpe-\tdoed", "th O@\tp i:\td @U d");
result.add("tor-\tpe-\tdoes", "th O@\tp i:\td @U z");
result.add("tor-\tpe-\tdos", "th O@\tp i:\td @U z");
result.add("tor-\tpid", "th O@\tp I d");
result.add("tor-\tpor", "th O@\tp @r");
result.add("tor-\trance", "th O@\tV n s");
result.add("tor-\tras", "th O@\tV s");
result.add("tor-\tray", "th O@\teI");
result.add("tor-\tre-\ton", "th O@\ti:\tV n");
result.add("tor-\tren-\ttial", "th O@\te n\ttS V l");
result.add("tor-\trence", "th O@\tV n s");
result.add("tor-\trens", "th O@\tV n z");
result.add("tor-\trent", "th O@\tV n t");
result.add("tor-\trents", "th O@\tV n t s");
result.add("tor-\tres", "th O@\te z");
result.add("tor-\trey", "th O@\ti:");
result.add("tor-\tri-\tcel-\tli", "th O@\tI\ts e\tl i:");
result.add("tor-\trid", "th O@\tI d");
result.add("tor-\tring-\tton", "th O@\tI N\tt V n");
result.add("tor-\try", "th O@\ti:");
result.add("tor-\tso", "th O@\ts @U");
result.add("tor-\tsos", "th O@\ts @U z");
result.add("tor-\ttil-\tla", "th O@\tt i:\tV");
result.add("tor-\ttil-\tlas", "th O@\tt i:\tV z");
result.add("tor-\ttoi-\tses", "th O@\tt V\ts V z");
result.add("tor-\ttoise", "th O@\tt V s");
result.add("tor-\ttu-\tous", "th O@\ttS V\tw V s");
result.add("tor-\ttu-\trous", "th O@\ttS u:\tV s");
result.add("tor-\ttur-\ting", "th O@\ttS @r\tI N");
result.add("tor-\tture", "th O@\ttS @r");
result.add("tor-\ttured", "th O@\ttS @r d");
result.add("tor-\ttures", "th O@\ttS @r z");
result.add("torch", "th O@ tS");
result.add("torched", "th O@ tS t");
result.add("tore", "th O@");
result.add("torn", "th O@ n");
result.add("torp", "th O@ p");
result.add("torque", "th O@ k");
result.add("torr", "th O@");
result.add("torre", "th O@");
result.add("tort", "th O@ t");
result.add("torte", "th O@ t");
result.add("torts", "th O@ t s");
result.add("tos-\tca", "th O: s\tk V");
result.add("tos-\tca-\tni-\tni", "th O: s\tk V\tn i:\tn i:");
result.add("tos-\tca-\tni-\tni's", "th V s\tk V\tn i:\tn i: z");
result.add("tos-\tca-\tno", "th @U s\tk Q\tn @U");
result.add("tos-\tses", "th O:\ts V z");
result.add("tos-\tsing", "th O:\ts I N");
result.add("tos-\tta-\tdo", "th @U s\tt Q\td @U");
result.add("tosch", "th O: S");
result.add("tosh", "th Q S");
result.add("toss", "th O: s");
result.add("tossed", "th O: s t");
result.add("tot", "th Q t");
result.add("tot-\tten", "th Q\tt V n");
result.add("tot-\tter", "th Q\tt @r");
result.add("tot-\tter-\ting", "th Q\tt @r\tI N");
result.add("tot-\tty", "th Q\tt i:");
result.add("tote", "th @U t");
result.add("totes", "th @U t s");
result.add("toth", "th Q T");
result.add("tots", "th Q t s");
result.add("tou-\ta-\treg", "th u:\t@r\tV g");
result.add("tou-\tches", "th V\ttS V z");
result.add("tou-\tchet", "th u:\tS e t");
result.add("tou-\tching", "th V\ttS I N");
result.add("tou-\tchy", "th V\ttS i:");
result.add("tou-\tga-\tloo", "th u:\tg V\tl u:");
result.add("tou-\tghe-\tning", "th V\tf V\tn I N");
result.add("tou-\tghen", "th V\tf V n");
result.add("tou-\tghened", "th V\tf V n d");
result.add("tou-\tghens", "th V\tf V n z");
result.add("tou-\tgher", "th V\tf @r");
result.add("tou-\tghest", "th V\tf V s t");
result.add("tou-\tlouse", "th u:\tl u: z");
result.add("tou-\tpee", "th u:\tp eI");
result.add("tou-\trette", "th @r\te t");
result.add("tou-\trette's", "th @r\te t s");
result.add("tou-\tri-\tsm", "th U@\tI\tz V m");
result.add("tou-\tring", "th U@\tI N");
result.add("tou-\trist", "th U@\tI s t");
result.add("tou-\trists", "th U@\tI s t s");
result.add("tou-\tted", "th aU\tt V d");
result.add("tou-\tting", "th aU\tt I N");
result.add("touch", "th V tS");
result.add("touch-\tdown", "th V tS\td aU n");
result.add("touch-\tdowns", "th V tS\td aU n z");
result.add("touch-\tstone", "th V tS\ts t @U n");
result.add("touche", "th u: S");
result.add("touched", "th V tS t");
result.add("tough", "th V f");
result.add("tough-\tness", "th V f\tn V s");
result.add("toughed", "th V f t");
result.add("toughs", "th V f s");
result.add("tour", "th U@");
result.add("tour-\tma-\tline", "th U@\tm V\tl i: n");
result.add("tour-\tna-\tment", "th U@\tn V\tm V n t");
result.add("tour-\tna-\tments", "th @r\tn V\tm V n t s");
result.add("tour-\tna-\tment's", "th U@\tn V\tm V n t s");
result.add("tour-\tney", "th @r\tn i:");
result.add("tour-\tneys", "th u: r\tn i: z");
result.add("tour-\tni-\tquet", "th @r\tn I\tk V t");
result.add("toured", "th U@ d");
result.add("tours", "th U@ z");
result.add("tour's", "th U@ z");
result.add("tous-\tsaint", "th u:\ts { n");
result.add("tout", "th aU t");
result.add("touts", "th aU t s");
result.add("tow", "th @U");
result.add("tow-\tbin", "th @U\tb I n");
result.add("tow-\tboat", "th @U\tb @U t");
result.add("tow-\tner", "th aU\tn @r");
result.add("tow-\tnie", "th aU\tn i:");
result.add("tow-\tson", "th @U\ts V n");
result.add("towed", "th @U d");
result.add("town", "th aU n");
result.add("town-\thou-\tses", "th aU n\th aU\ts V z");
result.add("town-\thouse", "th aU n\th aU s");
result.add("town-\tley", "th aU n\tl i:");
result.add("town-\tsend", "th aU n\tz V n d");
result.add("town-\tsend's", "th aU n\tz V n d z");
result.add("town-\tshend", "th aU n\tS e n d");
result.add("town-\tship", "th aU n\tS I p");
result.add("town-\tships", "th aU n\tS I p s");
result.add("town-\tship's", "th aU n\tS I p s");
result.add("towne", "th aU n");
result.add("townes", "th aU n z");
result.add("towns", "th aU n z");
result.add("town's", "th aU n z");
result.add("towns-\tfolk", "th aU n\tz f @U k");
result.add("towns-\tman", "th aU n\tz m V n");
result.add("towns-\tpeo-\tple", "th aU n\tz p i:\tp V l");
result.add("tows", "th @U z");
result.add("tows-\tley", "th @U s\tl i:");
result.add("toy", "th OI");
result.add("toy-\ting", "th OI\tI N");
result.add("toy-\tma-\tker", "th OI\tm eI\tk @r");
result.add("toye", "th OI");
result.add("toyed", "th OI d");
result.add("toys", "th OI z");
result.add("toy's", "th OI z");
result.add("tra-\tbue", "th r Q b\tw e");
result.add("tra-\tcea-\tble", "th r eI\ts V\tb V l");
result.add("tra-\tcer", "th r eI\ts @r");
result.add("tra-\tcers", "th r eI\ts @r z");
result.add("tra-\tces", "th r eI\ts V z");
result.add("tra-\tcey", "th r eI\ts i:");
result.add("tra-\tche-\ta", "th r eI\tk i:\tV");
result.add("tra-\tche-\tal", "th r eI\tk i:\tV l");
result.add("tra-\tche-\to-\tphyte", "th r eI\tk i:\tV\tf aI t");
result.add("tra-\tche-\to-\tphytes", "th r eI\tk i:\tV\tf aI t s");
result.add("tra-\tcie", "th r eI\ts i:");
result.add("tra-\tcing", "th r eI\ts I N");
result.add("tra-\tcy", "th r eI\ts i:");
result.add("tra-\tcy's", "th r eI\ts i: z");
result.add("tra-\tda-\tble", "th r eI\td V\tb V l");
result.add("tra-\tdea-\tble", "th r eI\td V\tb V l");
result.add("tra-\tded", "th r eI\td V d");
result.add("tra-\tder", "th r eI\td @r");
result.add("tra-\tders", "th r eI\td @r z");
result.add("tra-\tder's", "th r eI\td @r z");
result.add("tra-\tdi-\ttio-\tna-\tlist", "th r V\td I\tS V\tn V\tl V s t");
result.add("tra-\tdi-\ttio-\tnal", "th r V\td I\tS V\tn V l");
result.add("tra-\tdi-\ttio-\tnal-\tly", "th r V\td I\tS V\tn V\tl i:");
result.add("tra-\tdi-\ttion", "th r V\td I\tS V n");
result.add("tra-\tdi-\ttions", "th r V\td I\tS V n z");
result.add("tra-\tding", "th r eI\td I N");
result.add("tra-\tdings", "th r eI\td I N z");
result.add("tra-\tditio-\tna-\tlists", "th r V\td I S\tn V\tl V s t s");
result.add("tra-\tfal-\tgar", "th r V\tf { l\tg @r");
result.add("tra-\tge-\tdies", "th r {\tdZ V\td i: z");
result.add("tra-\tge-\tdy", "th r {\tdZ V\td i:");
result.add("tra-\tger", "th r eI\tg @r");
result.add("tra-\tgi-\tco-\tmic", "th r {\tdZ I\tk Q\tm I k");
result.add("tra-\tgic", "th r {\tdZ I k");
result.add("tra-\tgical-\tly", "th r {\tdZ I k\tl i:");
result.add("tra-\thern", "th r {\th @r n");
result.add("tra-\tjan", "th r eI\tdZ V n");
result.add("tra-\tjan's", "th r eI\tdZ V n z");
result.add("tra-\tjec-\tto-\try", "th r V\tdZ e k\tt @r\ti:");
result.add("tra-\tkas", "th r Q\tk V z");
result.add("tra-\tmel", "th r {\tm V l");
result.add("tra-\tmell", "th r Q\tm eI l");
result.add("tra-\tmon-\tta-\tna", "th r Q\tm @U n\tt {\tn V");
result.add("tra-\tpa-\tni", "th r Q\tp Q\tn i:");
result.add("tra-\tpeze", "th r V\tp i: z");
result.add("tra-\tshes", "th r {\tS V z");
result.add("tra-\tshing", "th r {\tS I N");
result.add("tra-\tshy", "th r {\tS i:");
result.add("tra-\tvail", "th r V\tv eI l");
result.add("tra-\tvails", "th r V\tv eI l z");
result.add("tra-\tve-\tler", "th r {\tv V\tl @r");
result.add("tra-\tve-\tlers", "th r {\tv V\tl @r z");
result.add("tra-\tve-\tler's", "th r {\tv V\tl @r z");
result.add("tra-\tve-\tling", "th r {\tv V\tl I N");
result.add("tra-\tve-\tlogue", "th r {\tv V\tl O: g");
result.add("tra-\tvel", "th r {\tv V l");
result.add("tra-\tvel-\tler", "th r {\tv V\tl @r");
result.add("tra-\tvel-\tlers", "th r {\tv V\tl @r z");
result.add("tra-\tvel-\tling", "th r {\tv V\tl I N");
result.add("tra-\tveled", "th r {\tv V l d");
result.add("tra-\tvelled", "th r {\tv V l d");
result.add("tra-\tvels", "th r {\tv V l z");
result.add("tra-\tver", "th r eI\tv @r");
result.add("tra-\tver-\tsing", "th r V\tv @r\ts I N");
result.add("tra-\tvers", "th r {\tv @r z");
result.add("tra-\tverse", "th r {\tv @r s");
result.add("tra-\tversed", "th r V\tv @r s t");
result.add("tra-\tves-\tties", "th r {\tv V s\tt i: z");
result.add("tra-\tves-\tty", "th r {\tv V s\tt i:");
result.add("tra-\tvi-\ta-\tta", "th r Q\tv i:\tQ\tt V");
result.add("tra-\tvis", "th r {\tv I s");
result.add("tra-\tvol-\tta", "th r V\tv @U l\tt V");
result.add("tra-\tvol-\tta's", "th r V\tv @U l\tt V z");
result.add("tra-\tweek", "th r O:\ti: k");
result.add("trac", "th r { k");
result.add("trac-\tkage", "th r {\tk I dZ");
result.add("trac-\tker", "th r {\tk @r");
result.add("trac-\tkers", "th r {\tk @r z");
result.add("trac-\tking", "th r {\tk I N");
result.add("trac-\tta-\tble", "th r { k\tt V\tb V l");
result.add("trac-\ttion", "th r { k\tS V n");
result.add("trac-\ttor", "th r { k\tt @r");
result.add("trac-\ttors", "th r { k\tt @r z");
result.add("trace", "th r eI s");
result.add("traced", "th r eI s t");
result.add("track", "th r { k");
result.add("track-\tball", "th r { k\tb O: l");
result.add("track-\tballs", "th r { k\tb O: l z");
result.add("tracked", "th r { k t");
result.add("tracks", "th r { k s");
result.add("track's", "th r { k s");
result.add("tract", "th r { k t");
result.add("tracts", "th r { k t s");
result.add("trade", "th r eI d");
result.add("trade-\tmark", "th r eI d\tm Q@ k");
result.add("trade-\tmarked", "th r eI d\tm Q@ k t");
result.add("trade-\tmarks", "th r eI d\tm Q@ k s");
result.add("trade-\toff", "th r eI\td O: f");
result.add("trade-\toffs", "th r eI\td O: f s");
result.add("trades", "th r eI d z");
result.add("trade's", "th r eI d z");
result.add("trades-\tmen", "th r eI d\tz m V n");
result.add("traer", "th r e@");
result.add("traf-\tfic", "th r {\tf I k");
result.add("traf-\tfic-\tker", "th r {\tf I\tk @r");
result.add("traf-\tfic-\tkers", "th r {\tf I\tk @r z");
result.add("traf-\tfic-\tking", "th r {\tf I\tk I N");
result.add("traf-\tfic's", "th r {\tf I k s");
result.add("traf-\tford", "th r {\tf @r d");
result.add("trai-\tler", "th r eI\tl @r");
result.add("trai-\tlers", "th r eI\tl @r z");
result.add("trai-\tling", "th r eI\tl I N");
result.add("trai-\tna-\tble", "th r eI\tn V\tb V l");
result.add("trai-\tnee", "th r eI\tn i:");
result.add("trai-\tnees", "th r eI\tn i: z");
result.add("trai-\tner", "th r eI\tn @r");
result.add("trai-\tners", "th r eI\tn @r z");
result.add("trai-\tning", "th r eI\tn I N");
result.add("trai-\tnor", "th r eI\tn @r");
result.add("trai-\tto-\trous", "th r eI\tt @r\tV s");
result.add("trai-\ttor", "th r eI\tt @r");
result.add("trai-\ttors", "th r eI\tt @r z");
result.add("trail", "th r eI l");
result.add("trail-\tbla-\tzer", "th r eI l\tb l eI\tz @r");
result.add("trail-\tbla-\tzers", "th r eI l\tb l eI\tz @r z");
result.add("trail-\thead", "th r eI l\th e d");
result.add("trail-\tways", "th r eI l\tw eI z");
result.add("trailed", "th r eI l d");
result.add("trails", "th r eI l z");
result.add("train", "th r eI n");
result.add("train-\tmen", "th r eI n\tm V n");
result.add("trained", "th r eI n d");
result.add("trains", "th r eI n z");
result.add("traip-\tsing", "th r eI p\ts I N");
result.add("traipse", "th r eI p s");
result.add("trait", "th r eI t");
result.add("traits", "th r eI t s");
result.add("tram", "th r { m");
result.add("tram-\tmel", "th r {\tm V l");
result.add("tram-\tping", "th r { m\tp I N");
result.add("tram-\tple", "th r { m\tp V l");
result.add("tram-\tpled", "th r { m\tp V l d");
result.add("tram-\tples", "th r { m\tp V l z");
result.add("tram-\tpo-\tline", "th r { m\tp V\tl i: n");
result.add("tramp", "th r { m p");
result.add("tramp-\tling", "th r { m\tp l I N");
result.add("tramps", "th r { m p z");
result.add("trams", "th r { m z");
result.add("tran", "th r { n");
result.add("tran-\tches", "th r { n\ttS e z");
result.add("tran-\tqui-\tli-\tty", "th r { N\tk w I\tl I\tt i:");
result.add("tran-\tqui-\tli-\tzer", "th r { N\tk w I\tl aI\tz @r");
result.add("tran-\tqui-\tli-\tzers", "th r { N\tk w I\tl aI\tz @r z");
result.add("tran-\tqui-\tli-\tzing", "th r { N\tk w I\tl aI\tz I N");
result.add("tran-\tqui-\tlize", "th r { N\tk w I\tl aI z");
result.add("tran-\tquil", "th r { N\tk w I l");
result.add("tran-\tsac-\tted", "th r { n\ts { k\tt V d");
result.add("tran-\tsac-\ttion", "th r { n\tz { k\tS V n");
result.add("tran-\tsac-\ttions", "th r { n\tz { k\tS V n z");
result.add("tran-\tsac-\ttion's", "th r { n\tz { k\tS V n z");
result.add("tran-\tsact", "th r { n\tz { k t");
result.add("tran-\tsec-\tted", "th r { n\ts e k\tt V d");
result.add("tran-\tsec-\ttion", "th r { n\ts e k\tS V n");
result.add("tran-\tsect", "th r { n\ts e k t");
result.add("tran-\tsi-\tence", "th r { n\tz i:\tV n s");
result.add("tran-\tsi-\tents", "th r { n\tz i:\tV n t s");
result.add("tran-\tsi-\ttio-\tnal", "th r { n\ts I\tS V\tn V l");
result.add("tran-\tsi-\ttio-\tning", "th r { n\tz I\tS V\tn I N");
result.add("tran-\tsi-\ttion", "th r { n\tz I\tS V n");
result.add("tran-\tsi-\ttions", "th r { n\tz I\tS V n z");
result.add("tran-\tsi-\tto-\try", "th r { n\tz I\tt O@\ti:");
result.add("tran-\tsient", "th r { n\tZ V n t");
result.add("tran-\tsil-\tlu-\tmi-\tna-\ttion", "th r { n\tz I\tl u:\tm I\tn eI\tS V n");
result.add("tran-\tsis-\ttor", "th r { n\tz I s\tt @r");
result.add("tran-\tsis-\ttors", "th r { n\tz I s\tt @r z");
result.add("tran-\tsit", "th r { n\tz I t");
result.add("tran-\tsom", "th r { n\ts V m");
result.add("tran-\tsoms", "th r { n\ts V m z");
result.add("tran-\tsyl-\tva-\tni-\ta", "th r { n\tz i: l\tv eI\tn i:\tV");
result.add("tran-\tter", "th r { n\tt @r");
result.add("trance", "th r { n s");
result.add("tranche", "th r { n tS");
result.add("trang", "th r { N");
result.add("trans", "th r { n z");
result.add("trans-\ta-\tlas-\tka", "th r { n\tz V\tl { s\tk V");
result.add("trans-\ta-\tme-\tri-\tcan", "th r { n\tz V\tm e@\tI\tk V n");
result.add("trans-\tat-\tlan-\ttic", "th r { n\tz V t\tl { n\tt I k");
result.add("trans-\tcen-\tded", "th r { n\ts e n\td V d");
result.add("trans-\tcen-\tden-\ttal", "th r { n\ts V n\td e n\tt V l");
result.add("trans-\tcen-\tdence", "th r { n\ts e n\td V n s");
result.add("trans-\tcen-\tdent", "th r { n\ts e n\td V n t");
result.add("trans-\tcen-\tding", "th r { n\ts e n\td I N");
result.add("trans-\tcend", "th r { n\ts e n d");
result.add("trans-\tcends", "th r { n\ts e n d z");
result.add("trans-\tchan-\tnel", "th r V n\ts tS {\tn V l");
result.add("trans-\tcon-\tti-\tnen-\ttal", "th r { n\tz k Q n\tt I\tn e n\tt V l");
result.add("trans-\tdu-\tcer", "th r { n\ts d u:\ts @r");
result.add("trans-\tdu-\tcers", "th r { n\ts d u:\ts @r z");
result.add("trans-\tfe-\tra-\tbi-\tli-\tty", "th r { n\ts f @r\tV\tb I\tl V\tt i:");
result.add("trans-\tfe-\tra-\tble", "th r { n\ts f @r\tV\tb V l");
result.add("trans-\tfe-\trence", "th r { n\ts f @r\tV n s");
result.add("trans-\tfer", "th r { n\ts f @r");
result.add("trans-\tfer-\tra-\tble", "th r { n\ts f @r\tV\tb V l");
result.add("trans-\tfer-\tring", "th r { n\ts f @r\tI N");
result.add("trans-\tfered", "th r { n\ts f @r d");
result.add("trans-\tferred", "th r { n\ts f @r d");
result.add("trans-\tfers", "th r { n\ts f @r z");
result.add("trans-\tfix", "th r { n\ts f I k s");
result.add("trans-\tfixed", "th r { n\ts f I k s t");
result.add("trans-\tfor-\tma-\ttio-\tnal", "th r { n\ts f @r\tm eI\tS V\tn V l");
result.add("trans-\tfor-\tma-\ttion", "th r { n\ts f @r\tm eI\tS V n");
result.add("trans-\tfor-\tma-\ttions", "th r { n\ts f @r\tm eI\tS V n z");
result.add("trans-\tfor-\tmer", "th r { n\ts f O@\tm @r");
result.add("trans-\tfor-\tmers", "th r { n\ts f O@\tm @r z");
result.add("trans-\tfor-\tming", "th r { n\ts f O@\tm I N");
result.add("trans-\tform", "th r { n\ts f O@ m");
result.add("trans-\tformed", "th r { n\ts f O@ m d");
result.add("trans-\tforms", "th r { n\ts f O@ m z");
result.add("trans-\tfu-\tsion", "th r { n\ts f j u:\tZ V n");
result.add("trans-\tfu-\tsions", "th r { n\ts f j u:\tZ V n z");
result.add("trans-\tfuse", "th r { n\ts f j u: z");
result.add("trans-\tfused", "th r { n\ts f j u: z d");
result.add("trans-\tge-\tnic", "th r { n\tz dZ e\tn I k");
result.add("trans-\tgres-\tsion", "th r { n\tz g r e\tS V n");
result.add("trans-\tgres-\tsions", "th r { n\tz g r e\tS V n z");
result.add("trans-\tgres-\tsor", "th r { n\tz g r e\ts @r");
result.add("trans-\tgress", "th r { n\tz g r e s");
result.add("trans-\tgressed", "th r { n\tz g r e s t");
result.add("trans-\tkei", "th r { n\tz k eI");
result.add("trans-\tla-\tted", "th r { n\tz l eI\tt V d");
result.add("trans-\tla-\tting", "th r { n\tz l eI\tt I N");
result.add("trans-\tla-\ttion", "th r { n\tz l eI\tS V n");
result.add("trans-\tla-\ttions", "th r { n\tz l eI\tS V n z");
result.add("trans-\tla-\ttor", "th r { n\ts l eI\tt @r");
result.add("trans-\tla-\ttors", "th r { n\ts l eI\tt @r z");
result.add("trans-\tlate", "th r { n\tz l eI t");
result.add("trans-\tlates", "th r { n\tz l eI t s");
result.add("trans-\tlu-\tcent", "th r { n\ts l u:\ts V n t");
result.add("trans-\tmis-\tsion", "th r { n\ts m I\tS V n");
result.add("trans-\tmis-\tsions", "th r { n\tz m I\tS V n z");
result.add("trans-\tmit", "th r { n\tz m I t");
result.add("trans-\tmit-\tta-\tble", "th r { n\tz m I\tt V\tb V l");
result.add("trans-\tmit-\ttal", "th r { n\ts m I\tt V l");
result.add("trans-\tmit-\tted", "th r { n\ts m I\tt V d");
result.add("trans-\tmit-\tter", "th r { n\ts m I\tt @r");
result.add("trans-\tmit-\tters", "th r { n\ts m I\tt @r z");
result.add("trans-\tmit-\tting", "th r { n\ts m I\tt I N");
result.add("trans-\tmits", "th r { n\tz m I t s");
result.add("trans-\tna-\ttio-\tnal", "th r { n\ts n {\tS V\tn V l");
result.add("trans-\to-\tce-\ta-\tnic", "th r { n\tz @U\tS i:\t{\tn I k");
result.add("trans-\tpa-\tci-\tfic", "th r { n\ts p V\ts I\tf I k");
result.add("trans-\tpa-\tren-\tcies", "th r { n\ts p e@\tV n\ts i: z");
result.add("trans-\tpa-\tren-\tcy", "th r { n\ts p e@\tV n\ts i:");
result.add("trans-\tpa-\trent", "th r { n\ts p e@\tV n t");
result.add("trans-\tpa-\trent-\tly", "th r { n\ts p e@\tV n\tt l i:");
result.add("trans-\tpi-\tr-\ting", "th r { n\ts p aI\t@r\tI N");
result.add("trans-\tpi-\tre", "th r { n\ts p aI\t@r");
result.add("trans-\tpi-\tred", "th r { n\ts p aI\t@r d");
result.add("trans-\tpi-\tres", "th r { n\ts p aI\t@r z");
result.add("trans-\tplan-\tta-\ttion", "th r { n\tz p l { n\tt eI\tS V n");
result.add("trans-\tplan-\tted", "th r { n\ts p l { n\tt V d");
result.add("trans-\tplan-\tting", "th r { n\ts p l { n\tt I N");
result.add("trans-\tplant", "th r { n\ts p l { n t");
result.add("trans-\tplants", "th r { n\ts p l { n t s");
result.add("trans-\tpon-\tder", "th r { n\ts p Q n\td @r");
result.add("trans-\tpon-\tders", "th r { n\ts p Q n\td @r z");
result.add("trans-\tpor-\tta-\tble", "th r { n\ts p O@\tt V\tb V l");
result.add("trans-\tpor-\tta-\ttion", "th r { n\ts p @r\tt eI\tS V n");
result.add("trans-\tpor-\tta-\ttion's", "th r { n\ts p @r\tt eI\tS V n z");
result.add("trans-\tpor-\tted", "th r { n\ts p O@\tt V d");
result.add("trans-\tpor-\tter", "th r { n\ts p O@\tt @r");
result.add("trans-\tpor-\tters", "th r { n\ts p O@\tt @r z");
result.add("trans-\tpor-\tting", "th r { n\ts p O@\tt I N");
result.add("trans-\tport", "th r { n\ts p O@ t");
result.add("trans-\tports", "th r { n\ts p O@ t s");
result.add("trans-\tpose", "th r { n\ts p @U z");
result.add("trans-\tposed", "th r { n\ts p @U z d");
result.add("trans-\tse-\txu-\tal", "th r { n\ts e k\tS j u:\tV l");
result.add("trans-\tse-\txu-\tals", "th r { n\ts e k\tS j u:\tV l z");
result.add("trans-\tvaal", "th r { n\tz v Q l");
result.add("trans-\tverse", "th r { n\tz v @r s");
result.add("trans-\tves-\ttite", "th r { n\tz v e s\tt aI t");
result.add("trans-\tves-\ttites", "th r { n\tz v e s\tt aI t s");
result.add("transc-\tri-\tber", "th r { n\ts k r aI\tb @r");
result.add("transc-\tri-\tbers", "th r { n\ts k r aI\tb @r z");
result.add("transc-\tri-\tbing", "th r { n\ts k r aI\tb I N");
result.add("transc-\tribe", "th r { n\ts k r aI b");
result.add("transc-\tribed", "th r { n\ts k r aI b d");
result.add("transc-\tribes", "th r { n\ts k r aI b z");
result.add("transc-\trip-\ttion", "th r { n\ts k r I p\tS V n");
result.add("transc-\trip-\ttions", "th r { n\ts k r I p\tS V n z");
result.add("transc-\tript", "th r { n\ts k r I p t");
result.add("transc-\tripts", "th r { n\ts k r I p t s");
result.add("trant", "th r { n t");
result.add("trap", "th r { p");
result.add("trap-\tpers", "th r {\tp @r z");
result.add("trap-\tping", "th r {\tp I N");
result.add("trap-\tpings", "th r {\tp I N z");
result.add("trap-\tpist", "th r {\tp I s t");
result.add("trappe", "th r { p");
result.add("trapped", "th r { p t");
result.add("traps", "th r { p s");
result.add("trash", "th r { S");
result.add("trashed", "th r { S t");
result.add("trask", "th r { s k");
result.add("trau-\tma", "th r O:\tm V");
result.add("trau-\tma-\ttic", "th r O:\tm {\tt I k");
result.add("trau-\tma-\ttize", "th r O:\tm V\tt aI z");
result.add("trau-\tma-\ttized", "th r O:\tm V\tt aI z d");
result.add("trau-\tmas", "th r O:\tm V z");
result.add("traut-\tman", "th r aU t\tm V n");
result.add("traw-\tler", "th r O:\tl @r");
result.add("traw-\tlers", "th r O:\tl @r z");
result.add("tray", "th r eI");
result.add("trays", "th r eI z");
result.add("tre-\tble", "th r e\tb V l");
result.add("tre-\tbled", "th r e\tb V l d");
result.add("tre-\tgo", "th r e\tg @U");
result.add("tre-\tharne", "th r e\th Q@ n");
result.add("tre-\tla", "th r e\tl V");
result.add("tre-\tloar", "th r e\tl O@");
result.add("tre-\tmain", "th r e\tm aI n");
result.add("tre-\tmaine", "th r V\tm eI n");
result.add("tre-\tmayne", "th r e\tm eI n");
result.add("tre-\tmen-\tdous", "th r V\tm e n\td V s");
result.add("tre-\tmen-\tdous-\tly", "th r V\tm e n\td V s\tl i:");
result.add("tre-\tmens", "th r e\tm V n z");
result.add("tre-\tmont", "th r e\tm V n t");
result.add("tre-\tmor", "th r e\tm @r");
result.add("tre-\tmors", "th r e\tm @r z");
result.add("tre-\tmu-\tlous", "th r e m\tj V\tl V s");
result.add("tre-\tmu-\tlous-\tly", "th r e m\tj V\tl V s\tl i:");
result.add("tre-\tna-\try", "th r e\tn e@\ti:");
result.add("tre-\tpi-\tda-\ttion", "th r e\tp I\td eI\tS V n");
result.add("tre-\tstle", "th r e\ts V l");
result.add("tre-\tti-\tnoin", "th r e\tt I\tn OI n");
result.add("tre-\tve-\tlyan", "th r V\tv e l\tj V n");
result.add("tre-\tvi-\tno", "th r V\tv i:\tn @U");
result.add("tre-\tvi-\tso", "th r e\tv i:\ts @U");
result.add("tre-\tvor", "th r e\tv @r");
result.add("trea-\tche-\trous", "th r e\ttS @r\tV s");
result.add("trea-\tche-\try", "th r e\ttS @r\ti:");
result.add("trea-\tcy", "th r eI\ts i:");
result.add("trea-\tding", "th r e\td I N");
result.add("trea-\tson", "th r i:\tz V n");
result.add("trea-\tsu-\trer", "th r e\tZ @r\t@r");
result.add("trea-\tsu-\trers", "th r e\tZ @r\t@r z");
result.add("trea-\tsu-\trer's", "th r e\tZ @r\t@r z");
result.add("trea-\tsu-\tries", "th r e\tZ @r\ti: z");
result.add("trea-\tsu-\try", "th r e\tZ @r\ti:");
result.add("trea-\tsu-\try's", "th r e\tZ @r\ti: z");
result.add("trea-\tsure", "th r e\tZ @r");
result.add("trea-\tsured", "th r e\tZ @r d");
result.add("trea-\tsures", "th r e\tZ @r z");
result.add("trea-\tta-\tble", "th r i:\tt V\tb V l");
result.add("trea-\tted", "th r i:\tt V d");
result.add("trea-\tter", "th r i:\tt @r");
result.add("trea-\tters", "th r i:\tt @r z");
result.add("trea-\tti-\tses", "th r i:\tt I\ts V z");
result.add("trea-\tties", "th r i:\tt i: z");
result.add("trea-\tting", "th r i:\tt I N");
result.add("trea-\ttise", "th r i:\tt I s");
result.add("trea-\tty", "th r i:\tt i:");
result.add("trea-\tty's", "th r i:\tt i: z");
result.add("tread", "th r e d");
result.add("tread-\tmill", "th r e d\tm I l");
result.add("tread-\tmills", "th r e d\tm I l z");
result.add("tread-\tway", "th r e d\tw eI");
result.add("tread-\twell", "th r e d\tw e l");
result.add("tread-\twheel", "th r e d\tw i: l");
result.add("treads", "th r e d z");
result.add("treat", "th r i: t");
result.add("treat-\tment", "th r i: t\tm V n t");
result.add("treat-\tments", "th r i: t\tm V n t s");
result.add("treats", "th r i: t s");
result.add("treb-\tlin-\tka", "th r e b\tl I N\tk @r");
result.add("tree", "th r i:");
result.add("tree-\tless", "th r i:\tl V s");
result.add("tree-\ttop", "th r i:\tt O: p");
result.add("tree-\ttops", "th r i:\tt O: p s");
result.add("treece", "th r i: s");
result.add("treen", "th r i: n");
result.add("trees", "th r i: z");
result.add("trei-\tber", "th r aI\tb @r");
result.add("trek", "th r e k");
result.add("trek-\tking", "th r e\tk I N");
result.add("trekked", "th r e k t");
result.add("treks", "th r e k s");
result.add("trel-\tla", "th r e\tl V");
result.add("trel-\tlis", "th r e\tl I s");
result.add("trem-\tb-\tling", "th r e m\tb V\tl I N");
result.add("trem-\tble", "th r e m\tb V l");
result.add("trem-\tbled", "th r e m\tb V l d");
result.add("tremb-\tly", "th r e m\tb l i:");
result.add("tren-\tchant", "th r e n\ttS V n t");
result.add("tren-\tchard", "th r e N\tk @r d");
result.add("tren-\tcher", "th r e n\ttS @r");
result.add("tren-\tches", "th r e n\ttS V z");
result.add("tren-\tded", "th r e n\td V d");
result.add("tren-\tdi-\ter", "th r e n\td i:\t@r");
result.add("tren-\tdi-\test", "th r e n\td i:\tV s t");
result.add("tren-\tding", "th r e n\td I N");
result.add("tren-\tdy", "th r e n\td i:");
result.add("tren-\tton", "th r e n\tt V n");
result.add("tren-\tton's", "th r e n\tt V n z");
result.add("trench", "th r e n tS");
result.add("trend", "th r e n d");
result.add("trend-\tset-\tter", "th r e n\td s e\tt @r");
result.add("trends", "th r e n d z");
result.add("trent", "th r e n t");
result.add("trente-\tet-\tqua-\tran-\tte", "th r eI n\tt eI k\tw Q@\te n\tt eI");
result.add("trent's", "th r e n t s");
result.add("tres-\tcott", "th r e s\tk V t");
result.add("tres-\tpas-\tsing", "th r e s\tp {\ts I N");
result.add("tres-\tpass", "th r e s\tp { s");
result.add("tres-\tsel", "th r e\ts V l");
result.add("tres-\tses", "th r e\ts V z");
result.add("tress", "th r e s");
result.add("trest", "th r e s t");
result.add("trew", "th r u:");
result.add("trey", "th r eI");
result.add("tri", "th r aI");
result.add("tri-\tad", "th r aI\t{ d");
result.add("tri-\tads", "th r aI\t{ d z");
result.add("tri-\tad's", "th r aI\t{ d z");
result.add("tri-\tage", "th r aI\tI dZ");
result.add("tri-\tal", "th r aI\tV l");
result.add("tri-\tals", "th r aI\tV l z");
result.add("tri-\tal's", "th r aI\tV l z");
result.add("tri-\tan-\tgle", "th r aI\t{ N\tg V l");
result.add("tri-\tan-\tgles", "th r aI\t{ N\tg V l z");
result.add("tri-\tan-\tgle's", "th r aI\t{ N\tg V l z");
result.add("tri-\tan-\tgu-\tla-\ttion", "th r aI\t{ N\tg j u:\tl eI\tS V n");
result.add("tri-\tan-\tgu-\tlar", "th r aI\t{ N\tg j V\tl @r");
result.add("tri-\tath-\tlon", "th r aI\t{ T\tl V n");
result.add("tri-\tba-\tlism", "th r aI\tb V\tl I z m");
result.add("tri-\tbal", "th r aI\tb V l");
result.add("tri-\tbo-\trough", "th r aI\tb @r\t@U");
result.add("tri-\tbu-\tla-\ttion", "th r I b\tj V\tl eI\tS V n");
result.add("tri-\tbu-\tla-\ttions", "th r I b\tj V\tl eI\tS V n z");
result.add("tri-\tbu-\tnal", "th r V b\tj u:\tn V l");
result.add("tri-\tbu-\tnals", "th r aI b\tj u:\tn V l z");
result.add("tri-\tbu-\tta-\tries", "th r I b\tj V\tt e@\ti: z");
result.add("tri-\tbu-\tta-\try", "th r I b\tj V\tt e@\ti:");
result.add("tri-\tbune", "th r I b\tj u: n");
result.add("tri-\tbune's", "th r I b\tj u: n z");
result.add("tri-\tbute", "th r I b\tj u: t");
result.add("tri-\tbutes", "th r I b\tj u: t s");
result.add("tri-\tce-\tra-\ttops", "th r aI\ts e@\tV\tt O: p s");
result.add("tri-\tceps", "th r aI\ts e p s");
result.add("tri-\tcia", "th r I\tS V");
result.add("tri-\tcia's", "th r I\tS V z");
result.add("tri-\tcus-\tpid", "th r aI\tk V s\tp I d");
result.add("tri-\tcy-\tcle", "th r I\ts I\tk V l");
result.add("tri-\tdent", "th r aI\td V n t");
result.add("tri-\ten-\tni-\tal", "th r aI\te\tn i:\tV l");
result.add("tri-\ter", "th r aI\t@r");
result.add("tri-\tfle", "th r aI\tf V l");
result.add("tri-\tfles", "th r aI\tf V l z");
result.add("tri-\tgo", "th r i:\tg @U");
result.add("tri-\tla-\tte-\tral", "th r aI\tl {\tt @r\tV l");
result.add("tri-\tlo-\tgy", "th r I\tl V\tdZ i:");
result.add("tri-\tmes-\tter", "th r aI\tm e s\tt @r");
result.add("tri-\tni-\tdad", "th r I\tn I\td { d");
result.add("tri-\tni-\tty", "th r I\tn I\tt i:");
result.add("tri-\tni-\tty's", "th r I\tn I\tt i: z");
result.add("tri-\to", "th r i:\t@U");
result.add("tri-\tomphe", "th r i:\t@U m f");
result.add("tri-\to's", "th r i:\t@U z");
result.add("tri-\tp-\tling", "th r I\tp V\tl I N");
result.add("tri-\tpar-\ttite", "th r aI\tp Q@\tt aI t");
result.add("tri-\tple", "th r I\tp V l");
result.add("tri-\tpled", "th r I\tp V l d");
result.add("tri-\tples", "th r I\tp V l z");
result.add("tri-\tpo-\tli", "th r I\tp V\tl i:");
result.add("tri-\tpo-\tli's", "th r I\tp V\tl i: z");
result.add("tri-\tpod", "th r aI\tp Q d");
result.add("tri-\tpods", "th r aI\tp Q d z");
result.add("tri-\tremes", "th r aI\tr i: m z");
result.add("tri-\tsha", "th r I\tS V");
result.add("tri-\tsha's", "th r I\tS V z");
result.add("tri-\tstate", "th r aI s\tt eI t");
result.add("tri-\tti-\tum", "th r I\tt i:\tV m");
result.add("tri-\tton", "th r aI\tt V n");
result.add("tri-\tton's", "th r aI\tt V n z");
result.add("tri-\tum-\tphal", "th r i:\tV m\tf V l");
result.add("tri-\tum-\tphant", "th r aI\tV m\tf V n t");
result.add("tri-\tum-\tphant-\tly", "th r aI\tV m\tf V n\tt l i:");
result.add("tri-\tum-\tvi-\trate", "th r aI\tV m\tv @r\tV t");
result.add("tri-\tumph", "th r aI\tV m f");
result.add("tri-\tumphed", "th r aI\tV m f t");
result.add("tri-\tumphs", "th r aI\tV m f s");
result.add("tri-\tvette", "th r I\tv e t");
result.add("tri-\tvi-\ta", "th r I\tv i:\tV");
result.add("tri-\tvi-\ta-\tli-\tty", "th r I\tv i:\t{\tl I\tt i:");
result.add("tri-\tvi-\ta-\tli-\tzes", "th r I\tv i:\tV\tl aI\tz V z");
result.add("tri-\tvi-\ta-\tli-\tzing", "th r I\tv i:\tV\tl aI\tz I N");
result.add("tri-\tvi-\ta-\tlize", "th r I\tv i:\tV\tl aI z");
result.add("tri-\tvi-\ta-\tlized", "th r I\tv i:\tV\tl aI z d");
result.add("tri-\tvi-\tal", "th r I\tv i:\tV l");
result.add("tri-\txie", "th r I k\ts i:");
result.add("tri-\txy", "th r I k\ts i:");
result.add("trib", "th r I b");
result.add("trib-\tbett", "th r I\tb e t");
result.add("trib-\tble", "th r I\tb V l");
result.add("trib-\tbles", "th r I\tb V l z");
result.add("tribe", "th r aI b");
result.add("tribes", "th r aI b z");
result.add("tribe's", "th r aI b z");
result.add("tribes-\tman", "th r aI b\tz m { n");
result.add("tribes-\tmen", "th r aI b\tz m e n");
result.add("tric-\tke-\try", "th r I\tk @r\ti:");
result.add("tric-\tki-\ter", "th r I\tk i:\t@r");
result.add("tric-\tki-\test", "th r I\tk i:\tV s t");
result.add("tric-\tking", "th r I\tk I N");
result.add("tric-\tkle", "th r I\tk V l");
result.add("tric-\tkled", "th r I\tk V l d");
result.add("tric-\tkles", "th r I\tk V l z");
result.add("tric-\tky", "th r I\tk i:");
result.add("trice", "th r aI s");
result.add("trick", "th r I k");
result.add("trick-\tling", "th r I k\tl I N");
result.add("tricked", "th r I k t");
result.add("tricks", "th r I k s");
result.add("tricks-\tter", "th r I k\ts t @r");
result.add("tricks-\tters", "th r I k\ts t @r z");
result.add("tried", "th r aI d");
result.add("tries", "th r aI z");
result.add("trieste", "th r i: s t");
result.add("trif-\tling", "th r aI f\tl I N");
result.add("trig", "th r I g");
result.add("trig-\tge-\tring", "th r I\tg @r\tI N");
result.add("trig-\tger", "th r I\tg @r");
result.add("trig-\tgered", "th r I\tg @r d");
result.add("trig-\tgers", "th r I\tg @r z");
result.add("trig-\tly-\tce-\tride", "th r aI g\tl I\ts @r\taI d");
result.add("trig-\tly-\tce-\trides", "th r aI g\tl I\ts @r\taI d z");
result.add("tril-\tby", "th r I l\tb i:");
result.add("tril-\tling", "th r I\tl I N");
result.add("tril-\tlion", "th r I l\tj V n");
result.add("tril-\tlions", "th r I l\tj V n z");
result.add("tril-\tlo", "th r I\tl @U");
result.add("trill", "th r I l");
result.add("trim", "th r I m");
result.add("trim-\tble", "th r I m\tb V l");
result.add("trim-\tmer", "th r I\tm @r");
result.add("trim-\tmers", "th r I\tm @r z");
result.add("trim-\tming", "th r I\tm I N");
result.add("trim-\tmings", "th r I\tm I N z");
result.add("trimmed", "th r I m d");
result.add("trims", "th r I m z");
result.add("trin-\tco-\tma-\tlee", "th r I N\tk @U\tm V\tl i:");
result.add("trin-\tket", "th r I N\tk V t");
result.add("trin-\tkets", "th r I N\tk V t s");
result.add("trin-\tkle", "th r I N\tk V l");
result.add("trine", "th r aI n");
result.add("trip", "th r I p");
result.add("trip-\tlet", "th r I p\tl V t");
result.add("trip-\tlets", "th r I p\tl V t s");
result.add("trip-\tlett", "th r I p\tl e t");
result.add("trip-\tli-\tcate", "th r I p\tl I\tk V t");
result.add("trip-\tper", "th r I\tp @r");
result.add("trip-\tpers", "th r I\tp @r z");
result.add("trip-\tping", "th r I\tp I N");
result.add("trip-\tple", "th r I\tp V l");
result.add("trip-\ttych", "th r I p\tt I k");
result.add("tripe", "th r aI p");
result.add("tripp", "th r I p");
result.add("trippe", "th r I p");
result.add("tripped", "th r I p t");
result.add("trips", "th r I p s");
result.add("trip's", "th r I p s");
result.add("tris-\tta", "th r I s\tt V");
result.add("tris-\ttan", "th r I s\tt { n");
result.add("trish", "th r I S");
result.add("trist-\tram", "th r I s\tt r V m");
result.add("trite", "th r aI t");
result.add("trites", "th r aI t s");
result.add("tro-\tia", "th r @U\tj V");
result.add("tro-\tjan", "th r @U\tdZ V n");
result.add("tro-\tjans", "th r @U\tdZ V n z");
result.add("tro-\tphies", "th r @U\tf i: z");
result.add("tro-\tphy", "th r @U\tf i:");
result.add("tro-\tpi-\tca-\tna", "th r Q\tp I\tk {\tn V");
result.add("tro-\tpi-\tca-\tna's", "th r Q\tp I\tk {\tn V z");
result.add("tro-\tpi-\tcal", "th r Q\tp I\tk V l");
result.add("tro-\tpic", "th r Q\tp I k");
result.add("tro-\tpics", "th r Q\tp I k s");
result.add("tro-\tpo-\tpause", "th r Q\tp V\tp O: z");
result.add("tro-\tva-\tto", "th r @U\tv Q\tt @U");
result.add("tro-\tva-\ttore", "th r @U\tv V\tt O@");
result.add("tro-\twel", "th r aU\tw e l");
result.add("tro-\txell", "th r Q k\ts V l");
result.add("tro-\tya-\tnos", "th r OI\tQ\tn @U s");
result.add("troc-\tki", "th r Q\tk i:");
result.add("troche", "th r Q tS");
result.add("trod", "th r Q d");
result.add("troi-\tka", "th r OI\tk V");
result.add("trois", "th w Q");
result.add("trol-\tley", "th r Q\tl i:");
result.add("trol-\tleys", "th r Q\tl i: z");
result.add("trol-\tling", "th r @U\tl I N");
result.add("troll", "th r @U l");
result.add("trom-\tbo-\tnist", "th r Q m\tb @U\tn I s t");
result.add("trom-\tbone", "th r Q m\tb @U n");
result.add("trom-\tbones", "th r Q m\tb @U n z");
result.add("tromp", "th r Q m p");
result.add("tron", "th r Q n");
result.add("trone", "th r @U n");
result.add("troo-\tper", "th r u:\tp @r");
result.add("troo-\tpers", "th r u:\tp @r z");
result.add("troo-\tper's", "th r u:\tp @r z");
result.add("troo-\tping", "th r u:\tp I N");
result.add("troon", "th r u: n");
result.add("troop", "th r u: p");
result.add("trooped", "th r u: p t");
result.add("troops", "th r u: p s");
result.add("troop's", "th r u: p s");
result.add("tros-\tper", "th r Q s\tp @r");
result.add("trot", "th r Q t");
result.add("trot-\tsky", "th r Q t\ts k i:");
result.add("trot-\tted", "th r Q\tt V d");
result.add("trot-\tter", "th r Q\tt @r");
result.add("trot-\tting", "th r Q\tt I N");
result.add("troth", "th r @U T");
result.add("trots", "th r Q t s");
result.add("trou-\tb-\tling", "th r V\tb V\tl I N");
result.add("trou-\tba-\tdour", "th r u:\tb V\td O@");
result.add("trou-\tble", "th r V\tb V l");
result.add("trou-\tble-\tma-\tker", "th r V\tb V l\tm eI\tk @r");
result.add("trou-\tble-\tma-\tkers", "th r V\tb V l\tm eI\tk @r z");
result.add("trou-\tble-\tshoo-\tter", "th r V\tb V l\tS u:\tt @r");
result.add("trou-\tble-\tsome", "th r V\tb V l\ts V m");
result.add("trou-\tbled", "th r V\tb V l d");
result.add("trou-\tbles", "th r V\tb V l z");
result.add("trou-\tser", "th r aU\tz @r");
result.add("trou-\tsers", "th r aU\tz @r z");
result.add("trough", "th r O: f");
result.add("troughs", "th r O: f s");
result.add("troun-\tcing", "th r aU n\ts I N");
result.add("trounce", "th r aU n s");
result.add("trounced", "th r aU n s t");
result.add("troup", "th r u: p");
result.add("troupe", "th r u: p");
result.add("troupes", "th r u: p s");
result.add("troupe's", "th r u: p s");
result.add("trout", "th r aU t");
result.add("trout-\tman", "th r aU t\tm V n");
result.add("trout's", "th r aU t s");
result.add("trove", "th r @U v");
result.add("trow", "th r @U");
result.add("trow-\tbridge", "th r @U b\tr I dZ");
result.add("troy", "th r OI");
result.add("tru-\tan-\tcy", "th r u:\tV n\ts i:");
result.add("tru-\tant", "th r u:\tV n t");
result.add("tru-\tcu-\tlent", "th r V k\tj V\tl V n t");
result.add("tru-\tda", "th r u:\td V");
result.add("tru-\tdeau", "th r u:\td @U");
result.add("tru-\tdie", "th r u:\td i:");
result.add("tru-\tdy", "th r u:\td i:");
result.add("tru-\ter", "th r u:\t@r");
result.add("tru-\test", "th r u:\tV s t");
result.add("tru-\ti-\tsm", "th r u:\tI\tz V m");
result.add("tru-\tjil-\tlo", "th r u:\th i:\t@U");
result.add("tru-\tly", "th r u:\tl i:");
result.add("tru-\tman", "th r u:\tm V n");
result.add("tru-\tman's", "th r u:\tm V n z");
result.add("tru-\tro", "th r u:\tr @U");
result.add("tru-\tscott", "th r V s\tk V t");
result.add("truc-\tkee", "th r V\tk i:");
result.add("truc-\tker", "th r V\tk @r");
result.add("truc-\tkers", "th r V\tk @r z");
result.add("truc-\tking", "th r V\tk I N");
result.add("truce", "th r u: s");
result.add("truck", "th r V k");
result.add("truck-\tload", "th r V k\tl @U d");
result.add("truck-\tloads", "th r V k\tl @U d z");
result.add("trucked", "th r V k t");
result.add("trucks", "th r V k s");
result.add("truck's", "th r V k s");
result.add("trud-\tgen", "th r V\tdZ V n");
result.add("trud-\tges", "th r V\tdZ V z");
result.add("trud-\tging", "th r V\tdZ I N");
result.add("trude", "th r u: d");
result.add("trudge", "th r V dZ");
result.add("trudged", "th r V dZ d");
result.add("true", "th r u:");
result.add("true-\tlove", "th r u:\tl V v");
result.add("true-\tman", "th r U\tm V n");
result.add("trueb-\tlood", "th r u: b\tl V d");
result.add("trues-\tdale", "th r u: z\td eI l");
result.add("truf-\tfaut", "th r u:\tf @U");
result.add("truf-\tfaut's", "th r u:\tf @U z");
result.add("truf-\tfle", "th r V\tf V l");
result.add("truf-\tfles", "th r V\tf V l z");
result.add("truitt", "th r u: t");
result.add("trull", "th r V l");
result.add("trum-\tbull", "th r V m\tb V l");
result.add("trum-\tpe-\tted", "th r V m\tp V\tt V d");
result.add("trum-\tpe-\tter", "th r V m\tp V\tt @r");
result.add("trum-\tpe-\tting", "th r V m\tp V\tt I N");
result.add("trum-\tpet", "th r V m\tp V t");
result.add("trum-\tpets", "th r V m\tp V t s");
result.add("trump", "th r V m p");
result.add("trumped", "th r V m p t");
result.add("trumps", "th r V m p s");
result.add("trump's", "th r V m p s");
result.add("trun-\tca-\tted", "th r V N\tk eI\tt V d");
result.add("trun-\tcate", "th r V N\tk eI t");
result.add("trun-\tcheon", "th r V n\ttS V n");
result.add("trun-\tcheons", "th r V n\ttS V n z");
result.add("trun-\tdle", "th r V n\td V l");
result.add("trun-\tdled", "th r V n\td V l d");
result.add("trunk", "th r V N k");
result.add("trunks", "th r V N k s");
result.add("truong", "th r O: N");
result.add("trus-\tsell", "th r V\ts V l");
result.add("trus-\tses", "th r V\ts V z");
result.add("trus-\tted", "th r V s\tt V d");
result.add("trus-\ttee", "th r V s\tt i:");
result.add("trus-\ttee-\tship", "th r V s\tt i:\tS I p");
result.add("trus-\ttees", "th r V s\tt i: z");
result.add("trus-\ttee's", "th r V s\tt i: z");
result.add("trus-\tting", "th r V s\tt I N");
result.add("trus-\tty", "th r V s\tt i:");
result.add("truss", "th r V s");
result.add("trust", "th r V s t");
result.add("trust-\twor-\tthi-\tness", "th r V s\tt w @r\tD i:\tn V s");
result.add("trust-\twor-\tthy", "th r V s\tt w @r\tD i:");
result.add("trusts", "th r V s t s");
result.add("trust's", "th r V s t s");
result.add("truth", "th r u: T");
result.add("truth-\tful", "th r u: T\tf V l");
result.add("truth-\tful-\tly", "th r u: T\tf V\tl i:");
result.add("truth-\tful-\tness", "th r u: T\tf V l\tn V s");
result.add("truths", "th r u: T s");
result.add("try", "th r aI");
result.add("try-\ting", "th r aI\tI N");
result.add("try-\ton", "th r aI\tQ n");
result.add("try-\tout", "th r aI\taU t");
result.add("try-\touts", "th r aI\taU t s");
result.add("try-\tphe-\tna", "th r I\tf V\tn V");
result.add("tryg-\tve", "th r I g\tv i:");
result.add("tryst", "th r aI s t");
result.add("t's", "th i: z");
result.add("tsai", "th s aI");
result.add("tsai's", "th s aI z");
result.add("tsar", "z Q@");
result.add("tse", "th s i:");
result.add("tseng", "th s e N");
result.add("tset-\tse", "th s i: t\ts i:");
result.add("tsing-\ttao", "s I N\tt aU");
result.add("tso", "th s @U");
result.add("tsu-\tda", "th s u:\td V");
result.add("tsu-\ti", "th s u:\ti:");
result.add("tsu-\tna-\tmi", "th s u:\tn Q\tm i:");
result.add("tu", "th u:");
result.add("tu-\tba", "th u:\tb V");
result.add("tu-\tbal", "th u:\tb V l");
result.add("tu-\tber-\tcu-\tlo-\tsis", "th V\tb @r k\tj V\tl @U\ts I s");
result.add("tu-\tbing", "th u:\tb I N");
result.add("tu-\tbu-\tlar", "th u: b\tj V\tl @r");
result.add("tu-\tbule", "th u: b\tj u: l");
result.add("tu-\tcu-\tman", "th u: k\tj u:\tm V n");
result.add("tu-\tdor", "th u:\td @r");
result.add("tu-\tdor's", "th j u:\td @r z");
result.add("tu-\tfa", "th u:\tf V");
result.add("tu-\ti-\ttion", "th j u:\tI\tS V n");
result.add("tu-\ti-\ttions", "th u:\tI\tS V n z");
result.add("tu-\tla", "th u:\tl V");
result.add("tu-\tlane", "th u:\tl eI n");
result.add("tu-\tlip", "th u:\tl I p");
result.add("tu-\tlips", "th u:\tl I p s");
result.add("tu-\tme-\tscent", "th u:\tm e\ts V n t");
result.add("tu-\tmor", "th u:\tm @r");
result.add("tu-\tmors", "th u:\tm @r z");
result.add("tu-\tmul-\ttu-\tous", "th u:\tm V l\ttS u:\tV s");
result.add("tu-\tmult", "th u:\tm V l t");
result.add("tu-\tna", "th u:\tn V");
result.add("tu-\tna-\tble", "th u:\tn V\tb V l");
result.add("tu-\tnas", "th u:\tn V z");
result.add("tu-\tner", "th u:\tn @r");
result.add("tu-\tni-\tca", "th u:\tn I\tk V");
result.add("tu-\tni-\tca's", "th u:\tn I\tk V z");
result.add("tu-\tni-\tcate", "th u:\tn I\tk V t");
result.add("tu-\tni-\tsia", "th u:\tn i:\tZ V");
result.add("tu-\tni-\tsian", "th u:\tn i:\tZ V n");
result.add("tu-\tnic", "th u:\tn I k");
result.add("tu-\tning", "th u:\tn I N");
result.add("tu-\tnis", "th u:\tn I s");
result.add("tu-\tpe-\tlo", "th j u:\tp V\tl @U");
result.add("tu-\tran-\tdot", "th @r\t{ n\td V t");
result.add("tu-\trenne", "th j u:\tr e n");
result.add("tu-\tri", "th U@\ti:");
result.add("tu-\trin", "th j U@\tI n");
result.add("tu-\tring", "th U@\tI N");
result.add("tu-\tshes", "th U\tS V z");
result.add("tu-\tte-\tlage", "th j u:\tt V\tl I dZ");
result.add("tu-\tto-\tri-\tal", "th u:\tt O@\ti:\tV l");
result.add("tu-\tto-\tri-\tals", "th u:\tt O@\ti:\tV l z");
result.add("tu-\tto-\tring", "th u:\tt @r\tI N");
result.add("tu-\ttor", "th u:\tt @r");
result.add("tu-\ttored", "th u:\tt @r d");
result.add("tu-\ttors", "th u:\tt @r z");
result.add("tu-\ttu", "th u:\tt u:");
result.add("tu-\txe-\tdo", "th V k\ts i:\td @U");
result.add("tu-\txe-\tdos", "th V k\ts i:\td @U z");
result.add("tub", "th V b");
result.add("tub-\tby", "th V\tb i:");
result.add("tub-\tman", "th V b\tm V n");
result.add("tubb", "th V b");
result.add("tube", "th u: b");
result.add("tubes", "th u: b z");
result.add("tubs", "th V b z");
result.add("tuc-\tker", "th V\tk @r");
result.add("tuc-\tker-\tman", "th V\tk @r\tm V n");
result.add("tuc-\tker's", "th V\tk @r z");
result.add("tuc-\tking", "th V\tk I N");
result.add("tuc-\tson", "th u:\ts Q n");
result.add("tuch-\tman", "th V k\tm V n");
result.add("tuck", "th V k");
result.add("tucked", "th V k t");
result.add("tucks", "th V k s");
result.add("tue", "th u:");
result.add("tuel", "th u: l");
result.add("tues-\tday", "th u: z\td i:");
result.add("tues-\tdays", "th u: z\td eI z");
result.add("tues-\tday's", "th u: z\td i: z");
result.add("tuf-\tted", "th V f\tt V d");
result.add("tuff", "th V f");
result.add("tuft", "th V f t");
result.add("tufts", "th V f t s");
result.add("tug", "th V g");
result.add("tug-\tboat", "th V g\tb @U t");
result.add("tug-\tboats", "th V g\tb @U t s");
result.add("tug-\tging", "th V\tg I N");
result.add("tug-\tman", "th V g\tm V n");
result.add("tugged", "th V g d");
result.add("tugs", "th V g z");
result.add("tul-\tley", "th u:\tl i:");
result.add("tul-\tli-\ta", "th V\tl i:\tV");
result.add("tul-\tli-\to", "th u:\tl i:\t@U");
result.add("tul-\tli-\tus", "th V\tl i:\tV s");
result.add("tul-\tlos", "th V\tl @U z");
result.add("tul-\tly", "th V\tl i:");
result.add("tul-\tsa", "th V l\ts V");
result.add("tull", "th V l");
result.add("tum-\tb-\tling", "th V m\tb V\tl I N");
result.add("tum-\tble", "th V m\tb V l");
result.add("tum-\tbled", "th V m\tb V l d");
result.add("tum-\tbles", "th V m\tb V l z");
result.add("tum-\tmies", "th V\tm i: z");
result.add("tum-\tmy", "th V\tm i:");
result.add("tumb-\tler", "th V m\tb l @r");
result.add("tumb-\tlers", "th V m\tb l @r z");
result.add("tumb-\tler's", "th V m\tb l @r z");
result.add("tums", "th V m z");
result.add("tun-\tgate", "th u:\tN eI t");
result.add("tun-\tku", "th V N\tk u:");
result.add("tun-\tne-\tling", "th V\tn V\tl I N");
result.add("tun-\tnel", "th V\tn V l");
result.add("tun-\tnell", "th V\tn V l");
result.add("tun-\tnels", "th V\tn V l z");
result.add("tun-\tney", "th V\tn i:");
result.add("tun-\tny", "th V\tn i:");
result.add("tund-\tra", "th V n\td r V");
result.add("tune", "th u: n");
result.add("tune-\tful", "th u: n\tf V l");
result.add("tune-\tup", "th u:\tn V p");
result.add("tuned", "th u: n d");
result.add("tunes", "th u: n z");
result.add("tung", "th V N");
result.add("tung's", "th V N z");
result.add("tungs-\tten", "th V N\ts t V n");
result.add("tup-\tper-\tware", "th V\tp @r\tw e@");
result.add("tur-\tban", "th @r\tb V n");
result.add("tur-\tbans", "th @r\tb V n z");
result.add("tur-\tbi-\tdi-\tty", "th @r\tb I\td I\tt i:");
result.add("tur-\tbine", "th @r\tb aI n");
result.add("tur-\tbines", "th @r\tb aI n z");
result.add("tur-\tbo", "th @r\tb @U");
result.add("tur-\tbo-\tchar-\tges", "th @r\tb @U\ttS Q@\tdZ V z");
result.add("tur-\tbo-\tchar-\tging", "th @r\tb @U\ttS Q@\tdZ I N");
result.add("tur-\tbo-\tcharge", "th @r\tb @U\ttS Q@ dZ");
result.add("tur-\tbo-\tcharged", "th @r\tb @U\ttS Q@ dZ d");
result.add("tur-\tbo-\tfan", "th @r\tb @U\tf { n");
result.add("tur-\tbo-\tjet", "th @r\tb @U\tdZ e t");
result.add("tur-\tbo-\tprop", "th @r\tb @U p\tr Q p");
result.add("tur-\tbo-\tprops", "th @r\tb @U p\tr Q p s");
result.add("tur-\tbos", "th @r\tb @U z");
result.add("tur-\tbot", "th @r\tb @U");
result.add("tur-\tbu-\tlence", "th @r b\tj V\tl V n s");
result.add("tur-\tbu-\tlent", "th @r b\tj V\tl V n t");
result.add("tur-\tco", "th @r\tk @U");
result.add("tur-\tgid", "th @r\tdZ I d");
result.add("tur-\tkey", "th @r\tk i:");
result.add("tur-\tkeys", "th @r\tk i: z");
result.add("tur-\tkey's", "th @r\tk i: z");
result.add("tur-\tkic", "th @r\tk I k");
result.add("tur-\tkish", "th @r\tk I S");
result.add("tur-\tley", "th @r\tl i:");
result.add("tur-\tmel", "th @r\tm V l");
result.add("tur-\tmoil", "th @r\tm OI l");
result.add("tur-\tner", "th @r\tn @r");
result.add("tur-\tner's", "th @r\tn @r z");
result.add("tur-\tney", "th @r\tn i:");
result.add("tur-\tning", "th @r\tn I N");
result.add("tur-\tnip", "th @r\tn I p");
result.add("tur-\tnips", "th @r\tn I p s");
result.add("tur-\tpen-\ttine", "th @r\tp V n\tt aI n");
result.add("tur-\tpi-\ttude", "th @r\tp I\tt u: d");
result.add("tur-\tpin", "th @r\tp I n");
result.add("tur-\tquoise", "th @r k\tw OI z");
result.add("tur-\trell", "th O@\tV l");
result.add("tur-\tret", "th @r\tV t");
result.add("tur-\trets", "th @r\tV t s");
result.add("tur-\ttle", "th @r\tt V l");
result.add("tur-\ttle-\tneck", "th @r\tt V l\tn e k");
result.add("tur-\ttle-\tnecks", "th @r\tt V l\tn e k s");
result.add("tur-\ttles", "th @r\tt V l z");
result.add("tur-\ttle's", "th @r\tt V l z");
result.add("tur-\tton", "th @r\tt V n");
result.add("tur-\tvy", "th @r\tv i:");
result.add("turbe-\tville", "th @r b\tv I l");
result.add("ture", "th U@");
result.add("turf", "th @r f");
result.add("turk", "th @r k");
result.add("turk-\tme-\tnis-\ttan", "th @r k\tm e\tn I s\tt { n");
result.add("turk-\tmen", "th @r k\tm e n");
result.add("turks", "th @r k s");
result.add("turn", "th @r n");
result.add("turn-\ta-\tbout", "th @r\tn V\tb aU t");
result.add("turn-\ta-\tround", "th @r\tn @r\taU n d");
result.add("turn-\ta-\trounds", "th @r\tn @r\taU n d z");
result.add("turn-\tbull", "th @r n\tb U l");
result.add("turn-\tcoat", "th @r n\tk @U t");
result.add("turn-\tdown", "th @r n\td aU n");
result.add("turn-\tkey", "th @r n\tk i:");
result.add("turn-\to-\tver", "th @r\tn @U\tv @r");
result.add("turn-\to-\tvers", "th @r\tn @U\tv @r z");
result.add("turn-\toff", "th @r\tn O: f");
result.add("turn-\tout", "th @r\tn aU t");
result.add("turn-\touts", "th @r\tn aU t s");
result.add("turn-\tpike", "th @r n\tp aI k");
result.add("turn-\tpikes", "th @r n\tp aI k s");
result.add("turn-\tstile", "th @r n\ts t aI l");
result.add("turn-\tstiles", "th @r n\ts t aI l z");
result.add("turn-\tta-\tble", "th @r n\tt eI\tb V l");
result.add("turn-\tta-\tbles", "th @r n\tt eI\tb V l z");
result.add("turned", "th @r n d");
result.add("turns", "th @r n z");
result.add("tus-\tca-\tloo-\tsa", "th V s\tk V\tl u:\ts V");
result.add("tus-\tca-\tloo-\tsa's", "th V s\tk V\tl u:\ts V z");
result.add("tus-\tca-\tny", "th V s\tk V\tn i:");
result.add("tus-\tcan", "th V s\tk V n");
result.add("tus-\tke-\tgee", "th V s\tk V\tg i:");
result.add("tus-\tsaud's", "th u:\ts @U z");
result.add("tus-\tsle", "th V\ts V l");
result.add("tus-\tsled", "th V\ts V l d");
result.add("tus-\tsles", "th V\ts V l z");
result.add("tus-\ttin", "th V s\tt I n");
result.add("tush", "th U S");
result.add("tusk", "th V s k");
result.add("tusks", "th V s k s");
result.add("tut", "th V t");
result.add("tut-\tsi", "th u: t\ts i:");
result.add("tut-\tsis", "th u: t\ts i: z");
result.add("tut-\tti", "th u:\tt i:");
result.add("tut-\ttle", "th V\tt V l");
result.add("tut-\twi-\tler", "th V t\tw aI\tl @r");
result.add("tutt", "th V t");
result.add("tux", "th V k s");
result.add("tuz-\tla", "th u: z\tl V");
result.add("tuz-\tla's", "th u: z\tl V z");
result.add("twad-\tdell", "th w Q\td e l");
result.add("twad-\tdle", "th w Q\td V l");
result.add("twain", "th w eI n");
result.add("twain's", "th w eI n z");
result.add("twan-\tgy", "th w Q n\tdZ i:");
result.add("twang", "th w Q N");
result.add("twas", "th w V z");
result.add("twea-\tking", "th w i:\tk I N");
result.add("tweak", "th w i: k");
result.add("tweaked", "th w i: k t");
result.add("tweaks", "th w i: k s");
result.add("twee-\tdle", "th w i:\td V l");
result.add("twee-\tdy", "th w i:\td i:");
result.add("twee-\tzer", "th w i:\tz @r");
result.add("twee-\tzers", "th w i:\tz @r z");
result.add("tweed", "th w i: d");
result.add("tweet", "th w i: t");
result.add("twelfth", "th w e l f T");
result.add("twelve", "th w e l v");
result.add("twen-\tti-\teth", "th w e n\tt i:\tV T");
result.add("twen-\tties", "th w e n\tt i: z");
result.add("twen-\tty", "th w e n\tt i:");
result.add("twen-\tty's", "th w e n\tt i: z");
result.add("twi-\tlight", "th w aI\tl aI t");
result.add("twi-\tning", "th w aI\tn I N");
result.add("twice", "th w aI s");
result.add("twid-\tdle", "th w I\td V l");
result.add("twidd-\tling", "th w I d\tl I N");
result.add("twig", "th w I g");
result.add("twig-\tgy", "th w I\tg i:");
result.add("twigged", "th w I g d");
result.add("twigs", "th w I g z");
result.add("twill", "th w I l");
result.add("twin", "th w I n");
result.add("twin-\tjet", "th w I n\tdZ e t");
result.add("twin-\tjets", "th w I n\tdZ e t s");
result.add("twin-\tk-\tling", "th w I N\tk V\tl I N");
result.add("twin-\tkie", "th w I N\tk i:");
result.add("twin-\tkies", "th w I N\tk i: z");
result.add("twin-\tkle", "th w I N\tk V l");
result.add("twin-\tkles", "th w I N\tk V l z");
result.add("twine", "th w aI n");
result.add("twined", "th w aI n d");
result.add("twinge", "th w I n dZ");
result.add("twins", "th w I n z");
result.add("twins-\tburg", "th w I n\tz b @r g");
result.add("twir-\tler", "th w @r\tl @r");
result.add("twir-\tling", "th w @r\tl I N");
result.add("twirl", "th w @r l");
result.add("twirled", "th w @r l d");
result.add("twirls", "th w @r l z");
result.add("twis-\tted", "th w I s\tt V d");
result.add("twis-\tter", "th w I s\tt @r");
result.add("twis-\tters", "th w I s\tt @r z");
result.add("twis-\tting", "th w I s\tt I N");
result.add("twis-\tty", "th w I s\tt i:");
result.add("twist", "th w I s t");
result.add("twists", "th w I s t s");
result.add("twit-\tches", "th w I\ttS V z");
result.add("twit-\tching", "th w I\ttS I N");
result.add("twit-\tty", "th w I\tt i:");
result.add("twitch", "th w I tS");
result.add("twitched", "th w I tS t");
result.add("twite", "th w aI t");
result.add("two", "th u:");
result.add("two-\tfold", "th u:\tf @U l d");
result.add("two-\tsome", "th u:\ts V m");
result.add("two-\tthirds", "th u:\tT @r d z");
result.add("twomb-\tly", "th w u: m\tb l i:");
result.add("twos", "th u: z");
result.add("two's", "th u: z");
result.add("twy-\tford", "th w aI\tf @r d");
result.add("twy-\tla", "th w aI\tl V");
result.add("ty", "th aI");
result.add("ty-\tbalt", "th I\tb V l t");
result.add("ty-\tcoon", "th aI\tk u: n");
result.add("ty-\tcoons", "th aI\tk u: n z");
result.add("ty-\tcoon's", "th aI\tk u: n z");
result.add("ty-\ter", "th aI\t@r");
result.add("ty-\ting", "th aI\tI N");
result.add("ty-\tle-\tnol", "th aI\tl V\tn O: l");
result.add("ty-\tler", "th aI\tl @r");
result.add("ty-\tler's", "th aI\tl @r z");
result.add("ty-\tnan", "th aI\tn V n");
result.add("ty-\tner", "th aI\tn @r");
result.add("ty-\tpea-\tble", "th aI\tp V\tb V l");
result.add("ty-\tpi-\tcal", "th I\tp I\tk V l");
result.add("ty-\tpi-\tfied", "th I\tp I\tf aI d");
result.add("ty-\tpi-\tfies", "th I\tp I\tf aI z");
result.add("ty-\tpi-\tfy", "th I\tp I\tf aI");
result.add("ty-\tpical-\tly", "th I\tp I k\tl i:");
result.add("ty-\tping", "th aI\tp I N");
result.add("ty-\tpings", "th aI\tp I N z");
result.add("ty-\tpist", "th aI\tp I s t");
result.add("ty-\tpists", "th aI\tp I s t s");
result.add("ty-\tpo", "th aI\tp @U");
result.add("ty-\tpo-\tgra-\tphi-\tcal", "th aI\tp V g\tr {\tf I\tk V l");
result.add("ty-\tpo-\tgra-\tphy", "th V\tp Q g\tr V\tf i:");
result.add("ty-\tra", "th aI\tr V");
result.add("ty-\tran-\tni-\tcal", "th @r\t{\tn I\tk V l");
result.add("ty-\tran-\tnies", "th I@\tV\tn i: z");
result.add("ty-\tran-\tno-\tsau-\trus", "th I@\t{\tn V\ts O@\tV s");
result.add("ty-\tran-\tny", "th I@\tV\tn i:");
result.add("ty-\trant", "th aI\tr V n t");
result.add("ty-\trants", "th aI\tr V n t s");
result.add("ty-\tree", "th aI\tr i:");
result.add("ty-\trone", "th aI\tr @U n");
result.add("ty-\tson", "th aI\ts V n");
result.add("ty-\tson's", "th aI\ts V n z");
result.add("tye", "th aI");
result.add("tyke", "th aI k");
result.add("tym-\tpa-\tnic", "th I m\tp {\tn I k");
result.add("tym-\tpa-\tnum", "th I m\tp V\tn V m");
result.add("tyn-\tdall", "th I n\td V l");
result.add("tyne", "th aI n");
result.add("tynes", "th aI n z");
result.add("typ-\thoid", "th aI\tf OI d");
result.add("typ-\thoon", "th aI\tf u: n");
result.add("typ-\thoons", "th aI\tf u: n z");
result.add("typ-\thus", "th aI\tf V s");
result.add("type", "th aI p");
result.add("type-\tcas-\tting", "th aI p\tk { s\tt I N");
result.add("type-\tcast", "th aI p\tk { s t");
result.add("type-\tfa-\tces", "th aI p\tf eI\ts V z");
result.add("type-\tface", "th aI p\tf eI s");
result.add("type-\tset", "th aI p\ts e t");
result.add("type-\tset-\tting", "th aI p\ts e\tt I N");
result.add("type-\twri-\tter", "th aI p\tr aI\tt @r");
result.add("type-\twri-\tters", "th aI p\tr aI\tt @r z");
result.add("type-\twri-\tting", "th aI p\tr aI\tt I N");
result.add("type-\twrit-\tten", "th aI p\tr I\tt V n");
result.add("typed", "th aI p t");
result.add("types", "th aI p s");
result.add("tyr-\trell", "th aI\tr e l");
result.add("tyr-\trhe-\tni-\tan", "th @r\ti:\tn i:\tV n");
result.add("tyre", "th aI r");
result.add("u", "j u:");
result.add("u-\tart", "j u:\tQ@ t");
result.add("u-\tbi-\tqui-\ttous", "j u:\tb I k\tw I\tt V s");
result.add("u-\tbi-\tqui-\tty", "j u:\tb I k\tw I\tt i:");
result.add("u-\tchi-\tda", "u:\tk i:\td V");
result.add("u-\tdale", "j u:\td eI l");
result.add("u-\tdall", "j u:\td V l");
result.add("u-\tdell", "V\td V l");
result.add("u-\tdelle", "V\td e l");
result.add("u-\tdo", "u:\td @U");
result.add("u-\tgan-\tda", "j u:\tg { n\td V");
result.add("u-\tgan-\tdan", "j u:\tg { n\td V n");
result.add("u-\tgan-\tda's", "j u:\tg { n\td V z");
result.add("u-\tkase", "j u:\tk eI z");
result.add("u-\tku-\tle-\tle", "j u:\tk V\tl eI\tl i:");
result.add("u-\tla", "j u:\tl V");
result.add("u-\tlys-\tses", "j u:\tl I\ts i: z");
result.add("u-\tma", "j u:\tm V");
result.add("u-\tna", "u:\tn V");
result.add("u-\tna-\tba-\tshed-\tly", "V\tn V\tb {\tS V d\tl i:");
result.add("u-\tna-\tba-\tted", "V\tn V\tb eI\tt V d");
result.add("u-\tna-\tbashed", "V\tn V\tb { S t");
result.add("u-\tna-\tble", "V\tn eI\tb V l");
result.add("u-\tna-\tbridged", "V\tn V b\tr I dZ d");
result.add("u-\tna-\tdorn", "V\tn V\td O@ n");
result.add("u-\tna-\tdorned", "V\tn V\td O@ n d");
result.add("u-\tna-\tdul-\tte-\tra-\tted", "V\tn V\td V l\tt @r\teI\tt V d");
result.add("u-\tna-\tfraid", "V\tn V f\tr eI d");
result.add("u-\tna-\tli-\te-\tna-\tble", "V\tn eI\tl i:\te\tn V\tb V l");
result.add("u-\tna-\tmen-\tded", "V\tn V\tm e n\td V d");
result.add("u-\tna-\tmor-\ttized", "V\tn {\tm @r\tt aI z d");
result.add("u-\tna-\tni-\tmi-\tty", "j u:\tn V\tn I\tm V\tt i:");
result.add("u-\tna-\tni-\tmous", "j u:\tn {\tn I\tm V s");
result.add("u-\tna-\tni-\tmous-\tly", "j u:\tn {\tn I\tm V s\tl i:");
result.add("u-\tna-\tpo-\tlo-\tge-\ttic", "V\tn V\tp Q\tl V\tdZ e\tt I k");
result.add("u-\tna-\tsha-\tmed-\tly", "V\tn V\tS eI\tm V d\tl i:");
result.add("u-\tna-\tshamed", "V\tn V\tS eI m d");
result.add("u-\tna-\tvai-\tla-\tbi-\tli-\tty", "V\tn V\tv eI\tl V\tb I\tl V\tt i:");
result.add("u-\tna-\tvai-\tla-\tble", "V\tn V\tv eI\tl V\tb V l");
result.add("u-\tna-\tvai-\tling", "V\tn V\tv eI\tl I N");
result.add("u-\tna-\tvoi-\tda-\tble", "V\tn V\tv OI\td V\tb V l");
result.add("u-\tna-\tvoi-\tdab-\tly", "V\tn V\tv OI\td V b\tl i:");
result.add("u-\tna-\tware", "V\tn V\tw e@");
result.add("u-\tna-\twares", "V\tn V\tw e@ z");
result.add("u-\tnac-\tcep-\tta-\tble", "V\tn { k\ts e p\tt V\tb V l");
result.add("u-\tnac-\tcep-\ttab-\tly", "V\tn { k\ts e p\tt V b\tl i:");
result.add("u-\tnac-\tcom-\tpa-\tnied", "V\tn V\tk V m\tp V\tn i: d");
result.add("u-\tnac-\tcoun-\tta-\tble", "V\tn V\tk aU n\tt V\tb V l");
result.add("u-\tnac-\tcoun-\ttab-\tly", "V\tn V\tk aU n\tt V b\tl i:");
result.add("u-\tnac-\tcoun-\tted", "V\tn V\tk aU n\tt V d");
result.add("u-\tnac-\tcre-\tdi-\tted", "V\tn V k\tr e\td I\tt V d");
result.add("u-\tnac-\tcus-\ttomed", "V\tn V\tk V s\tt V m d");
result.add("u-\tnad-\tdressed", "V\tn V d\tr e s t");
result.add("u-\tnad-\tjus-\tted", "V\tn V\tdZ V s\tt V d");
result.add("u-\tnad-\tjust", "V\tn V\tdZ V s t");
result.add("u-\tnaf-\tfec-\tted", "V\tn V\tf e k\tt V d");
result.add("u-\tnaf-\tfi-\tli-\ta-\tted", "V\tn V\tf I\tl i:\teI\tt V d");
result.add("u-\tnaf-\tfor-\tda-\tble", "V\tn V\tf O@\td V\tb V l");
result.add("u-\tnai-\tded", "V\tn eI\td V d");
result.add("u-\tnal-\tlo-\tca-\tted", "V\tn {\tl V\tk eI\tt V d");
result.add("u-\tnal-\tlo-\twa-\tble", "V\tn V\tl aU\tV\tb V l");
result.add("u-\tnal-\tloyed", "V\tn {\tl OI d");
result.add("u-\tnal-\tte-\tra-\tble", "V\tn O: l\tt @r\tV\tb V l");
result.add("u-\tnal-\tte-\trab-\tly", "V\tn O: l\tt @r\tV b\tl i:");
result.add("u-\tnal-\ttered", "V\tn O: l\tt @r d");
result.add("u-\tnam-\tbi-\tgu-\tous", "V\tn { m\tb I g\tj V\tw V s");
result.add("u-\tnam-\tbi-\tgu-\tous-\tly", "V\tn { m\tb I g\tj u:\tV s\tl i:");
result.add("u-\tnan-\tnounced", "V\tn V\tn aU n s t");
result.add("u-\tnan-\tswe-\tra-\tble", "V\tn { n\ts @r\tV\tb V l");
result.add("u-\tnan-\tswered", "V\tn { n\ts @r d");
result.add("u-\tnan-\tti-\tci-\tpa-\tted", "V\tn { n\tt I\ts I\tp eI\tt I d");
result.add("u-\tnap-\tpe-\tti-\tzing", "V\tn {\tp V\tt aI\tz I N");
result.add("u-\tnap-\tpea-\tling", "V\tn V\tp i:\tl I N");
result.add("u-\tnap-\tpre-\tci-\ta-\tted", "V\tn V p\tr i:\tS i:\teI\tt V d");
result.add("u-\tnap-\tproved", "V\tn V p\tr u: v d");
result.add("u-\tnarm", "V\tn Q@ m");
result.add("u-\tnarmed", "V\tn Q@ m d");
result.add("u-\tnas-\tsai-\tla-\tble", "V\tn V\ts eI\tl V\tb V l");
result.add("u-\tnas-\tsis-\tted", "V\tn V\ts I s\tt V d");
result.add("u-\tnas-\tsu-\tming", "V\tn V\ts u:\tm I N");
result.add("u-\tnat-\ttach", "V\tn V\tt { tS");
result.add("u-\tnat-\ttached", "V\tn V\tt { tS t");
result.add("u-\tnat-\ttai-\tna-\tble", "V\tn V\tt eI\tn V\tb V l");
result.add("u-\tnat-\tten-\tded", "V\tn V\tt e n\td V d");
result.add("u-\tnat-\ttrac-\ttive", "V\tn V t\tr { k\tt I v");
result.add("u-\tnau-\tdi-\tted", "V\tn O:\td V\tt V d");
result.add("u-\tnau-\tthen-\ttic", "V\tn O:\tT e n\tt I k");
result.add("u-\tnau-\ttho-\trized", "V\tn O:\tT @r\taI z d");
result.add("u-\tne-\tqual", "V\tn i: k\tw V l");
result.add("u-\tne-\tqualed", "V\tn i: k\tw V l d");
result.add("u-\tne-\tqui-\tvo-\tcab-\tly", "V\tn I k\tw I\tv V\tk V b\tl i:");
result.add("u-\tne-\tqui-\tvo-\tcal", "V\tn I k\tw I\tv V\tk V l");
result.add("u-\tne-\tqui-\tvo-\tcal-\tly", "V\tn i: k\tw I\tv V\tk V\tl i:");
result.add("u-\tne-\tthi-\tcal", "V\tn e\tT I\tk V l");
result.add("u-\tne-\tthical-\tly", "V\tn e\tT I k\tl i:");
result.add("u-\tnea-\tsi-\tly", "V\tn i:\tz V\tl i:");
result.add("u-\tnea-\tsi-\tness", "V\tn i:\tz i:\tn V s");
result.add("u-\tnea-\tsy", "V\tn i:\tz i:");
result.add("u-\tnear-\tthing", "V\tn @r\tT I N");
result.add("u-\tnearned", "V\tn @r n d");
result.add("u-\tnearth", "V\tn @r T");
result.add("u-\tnearth-\tly", "V\tn @r T\tl i:");
result.add("u-\tnease", "V\tn i: z");
result.add("u-\tnes-\tco", "j u:\tn e s\tk @U");
result.add("u-\tni", "j u:\tn i:");
result.add("u-\tni-\tcef", "j u:\tn I\ts e f");
result.add("u-\tni-\tcel-\tlu-\tlar", "j u:\tn I\ts e l\tj V\tl @r");
result.add("u-\tni-\tcorn", "j u:\tn I\tk O@ n");
result.add("u-\tni-\tcy-\tcle", "j u:\tn I\ts aI\tk V l");
result.add("u-\tni-\tcy-\tcles", "j u:\tn I\ts aI\tk V l z");
result.add("u-\tni-\tfi-\tca-\ttion", "j u:\tn I\tf I\tk eI\tS V n");
result.add("u-\tni-\tfied", "j u:\tn I\tf aI d");
result.add("u-\tni-\tfor-\tmi-\tty", "j u:\tn I\tf O@\tm I\tt i:");
result.add("u-\tni-\tform", "j u:\tn I\tf O@ m");
result.add("u-\tni-\tform-\tly", "j u:\tn I\tf O@ m\tl i:");
result.add("u-\tni-\tformed", "j u:\tn I\tf O@ m d");
result.add("u-\tni-\tforms", "j u:\tn I\tf O@ m z");
result.add("u-\tni-\tfy", "j u:\tn I\tf aI");
result.add("u-\tni-\tfy-\ting", "j u:\tn I\tf aI\tI N");
result.add("u-\tni-\tla-\tte-\tra-\tli-\tsm", "j u:\tn I\tl {\tt @r\tV\tl I\tz V m");
result.add("u-\tni-\tla-\tte-\tral", "j u:\tn I\tl {\tt @r\tV l");
result.add("u-\tni-\tla-\tte-\tral-\tly", "j u:\tn I\tl {\tt @r\tV\tl i:");
result.add("u-\tni-\tle-\tver", "j u:\tn I\tl i:\tv @r");
result.add("u-\tni-\tle-\tver's", "j u:\tn I\tl i:\tv @r z");
result.add("u-\tni-\tma-\tgi-\tna-\tble", "V\tn I\tm {\tdZ I\tn V\tb V l");
result.add("u-\tni-\tma-\tgi-\tna-\ttive", "V\tn I\tm {\tdZ I\tn V\tt I v");
result.add("u-\tni-\tma-\tgined", "V\tn I\tm {\tdZ I n d");
result.add("u-\tni-\tro-\tyal", "j u:\tn I@\tOI\tV l");
result.add("u-\tni-\tsex", "j u:\tn I\ts e k s");
result.add("u-\tni-\tson", "j u:\tn I\ts V n");
result.add("u-\tni-\tsons", "j u:\tn I\ts V n z");
result.add("u-\tni-\tsys", "j u:\tn I\ts I s");
result.add("u-\tni-\tta-\tri-\tan", "j u:\tn I\tt e@\ti:\tV n");
result.add("u-\tni-\tta-\try", "j u:\tn I\tt e@\ti:");
result.add("u-\tni-\ttas", "j u:\tn aI\tt V s");
result.add("u-\tni-\tted", "j u:\tn aI\tt V d");
result.add("u-\tni-\tted's", "j u:\tn aI\tt V d z");
result.add("u-\tni-\tthol-\tder", "j u:\tn I t\th @U l\td @r");
result.add("u-\tni-\tthol-\tders", "j u:\tn I t\th @U l\td @r z");
result.add("u-\tni-\tting", "j u:\tn aI\tt I N");
result.add("u-\tni-\tty", "j u:\tn I\tt i:");
result.add("u-\tni-\tver-\tsa-\tli-\tty", "j u:\tn I\tv @r\ts {\tl I\tt i:");
result.add("u-\tni-\tver-\tsal", "j u:\tn I\tv @r\ts V l");
result.add("u-\tni-\tver-\tsal-\tly", "j u:\tn I\tv @r\ts V\tl i:");
result.add("u-\tni-\tver-\tses", "j u:\tn I\tv @r\ts V z");
result.add("u-\tni-\tver-\tsi-\tties", "j u:\tn I\tv @r\ts I\tt i: z");
result.add("u-\tni-\tver-\tsi-\tty", "j u:\tn I\tv @r\ts I\tt i:");
result.add("u-\tni-\tver-\tsi-\tty's", "j u:\tn I\tv @r\ts I\tt i: z");
result.add("u-\tni-\tverse", "j u:\tn I\tv @r s");
result.add("u-\tnim-\tpaired", "V\tn I m\tp e@ d");
result.add("u-\tnim-\tpe-\tded", "V\tn I m\tp i:\td V d");
result.add("u-\tnim-\tpea-\tcha-\tble", "V\tn I m\tp i:\ttS V\tb V l");
result.add("u-\tnim-\tpor-\ttant", "V\tn I m\tp O@\tt V n t");
result.add("u-\tnim-\tpres-\tsive", "V\tn I m\tp r e\ts I v");
result.add("u-\tnim-\tpressed", "V\tn I m\tp r e s t");
result.add("u-\tnim-\tproved", "V\tn I m\tp r u: v d");
result.add("u-\tnin-\tcor-\tpo-\tra-\tted", "V\tn I n\tk O@\tp @r\teI\tt V d");
result.add("u-\tnin-\tdic-\tted", "V\tn I n\td aI\tt V d");
result.add("u-\tnin-\tfec-\tted", "V\tn I n\tf e k\tt V d");
result.add("u-\tnin-\tfor-\tma-\ttive", "V\tn I n\tf O@\tm V\tt I v");
result.add("u-\tnin-\tformed", "V\tn I n\tf O@ m d");
result.add("u-\tnin-\tha-\tbi-\tta-\tble", "V\tn I n\th {\tb V\tt V\tb V l");
result.add("u-\tnin-\tha-\tbi-\tted", "V\tn I n\th {\tb I\tt I d");
result.add("u-\tnin-\thi-\tbi-\tted", "V\tn I n\th I\tb I\tt I d");
result.add("u-\tnio-\tni-\tsm", "j u: n\tj V\tn I\tz V m");
result.add("u-\tnio-\tni-\tza-\ttion", "j u: n\tj V\tn I\tz eI\tS V n");
result.add("u-\tnio-\tni-\tzing", "j u: n\tj V\tn aI\tz I N");
result.add("u-\tnio-\tnist", "j u: n\tj V\tn I s t");
result.add("u-\tnio-\tnists", "j u: n\tj V\tn I s t s");
result.add("u-\tnio-\tnize", "j u: n\tj V\tn aI z");
result.add("u-\tnio-\tnized", "j u: n\tj V\tn aI z d");
result.add("u-\tnion", "j u: n\tj V n");
result.add("u-\tnion-\tdale", "j u: n\tj V n\td eI l");
result.add("u-\tnions", "j u: n\tj V n z");
result.add("u-\tnion's", "j u: n\tj V n z");
result.add("u-\tnique", "j u:\tn i: k");
result.add("u-\tnique-\tly", "j u:\tn i: k\tl i:");
result.add("u-\tnique-\tness", "j u:\tn i: k\tn V s");
result.add("u-\tnis-\tsued", "V\tn I\tS u: d");
result.add("u-\tnit", "j u:\tn I t");
result.add("u-\tnite", "j u:\tn aI t");
result.add("u-\tnites", "j u:\tn aI t s");
result.add("u-\tnits", "j u:\tn I t s");
result.add("u-\tnit's", "j u:\tn I t s");
result.add("u-\tnix", "j u:\tn I k s");
result.add("u-\tno", "V\tn @U");
result.add("u-\tnob-\ttai-\tna-\tble", "V\tn V b\tt eI\tn V\tb V l");
result.add("u-\tnob-\ttru-\tsive", "V\tn V b\tt r u:\ts I v");
result.add("u-\tnobs-\ttruc-\tted", "V\tn V b\ts t r V k\tt V d");
result.add("u-\tnu-\tsa-\tble", "V n\tj u:\tz V\tb V l");
result.add("u-\tnum", "j u:\tn V m");
result.add("u-\tpham", "V\tp V m");
result.add("u-\tphea-\tval", "V p\th i:\tv V l");
result.add("u-\tphea-\tvals", "V p\th i:\tv V l z");
result.add("u-\tpon", "V\tp Q n");
result.add("u-\tra-\tni-\tum", "j @r\teI\tn i:\tV m");
result.add("u-\tra-\tnus", "j u:\tr V\tn V s");
result.add("u-\tral", "j U@\tV l");
result.add("u-\trals", "j U@\tV l z");
result.add("u-\tre-\ta", "j @r\ti:\tV");
result.add("u-\tre-\tmi-\ta", "j @r\ti:\tm i:\tV");
result.add("u-\tre-\tna", "@r\teI\tn V");
result.add("u-\tre-\tthane", "j @r\tV\tT eI n");
result.add("u-\treth-\tra", "j @r\ti: T\tr V");
result.add("u-\trey", "j @r\ti:");
result.add("u-\tri", "j @r\ti:");
result.add("u-\tri-\tan", "j @r\ti:\tV n");
result.add("u-\tri-\tas", "j @r\ti:\tV z");
result.add("u-\tri-\tna-\tly-\tsis", "j @r\tI\tn {\tl I\ts I s");
result.add("u-\tri-\tna-\try", "j @r\tI\tn e@\ti:");
result.add("u-\tri-\tna-\tting", "j @r\tI\tn eI\tt I N");
result.add("u-\tri-\tnate", "j @r\tI\tn eI t");
result.add("u-\tric", "j @r\tI k");
result.add("u-\trich", "j @r\tI k");
result.add("u-\trine", "j @r\tI n");
result.add("u-\tri's", "j @r\ti: z");
result.add("u-\tro-\tki-\tnase", "j @r\tV\tk V\tn eI z");
result.add("u-\tro-\tlo-\tgist", "j @r\tQ\tl V\tdZ V s t");
result.add("u-\tro-\tlo-\tgists", "j @r\tQ\tl V\tdZ V s t s");
result.add("u-\tro-\tlo-\tgy", "j @r\tQ\tl V\tdZ i:");
result.add("u-\tru-\tgua-\tyan", "j @r\tV g\tw eI\tV n");
result.add("u-\tru-\tguay", "j @r\tV g\tw eI");
result.add("u-\tru-\tguay's", "j @r\tV g\tw eI z");
result.add("u-\try", "j u:\tr i:");
result.add("u-\ts-\ta", "j u:\te\ts eI");
result.add("u-\ts-\ts", "j u:\te\ts e s");
result.add("u-\tsa-\tble", "j u:\tz V\tb V l");
result.add("u-\tsa-\tges", "j u:\ts V\tdZ V z");
result.add("u-\tsage", "j u:\ts V dZ");
result.add("u-\tser", "j u:\tz @r");
result.add("u-\tsers", "j u:\tz @r z");
result.add("u-\tser's", "j u:\tz @r z");
result.add("u-\tses", "j u:\ts V z");
result.add("u-\tshe-\tring", "V\tS @r\tI N");
result.add("u-\tsher", "V\tS @r");
result.add("u-\tshered", "V\tS @r d");
result.add("u-\tshers", "V\tS @r z");
result.add("u-\tsing", "j u:\tz I N");
result.add("u-\tsu-\tal", "j u:\tZ V\tw V l");
result.add("u-\tsu-\tal-\tly", "j u:\tZ V\tw V\tl i:");
result.add("u-\tsu-\try", "j u:\tZ @r\ti:");
result.add("u-\tsur-\tpa-\ttion", "j u:\ts @r\tp eI\tS V n");
result.add("u-\tsur-\tping", "j u:\ts @r\tp I N");
result.add("u-\tsurp", "j u:\ts @r p");
result.add("u-\tsurped", "j u:\ts @r p t");
result.add("u-\tsurps", "j u:\ts @r p s");
result.add("u-\tta-\tma-\tro", "j u:\tt V\tm Q@\t@U");
result.add("u-\ttah", "j u:\tt O:");
result.add("u-\ttah's", "j u:\tt Q z");
result.add("u-\tte-\trine", "j u:\tt @r\tI n");
result.add("u-\tte-\tro", "j u:\tt @r\t@U");
result.add("u-\tte-\trus", "j u:\tt @r\tV s");
result.add("u-\tten-\tsil", "j u:\tt e n\ts I l");
result.add("u-\tten-\tsils", "j u:\tt e n\ts I l z");
result.add("u-\tther", "j u:\tT @r");
result.add("u-\tti-\tca", "j u:\tt I\tk V");
result.add("u-\tti-\tli-\tta-\tri-\tan", "j u:\tt I\tl I\tt e@\ti:\tV n");
result.add("u-\tti-\tli-\tties", "j u:\tt I\tl I\tt i: z");
result.add("u-\tti-\tli-\tty", "j u:\tt I\tl I\tt i:");
result.add("u-\tti-\tli-\tty's", "j u:\tt I\tl I\tt i: z");
result.add("u-\tti-\tli-\tza-\ttion", "j u:\tt I\tl I\tz eI\tS V n");
result.add("u-\tti-\tli-\tzes", "j u:\tt I\tl aI\tz V z");
result.add("u-\tti-\tli-\tzing", "j u:\tt I\tl aI\tz I N");
result.add("u-\tti-\tlize", "j u:\tt I\tl aI z");
result.add("u-\tti-\tlized", "j u:\tt I\tl aI z d");
result.add("u-\tto-\tpi-\ta", "j u:\tt @U\tp i:\tV");
result.add("u-\tto-\tpi-\tan", "j u:\tt @U\tp i:\tV n");
result.add("u-\tto-\tpi-\tans", "j u:\tt @U\tp i:\tV n z");
result.add("u-\tto-\tpi-\tas", "j u:\tt @U\tp i:\tV z");
result.add("u-\tva", "j u:\tv V");
result.add("u-\tzi", "u:\tz i:");
result.add("u-\tzis", "u:\tz i: z");
result.add("u.", "I k");
result.add("ud-\tdin", "V\td I n");
result.add("ude", "u: d");
result.add("ueh-\tling", "U\tl I N");
result.add("ug-\tli-\ter", "V g\tl i:\t@r");
result.add("ug-\tli-\test", "V g\tl i:\tV s t");
result.add("ug-\tli-\tness", "V g\tl i:\tn V s");
result.add("ug-\tly", "V g\tl i:");
result.add("ug-\tric", "j u: g\tr I k");
result.add("ugh", "V g");
result.add("uh", "V");
result.add("uh-\thuh", "V\th V");
result.add("uh-\tland", "u:\tl V n d");
result.add("uhde", "V d");
result.add("uhh", "V");
result.add("uk-\trai-\tni-\tan", "j u: k\tr eI\tn i:\tV n");
result.add("uk-\trai-\tni-\tans", "j u: k\tr eI\tn i:\tV n z");
result.add("uk-\traine", "j u: k\tr eI n");
result.add("uk-\traine's", "j u: k\tr eI n z");
result.add("ul", "V l");
result.add("ul-\tbricht", "V l\tb r I k t");
result.add("ul-\tcer", "V l\ts @r");
result.add("ul-\tcers", "V l\ts @r z");
result.add("ul-\tland", "V\tl V n d");
result.add("ul-\tman", "V l\tm V n");
result.add("ul-\tmer", "V l\tm @r");
result.add("ul-\tmus", "V l\tm V s");
result.add("ul-\tri-\tca", "V l\tr I\tk V");
result.add("ul-\tric", "V l\tr I k");
result.add("ul-\trich", "V l\tr I tS");
result.add("ul-\trick", "V l\tr I k");
result.add("ul-\tsan", "V l\ts V n");
result.add("ul-\tte-\tri-\tor", "V l\tt I@\ti:\t@r");
result.add("ul-\tti-\tma", "V l\tt I\tm V");
result.add("ul-\tti-\tma-\ttum", "V l\tt I\tm eI\tt V m");
result.add("ul-\tti-\tma-\ttums", "V l\tt I\tm eI\tt V m z");
result.add("ul-\tti-\tmate", "V l\tt I\tm V t");
result.add("ul-\tti-\tmate-\tly", "V l\tt I\tm V t\tl i:");
result.add("ul-\tva", "u: l\tv V");
result.add("ull-\tman", "V l\tm V n");
result.add("ulm", "V l m");
result.add("uls-\tter", "V l\ts t @r");
result.add("ult-\tra", "V l\tt r V");
result.add("ult-\tra-\tcon-\tser-\tva-\ttive", "V l\tt r V\tk V n\ts @r\tv V\tt I v");
result.add("ult-\tra-\tmo-\tdern", "V l\tt r V\tm Q\td @r n");
result.add("ult-\tra-\tna-\ttio-\tna-\tlist", "V l\tt r V\tn {\tS V\tn V\tl V s t");
result.add("ult-\tra-\tna-\ttio-\tna-\tlists", "V l\tt r V\tn {\tS V\tn V\tl V s t s");
result.add("ult-\tra-\tso-\tnic", "V l\tt r V\ts Q\tn I k");
result.add("ult-\tra-\tsound", "V l\tt r V\ts aU n d");
result.add("ult-\tra-\tvi-\to-\tlet", "V l\tt r V\tv aI\tV\tl V t");
result.add("um", "V m");
result.add("um-\tbar-\tger", "V m\tb Q@\tg @r");
result.add("um-\tbel", "V m\tb V l");
result.add("um-\tber-\tto", "V m\tb e@\tt @U");
result.add("um-\tbi-\tli-\tcal", "V m\tb I\tl I\tk V l");
result.add("um-\tble", "V m\tb V l");
result.add("um-\tland", "V m\tl V n d");
result.add("um-\tpi-\tre", "V m\tp aI\t@r");
result.add("um-\tpi-\tres", "V m\tp aI\t@r z");
result.add("umb-\tra", "V m\tb r V");
result.add("umb-\trage", "V m\tb r I dZ");
result.add("umb-\trel-\tla", "V m\tb r e\tl V");
result.add("umb-\trel-\tlas", "V m\tb r e\tl V z");
result.add("umm", "V m");
result.add("ump-\tteen", "V m\tp t i: n");
result.add("ump-\tteenth", "V m\tp t i: n T");
result.add("un", "V n");
result.add("un-\ta-\tme-\tri-\tcan", "V\tn V\tm e@\tI\tk V n");
result.add("un-\tba-\tlance", "V n\tb {\tl V n s");
result.add("un-\tba-\tlanced", "V n\tb {\tl V n s t");
result.add("un-\tbe-\tco-\tming", "V n\tb I\tk V\tm I N");
result.add("un-\tbe-\tlie-\tva-\tble", "V n\tb V\tl i:\tv V\tb V l");
result.add("un-\tbe-\tlie-\tvab-\tly", "V n\tb V\tl i:\tv V b\tl i:");
result.add("un-\tbe-\tlie-\tving", "V n\tb V\tl i:\tv I N");
result.add("un-\tbea-\tra-\tble", "V n\tb e@\tV\tb V l");
result.add("un-\tbea-\trab-\tly", "V n\tb e@\tV b\tl i:");
result.add("un-\tbea-\tta-\tble", "V n\tb i:\tt V\tb V l");
result.add("un-\tbea-\tten", "V n\tb i:\tt V n");
result.add("un-\tbek-\tnown", "V n\tb i:\tn @U n");
result.add("un-\tbek-\tnownst", "V n\tb i:\tn @U n s t");
result.add("un-\tben-\tding", "V n\tb e n\td I N");
result.add("un-\tbend", "V n\tb e n d");
result.add("un-\tbi-\tased", "V n\tb aI\tV s t");
result.add("un-\tble-\tmished", "V n\tb l e\tm I S t");
result.add("un-\tbol-\tted", "V n\tb @U l\tt V d");
result.add("un-\tbolt", "V n\tb @U l t");
result.add("un-\tborn", "V n\tb O@ n");
result.add("un-\tboun-\tded", "V n\tb aU n\td V d");
result.add("un-\tbound", "V n\tb aU n d");
result.add("un-\tbowed", "V n\tb @U d");
result.add("un-\tbran-\tded", "V n\tb r { n\td V d");
result.add("un-\tbri-\tdled", "V n\tb r aI\td V l d");
result.add("un-\tbro-\tken", "V n\tb r @U\tk V n");
result.add("un-\tbuil-\tda-\tble", "V n\tb I l\td V\tb V l");
result.add("un-\tbuilt", "V n\tb I l t");
result.add("un-\tbun-\tdle", "V n\tb V n\td V l");
result.add("un-\tbund-\tling", "V n\tb V n\td l I N");
result.add("un-\tbur-\tden", "V n\tb @r\td V n");
result.add("un-\tbur-\tdened", "V n\tb @r\td V n d");
result.add("un-\tburned", "V n\tb @r n d");
result.add("un-\tbut-\tton", "V n\tb V\tt V n");
result.add("un-\tbut-\ttoned", "V n\tb V\tt V n d");
result.add("un-\tca-\tpi-\tta-\tlized", "V n\tk {\tp V\tt V\tl aI z d");
result.add("un-\tca-\tring", "V n\tk e@\tI N");
result.add("un-\tcalled", "V n\tk O: l d");
result.add("un-\tcan-\tni-\tly", "V n\tk {\tn V\tl i:");
result.add("un-\tcan-\tny", "V n\tk {\tn i:");
result.add("un-\tce-\tre-\tmo-\tni-\tous", "V n\ts e@\tV\tm @U\tn i:\tV s");
result.add("un-\tce-\tre-\tmo-\tni-\tous-\tly", "V n\ts e@\tV\tm @U\tn i:\tV s\tl i:");
result.add("un-\tcea-\tsing", "V n\ts i:\ts I N");
result.add("un-\tcen-\tsored", "V n\ts e n\ts @r d");
result.add("un-\tcer-\ttain", "V n\ts @r\tt V n");
result.add("un-\tcer-\ttain-\tly", "V n\ts @r\tt V n\tl i:");
result.add("un-\tcer-\ttain-\tties", "V n\ts @r\tt V n\tt i: z");
result.add("un-\tcer-\ttain-\tty", "V n\ts @r\tt V n\tt i:");
result.add("un-\tcha-\trac-\tte-\tris-\ttic", "V n\tk e@\tI k\tt @r\tI s\tt I k");
result.add("un-\tcha-\trac-\tte-\tris-\ttical-\tly", "V n\tk e@\tI k\tt @r\tI s\tt I k\tl i:");
result.add("un-\tchal-\tlenged", "V n\ttS {\tl V n dZ d");
result.add("un-\tchan-\tging", "V n\ttS eI n\tdZ I N");
result.add("un-\tchanged", "V n\ttS eI n dZ d");
result.add("un-\tchar-\tted", "V n\ttS Q@\tt V d");
result.add("un-\tchar-\ttered", "V n\ttS Q@\tt @r d");
result.add("un-\tchecked", "V n\ttS e k t");
result.add("un-\tci-\tvi-\tlized", "V n\ts I\tv V\tl aI z d");
result.add("un-\tci-\tvil", "V n\ts I\tv V l");
result.add("un-\tclaimed", "V n\tk l eI m d");
result.add("un-\tclamp", "V n\tk l { m p");
result.add("un-\tclamps", "V n\tk l { m p s");
result.add("un-\tclas-\tsi-\tfied", "V n\tk l {\ts V\tf aI d");
result.add("un-\tclas-\tsi-\tfy", "V n\tk l {\ts V\tf aI");
result.add("un-\tcle", "V N\tk V l");
result.add("un-\tcle's", "V N\tk V l z");
result.add("un-\tco-\to-\tpe-\tra-\ttive", "V n\tk @U\tQ\tp @r\tV\tt I v");
result.add("un-\tco-\tor-\tdi-\tna-\tted", "V n\tk @U\tO@\td V\tn eI\tt V d");
result.add("un-\tco-\tve-\tring", "V n\tk V\tv @r\tI N");
result.add("un-\tco-\tver", "V n\tk V\tv @r");
result.add("un-\tco-\tvered", "V n\tk V\tv @r d");
result.add("un-\tco-\tvers", "V n\tk V\tv @r z");
result.add("un-\tcoa-\tted", "V n\tk @U\tt V d");
result.add("un-\tcoat", "V n\tk @U t");
result.add("un-\tcoil", "V n\tk OI l");
result.add("un-\tcoiled", "V n\tk OI l d");
result.add("un-\tcol-\tlec-\tta-\tble", "V n\tk V\tl e k\tt V\tb V l");
result.add("un-\tcol-\tlec-\tted", "V n\tk V\tl e k\tt V d");
result.add("un-\tcol-\tlec-\tti-\tble", "V n\tk V\tl e k\tt V\tb V l");
result.add("un-\tcom-\tfor-\tta-\tble", "V n\tk V m\tf @r\tt V\tb V l");
result.add("un-\tcom-\tmit-\tted", "V n\tk V\tm I\tt V d");
result.add("un-\tcom-\tmon", "V n\tk Q\tm V n");
result.add("un-\tcom-\tmon-\tly", "V n\tk Q\tm V n\tl i:");
result.add("un-\tcom-\tpe-\tti-\ttive", "V n\tk V m\tp e\tt V\tt I v");
result.add("un-\tcom-\tpen-\tsa-\tted", "V n\tk Q m\tp V n\ts eI\tt V d");
result.add("un-\tcomfor-\ttab-\tly", "V n\tk V m\tf t V b\tl i:");
result.add("un-\tcomp-\tle-\tted", "V n\tk V m\tp l i:\tt V d");
result.add("un-\tcomp-\tlete", "V n\tk V m\tp l i: t");
result.add("un-\tcomp-\tli-\tca-\tted", "V n\tk Q m\tp l V\tk eI\tt V d");
result.add("un-\tcomp-\tro-\tmi-\tsing", "V n\tk Q m\tp r V\tm aI\tz I N");
result.add("un-\tcon-\tcealed", "V n\tk V n\ts i: l d");
result.add("un-\tcon-\tcern", "V n\tk V n\ts @r n");
result.add("un-\tcon-\tcerned", "V n\tk V n\ts @r n d");
result.add("un-\tcon-\tdi-\ttio-\tnal", "V n\tk V n\td I\tS V\tn V l");
result.add("un-\tcon-\tdi-\ttio-\tnal-\tly", "V n\tk V n\td I\tS V\tn V\tl i:");
result.add("un-\tcon-\tfined", "V n\tk V n\tf aI n d");
result.add("un-\tcon-\tfirmed", "V n\tk V n\tf @r m d");
result.add("un-\tcon-\tnec-\tted", "V n\tk V\tn e k\tt V d");
result.add("un-\tcon-\tscio-\tna-\tble", "V n\tk Q n\tS V\tn V\tb V l");
result.add("un-\tcon-\tscious", "V n\tk Q n\tS V s");
result.add("un-\tcon-\tscious-\tly", "V n\tk Q n\tS V s\tl i:");
result.add("un-\tcon-\tscious-\tness", "V n\tk Q n\tS V s\tn e s");
result.add("un-\tcon-\tso-\tli-\tda-\tted", "V n\tk V n\ts Q\tl V\td eI\tt V d");
result.add("un-\tcon-\tsti-\ttu-\ttio-\tnal", "V n\tk Q n\ts t I\tt u:\tS V\tn V l");
result.add("un-\tcon-\tsti-\ttu-\ttio-\tnal-\tly", "V n\tk Q n\ts t I\tt u:\tS V\tn V\tl i:");
result.add("un-\tcon-\tta-\tmi-\tna-\tted", "V n\tk V n\tt {\tm V\tn eI\tt V d");
result.add("un-\tcon-\ttes-\tted", "V n\tk V n\tt e s\tt V d");
result.add("un-\tcon-\ttra-\tdic-\tted", "V n\tk O: n\tt r V\td I k\tt V d");
result.add("un-\tcon-\ttro-\tver-\tsial", "V n\tk Q n\tt r V\tv @r\tS V l");
result.add("un-\tcon-\ttrol-\tla-\tble", "V n\tk V n\tt r @U\tl V\tb V l");
result.add("un-\tcon-\ttrol-\tlab-\tly", "V n\tk V n\tt r @U\tl V b\tl i:");
result.add("un-\tcon-\ttrolled", "V n\tk V n\tt r @U l d");
result.add("un-\tcon-\tven-\ttio-\tnal", "V n\tk V n\tv e n\tS V\tn V l");
result.add("un-\tcon-\tver-\tted", "V n\tk V n\tv @r\tt V d");
result.add("un-\tcon-\tvin-\tcing", "V n\tk V n\tv I n\ts I N");
result.add("un-\tcon-\tvinced", "V n\tk V n\tv I n s t");
result.add("un-\tcool", "V n\tk u: l");
result.add("un-\tcor-\trec-\tted", "V n\tk @r\te k\tt V d");
result.add("un-\tcor-\tro-\tbo-\tra-\tted", "V n\tk @r\tQ\tb @r\teI\tt V d");
result.add("un-\tcork", "V n\tk O@ k");
result.add("un-\tcorked", "V n\tk O@ k t");
result.add("un-\tcorks", "V n\tk O@ k s");
result.add("un-\tcou-\tple", "V n\tk V\tp V l");
result.add("un-\tcoun-\tted", "V n\tk aU n\tt V d");
result.add("un-\tcouth", "V n\tk u: T");
result.add("un-\tcri-\tti-\tcal", "V n\tk r I\tt I\tk V l");
result.add("un-\tcri-\tti-\tcal-\tly", "V n\tk r I\tt I\tk V\tl i:");
result.add("un-\tcured", "V n\tk j @r d");
result.add("un-\tcut", "V n\tk V t");
result.add("un-\tda-\tmaged", "V n\td {\tm V dZ d");
result.add("un-\tda-\tted", "V n\td eI\tt V d");
result.add("un-\tdaun-\tted", "V n\td O: n\tt V d");
result.add("un-\tde-\tci-\tded", "V n\td V\ts aI\td V d");
result.add("un-\tde-\tci-\tdeds", "V n\td V\ts aI\td V d z");
result.add("un-\tde-\tfea-\tted", "V n\td V\tf i:\tt V d");
result.add("un-\tde-\tfined", "V n\td V\tf aI n d");
result.add("un-\tde-\tli-\tvered", "V n\td V\tl I\tv @r d");
result.add("un-\tde-\tmo-\tcra-\ttic", "V n\td e\tm V k\tr {\tt I k");
result.add("un-\tde-\tni-\ta-\tble", "V n\td V\tn aI\tV\tb V l");
result.add("un-\tde-\tni-\tab-\tly", "V n\td V\tn aI\tV b\tl i:");
result.add("un-\tde-\trarm", "V n\td @r\tQ@ m");
result.add("un-\tde-\tser-\tving", "V n\td V\tz @r\tv I N");
result.add("un-\tde-\tserved", "V n\td V\tz @r v d");
result.add("un-\tde-\tsi-\tra-\tble", "V n\td V\tz aI\tr V\tb V l");
result.add("un-\tde-\ttec-\tta-\tble", "V n\td V\tt e k\tt V\tb V l");
result.add("un-\tde-\ttec-\tted", "V n\td V\tt e k\tt V d");
result.add("un-\tde-\tter-\tmi-\tning", "V n\td V\tt @r\tm I\tn I N");
result.add("un-\tde-\tter-\tmined", "V n\td V\tt @r\tm V n d");
result.add("un-\tde-\tterred", "V n\td V\tt @r d");
result.add("un-\tde-\tve-\tloped", "V n\td V\tv e\tl V p t");
result.add("un-\tdec-\tlared", "V n\td V k\tl e@ d");
result.add("un-\tder", "V n\td @r");
result.add("un-\tder-\ta-\tchie-\tver", "V n\td @r\tV\ttS i:\tv @r");
result.add("un-\tder-\ta-\tchie-\tvers", "V n\td @r\tV\ttS i:\tv @r z");
result.add("un-\tder-\tage", "V n\td @r\teI dZ");
result.add("un-\tder-\tbel-\tly", "V n\td @r\tb e\tl i:");
result.add("un-\tder-\tbid", "V n\td @r\tb I d");
result.add("un-\tder-\tbrush", "V n\td @r b\tr V S");
result.add("un-\tder-\tca-\tpi-\tta-\tlize", "V n\td @r\tk {\tp V\tt V\tl aI z");
result.add("un-\tder-\tca-\tpi-\tta-\tlized", "V n\td @r\tk {\tp V\tt V\tl aI z d");
result.add("un-\tder-\tcar-\triage", "V n\td @r\tk {\tr I dZ");
result.add("un-\tder-\tclass", "V n\td @r k\tl { s");
result.add("un-\tder-\tclass-\tmen", "V n\td @r k\tl { s\tm e n");
result.add("un-\tder-\tco-\tver", "V n\td @r\tk V\tv @r");
result.add("un-\tder-\tcoat", "V n\td @r\tk @U t");
result.add("un-\tder-\tcook", "V n\td @r\tk U k");
result.add("un-\tder-\tcooked", "V n\td @r\tk U k t");
result.add("un-\tder-\tcoun-\tted", "V n\td @r\tk aU n\tt V d");
result.add("un-\tder-\tcount", "V n\td @r\tk aU n t");
result.add("un-\tder-\tcur-\trent", "V n\td @r\tk @r\tV n t");
result.add("un-\tder-\tcur-\trents", "V n\td @r\tk @r\tV n t s");
result.add("un-\tder-\tcut", "V n\td @r\tk V t");
result.add("un-\tder-\tcut-\tting", "V n\td @r\tk V\tt I N");
result.add("un-\tder-\tcuts", "V n\td @r\tk V t s");
result.add("un-\tder-\tde-\tve-\tlop", "V n\td @r\td I\tv e\tl V p");
result.add("un-\tder-\tde-\tve-\tlop-\tment", "V n\td @r\td V\tv e\tl V p\tm V n t");
result.add("un-\tder-\tde-\tve-\tloped", "V n\td @r\td I\tv e\tl V p t");
result.add("un-\tder-\tdog", "V n\td @r\td O: g");
result.add("un-\tder-\tdogs", "V n\td @r\td O: g z");
result.add("un-\tder-\tdown", "V n\td @r\td aU n");
result.add("un-\tder-\temp-\tloy-\tment", "V n\td @r\tV m\tp l OI\tm V n t");
result.add("un-\tder-\temp-\tloyed", "V n\td @r\tV m\tp l OI d");
result.add("un-\tder-\tes-\tti-\tma-\tted", "V n\td @r\te s\tt I\tm eI\tt I d");
result.add("un-\tder-\tes-\tti-\tma-\tting", "V n\td @r\te s\tt I\tm eI\tt I N");
result.add("un-\tder-\tes-\tti-\tmate", "V n\td @r\te s\tt I\tm eI t");
result.add("un-\tder-\tes-\tti-\tmates", "V n\td @r\te s\tt I\tm eI t s");
result.add("un-\tder-\tfi-\tnance", "V n\td @r\tf V\tn { n s");
result.add("un-\tder-\tfi-\tnanced", "V n\td @r\tf V\tn { n s t");
result.add("un-\tder-\tfoot", "V n\td @r\tf U t");
result.add("un-\tder-\tfun-\tded", "V n\td @r\tf V n\td V d");
result.add("un-\tder-\tfun-\tding", "V n\td @r\tf V n\td I N");
result.add("un-\tder-\tfund", "V n\td @r\tf V n d");
result.add("un-\tder-\tgar-\tment", "V n\td @r\tg Q@\tm V n t");
result.add("un-\tder-\tgar-\tments", "V n\td @r\tg Q@\tm V n t s");
result.add("un-\tder-\tgo", "V n\td @r\tg @U");
result.add("un-\tder-\tgo-\ting", "V n\td @r\tg @U\tI N");
result.add("un-\tder-\tgoes", "V n\td @r\tg @U z");
result.add("un-\tder-\tgone", "V n\td @r\tg O: n");
result.add("un-\tder-\tgra-\tdu-\tate", "V n\td @r g\tr {\tdZ V\tw V t");
result.add("un-\tder-\tgra-\tdu-\tates", "V n\td @r g\tr {\tdZ V\tw V t s");
result.add("un-\tder-\tgrad", "V n\td @r g\tr { d");
result.add("un-\tder-\tground", "V n\td @r g\tr aU n d");
result.add("un-\tder-\tgrowth", "V n\td @r g\tr @U T");
result.add("un-\tder-\than-\tded", "V n\td @r\th { n\td V d");
result.add("un-\tder-\thill", "V n\td @r\th I l");
result.add("un-\tder-\tin-\tsure", "V n\td @r\tI n\tS O@");
result.add("un-\tder-\tin-\tsured", "V n\td @r\tI n\tS O@ d");
result.add("un-\tder-\tli-\tning", "V n\td @r\tl aI\tn I N");
result.add("un-\tder-\tlie", "V n\td @r\tl aI");
result.add("un-\tder-\tlies", "V n\td @r\tl aI z");
result.add("un-\tder-\tline", "V n\td @r\tl aI n");
result.add("un-\tder-\tlined", "V n\td @r\tl aI n d");
result.add("un-\tder-\tlines", "V n\td @r\tl aI n z");
result.add("un-\tder-\tling", "V n\td @r\tl I N");
result.add("un-\tder-\tlings", "V n\td @r\tl I N z");
result.add("un-\tder-\tly", "V n\td @r\tl aI");
result.add("un-\tder-\tly-\ting", "V n\td @r\tl aI\tI N");
result.add("un-\tder-\tman", "V n\td @r\tm { n");
result.add("un-\tder-\tmanned", "V n\td @r\tm { n d");
result.add("un-\tder-\tmi-\tning", "V n\td @r\tm aI\tn I N");
result.add("un-\tder-\tmine", "V n\td @r\tm aI n");
result.add("un-\tder-\tmined", "V n\td @r\tm aI n d");
result.add("un-\tder-\tmines", "V n\td @r\tm aI n z");
result.add("un-\tder-\tneath", "V n\td @r\tn i: T");
result.add("un-\tder-\tnou-\trish", "V n\td @r\tn @r\tI S");
result.add("un-\tder-\tnou-\trished", "V n\td @r\tn @r\tI S t");
result.add("un-\tder-\tpaid", "V n\td @r\tp eI d");
result.add("un-\tder-\tpants", "V n\td @r\tp { n t s");
result.add("un-\tder-\tpass", "V n\td @r\tp { s");
result.add("un-\tder-\tpay", "V n\td @r\tp eI");
result.add("un-\tder-\tpay-\ting", "V n\td @r\tp eI\tI N");
result.add("un-\tder-\tpay-\tment", "V n\td @r\tp eI\tm V n t");
result.add("un-\tder-\tpay-\tments", "V n\td @r\tp eI\tm V n t s");
result.add("un-\tder-\tper-\tfor-\tmance", "V n\td @r\tp @r\tf O@\tm V n s");
result.add("un-\tder-\tper-\tfor-\tmer", "V n\td @r\tp @r\tf O@\tm @r");
result.add("un-\tder-\tper-\tfor-\tming", "V n\td @r\tp @r\tf O@\tm I N");
result.add("un-\tder-\tper-\tform", "V n\td @r\tp @r\tf O@ m");
result.add("un-\tder-\tper-\tformed", "V n\td @r\tp @r\tf O@ m d");
result.add("un-\tder-\tpin", "V n\td @r\tp I n");
result.add("un-\tder-\tpin-\tning", "V n\td @r\tp I\tn I N");
result.add("un-\tder-\tpin-\tnings", "V n\td @r\tp I\tn I N z");
result.add("un-\tder-\tpinned", "V n\td @r\tp I n d");
result.add("un-\tder-\tplay", "V n\td @r p\tl eI");
result.add("un-\tder-\tplayed", "V n\td @r p\tl eI d");
result.add("un-\tder-\tpo-\twer", "V n\td @r\tp aU\t@r");
result.add("un-\tder-\tpo-\twered", "V n\td @r\tp aU\t@r d");
result.add("un-\tder-\tpri-\tcing", "V n\td @r p\tr aI\ts I N");
result.add("un-\tder-\tprice", "V n\td @r p\tr aI s");
result.add("un-\tder-\tpriced", "V n\td @r p\tr aI s t");
result.add("un-\tder-\tra-\tted", "V n\td @r\tr eI\tt V d");
result.add("un-\tder-\trate", "V n\td @r\tr eI t");
result.add("un-\tder-\tre-\tpor-\tted", "V n\td @r\tr V\tp O@\tt V d");
result.add("un-\tder-\tre-\tpor-\tting", "V n\td @r\tr V\tp O@\tt I N");
result.add("un-\tder-\tre-\tport", "V n\td @r\tr V\tp O@ t");
result.add("un-\tder-\tre-\tpre-\tsen-\tted", "V n\td @r\tr e p\tr V\tz e n\tt V d");
result.add("un-\tder-\tre-\tpre-\tsent", "V n\td @r\tr e p\tr V\tz e n t");
result.add("un-\tder-\tsco-\tring", "V n\td @r s\tk O@\tI N");
result.add("un-\tder-\tscore", "V n\td @r s\tk O@");
result.add("un-\tder-\tscored", "V n\td @r s\tk O@ d");
result.add("un-\tder-\tscores", "V n\td @r s\tk O@ z");
result.add("un-\tder-\tsea", "V n\td @r\ts i:");
result.add("un-\tder-\tseas", "V n\td @r\ts i: z");
result.add("un-\tder-\tsec-\tre-\tta-\try", "V n\td @r\ts e k\tr V\tt e@\ti:");
result.add("un-\tder-\tsel-\tling", "V n\td @r\ts e\tl I N");
result.add("un-\tder-\tsell", "V n\td @r\ts e l");
result.add("un-\tder-\tserve", "V n\td @r\ts @r v");
result.add("un-\tder-\tserved", "V n\td @r\ts @r v d");
result.add("un-\tder-\tshirt", "V n\td @r\tS @r t");
result.add("un-\tder-\tshirts", "V n\td @r\tS @r t s");
result.add("un-\tder-\tside", "V n\td @r\ts aI d");
result.add("un-\tder-\tsized", "V n\td @r\ts aI z d");
result.add("un-\tder-\tsold", "V n\td @r\ts @U l d");
result.add("un-\tder-\tspin", "V n\td @r s\tp I n");
result.add("un-\tder-\tsta-\tted", "V n\td @r s\tt eI\tt V d");
result.add("un-\tder-\tsta-\tting", "V n\td @r s\tt eI\tt I N");
result.add("un-\tder-\tstaff", "V n\td @r s\tt { f");
result.add("un-\tder-\tstaffed", "V n\td @r s\tt { f t");
result.add("un-\tder-\tstan-\tda-\tble", "V n\td @r s\tt { n\td V\tb V l");
result.add("un-\tder-\tstan-\tdab-\tly", "V n\td @r s\tt { n\td V b\tl i:");
result.add("un-\tder-\tstan-\tding", "V n\td @r s\tt { n\td I N");
result.add("un-\tder-\tstan-\tdings", "V n\td @r s\tt { n\td I N z");
result.add("un-\tder-\tstand", "V n\td @r s\tt { n d");
result.add("un-\tder-\tstands", "V n\td @r s\tt { n d z");
result.add("un-\tder-\tstate", "V n\td @r s\tt eI t");
result.add("un-\tder-\tstate-\tment", "V n\td @r s\tt eI t\tm V n t");
result.add("un-\tder-\tstates", "V n\td @r s\tt eI t s");
result.add("un-\tder-\tsto-\try", "V n\td @r s\tt O@\ti:");
result.add("un-\tder-\tstood", "V n\td @r s\tt U d");
result.add("un-\tder-\tstu-\tdy", "V n\td @r s\tt V\td i:");
result.add("un-\tder-\tsub-\tscribed", "V n\td @r\ts V b\ts k r aI b d");
result.add("un-\tder-\tta-\tken", "V n\td @r\tt eI\tk V n");
result.add("un-\tder-\tta-\tker", "V n\td @r\tt eI\tk @r");
result.add("un-\tder-\tta-\tking", "V n\td @r\tt eI\tk I N");
result.add("un-\tder-\tta-\tkings", "V n\td @r\tt eI\tk I N z");
result.add("un-\tder-\ttake", "V n\td @r\tt eI k");
result.add("un-\tder-\ttakes", "V n\td @r\tt eI k s");
result.add("un-\tder-\ttone", "V n\td @r\tt @U n");
result.add("un-\tder-\ttones", "V n\td @r\tt @U n z");
result.add("un-\tder-\ttook", "V n\td @r\tt U k");
result.add("un-\tder-\ttow", "V n\td @r\tt @U");
result.add("un-\tder-\ttows", "V n\td @r\tt @U z");
result.add("un-\tder-\tu-\tti-\tlize", "V n\td @r\tj u:\tt I\tl aI z");
result.add("un-\tder-\tu-\tti-\tlized", "V n\td @r\tj u:\tt I\tl aI z d");
result.add("un-\tder-\tuse", "V n\td @r\tj u: z");
result.add("un-\tder-\tused", "V n\td @r\tj u: z d");
result.add("un-\tder-\tva-\tlu-\ta-\ttion", "V n\td @r\tv { l\tj u:\teI\tS V n");
result.add("un-\tder-\tva-\tlu-\ting", "V n\td @r\tv { l\tj u:\tI N");
result.add("un-\tder-\tva-\tlue", "V n\td @r\tv { l\tj u:");
result.add("un-\tder-\tva-\tlued", "V n\td @r\tv { l\tj u: d");
result.add("un-\tder-\tva-\tlues", "V n\td @r\tv { l\tj u: z");
result.add("un-\tder-\twa-\tter", "V n\td @r\tw O:\tt @r");
result.add("un-\tder-\tway", "V n\td @r\tw eI");
result.add("un-\tder-\twear", "V n\td @r\tw e@");
result.add("un-\tder-\tweigh-\tted", "V n\td @r\tw eI\tt V d");
result.add("un-\tder-\tweight", "V n\td @r\tw eI t");
result.add("un-\tder-\twent", "V n\td @r\tw e n t");
result.add("un-\tder-\twood", "V n\td @r\tw U d");
result.add("un-\tder-\twoods", "V n\td @r\tw U d z");
result.add("un-\tder-\tworld", "V n\td @r\tw @r l d");
result.add("un-\tder-\twri-\tter", "V n\td @r\tr aI\tt @r");
result.add("un-\tder-\twri-\tters", "V n\td @r\tr aI\tt @r z");
result.add("un-\tder-\twri-\tter's", "V n\td @r\tr aI\tt @r z");
result.add("un-\tder-\twri-\tting", "V n\td @r\tr aI\tt I N");
result.add("un-\tder-\twri-\ttings", "V n\td @r\tr aI\tt I N z");
result.add("un-\tder-\twrit-\tten", "V n\td @r\tr I\tt V n");
result.add("un-\tder-\twrite", "V n\td @r\tr aI t");
result.add("un-\tder-\twrites", "V n\td @r\tr aI t s");
result.add("un-\tder-\twrote", "V n\td @r\tr @U t");
result.add("un-\tdi-\tag-\tnosed", "V n\td aI\t{ g\tn @U s t");
result.add("un-\tdi-\tlu-\tted", "V n\td I\tl u:\tt I d");
result.add("un-\tdi-\tlute", "V n\td I\tl u: t");
result.add("un-\tdi-\tmi-\tnished", "V n\td I\tm I\tn I S t");
result.add("un-\tdi-\tver-\tsi-\tfied", "V n\td I\tv @r\ts I\tf aI d");
result.add("un-\tdi-\tvi-\tded", "V n\td V\tv aI\td V d");
result.add("un-\tdid", "V n\td I d");
result.add("un-\tdif-\tfe-\tren-\tti-\ta-\tted", "V n\td I\tf @r\te n\tS i:\teI\tt V d");
result.add("un-\tdig-\tni-\tfied", "V n\td I g\tn V\tf aI d");
result.add("un-\tdine", "V n\td i: n");
result.add("un-\tdip-\tlo-\tma-\ttic", "V n\td I p\tl V\tm {\tt I k");
result.add("un-\tdip-\tlo-\tma-\ttical-\tly", "V n\td I p\tl V\tm {\tt I k\tl i:");
result.add("un-\tdis-\tcip-\tlined", "V n\td I\ts V p\tl I n d");
result.add("un-\tdis-\tclosed", "V n\td I s\tk l @U z d");
result.add("un-\tdis-\tco-\tvered", "V n\td I s\tk V\tv @r d");
result.add("un-\tdis-\tguised", "V n\td I s\tg aI z d");
result.add("un-\tdis-\tpu-\tted", "V n\td I s\tp j u:\tt V d");
result.add("un-\tdis-\ttin-\tguished", "V n\td I s\tt I N\tg w I S t");
result.add("un-\tdis-\ttri-\tbu-\tted", "V n\td I s\tt r I b\tj u:\tt V d");
result.add("un-\tdis-\tturbed", "V n\td I s\tt @r b d");
result.add("un-\tdo", "V n\td u:");
result.add("un-\tdo-\tcu-\tmen-\tted", "V n\td Q k\tj V\tm e n\tt V d");
result.add("un-\tdo-\ting", "V n\td u:\tI N");
result.add("un-\tdoc-\tking", "V n\td Q\tk I N");
result.add("un-\tdock", "V n\td Q k");
result.add("un-\tdone", "V n\td V n");
result.add("un-\tdoub-\tted", "V n\td aU\tt V d");
result.add("un-\tdoub-\tted-\tly", "V n\td aU\tt V d\tl i:");
result.add("un-\tdreamed", "V n\td r i: m d");
result.add("un-\tdress", "V n\td r e s");
result.add("un-\tdressed", "V n\td r e s t");
result.add("un-\tdu-\tla-\tting", "V n\tdZ V\tl eI\tt I N");
result.add("un-\tdu-\tlate", "V n\tdZ V\tl eI t");
result.add("un-\tdu-\tly", "V n\td u:\tl i:");
result.add("un-\tdue", "V n\td u:");
result.add("un-\tdy-\ting", "V n\td aI\tI N");
result.add("un-\te-\tco-\tno-\tmi-\tcal", "V\tn e\tk V\tn Q\tm I\tk V l");
result.add("un-\te-\tco-\tno-\tmic", "V\tn e\tk V\tn Q\tm I k");
result.add("un-\te-\tdi-\tted", "V\tn e\td V\tt V d");
result.add("un-\te-\tdu-\tca-\tted", "V\tn e\tdZ U\tk eI\tt V d");
result.add("un-\te-\tlec-\tta-\tble", "V\tn V\tl e k\tt V\tb V l");
result.add("un-\te-\tlec-\tted", "V\tn V\tl e k\tt V d");
result.add("un-\te-\tmo-\ttio-\tnal", "V\tn i:\tm @U\tS V\tn V l");
result.add("un-\te-\tven", "V\tn i:\tv V n");
result.add("un-\te-\tven-\tly", "V\tn i:\tv V n\tl i:");
result.add("un-\te-\tvent-\tful", "V\tn i:\tv e n\tt f V l");
result.add("un-\temp-\tloy", "V\tn V m\tp l OI");
result.add("un-\temp-\tloy-\ta-\tble", "V\tn V m\tp l OI\tV\tb V l");
result.add("un-\temp-\tloy-\tment", "V\tn V m\tp l OI\tm V n t");
result.add("un-\temp-\tloyed", "V\tn e m\tp l OI d");
result.add("un-\ten-\tcum-\tber", "V\tn e n\tk V m\tb @r");
result.add("un-\ten-\tcum-\tbered", "V\tn e n\tk V m\tb @r d");
result.add("un-\ten-\tding", "V\tn e n\td I N");
result.add("un-\ten-\tfor-\tcea-\tble", "V\tn e n\tf O@\ts V\tb V l");
result.add("un-\ten-\tforced", "V\tn e n\tf O@ s t");
result.add("un-\ten-\tligh-\ttened", "V\tn e n\tl aI\tt V n d");
result.add("un-\ten-\tthu-\tsi-\tas-\ttic", "V\tn V n\tT u:\tz i:\t{ s\tt I k");
result.add("un-\ten-\tu-\tme-\tra-\tted", "V\tn V\tn u:\tm @r\teI\tt V d");
result.add("un-\ten-\tvi-\ta-\tble", "V\tn e n\tv i:\tV\tb V l");
result.add("un-\tex-\tci-\tting", "V\tn I k\ts aI\tt I N");
result.add("un-\tex-\ter-\tcised", "V\tn e k\ts @r\ts aI z d");
result.add("un-\tex-\tpec-\tted", "V\tn I k\ts p e k\tt V d");
result.add("un-\tex-\tpec-\tted-\tly", "V\tn I k\ts p e k\tt V d\tl i:");
result.add("un-\tex-\tpi-\tred", "V\tn I k\ts p aI\t@r d");
result.add("un-\tex-\tplai-\tna-\tble", "V\tn I k\ts p l eI\tn V\tb V l");
result.add("un-\tex-\tplained", "V\tn I k\ts p l eI n d");
result.add("un-\tex-\tplo-\tded", "V\tn I k\ts p l @U\td V d");
result.add("un-\tex-\tploi-\tted", "V\tn I k\ts p l OI\tt V d");
result.add("un-\tex-\tplored", "V\tn I k\ts p l O@ d");
result.add("un-\tfa-\tmi-\tlia-\tri-\tties", "V n\tf V\tm I l\tj e@\tV\tt i: z");
result.add("un-\tfa-\tmi-\tlia-\tri-\tty", "V n\tf V\tm I l\tj e@\tV\tt i:");
result.add("un-\tfa-\tmi-\tliar", "V n\tf V\tm I l\tj @r");
result.add("un-\tfa-\tshio-\tna-\tble", "V n\tf {\tS V\tn V\tb V l");
result.add("un-\tfa-\ttho-\tma-\tble", "V n\tf {\tT V\tm V\tb V l");
result.add("un-\tfa-\tvo-\tra-\tble", "V n\tf eI\tv @r\tV\tb V l");
result.add("un-\tfa-\tvo-\trab-\tly", "V n\tf eI\tv @r\tV b\tl i:");
result.add("un-\tfai-\tling", "V n\tf eI\tl I N");
result.add("un-\tfai-\tling-\tly", "V n\tf eI\tl I N\tl i:");
result.add("un-\tfair", "V n\tf e@");
result.add("un-\tfair-\tly", "V n\tf e@\tl i:");
result.add("un-\tfair-\tness", "V n\tf e@\tn V s");
result.add("un-\tfaith-\tful", "V n\tf eI T\tf V l");
result.add("un-\tfazed", "V n\tf eI z d");
result.add("un-\tfea-\tsi-\tble", "V n\tf i:\tz V\tb V l");
result.add("un-\tfee-\tling", "V n\tf i:\tl I N");
result.add("un-\tfenced", "V n\tf e n s t");
result.add("un-\tfet-\ttered", "V n\tf e\tt @r d");
result.add("un-\tfi-\tnished", "V n\tf I\tn I S t");
result.add("un-\tfil-\ttered", "V n\tf I l\tt @r d");
result.add("un-\tfilled", "V n\tf I l d");
result.add("un-\tfit", "V n\tf I t");
result.add("un-\tflag-\tging", "V n\tf l {\tg I N");
result.add("un-\tflap-\tpa-\tble", "V n\tf l {\tp V\tb V l");
result.add("un-\tflat-\tte-\tring", "V n\tf l {\tt @r\tI N");
result.add("un-\tflin-\tching", "V n\tf l I n\ttS I N");
result.add("un-\tfo-\tcused", "V n\tf @U\tk V s t");
result.add("un-\tfol-\tded", "V n\tf @U l\td V d");
result.add("un-\tfol-\tding", "V n\tf @U l\td I N");
result.add("un-\tfold", "V n\tf @U l d");
result.add("un-\tfolds", "V n\tf @U l d z");
result.add("un-\tfor-\tget-\tta-\tble", "V n\tf @r\tg e\tt V\tb V l");
result.add("un-\tfor-\tgi-\tva-\tble", "V n\tf O@\tg I\tv V\tb V l");
result.add("un-\tfor-\tgi-\tven", "V n\tf O@\tg I\tv V n");
result.add("un-\tfor-\tgi-\tving", "V n\tf @r\tg I\tv I N");
result.add("un-\tfor-\ttu-\tnate", "V n\tf O@\ttS V\tn V t");
result.add("un-\tfor-\ttu-\tnate-\tly", "V n\tf O@\ttS V\tn V t\tl i:");
result.add("un-\tfor-\ttu-\tnates", "V n\tf O@\ttS V\tn V t s");
result.add("un-\tfore-\tsee-\ta-\tble", "V n\tf O@\ts i:\tV\tb V l");
result.add("un-\tfore-\tseen", "V n\tf O@\ts i: n");
result.add("un-\tformed", "V n\tf O@ m d");
result.add("un-\tfoun-\tded", "V n\tf aU n\td V d");
result.add("un-\tfriend-\tly", "V n\tf r e n\td l i:");
result.add("un-\tfro-\tzen", "V n\tf r @U\tz V n");
result.add("un-\tful-\tfilled", "V n\tf U l\tf I l d");
result.add("un-\tfun-\tded", "V n\tf V n\td V d");
result.add("un-\tfun-\tni-\tly", "V n\tf V\tn V\tl i:");
result.add("un-\tfur-\tling", "V n\tf @r\tl I N");
result.add("un-\tfurl", "V n\tf @r l");
result.add("un-\tfurled", "V n\tf @r l d");
result.add("un-\tga-\tro", "u: N\tg Q@\t@U");
result.add("un-\tgain-\tly", "V n\tg eI n\tl i:");
result.add("un-\tger", "V N\tg @r");
result.add("un-\tgla-\tmo-\trous", "V n\tg l {\tm @r\tV s");
result.add("un-\tgo-\tver-\tna-\tble", "V n\tg V\tv @r\tn V\tb V l");
result.add("un-\tgod-\tly", "V n\tg O: d\tl i:");
result.add("un-\tgrate-\tful", "V n\tg r eI t\tf V l");
result.add("un-\tguar-\tded", "V n\tg Q@\td V d");
result.add("un-\tham-\tpered", "V n\th { m\tp @r d");
result.add("un-\thap-\tpi-\tly", "V n\th {\tp V\tl i:");
result.add("un-\thap-\tpi-\tness", "V n\th {\tp i:\tn V s");
result.add("un-\thap-\tpy", "V n\th {\tp i:");
result.add("un-\tharmed", "V n\th Q@ m d");
result.add("un-\the-\tral-\tded", "V n\th e@\tV l\td V d");
result.add("un-\the-\tsi-\tta-\tting-\tly", "V n\th e\tz V\tt eI\tt I N\tl i:");
result.add("un-\theal-\tthy", "V n\th e l\tT i:");
result.add("un-\thealth-\tful", "V n\th e l\tT f V l");
result.add("un-\theard", "V n\th @r d");
result.add("un-\thedged", "V n\th e dZ d");
result.add("un-\thee-\tded", "V n\th i:\td V d");
result.add("un-\thelp-\tful", "V n\th e l\tp f V l");
result.add("un-\thi-\tndered", "V n\th I n\td @r d");
result.add("un-\thinge", "V n\th I n dZ");
result.add("un-\thinged", "V n\th I n dZ d");
result.add("un-\thitch", "V n\th I tS");
result.add("un-\tho-\tly", "V n\th @U\tl i:");
result.add("un-\thook", "V n\th U k");
result.add("un-\thorsed", "V n\th O@ s t");
result.add("un-\thur-\tried", "V n\th @r\ti: d");
result.add("un-\thurt", "V n\th @r t");
result.add("un-\ti-\tden-\tti-\tfied", "V\tn aI\td e n\tt I\tf aI d");
result.add("un-\ti-\tni-\tti-\ta-\tted", "V\tn I\tn I\tS i:\teI\tt V d");
result.add("un-\tin-\tjured", "V\tn I n\tdZ @r d");
result.add("un-\tin-\tsu-\tra-\tble", "V\tn I n\tS U@\tV\tb V l");
result.add("un-\tin-\tsured", "V\tn I n\tS U@ d");
result.add("un-\tin-\ttel-\tli-\tgi-\tble", "V\tn I n\tt e\tl I\tdZ I\tb V l");
result.add("un-\tin-\tten-\tded", "V\tn I n\tt e n\td V d");
result.add("un-\tin-\tten-\ttio-\tnal", "V\tn I n\tt e n\tS V\tn V l");
result.add("un-\tin-\tten-\ttio-\tnal-\tly", "V\tn I n\tt e n\tS V\tn V\tl i:");
result.add("un-\tin-\tter-\trup-\tted", "V\tn I n\tt @r\tV p\tt V d");
result.add("un-\tin-\tter-\trup-\tti-\tble", "V\tn I n\tt @r\tV p\tt V\tb V l");
result.add("un-\tin-\tvi-\tted", "V\tn I n\tv aI\tt V d");
result.add("un-\tin-\tvi-\tting", "V\tn I n\tv aI\tt I N");
result.add("un-\tin-\tvolved", "V\tn I n\tv O: l v d");
result.add("un-\tins-\tpi-\tred", "V\tn I n\ts p aI\t@r d");
result.add("un-\tins-\tpi-\tring", "V\tn I n\ts p aI\tr I N");
result.add("un-\tinte-\tres-\tted", "V\tn I n\tt r V s\tt V d");
result.add("un-\tinte-\tres-\tting", "V\tn I n\tt r V s\tt I N");
result.add("un-\tjus-\tti-\tfi-\ta-\tble", "V n\tdZ V s\tt I\tf aI\tV\tb V l");
result.add("un-\tjus-\tti-\tfi-\tab-\tly", "V n\tdZ V s\tt I\tf aI\tV b\tl i:");
result.add("un-\tjus-\tti-\tfied", "V n\tdZ V s\tt V\tf aI d");
result.add("un-\tjust", "V n\tdZ V s t");
result.add("un-\tjust-\tly", "V n\tdZ V s\tt l i:");
result.add("un-\tkempt", "V n\tk e m p t");
result.add("un-\tkin-\tdest", "V n\tk aI n\td V s t");
result.add("un-\tkind", "V n\tk aI n d");
result.add("un-\tkno-\twa-\tble", "V n\tn @U\tV\tb V l");
result.add("un-\tkno-\twing", "V n\tn @U\tI N");
result.add("un-\tkno-\twing-\tly", "V n\tn @U\tI N\tl i:");
result.add("un-\tknown", "V n\tn @U n");
result.add("un-\tknowns", "V\tn @U n z");
result.add("un-\tla-\tbeled", "V n\tl eI\tb V l d");
result.add("un-\tland", "V n\tl V n d");
result.add("un-\tlaw-\tful", "V n\tl O:\tf V l");
result.add("un-\tlaw-\tful-\tly", "V n\tl O:\tf V\tl i:");
result.add("un-\tlea-\tded", "V n\tl e\td V d");
result.add("un-\tlea-\tshes", "V n\tl i:\tS V z");
result.add("un-\tlea-\tshing", "V n\tl i:\tS I N");
result.add("un-\tleash", "V n\tl i: S");
result.add("un-\tleashed", "V n\tl i: S t");
result.add("un-\tless", "V n\tl e s");
result.add("un-\tli-\tcensed", "V n\tl aI\ts V n s t");
result.add("un-\tli-\tmi-\tted", "V n\tl I\tm V\tt V d");
result.add("un-\tli-\tva-\tble", "V n\tl I\tv V\tb V l");
result.add("un-\tlike", "V n\tl aI k");
result.add("un-\tlike-\tly", "V n\tl aI k\tl i:");
result.add("un-\tlined", "V n\tl aI n d");
result.add("un-\tlis-\tted", "V n\tl I s\tt V d");
result.add("un-\tloa-\tded", "V n\tl @U\td V d");
result.add("un-\tloa-\tding", "V n\tl @U\td I N");
result.add("un-\tload", "V n\tl @U d");
result.add("un-\tloads", "V n\tl @U d z");
result.add("un-\tloc-\tking", "V n\tl Q\tk I N");
result.add("un-\tlock", "V n\tl Q k");
result.add("un-\tlocked", "V n\tl Q k t");
result.add("un-\tloved", "V n\tl V v d");
result.add("un-\tluc-\tky", "V n\tl V\tk i:");
result.add("un-\tma-\tna-\tgea-\tble", "V n\tm {\tn I\tdZ V\tb V l");
result.add("un-\tma-\tnaged", "V n\tm {\tn I dZ d");
result.add("un-\tmade", "V n\tm eI d");
result.add("un-\tmanned", "V n\tm { n d");
result.add("un-\tmar-\tried", "V n\tm e@\ti: d");
result.add("un-\tmarked", "V n\tm Q@ k t");
result.add("un-\tmask", "V n\tm { s k");
result.add("un-\tmasked", "V n\tm { s k t");
result.add("un-\tmatched", "V n\tm { tS t");
result.add("un-\tmen-\ttio-\tna-\tble", "V n\tm e n\tS V\tn V\tb V l");
result.add("un-\tmen-\ttioned", "V n\tm e n\ttS V n d");
result.add("un-\tmet", "V n\tm e t");
result.add("un-\tmi-\tti-\tga-\tted", "V n\tm I\tt V\tg eI\tt V d");
result.add("un-\tmis-\tta-\tka-\tble", "V n\tm I s\tt eI\tk V\tb V l");
result.add("un-\tmis-\tta-\tkab-\tly", "V n\tm I s\tt eI\tk V b\tl i:");
result.add("un-\tmixed", "V n\tm I k s t");
result.add("un-\tmo-\tles-\tted", "V n\tm V\tl e s\tt V d");
result.add("un-\tmoved", "V n\tm u: v d");
result.add("un-\tna-\ttu-\tral", "V n\tn {\ttS @r\tV l");
result.add("un-\tna-\ttu-\tral-\tly", "V n\tn {\ttS @r\tV\tl i:");
result.add("un-\tnamed", "V n\tn eI m d");
result.add("un-\tne-\tces-\tsa-\tri-\tly", "V n\tn e\ts V\ts e@\tV\tl i:");
result.add("un-\tne-\tces-\tsa-\try", "V n\tn e\ts V\ts e@\ti:");
result.add("un-\tnee-\tded", "V n\tn i:\td V d");
result.add("un-\tner-\tving", "V\tn @r\tv I N");
result.add("un-\tnerve", "V\tn @r v");
result.add("un-\tnerved", "V n\tn @r v d");
result.add("un-\tno-\tticed", "V n\tn @U\tt V s t");
result.add("un-\to-\tpened", "V\tn @U\tp V n d");
result.add("un-\toc-\tcu-\tpied", "V\tn Q k\tj V\tp aI d");
result.add("un-\tof-\tfi-\tcial", "V\tn V\tf I\tS V l");
result.add("un-\tof-\tfi-\tcial-\tly", "V\tn V\tf I\tS V\tl i:");
result.add("un-\top-\tposed", "V\tn V\tp @U z d");
result.add("un-\tor-\tga-\tnized", "V\tn O@\tg V\tn aI z d");
result.add("un-\tor-\ttho-\tdox", "V\tn O@\tT V\td Q k s");
result.add("un-\tpa-\tla-\tta-\tble", "V n\tp {\tl V\tt V\tb V l");
result.add("un-\tpa-\tral-\tleled", "V n\tp e@\tV\tl e l d");
result.add("un-\tpa-\ttri-\to-\ttic", "V n\tp eI t\tr i:\tQ\tt I k");
result.add("un-\tpac-\tking", "V n\tp {\tk I N");
result.add("un-\tpack", "V n\tp { k");
result.add("un-\tpacked", "V n\tp { k t");
result.add("un-\tpaid", "V n\tp eI d");
result.add("un-\tpain-\tted", "V n\tp eI n\tt V d");
result.add("un-\tpay-\ta-\tble", "V n\tp eI\tV\tb V l");
result.add("un-\tper-\tturbed", "V n\tp @r\tt @r b d");
result.add("un-\tplaced", "V n\tp l eI s t");
result.add("un-\tplanned", "V n\tp l { n d");
result.add("un-\tplea-\tsant", "V n\tp l e\tz V n t");
result.add("un-\tplea-\tsant-\tly", "V n\tp l e\tz V n\tt l i:");
result.add("un-\tplea-\tsant-\tness", "V n\tp l e\tz V n\tt n V s");
result.add("un-\tplug", "V n\tp l V g");
result.add("un-\tplugged", "V n\tp l V g d");
result.add("un-\tpo-\tpu-\tla-\tri-\tty", "V n\tp Q p\tj V\tl e@\tV\tt i:");
result.add("un-\tpo-\tpu-\tlar", "V n\tp Q p\tj V\tl @r");
result.add("un-\tpre-\tce-\tden-\tted", "V n\tp r e\ts V\td e n\tt V d");
result.add("un-\tpre-\tce-\tden-\tted-\tly", "V n\tp r e\ts V\td e n\tt V d\tl i:");
result.add("un-\tpre-\tdic-\tta-\tbi-\tli-\tty", "V n\tp r V\td I k\tt V\tb I\tl V\tt i:");
result.add("un-\tpre-\tdic-\tta-\tble", "V n\tp r V\td I k\tt V\tb V l");
result.add("un-\tpre-\tdic-\ttab-\tly", "V n\tp r V\td I k\tt V b\tl i:");
result.add("un-\tpre-\tpared", "V n\tp r i:\tp e@ d");
result.add("un-\tpre-\tserved", "V n\tp r V\tz @r v d");
result.add("un-\tpre-\tten-\ttious", "V n\tp r i:\tt e n\tS V s");
result.add("un-\tpres-\tsu-\trized", "V n\tp r e\tS @r\taI z d");
result.add("un-\tprin-\tci-\tpled", "V n\tp r I n\ts V\tp V l d");
result.add("un-\tprin-\tta-\tble", "V n\tp r I n\tt V\tb V l");
result.add("un-\tpro-\tcessed", "V n\tp r O:\ts e s t");
result.add("un-\tpro-\tduc-\ttive", "V n\tp r V\td V k\tt I v");
result.add("un-\tpro-\tfes-\tsio-\tnal", "V n\tp r V\tf e\tS V\tn V l");
result.add("un-\tpro-\tfi-\tta-\tbi-\tli-\tty", "V n\tp r Q\tf V\tt V\tb I\tl V\tt i:");
result.add("un-\tpro-\tfi-\tta-\tble", "V n\tp r Q\tf V\tt V\tb V l");
result.add("un-\tpro-\tmi-\tsing", "V n\tp r O:\tm I\ts I N");
result.add("un-\tpro-\ttec-\tted", "V n\tp r V\tt e k\tt V d");
result.add("un-\tpro-\tven", "V n\tp r u:\tv V n");
result.add("un-\tpro-\tvoked", "V n\tp r V\tv @U k t");
result.add("un-\tproved", "V n\tp r u: v d");
result.add("un-\tpu-\tnished", "V n\tp V\tn I S t");
result.add("un-\tpub-\tli-\tcized", "V n\tp V b\tl V\ts aI z d");
result.add("un-\tpub-\tlished", "V n\tp V b\tl I S t");
result.add("un-\tqua-\tli-\tfied", "V n\tk w Q\tl V\tf aI d");
result.add("un-\tques-\ttio-\tna-\tble", "V n\tk w e s\ttS V\tn V\tb V l");
result.add("un-\tques-\ttio-\tnab-\tly", "V n\tk w e s\ttS V\tn V b\tl i:");
result.add("un-\tques-\ttio-\tning", "V n\tk w e s\ttS V\tn I N");
result.add("un-\tques-\ttioned", "V n\tk w e s\ttS V n d");
result.add("un-\tquote", "V n\tk w @U t");
result.add("un-\tra-\tted", "V n\tr eI\tt V d");
result.add("un-\tra-\tti-\tfied", "V n\tr {\tt V\tf aI d");
result.add("un-\tra-\tve-\tling", "V n\tr {\tv V\tl I N");
result.add("un-\tra-\tvel", "V n\tr {\tv V l");
result.add("un-\tra-\tveled", "V n\tr {\tv V l d");
result.add("un-\tra-\tvels", "V n\tr {\tv V l z");
result.add("un-\tre-\ta-\tli-\tty", "V n\tr i:\t{\tl I\tt i:");
result.add("un-\tre-\ta-\tlis-\ttical-\tly", "V n\tr i:\tV\tl I s\tt I k\tl i:");
result.add("un-\tre-\ta-\tlized", "V n\tr i:\tV\tl aI z d");
result.add("un-\tre-\tcep-\ttive", "V n\tr V\ts e p\tt I v");
result.add("un-\tre-\tcog-\tni-\tza-\tble", "V n\tr e\tk V g\tn aI\tz V\tb V l");
result.add("un-\tre-\tcog-\tnized", "V n\tr e\tk V g\tn aI z d");
result.add("un-\tre-\tcon-\tciled", "V n\tr e\tk V n\ts aI l d");
result.add("un-\tre-\tcon-\tstruc-\tted", "V n\tr i:\tk V n\ts t r V k\tt V d");
result.add("un-\tre-\tcor-\tded", "V n\tr I\tk O@\td V d");
result.add("un-\tre-\tdeemed", "V n\tr i:\td i: m d");
result.add("un-\tre-\tfined", "V n\tr i:\tf aI n d");
result.add("un-\tre-\tfu-\tted", "V n\tr i: f\tj u:\tt V d");
result.add("un-\tre-\tgis-\ttered", "V n\tr e\tdZ V s\tt @r d");
result.add("un-\tre-\tgu-\tla-\tted", "V n\tr e g\tj V\tl eI\tt V d");
result.add("un-\tre-\thearsed", "V n\tr i:\th @r s t");
result.add("un-\tre-\tla-\tted", "V n\tr V\tl eI\tt V d");
result.add("un-\tre-\tleased", "V n\tr V\tl i: s t");
result.add("un-\tre-\tlen-\tting", "V n\tr i:\tl e n\tt I N");
result.add("un-\tre-\tli-\ta-\tbi-\tli-\tty", "V n\tr i:\tl aI\tV\tb I\tl V\tt i:");
result.add("un-\tre-\tli-\ta-\tble", "V n\tr V\tl aI\tV\tb V l");
result.add("un-\tre-\tlieved", "V n\tr i:\tl i: v d");
result.add("un-\tre-\tmar-\tka-\tble", "V n\tr V\tm Q@\tk V\tb V l");
result.add("un-\tre-\tmarked", "V n\tr V\tm Q@ k t");
result.add("un-\tre-\tmit-\tted", "V n\tr V\tm I\tt V d");
result.add("un-\tre-\tmit-\tting", "V n\tr V\tm I\tt I N");
result.add("un-\tre-\tpen-\ttant", "V n\tr V\tp e n\tt V n t");
result.add("un-\tre-\tpor-\tted", "V n\tr i:\tp O@\tt V d");
result.add("un-\tre-\tpre-\tsen-\tta-\ttive", "V n\tr e p\tr V\tz e n\tt V\tt I v");
result.add("un-\tre-\tpre-\tsen-\tted", "V n\tr e p\tr V\tz e n\tt V d");
result.add("un-\tre-\tqui-\tted", "V n\tr i: k\tw aI\tt V d");
result.add("un-\tre-\tsolved", "V n\tr V\tz Q l v d");
result.add("un-\tre-\tvised", "V n\tr i:\tv aI z d");
result.add("un-\trea-\tcha-\tble", "V n\tr i:\ttS V\tb V l");
result.add("un-\trea-\tda-\tble", "V n\tr i:\td V\tb V l");
result.add("un-\trea-\tlis-\ttic", "V n\tr i:\tl I s\tt I k");
result.add("un-\trea-\tso-\tnab-\tly", "V n\tr i:\tz V\tn V b\tl i:");
result.add("un-\tread", "V n\tr e d");
result.add("un-\treal", "V n\tr i: l");
result.add("un-\treaso-\tna-\tble", "V n\tr i: z\tn V\tb V l");
result.add("un-\treaso-\tning", "V n\tr i: z\tn I N");
result.add("un-\trein", "O: n\tr aI n");
result.add("un-\tres-\tpon-\tsive", "V n\tr i: s\tp Q n\ts I v");
result.add("un-\trest", "V n\tr e s t");
result.add("un-\trest-\trained", "V n\tr i: s\tt r eI n d");
result.add("un-\trest-\tric-\tted", "V n\tr i: s\tt r I k\tt V d");
result.add("un-\tri-\tvaled", "V n\tr aI\tv V l d");
result.add("un-\tring", "V n\tr I N");
result.add("un-\tru-\tly", "V n\tr u:\tl i:");
result.add("un-\truf-\tfled", "V n\tr V\tf V l d");
result.add("un-\tsa-\tla-\tble", "V n\ts eI\tl V\tb V l");
result.add("un-\tsa-\tlea-\tble", "V n\ts eI\tl V\tb V l");
result.add("un-\tsa-\tni-\tta-\try", "V n\ts {\tn V\tt e@\ti:");
result.add("un-\tsa-\ttis-\tfac-\tto-\try", "V n\ts V\tt V s\tf { k\tt @r\ti:");
result.add("un-\tsa-\ttis-\tfied", "V n\ts {\tt V s\tf aI d");
result.add("un-\tsa-\ttis-\tfy-\ting", "V n\ts {\tt V s\tf aI\tI N");
result.add("un-\tsa-\ttu-\tra-\tted", "V n\ts {\ttS @r\teI\tt V d");
result.add("un-\tsa-\tvo-\try", "V n\ts eI\tv @r\ti:");
result.add("un-\tsafe", "V n\ts eI f");
result.add("un-\tsaid", "V n\ts e d");
result.add("un-\tsanc-\ttioned", "V n\ts { N\tk S V n d");
result.add("un-\tscathed", "V n\ts k eI D d");
result.add("un-\tsche-\tduled", "V n\ts k e\tdZ u: l d");
result.add("un-\tsci-\ten-\tti-\tfic", "V n\ts aI\tV n\tt I\tf I k");
result.add("un-\tscram-\tble", "V n\ts k r { m\tb V l");
result.add("un-\tscrip-\tted", "V n\ts k r I p\tt V d");
result.add("un-\tscru-\tpu-\tlous", "V n\ts k r u: p\tj V\tl V s");
result.add("un-\tse-\tcured", "V n\ts I k\tj U@ d");
result.add("un-\tsea-\tso-\tnab-\tly", "V n\ts i:\tz V\tn V b\tl i:");
result.add("un-\tsea-\tted", "V n\ts i:\tt V d");
result.add("un-\tsea-\tting", "V n\ts i:\tt I N");
result.add("un-\tseal", "V n\ts i: l");
result.add("un-\tsealed", "V n\ts i: l d");
result.add("un-\tseat", "V n\ts i: t");
result.add("un-\tseem-\tly", "V n\ts i: m\tl i:");
result.add("un-\tseen", "V n\ts i: n");
result.add("un-\tsell", "O: n\ts V l");
result.add("un-\tsen-\tti-\tmen-\ttal", "V n\ts e n\tt V\tm e n\tt V l");
result.add("un-\tser-\tvi-\tcea-\tble", "V n\ts @r\tv I\ts V\tb V l");
result.add("un-\tset", "V n\ts e t");
result.add("un-\tset-\tt-\tling", "V n\ts e\tt V\tl I N");
result.add("un-\tset-\ttle", "V n\ts e\tt V l");
result.add("un-\tset-\ttled", "V n\ts e\tt V l d");
result.add("un-\tsha-\tka-\tble", "V n\tS eI\tk V\tb V l");
result.add("un-\tsha-\tkea-\tble", "V n\tS eI\tk V\tb V l");
result.add("un-\tsha-\tken", "V n\tS eI\tk V n");
result.add("un-\tsha-\tven", "V n\tS eI\tv V n");
result.add("un-\tshac-\tkle", "V n\tS {\tk V l");
result.add("un-\tshac-\tkled", "V n\tS {\tk V l d");
result.add("un-\tshar-\tpened", "V n\tS Q@\tp V n d");
result.add("un-\tsight-\tly", "V n\ts aI t\tl i:");
result.add("un-\tsigned", "V n\ts aI n d");
result.add("un-\tsin-\tka-\tble", "V n\ts I N\tk V\tb V l");
result.add("un-\tskilled", "V n\ts k I l d");
result.add("un-\tsmi-\tling", "V n\ts m aI\tl I N");
result.add("un-\tso-\tli-\tci-\tted", "V n\ts V\tl I\ts V\tt V d");
result.add("un-\tso-\tphis-\tti-\tca-\tted", "V n\ts V\tf I s\tt I\tk eI\tt V d");
result.add("un-\tsol-\tva-\tble", "V n\ts Q l\tv V\tb V l");
result.add("un-\tsold", "V n\ts @U l d");
result.add("un-\tsolved", "V n\ts Q l v d");
result.add("un-\tsound", "V n\ts aU n d");
result.add("un-\tspa-\tring", "V n\ts p e@\tI N");
result.add("un-\tspe-\tci-\tfied", "V n\ts p e\ts V\tf aI d");
result.add("un-\tspea-\tka-\tble", "V n\ts p i:\tk V\tb V l");
result.add("un-\tspec-\tta-\tcu-\tlar", "V n\ts p e k\tt { k\tj V\tl @r");
result.add("un-\tspent", "V n\ts p e n t");
result.add("un-\tspo-\tken", "V n\ts p @U\tk V n");
result.add("un-\tspoiled", "V n\ts p OI l d");
result.add("un-\tsports-\tman-\tlike", "V n\ts p O@ t\ts m V n\tl aI k");
result.add("un-\tsta-\tble", "V n\ts t eI\tb V l");
result.add("un-\tsta-\tted", "V n\ts t eI\tt V d");
result.add("un-\tstained", "V n\ts t eI n d");
result.add("un-\tstea-\tdy", "V n\ts t e\td i:");
result.add("un-\tstin-\tting", "V n\ts t I n\tt I N");
result.add("un-\tstop-\tpa-\tble", "V n\ts t Q\tp V\tb V l");
result.add("un-\tstruc-\ttured", "V n\ts t r V k\tS @r d");
result.add("un-\tstuck", "V n\ts t V k");
result.add("un-\tsu-\tper-\tvised", "V n\ts u:\tp @r\tv aI z d");
result.add("un-\tsub-\tsi-\tdized", "V n\ts V b\ts V\td aI z d");
result.add("un-\tsub-\ttle", "V n\ts V\tt V l");
result.add("un-\tsubs-\tcribed", "V n\ts V b\ts k r aI b d");
result.add("un-\tsubs-\ttan-\tti-\ta-\tted", "V n\ts V b\ts t { n\tS i:\teI\tt V d");
result.add("un-\tsuc-\tcess-\tful", "V n\ts V k\ts e s\tf V l");
result.add("un-\tsuc-\tcess-\tful-\tly", "V n\ts V k\ts e s\tf V\tl i:");
result.add("un-\tsui-\tta-\tble", "V n\ts u:\tt V\tb V l");
result.add("un-\tsui-\tted", "V n\ts u:\tt V d");
result.add("un-\tsul-\tlied", "V n\ts V\tl i: d");
result.add("un-\tsung", "V n\ts V N");
result.add("un-\tsup-\tpor-\tta-\tble", "V n\ts V\tp O@\tt V\tb V l");
result.add("un-\tsup-\tpor-\tted", "V n\ts V\tp O@\tt V d");
result.add("un-\tsur-\tpassed", "V n\ts @r\tp { s t");
result.add("un-\tsur-\tpri-\tsing", "V n\ts @r p\tr aI\tz I N");
result.add("un-\tsur-\tpri-\tsing-\tly", "V n\ts @r p\tr aI\tz I N\tl i:");
result.add("un-\tsure", "V n\tS U@");
result.add("un-\tsus-\tpec-\tted", "V n\ts V s\tp e k\tt V d");
result.add("un-\tsus-\tpec-\tting", "V n\ts V s\tp e k\tt I N");
result.add("un-\tsus-\ttai-\tna-\tble", "V n\ts V s\tt eI\tn V\tb V l");
result.add("un-\tsus-\ttai-\tnab-\tly", "V n\ts V s\tt eI\tn V b\tl i:");
result.add("un-\tsym-\tpa-\tthe-\ttic", "V n\ts I m\tp V\tT e\tt I k");
result.add("un-\ttain-\tted", "V n\tt eI n\tt V d");
result.add("un-\ttan-\tgle", "V n\tt { N\tg V l");
result.add("un-\ttang-\tling", "V n\tt { N\tl I N");
result.add("un-\ttapped", "V n\tt { p t");
result.add("un-\ttaxed", "V n\tt { k s t");
result.add("un-\tte-\tna-\tble", "V n\tt e\tn V\tb V l");
result.add("un-\tten-\tdered", "V n\tt e n\td @r d");
result.add("un-\tter-\tmeyer", "V n\tt @r\tm aI r");
result.add("un-\ttes-\tted", "V n\tt e s\tt V d");
result.add("un-\tthin-\tka-\tble", "V n\tT I N\tk V\tb V l");
result.add("un-\tthin-\tking", "V n\tT I N\tk I N");
result.add("un-\tthin-\tking-\tly", "V n\tT I N\tk I N\tl i:");
result.add("un-\tti-\tdy", "V n\tt aI\td i:");
result.add("un-\ttie", "V n\tt aI");
result.add("un-\ttied", "V n\tt aI d");
result.add("un-\ttil", "V n\tt I l");
result.add("un-\ttime-\tly", "V n\tt aI m\tl i:");
result.add("un-\tto", "V n\tt u:");
result.add("un-\tto-\tward", "V n\tt u:\tO@ d");
result.add("un-\ttold", "V n\tt @U l d");
result.add("un-\ttou-\tcha-\tble", "V n\tt V\ttS V\tb V l");
result.add("un-\ttou-\tcha-\tbles", "V n\tt V\ttS V\tb V l z");
result.add("un-\ttouched", "V n\tt V tS t");
result.add("un-\ttra-\tcea-\tble", "V n\tt r eI\ts V\tb V l");
result.add("un-\ttra-\tdi-\ttio-\tnal", "V n\tt r V\td I\tS V\tn V l");
result.add("un-\ttrained", "V n\tt r eI n d");
result.add("un-\ttram-\tmeled", "V n\tt r {\tm V l d");
result.add("un-\ttrea-\tta-\tble", "V n\tt r i:\tt V\tb V l");
result.add("un-\ttrea-\tted", "V n\tt r i:\tt V d");
result.add("un-\ttried", "V n\tt r aI d");
result.add("un-\ttrou-\tbled", "V n\tt r V\tb V l d");
result.add("un-\ttrue", "V n\tt r u:");
result.add("un-\ttrust-\twor-\tthy", "V n\tt r V s\tt w @r\tD i:");
result.add("un-\ttruth", "V n\tt r u: T");
result.add("un-\ttruth-\tful", "V n\tt r u: T\tf V l");
result.add("un-\ttruths", "V n\tt r u: T s");
result.add("un-\tturned", "V n\tt @r n d");
result.add("un-\tty-\tpi-\tcal", "V n\tt I\tp I\tk V l");
result.add("un-\tu-\tsu-\tal", "V n\tj u:\tZ V\tw V l");
result.add("un-\tu-\tsu-\tal-\tly", "V n\tj u:\tZ V\tw V\tl i:");
result.add("un-\tused", "V n\tj u: z d");
result.add("un-\tvar-\tnished", "V n\tv Q@\tn I S t");
result.add("un-\tve-\tri-\tfi-\ta-\tble", "V n\tv e@\tV\tf aI\tV\tb V l");
result.add("un-\tve-\tri-\tfied", "V n\tv e@\tV\tf aI d");
result.add("un-\tvei-\tling", "V n\tv eI\tl I N");
result.add("un-\tveil", "V n\tv eI l");
result.add("un-\tveiled", "V n\tv eI l d");
result.add("un-\tveils", "V n\tv eI l z");
result.add("un-\twa-\try", "V n\tw e@\ti:");
result.add("un-\twa-\tve-\tring", "V n\tw eI\tv @r\tI N");
result.add("un-\twan-\tted", "V n\tw O: n\tt V d");
result.add("un-\twar-\tran-\tted", "V n\tw O@\tV n\tt V d");
result.add("un-\twashed", "V n\tw Q S t");
result.add("un-\twed", "V n\tw e d");
result.add("un-\twel-\tcome", "V n\tw e l\tk V m");
result.add("un-\twel-\tcomed", "V n\tw e l\tk V m d");
result.add("un-\twiel-\tdi-\tness", "V n\tw i: l\td i:\tn V s");
result.add("un-\twiel-\tdy", "V n\tw i: l\td i:");
result.add("un-\twil-\tling", "V n\tw I\tl I N");
result.add("un-\twil-\tling-\tly", "V n\tw I\tl I N\tl i:");
result.add("un-\twil-\tling-\tness", "V n\tw I\tl I N\tn V s");
result.add("un-\twin-\tding", "V n\tw aI n\td I N");
result.add("un-\twin-\tna-\tble", "V n\tw I\tn V\tb V l");
result.add("un-\twind", "V n\tw aI n d");
result.add("un-\twise", "V n\tw aI z");
result.add("un-\twise-\tly", "V n\tw aI z\tl i:");
result.add("un-\twit-\tting", "V n\tw I\tt I N");
result.add("un-\twit-\tting-\tly", "V n\tw I\tt I N\tl i:");
result.add("un-\twor-\tka-\tble", "V n\tw @r\tk V\tb V l");
result.add("un-\twor-\tried", "V n\tw @r\ti: d");
result.add("un-\twor-\tthy", "V n\tw @r\tD i:");
result.add("un-\twound", "V n\tw aU n d");
result.add("un-\twra-\tpping", "V n\tr {\tp I N");
result.add("un-\twrap", "V n\tr { p");
result.add("un-\twrapped", "V n\tr { p t");
result.add("un-\twrit-\tten", "V n\tr I\tt V n");
result.add("un-\tyiel-\tding", "V n\tj i: l\td I N");
result.add("un-\tzip", "V n\tz I p");
result.add("un-\tzipped", "V n\tz I p t");
result.add("unc-\tlean", "V n\tk l i: n");
result.add("unc-\tlear", "V n\tk l I@");
result.add("unc-\tles", "V N\tk V l z");
result.add("unc-\tlut-\ttered", "V n\tk l V\tt @r d");
result.add("unc-\ttad", "V n\tk t { d");
result.add("unc-\ttuous", "V N\ttS w V s");
result.add("und", "V n d");
result.add("ung", "V N");
result.add("ung-\tlue", "V n\tg l u:");
result.add("ung-\tlued", "V n\tg l u: d");
result.add("uns-\twayed", "V n\ts w eI d");
result.add("uns-\twer-\tving", "V n\ts w @r\tv I N");
result.add("up", "V p");
result.add("up-\tbeat", "V p\tb i: t");
result.add("up-\tbrai-\tded", "V p\tb r eI\td V d");
result.add("up-\tbraid", "V p\tb r eI d");
result.add("up-\tbrin-\tging", "V p\tb r I\tN I N");
result.add("up-\tco-\tming", "V p\tk V\tm I N");
result.add("up-\tda-\tted", "V p\td eI\tt V d");
result.add("up-\tda-\tting", "V p\td eI\tt I N");
result.add("up-\tdate", "V p\td eI t");
result.add("up-\tdates", "V p\td eI t s");
result.add("up-\tdike", "V p\td aI k");
result.add("up-\tdraft", "V p\td r { f t");
result.add("up-\tdrafts", "V p\td r { f t s");
result.add("up-\tfront", "V p\tf r V n t");
result.add("up-\tgra-\tded", "V p\tg r eI\td V d");
result.add("up-\tgra-\tder", "V p\tg r eI\td @r");
result.add("up-\tgra-\tding", "V p\tg r eI\td I N");
result.add("up-\tgrade", "V p\tg r eI d");
result.add("up-\tgrades", "V p\tg r eI d z");
result.add("up-\theld", "V p\th e l d");
result.add("up-\thill", "V p\th I l");
result.add("up-\thol-\tding", "V p\th @U l\td I N");
result.add("up-\thold", "V p\th @U l d");
result.add("up-\tholds", "V p\th @U l d z");
result.add("up-\thols-\tte-\try", "V\tp @U l\ts t @r\ti:");
result.add("up-\thols-\tter", "V\tp @U l\ts t @r");
result.add("up-\thols-\ttered", "V\tp @U l\ts t @r d");
result.add("up-\tjohn", "V p\tdZ Q n");
result.add("up-\tjohn's", "V p\tdZ Q n z");
result.add("up-\tkeep", "V p\tk i: p");
result.add("up-\tland", "V p\tl V n d");
result.add("up-\tlands", "V p\tl V n d z");
result.add("up-\tlif-\tted", "V p\tl I f\tt V d");
result.add("up-\tlif-\tting", "V p\tl I f\tt I N");
result.add("up-\tlift", "V p\tl I f t");
result.add("up-\tman-\tship", "V p\tm V n\tS I p");
result.add("up-\tmar-\tket", "V p\tm Q@\tk V t");
result.add("up-\tper", "V\tp @r");
result.add("up-\tper-\tclass", "V\tp @r k\tl { s");
result.add("up-\tper-\tmost", "V\tp @r\tm @U s t");
result.add("up-\tpers", "V\tp @r z");
result.add("up-\tpi-\tty", "V\tp I\tt i:");
result.add("up-\tping", "V\tp I N");
result.add("up-\tri-\tsing", "V p\tr aI\tz I N");
result.add("up-\tri-\tsings", "V p\tr aI\tz I N z");
result.add("up-\tri-\tver", "V p\tr I\tv @r");
result.add("up-\tright", "V p\tr aI t");
result.add("up-\trights", "V p\tr aI t s");
result.add("up-\trise", "V p\tr aI z");
result.add("up-\troar", "V p\tr O@");
result.add("up-\troo-\tted", "V p\tr u:\tt V d");
result.add("up-\troo-\tting", "V p\tr u:\tt I N");
result.add("up-\troot", "V p\tr u: t");
result.add("up-\tscale", "V p\ts k eI l");
result.add("up-\tset", "V p\ts e t");
result.add("up-\tset-\tting", "V p\ts e\tt I N");
result.add("up-\tsets", "V p\ts e t s");
result.add("up-\tshaw", "V p\tS O:");
result.add("up-\tshot", "V p\tS Q t");
result.add("up-\tsi-\tzing", "V p\ts aI\tz I N");
result.add("up-\tside", "V p\ts aI d");
result.add("up-\tsize", "V p\ts aI z");
result.add("up-\tson", "V p\ts V n");
result.add("up-\tstage", "V p\ts t eI dZ");
result.add("up-\tstaged", "V p\ts t eI dZ d");
result.add("up-\tstairs", "V p\ts t e@ z");
result.add("up-\tstan-\tding", "V p\ts t { n\td I N");
result.add("up-\tstart", "V p\ts t Q@ t");
result.add("up-\tstarts", "V p\ts t Q@ t s");
result.add("up-\tstate", "V p\ts t eI t");
result.add("up-\tstream", "V p\ts t r i: m");
result.add("up-\tsurge", "V p\ts @r dZ");
result.add("up-\tswing", "V p\ts w I N");
result.add("up-\tswings", "V p\ts w I N z");
result.add("up-\ttake", "V p\tt eI k");
result.add("up-\ttick", "V p\tt I k");
result.add("up-\tticks", "V p\tt I k s");
result.add("up-\ttight", "V p\tt aI t");
result.add("up-\tton", "V p\tt V n");
result.add("up-\ttown", "V p\tt aU n");
result.add("up-\ttrend", "V p\tt r e n d");
result.add("up-\tturn", "V p\tt @r n");
result.add("up-\tturns", "V p\tt @r n z");
result.add("up-\tward", "V p\tw @r d");
result.add("up-\tward-\tly", "V p\tw @r d\tl i:");
result.add("up-\twards", "V p\tw @r d z");
result.add("upped", "V p t");
result.add("ups", "V p s");
result.add("ur", "@r");
result.add("ur-\tba-\tna", "@r\tb {\tn V");
result.add("ur-\tba-\tni", "@r\tb Q\tn i:");
result.add("ur-\tba-\tni-\tza-\ttion", "@r\tb V\tn V\tz eI\tS V n");
result.add("ur-\tba-\tnism", "@r\tb V\tn I z m");
result.add("ur-\tba-\tnite", "@r\tb V\tn aI t");
result.add("ur-\tba-\tnites", "@r\tb V\tn aI t s");
result.add("ur-\tba-\tnize", "@r\tb V\tn aI z");
result.add("ur-\tba-\tnized", "@r\tb V\tn aI z d");
result.add("ur-\tba-\tno", "@r\tb Q\tn @U");
result.add("ur-\tbain", "@r\tb eI n");
result.add("ur-\tban", "@r\tb V n");
result.add("ur-\tbane", "@r\tb eI n");
result.add("ur-\tban's", "@r\tb V n z");
result.add("ur-\tbas", "@r\tb V z");
result.add("ur-\tchin", "@r\ttS I n");
result.add("ur-\tchins", "@r\ttS I n z");
result.add("ur-\tdu", "@r\td u:");
result.add("ur-\tgen-\tcy", "@r\tdZ V n\ts i:");
result.add("ur-\tgent", "@r\tdZ V n t");
result.add("ur-\tgent-\tly", "@r\tdZ V n\tt l i:");
result.add("ur-\tges", "@r\tdZ V z");
result.add("ur-\tging", "@r\tdZ I N");
result.add("ur-\tgings", "@r\tdZ I N z");
result.add("ur-\tman", "@r\tm V n");
result.add("ur-\tquhart", "@r\tk Q@ t");
result.add("ur-\tsa", "@r\ts V");
result.add("ur-\tso-\tla", "@r\ts @U\tl V");
result.add("ur-\tson", "@r\ts V n");
result.add("ur-\tsu-\tla", "@r\ts V\tl V");
result.add("ur-\tsus", "@r\ts V s");
result.add("ure", "j u: r");
result.add("urge", "@r dZ");
result.add("urged", "@r dZ d");
result.add("urn", "@r n");
result.add("us", "V s");
result.add("u's", "j u: z");
result.add("us-\tti-\tnov", "u: s\tt I\tn Q v");
result.add("use", "j u: s");
result.add("use-\tful", "j u: s\tf V l");
result.add("use-\tful-\tly", "j u: s\tf V\tl i:");
result.add("use-\tful-\tness", "j u: s\tf V l\tn V s");
result.add("use-\tless", "j u: s\tl V s");
result.add("use-\tnet", "j u: z\tn e t");
result.add("used", "j u: z d");
result.add("ut-\tley", "V t\tl i:");
result.add("ut-\tmost", "V t\tm @U s t");
result.add("ut-\tte-\tran-\tces", "V\tt @r\tV n\ts V z");
result.add("ut-\tte-\trance", "V\tt @r\tV n s");
result.add("ut-\tte-\tring", "V\tt @r\tI N");
result.add("ut-\tter", "V\tt @r");
result.add("ut-\tter-\tly", "V\tt @r\tl i:");
result.add("ut-\ttered", "V\tt @r d");
result.add("ut-\tters", "V\tt @r z");
result.add("uz-\tbe-\tkis-\ttan", "u: z\tb e\tk I s\tt { n");
result.add("uz-\tbek", "u: z\tb e k");
result.add("uz-\tbeks", "u: z\tb e k s");
result.add("v", "v i:");
result.add("v-\ts", "v @r\ts V z");
result.add("v.", "v i:");
result.add("va-\tca", "v {\tk V");
result.add("va-\tca-\tted", "v eI\tk eI\tt V d");
result.add("va-\tca-\tting", "v eI\tk eI\tt I N");
result.add("va-\tca-\ttio-\tner", "v eI\tk eI\tS V\tn @r");
result.add("va-\tca-\ttio-\tners", "v eI\tk eI\tS V\tn @r z");
result.add("va-\tca-\ttio-\tning", "v eI\tk eI\tS V\tn I N");
result.add("va-\tca-\ttion", "v eI\tk eI\tS V n");
result.add("va-\tca-\ttioned", "v eI\tk eI\tS V n d");
result.add("va-\tca-\ttions", "v eI\tk eI\tS V n z");
result.add("va-\tca-\tville", "v {\tk V\tv I l");
result.add("va-\tcan-\tcies", "v eI\tk V n\ts i: z");
result.add("va-\tcan-\tcy", "v eI\tk V n\ts i:");
result.add("va-\tcant", "v eI\tk V n t");
result.add("va-\tcate", "v eI\tk eI t");
result.add("va-\tcil-\tla-\tted", "v {\ts I\tl eI\tt I d");
result.add("va-\tcil-\tla-\tting", "v {\ts I\tl eI\tt I N");
result.add("va-\tcil-\tla-\ttion", "v {\ts I\tl eI\tS V n");
result.add("va-\tcil-\tlate", "v {\ts I\tl eI t");
result.add("va-\tcu-\tous", "v { k\tj u:\tV s");
result.add("va-\tcuu-\tming", "v { k\tj u:\tm I N");
result.add("va-\tcuum", "v { k\tj u: m");
result.add("va-\tcuums", "v { k\tj u: m z");
result.add("va-\tdas", "v Q\td Q z");
result.add("va-\tden", "v eI\td V n");
result.add("va-\tder", "v eI\td @r");
result.add("va-\tdim", "v Q\td i: m");
result.add("va-\tga-\tbond", "v {\tg V\tb Q n d");
result.add("va-\tga-\tbonds", "v {\tg V\tb Q n d z");
result.add("va-\tga-\tries", "v eI\tg @r\ti: z");
result.add("va-\tga-\try", "v eI\tg @r\ti:");
result.add("va-\tgi-\tna", "v V\tdZ aI\tn V");
result.add("va-\tgi-\tnal", "v V\tdZ aI\tn V l");
result.add("va-\tguer", "v eI\tg @r");
result.add("va-\tguest", "v eI\tg I s t");
result.add("va-\tla", "v Q\tl V");
result.add("va-\tle-\tda", "v Q\tl eI\td V");
result.add("va-\tle-\tdic-\tto-\tri-\tan", "v {\tl V\td I k\tt O@\ti:\tV n");
result.add("va-\tle-\tdic-\tto-\try", "v {\tl V\td I k\tt @r\ti:");
result.add("va-\tle-\tnt", "v Q\tl eI\tV n t");
result.add("va-\tle-\tra", "v V\tl e@\tV");
result.add("va-\tle-\tri-\ta", "v V\tl i:\tr i:\tV");
result.add("va-\tle-\tri-\tan", "v V\tl I@\ti:\tV n");
result.add("va-\tle-\tri-\to", "v V\tl i:\tr i:\t@U");
result.add("va-\tle-\trie", "v {\tl @r\ti:");
result.add("va-\tle-\try", "v {\tl @r\ti:");
result.add("va-\tlen-\tci-\ta", "v V\tl e n\ts i:\tV");
result.add("va-\tlen-\tci-\ta's", "v V\tl e n\ts i:\tV z");
result.add("va-\tlen-\tta", "v V\tl e n\tt V");
result.add("va-\tlen-\tte", "v Q\tl e n\tt i:");
result.add("va-\tlen-\tti", "v V\tl e n\tt i:");
result.add("va-\tlen-\tti-\tna", "v {\tl V n\tt i:\tn V");
result.add("va-\tlen-\tti-\tno", "v {\tl V n\tt i:\tn @U");
result.add("va-\tlen-\tti-\tno's", "v {\tl V n\tt i:\tn @U z");
result.add("va-\tlen-\ttia", "v Q\tl e n\tS V");
result.add("va-\tlen-\ttin", "v Q\tl eI n\tt i: n");
result.add("va-\tlen-\ttine", "v {\tl V n\tt aI n");
result.add("va-\tlen-\ttines", "v {\tl V n\tt aI n z");
result.add("va-\tlen-\ttine's", "v {\tl V n\tt aI n z");
result.add("va-\tlen-\tza", "v V\tl e n\tz V");
result.add("va-\tlen-\tzue-\tla", "v Q\tl e n\tz u:\tl V");
result.add("va-\tlence", "v eI\tl V n s");
result.add("va-\tlens", "v {\tl V n z");
result.add("va-\tlet", "v {\tl eI");
result.add("va-\tli-\tda", "v Q\tl i:\td V");
result.add("va-\tli-\tda-\tted", "v {\tl I\td eI\tt I d");
result.add("va-\tli-\tda-\tting", "v {\tl I\td eI\tt I N");
result.add("va-\tli-\tda-\ttion", "v {\tl I\td eI\tS V n");
result.add("va-\tli-\tdate", "v {\tl I\td eI t");
result.add("va-\tli-\tdates", "v {\tl I\td eI t s");
result.add("va-\tli-\tdi-\tty", "v V\tl I\td I\tt i:");
result.add("va-\tli-\tum", "v eI\tl i:\tV m");
result.add("va-\tliant", "v { l\tj V n t");
result.add("va-\tliant-\tly", "v { l\tj V n\tt l i:");
result.add("va-\tlid", "v {\tl I d");
result.add("va-\tlid-\tly", "v {\tl I d\tl i:");
result.add("va-\tlis", "v {\tl I s");
result.add("va-\tlo-\tnia", "v V\tl @U n\tj V");
result.add("va-\tlois", "v { l\tw Q");
result.add("va-\tlor", "v {\tl @r");
result.add("va-\tlu-\ta-\ttion", "v { l\tj u:\teI\tS V n");
result.add("va-\tlu-\ta-\ttions", "v { l\tj u:\teI\tS V n z");
result.add("va-\tlu-\ting", "v { l\tj u:\tI N");
result.add("va-\tlua-\tbles", "v { l\tj V\tb V l z");
result.add("va-\tlue", "v { l\tj u:");
result.add("va-\tlue-\tless", "v { l\tj u:\tl V s");
result.add("va-\tlued", "v { l\tj u: d");
result.add("va-\tlues", "v { l\tj u: z");
result.add("va-\tmos", "v Q\tm @U z");
result.add("va-\tna-\tdi-\tum", "v V\tn eI\td i:\tV m");
result.add("va-\tnal-\tstyne", "v {\tn V l\ts t aI n");
result.add("va-\tnat-\tta", "v Q\tn Q\tt V");
result.add("va-\tnes-\tsa", "v V\tn e\ts V");
result.add("va-\tnet-\tten", "v {\tn e\tt V n");
result.add("va-\tni-\ta", "v Q\tn i:\tV");
result.add("va-\tni-\ter", "v {\tn i:\t@r");
result.add("va-\tni-\tshes", "v {\tn I\tS V z");
result.add("va-\tni-\tshing", "v {\tn I\tS I N");
result.add("va-\tni-\tties", "v {\tn V\tt i: z");
result.add("va-\tni-\tty", "v {\tn I\tt i:");
result.add("va-\tnil-\tla", "v V\tn I\tl V");
result.add("va-\tnil-\tlin", "v V\tn I\tl V n");
result.add("va-\tnish", "v {\tn I S");
result.add("va-\tnished", "v {\tn I S t");
result.add("va-\tno", "v Q\tn @U");
result.add("va-\tnu-\ta-\ttu", "v {\tn u:\tQ\tt u:");
result.add("va-\tpid", "v {\tp V d");
result.add("va-\tpo-\tri-\tza-\ttion", "v eI\tp @r\tI\tz eI\tS V n");
result.add("va-\tpo-\trize", "v eI\tp @r\taI z");
result.add("va-\tpo-\trized", "v eI\tp @r\taI z d");
result.add("va-\tpor", "v eI\tp @r");
result.add("va-\tpor-\tware", "v eI\tp @r\tw e@");
result.add("va-\tpors", "v eI\tp @r z");
result.add("va-\tra", "v Q@\tV");
result.add("va-\tra-\tdy", "v @r\tQ\td i:");
result.add("va-\tres", "v Q@\te s");
result.add("va-\tri", "v Q@\ti:");
result.add("va-\tri-\ta-\tbi-\tli-\tty", "v e@\ti:\tV\tb I\tl V\tt i:");
result.add("va-\tri-\ta-\tble", "v e@\ti:\tV\tb V l");
result.add("va-\tri-\ta-\tbles", "v e@\ti:\tV\tb V l z");
result.add("va-\tri-\ta-\ttion", "v e@\ti:\teI\tS V n");
result.add("va-\tri-\ta-\ttions", "v e@\ti:\teI\tS V n z");
result.add("va-\tri-\tan", "v e@\ti:\tV n");
result.add("va-\tri-\tan-\tces", "v e@\ti:\tV n\ts V z");
result.add("va-\tri-\tance", "v e@\ti:\tV n s");
result.add("va-\tri-\tant", "v e@\ti:\tV n t");
result.add("va-\tri-\tants", "v e@\ti:\tV n t s");
result.add("va-\tri-\te-\ttals", "v @r\taI\tV\tt V l z");
result.add("va-\tri-\te-\tties", "v @r\taI\tV\tt i: z");
result.add("va-\tri-\te-\tty", "v @r\taI\tV\tt i:");
result.add("va-\tri-\tna", "v Q@\ti:\tn V");
result.add("va-\tri-\tous", "v e@\ti:\tV s");
result.add("va-\tri-\tous-\tly", "v e@\ti:\tV s\tl i:");
result.add("va-\tri-\tty-\tper", "v e@\tI\tt aI\tp @r");
result.add("va-\trick", "v e@\tI k");
result.add("va-\trie-\ttal", "v @r\ti:\tt V l");
result.add("va-\tried", "v e@\ti: d");
result.add("va-\tries", "v e@\ti: z");
result.add("va-\try", "v e@\ti:");
result.add("va-\try-\ting", "v e@\ti:\tI N");
result.add("va-\tse-\tline", "v {\ts V\tl i: n");
result.add("va-\tsec-\tto-\tmies", "v {\tz e k\tt V\tm i: z");
result.add("va-\tsec-\tto-\tmy", "v {\tz e k\tt V\tm i:");
result.add("va-\tses", "v eI\ts V z");
result.add("va-\tsi-\tly", "v {\ts I\tl i:");
result.add("va-\tti-\tcan", "v {\tt I\tk V n");
result.add("va-\tti-\tcan's", "v {\tt I\tk V n z");
result.add("va-\txes", "v { k\ts V z");
result.add("vaal", "v Q l");
result.add("vac-\tci-\tna-\tted", "v { k\ts I\tn eI\tt I d");
result.add("vac-\tci-\tna-\ttion", "v { k\ts I\tn eI\tS V n");
result.add("vac-\tci-\tna-\ttions", "v { k\ts I\tn eI\tS V n z");
result.add("vac-\tci-\tnate", "v { k\ts I\tn eI t");
result.add("vac-\tci-\tni-\ta", "v V\ttS i:\tn i:\tV");
result.add("vac-\tcine", "v { k\ts i: n");
result.add("vac-\tcines", "v { k\ts i: n z");
result.add("vac-\tcine's", "v { k\ts i: n z");
result.add("vac-\tlav", "v { k\tl Q v");
result.add("vag-\tran-\tcy", "v eI g\tr V n\ts i:");
result.add("vag-\trant", "v eI g\tr V n t");
result.add("vag-\trants", "v eI g\tr V n t s");
result.add("vague", "v eI g");
result.add("vague-\tly", "v eI g\tl i:");
result.add("vague-\tness", "v eI g\tn V s");
result.add("vail", "v eI l");
result.add("vain", "v eI n");
result.add("vain-\tly", "v eI n\tl i:");
result.add("val", "v { l");
result.add("val-\tda", "v Q l\td V");
result.add("val-\tde-\tmar", "v Q l\td eI\tm Q@");
result.add("val-\tdes", "v { l\td e z");
result.add("val-\tdez", "v { l\td e z");
result.add("val-\tdi-\tvi-\ta", "v Q l\td i:\tv i:\tV");
result.add("val-\tdis", "v { l\td I s");
result.add("val-\tdos-\tta", "v { l\td O: s\tt V");
result.add("val-\thal-\tla", "v { l\th {\tl V");
result.add("val-\tla", "v {\tl V");
result.add("val-\tlar-\tta", "v {\tl Q@\tt V");
result.add("val-\tle-\tjo", "v Q\tl eI\tj @U");
result.add("val-\tle-\try", "v {\tl @r\ti:");
result.add("val-\tleau", "v V\tl @U");
result.add("val-\tley", "v {\tl i:");
result.add("val-\tleys", "v {\tl i: z");
result.add("val-\tley's", "v {\tl i: z");
result.add("val-\tli", "v {\tl i:");
result.add("val-\tli-\tant", "v Q\tl i:\tV n t");
result.add("val-\tlie", "v O:\tl i:");
result.add("val-\tlis", "v {\tl I s");
result.add("val-\tlo", "v {\tl @U");
result.add("val-\tmey-\ter", "v { l\tm aI\t@r");
result.add("val-\tpa-\trai-\tso", "v { l\tp @r\teI\ts @U");
result.add("val-\tvo-\tline", "v { l\tv V\tl i: n");
result.add("vale", "v eI l");
result.add("vales", "v eI l z");
result.add("valle", "v eI l");
result.add("valve", "v { l v");
result.add("valves", "v { l v z");
result.add("vam-\tpi-\tric", "v { m\tp I@\tI k");
result.add("vam-\tpire", "v { m\tp aI r");
result.add("vam-\tpires", "v { m\tp aI r z");
result.add("vam-\tpire's", "v { m\tp aI r z");
result.add("vamp", "v { m p");
result.add("van", "v { n");
result.add("van-\tco-\tmy-\tcin", "v { n\tk @U\tm aI\ts I n");
result.add("van-\tcou-\tver", "v { n\tk u:\tv @r");
result.add("van-\tcou-\tver's", "v { n\tk u:\tv @r z");
result.add("van-\tcourt", "v V n\tk O@ t");
result.add("van-\tda-\tli-\tsm", "v { n\td V\tl I\tz V m");
result.add("van-\tda-\tli-\tzing", "v { n\td V\tl aI\tz I N");
result.add("van-\tda-\tlize", "v { n\td V\tl aI z");
result.add("van-\tda-\tlized", "v { n\td V\tl aI z d");
result.add("van-\tdal", "v { n\td V l");
result.add("van-\tdals", "v { n\td V l z");
result.add("van-\tden", "v { n\td V n");
result.add("van-\tden-\tberg", "v { n\td V n\tb @r g");
result.add("van-\tder", "v { n\td @r");
result.add("van-\tder-\tbilt", "v { n\td @r\tb I l t");
result.add("van-\tder-\tgrift", "v { n\td @r g\tr I f t");
result.add("van-\tder-\tgrift's", "v { n\td @r g\tr I f t s");
result.add("van-\tder-\tpoel", "v { n\td @r\tp @U l");
result.add("van-\tder-\tpool", "v { n\td @r\tp u: l");
result.add("van-\tder-\tvelde", "v { n\td @r\tv e l d");
result.add("van-\tder-\tvoort", "v { n\td @r\tv U@ t");
result.add("van-\tdi-\tver", "v { n\td aI\tv @r");
result.add("van-\tdyke", "v { n\td aI k");
result.add("van-\tdyne", "v { n\td aI n");
result.add("van-\tgogh", "v { n\tg @U");
result.add("van-\tguard", "v { n\tg Q@ d");
result.add("van-\tguard's", "v { n\tg Q@ d z");
result.add("van-\thook", "v { n\th U k");
result.add("van-\thorn", "v { n\th O@ n");
result.add("van-\tna", "v {\tn V");
result.add("van-\tni", "v {\tn i:");
result.add("van-\tnie", "v {\tn i:");
result.add("van-\tny", "v {\tn i:");
result.add("van-\tquish", "v { N\tk w I S");
result.add("van-\tquished", "v { N\tk w I S t");
result.add("van-\tsant", "v Q n\ts V n t");
result.add("van-\tta-\tges", "v { n\tt I\tdZ V z");
result.add("van-\tta-\tge's", "v { n\tt I\tdZ V z");
result.add("van-\ttage", "v { n\tt V dZ");
result.add("van-\ttas-\tsell", "v { n\tt {\ts V l");
result.add("van-\twert", "v { n\tw @r t");
result.add("van-\twyck", "v { n\tw I k");
result.add("van-\tya", "v Q n\tj V");
result.add("van-\tya's", "v Q n\tj V z");
result.add("van-\tzant", "v Q n\tz V n t");
result.add("vance", "v { n s");
result.add("vane", "v eI n");
result.add("vanes", "v eI n z");
result.add("vang", "v { N");
result.add("vans", "v { n z");
result.add("vanv-\tleck", "v { n\tv l e k");
result.add("var-\tden", "v Q@\td V n");
result.add("var-\tdon", "v Q@\td O: n");
result.add("var-\tga", "v Q@\tg V");
result.add("var-\tgas", "v Q@\tg V s");
result.add("var-\tley", "v Q@\tl i:");
result.add("var-\tmint", "v Q@\tm I n t");
result.add("var-\tnell", "v Q@\tn V l");
result.add("var-\tney", "v Q@\tn i:");
result.add("var-\tni-\tshes", "v Q@\tn I\tS V z");
result.add("var-\tnish", "v Q@\tn I S");
result.add("var-\tnished", "v Q@\tn I S t");
result.add("var-\tsi-\tty", "v Q@\ts I\tt i:");
result.add("var-\tvel", "v Q@\tv e l");
result.add("vars", "v Q@ z");
result.add("varves", "v Q@ v z");
result.add("vas-\tco", "v { s\tk @U");
result.add("vas-\tcu-\tlar", "v { s\tk j V\tl @r");
result.add("vas-\tquez", "v { s\tk e z");
result.add("vas-\tsal", "v {\ts V l");
result.add("vas-\tsals", "v {\ts V l z");
result.add("vas-\tsar", "v {\ts @r");
result.add("vas-\tta", "v { s\tt V");
result.add("vase", "v eI s");
result.add("vash-\tti", "v { S\tt i:");
result.add("vass", "v { s");
result.add("vast", "v { s t");
result.add("vast-\tly", "v { s\tt l i:");
result.add("vast-\tness", "v { s\tt n V s");
result.add("vat", "v { t");
result.add("vat-\tted", "v {\tt V d");
result.add("vat-\tter", "v {\tt @r");
result.add("vats", "v { t s");
result.add("vaude-\tvil-\tlian", "v Q d\tv I l\tj V n");
result.add("vaude-\tville", "v Q d\tv I l");
result.add("vaughan", "v O: n");
result.add("vaughan's", "v O: n z");
result.add("vaughn", "v O: n");
result.add("vaughn's", "v O: n z");
result.add("vaul-\tted", "v O: l\tt V d");
result.add("vaul-\tting", "v O: l\tt I N");
result.add("vault", "v O: l t");
result.add("vaults", "v O: l t s");
result.add("vaun-\tted", "v O: n\tt V d");
result.add("vaux-\thall", "v Q k\ts h O: l");
result.add("vax", "v { k s");
result.add("vaz-\tquez", "v { s\tk e z");
result.add("ve", "v i:");
result.add("ve-\tcel-\tli-\to", "v e\ttS e\tl i:\t@U");
result.add("ve-\tda", "v eI\td V");
result.add("ve-\tdette", "v V\td e t");
result.add("ve-\tdis", "v eI\td I s");
result.add("ve-\tga", "v eI\tg V");
result.add("ve-\tgas", "v eI\tg V s");
result.add("ve-\tge-\tta-\tri-\ta-\tni-\tsm", "v e\tdZ V\tt e@\ti:\tV\tn I\tz V m");
result.add("ve-\tge-\tta-\tri-\tan", "v e\tdZ V\tt e@\ti:\tV n");
result.add("ve-\tge-\tta-\tri-\tans", "v e\tdZ V\tt e@\ti:\tV n z");
result.add("ve-\tge-\tta-\ttion", "v e\tdZ V\tt eI\tS V n");
result.add("ve-\tge-\tta-\ttive", "v e\tdZ V\tt eI\tt I v");
result.add("ve-\tge-\ttal", "v e\tdZ V\tt V l");
result.add("ve-\tge-\ttate", "v e\tdZ V\tt eI t");
result.add("ve-\the-\tmence", "v i:\tV\tm V n s");
result.add("ve-\the-\tment", "v i:\tV\tm V n t");
result.add("ve-\the-\tment-\tly", "v i:\tV\tm V n\tt l i:");
result.add("ve-\thi-\tcle", "v i:\th I\tk V l");
result.add("ve-\thi-\tcles", "v i:\th I\tk V l z");
result.add("ve-\thi-\tcle's", "v i:\th I\tk V l z");
result.add("ve-\thi-\tcu-\tlar", "v i:\th I k\tj V\tl @r");
result.add("ve-\tla", "v e\tl V");
result.add("ve-\tlar-\tde", "v e\tl Q@\td i:");
result.add("ve-\tlas-\tco", "v e\tl Q s\tk @U");
result.add("ve-\tlas-\tquez", "v e\tl { s\tk e z");
result.add("ve-\tlaz-\tquez", "v e\tl { s\tk e z");
result.add("ve-\tlez", "v e\tl e z");
result.add("ve-\tli-\tka", "v e\tl I\tk V");
result.add("ve-\tlo", "v e\tl @U");
result.add("ve-\tlo-\tci-\trap-\ttor", "v V\tl O:\ts @r\t{ p\tt @r");
result.add("ve-\tlo-\tci-\tties", "v V\tl Q\ts V\tt i: z");
result.add("ve-\tlo-\tci-\tty", "v V\tl Q\ts V\tt i:");
result.add("ve-\tna", "v i:\tn V");
result.add("ve-\tna-\tble", "v e\tn V\tb V l");
result.add("ve-\tna-\tbles", "v e\tn V\tb V l z");
result.add("ve-\tna-\tli-\tty", "v V\tn {\tl V\tt i:");
result.add("ve-\tnal", "v i:\tn V l");
result.add("ve-\tnan-\tgo", "v e\tn { N\tg @U");
result.add("ve-\tne-\tra-\tble", "v e\tn @r\tV\tb V l");
result.add("ve-\tne-\tra-\tted", "v e\tn @r\teI\tt V d");
result.add("ve-\tne-\trate", "v e\tn @r\teI t");
result.add("ve-\tne-\tre-\tal", "v V\tn I@\ti:\tV l");
result.add("ve-\tne-\ttian", "v V\tn i:\tS V n");
result.add("ve-\tne-\tzi-\ta", "v e\tn e\tz i:\tV");
result.add("ve-\tne-\tzi-\ta-\tno", "v e\tn e\tz i:\tQ\tn @U");
result.add("ve-\tne-\tzue-\tla", "v e\tn V z\tw eI\tl V");
result.add("ve-\tne-\tzue-\tlan", "v e\tn V z\tw eI\tl V n");
result.add("ve-\tne-\tzue-\tlans", "v e\tn V z\tw eI\tl V n z");
result.add("ve-\tne-\tzue-\tla's", "v e\tn V z\tw eI\tl V z");
result.add("ve-\tneer", "v V\tn I@");
result.add("ve-\tney", "v e\tn i:");
result.add("ve-\tni-\tce's", "v e\tn I\ts e z");
result.add("ve-\tni-\tson", "v e\tn I\ts V n");
result.add("ve-\tni-\tta", "v e\tn i:\tt V");
result.add("ve-\tnice", "v e\tn I s");
result.add("ve-\tno", "v eI\tn @U");
result.add("ve-\tno-\tmous", "v e\tn V\tm V s");
result.add("ve-\tnom", "v e\tn V m");
result.add("ve-\tnous", "v i:\tn V s");
result.add("ve-\tnu-\tti", "v e\tn u:\tt i:");
result.add("ve-\tnue", "v e n\tj u:");
result.add("ve-\tnues", "v e\tn u: z");
result.add("ve-\tnus", "v i:\tn V s");
result.add("ve-\tra", "v e@\tV");
result.add("ve-\tra-\tci-\tty", "v @r\t{\ts I\tt i:");
result.add("ve-\tran-\tda", "v @r\t{ n\td V");
result.add("ve-\tran-\tdas", "v @r\t{ n\td V z");
result.add("ve-\tre-\tna", "v @r\teI\tn V");
result.add("ve-\trene", "v e@\ti: n");
result.add("ve-\tri-\tfi-\ta-\tble", "v e@\tI\tf aI\tV\tb V l");
result.add("ve-\tri-\tfi-\tca-\ttion", "v e@\tI\tf I\tk eI\tS V n");
result.add("ve-\tri-\tfied", "v e@\tI\tf aI d");
result.add("ve-\tri-\tfies", "v e@\tI\tf aI z");
result.add("ve-\tri-\tfy", "v e@\tI\tf aI");
result.add("ve-\tri-\tfy-\ting", "v e@\tI\tf aI\tI N");
result.add("ve-\tri-\tna", "v @r\ti:\tn V");
result.add("ve-\tri-\tne", "v @r\ti:\tn i:");
result.add("ve-\tri-\tsi-\tmi-\tli-\ttude", "v e@\tI\ts I\tm I\tl I\tt u: d");
result.add("ve-\tri-\tta-\tble", "v e@\tI\tt V\tb V l");
result.add("ve-\tri-\tties", "v e@\tI\tt i: z");
result.add("ve-\tri-\tty", "v e@\tI\tt i:");
result.add("ve-\tri-\tty's", "v e@\tI\tt i: z");
result.add("ve-\tro", "v e@\t@U");
result.add("ve-\tro-\tna", "v @r\t@U\tn V");
result.add("ve-\tro-\tni-\tca", "v @r\tQ\tn I\tk V");
result.add("ve-\tro-\tnique", "v e@\tQ\tn i: k");
result.add("ve-\tron", "v e@\tV n");
result.add("ve-\try", "v e@\ti:");
result.add("ve-\tsu-\tvi-\tus", "v V\ts u:\tv i:\tV s");
result.add("ve-\tta", "v e\tt V");
result.add("ve-\tte-\tran", "v e\tt @r\tV n");
result.add("ve-\tte-\trans", "v e\tt @r\tV n z");
result.add("ve-\tte-\tran's", "v e\tt @r\tV n z");
result.add("ve-\tte-\trans'", "v e\tt @r\tV n z");
result.add("ve-\tto", "v i:\tt @U");
result.add("ve-\tto-\ting", "v i:\tt @U\tI N");
result.add("ve-\ttoed", "v i:\tt @U d");
result.add("ve-\ttoes", "v i:\tt @U z");
result.add("ve-\tvay", "v e\tv eI");
result.add("ve-\txa-\ttious", "v e k\ts eI\tS V s");
result.add("ve-\txing", "v e k\ts I N");
result.add("veal", "v i: l");
result.add("veale", "v i: l");
result.add("veals", "v i: l z");
result.add("vec-\ttor", "v e k\tt @r");
result.add("vec-\ttors", "v e k\tt @r z");
result.add("ved-\tder", "v e\td @r");
result.add("vee", "v i:");
result.add("vee-\tring", "v I@\tI N");
result.add("veen", "v i: n");
result.add("veep", "v i: p");
result.add("veer", "v I@");
result.add("veered", "v I@ d");
result.add("veers", "v I@ z");
result.add("vees", "v i: z");
result.add("veg-\tgie", "v e\tdZ i:");
result.add("veg-\tgies", "v e\tdZ i: z");
result.add("vege-\tta-\tble", "v e dZ\tt V\tb V l");
result.add("vege-\tta-\tbles", "v e dZ\tt V\tb V l z");
result.add("vei-\tling", "v eI\tl I N");
result.add("veil", "v eI l");
result.add("veiled", "v eI l d");
result.add("veils", "v eI l z");
result.add("vein", "v eI n");
result.add("veins", "v eI n z");
result.add("veit", "v i: t");
result.add("vel-\tda", "v e l\td V");
result.add("vel-\tla", "v e\tl V");
result.add("vel-\tma", "v e l\tm V");
result.add("vel-\tve-\tty", "v e l\tv V\tt i:");
result.add("vel-\tvee-\tta", "v e l\tv i:\tt V");
result.add("vel-\tvet", "v e l\tv V t");
result.add("velc-\tro", "v e l\tk r @U");
result.add("veld-\tman", "v e l\td m V n");
result.add("velte", "v e l t");
result.add("ven-\tdee", "v e n\td i:");
result.add("ven-\tdet-\tta", "v e n\td e\tt V");
result.add("ven-\tding", "v e n\td I N");
result.add("ven-\tdit-\tti", "v e n\td i:\tt i:");
result.add("ven-\tdor", "v e n\td @r");
result.add("ven-\tdors", "v e n\td @r z");
result.add("ven-\tdor's", "v e n\td @r z");
result.add("ven-\tgeance", "v e n\tdZ V n s");
result.add("ven-\tner", "v e\tn @r");
result.add("ven-\tted", "v e n\tt V d");
result.add("ven-\tter", "v e n\tt @r");
result.add("ven-\tters", "v e n\tt @r z");
result.add("ven-\tti-\tla-\tted", "v e n\tt I\tl eI\tt I d");
result.add("ven-\tti-\tla-\tting", "v e n\tt I\tl eI\tt I N");
result.add("ven-\tti-\tla-\ttion", "v e n\tt I\tl eI\tS V n");
result.add("ven-\tti-\tla-\ttor", "v e n\tt I\tl eI\tt @r");
result.add("ven-\tti-\tlate", "v e n\tt I\tl eI t");
result.add("ven-\tting", "v e n\tt I N");
result.add("ven-\tto", "v e n\tt @U");
result.add("ven-\ttre", "v e n\tt @r");
result.add("ven-\ttres", "v e n\tt @r z");
result.add("ven-\ttress", "v e n\tt r e s");
result.add("ven-\ttri-\tcu-\tlar", "v e n\tt r I k\tj u:\tl @r");
result.add("ven-\ttu-\tra", "v e n\ttS @r\tV");
result.add("ven-\ttu-\tri", "v e n\tt U@\ti:");
result.add("ven-\ttu-\tring", "v e n\ttS @r\tI N");
result.add("ven-\tture", "v e n\ttS @r");
result.add("ven-\tture-\tsome", "v e n\ttS @r\ts V m");
result.add("ven-\ttured", "v e n\ttS @r d");
result.add("ven-\ttures", "v e n\ttS @r z");
result.add("venge-\tful", "v e n\tdZ f V l");
result.add("venn", "v e n");
result.add("vent", "v e n t");
result.add("vent-\tral", "v e n\tt r V l");
result.add("vents", "v e n t s");
result.add("ver-\tba", "v e@\tb V");
result.add("ver-\tba-\tli-\tzing", "v @r\tb V\tl aI\tz I N");
result.add("ver-\tba-\tlize", "v @r\tb V\tl aI z");
result.add("ver-\tba-\ttim", "v @r\tb eI\tt I m");
result.add("ver-\tbal", "v @r\tb V l");
result.add("ver-\tbal-\tly", "v @r\tb {\tl i:");
result.add("ver-\tbe-\tna", "v @r\tb i:\tn V");
result.add("ver-\tbi-\tage", "v @r\tb i:\tI dZ");
result.add("ver-\tbo-\tten", "v @r\tb @U\tt V n");
result.add("ver-\tda", "v e@\td V");
result.add("ver-\tdant", "v @r\td V n t");
result.add("ver-\tde", "v @r\td i:");
result.add("ver-\tdes", "v @r\td i:");
result.add("ver-\tdi", "v e@\td i:");
result.add("ver-\tdict", "v @r\td I k t");
result.add("ver-\tdicts", "v @r\td I k t s");
result.add("ver-\tdin", "v @r\td I n");
result.add("ver-\tdi's", "v @r\td i: z");
result.add("ver-\tdon", "v e@\td O: n");
result.add("ver-\tdu-\tgo", "v @r\td u:\tg @U");
result.add("ver-\tdun", "v @r\td V n");
result.add("ver-\tges", "v @r\tdZ V z");
result.add("ver-\tgil", "v @r\tdZ I l");
result.add("ver-\tging", "v @r\tdZ I N");
result.add("ver-\tla", "v e@\tl V");
result.add("ver-\tlag", "v @r\tl { g");
result.add("ver-\tmeer", "v @r\tm I@");
result.add("ver-\tmi-\tlion", "v @r\tm I l\tj V n");
result.add("ver-\tmil-\tlion", "v @r\tm I l\tj V n");
result.add("ver-\tmin", "v @r\tm I n");
result.add("ver-\tmon-\tter", "v @r\tm Q n\tt @r");
result.add("ver-\tmon-\tters", "v @r\tm Q n\tt @r z");
result.add("ver-\tmont", "v @r\tm Q n t");
result.add("ver-\tmont's", "v @r\tm Q n t s");
result.add("ver-\tmouth", "v @r\tm u: T");
result.add("ver-\tna", "v @r\tn V");
result.add("ver-\tna-\tcu-\tlar", "v @r\tn { k\tj V\tl @r");
result.add("ver-\tnal", "v @r\tn V l");
result.add("ver-\tner", "v @r\tn @r");
result.add("ver-\tney", "v @r\tn i:");
result.add("ver-\tni-\ter", "v @r\tn i:\t@r");
result.add("ver-\tni-\tta", "v @r\tn i:\tt V");
result.add("ver-\tnis", "v @r\tn I s");
result.add("ver-\tno-\tni-\ta", "v @r\tn @U\tn i:\tV");
result.add("ver-\tnon", "v @r\tn V n");
result.add("ver-\tnon's", "v @r\tn V n z");
result.add("ver-\tnor", "v @r\tn @r");
result.add("ver-\trell", "v e@\teI l");
result.add("ver-\trett", "v e@\te t");
result.add("ver-\try", "v e@\ti:");
result.add("ver-\tsa", "v @r\ts V");
result.add("ver-\tsa-\tce", "v @r\ts Q\ttS eI");
result.add("ver-\tsa-\tti-\tli-\tty", "v @r\ts V\tt I\tl V\tt i:");
result.add("ver-\tsa-\ttile", "v @r\ts V\tt V l");
result.add("ver-\tsailles", "v e@\ts aI");
result.add("ver-\tser", "v @r\ts @r");
result.add("ver-\tses", "v @r\ts V z");
result.add("ver-\tsion", "v @r\tZ V n");
result.add("ver-\tsions", "v @r\tZ V n z");
result.add("ver-\tsus", "v @r\ts V s");
result.add("ver-\tteb-\tra", "v @r\tt V b\tr V");
result.add("ver-\tteb-\trae", "v @r\tt V b\tr eI");
result.add("ver-\tteb-\tral", "v @r\tt V b\tr V l");
result.add("ver-\tteb-\trate", "v @r\tt V b\tr eI t");
result.add("ver-\tteb-\trates", "v @r\tt V b\tr eI t s");
result.add("ver-\ttex", "v @r\tt e k s");
result.add("ver-\tti-\tcal", "v @r\tt I\tk V l");
result.add("ver-\tti-\tgo", "v @r\tt I\tg @U");
result.add("ver-\ttical-\tly", "v @r\tt I k\tl i:");
result.add("ver-\ttrees", "v @r t\tr i: z");
result.add("ver-\twoerd", "v @r\tw O@ d");
result.add("verb", "v @r b");
result.add("verbs", "v @r b z");
result.add("vere", "v I@");
result.add("verge", "v @r dZ");
result.add("vern", "v @r n");
result.add("verne", "v @r n");
result.add("verse", "v @r s");
result.add("versed", "v @r s t");
result.add("vert", "v @r t");
result.add("verve", "v @r v");
result.add("ves-\tpa", "v eI s\tp V");
result.add("ves-\tper", "v e s\tp @r");
result.add("ves-\tsel", "v e\ts V l");
result.add("ves-\tsels", "v e\ts V l z");
result.add("ves-\tsel's", "v e\ts V l z");
result.add("ves-\tta", "v e s\tt V");
result.add("ves-\ttal", "v e s\tt V l");
result.add("ves-\tted", "v e s\tt V d");
result.add("ves-\tter", "v e s\tt @r");
result.add("ves-\tti-\tbule", "v e s\tt I b\tj u: l");
result.add("ves-\tti-\tges", "v e s\tt I\tdZ V z");
result.add("ves-\tti-\tgi-\tal", "v V s\tt I\tdZ i:\tV l");
result.add("ves-\ttige", "v e s\tt I dZ");
result.add("ves-\tting", "v e s\tt I N");
result.add("vest", "v e s t");
result.add("vests", "v e s t s");
result.add("vet", "v e t");
result.add("vet-\tted", "v e\tt V d");
result.add("vet-\tter", "v e\tt @r");
result.add("vet-\tting", "v e\tt I N");
result.add("vete-\tri-\tna-\tri-\tan", "v e t\tr I\tn e@\ti:\tV n");
result.add("vete-\tri-\tna-\tri-\tans", "v e t\tr I\tn e@\ti:\tV n z");
result.add("vete-\tri-\tna-\try", "v e t\tr I\tn e@\ti:");
result.add("vets", "v e t s");
result.add("veuve", "v j u: v");
result.add("vex", "v e k s");
result.add("vexed", "v e k s t");
result.add("vey", "v eI");
result.add("vi", "v aI");
result.add("vi-\ta", "v aI\tV");
result.add("vi-\ta-\tbi-\tli-\tty", "v aI\tV\tb I\tl V\tt i:");
result.add("vi-\ta-\tble", "v aI\tV\tb V l");
result.add("vi-\ta-\tcom", "v aI\tV\tk Q m");
result.add("vi-\ta-\tcom's", "v aI\tV\tk Q m z");
result.add("vi-\ta-\tduct", "v aI\tV\td V k t");
result.add("vi-\ta-\tducts", "v aI\tV\td V k t s");
result.add("vi-\ta-\tti-\tcal", "v aI\t{\tt I\tk V l");
result.add("vi-\ta-\ttor", "v aI\teI\tt @r");
result.add("vi-\tal", "v aI\tV l");
result.add("vi-\tals", "v aI\tV l z");
result.add("vi-\tan", "v i:\tV n");
result.add("vi-\tbhu", "v i:\tb u:");
result.add("vi-\tbra-\tting", "v aI b\tr eI\tt I N");
result.add("vi-\tbra-\ttion", "v aI b\tr eI\tS V n");
result.add("vi-\tbra-\ttions", "v aI b\tr eI\tS V n z");
result.add("vi-\tbra-\tto", "v i: b\tr Q\tt @U");
result.add("vi-\tbra-\ttor", "v aI b\tr eI\tt @r");
result.add("vi-\tbran-\tcy", "v aI b\tr V n\ts i:");
result.add("vi-\tbrant", "v aI b\tr V n t");
result.add("vi-\tbrate", "v aI b\tr eI t");
result.add("vi-\tbrates", "v aI b\tr eI t s");
result.add("vi-\tca-\tri-\tous", "v aI\tk e@\ti:\tV s");
result.add("vi-\tca-\tri-\tous-\tly", "v aI\tk e@\ti:\tV s\tl i:");
result.add("vi-\tca-\try", "v I\tk @r\ti:");
result.add("vi-\tcar", "v I\tk @r");
result.add("vi-\tcars", "v I\tk @r z");
result.add("vi-\tcen-\tte", "v i:\ttS e n\tt i:");
result.add("vi-\tces", "v aI\ts V z");
result.add("vi-\tchy", "v i:\tS i:");
result.add("vi-\tci-\tni-\tty", "v V\ts I\tn V\tt i:");
result.add("vi-\tcious", "v I\tS V s");
result.add("vi-\tcious-\tly", "v I\tS V s\tl i:");
result.add("vi-\tcious-\tness", "v I\tS V s\tn e s");
result.add("vi-\tcis-\tsi-\ttude", "v I\ts I\ts I\tt u: d");
result.add("vi-\tcis-\tsi-\ttudes", "v I\ts I\ts I\tt u: d z");
result.add("vi-\tcom-\tte", "v I\tk Q m\tt i:");
result.add("vi-\tcu-\tna", "v I k\tj u:\tn V");
result.add("vi-\tda", "v aI\td V");
result.add("vi-\tda-\tlia", "v V\td eI l\tj V");
result.add("vi-\tdal", "v aI\td { l");
result.add("vi-\tde-\to", "v I\td i:\t@U");
result.add("vi-\tde-\to-\tcas-\tsette", "v I\td i:\t@U\tk {\ts e t");
result.add("vi-\tde-\to-\tcas-\tsettes", "v I\td i:\t@U\tk {\ts e t s");
result.add("vi-\tde-\to-\tconfe-\tren-\tcing", "v i:\td i:\t@U\tk Q n\tf r V n\ts I N");
result.add("vi-\tde-\to-\tconfe-\trence", "v i:\td i:\t@U\tk Q n\tf r V n s");
result.add("vi-\tde-\to-\tdisk", "v I\td i:\t@U\td I s k");
result.add("vi-\tde-\to-\tdisks", "v I\td i:\t@U\td I s k s");
result.add("vi-\tde-\to-\tgra-\tpher", "v V\td i:\tO: g\tr V\tf @r");
result.add("vi-\tde-\to-\tphone", "v I\td i:\t@U\tf @U n");
result.add("vi-\tde-\to-\tta-\tping", "v I\td i:\t@U\tt eI\tp I N");
result.add("vi-\tde-\to-\ttape", "v I\td i:\t@U\tt eI p");
result.add("vi-\tde-\to-\ttaped", "v I\td i:\t@U\tt eI p t");
result.add("vi-\tde-\to-\ttapes", "v I\td i:\t@U\tt eI p s");
result.add("vi-\tde-\to-\ttex", "v I\td i:\t@U\tt e k s");
result.add("vi-\tde-\to-\ttext", "v I\td i:\t@U\tt e k s t");
result.add("vi-\tde-\tos", "v I\td i:\t@U z");
result.add("vi-\tde-\to's", "v I\td i:\t@U z");
result.add("vi-\tdo-\tni-\ta", "v i:\td @U\tn i:\tV");
result.add("vi-\tdor", "v i:\td O@");
result.add("vi-\ten-\tna", "v i:\te\tn V");
result.add("vi-\ten-\tna's", "v i:\te\tn V z");
result.add("vi-\ten-\tnese", "v i:\te\tn i: s");
result.add("vi-\tet", "v i:\te t");
result.add("vi-\tet-\tcong", "v i:\te t\tk O: N");
result.add("vi-\tet-\tna-\tmese", "v i:\te t\tn Q\tm i: s");
result.add("vi-\tet-\tnam", "v i:\te t\tn Q m");
result.add("vi-\tet-\tnam's", "v i:\te t\tn Q m z");
result.add("vi-\tgen", "v I\tg V n");
result.add("vi-\tgi-\tlan-\tte", "v I\tdZ I\tl { n\tt i:");
result.add("vi-\tgi-\tlan-\ttes", "v I\tdZ I\tl { n\tt i: z");
result.add("vi-\tgi-\tlan-\tti-\tsm", "v I\tdZ I\tl { n\tt I\tz V m");
result.add("vi-\tgi-\tlance", "v I\tdZ I\tl V n s");
result.add("vi-\tgi-\tlant", "v I\tdZ I\tl V n t");
result.add("vi-\tgil", "v I\tdZ I l");
result.add("vi-\tgils", "v I\tdZ I l z");
result.add("vi-\tgo", "v i:\tg @U");
result.add("vi-\tgo-\trous", "v I\tg @r\tV s");
result.add("vi-\tgo-\trous-\tly", "v I\tg @r\tV s\tl i:");
result.add("vi-\tgor", "v I\tg @r");
result.add("vi-\tgue-\trie", "v I\tg @r\ti:");
result.add("vi-\tking", "v aI\tk I N");
result.add("vi-\tkings", "v aI\tk I N z");
result.add("vi-\tking's", "v aI\tk I N z");
result.add("vi-\tla", "v i:\tl V");
result.add("vi-\tlas", "v i:\tl Q z");
result.add("vi-\tli-\tfi-\tca-\ttion", "v I\tl I\tf I\tk eI\tS V n");
result.add("vi-\tli-\tfied", "v I\tl I\tf aI d");
result.add("vi-\tli-\tfy", "v I\tl I\tf aI");
result.add("vi-\tna", "v i:\tn V");
result.add("vi-\tnal", "v aI\tn V l");
result.add("vi-\tne-\tgar", "v I\tn V\tg @r");
result.add("vi-\tne-\tgars", "v I\tn I\tg @r z");
result.add("vi-\tner", "v aI\tn @r");
result.add("vi-\tnet", "v I\tn e t");
result.add("vi-\tni-\tta", "v i:\tn i:\tt V");
result.add("vi-\tning", "v aI\tn I N");
result.add("vi-\tning's", "v aI\tn I N z");
result.add("vi-\tnyl", "v aI\tn V l");
result.add("vi-\to-\tla", "v aI\t@U\tl V");
result.add("vi-\to-\tla-\tted", "v aI\tV\tl eI\tt V d");
result.add("vi-\to-\tla-\tting", "v aI\tV\tl eI\tt I N");
result.add("vi-\to-\tla-\ttion", "v aI\tV\tl eI\tS V n");
result.add("vi-\to-\tla-\ttions", "v aI\tV\tl eI\tS V n z");
result.add("vi-\to-\tla-\ttor", "v aI\tV\tl eI\tt @r");
result.add("vi-\to-\tla-\ttors", "v aI\tV\tl eI\tt @r z");
result.add("vi-\to-\tlan-\tte", "v i:\t@U\tl Q n\tt i:");
result.add("vi-\to-\tlas", "v i:\t@U\tl V z");
result.add("vi-\to-\tlate", "v aI\tV\tl eI t");
result.add("vi-\to-\tlates", "v aI\tV\tl eI t s");
result.add("vi-\to-\tle-\tta", "v i:\t@U\tl e\tt V");
result.add("vi-\to-\tlence", "v aI\tV\tl V n s");
result.add("vi-\to-\tlent", "v aI\tV\tl V n t");
result.add("vi-\to-\tlent-\tly", "v aI\tV\tl V n\tt l i:");
result.add("vi-\to-\tlet", "v aI\tV\tl V t");
result.add("vi-\to-\tlet-\tta", "v i:\t@U\tl e\tt V");
result.add("vi-\to-\tlets", "v aI\tV\tl V t s");
result.add("vi-\to-\tlette", "v i:\t@U\tl e t");
result.add("vi-\to-\tli-\tnist", "v aI\tV\tl I\tn V s t");
result.add("vi-\to-\tli-\tnists", "v aI\tV\tl I\tn V s t s");
result.add("vi-\to-\tlin", "v aI\tV\tl I n");
result.add("vi-\to-\tlins", "v aI\tV\tl I n z");
result.add("vi-\to-\tlist", "v i:\t@U\tl I s t");
result.add("vi-\tole", "v aI\t@U l");
result.add("vi-\tper", "v aI\tp @r");
result.add("vi-\tpers", "v aI\tp @r z");
result.add("vi-\tpul", "v i:\tp u: l");
result.add("vi-\tra-\tgo", "v I@\tV\tg @U");
result.add("vi-\tral", "v aI\tr V l");
result.add("vi-\tren", "v I@\tV n");
result.add("vi-\tri-\tdis", "v O@\tI\td I s");
result.add("vi-\tri-\tli-\tty", "v @r\tI\tl I\tt i:");
result.add("vi-\trile", "v I@\tI l");
result.add("vi-\tro-\tlo-\tgi-\tcal", "v aI\tr V\tl Q\tdZ I\tk V l");
result.add("vi-\tro-\tlo-\tgist", "v I@\tQ\tl V\tdZ V s t");
result.add("vi-\tro-\tlo-\tgists", "v I@\tQ\tl V\tdZ V s t s");
result.add("vi-\tro-\tlo-\tgy", "v I@\tQ\tl V\tdZ i:");
result.add("vi-\tru-\tlence", "v I@\tV\tl V n s");
result.add("vi-\tru-\tlent", "v I@\tV\tl V n t");
result.add("vi-\tru-\tlent-\tly", "v I@\tV\tl V n\tt l i:");
result.add("vi-\tru-\tses", "v aI\tr V\ts V z");
result.add("vi-\tru-\ts's", "v aI\tr V\ts V z");
result.add("vi-\trus", "v aI\tr V s");
result.add("vi-\tsa", "v i:\tz V");
result.add("vi-\tsage", "v I\tz V dZ");
result.add("vi-\tsas", "v i:\tz V z");
result.add("vi-\tsa's", "v i:\tz V z");
result.add("vi-\tsi-\tbi-\tli-\tty", "v I\tz I\tb I\tl I\tt i:");
result.add("vi-\tsi-\tble", "v I\tz I\tb V l");
result.add("vi-\tsi-\tgoth", "v I\tz I\tg Q T");
result.add("vi-\tsi-\tgoths", "v I\tz I\tg Q T s");
result.add("vi-\tsi-\tta-\ttion", "v I\tz I\tt eI\tS V n");
result.add("vi-\tsi-\tta-\ttions", "v I\tz I\tt eI\tS V n z");
result.add("vi-\tsi-\tted", "v I\tz I\tt I d");
result.add("vi-\tsi-\tting", "v I\tz I\tt I N");
result.add("vi-\tsi-\ttor", "v I\tz I\tt @r");
result.add("vi-\tsi-\ttors", "v I\tz I\tt @r z");
result.add("vi-\tsi-\ttor's", "v I\tz I\tt @r z");
result.add("vi-\tsib-\tly", "v I\tz I b\tl i:");
result.add("vi-\tsio-\tna-\tries", "v I\tZ V\tn e@\ti: z");
result.add("vi-\tsio-\tna-\try", "v I\tZ V\tn e@\ti:");
result.add("vi-\tsion", "v I\tZ V n");
result.add("vi-\tsions", "v I\tZ V n z");
result.add("vi-\tsion's", "v I\tZ V n z");
result.add("vi-\tsit", "v I\tz I t");
result.add("vi-\tsits", "v I\tz I t s");
result.add("vi-\tsor", "v I\tz @r");
result.add("vi-\tsors", "v I\tz @r z");
result.add("vi-\tsu-\tal", "v I\tZ V\tw V l");
result.add("vi-\tsua-\tli-\tza-\ttion", "v I Z\tw V\tl V\tz eI\tS V n");
result.add("vi-\tsua-\tli-\tzing", "v I Z\tw V\tl aI\tz I N");
result.add("vi-\tsua-\tlize", "v I Z\tw V\tl aI z");
result.add("vi-\tsua-\tlized", "v I Z\tw V\tl aI z d");
result.add("vi-\tsual-\tly", "v I Z\tw V\tl i:");
result.add("vi-\tsuals", "v I Z\tw V l z");
result.add("vi-\tta", "v aI\tt V");
result.add("vi-\tta-\tle", "v V\tt {\tl i:");
result.add("vi-\tta-\tli-\tty", "v aI\tt {\tl I\tt i:");
result.add("vi-\tta-\tmin", "v aI\tt V\tm V n");
result.add("vi-\tta-\tmins", "v aI\tt V\tm V n z");
result.add("vi-\ttae", "v aI\tt V");
result.add("vi-\ttal", "v aI\tt V l");
result.add("vi-\ttal-\tly", "v aI\tt V\tl i:");
result.add("vi-\ttek", "v I\tt e k");
result.add("vi-\ttel-\tli", "v V\tt e\tl i:");
result.add("vi-\tti", "v i:\tt i:");
result.add("vi-\tti-\tli-\tgo", "v i:\tt I\tl I\tg @U");
result.add("vi-\ttia", "v i:\tS V");
result.add("vi-\tto", "v i:\tt @U");
result.add("vi-\ttu-\tpe-\tra-\ttive", "v aI\tt u:\tp @r\tV\tt I v");
result.add("vi-\tva", "v i:\tv V");
result.add("vi-\tva-\tcious", "v V\tv eI\tS V s");
result.add("vi-\tval-\tdi", "v I\tv Q l\td i:");
result.add("vi-\tvas", "v i:\tv V z");
result.add("vi-\tven-\tdi", "v I\tv e n\td i:");
result.add("vi-\tvi-\ta-\tna", "v I\tv i:\t{\tn V");
result.add("vi-\tvi-\tan", "v I\tv i:\tV n");
result.add("vi-\tvi-\ten", "v I\tv i:\tV n");
result.add("vi-\tvi-\tenne", "v I\tv i:\tV n");
result.add("vi-\tvi-\tpa-\trous", "v aI\tv I\tp @r\tV s");
result.add("vi-\tvi-\tse-\tpul-\tture", "v I\tv i:\ts e\tp V l\ttS @r");
result.add("vi-\tvid", "v I\tv I d");
result.add("vi-\tvid-\tly", "v I\tv I d\tl i:");
result.add("vi-\tvid-\tness", "v I\tv I d\tn e s");
result.add("vi-\tvie", "v I\tv i:");
result.add("vi-\tvo", "v i:\tv @U");
result.add("vi-\tvyan", "v i: v\tj Q n");
result.add("vi-\txen", "v I k\ts I n");
result.add("vi-\tyel-\tla", "v I\tj e\tl V");
result.add("vibe", "v aI b");
result.add("vibes", "v aI b z");
result.add("vic", "v I k");
result.add("vic-\tke-\try", "v I s\tk @r\ti:");
result.add("vic-\tkers", "v I\tk @r z");
result.add("vic-\tkey", "v I\tk i:");
result.add("vic-\tki", "v I\tk i:");
result.add("vic-\tkie", "v I\tk i:");
result.add("vic-\tky", "v I\tk i:");
result.add("vic-\tky's", "v I\tk i: z");
result.add("vic-\tti-\tmi-\tza-\ttion", "v I k\tt I\tm I\tz eI\tS V n");
result.add("vic-\tti-\tmi-\tzing", "v I k\tt I\tm aI\tz I N");
result.add("vic-\tti-\tmize", "v I k\tt I\tm aI z");
result.add("vic-\tti-\tmized", "v I k\tt I\tm aI z d");
result.add("vic-\ttim", "v I k\tt I m");
result.add("vic-\ttim-\thood", "v I k\tt I m\th U d");
result.add("vic-\ttim-\tless", "v I k\tt I m\tl e s");
result.add("vic-\ttims", "v I k\tt I m z");
result.add("vic-\ttim's", "v I k\tt I m z");
result.add("vic-\tto-\tri-\ta", "v I k\tt O@\ti:\tV");
result.add("vic-\tto-\tri-\tan", "v I k\tt O@\ti:\tV n");
result.add("vic-\tto-\tri-\tans", "v I k\tt O@\ti:\tV n z");
result.add("vic-\tto-\tri-\tas", "v I k\tt O@\ti:\tV z");
result.add("vic-\tto-\tri-\ta's", "v I k\tt O@\ti:\tV z");
result.add("vic-\tto-\tri-\tne", "v i: k\tt O@\ti:\tn i:");
result.add("vic-\tto-\tri-\tous", "v I k\tt O@\ti:\tV s");
result.add("vic-\tto-\tries", "v I k\tt @r\ti: z");
result.add("vic-\tto-\try", "v I k\tt @r\ti:");
result.add("vic-\ttoire", "v I k\tt w Q@");
result.add("vic-\ttor", "v I k\tt @r");
result.add("vic-\ttors", "v I k\tt @r z");
result.add("vic-\ttor's", "v I k\tt @r z");
result.add("vice", "v aI s");
result.add("vice-\tpre-\tsi-\tden-\ttial", "v aI s\tp r e\tz I\td e n\ttS V l");
result.add("vice-\tpre-\tsi-\tdent", "v aI s\tp r e\tz I\td e n t");
result.add("vice-\tpre-\tsi-\tdents", "v aI s\tp r e\tz I\td e n t s");
result.add("vice-\troy", "v aI s\tr OI");
result.add("vick", "v I k");
result.add("vicks-\tburg", "v I k\ts b @r g");
result.add("vic's", "v I k s");
result.add("vide", "v aI d");
result.add("vie", "v aI");
result.add("vie-\treck", "v I@\tI k");
result.add("vie-\twer", "v j u:\t@r");
result.add("vie-\twer-\tship", "v j u:\t@r\tS I p");
result.add("vie-\twers", "v j u:\t@r z");
result.add("vie-\twer's", "v j u:\t@r z");
result.add("vie-\twing", "v j u:\tI N");
result.add("vied", "v aI d");
result.add("viens", "v i: n z");
result.add("vier-\tling", "v I@\tl I N");
result.add("vier-\ttel", "v I@\tt e l");
result.add("viers", "v I@ z");
result.add("vies", "v aI z");
result.add("view", "v j u:");
result.add("view-\tfin-\tder", "v j u:\tf aI n\td @r");
result.add("view-\tpoint", "v j u:\tp OI n t");
result.add("view-\tpoints", "v j u:\tp OI n t s");
result.add("viewed", "v j u: d");
result.add("views", "v j u: z");
result.add("vig", "v I g");
result.add("vig-\tli-\to-\tne", "v I g\tl i:\t@U\tn i:");
result.add("vig-\tna", "v I g\tn V");
result.add("vig-\tnette", "v I n\tj e t");
result.add("vig-\tnettes", "v I n\tj e t s");
result.add("vig-\tno-\tla", "v i: g\tn @U\tl V");
result.add("vil-\tla", "v I\tl V");
result.add("vil-\tla-\tger", "v I\tl I\tdZ @r");
result.add("vil-\tla-\tgers", "v I\tl I\tdZ @r z");
result.add("vil-\tla-\tges", "v I\tl I\tdZ V z");
result.add("vil-\tla-\tge's", "v I\tl I\tdZ V z");
result.add("vil-\tla-\tno-\tva", "v I\tl V\tn @U\tv V");
result.add("vil-\tla-\tno-\tvan", "v I\tl V\tn @U\tv V n");
result.add("vil-\tla-\tnue-\tva", "v i:\tl Q n\tw e\tv V");
result.add("vil-\tla-\tri", "v i:\tl Q@\ti:");
result.add("vil-\tla-\tvi-\tcen-\tci-\to", "v I\tl V\tv I\ts e n\ts i:\t@U");
result.add("vil-\tlage", "v I\tl I dZ");
result.add("vil-\tlai-\tnous", "v I\tl I\tn V s");
result.add("vil-\tlain", "v I\tl I n");
result.add("vil-\tlains", "v I\tl I n z");
result.add("vil-\tlal-\tba", "v i:\tl Q l\tb V");
result.add("vil-\tlar", "v I\tl @r");
result.add("vil-\tlar-\treal", "v i:\tl Q@\ti: l");
result.add("vil-\tlard", "v I\tl @r d");
result.add("vil-\tlars", "v I\tl @r z");
result.add("vil-\tlas", "v I\tl V z");
result.add("vil-\tla's", "v I\tl V z");
result.add("vil-\tle-\tneuve", "v I\tl V\tn u: v");
result.add("vil-\tlette", "v V\tl e t");
result.add("vil-\tli", "v I\tl i:");
result.add("vil-\tliers", "v I l\tj @r z");
result.add("vil-\tma", "v I l\tm V");
result.add("vil-\tni-\tus", "v I l\tn i:\tV s");
result.add("vile", "v aI l");
result.add("ville", "v I l");
result.add("vim", "v I m");
result.add("vin", "v I n");
result.add("vin-\tca", "v I N\tk V");
result.add("vin-\tce-\tlette", "v I n\ts V\tl e t");
result.add("vin-\tcen-\tnes", "v I n\ts e\tn V s");
result.add("vin-\tcen-\ttia", "v i: n\ttS e n\tS V");
result.add("vin-\tcen-\tzo", "v I n\ts e n\tz @U");
result.add("vin-\tcent", "v I n\ts V n t");
result.add("vin-\tcent's", "v I n\ts V n t s");
result.add("vin-\tce's", "v I n\ts V s");
result.add("vin-\tci", "v I n\ts i:");
result.add("vin-\tci's", "v I n\ts i: z");
result.add("vin-\tdi-\tca-\tted", "v I n\td I\tk eI\tt I d");
result.add("vin-\tdi-\tca-\ttion", "v I n\td I\tk eI\tS V n");
result.add("vin-\tdi-\tca-\ttor", "v I n\td I\tk eI\tt @r");
result.add("vin-\tdi-\tcate", "v I n\td I\tk eI t");
result.add("vin-\tdi-\tcates", "v I n\td I\tk eI t s");
result.add("vin-\tdic-\ttive", "v I n\td I k\tt I v");
result.add("vin-\tdic-\ttive-\tness", "v I n\td I k\tt I v\tn e s");
result.add("vin-\tnie", "v I\tn i:");
result.add("vin-\tny", "v I\tn i:");
result.add("vin-\tson", "v I n\ts V n");
result.add("vin-\tta-\tges", "v I n\tt I\tdZ V z");
result.add("vin-\ttage", "v I n\tt I dZ");
result.add("vin-\tton", "v I n\tt V n");
result.add("vince", "v I n s");
result.add("vine", "v aI n");
result.add("vine-\tland", "v aI n\tl V n d");
result.add("vine-\tyard", "v I n\tj @r d");
result.add("vine-\tyards", "v I n\tj @r d z");
result.add("vines", "v aI n z");
result.add("vint", "v I n t");
result.add("vint-\tner", "v I n\tt n @r");
result.add("vint-\tners", "v I n\tt n @r z");
result.add("vir-\tden", "v @r\td V n");
result.add("vir-\tga", "v @r\tg V");
result.add("vir-\tgi-\tli-\to", "v @r\tdZ I\tl i:\t@U");
result.add("vir-\tgi-\tnal", "v @r\tdZ I\tn V l");
result.add("vir-\tgi-\tni-\tty", "v @r\tdZ I\tn I\tt i:");
result.add("vir-\tgi-\tnia", "v @r\tdZ I n\tj V");
result.add("vir-\tgi-\tnian", "v @r\tdZ I n\tj V n");
result.add("vir-\tgi-\tnians", "v @r\tdZ I n\tj V n z");
result.add("vir-\tgi-\tnia's", "v @r\tdZ I n\tj V z");
result.add("vir-\tgie", "v @r\tg i:");
result.add("vir-\tgil", "v @r\tdZ I l");
result.add("vir-\tgin", "v @r\tdZ I n");
result.add("vir-\tgins", "v @r\tdZ I n z");
result.add("vir-\tgin's", "v @r\tdZ I n z");
result.add("vir-\tgo", "v @r\tg @U");
result.add("vir-\tgy", "v @r\tdZ i:");
result.add("vir-\ttu-\tal", "v @r\ttS u:\tV l");
result.add("vir-\ttu-\tal-\tly", "v @r\ttS u:\tV\tl i:");
result.add("vir-\ttu-\to-\tsi-\tty", "v @r\ttS u:\tQ\ts I\tt i:");
result.add("vir-\ttu-\to-\tso", "v @r\ttS u:\t@U\ts @U");
result.add("vir-\ttu-\tous", "v @r\ttS u:\tV s");
result.add("vir-\ttue", "v @r\ttS u:");
result.add("vir-\ttues", "v @r\ttS u: z");
result.add("vires", "v aI r z");
result.add("virge", "v @r dZ");
result.add("vis", "v I s");
result.add("vis-\tcar-\tdi", "v i: s\tk Q@\td i:");
result.add("vis-\tce-\tral", "v I\ts @r\tV l");
result.add("vis-\tce-\tral-\tly", "v I\ts @r\tV\tl i:");
result.add("vis-\tco-\tsi-\tty", "v I s\tk Q\ts I\tt i:");
result.add("vis-\tcon-\tti", "v i: s\tk @U n\tt i:");
result.add("vis-\tcous", "v I s\tk V s");
result.add("vis-\tta", "v I s\tt V");
result.add("vis-\ttas", "v I s\tt V z");
result.add("vis-\tta's", "v I s\tt V z");
result.add("vise", "v aI s");
result.add("vit-\tre-\tous", "v I t\tr i:\tV s");
result.add("vit-\tri-\to-\tlic", "v I t\tr i:\tQ\tl I k");
result.add("vit-\tri-\tol", "v I t\tr i:\tV l");
result.add("vit-\tric", "v I t\tr I k");
result.add("vit-\tro", "v I t\tr @U");
result.add("vit-\tru-\tvi-\tus", "v V t\tr u:\tv i:\tV s");
result.add("vit-\try", "v I t\tr i:");
result.add("vit-\ttle", "v I\tt V l");
result.add("vit-\ttles", "v I\tt V l z");
result.add("vit-\tto-\tri-\ta", "v I\tt O@\ti:\tV");
result.add("vit-\tto-\tri-\to", "v i:\tt O@\ti:\t@U");
result.add("viv", "v I v");
result.add("vive", "v i: v");
result.add("vives", "v aI v z");
result.add("viz-\tca-\tya", "v I z\tk aI\tV");
result.add("vla-\tdi-\tmir", "v l {\td I\tm I@");
result.add("vla-\tdi-\tvos-\ttok", "v l {\td I\tv O: s\tt Q k");
result.add("vla-\tsic", "v l {\tz I k");
result.add("vlach", "v l { tS");
result.add("vlad", "v l { d");
result.add("vlad's", "v l { d z");
result.add("vo", "v @U");
result.add("vo-\tbis", "v @U\tb I s");
result.add("vo-\tca-\tbu-\tla-\try", "v @U\tk { b\tj V\tl e@\ti:");
result.add("vo-\tca-\tlist", "v @U\tk V\tl V s t");
result.add("vo-\tca-\ttio-\tnal", "v @U\tk eI\tS V\tn V l");
result.add("vo-\tca-\ttion", "v @U\tk eI\tS V n");
result.add("vo-\tca-\ttions", "v @U\tk eI\tS V n z");
result.add("vo-\tcal", "v @U\tk V l");
result.add("vo-\tcal-\tly", "v @U\tk V\tl i:");
result.add("vo-\tcals", "v @U\tk V l z");
result.add("vo-\tci-\tfe-\trous", "v @U\ts I\tf @r\tV s");
result.add("vo-\tci-\tfe-\trous-\tly", "v V\ts I\tf @r\tV s\tl i:");
result.add("vo-\tda-\tfone", "v @U\td V\tf @U n");
result.add("vo-\tgel", "v @U\tg V l");
result.add("vo-\tla-\tti-\tli-\tty", "v Q\tl V\tt I\tl V\tt i:");
result.add("vo-\tla-\ttile", "v Q\tl V\tt V l");
result.add("vo-\tlan-\tte", "v @U\tl Q n\tt eI");
result.add("vo-\tland", "v Q\tl V n d");
result.add("vo-\tle-\tta", "v @U\tl e\tt V");
result.add("vo-\tli-\ttion", "v @U\tl I\tS V n");
result.add("vo-\tlin", "v @U\tl I n");
result.add("vo-\tlu-\tble", "v Q l\tj V\tb V l");
result.add("vo-\tlu-\tmi-\tnous", "v V\tl u:\tm V\tn V s");
result.add("vo-\tlume", "v Q l\tj u: m");
result.add("vo-\tlumes", "v Q l\tj u: m z");
result.add("vo-\tlume's", "v Q l\tj V m z");
result.add("vo-\tlun-\tta-\tri-\tly", "v Q\tl V n\tt e@\tV\tl i:");
result.add("vo-\tlun-\tta-\tri-\tsm", "v Q\tl V n\tt @r\tI\tz V m");
result.add("vo-\tlun-\tta-\try", "v Q\tl V n\tt e@\ti:");
result.add("vo-\tlun-\ttee-\tri-\tsm", "v O:\tl V n\tt I@\tI\tz V m");
result.add("vo-\tlun-\ttee-\tring", "v O:\tl V n\tt I@\tI N");
result.add("vo-\tlun-\tteer", "v Q\tl V n\tt I@");
result.add("vo-\tlun-\tteered", "v Q\tl V n\tt I@ d");
result.add("vo-\tlun-\tteers", "v Q\tl V n\tt I@ z");
result.add("vo-\tlup-\ttu-\tous", "v V\tl V p\ttS V\tw V s");
result.add("vo-\tmi-\tting", "v Q\tm I\tt I N");
result.add("vo-\tmit", "v Q\tm I t");
result.add("vo-\tna", "v @U\tn V");
result.add("vo-\tra-\tci-\tty", "v @r\t{\ts I\tt i:");
result.add("vo-\tra-\tcious", "v O@\teI\tS V s");
result.add("vo-\ttaw", "v @U\tt O:");
result.add("vo-\tted", "v @U\tt V d");
result.add("vo-\tter", "v @U\tt @r");
result.add("vo-\tters", "v @U\tt @r z");
result.add("vo-\tter's", "v @U\tt @r z");
result.add("vo-\tting", "v @U\tt I N");
result.add("vo-\twel", "v aU\tV l");
result.add("vo-\twels", "v aU\tV l z");
result.add("vo-\twing", "v aU\tI N");
result.add("vo-\tya-\tger", "v OI\tV\tdZ @r");
result.add("vo-\tya-\tgers", "v OI\tI\tdZ @r z");
result.add("vo-\tya-\tger's", "v OI\tI\tdZ @r z");
result.add("vo-\tya-\tges", "v OI\tV\tdZ V z");
result.add("vo-\tyage", "v OI\tV dZ");
result.add("vo-\tyaged", "v OI\tV dZ d");
result.add("vo-\tyeu-\tri-\tsm", "v OI\tj u:\tr I\tz V m");
result.add("vo-\tyeu-\tris-\ttic", "v OI\tj V\tr I s\tt I k");
result.add("vo-\tyeur", "v OI\tj u: r");
result.add("vod-\tka", "v Q d\tk V");
result.add("vod-\tkas", "v Q d\tk V z");
result.add("vogt", "v @U t");
result.add("vogue", "v @U g");
result.add("voi-\tces", "v OI\ts V z");
result.add("voi-\tce's", "v OI\ts V z");
result.add("voi-\tcing", "v OI\ts I N");
result.add("voi-\tded", "v OI\td V d");
result.add("voi-\tding", "v OI\td I N");
result.add("voi-\tla", "v w Q\tl Q");
result.add("voice", "v OI s");
result.add("voice-\tless", "v OI s\tl V s");
result.add("voice-\to-\tver", "v OI\ts @U\tv @r");
result.add("voiced", "v OI s t");
result.add("void", "v OI d");
result.add("voids", "v OI d z");
result.add("voiles", "v OI l z");
result.add("voir", "v w Q@");
result.add("vol-\tca-\tnic", "v Q l\tk {\tn I k");
result.add("vol-\tca-\tnical-\tly", "v Q l\tk {\tn I k\tl i:");
result.add("vol-\tca-\tno", "v Q l\tk eI\tn @U");
result.add("vol-\tca-\tnoes", "v Q l\tk eI\tn @U z");
result.add("vol-\tca-\tnos", "v Q l\tk eI\tn @U z");
result.add("vol-\tca-\tno's", "v Q l\tk eI\tn @U z");
result.add("vol-\tga", "v Q l\tg V");
result.add("vol-\tgog-\trad", "v @U l\tg @U g\tr { d");
result.add("vol-\tley", "v Q\tl i:");
result.add("vol-\tley-\tball", "v Q\tl i:\tb O: l");
result.add("vol-\tleys", "v Q\tl i: z");
result.add("vol-\tney", "v @U l\tn i:");
result.add("vol-\tta", "v @U l\tt V");
result.add("vol-\tta-\tges", "v @U l\tt V\tdZ V z");
result.add("vol-\tta-\tge's", "v @U l\tt I\tdZ V z");
result.add("vol-\tta-\tren", "v @U l\tt @r\tV n");
result.add("vol-\ttage", "v @U l\tt V dZ");
result.add("vol-\ttaire", "v @U l\tt e@");
result.add("vol-\tvo", "v @U l\tv @U");
result.add("vol-\tvo's", "v @U l\tv @U z");
result.add("vol-\tvox", "v Q l\tv Q k s");
result.add("volc-\tker", "v @U l\tk @r");
result.add("volc-\tker's", "v @U l\tk @r z");
result.add("voles", "v @U l z");
result.add("volk", "v @U l k");
result.add("volks-\twa-\tgen", "v @U l\tk s w {\tg V n");
result.add("volks-\twa-\tgens", "v @U l\tk s w {\tg V n z");
result.add("volks-\twa-\tgen's", "v @U l\tk s w {\tg V n z");
result.add("volpe", "v @U l p");
result.add("volt", "v @U l t");
result.add("volts", "v @U l t s");
result.add("voltz", "v @U l t s");
result.add("von", "v O: n");
result.add("von-\tne-\tgut", "v Q\tn V\tg V t");
result.add("von-\tnie", "v Q\tn i:");
result.add("von-\tny", "v Q\tn i:");
result.add("voo-\tdoo", "v u:\td u:");
result.add("voor-\this", "v U@\th I s");
result.add("vor-\ttex", "v O@\tt e k s");
result.add("vos", "v Q s");
result.add("voss", "v O: s");
result.add("vote", "v @U t");
result.add("votes", "v @U t s");
result.add("vote's", "v @U t s");
result.add("vou-\tcher", "v aU\ttS @r");
result.add("vou-\tchers", "v aU\ttS @r z");
result.add("vou-\tching", "v aU\ttS I N");
result.add("vouch", "v aU tS");
result.add("vouched", "v aU tS t");
result.add("vought", "v O: t");
result.add("vow", "v aU");
result.add("vowed", "v aU d");
result.add("vows", "v aU z");
result.add("vox", "v Q k s");
result.add("vree-\tland", "v r i:\tl V n d");
result.add("vries", "v r i: z");
result.add("vroom", "v r u: m");
result.add("v's", "v i: z");
result.add("vu", "v u:");
result.add("vue", "v j u:");
result.add("vuit-\tton", "v u:\tt V n");
result.add("vul-\tcan", "v V l\tk V n");
result.add("vul-\tcans", "v V l\tk V n z");
result.add("vul-\tcan's", "v V l\tk V n z");
result.add("vul-\tga-\tri-\tty", "v V l\tg e@\tV\tt i:");
result.add("vul-\tga-\tri-\tza-\ttion", "v V l\tg @r\tI\tz eI\tS V n");
result.add("vul-\tgar", "v V l\tg @r");
result.add("vul-\tlo", "v u:\tl @U");
result.add("vul-\tne-\tra-\tbi-\tli-\tties", "v V l\tn @r\tV\tb I\tl V\tt i: z");
result.add("vul-\tne-\tra-\tbi-\tli-\tty", "v V l\tn @r\tV\tb I\tl V\tt i:");
result.add("vul-\tne-\tra-\tble", "v V l\tn @r\tV\tb V l");
result.add("vul-\tture", "v V l\ttS @r");
result.add("vul-\ttures", "v V l\ttS @r z");
result.add("vy-\ting", "v aI\tI N");
result.add("wa", "w Q");
result.add("wa-\tba-\tsh's", "w O:\tb {\tS V z");
result.add("wa-\tbash", "w O:\tb { S");
result.add("wa-\tco", "w eI\tk @U");
result.add("wa-\tda", "w Q\td V");
result.add("wa-\tdas", "w Q\td V z");
result.add("wa-\tded", "w eI\td V d");
result.add("wa-\tder", "w eI\td @r");
result.add("wa-\tders", "w eI\td @r z");
result.add("wa-\tding", "w eI\td I N");
result.add("wa-\tfer", "w eI\tf @r");
result.add("wa-\tfers", "w eI\tf @r z");
result.add("wa-\tge-\tner", "w {\tg V\tn @r");
result.add("wa-\tge-\tring", "w eI\tdZ @r\tI N");
result.add("wa-\tger", "w eI\tdZ @r");
result.add("wa-\tgered", "w eI\tdZ @r d");
result.add("wa-\tgers", "w eI\tdZ @r z");
result.add("wa-\tges", "w eI\tdZ V z");
result.add("wa-\tging", "w eI\tdZ I N");
result.add("wa-\tgo-\tneer", "w {\tg V\tn I@");
result.add("wa-\tgo-\tneers", "w {\tg V\tn I@ z");
result.add("wa-\tgo-\tner", "w {\tg V\tn @r");
result.add("wa-\tgon", "w {\tg V n");
result.add("wa-\tgons", "w {\tg V n z");
result.add("wa-\thoo", "w V\th u:");
result.add("wa-\tken", "w eI\tk V n");
result.add("wa-\tking", "w eI\tk I N");
result.add("wa-\tle-\tsa", "w V\tl e\ts V");
result.add("wa-\tna-\tma-\tker", "w Q\tn V\tm eI\tk @r");
result.add("wa-\tner", "w eI\tn @r");
result.add("wa-\tning", "w eI\tn I N");
result.add("wa-\tri-\tly", "w e@\tI\tl i:");
result.add("wa-\tri-\tness", "w e@\ti:\tn V s");
result.add("wa-\tring", "w e@\tI N");
result.add("wa-\try", "w e@\ti:");
result.add("wa-\tsatch", "w Q\ts { tS");
result.add("wa-\tsha-\tble", "w Q\tS V\tb V l");
result.add("wa-\tsher", "w Q\tS @r");
result.add("wa-\tshers", "w Q\tS @r z");
result.add("wa-\tshes", "w Q\tS V z");
result.add("wa-\tshing", "w Q\tS I N");
result.add("wa-\tshing-\tto-\tni-\tan", "w Q\tS I N\tt @U\tn i:\tV n");
result.add("wa-\tshing-\tto-\tni-\tans", "w Q\tS I N\tt @U\tn i:\tV n z");
result.add("wa-\tshing-\tton", "w Q\tS I N\tt V n");
result.add("wa-\tshing-\tton's", "w Q\tS I N\tt V n z");
result.add("wa-\tshoe", "w Q\tS @U");
result.add("wa-\tshy", "w Q\tS i:");
result.add("wa-\tsn't", "w Q\tz V n t");
result.add("wa-\tt-\tling", "w O:\tt V\tl I N");
result.add("wa-\tta-\tna-\tbe", "w Q\tt Q\tn Q\tb eI");
result.add("wa-\tte-\trer", "w O:\tt @r\t@r");
result.add("wa-\tte-\tring", "w O:\tt @r\tI N");
result.add("wa-\tte-\trish-\tness", "w O:\tt @r\tI S\tn V s");
result.add("wa-\tte-\try", "w O:\tt @r\ti:");
result.add("wa-\tter", "w O:\tt @r");
result.add("wa-\tter-\tbed", "w O:\tt @r\tb e d");
result.add("wa-\tter-\tbeds", "w O:\tt @r\tb e d z");
result.add("wa-\tter-\tborne", "w O:\tt @r\tb O@ n");
result.add("wa-\tter-\tbu-\try", "w O:\tt @r\tb e@\ti:");
result.add("wa-\tter-\tco-\tlor", "w O:\tt @r\tk V\tl @r");
result.add("wa-\tter-\tco-\tlors", "w O:\tt @r\tk V\tl @r z");
result.add("wa-\tter-\tcress", "w O:\tt @r k\tr e s");
result.add("wa-\tter-\tfall", "w O:\tt @r\tf O: l");
result.add("wa-\tter-\tfalls", "w O:\tt @r\tf O: l z");
result.add("wa-\tter-\tford", "w O:\tt @r\tf @r d");
result.add("wa-\tter-\tfowl", "w O:\tt @r\tf aU l");
result.add("wa-\tter-\tfront", "w O:\tt @r f\tr V n t");
result.add("wa-\tter-\tfronts", "w O:\tt @r f\tr V n t s");
result.add("wa-\tter-\tgate", "w Q\tt @r\tg eI t");
result.add("wa-\tter-\thou-\tse's", "w O:\tt @r\th aU\ts V z");
result.add("wa-\tter-\thouse", "w O:\tt @r\th aU s");
result.add("wa-\tter-\tlog", "w O:\tt @r\tl Q g");
result.add("wa-\tter-\tlogged", "w O:\tt @r\tl Q g d");
result.add("wa-\tter-\tloo", "w O:\tt @r\tl u:");
result.add("wa-\tter-\tman", "w O:\tt @r\tm V n");
result.add("wa-\tter-\tman's", "w O:\tt @r\tm V n z");
result.add("wa-\tter-\tmark", "w O:\tt @r\tm Q@ k");
result.add("wa-\tter-\tme-\tlon", "w O:\tt @r\tm e\tl V n");
result.add("wa-\tter-\tme-\tlons", "w O:\tt @r\tm e\tl V n z");
result.add("wa-\tter-\tmen", "w O:\tt @r\tm V n");
result.add("wa-\tter-\tproo-\tfing", "w O:\tt @r p\tr u:\tf I N");
result.add("wa-\tter-\tproof", "w O:\tt @r p\tr u: f");
result.add("wa-\tter-\tshed", "w Q\tt @r\tS e d");
result.add("wa-\tter-\tsheds", "w Q\tt @r\tS e d z");
result.add("wa-\tter-\ttight", "w O:\tt @r\tt aI t");
result.add("wa-\tter-\ttown", "w O:\tt @r\tt aU n");
result.add("wa-\tter-\tville", "w O:\tt @r\tv I l");
result.add("wa-\tter-\tway", "w O:\tt @r\tw eI");
result.add("wa-\tter-\tways", "w O:\tt @r\tw eI z");
result.add("wa-\tter-\twork", "w O:\tt @r\tw @r k");
result.add("wa-\tter-\tworks", "w O:\tt @r\tw @r k s");
result.add("wa-\ttered", "w O:\tt @r d");
result.add("wa-\tters", "w O:\tt @r z");
result.add("wa-\tter's", "w O:\tt @r z");
result.add("wa-\tthen", "w O:\tT V n");
result.add("wa-\tve-\tring", "w eI\tv @r\tI N");
result.add("wa-\tver", "w eI\tv @r");
result.add("wa-\tver-\tley", "w eI\tv @r\tl i:");
result.add("wa-\tver-\tly", "w eI\tv @r\tl i:");
result.add("wa-\tvered", "w eI\tv @r d");
result.add("wa-\tving", "w eI\tv I N");
result.add("wa-\tvy", "w eI\tv i:");
result.add("wa-\txes", "w { k\ts V z");
result.add("wa-\txing", "w { k\ts I N");
result.add("wa-\txy", "w { k\ts i:");
result.add("wa-\tzir", "w Q\tz I@");
result.add("wa-\tzir's", "w Q\tz I@ z");
result.add("waag", "w Q g");
result.add("waal", "w Q l");
result.add("wac-\tker", "w {\tk @r");
result.add("wac-\tko", "w {\tk @U");
result.add("wac-\tkos", "w {\tk @U z");
result.add("wac-\tky", "w {\tk i:");
result.add("wace", "w eI s");
result.add("wach-\ttel", "w O:\ttS V l");
result.add("wach-\tter", "w O: k\tt @r");
result.add("wack", "w { k");
result.add("wacks", "w { k s");
result.add("wad", "w Q d");
result.add("wad-\tded", "w Q\td V d");
result.add("wad-\tdell", "w Q\td e l");
result.add("wad-\tdie", "w Q\td i:");
result.add("wad-\tding-\tton", "w Q\td I N\tt V n");
result.add("wad-\tdle", "w Q\td V l");
result.add("wad-\tdy", "w Q\td i:");
result.add("wad-\thams", "w O:\td V m z");
result.add("wad-\tleigh", "w O: d\tl i:");
result.add("wad-\tley", "w Q d\tl i:");
result.add("wade", "w eI d");
result.add("wades", "w eI d z");
result.add("wade's", "w eI d z");
result.add("wads", "w Q d z");
result.add("wads-\tworth", "w Q d\tz w @r T");
result.add("wads-\tworth's", "w Q d\tz w @r T s");
result.add("waech-\tter", "w e k\tt @r");
result.add("waf-\tfle", "w Q\tf V l");
result.add("waf-\tfled", "w Q\tf V l d");
result.add("waf-\tfles", "w Q\tf V l z");
result.add("waf-\tted", "w Q f\tt V d");
result.add("waf-\tting", "w Q f\tt I N");
result.add("waff-\tling", "w Q f\tl I N");
result.add("waft", "w Q f t");
result.add("wag", "w { g");
result.add("wag-\tg-\tling", "w {\tg V\tl I N");
result.add("wag-\tging", "w {\tg I N");
result.add("wag-\tgo-\tner", "w {\tg V\tn @r");
result.add("wag-\tgy", "w {\tg i:");
result.add("wag-\tne-\tri-\tan", "w { g\tn e@\ti:\tV n");
result.add("wag-\tner", "w { g\tn @r");
result.add("wag-\tner's", "w { g\tn @r z");
result.add("wag-\tstaff", "w { g\ts t { f");
result.add("wage", "w eI dZ");
result.add("waged", "w eI dZ d");
result.add("wagged", "w { g d");
result.add("wags", "w { g z");
result.add("wah", "w Q");
result.add("wahl", "w Q l");
result.add("wahl-\tstrom", "w Q l\ts t r V m");
result.add("wai-\tki-\tki", "w aI\tk i:\tk i:");
result.add("wai-\tling", "w eI\tl I N");
result.add("wai-\tner", "w eI\tn @r");
result.add("wai-\tted", "w eI\tt V d");
result.add("wai-\tter", "w eI\tt @r");
result.add("wai-\tters", "w eI\tt @r z");
result.add("wai-\tter's", "w eI\tt @r z");
result.add("wai-\tting", "w eI\tt I N");
result.add("wai-\tver", "w eI\tv @r");
result.add("wai-\tvers", "w eI\tv @r z");
result.add("wai-\tving", "w eI\tv I N");
result.add("waid", "w eI d");
result.add("waide", "w eI d");
result.add("waif", "w eI f");
result.add("wail", "w eI l");
result.add("wailed", "w eI l d");
result.add("wails", "w eI l z");
result.add("wain", "w eI n");
result.add("wain-\tman", "w eI n\tm V n");
result.add("wain-\tscott", "w eI n\ts k V t");
result.add("wain-\twright", "w eI n\tr aI t");
result.add("wais", "w eI z");
result.add("waist", "w eI s t");
result.add("waist-\tline", "w eI s\tt l aI n");
result.add("waists", "w eI s t s");
result.add("wait", "w eI t");
result.add("wait-\tres-\tses", "w eI t\tr V\ts V z");
result.add("wait-\tress", "w eI t\tr V s");
result.add("waite", "w eI t");
result.add("waites", "w eI t s");
result.add("waite's", "w eI t s");
result.add("waits", "w eI t s");
result.add("waive", "w eI v");
result.add("waived", "w eI v d");
result.add("waives", "w eI v z");
result.add("waj-\tda", "v aI\td V");
result.add("wake", "w eI k");
result.add("wake-\tfield", "w eI k\tf i: l d");
result.add("wake-\tman", "w eI k\tm V n");
result.add("wake-\tup", "w eI\tk V p");
result.add("wakes", "w eI k s");
result.add("wal", "w O: l");
result.add("wal-\tbridge", "w O: l\tb r I dZ");
result.add("wal-\tcott", "w O: l\tk Q t");
result.add("wal-\tde-\tmar", "v Q l\td V\tm Q@");
result.add("wal-\tden", "w O: l\td V n");
result.add("wal-\tdheim", "w O: l\td h aI m");
result.add("wal-\tdheim's", "w O: l\td h aI m z");
result.add("wal-\tdo", "w Q l\td @U");
result.add("wal-\tdon", "w O: l\td V n");
result.add("wal-\tdorf", "w O: l\td O@ f");
result.add("wal-\tford", "w O: l\tf @r d");
result.add("wal-\tgreen", "w O: l\tg r i: n");
result.add("wal-\tker", "w O:\tk @r");
result.add("wal-\tkers", "w O:\tk @r z");
result.add("wal-\tker's", "w O:\tk @r z");
result.add("wal-\tkie", "w O:\tk i:");
result.add("wal-\tking", "w O:\tk I N");
result.add("wal-\tkure", "w O: k\tj @r");
result.add("wal-\tla", "w O:\tl V");
result.add("wal-\tla-\tce's", "w O:\tl V\ts V z");
result.add("wal-\tlace", "w O:\tl V s");
result.add("wal-\tlach", "w O:\tl V k");
result.add("wal-\tlack", "w O:\tl V k");
result.add("wal-\tlen-\tstein", "w O:\tl V n\ts t aI n");
result.add("wal-\tler", "w O:\tl @r");
result.add("wal-\tlet", "w O:\tl V t");
result.add("wal-\tlets", "w O:\tl V t s");
result.add("wal-\tley", "w O:\tl i:");
result.add("wal-\tleye", "w O:\tl aI");
result.add("wal-\tlie", "w O:\tl i:");
result.add("wal-\tling", "w O:\tl I N");
result.add("wal-\tling-\tford", "w O:\tl I N\tf @r d");
result.add("wal-\tling-\tton", "w O:\tl I N\tt V n");
result.add("wal-\tlis", "w O:\tl I s");
result.add("wal-\tlo-\tping", "w O:\tl V\tp I N");
result.add("wal-\tlo-\twing", "w Q\tl @U\tI N");
result.add("wal-\tloch", "w O:\tl V k");
result.add("wal-\tlop", "w Q\tl V p");
result.add("wal-\tlops", "w Q\tl V p s");
result.add("wal-\tlow", "w Q\tl @U");
result.add("wal-\tlowed", "w Q\tl @U d");
result.add("wal-\tly", "w O:\tl i:");
result.add("wal-\tly's", "w O:\tl i: z");
result.add("wal-\tnut", "w O: l\tn V t");
result.add("wal-\tnuts", "w O: l\tn V t s");
result.add("wal-\tpole", "w O: l\tp @U l");
result.add("wal-\trath", "w O: l\tr V T");
result.add("wal-\tru-\tses", "w Q l\tr V\ts V z");
result.add("wal-\trus", "w O: l\tr V s");
result.add("wal-\tsh's", "w O: l\tS V z");
result.add("wal-\tston", "w O: l\ts t V n");
result.add("wal-\tter", "w O: l\tt @r");
result.add("wal-\tters", "w O: l\tt @r z");
result.add("wal-\tter's", "w O: l\tt @r z");
result.add("wal-\tthall", "w O: l\tT V l");
result.add("wal-\ttham", "w O: l\tT V m");
result.add("wal-\tther", "w O: l\tT @r");
result.add("wal-\tton", "w O: l\tt V n");
result.add("wal-\tton's", "w O: l\tt V n z");
result.add("wal-\tworth", "w O: l\tw @r T");
result.add("walc-\tzak", "v Q l\ttS { k");
result.add("wald", "w O: l d");
result.add("wald-\thorn", "w O: l\td h O@ n");
result.add("wald-\tman", "w Q l\td m V n");
result.add("wald-\tner", "w O: l\td n @r");
result.add("wald-\tron", "w O: l\td r V n");
result.add("wale", "w eI l");
result.add("wales", "w eI l z");
result.add("walk", "w Q k");
result.add("walk-\tley", "w O: k\tl i:");
result.add("walk-\tman", "w O: k\tm { n");
result.add("walk-\ton", "w O:\tk Q n");
result.add("walk-\tout", "w O:\tk aU t");
result.add("walk-\touts", "w O:\tk aU t s");
result.add("walk-\tup", "w O:\tk V p");
result.add("walk-\tway", "w O: k\tw eI");
result.add("walk-\tways", "w O: k\tw eI z");
result.add("walke", "w O: k");
result.add("walked", "w O: k t");
result.add("walks", "w O: k s");
result.add("wall", "w O: l");
result.add("wall-\tboard", "w O: l\tb O@ d");
result.add("wall-\tflo-\twer", "w O: l\tf l aU\t@r");
result.add("wall-\tman", "w O: l\tm V n");
result.add("wall-\tpa-\tper", "w O: l\tp eI\tp @r");
result.add("wall-\tpa-\tper-\ting", "w O: l\tp eI\tp @r\tI N");
result.add("wall-\tpa-\tpered", "w O: l\tp eI\tp @r d");
result.add("wall-\tpa-\tpers", "w O: l\tp eI\tp @r z");
result.add("wall-\tsend", "w O: l\ts e n d");
result.add("wall-\twork", "w O: l\tw @r k");
result.add("walled", "w O: l d");
result.add("walls", "w O: l z");
result.add("wall's", "w O: l z");
result.add("walsh", "w O: l S");
result.add("walt", "w O: l t");
result.add("walt-\tner", "w O: l\tt n @r");
result.add("walt-\tzer", "w O: l\tt s @r");
result.add("walt-\tzes", "w O: l\tt s V z");
result.add("walt-\tzing", "w O: l\tt s I N");
result.add("walth", "w O: l T");
result.add("waltz", "w O: l t s");
result.add("wam-\tble", "w Q m\tb V l");
result.add("wam-\tpum", "w Q m\tp V m");
result.add("wamp-\tler", "w Q m\tp l @r");
result.add("wams-\tley", "w Q m\tz l i:");
result.add("wan", "w Q n");
result.add("wan-\tda", "w Q n\td V");
result.add("wan-\tde-\trer", "w Q n\td @r\t@r");
result.add("wan-\tde-\trers", "w Q n\td @r\t@r z");
result.add("wan-\tde-\tring", "w Q n\td @r\tI N");
result.add("wan-\tde-\trings", "w Q n\td @r\tI N z");
result.add("wan-\tder", "w Q n\td @r");
result.add("wan-\tder-\tlust", "w Q n\td @r\tl V s t");
result.add("wan-\tdered", "w Q n\td @r d");
result.add("wan-\tders", "w Q n\td @r z");
result.add("wan-\tdie", "w Q n\td i:");
result.add("wan-\tdis", "w Q n\td I s");
result.add("wan-\tger", "w {\tN @r");
result.add("wan-\tgle", "w { N\tg V l");
result.add("wan-\tgled", "w { N\tg V l d");
result.add("wan-\tna", "w Q\tn V");
result.add("wan-\tna-\tbe", "w Q\tn V\tb i:");
result.add("wan-\tna-\tbee", "w Q\tn V\tb i:");
result.add("wan-\tna-\tbees", "w Q\tn V\tb i: z");
result.add("wan-\tna-\tbes", "w Q\tn V\tb i: z");
result.add("wan-\tner", "w Q\tn @r");
result.add("wan-\tta-\tges", "w Q n\tt I\tdZ V z");
result.add("wan-\ttage", "w Q n\tt I dZ");
result.add("wan-\tted", "w O: n\tt V d");
result.add("wan-\tting", "w Q n\tt I N");
result.add("wan-\tton", "w Q n\tt V n");
result.add("wan-\tton-\tly", "w Q n\tt V n\tl i:");
result.add("wand", "w Q n d");
result.add("wands", "w Q n d z");
result.add("wane", "w eI n");
result.add("waned", "w eI n d");
result.add("wanes", "w eI n z");
result.add("wang", "w { N");
result.add("wang-\tler", "w { N\tg l @r");
result.add("wang's", "w { N z");
result.add("wank", "w Q N k");
result.add("wann", "w Q n");
result.add("wans-\tley", "w O: n\tz l i:");
result.add("want", "w Q n t");
result.add("wants", "w Q n t s");
result.add("wap-\tping", "w Q\tp I N");
result.add("war", "w O@");
result.add("war-\tb-\tling", "w O@\tb V\tl I N");
result.add("war-\tbur-\tton", "w O@\tb @r\tt V n");
result.add("war-\tda", "w O@\td V");
result.add("war-\tded", "w O@\td V d");
result.add("war-\tdell", "w O@\td e l");
result.add("war-\tden", "w O@\td V n");
result.add("war-\tdens", "w O@\td V n z");
result.add("war-\tden's", "w O@\td V n z");
result.add("war-\tder", "w O@\td @r");
result.add("war-\tding", "w O@\td I N");
result.add("war-\tdle", "w O@\td V l");
result.add("war-\tdrobe", "w O@ d\tr @U b");
result.add("war-\tdrobes", "w O@ d\tr @U b z");
result.add("war-\tdrop", "w O@ d\tr Q p");
result.add("war-\tfare", "w O@\tf e@");
result.add("war-\tfield", "w O@\tf i: l d");
result.add("war-\tford", "w O@\tf @r d");
result.add("war-\tga", "w O@\tg V");
result.add("war-\thead", "w O@\th e d");
result.add("war-\theads", "w O@\th e d z");
result.add("war-\thol", "w O@\th O: l");
result.add("war-\thol's", "w O: h\tr O: l z");
result.add("war-\tley", "w O@\tl i:");
result.add("war-\tlike", "w O@\tl aI k");
result.add("war-\tling", "w O@\tl I N");
result.add("war-\tlord", "w O@\tl O@ d");
result.add("war-\tlords", "w O@\tl O@ d z");
result.add("war-\tman", "w O@\tm V n");
result.add("war-\tmer", "w O@\tm @r");
result.add("war-\tmest", "w O@\tm V s t");
result.add("war-\tmin-\tster", "w O@\tm I n\ts t @r");
result.add("war-\tming", "w O@\tm I N");
result.add("war-\tmish", "w O@\tm I S");
result.add("war-\tmon-\tge-\tring", "w O@\tm Q N\tg @r\tI N");
result.add("war-\tmon-\tger", "w O@\tm Q N\tg @r");
result.add("war-\tmus", "w O@\tm V s");
result.add("war-\tner", "w O@\tn @r");
result.add("war-\tners", "w O@\tn @r z");
result.add("war-\tner's", "w O@\tn @r z");
result.add("war-\tning", "w O@\tn I N");
result.add("war-\tning-\tly", "w O@\tn I N\tl i:");
result.add("war-\tnings", "w O@\tn I N z");
result.add("war-\tnock", "w O@\tn Q k");
result.add("war-\tpath", "w O@\tp { T");
result.add("war-\tping", "w O@\tp I N");
result.add("war-\tran-\tted", "w O@\tV n\tt V d");
result.add("war-\tran-\tties", "w O@\tV n\tt i: z");
result.add("war-\tran-\tty", "w O@\tV n\tt i:");
result.add("war-\trant", "w O@\tV n t");
result.add("war-\trant-\tless", "w O@\tV n\tt l V s");
result.add("war-\trants", "w O@\tV n t s");
result.add("war-\tren", "w O@\tV n");
result.add("war-\trens", "w O@\tV n z");
result.add("war-\tren's", "w O@\tV n z");
result.add("war-\tri-\tor", "w O@\ti:\t@r");
result.add("war-\tri-\tors", "w O@\ti:\t@r z");
result.add("war-\trick", "w O@\tI k");
result.add("war-\tring", "w O@\tI N");
result.add("war-\tring-\tton", "w O@\tI N\tt V n");
result.add("war-\tsaw", "w O@\ts O:");
result.add("war-\tsaws", "w O@\ts O: z");
result.add("war-\tsaw's", "w O@\ts O: z");
result.add("war-\tship", "w O@\tS I p");
result.add("war-\tships", "w O@\tS I p s");
result.add("war-\tthen", "w O@\tT V n");
result.add("war-\ttime", "w O@\tt aI m");
result.add("war-\ttimes", "w O@\tt aI m z");
result.add("war-\tton", "w O@\tt V n");
result.add("war-\twick", "w O@\tw I k");
result.add("war-\twick's", "w O@\tw I k s");
result.add("warb-\tler", "w O@ b\tl @r");
result.add("warb-\tlers", "w O@ b\tl @r z");
result.add("ward", "w O@ d");
result.add("ward-\tlaw", "w O@ d\tl O:");
result.add("warde", "w O@ d");
result.add("wards", "w O@ d z");
result.add("ward's", "w O@ d z");
result.add("ware", "w e@");
result.add("ware-\thou-\tses", "w e@\th aU\tz V z");
result.add("ware-\thou-\tsing", "w e@\th aU\tz I N");
result.add("ware-\thouse", "w e@\th aU s");
result.add("ware-\thoused", "w e@\th aU z d");
result.add("ware-\ting", "w e@\tI N");
result.add("wares", "w e@ z");
result.add("warf", "w O@ f");
result.add("wark", "w O@ k");
result.add("warm", "w O@ m");
result.add("warm-\tly", "w O@ m\tl i:");
result.add("warm-\tup", "w O@\tm V p");
result.add("warmed", "w O@ m d");
result.add("warms", "w O@ m z");
result.add("warmth", "w O@ m T");
result.add("warn", "w O@ n");
result.add("warne", "w O@ n");
result.add("warned", "w O@ n d");
result.add("warns", "w O@ n z");
result.add("warp", "w O@ p");
result.add("warp-\tlane", "w O@ p\tl eI n");
result.add("warp-\tlanes", "w O@ p\tl eI n z");
result.add("warped", "w O@ p t");
result.add("warps", "w O@ p s");
result.add("warr", "w O@");
result.add("wars", "w O@ z");
result.add("war's", "w O@ z");
result.add("warst-\tler", "w O@ s\tt l @r");
result.add("wart", "w O@ t");
result.add("warth", "w O@ T");
result.add("warts", "w O@ t s");
result.add("was", "w Q z");
result.add("was-\tco", "w O: s\tk @U");
result.add("was-\tser-\tman", "w Q\ts @r\tm V n");
result.add("was-\tser-\tman's", "w Q\ts @r\tm V n z");
result.add("was-\tson", "w O:\ts V n");
result.add("was-\tted", "w eI s\tt V d");
result.add("was-\tter", "w eI s\tt @r");
result.add("was-\tters", "w eI s\tt @r z");
result.add("was-\tting", "w eI s\tt I N");
result.add("wash", "w Q S");
result.add("wash-\tba-\tsin", "w Q S\tb eI\ts I n");
result.add("wash-\tboard", "w Q S\tb O@ d");
result.add("wash-\tburn", "w Q S\tb @r n");
result.add("wash-\tcloth", "w Q S\tk l O: T");
result.add("wash-\tko", "v Q S\tk @U");
result.add("wash-\tout", "w Q\tS aU t");
result.add("wash-\touts", "w Q\tS aU t s");
result.add("wash-\troom", "w Q S\tr u: m");
result.add("wash-\ttub", "w Q S\tt V b");
result.add("washed", "w Q S t");
result.add("wasp", "w Q s p");
result.add("wasps", "w Q s p s");
result.add("wasp's", "w Q s p s");
result.add("waste", "w eI s t");
result.add("waste-\tbas-\tket", "w eI s\tt b { s\tk V t");
result.add("waste-\tbas-\tkets", "w eI s\tt b { s\tk V t s");
result.add("waste-\tful", "w eI s\tt f V l");
result.add("waste-\tful-\tness", "w eI s\tt f V l\tn V s");
result.add("waste-\tland", "w eI s\tt l { n d");
result.add("waste-\tpa-\tper", "w eI s\tt p eI\tp @r");
result.add("waste-\twa-\tter", "w eI s\tt w O:\tt @r");
result.add("wastes", "w eI s t s");
result.add("wat", "w O: t");
result.add("wat-\tcher", "w Q\ttS @r");
result.add("wat-\tchers", "w Q\ttS @r z");
result.add("wat-\tches", "w Q\ttS V z");
result.add("wat-\tching", "w Q\ttS I N");
result.add("wat-\tford", "w O: t\tf @r d");
result.add("wat-\tkin", "w O: t\tk I n");
result.add("wat-\tkins", "w Q t\tk I n z");
result.add("wat-\trous", "w Q t\tr V s");
result.add("wat-\tson", "w Q t\ts V n");
result.add("wat-\tson-\tville", "w Q t\ts V n\tv I l");
result.add("wat-\tson's", "w Q t\ts V n z");
result.add("wat-\ttage", "w Q\tt V dZ");
result.add("wat-\tten-\tberg", "w Q\tt V n\tb @r g");
result.add("wat-\tters", "w Q\tt @r z");
result.add("wat-\ttles", "w Q\tt V l z");
result.add("wat-\tton", "w O:\tt V n");
result.add("watch", "w Q tS");
result.add("watch-\tdog", "w Q tS\td O: g");
result.add("watch-\tdogs", "w Q tS\td O: g z");
result.add("watch-\tful", "w Q tS\tf V l");
result.add("watch-\tman", "w Q tS\tm V n");
result.add("watch-\tword", "w Q tS\tw @r d");
result.add("watched", "w Q tS t");
result.add("watt", "w Q t");
result.add("watts", "w Q t s");
result.add("watt's", "w Q t s");
result.add("wau-\tke-\tgan", "w O:\tk i:\tg V n");
result.add("wau-\tke-\tsha", "w O:\tk i:\tS V");
result.add("wau-\tsau", "w O:\ts O:");
result.add("wau-\tters", "w aU\tt @r z");
result.add("waugh", "w O:");
result.add("waugh's", "w O: z");
result.add("wave", "w eI v");
result.add("wave-\tlength", "w eI v\tl e N T");
result.add("wave-\tlengths", "w eI v\tl e N T s");
result.add("waved", "w eI v d");
result.add("waves", "w eI v z");
result.add("wax", "w { k s");
result.add("wax-\tler", "w { k\ts l @r");
result.add("wax-\tman", "w { k\ts m V n");
result.add("wax-\tman's", "w { k\ts m V n z");
result.add("waxed", "w { k s t");
result.add("way", "w eI");
result.add("way-\tlaid", "w eI\tl eI d");
result.add("way-\tland", "w eI\tl V n d");
result.add("way-\tlay", "w eI\tl eI");
result.add("way-\tlon", "w eI\tl Q n");
result.add("way-\tman", "w eI\tm V n");
result.add("way-\tside", "w eI\ts aI d");
result.add("way-\tward", "w eI\tw @r d");
result.add("wayne", "w eI n");
result.add("wayne's", "w eI n z");
result.add("waynes-\tbo-\tro", "w eI n\tz b @r\t@U");
result.add("waynes-\tville", "w eI n\tz v I l");
result.add("ways", "w eI z");
result.add("way's", "w eI z");
result.add("we", "w i:");
result.add("we-\tber", "w e\tb @r");
result.add("we-\tbers", "w e\tb @r z");
result.add("we-\tber's", "v eI\tb @r z");
result.add("we-\tde-\tkind", "w e\td I\tk I n d");
result.add("we-\tdel", "w e\td V l");
result.add("we-\tdo-\twee", "w e\td aU\tw i:");
result.add("we-\tdo-\twee's", "w e\td aU\tw i: z");
result.add("we-\tnat-\tchee", "w V\tn {\ttS i:");
result.add("we-\tno-\tna", "w e\tn V\tn V");
result.add("we-\tren't", "w @r\tV n t");
result.add("we-\tver", "w i:\tv @r");
result.add("wea-\tke-\tning", "w i:\tk V\tn I N");
result.add("wea-\tken", "w i:\tk V n");
result.add("wea-\tkened", "w i:\tk V n d");
result.add("wea-\tkens", "w i:\tk V n z");
result.add("wea-\tker", "w i:\tk @r");
result.add("wea-\tkest", "w i:\tk V s t");
result.add("wea-\tning", "w i:\tn I N");
result.add("wea-\tpon", "w e\tp V n");
result.add("wea-\tpon-\try", "w e\tp V n\tr i:");
result.add("wea-\tpons", "w e\tp V n z");
result.add("wea-\tpon's", "w e\tp V n z");
result.add("wea-\tra-\tble", "w e@\tV\tb V l");
result.add("wea-\trer", "w e@\t@r");
result.add("wea-\trers", "w e@\t@r z");
result.add("wea-\tri-\tly", "w e@\tI\tl i:");
result.add("wea-\tri-\tness", "w I@\ti:\tn V s");
result.add("wea-\tri-\tsome", "w I@\ti:\ts V m");
result.add("wea-\tried", "w I@\ti: d");
result.add("wea-\tring", "w e@\tI N");
result.add("wea-\try", "w I@\ti:");
result.add("wea-\try-\ting", "w i:\tr i:\tI N");
result.add("wea-\tsel", "w i:\tz V l");
result.add("wea-\tsel-\tlike", "w i:\tz V l\tl aI k");
result.add("wea-\tthe-\tring", "w e\tD @r\tI N");
result.add("wea-\tther", "w e\tD @r");
result.add("wea-\tther-\tby", "w e\tD @r\tb i:");
result.add("wea-\tther-\tford", "w e\tD @r\tf @r d");
result.add("wea-\tther-\thead", "w e\tD @r\th e d");
result.add("wea-\tther-\tly", "w e\tD @r\tl i:");
result.add("wea-\tther-\tman", "w e\tD @r\tm { n");
result.add("wea-\tther-\tmen", "w e\tD @r\tm e n");
result.add("wea-\tther-\tper-\tson", "w e\tT @r\tp @r\ts V n");
result.add("wea-\tther-\tproof", "w e\tD @r p\tr u: f");
result.add("wea-\tthered", "w e\tD @r d");
result.add("wea-\tthers", "w e\tD @r z");
result.add("wea-\tther's", "w e\tD @r z");
result.add("wea-\tver", "w i:\tv @r");
result.add("wea-\tvers", "w i:\tv @r z");
result.add("wea-\tver's", "w i:\tv @r z");
result.add("wea-\tving", "w i:\tv I N");
result.add("wea-\tvings", "w i:\tv I N z");
result.add("weak", "w i: k");
result.add("weak-\tling", "w i: k\tl I N");
result.add("weak-\tly", "w i: k\tl i:");
result.add("weak-\tnes-\tses", "w i: k\tn V\ts V z");
result.add("weak-\tness", "w i: k\tn V s");
result.add("weaks", "w i: k s");
result.add("weal-\tthi-\ter", "w e l\tT i:\t@r");
result.add("weal-\tthi-\test", "w e l\tT i:\tV s t");
result.add("weal-\tthy", "w e l\tT i:");
result.add("wealth", "w e l T");
result.add("wealths", "w e l T s");
result.add("wean", "w i: n");
result.add("weaned", "w i: n d");
result.add("wear", "w e@");
result.add("wears", "w e@ z");
result.add("weave", "w i: v");
result.add("weaved", "w i: v d");
result.add("weaves", "w i: v z");
result.add("web", "w e b");
result.add("web-\tber", "w e\tb @r");
result.add("web-\tber's", "w e\tb @r z");
result.add("web-\tbing", "w e\tb I N");
result.add("web-\tmas-\tter", "w e b\tm { s\tt @r");
result.add("web-\tsite", "w e b\ts aI t");
result.add("web-\tster", "w e b\ts t @r");
result.add("web-\tster's", "w e b\ts t @r z");
result.add("webb", "w e b");
result.add("webbed", "w e b d");
result.add("webbs", "w e b z");
result.add("webb's", "w e b z");
result.add("webs", "w e b z");
result.add("wecht", "w e k t");
result.add("weck", "w e k");
result.add("wed", "w e d");
result.add("we'd", "w i: d");
result.add("wed-\tded", "w e\td V d");
result.add("wed-\tdell", "w e\td V l");
result.add("wed-\tding", "w e\td I N");
result.add("wed-\tdings", "w e\td I N z");
result.add("wed-\tges", "w e\tdZ V z");
result.add("wed-\tlock", "w e d\tl Q k");
result.add("wedg-\twood", "w e dZ\tw U d");
result.add("wedge", "w e dZ");
result.add("wedged", "w e dZ d");
result.add("wednes-\tday", "w e n\tz d i:");
result.add("wednes-\tdays", "w e n\tz d eI z");
result.add("wednes-\tday's", "w e n\tz d i: z");
result.add("wee", "w i:");
result.add("wee-\tded", "w i:\td V d");
result.add("wee-\tding", "w i:\td I N");
result.add("wee-\tdy", "w i:\td i:");
result.add("wee-\tny", "w i:\tn i:");
result.add("wee-\tping", "w i:\tp I N");
result.add("wee-\tpy", "w i:\tp i:");
result.add("wee-\tvil", "w i:\tv I l");
result.add("wee-\tvils", "w i:\tv I l z");
result.add("weed", "w i: d");
result.add("weeds", "w i: d z");
result.add("week", "w i: k");
result.add("week-\tday", "w i: k\td eI");
result.add("week-\tdays", "w i: k\td eI z");
result.add("week-\ten-\tder", "w i:\tk e n\td @r");
result.add("week-\tend", "w i:\tk e n d");
result.add("week-\tends", "w i:\tk e n d z");
result.add("week-\tend's", "w i:\tk e n d z");
result.add("week-\tley", "w i: k\tl i:");
result.add("week-\tlies", "w i: k\tl i: z");
result.add("week-\tlong", "w i: k\tl O: N");
result.add("week-\tly", "w i: k\tl i:");
result.add("weekes", "w i: k s");
result.add("weeks", "w i: k s");
result.add("week's", "w i: k s");
result.add("weeks'", "w i: k s");
result.add("weems", "w i: m z");
result.add("weep", "w i: p");
result.add("weeps", "w i: p s");
result.add("weh-\tner", "w e\tn @r");
result.add("weh-\trle", "w e@\tV l");
result.add("wehr", "w e@");
result.add("wei", "w eI");
result.add("wei-\tbel", "w aI\tb V l");
result.add("wei-\tde", "w aI\td i:");
result.add("wei-\tder", "w aI\td @r");
result.add("wei-\tgel", "w aI\tg V l");
result.add("wei-\tghing", "w eI\tI N");
result.add("wei-\tgle", "w i:\tg V l");
result.add("wei-\tkert", "w aI\tk @r t");
result.add("wei-\tler", "w aI\tl @r");
result.add("wei-\tman", "w aI\tm V n");
result.add("wei-\tmar", "v aI\tm Q@");
result.add("wei-\tner", "w aI\tn @r");
result.add("wei-\tnert", "w aI\tn @r t");
result.add("wei-\trick", "w aI\tr I k");
result.add("wei-\tser", "w aI\ts @r");
result.add("weid-\tman", "w aI d\tm V n");
result.add("weid-\tner", "w aI d\tn @r");
result.add("weigh", "w eI");
result.add("weigh-\tted", "w eI\tt V d");
result.add("weigh-\tting", "w eI\tt I N");
result.add("weigh-\ttings", "w eI\tt I N z");
result.add("weigh-\tty", "w eI\tt i:");
result.add("weighed", "w eI d");
result.add("weighs", "w eI z");
result.add("weight", "w eI t");
result.add("weight-\tless", "w eI t\tl V s");
result.add("weight-\tless-\tness", "w eI t\tl V s\tn V s");
result.add("weight-\tlif-\tter", "w eI t\tl I f\tt @r");
result.add("weight-\tlif-\tters", "w eI t\tl I f\tt @r z");
result.add("weight-\tlif-\tting", "w eI t\tl I f\tt I N");
result.add("weights", "w eI t s");
result.add("weil", "w aI l");
result.add("weill", "w aI l");
result.add("weill's", "w aI l z");
result.add("weil's", "w aI l z");
result.add("wein", "w i: n");
result.add("wein-\tber-\tger", "w aI n\tb @r\tg @r");
result.add("wein-\tber-\tger's", "w aI n\tb @r\tg @r z");
result.add("wein-\tberg", "w aI n\tb @r g");
result.add("wein-\tgar-\tten", "w aI n\tg Q@\tt V n");
result.add("wein-\tgart-\tner", "w aI N\tg Q@ t\tn @r");
result.add("wein-\tman", "w aI n\tm V n");
result.add("wein-\treb", "w aI n\tr e b");
result.add("wein-\trich", "w aI n\tr I k");
result.add("wein-\tstein", "w aI n\ts t aI n");
result.add("wein-\tstein's", "w aI n\ts t aI n z");
result.add("wein-\tstock", "w aI n\ts t Q k");
result.add("weir", "w i: r");
result.add("weir-\tder", "w I@\td @r");
result.add("weir-\tdest", "w I@\td V s t");
result.add("weir-\tdo", "w I@\td @U");
result.add("weir-\tdos", "w I@\td @U z");
result.add("weir-\tton", "w I@\tt V n");
result.add("weir-\tton's", "w I@\tt V n z");
result.add("weird", "w I@ d");
result.add("weird-\tly", "w I@ d\tl i:");
result.add("weird-\tness", "w I@ d\tn V s");
result.add("weir's", "w i: r z");
result.add("weis-\tberg", "w aI s\tb @r g");
result.add("weis-\tman", "w aI s\tm V n");
result.add("weis-\tmann", "w aI s\tm V n");
result.add("weis-\tsert", "w aI\ts @r t");
result.add("weis-\ts's", "w aI\ts V z");
result.add("weise", "w i: s");
result.add("weiss", "w aI s");
result.add("weiss-\tberg", "w aI s\tb @r g");
result.add("weiss-\tman", "w aI s\tm V n");
result.add("weiss-\tmann", "w aI s\tm V n");
result.add("weit-\tman", "w aI t\tm V n");
result.add("weitz-\tman", "w aI t\ts m V n");
result.add("weitz-\tman's", "w aI t\ts m V n z");
result.add("wel-\tby", "w e l\tb i:");
result.add("wel-\tcher", "w e l\ttS @r");
result.add("wel-\tco-\tming", "w e l\tk V\tm I N");
result.add("wel-\tcome", "w e l\tk V m");
result.add("wel-\tcomed", "w e l\tk V m d");
result.add("wel-\tcomes", "w e l\tk V m z");
result.add("wel-\tded", "w e l\td V d");
result.add("wel-\tder", "w e l\td @r");
result.add("wel-\tders", "w e l\td @r z");
result.add("wel-\tding", "w e l\td I N");
result.add("wel-\tdon", "w e l\td V n");
result.add("wel-\tdon's", "w e l\td V n z");
result.add("wel-\tfare", "w e l\tf e@");
result.add("wel-\tford", "w e l\tf @r d");
result.add("wel-\tker", "w e l\tk @r");
result.add("wel-\tland", "w e\tl V n d");
result.add("wel-\tler", "w e\tl @r");
result.add("wel-\tling", "w e\tl I N");
result.add("wel-\tling-\tton", "w e\tl I N\tt V n");
result.add("wel-\tling-\tton's", "w e\tl I N\tt V n z");
result.add("wel-\tter", "w e l\tt @r");
result.add("wel-\tter-\tweight", "w e l\tt @r\tw eI t");
result.add("wel-\tton", "w e l\tt V n");
result.add("wel-\tty", "w e l\tt i:");
result.add("welch", "w e l tS");
result.add("weld", "w e l d");
result.add("weld-\twood", "w e l\td w U d");
result.add("welds", "w e l d z");
result.add("welk", "w e l k");
result.add("welke", "w e l k");
result.add("well", "w e l");
result.add("we'll", "w i: l");
result.add("well-\tbe-\ting", "w e l\tb i:\tI N");
result.add("well-\tborn", "w e l\tb O@ n");
result.add("well-\tdoer", "w e l\td u: r");
result.add("well-\thead", "w e l\th e d");
result.add("well-\tman", "w e l\tm V n");
result.add("well-\tness", "w e l\tn V s");
result.add("well-\tpoint", "w e l\tp OI n t");
result.add("well-\tspring", "w e l\ts p r I N");
result.add("well-\ts's", "w e l\tz V z");
result.add("welles", "w e l z");
result.add("welles-\tley", "w e l\tz l i:");
result.add("wells", "w e l z");
result.add("welsh", "w e l tS");
result.add("welt", "w e l t");
result.add("wemb-\tley", "w e m\tb l i:");
result.add("wen", "w e n");
result.add("wen-\tces-\tlaus", "w e n\ts V s\tl O: s");
result.add("wen-\tches", "w e n\ttS V z");
result.add("wen-\tda", "w e n\td V");
result.add("wen-\tde-\tline", "w e n\td V\tl aI n");
result.add("wen-\tdel", "w e n\td V l");
result.add("wen-\tdell", "w e n\td V l");
result.add("wen-\tding", "w e n\td I N");
result.add("wen-\tdy", "w e n\td i:");
result.add("wen-\tdy's", "w e n\td i: z");
result.add("wen-\tger", "w e\tN @r");
result.add("wen-\tgert", "w e N\tg @r t");
result.add("wen-\tzel", "w e n\tz V l");
result.add("wend", "w e n d");
result.add("wende", "w e n d");
result.add("wends", "w e n d z");
result.add("wendt", "w e n t");
result.add("wenge", "w e n dZ");
result.add("went", "w e n t");
result.add("went-\tworth", "w e n\tt w @r T");
result.add("wentz-\tville", "w e n\tt s v I l");
result.add("wenz", "w e n z");
result.add("wept", "w e p t");
result.add("wer-\tner", "w @r\tn @r");
result.add("wer-\tner's", "w @r\tn @r z");
result.add("wer-\tnick", "w @r\tn I k");
result.add("wer-\tthei-\tmer", "w @r t\th aI\tm @r");
result.add("wer-\ttheim", "w @r t\th aI m");
result.add("wer-\tther", "w @r\tD @r");
result.add("were", "w @r");
result.add("we're", "w i: r");
result.add("were-\twolf", "w e@\tw U l f");
result.add("wert", "w @r t");
result.add("wertz", "w @r t s");
result.add("wes", "w e s");
result.add("wes-\tco", "w e s\tk @U");
result.add("wes-\tcott", "w e s\tk Q t");
result.add("wes-\tker", "w e s\tk @r");
result.add("wes-\tker's", "w e s\tk @r z");
result.add("wes-\tley", "w e s\tl i:");
result.add("wes-\tley-\tan", "w e z\tl i:\tV n");
result.add("wes-\ts-\tling", "w e\ts V\tl I N");
result.add("wes-\tsel", "w e\ts V l");
result.add("wes-\tsex", "w e\ts V k s");
result.add("wes-\tson", "w e\ts V n");
result.add("wes-\tter", "w e s\tt @r");
result.add("wes-\tter-\tfield", "w e s\tt @r\tf i: l d");
result.add("wes-\tter-\tly", "w e s\tt @r\tl i:");
result.add("wes-\tter-\tner", "w e s\tt @r\tn @r");
result.add("wes-\tter-\tners", "w e s\tt @r\tn @r z");
result.add("wes-\tter-\tni-\tza-\ttion", "w e s\tt @r\tn I\tz eI\tS V n");
result.add("wes-\tter-\tnize", "w e s\tt @r\tn aI z");
result.add("wes-\tter-\tnized", "w e s\tt @r\tn aI z d");
result.add("wes-\ttern", "w e s\tt @r n");
result.add("wes-\ttern-\tmost", "w e s\tt @r n\tm @U s t");
result.add("wes-\tterns", "w e s\tt @r n z");
result.add("wes-\tting-\thou-\tse's", "w e s\tt I N\th aU\ts V z");
result.add("wes-\tting-\thouse", "w e s\tt I N\th aU s");
result.add("wes-\tton", "w e s\tt V n");
result.add("west", "w e s t");
result.add("west-\tberg", "w e s\tt b @r g");
result.add("west-\tbo-\trough", "w e s\tt b @r\t@U");
result.add("west-\tbound", "w e s\tt b aU n d");
result.add("west-\tbrook", "w e s\tt b r U k");
result.add("west-\tby", "w e s\tt b i:");
result.add("west-\tches-\tter", "w e s\tt tS e s\tt @r");
result.add("west-\tches-\tter's", "w e s\tt tS e s\tt @r z");
result.add("west-\tfahl", "w e s\tt f Q l");
result.add("west-\tfall", "w e s\tt f O: l");
result.add("west-\tfield", "w e s\tt f i: l d");
result.add("west-\thamp-\tton", "w e s\tt h { m\tp t V n");
result.add("west-\tland", "w e s\tt l V n d");
result.add("west-\tleigh", "w e s\tt l aI");
result.add("west-\tley", "w e s\tt l i:");
result.add("west-\tling", "w e s\tt l I N");
result.add("west-\tlund", "w e s\tt l V n d");
result.add("west-\tmin-\tster", "w e s\tt m I n\ts t @r");
result.add("west-\tmore-\tland", "w e s\tt m O@\tl V n d");
result.add("west-\tpha-\tli-\ta", "w e s\tt f eI\tl i:\tV");
result.add("west-\tphal", "w e s\tt f V l");
result.add("west-\tport", "w e s\tt p O@ t");
result.add("west-\tside", "w e s\tt s aI d");
result.add("west-\tward", "w e s\tt w @r d");
result.add("west-\twards", "w e s\tt w @r d z");
result.add("west-\twood", "w e s\tt w U d");
result.add("west-\twood's", "w e s\tt w U d z");
result.add("west's", "w e s t s");
result.add("wet", "w e t");
result.add("wet-\ther-\tby", "w e\tT @r\tb i:");
result.add("wet-\tland", "w e t\tl { n d");
result.add("wet-\tlands", "w e t\tl { n d z");
result.add("wet-\tmore", "w e t\tm O@");
result.add("wet-\tness", "w e t\tn V s");
result.add("wet-\tsuit", "w e t\ts u: t");
result.add("wet-\tter", "w e\tt @r");
result.add("wet-\ttest", "w e\tt V s t");
result.add("wet-\tting", "w e\tt I N");
result.add("wet-\tzel", "w e t\tz V l");
result.add("we've", "w i: v");
result.add("wex-\tler", "w e k\ts l @r");
result.add("wey", "w eI");
result.add("wey-\tlin", "w eI\tl I n");
result.add("wey-\tmouth", "w eI\tm V T");
result.add("weyer-\thaeu-\tser", "w e@\th aU\tz @r");
result.add("weyer-\thaeu-\tser's", "w e@\th aU\tz @r z");
result.add("weyl", "w eI l");
result.add("wha-\tlen", "w eI\tl V n");
result.add("wha-\tler", "w eI\tl @r");
result.add("wha-\tlers", "w eI\tl @r z");
result.add("wha-\tling", "w eI\tl I N");
result.add("wha-\tt'd", "w V\tt V d");
result.add("wha-\tte-\tver", "w V\tt e\tv @r");
result.add("wha-\tt'll", "w V\tt V l");
result.add("wha-\tt're", "w V\tt @r");
result.add("whac-\tking", "w {\tk I N");
result.add("whac-\tko", "w {\tk @U");
result.add("whack", "w { k");
result.add("whacked", "w { k t");
result.add("whacks", "w { k s");
result.add("whale", "w eI l");
result.add("whales", "w eI l z");
result.add("whale's", "w eI l z");
result.add("wham", "w { m");
result.add("wham-\tmy", "w {\tm i:");
result.add("whan", "w { n");
result.add("whang", "w { N");
result.add("whar-\try", "w {\tr i:");
result.add("whar-\tton", "w O@\tt V n");
result.add("whar-\tton's", "w O@\tt V n z");
result.add("wharf", "w O@ f");
result.add("wharf's", "w O@ f s");
result.add("what", "w Q t");
result.add("what-\tley", "w V t\tl i:");
result.add("what-\tnot", "w V t\tn Q t");
result.add("what-\tso-\te-\tver", "w V t\ts @U\te\tv @r");
result.add("whats", "w V t s");
result.add("what's", "w V t s");
result.add("whe-\tlan", "w e\tl V n");
result.add("whe-\tne-\tver", "w e\tn e\tv @r");
result.add("whe-\tn'll", "w e\tn V l");
result.add("whe-\treas", "w e@\t{ z");
result.add("whe-\trein", "w e@\tI n");
result.add("whe-\treu-\tpon", "w e@\tV\tp Q n");
result.add("whe-\tther", "w e\tD @r");
result.add("whea-\tten", "w i:\tt V n");
result.add("whea-\tties", "w i:\tt i: z");
result.add("whea-\tton", "w i:\tt V n");
result.add("wheat", "w i: t");
result.add("wheat-\tley", "w i: t\tl i:");
result.add("whee-\tlab-\tra-\ttor", "w i:\tl V b\tr eI\tt @r");
result.add("whee-\tler", "w i:\tl @r");
result.add("whee-\tlers", "w i:\tl @r z");
result.add("whee-\tler's", "w i:\tl @r z");
result.add("whee-\tling", "w i:\tl I N");
result.add("whee-\tling's", "w i:\tl I N z");
result.add("whee-\tlock", "w i:\tl Q k");
result.add("whee-\tzes", "w i:\tz V z");
result.add("whee-\tzing", "w i:\tz I N");
result.add("wheel", "w i: l");
result.add("wheel-\tbar-\trow", "w i: l\tb e@\t@U");
result.add("wheel-\tbar-\trows", "w i: l\tb e@\t@U z");
result.add("wheel-\tbase", "w i: l\tb eI s");
result.add("wheel-\tchair", "w i: l\ttS e@");
result.add("wheel-\tchairs", "w i: l\ttS e@ z");
result.add("wheel-\twright", "w i: l\tr aI t");
result.add("wheeled", "w i: l d");
result.add("wheels", "w i: l z");
result.add("wheeze", "w i: z");
result.add("when", "w e n");
result.add("whence", "w e n s");
result.add("when's", "w e n z");
result.add("wher-\te-\tver", "w e@\te\tv @r");
result.add("wher-\try", "w e@\ti:");
result.add("where", "w e@");
result.add("where-\ta-\tbouts", "w e@\tV\tb aU t s");
result.add("where-\tby", "w e@\tb aI");
result.add("where-\twi-\tthal", "w e@\tw I\tD O: l");
result.add("where'd", "w e@ d");
result.add("where's", "w e@ z");
result.add("whet", "w e t");
result.add("whet-\tstone", "w e t\ts t @U n");
result.add("whet-\tted", "w e\tt V d");
result.add("whew", "w u:");
result.add("whey", "w eI");
result.add("whi-\tgham", "w I\tg V m");
result.add("whi-\tner", "w aI\tn @r");
result.add("whi-\tners", "w aI\tn @r z");
result.add("whi-\tning", "w aI\tn I N");
result.add("whi-\tny", "w aI\tn i:");
result.add("whi-\tstle", "w I\ts V l");
result.add("whi-\tstle-\tblo-\twer", "w I\ts V l\tb l @U\t@r");
result.add("whi-\tstle-\tblo-\twers", "w I\ts V l\tb l @U\t@r z");
result.add("whi-\tstled", "w I\ts V l d");
result.add("whi-\tstles", "w I\ts V l z");
result.add("whi-\tta-\tker", "w I\tt V\tk @r");
result.add("whi-\tte-\tning", "w aI\tt V\tn I N");
result.add("whi-\tted", "w aI\tt V d");
result.add("whi-\tten", "w aI\tt V n");
result.add("whi-\tter", "w aI\tt @r");
result.add("whi-\ttest", "w aI\tt V s t");
result.add("whi-\ttey", "w aI\tt i:");
result.add("whi-\tther", "w I\tD @r");
result.add("whi-\tting", "w aI\tt I N");
result.add("whi-\ttings", "w aI\tt I N z");
result.add("whi-\ttish", "w aI\tt I S");
result.add("whic-\tker", "w I\tk @r");
result.add("which", "w I tS");
result.add("which-\te-\tver", "w I\ttS e\tv @r");
result.add("whiff", "w I f");
result.add("whig", "w I g");
result.add("whigs", "w I g z");
result.add("while", "w aI l");
result.add("whiles", "w aI l z");
result.add("whilst", "w aI l s t");
result.add("whim", "w I m");
result.add("whim-\tpe-\tring", "w I m\tp @r\tI N");
result.add("whim-\tper", "w I m\tp @r");
result.add("whim-\tsi-\tcal", "w I m\tz I\tk V l");
result.add("whim-\tsy", "w I m\ts i:");
result.add("whims", "w I m z");
result.add("whine", "w aI n");
result.add("whines", "w aI n z");
result.add("whip", "w I p");
result.add("whip-\tla-\tshes", "w I p\tl {\tS V z");
result.add("whip-\tlash", "w I p\tl { S");
result.add("whip-\tpa-\tny", "w I\tp V\tn i:");
result.add("whip-\tping", "w I\tp I N");
result.add("whip-\tple", "w I\tp V l");
result.add("whip-\tple's", "w I\tp V l z");
result.add("whip-\tpoor-\twills", "w I\tp @r\tw I l z");
result.add("whip-\tsaw", "w I p\ts O:");
result.add("whip-\tsaw-\ting", "w I p\ts O:\tI N");
result.add("whip-\tsawed", "w I p\ts O: d");
result.add("whipped", "w I p t");
result.add("whips", "w I p s");
result.add("whir-\tley", "w @r\tl i:");
result.add("whir-\tling", "w @r\tl I N");
result.add("whir-\tring", "w @r\tI N");
result.add("whirl", "w @r l");
result.add("whirl-\tpool", "w @r l\tp u: l");
result.add("whirl-\tpools", "w @r l\tp u: l z");
result.add("whirl-\tpool's", "w @r l\tp u: l z");
result.add("whirl-\twind", "w @r l\tw I n d");
result.add("whirled", "w @r l d");
result.add("whis-\tker", "w I s\tk @r");
result.add("whis-\tkers", "w I s\tk @r z");
result.add("whis-\tkey", "w I s\tk i:");
result.add("whis-\tkeys", "w I s\tk i: z");
result.add("whis-\tky", "w I s\tk i:");
result.add("whis-\tpe-\tring", "w I s\tp @r\tI N");
result.add("whis-\tper", "w I s\tp @r");
result.add("whis-\tpered", "w I s\tp @r d");
result.add("whis-\tpers", "w I s\tp @r z");
result.add("whisk", "w I s k");
result.add("whisked", "w I s k t");
result.add("whisks", "w I s k s");
result.add("whist-\tler", "w I s\tl @r");
result.add("whist-\tlers", "w I s\tl @r z");
result.add("whist-\tling", "w I s\tl I N");
result.add("whit", "w I t");
result.add("whit-\tbread", "w I t\tb r e d");
result.add("whit-\tby", "w I t\tb i:");
result.add("whit-\tcher", "w I\ttS @r");
result.add("whit-\tcomb", "w I t\tk V m");
result.add("whit-\tfield", "w I t\tf i: l d");
result.add("whit-\tford", "w I t\tf @r d");
result.add("whit-\tley", "w I t\tl i:");
result.add("whit-\tling", "w I t\tl I N");
result.add("whit-\tlock", "w I t\tl Q k");
result.add("whit-\tlow", "w I t\tl @U");
result.add("whit-\tman", "w I t\tm V n");
result.add("whit-\tman's", "w I t\tm V n z");
result.add("whit-\tmer", "w I t\tm @r");
result.add("whit-\tmire", "w I t\tm aI r");
result.add("whit-\tmore", "w I t\tm O@");
result.add("whit-\tney", "w I t\tn i:");
result.add("whit-\tney's", "w I t\tn i: z");
result.add("whit-\tsett", "w I t\ts e t");
result.add("whit-\tson", "w I t\ts V n");
result.add("whit-\tta-\tker", "w I\tt V\tk @r");
result.add("whit-\tten", "w I\tt V n");
result.add("whit-\tti-\ter", "w I\tt i:\t@r");
result.add("whit-\tting-\tton", "w I\tt I N\tt V n");
result.add("whit-\ttle", "w I\tt V l");
result.add("whit-\ttled", "w I\tt V l d");
result.add("whit-\ttle's", "w I\tt V l z");
result.add("whit-\twell", "w I t\tw e l");
result.add("whit-\tworth", "w I t\tw @r T");
result.add("white", "w aI t");
result.add("white-\tbread", "w aI t\tb r e d");
result.add("white-\tfield", "w aI t\tf i: l d");
result.add("white-\tfish", "w aI t\tf I S");
result.add("white-\tford", "w aI t\tf O@ d");
result.add("white-\thall", "w aI t\th O: l");
result.add("white-\thall's", "w aI t\th O: l z");
result.add("white-\thead", "w aI t\th e d");
result.add("white-\thead's", "w aI t\th e d z");
result.add("white-\thorse", "w aI t\th O@ s");
result.add("white-\thouse", "w aI t\th aU s");
result.add("white-\thurst", "w aI t\th @r s t");
result.add("white-\thurst's", "w aI t\th @r s t");
result.add("white-\tlaw", "w aI t\tl O:");
result.add("white-\tley", "w aI t\tl i:");
result.add("white-\tly", "w aI t\tl i:");
result.add("white-\tner", "w aI t\tn @r");
result.add("white-\tness", "w aI t\tn V s");
result.add("white-\tside", "w aI t\ts aI d");
result.add("white-\tstone", "w aI t\ts t @U n");
result.add("white-\ttail", "w aI t\tt eI l");
result.add("white-\twa-\tter", "w aI t\tw O:\tt @r");
result.add("white-\twa-\tter's", "w aI t\tw O:\tt @r z");
result.add("white-\twash", "w aI t\tw Q S");
result.add("white-\twashed", "w aI t\tw Q S t");
result.add("whites", "w aI t s");
result.add("white's", "w aI t s");
result.add("whitt", "w I t");
result.add("whitt-\tling", "w I t\tl I N");
result.add("whitte-\tmore", "w I t\tm O@");
result.add("whiz", "w I z");
result.add("whiz-\tzer", "w I\tz @r");
result.add("whiz-\tzes", "w I\tz V z");
result.add("whiz-\tzing", "w I\tz I N");
result.add("whizzed", "w I z d");
result.add("who", "h u:");
result.add("who-\tdu-\tnit", "h u:\td V\tn I t");
result.add("who-\tdu-\tnits", "h u:\td V\tn I t s");
result.add("who-\te-\tver", "h u:\te\tv @r");
result.add("who-\te-\tver's", "h u:\te\tv @r z");
result.add("who'-\tre", "h u:\t@r");
result.add("who-\tso-\te-\tver", "h u:\ts @U\te\tv @r");
result.add("whoa", "w @U");
result.add("who'd", "h u: d");
result.add("whol-\tly", "h @U\tl i:");
result.add("whole", "h @U l");
result.add("whole-\thear-\tted", "h @U l\th Q@\tt V d");
result.add("whole-\thear-\tted-\tly", "h @U l\th Q@\tt V d\tl i:");
result.add("whole-\tness", "h @U l\tn V s");
result.add("whole-\tsa-\tler", "h @U l\ts eI\tl @r");
result.add("whole-\tsa-\tlers", "h @U l\ts eI\tl @r z");
result.add("whole-\tsa-\tler's", "h @U l\ts eI\tl @r z");
result.add("whole-\tsa-\tling", "h @U l\ts eI\tl I N");
result.add("whole-\tsale", "h @U l\ts eI l");
result.add("whole-\tsales", "h @U l\ts eI l z");
result.add("whole-\tsome", "h @U l\ts V m");
result.add("whole-\tsome-\tness", "h @U l\ts V m\tn V s");
result.add("wholes", "h @U l z");
result.add("who'll", "h u: l");
result.add("whom", "h u: m");
result.add("whom-\te-\tver", "h u:\tm e\tv @r");
result.add("whom-\tso-\te-\tver", "h u: m\ts @U\te\tv @r");
result.add("whoo-\tpee", "w u:\tp i:");
result.add("whoo-\tpie", "w u:\tp i:");
result.add("whoo-\tping", "w u:\tp I N");
result.add("whoop", "w u: p");
result.add("whooped", "w u: p t");
result.add("whoops", "w u: p s");
result.add("whoosh", "w u: S");
result.add("whop-\tper", "w Q\tp @r");
result.add("whop-\tpers", "w Q\tp @r z");
result.add("whop-\tping", "w Q\tp I N");
result.add("whor-\tton", "h O@\tt V n");
result.add("whore", "h O@");
result.add("whore-\thouse", "h O@\th aU s");
result.add("whores", "h O@ z");
result.add("whorl", "w @r l");
result.add("whorls", "w @r l z");
result.add("who's", "h u: z");
result.add("whose", "h u: z");
result.add("who've", "h u: v");
result.add("why", "w aI");
result.add("why'd", "w aI d");
result.add("whys", "w aI z");
result.add("why's", "w aI z");
result.add("whyte", "w aI t");
result.add("wi-\tatt", "w aI\tV t");
result.add("wi-\tchern", "w I\tk @r n");
result.add("wi-\tchi-\tta", "w I\ttS I\tt O:");
result.add("wi-\tchi-\tta's", "w I\ttS I\tt O: z");
result.add("wi-\tde-\tner", "w I\td i:\tn @r");
result.add("wi-\tde-\tning", "w aI\td V\tn I N");
result.add("wi-\tden", "w aI\td V n");
result.add("wi-\tdened", "w aI\td V n d");
result.add("wi-\tdens", "w aI\td V n z");
result.add("wi-\tder", "w aI\td @r");
result.add("wi-\tdest", "w aI\td V s t");
result.add("wi-\tdo-\twer", "w I\td @U\t@r");
result.add("wi-\tdo-\twers", "w I\td @U\t@r z");
result.add("wi-\tdow", "w I\td @U");
result.add("wi-\tdowed", "w I\td @U d");
result.add("wi-\tdows", "w I\td @U z");
result.add("wi-\tdow's", "w I\td @U z");
result.add("wi-\tleen", "w V\tl i: n");
result.add("wi-\tlen", "w aI\tl V n");
result.add("wi-\tley", "w aI\tl i:");
result.add("wi-\tlin-\tski", "v V\tl I n\ts k i:");
result.add("wi-\tling", "w aI\tl I N");
result.add("wi-\tly", "w aI\tl i:");
result.add("wi-\tna-\tmac", "w I\tn V\tm { k");
result.add("wi-\tna-\tmac's", "w I\tn V\tm { k s");
result.add("wi-\tne-\tries", "w aI\tn @r\ti: z");
result.add("wi-\tne-\try", "w aI\tn @r\ti:");
result.add("wi-\tne-\try's", "w aI\tn @r\ti: z");
result.add("wi-\tner", "w aI\tn @r");
result.add("wi-\tney", "w aI\tn i:");
result.add("wi-\tni-\tfred", "w I\tn I f\tr e d");
result.add("wi-\tning", "w aI\tn I N");
result.add("wi-\tno", "w i:\tn @U");
result.add("wi-\tno-\tgrad", "w I\tn V g\tr { d");
result.add("wi-\tno-\tla", "v I\tn @U\tl V");
result.add("wi-\tno-\tna", "w I\tn V\tn V");
result.add("wi-\tno-\tnah", "w I\tn V\tn V");
result.add("wi-\tnoo-\tski", "w I\tn u: s\tk i:");
result.add("wi-\tnos", "w i:\tn @U s");
result.add("wi-\tper", "w aI\tp @r");
result.add("wi-\tpers", "w aI\tp @r z");
result.add("wi-\tping", "w aI\tp I N");
result.add("wi-\tre", "w aI\t@r");
result.add("wi-\tre-\tles-\ts's", "w aI\t@r\tl V\ts V z");
result.add("wi-\tre-\ttap", "w aI\t@r\tt { p");
result.add("wi-\tre-\ttap-\tping", "w aI\t@r\tt {\tp I N");
result.add("wi-\tre-\ttapped", "w aI\t@r\tt { p t");
result.add("wi-\tred", "w aI\t@r d");
result.add("wi-\tres", "w aI\t@r z");
result.add("wi-\tring", "w aI\tr I N");
result.add("wi-\try", "w I@\ti:");
result.add("wi-\tser", "w aI\tz @r");
result.add("wi-\tsest", "w aI\tz V s t");
result.add("wi-\tsher", "w I\tS @r");
result.add("wi-\tshers", "w I\tS @r z");
result.add("wi-\tshes", "w I\tS V z");
result.add("wi-\tshing", "w I\tS I N");
result.add("wi-\tshy", "w I\tS i:");
result.add("wi-\ttham", "w I\tT V m");
result.add("wi-\tthe-\tring", "w I\tD @r\tI N");
result.add("wi-\tthee", "w I\tT i:");
result.add("wi-\tther", "w I\tD @r");
result.add("wi-\tther-\tspoon", "w I\tD @r s\tp u: n");
result.add("wi-\tthered", "w I\tD @r d");
result.add("wi-\tthers", "w I\tD @r z");
result.add("wi-\tthin", "w V\tD I n");
result.add("wi-\txom", "w I k\ts V m");
result.add("wi-\tzard", "w I\tz @r d");
result.add("wi-\tzard-\try", "w I\tz @r d\tr i:");
result.add("wi-\tzards", "w I\tz @r d z");
result.add("wi-\tzen", "w aI\tz V n");
result.add("wi-\tzened", "w aI\tz V n d");
result.add("wic-\tca", "w I\tk V");
result.add("wic-\tcan", "w I\tk V n");
result.add("wic-\tked", "w I\tk V d");
result.add("wic-\tked-\tly", "w I\tk V d\tl i:");
result.add("wic-\tked-\tness", "w I\tk V d\tn V s");
result.add("wic-\tkens", "w I\tk V n z");
result.add("wic-\tker", "w I\tk @r");
result.add("wic-\tket", "w I\tk V t");
result.add("wic-\tkets", "w I\tk V t s");
result.add("wic-\tkett", "w I\tk e t");
result.add("wic-\tkham", "w I\tk V m");
result.add("wice", "w aI s");
result.add("wich", "w I tS");
result.add("wich-\tman", "w I tS\tm V n");
result.add("wick", "w I k");
result.add("wick-\tliffe", "w I k\tl I f");
result.add("wick-\tman", "w I k\tm V n");
result.add("wickes", "w I k s");
result.add("wicks", "w I k s");
result.add("wid-\tder", "w I\td @r");
result.add("wid-\tdle", "w I\td V l");
result.add("wid-\tdled", "w I\td V l d");
result.add("wid-\tget", "w I\tdZ V t");
result.add("wid-\tgets", "w I\tdZ V t s");
result.add("wide", "w aI d");
result.add("wide-\tbo-\tdy", "w aI d\tb Q\td i:");
result.add("wide-\tly", "w aI d\tl i:");
result.add("wide-\tman", "w aI d\tm V n");
result.add("wide-\tspread", "w aI d\ts p r e d");
result.add("width", "w I d T");
result.add("widths", "w I d T s");
result.add("wie-\tland", "w i:\tl V n d");
result.add("wie-\tner", "w i:\tn @r");
result.add("wie-\tners", "w i:\tn @r z");
result.add("wie-\tsel", "w i:\ts V l");
result.add("wie-\tsen-\tthal", "w i:\ts V n\tT Q l");
result.add("wied", "w i: d");
result.add("wied-\tmann", "w i: d\tm V n");
result.add("wiel-\tded", "w i: l\td V d");
result.add("wiel-\tding", "w i: l\td I N");
result.add("wield", "w i: l d");
result.add("wields", "w i: l d z");
result.add("wien", "w i: n");
result.add("wier", "w I@");
result.add("wiers-\tma", "v I@ s\tm V");
result.add("wies-\tba-\tden", "w i: s\tb Q\td V n");
result.add("wiese", "w i: z");
result.add("wife", "w aI f");
result.add("wife's", "w aI f s");
result.add("wig", "w I g");
result.add("wig-\tg-\tling", "w I\tg V\tl I N");
result.add("wig-\tg-\tly", "w I\tg V\tl i:");
result.add("wig-\tger", "w I\tg @r");
result.add("wig-\tgin", "w I\tg I n");
result.add("wig-\tgins", "w I\tg I n z");
result.add("wig-\tgle", "w I\tg V l");
result.add("wig-\tgles-\tworth", "w I\tg V l\tz w @r T");
result.add("wig-\twam", "w I g\tw Q m");
result.add("wight", "w aI t");
result.add("wight-\tman", "w aI t\tm V n");
result.add("wigs", "w I g z");
result.add("wil", "w I l");
result.add("wil-\tber", "w I l\tb @r");
result.add("wil-\tber-\tforce", "w I l\tb @r\tf O@ s");
result.add("wil-\tbert", "w I l\tb @r t");
result.add("wil-\tbur", "w I l\tb @r");
result.add("wil-\tburn", "w I l\tb @r n");
result.add("wil-\tco-\txon", "w I l\tk Q k\ts V n");
result.add("wil-\tcox", "w I l\tk Q k s");
result.add("wil-\tden", "w aI l\td V n");
result.add("wil-\tder", "w aI l\td @r");
result.add("wil-\tder-\tmuth", "w aI l\td @r\tm u: T");
result.add("wil-\tder-\tness", "w I l\td @r\tn V s");
result.add("wil-\tder's", "w aI l\td @r z");
result.add("wil-\tdest", "w aI l\td V s t");
result.add("wil-\tding", "w aI l\td I N");
result.add("wil-\tdon", "w aI l\td V n");
result.add("wil-\tford", "w I l\tf @r d");
result.add("wil-\tfre-\tda", "w I l\tf r V\td V");
result.add("wil-\tfre-\tdo", "w I l\tf eI\td @U");
result.add("wil-\tfred", "w I l\tf r V d");
result.add("wil-\tfrid", "w I l\tf r I d");
result.add("wil-\tful-\tly", "w I l\tf V\tl i:");
result.add("wil-\thel-\tmi-\tna", "w I l\th e l\tm i:\tn V");
result.add("wil-\thel-\tmine", "w I l\th V l\tm I n");
result.add("wil-\thelm", "w I l\th e l m");
result.add("wil-\thide", "w I l\th aI d");
result.add("wil-\tkens", "w I l\tk V n z");
result.add("wil-\tker-\tson", "w I l\tk @r\ts V n");
result.add("wil-\tkey", "w I l\tk i:");
result.add("wil-\tki-\tson", "w I l\tk I\ts V n");
result.add("wil-\tkie", "w I l\tk i:");
result.add("wil-\tkin", "w I l\tk I n");
result.add("wil-\tkin-\tson", "w I l\tk I n\ts V n");
result.add("wil-\tkin-\tson's", "w I l\tk I n\ts V n z");
result.add("wil-\tkins", "w I l\tk I n z");
result.add("wil-\tla", "w I\tl V");
result.add("wil-\tla-\tbelle", "w I\tl V\tb e l");
result.add("wil-\tla-\tmette", "w V\tl {\tm V t");
result.add("wil-\tla-\tmette's", "w V\tl {\tm V t s");
result.add("wil-\tla-\tmi-\tna", "w I\tl V\tm aI\tn V");
result.add("wil-\tlard", "w I\tl @r d");
result.add("wil-\tlem", "w I\tl V m");
result.add("wil-\tler", "w I\tl @r");
result.add("wil-\tlers", "w I\tl @r z");
result.add("wil-\tlet", "w I\tl e t");
result.add("wil-\tlets", "w I\tl e t s");
result.add("wil-\tlett", "w I\tl e t");
result.add("wil-\tlette", "w V\tl e t");
result.add("wil-\tley", "w I\tl i:");
result.add("wil-\tli", "w I\tl i:");
result.add("wil-\tli-\tford", "w I\tl I\tf @r d");
result.add("wil-\tliam", "w I l\tj V m");
result.add("wil-\tliam-\tsen", "w I l\tj V m\ts V n");
result.add("wil-\tliam-\tson", "w I l\tj V m\ts V n");
result.add("wil-\tliam-\tson's", "w I l\tj V m\ts V n z");
result.add("wil-\tliam-\tsport", "w I l\tj V m\ts p O@ t");
result.add("wil-\tliam-\tstown", "w I l\tj V m\ts t aU n");
result.add("wil-\tliams", "w I l\tj V m z");
result.add("wil-\tliam's", "w I l\tj V m z");
result.add("wil-\tliams-\tburg", "w I l\tj V m\tz b @r g");
result.add("wil-\tlie", "w I\tl i:");
result.add("wil-\tlie's", "w I\tl i: z");
result.add("wil-\tlin-\tger", "w I\tl I\tN @r");
result.add("wil-\tling", "w I\tl I N");
result.add("wil-\tling-\tly", "w I\tl I N\tl i:");
result.add("wil-\tling-\tness", "w I\tl I N\tn V s");
result.add("wil-\tlis", "w I\tl I s");
result.add("wil-\tlis-\tton", "w I\tl I s\tt Q n");
result.add("wil-\tlits", "w I\tl I t s");
result.add("wil-\tlo-\twy", "w I\tl V\tw i:");
result.add("wil-\tlock", "w I\tl V k");
result.add("wil-\tlough-\tby", "w I\tl V\tb i:");
result.add("wil-\tlow", "w I\tl @U");
result.add("wil-\tlows", "w I\tl @U z");
result.add("wil-\tly", "w I\tl i:");
result.add("wil-\tlyard", "w I l\tj Q@ d");
result.add("wil-\tma", "w I l\tm V");
result.add("wil-\tmar", "w I l\tm @r");
result.add("wil-\tmer", "w I l\tm @r");
result.add("wil-\tmette", "w I l\tm e t");
result.add("wil-\tming-\tton", "w I l\tm I N\tt V n");
result.add("wil-\tmore", "w I l\tm O@");
result.add("wil-\tmot", "w I l\tm V t");
result.add("wil-\tmott", "w I l\tm V t");
result.add("wil-\tsey", "w I l\ts i:");
result.add("wil-\tshire", "w I l\tS aI r");
result.add("wil-\tson", "w I l\ts V n");
result.add("wil-\tson's", "w I l\ts V n z");
result.add("wil-\tted", "w I l\tt V d");
result.add("wil-\tting", "w I l\tt I N");
result.add("wil-\tton", "w I l\tt V n");
result.add("wild", "w aI l d");
result.add("wild-\tcard", "w aI l\td k Q@ d");
result.add("wild-\tcat", "w aI l\td k { t");
result.add("wild-\tcat-\tter", "w aI l\td k {\tt @r");
result.add("wild-\tcat-\tters", "w aI l\td k {\tt @r z");
result.add("wild-\tcat-\tting", "w aI l\td k {\tt I N");
result.add("wild-\tcats", "w aI l\td k { t s");
result.add("wild-\tfi-\tre", "w aI l\td f aI\t@r");
result.add("wild-\tfi-\tres", "w aI l\td f aI\t@r z");
result.add("wild-\tflo-\twer", "w aI l\td f l aU\t@r");
result.add("wild-\tflowers", "w aI l\td f l aU r z");
result.add("wild-\tlife", "w aI l\td l aI f");
result.add("wild-\tly", "w aI l\td l i:");
result.add("wild-\tness", "w aI l\td n V s");
result.add("wild-\twood", "w aI l\td w U d");
result.add("wild-\twoods", "w aI l\td w U d z");
result.add("wilde", "w aI l d");
result.add("wilds", "w aI l d z");
result.add("wile", "w aI l");
result.add("wiles", "w aI l z");
result.add("wilk", "w I l k");
result.add("wilkes", "w I l k s");
result.add("wilkes-\tbo-\tro", "w I l\tk s b @r\t@U");
result.add("will", "w I l");
result.add("will-\tcox", "w I l\tk Q k s");
result.add("will-\tful", "w I l\tf V l");
result.add("will-\tful-\tly", "w I l\tf V\tl i:");
result.add("will-\tkie", "w I l\tk i:");
result.add("will-\tman", "w I l\tm V n");
result.add("will-\tner", "w I l\tn @r");
result.add("will-\tpo-\twer", "w I l\tp aU\t@r");
result.add("willed", "w I l d");
result.add("willes", "w aI l z");
result.add("willms", "w I l m z");
result.add("wills", "w I l z");
result.add("will's", "w I l z");
result.add("wil's", "w I l z");
result.add("wilt", "w I l t");
result.add("wilt-\tsey", "w I l\tt s i:");
result.add("wilt-\tshire", "w I l\ttS aI r");
result.add("wilts", "w I l t s");
result.add("wiltz", "w I l t s");
result.add("wim-\tber-\tley", "w I m\tb @r\tl i:");
result.add("wim-\tble-\tdon", "w I m\tb V l\td V n");
result.add("wim-\tpi-\tness", "w I m\tp i:\tn V s");
result.add("wim-\tpy", "w I m\tp i:");
result.add("wim-\tsatt", "w I m\ts V t");
result.add("wimp", "w I m p");
result.add("wimps", "w I m p s");
result.add("win", "w I n");
result.add("win-\tber-\try", "w I n\tb e@\ti:");
result.add("win-\tchell", "w I n\ttS V l");
result.add("win-\tchell's", "w I n\ttS V l z");
result.add("win-\tches-\tter", "w I n\ttS e s\tt @r");
result.add("win-\tcing", "w I n\ts I N");
result.add("win-\tded", "w I n\td V d");
result.add("win-\tder", "w I n\td @r");
result.add("win-\tders", "w I n\td @r z");
result.add("win-\tdham", "w I n\td V m");
result.add("win-\tdhoek", "w I n\td h @U k");
result.add("win-\tding", "w aI n\td I N");
result.add("win-\tdle", "w I n\td V l");
result.add("win-\tdom", "w I n\td V m");
result.add("win-\tdow", "w I n\td @U");
result.add("win-\tdow-\tless", "w I n\td @U\tl V s");
result.add("win-\tdow-\tpane", "w I n\td @U\tp eI n");
result.add("win-\tdow-\tpanes", "w I n\td @U\tp eI n z");
result.add("win-\tdowed", "w I n\td @U d");
result.add("win-\tdows", "w I n\td @U z");
result.add("win-\tdup", "w aI n\td V p");
result.add("win-\tdy", "w I n\td i:");
result.add("win-\tfield", "w I n\tf i: l d");
result.add("win-\tfred", "w I n\tf r V d");
result.add("win-\tfree", "w I n\tf r i:");
result.add("win-\tfrey", "w I n\tf r i:");
result.add("win-\tfrid", "w I n\tf r I d");
result.add("win-\tgate", "w I n\tg eI t");
result.add("win-\tger", "w I\tN @r");
result.add("win-\tgers", "w I\tN @r z");
result.add("win-\tging", "w I\tN I N");
result.add("win-\tgo", "w i: N\tg @U");
result.add("win-\tkel", "w I N\tk V l");
result.add("win-\tkel-\tman", "w I N\tk V l\tm V n");
result.add("win-\tker", "w I N\tk @r");
result.add("win-\tking", "w I N\tk I N");
result.add("win-\tkle", "w I N\tk V l");
result.add("win-\tkles", "w I N\tk V l z");
result.add("win-\tna-\tble", "w I\tn V\tb V l");
result.add("win-\tne-\tba-\tgo", "w I\tn V\tb eI\tg @U");
result.add("win-\tne-\tba-\tgo's", "w I\tn V\tb eI\tg @U z");
result.add("win-\tner", "w I\tn @r");
result.add("win-\tners", "w I\tn @r z");
result.add("win-\tner's", "w I\tn @r z");
result.add("win-\tnet-\tka", "w I\tn e t\tk V");
result.add("win-\tnett", "w I\tn e t");
result.add("win-\tni-\tpeg", "w I\tn I\tp e g");
result.add("win-\tnick", "w I\tn I k");
result.add("win-\tnie", "w I\tn i:");
result.add("win-\tnin-\tgest", "w I\tn I\tN V s t");
result.add("win-\tning", "w I\tn I N");
result.add("win-\tnings", "w I\tn I N z");
result.add("win-\tno-\twing", "w I\tn @U\tI N");
result.add("win-\tnow", "w I\tn @U");
result.add("win-\tnowed", "w I\tn @U d");
result.add("win-\tny", "w I\tn i:");
result.add("win-\tsett", "w I n\ts e t");
result.add("win-\tsome", "w I n\ts V m");
result.add("win-\tson", "w I n\ts V n");
result.add("win-\tsor", "w I n\tz @r");
result.add("win-\tston", "w I n\ts t V n");
result.add("win-\tte-\trize", "w I n\tt @r\taI z");
result.add("win-\tte-\trized", "w I n\tt @r\taI z d");
result.add("win-\tter", "w I n\tt @r");
result.add("win-\tter-\tbourne", "w I n\tt @r\tb O@ n");
result.add("win-\tter-\tthur", "w I n\tt @r\tT @r");
result.add("win-\tter-\ttime", "w I n\tt @r\tt aI m");
result.add("win-\ttered", "w I n\tt @r d");
result.add("win-\tters", "w I n\tt @r z");
result.add("win-\tter's", "w I n\tt @r z");
result.add("win-\tther", "w I n\tT @r");
result.add("win-\ttle", "w I n\tt V l");
result.add("win-\tton", "w I n\tt V n");
result.add("win-\ttry", "w I n\tt r i:");
result.add("wince", "w I n s");
result.add("winced", "w I n s t");
result.add("winch", "w I n tS");
result.add("wind", "w I n d");
result.add("wind-\tchill", "w I n\td tS I l");
result.add("wind-\tfall", "w I n\td f O: l");
result.add("wind-\tfalls", "w I n\td f O: l z");
result.add("wind-\tlass", "w I n\td l V s");
result.add("wind-\tmill", "w I n\td m I l");
result.add("wind-\tmills", "w I n\td m I l z");
result.add("wind-\tshield", "w I n\td S i: l d");
result.add("wind-\tshields", "w I n\td S i: l d z");
result.add("wind-\tsor", "w I n\tz @r");
result.add("wind-\tsor's", "w I n\tz @r z");
result.add("wind-\tstorm", "w I n\td s t O@ m");
result.add("wind-\tswept", "w I n\ts w e p t");
result.add("wind-\tward", "w I n\td w @r d");
result.add("winds", "w I n d z");
result.add("wind's", "w I n d z");
result.add("wine", "w aI n");
result.add("wined", "w aI n d");
result.add("wines", "w aI n z");
result.add("wine's", "w aI n z");
result.add("wing", "w I N");
result.add("wing-\tback", "w I N\tb { k");
result.add("wing-\tlike", "w I N\tl aI k");
result.add("wing-\tman", "w I N\tm V n");
result.add("winge", "w I n dZ");
result.add("winged", "w I N d");
result.add("wings", "w I N z");
result.add("wing's", "w I N z");
result.add("wings-\tpan", "w I N\ts p { n");
result.add("wink", "w I N k");
result.add("wink-\tler", "w I N\tk l @r");
result.add("winked", "w I N k t");
result.add("winks", "w I N k s");
result.add("winn", "w I n");
result.add("winne", "w I n");
result.add("wins", "w I n z");
result.add("win's", "w I n z");
result.add("wins-\tlow", "w I n\tz l @U");
result.add("wint", "w I n t");
result.add("winth-\trop", "w I n\tT r V p");
result.add("winth-\trop's", "w I n\tT r V p s");
result.add("wipe", "w aI p");
result.add("wipe-\tout", "w aI\tp aU t");
result.add("wiped", "w aI p t");
result.add("wipes", "w aI p s");
result.add("wire-\tless", "w aI r\tl V s");
result.add("wire-\tman", "w aI r\tm V n");
result.add("wire-\ttaps", "w aI r\tt { p s");
result.add("wirth", "w @r T");
result.add("wirtz", "w @r t s");
result.add("wis", "w I s");
result.add("wis-\tby", "w I s\tb i:");
result.add("wis-\tcon-\tsin", "w I s\tk Q n\ts I n");
result.add("wis-\tcon-\tsin's", "w I s\tk Q n\ts I n z");
result.add("wis-\tdom", "w I z\td V m");
result.add("wis-\tner", "w I s\tn @r");
result.add("wis-\tpy", "w I s\tp i:");
result.add("wis-\tsel", "w I\ts V l");
result.add("wis-\tsing", "w I\ts I N");
result.add("wise", "w aI z");
result.add("wise-\tcrac-\tking", "w aI z\tk r {\tk I N");
result.add("wise-\tcrack", "w aI z\tk r { k");
result.add("wise-\tcracks", "w aI z\tk r { k s");
result.add("wise-\tguy", "w aI z\tg aI");
result.add("wise-\tly", "w aI z\tl i:");
result.add("wise-\tman", "w aI z\tm V n");
result.add("wised", "w aI z d");
result.add("wish", "w I S");
result.add("wish-\tbone", "w I S\tb @U n");
result.add("wish-\tful", "w I S\tf V l");
result.add("wish-\tful-\tly", "w I S\tf V\tl i:");
result.add("wished", "w I S t");
result.add("wisp", "w I s p");
result.add("wiss", "w I s");
result.add("wiss-\tler", "w I s\tl @r");
result.add("wist", "w I s t");
result.add("wist-\tful", "w I s\tt f V l");
result.add("wist-\tful-\tly", "w I s\tt f V\tl i:");
result.add("wist-\tful-\tness", "w I s\tt f V l\tn V s");
result.add("wit", "w I t");
result.add("wit-\tcher", "w I\ttS @r");
result.add("wit-\tches", "w I\ttS V z");
result.add("wit-\tching", "w I\ttS I N");
result.add("wit-\tch's", "w I\ttS V z");
result.add("wit-\tchy", "w I\ttS i:");
result.add("wit-\tkin", "w I t\tk I n");
result.add("wit-\tless", "w I t\tl V s");
result.add("wit-\tmer", "w I t\tm @r");
result.add("wit-\tnes-\tses", "w I t\tn V\ts V z");
result.add("wit-\tnes-\tsing", "w I t\tn V\ts I N");
result.add("wit-\tnes-\ts's", "w I t\tn V\ts V z");
result.add("wit-\tness", "w I t\tn V s");
result.add("wit-\tnessed", "w I t\tn V s t");
result.add("wit-\tte-\tkind", "w I\tt I\tk I n d");
result.add("wit-\tted", "w I\tt V d");
result.add("wit-\tten", "w I\tt V n");
result.add("wit-\tten-\tberg", "w I\tt V n\tb @r g");
result.add("wit-\tten-\tburg", "w I\tt V n\tb @r g");
result.add("wit-\tter", "w I\tt @r");
result.add("wit-\tters", "w I\tt @r z");
result.add("wit-\tter's", "w I\tt @r z");
result.add("wit-\tti-\tly", "w I\tt I\tl i:");
result.add("wit-\tting", "w I\tt I N");
result.add("wit-\tting-\tly", "w I\tt I N\tl i:");
result.add("wit-\tty", "w I\tt i:");
result.add("wit-\twa-\tter-\tsrand", "w I t\tw O:\tt @r s\tr { n d");
result.add("witch", "w I tS");
result.add("witch-\tcraft", "w I tS\tk r { f t");
result.add("witch-\thunt", "w I tS\th V n t");
result.add("with", "w I D");
result.add("with-\tdra-\twal", "w V D\td r O:\tV l");
result.add("with-\tdra-\twals", "w I T\td r O:\tV l z");
result.add("with-\tdra-\twing", "w I T\td r O:\tI N");
result.add("with-\tdraw", "w V D\td r O:");
result.add("with-\tdrawn", "w I T\td r O: n");
result.add("with-\tdraws", "w V D\td r O: z");
result.add("with-\tdrew", "w I T\td r u:");
result.add("with-\theld", "w I T\th e l d");
result.add("with-\thol-\tding", "w I T\th @U l\td I N");
result.add("with-\thold", "w I T\th @U l d");
result.add("with-\tholds", "w I T\th @U l d z");
result.add("with-\tout", "w I\tT aU t");
result.add("with-\tstan-\tding", "w I T\ts t { n\td I N");
result.add("with-\tstand", "w I T\ts t { n d");
result.add("with-\tstands", "w I T\ts t { n d z");
result.add("with-\tstood", "w I T\ts t U d");
result.add("wits", "w I t s");
result.add("wit's", "w I t s");
result.add("witt", "w I t");
result.add("witt-\tman", "w I t\tm V n");
result.add("witt-\tmann", "w I t\tm V n");
result.add("witte", "w I t");
result.add("wives", "w aI v z");
result.add("wives'", "w aI v z");
result.add("wix-\tted", "w I k\ts t V d");
result.add("wiz", "w I z");
result.add("wo", "w @U");
result.add("wo-\tbe-\tgon", "w @U\tb V\tg Q n");
result.add("wo-\tburn", "w u:\tb @r n");
result.add("wo-\tgan", "w @U\tg V n");
result.add("wo-\tken", "w @U\tk V n");
result.add("wo-\tma-\tni-\tzer", "w U\tm V\tn aI\tz @r");
result.add("wo-\tma-\tni-\tzing", "w U\tm V\tn aI\tz I N");
result.add("wo-\tma-\tnize", "w U\tm V\tn aI z");
result.add("wo-\tmack", "w @U\tm { k");
result.add("wo-\tman", "w U\tm V n");
result.add("wo-\tman-\thood", "w U\tm V n\th U d");
result.add("wo-\tman's", "w U\tm V n z");
result.add("wo-\tmen", "w I\tm V n");
result.add("wo-\tmen's", "w I\tm V n z");
result.add("wo-\ttan", "w @U\tt V n");
result.add("wo-\tven", "w @U\tv V n");
result.add("wo-\twing", "w aU\tI N");
result.add("wob-\tb-\tling", "w Q\tb V\tl I N");
result.add("wob-\tb-\tly", "w Q\tb V\tl i:");
result.add("wob-\tble", "w Q\tb V l");
result.add("wob-\tbled", "w Q\tb V l d");
result.add("woe", "w @U");
result.add("woe-\tbe-\tgone", "w @U\tb I\tg O: n");
result.add("woe-\tful", "w @U\tf V l");
result.add("woe-\tful-\tly", "w @U\tf V\tl i:");
result.add("woes", "w @U z");
result.add("woj-\tcik", "w OI\ttS I k");
result.add("wok", "w Q k");
result.add("woke", "w @U k");
result.add("wol-\tcott", "w @U l\tk V t");
result.add("wol-\tfen-\tden", "w U l\tf e n\td V n");
result.add("wol-\tfer", "w U l\tf @r");
result.add("wol-\tford", "w @U l\tf @r d");
result.add("wol-\tfram", "w U l\tf r { m");
result.add("wol-\tgast", "w @U l\tg V s t");
result.add("wol-\tpert", "w @U l\tp @r t");
result.add("wol-\tsey", "w @U l\ts i:");
result.add("wol-\tter", "w @U l\tt @r");
result.add("wol-\tve-\trine", "w U l\tv @r\ti: n");
result.add("wol-\tve-\trine's", "w U l\tv @r\ti: n z");
result.add("wol-\tver-\tton", "w U l\tv @r\tt V n");
result.add("wold", "w @U l d");
result.add("wolf", "w U l f");
result.add("wolf-\tgang", "w U l\tf g { N");
result.add("wolf-\tgram", "w U l\tf g r { m");
result.add("wolf-\tman", "w U l\tf m V n");
result.add("wolf-\tson", "w U l\tf s V n");
result.add("wolfe", "w U l f");
result.add("wolfe's", "w U l f s");
result.add("wolff", "w U l f");
result.add("wolf's", "w U l f s");
result.add("wolfs-\tburg", "w U l\tf s b @r g");
result.add("wolk", "w @U k");
result.add("woll", "w Q l");
result.add("wols-\tky", "v @U l\ts k i:");
result.add("wolves", "w U l v z");
result.add("wom-\tbat", "w Q m\tb { t");
result.add("wom-\tbats", "w Q m\tb { t s");
result.add("wom-\tble", "w Q m\tb V l");
result.add("wom-\tbles", "w Q m\tb V l z");
result.add("womb", "w u: m");
result.add("won", "w V n");
result.add("won-\tde-\tring", "w V n\td @r\tI N");
result.add("won-\tder", "w V n\td @r");
result.add("won-\tder-\tful", "w V n\td @r\tf V l");
result.add("won-\tder-\tful-\tly", "w V n\td @r\tf V\tl i:");
result.add("won-\tder-\tful-\tness", "w V n\td @r\tf V l\tn V s");
result.add("won-\tder-\tland", "w V n\td @r\tl { n d");
result.add("won-\tder-\tment", "w V n\td @r\tm V n t");
result.add("won-\tdered", "w V n\td @r d");
result.add("won-\tders", "w V n\td @r z");
result.add("won-\tder's", "w V n\td @r z");
result.add("wond-\trous", "w V n\td r V s");
result.add("wong", "w O: N");
result.add("wong's", "w O: N z");
result.add("wonk", "w Q n k");
result.add("wonks", "w Q n k s");
result.add("wont", "w @U n t");
result.add("won't", "w @U n t");
result.add("woo", "w u:");
result.add("woo-\tdall", "w U\td O: l");
result.add("woo-\tdard", "w U\td @r d");
result.add("woo-\tded", "w U\td V d");
result.add("woo-\tden", "w U\td V n");
result.add("woo-\tdie", "w U\td i:");
result.add("woo-\tding", "w U\td I N");
result.add("woo-\tdy", "w U\td i:");
result.add("woo-\tdy's", "w U\td i: z");
result.add("woo-\ting", "w u:\tI N");
result.add("woo-\tlen", "w U\tl V n");
result.add("woo-\tlens", "w U\tl V n z");
result.add("woo-\tly", "w U\tl i:");
result.add("woo-\tmer", "w u:\tm @r");
result.add("woo-\ttan", "w u:\tt V n");
result.add("woo-\tten", "w u:\tt V n");
result.add("woo-\tton", "w u:\tt V n");
result.add("woo-\ttten", "w u:\tt V n");
result.add("woo-\tzy", "w u:\tz i:");
result.add("wood", "w U d");
result.add("wood-\tber-\try", "w U d\tb e@\ti:");
result.add("wood-\tbridge", "w U d\tb r I dZ");
result.add("wood-\tbu-\try", "w U d\tb e@\ti:");
result.add("wood-\tburn", "w U d\tb @r n");
result.add("wood-\tcar-\tver", "w U d\tk Q@\tv @r");
result.add("wood-\tcar-\tvers", "w U d\tk Q@\tv @r z");
result.add("wood-\tchip", "w U d\ttS I p");
result.add("wood-\tchips", "w U d\ttS I p s");
result.add("wood-\tchuck", "w U d\ttS V k");
result.add("wood-\tcock", "w U d\tk Q k");
result.add("wood-\tfield", "w U d\tf i: l d");
result.add("wood-\tford", "w U d\tf @r d");
result.add("wood-\thead", "w U d\th e d");
result.add("wood-\thouse", "w U d\th aU s");
result.add("wood-\thull", "w U d\th V l");
result.add("wood-\tland", "w U d\tl { n d");
result.add("wood-\tlands", "w U d\tl { n d z");
result.add("wood-\tley", "w U d\tl i:");
result.add("wood-\tlot", "w U d\tl Q t");
result.add("wood-\tman", "w U d\tm V n");
result.add("wood-\tpec-\tker", "w U d\tp e\tk @r");
result.add("wood-\tpec-\tkers", "w U d\tp e\tk @r z");
result.add("wood-\trick", "w U d\tr I k");
result.add("wood-\tring", "w U d\tr I N");
result.add("wood-\troof", "w U d\tr u: f");
result.add("wood-\trow", "w U d\tr @U");
result.add("wood-\truff", "w U d\tr V f");
result.add("wood-\tshed", "w U d\tS e d");
result.add("wood-\tside", "w U d\ts aI d");
result.add("wood-\tson", "w U d\ts V n");
result.add("wood-\tstock", "w U d\ts t Q k");
result.add("wood-\tward", "w U d\tw O@ d");
result.add("wood-\tward's", "w U d\tw @r d z");
result.add("wood-\twind", "w U d\tw I n d");
result.add("wood-\twinds", "w U d\tw I n d z");
result.add("wood-\twor-\tker", "w U d\tw @r\tk @r");
result.add("wood-\twor-\tkers", "w U d\tw @r\tk @r z");
result.add("wood-\twor-\tking", "w U d\tw @r\tk I N");
result.add("wood-\twork", "w U d\tw @r k");
result.add("wood-\tworth", "w U d\tw @r T");
result.add("wood-\tyard", "w U d\tj Q@ d");
result.add("woodc-\tliff", "w U d\tk l I f");
result.add("woods", "w U d z");
result.add("wood's", "w U d z");
result.add("woods-\tman", "w U d\tz m { n");
result.add("woods-\tmen", "w U d\tz m V n");
result.add("wooed", "w u: d");
result.add("woof", "w u: f");
result.add("woof-\tter", "w u: f\tt @r");
result.add("wool", "w U l");
result.add("wool-\tdridge", "w U l\td r I dZ");
result.add("wool-\tford", "w U l\tf @r d");
result.add("wool-\tlen", "w U\tl V n");
result.add("wool-\tley", "w U\tl i:");
result.add("wool-\tly", "w U\tl i:");
result.add("wool-\tman", "w U l\tm V n");
result.add("wool-\tsey", "w U l\tz i:");
result.add("wool-\tson", "w U l\ts V n");
result.add("wool-\twine", "w U l\tw aI n");
result.add("wool-\tworth", "w U l\tw @r T");
result.add("wool-\tworth's", "w U l\tw @r T s");
result.add("woolf", "w U l f");
result.add("wools", "w U l z");
result.add("woos", "w u: z");
result.add("woo's", "w u: z");
result.add("woos-\tter", "w u: s\tt @r");
result.add("wop", "w Q p");
result.add("wops", "w Q p s");
result.add("wor", "w O@");
result.add("wor-\tded", "w @r\td V d");
result.add("wor-\tden", "w @r\td V n");
result.add("wor-\tding", "w @r\td I N");
result.add("wor-\tdy", "w @r\td i:");
result.add("wor-\tka-\tble", "w @r\tk V\tb V l");
result.add("wor-\tka-\tday", "w @r\tk V\td eI");
result.add("wor-\tka-\tho-\tlic", "w @r\tk V\th Q\tl I k");
result.add("wor-\tka-\tho-\tlics", "w @r\tk V\th Q\tl I k s");
result.add("wor-\tker", "w @r\tk @r");
result.add("wor-\tkers", "w @r\tk @r z");
result.add("wor-\tker's", "w @r\tk @r z");
result.add("wor-\tkers'", "w @r\tk @r z");
result.add("wor-\tking", "w @r\tk I N");
result.add("wor-\tkings", "w @r\tk I N z");
result.add("wor-\tland", "w @r\tl V n d");
result.add("wor-\tley", "w @r\tl i:");
result.add("wor-\trel", "w @r\tr V l");
result.add("wor-\trell", "w @r\tr V l");
result.add("wor-\tri-\ter", "w @r\ti:\t@r");
result.add("wor-\tri-\ters", "w @r\ti:\t@r z");
result.add("wor-\tri-\tsome", "w @r\ti:\ts V m");
result.add("wor-\tried", "w @r\ti: d");
result.add("wor-\tries", "w @r\ti: z");
result.add("wor-\try", "w @r\ti:");
result.add("wor-\try-\ting", "w @r\ti:\tI N");
result.add("wor-\tse-\tning", "w @r\ts V\tn I N");
result.add("wor-\tsen", "w @r\ts V n");
result.add("wor-\tsened", "w @r\ts V n d");
result.add("wor-\tsens", "w @r\ts V n z");
result.add("wor-\tsham", "w @r\tS V m");
result.add("wor-\tshi-\tper", "w @r\tS I\tp @r");
result.add("wor-\tshi-\tpers", "w @r\tS I\tp @r z");
result.add("wor-\tship", "w @r\tS I p");
result.add("wor-\tship-\tful", "w @r\tS I p\tf V l");
result.add("wor-\tship-\tping", "w @r\tS I\tp I N");
result.add("wor-\tshiped", "w @r\tS I p t");
result.add("wor-\tshipped", "w @r\tS I p t");
result.add("wor-\tships", "w @r\tS I p s");
result.add("wor-\ttham", "w @r\tT V m");
result.add("wor-\tthi-\ter", "w @r\tD i:\t@r");
result.add("wor-\tthi-\test", "w @r\tD i:\tV s t");
result.add("wor-\tthi-\tness", "w @r\tD i:\tn V s");
result.add("wor-\tthies", "w @r\tD i: z");
result.add("wor-\tthing", "w @r\tT I N");
result.add("wor-\tthing-\tton", "w @r\tD I N\tt V n");
result.add("wor-\tthy", "w @r\tD i:");
result.add("wor-\tton", "w @r\tt V n");
result.add("worce-\tster", "w U s\tt @r");
result.add("word", "w @r d");
result.add("word-\tless", "w @r d\tl V s");
result.add("word-\tper-\tfect", "w @r d\tp @r\tf e k t");
result.add("word-\tsmith", "w @r d\ts m I T");
result.add("word-\tstar", "w @r d\ts t Q@");
result.add("words", "w @r d z");
result.add("word's", "w @r d z");
result.add("words-\tworth", "w @r d\tz w @r T");
result.add("wore", "w O@");
result.add("work", "w @r k");
result.add("work-\tbench", "w @r k\tb e n tS");
result.add("work-\tday", "w @r k\td eI");
result.add("work-\tdays", "w @r k\td eI z");
result.add("work-\tfare", "w @r k\tf e@");
result.add("work-\tforce", "w @r k\tf O@ s");
result.add("work-\tgroup", "w @r k\tg r u: p");
result.add("work-\tgroups", "w @r k\tg r u: p s");
result.add("work-\thor-\tses", "w @r k\th O@\ts V z");
result.add("work-\thorse", "w @r k\th O@ s");
result.add("work-\tload", "w @r k\tl @U d");
result.add("work-\tloads", "w @r k\tl @U d z");
result.add("work-\tman", "w @r k\tm V n");
result.add("work-\tman-\tlike", "w @r k\tm { n\tl aI k");
result.add("work-\tman-\tship", "w @r k\tm V n\tS I p");
result.add("work-\tman's", "w @r k\tm V n z");
result.add("work-\tmen", "w @r k\tm e n");
result.add("work-\tmen's", "w @r k\tm V n z");
result.add("work-\tout", "w @r\tk aU t");
result.add("work-\touts", "w @r\tk aU t s");
result.add("work-\tpla-\tces", "w @r k\tp l eI\ts V z");
result.add("work-\tplace", "w @r k\tp l eI s");
result.add("work-\troom", "w @r k\tr u: m");
result.add("work-\tsheet", "w @r k\tS i: t");
result.add("work-\tsheets", "w @r k\tS i: t s");
result.add("work-\tshop", "w @r k\tS Q p");
result.add("work-\tshops", "w @r k\tS Q p s");
result.add("work-\tsta-\ttion", "w @r k\ts t eI\tS V n");
result.add("work-\tsta-\ttions", "w @r k\ts t eI\tS V n z");
result.add("work-\tweek", "w @r k\tw i: k");
result.add("work-\tweeks", "w @r k\tw i: k s");
result.add("worked", "w @r k t");
result.add("works", "w @r k s");
result.add("work's", "w @r k s");
result.add("worl-\tders", "w @r l\td @r z");
result.add("world", "w @r l d");
result.add("world-\tli-\tness", "w @r l\td l i:\tn V s");
result.add("world-\tly", "w @r l\td l i:");
result.add("world-\twide", "w @r l\td w aI d");
result.add("worlds", "w @r l d z");
result.add("world's", "w @r l d z");
result.add("worm", "w @r m");
result.add("worm-\tlike", "w @r m\tl aI k");
result.add("worm-\twood", "w @r m\tw U d");
result.add("worms", "w @r m z");
result.add("worm's", "w @r m z");
result.add("worn", "w O@ n");
result.add("wors-\tley", "w @r s\tl i:");
result.add("wors-\tted", "w @r s\tt V d");
result.add("worse", "w @r s");
result.add("worst", "w @r s t");
result.add("worth", "w @r T");
result.add("worth-\tless", "w @r T\tl V s");
result.add("worth-\twhile", "w @r T\tw aI l");
result.add("worths", "w @r T s");
result.add("worth's", "w @r T s");
result.add("worts", "w @r t s");
result.add("wot-\tton", "w Q\tt V n");
result.add("wouk", "w u: k");
result.add("woul-\tdn't", "w U\td V n t");
result.add("woul-\td've", "w U\td V v");
result.add("would", "w U d");
result.add("woulfe", "w aU l f");
result.add("woun-\tded", "w u: n\td V d");
result.add("woun-\tding", "w u: n\td I N");
result.add("wound", "w aU n d");
result.add("wounds", "w u: n d z");
result.add("wove", "w @U v");
result.add("wow", "w aU");
result.add("wowed", "w aU d");
result.add("wows", "w aU z");
result.add("woy", "w OI");
result.add("woz-\tni-\tak", "v Q z\tn i:\t{ k");
result.add("wra-\tpup", "r {\tp V p");
result.add("wrac-\tking", "r {\tk I N");
result.add("wrack", "r { k");
result.add("wracked", "r { k t");
result.add("wran-\tg-\tler", "r { N\tg V\tl @r");
result.add("wran-\tg-\tlers", "r { N\tg V\tl @r z");
result.add("wran-\tg-\tling", "r { N\tg V\tl I N");
result.add("wran-\tgell", "r { N\tg V l");
result.add("wran-\tgle", "r { N\tg V l");
result.add("wran-\tgled", "r { N\tg V l d");
result.add("wran-\tgles", "r { N\tg V l z");
result.add("wrap", "r { p");
result.add("wrap-\tper", "r {\tp @r");
result.add("wrap-\tpers", "r {\tp @r z");
result.add("wrap-\tping", "r {\tp I N");
result.add("wrapped", "r { p t");
result.add("wraps", "r { p s");
result.add("wrath", "r { T");
result.add("wray", "r eI");
result.add("wre-\tst-\tler", "r e\ts V\tl @r");
result.add("wre-\tstle", "r e\ts V l");
result.add("wre-\tstled", "r e\ts V l d");
result.add("wre-\tstles", "r e\ts V l z");
result.add("wre-\ttched", "r e\ttS V d");
result.add("wre-\ttched-\tly", "r e\ttS V d\tl i:");
result.add("wrea-\tking", "r i:\tk I N");
result.add("wreak", "r i: k");
result.add("wreaked", "r i: k t");
result.add("wreaks", "r i: k s");
result.add("wreath", "r i: T");
result.add("wreaths", "r i: T s");
result.add("wrec-\tkage", "r e\tk V dZ");
result.add("wrec-\tker", "r e\tk @r");
result.add("wrec-\tking", "r e\tk I N");
result.add("wreck", "r e k");
result.add("wrecked", "r e k t");
result.add("wrecks", "r e k s");
result.add("wren", "r e n");
result.add("wren-\tches", "r e n\ttS V z");
result.add("wren-\tching", "r e n\ttS I N");
result.add("wrench", "r e n tS");
result.add("wrenched", "r e n tS t");
result.add("wres-\tted", "r e s\tt V d");
result.add("wres-\tting", "r e s\tt I N");
result.add("wres-\ttling", "r e s\tl I N");
result.add("wrest", "r e s t");
result.add("wrest-\tlers", "r e s\tl @r z");
result.add("wri-\tter", "r aI\tt @r");
result.add("wri-\tters", "r aI\tt @r z");
result.add("wri-\tter's", "r aI\tt @r z");
result.add("wri-\tthing", "r aI\tD I N");
result.add("wri-\tting", "r aI\tt I N");
result.add("wri-\ttings", "r aI\tt I N z");
result.add("wrig-\tgle", "r I\tg V l");
result.add("wrig-\tley", "r I g\tl i:");
result.add("wrig-\tley's", "r I g\tl i: z");
result.add("wright", "r aI t");
result.add("wright-\tson", "r aI t\ts V n");
result.add("wrights", "r aI t s");
result.add("wright's", "r aI t s");
result.add("wrin-\tger", "r I\tN @r");
result.add("wrin-\tging", "r I\tN I N");
result.add("wrin-\tk-\tling", "r I N\tk V\tl I N");
result.add("wrin-\tkle", "r I N\tk V l");
result.add("wrin-\tkled", "r I N\tk V l d");
result.add("wrin-\tkles", "r I N\tk V l z");
result.add("wring", "r I N");
result.add("wrist", "r I s t");
result.add("wrist-\twat-\tches", "r I s\tt w Q\ttS V z");
result.add("wrist-\twatch", "r I s\tt w Q tS");
result.add("wrists", "r I s t s");
result.add("writ", "r I t");
result.add("writ-\tten", "r I\tt V n");
result.add("write", "r aI t");
result.add("write-\tdown", "r aI t\td aU n");
result.add("write-\toff", "r aI\tt O: f");
result.add("write-\toffs", "r aI\tt O: f s");
result.add("writes", "r aI t s");
result.add("writhe", "r I T");
result.add("writs", "r I t s");
result.add("wroc-\tlaw", "r Q k\tl O:");
result.add("wrong", "r O: N");
result.add("wrong-\tdo-\ter", "r O: N\td u:\t@r");
result.add("wrong-\tdo-\ters", "r O: N\td u:\t@r z");
result.add("wrong-\tdo-\ting", "r O: N\td u:\tI N");
result.add("wrong-\tdo-\tings", "r O: N\td u:\tI N z");
result.add("wrong-\tful", "r O: N\tf V l");
result.add("wrong-\tful-\tly", "r O: N\tf V\tl i:");
result.add("wrong-\thea-\tded", "r O: N\th e\td V d");
result.add("wrong-\tly", "r O: N\tl i:");
result.add("wronged", "r O: N d");
result.add("wrongs", "r O: N z");
result.add("wrote", "r @U t");
result.add("wrought", "r O: t");
result.add("wrung", "r V N");
result.add("wry", "r aI");
result.add("wry-\tly", "r aI\tl i:");
result.add("wry-\tness", "r aI\tn V s");
result.add("wu", "w u:");
result.add("wu-\than", "w u:\tV n");
result.add("wu-\tthe-\tring", "w V\tD @r\tI N");
result.add("wulf", "w U l f");
result.add("wun-\tder", "w V n\td @r");
result.add("wun-\tder-\tkind", "w V n\td @r\tk aI n d");
result.add("wun-\tder-\tlich", "w V n\td @r\tl I k");
result.add("wur-\tlit-\tzer", "w @r\tl I t\ts @r");
result.add("wur-\tzel", "w @r\tz V l");
result.add("wurs-\tter", "w @r s\tt @r");
result.add("wurst", "w @r s t");
result.add("wurtz", "w @r t s");
result.add("wu's", "w u: z");
result.add("wuss", "w V s");
result.add("wy", "w eI");
result.add("wy-\tatt", "w aI\tV t");
result.add("wy-\tatt's", "w aI\tV t s");
result.add("wy-\tcoff", "w I\tk O: f");
result.add("wy-\teth", "w aI\te T");
result.add("wy-\tkoff", "w I\tk O: f");
result.add("wy-\tler", "w aI\tl @r");
result.add("wy-\tlie", "w aI\tl i:");
result.add("wy-\tly", "w aI\tl i:");
result.add("wy-\tman", "w aI\tm V n");
result.add("wy-\tmer", "w aI\tm @r");
result.add("wy-\tmore", "w aI\tm O@");
result.add("wy-\tner", "w aI\tn @r");
result.add("wy-\tno-\tna", "w aI\tn @U\tn V");
result.add("wy-\to-\tming", "w aI\t@U\tm I N");
result.add("wy-\to-\tming's", "w aI\t@U\tm I N z");
result.add("wyc-\tkoff", "w I\tk O: f");
result.add("wye", "w aI");
result.add("wyke", "w aI k");
result.add("wyl-\tma", "w aI l\tm V");
result.add("wylde", "w aI l d");
result.add("wyle", "w aI l");
result.add("wyles", "w aI l z");
result.add("wyn-\tdham", "w I n\td V m");
result.add("wyne", "w aI n");
result.add("wynn", "w I n");
result.add("wynne", "w I n");
result.add("wynns", "w I n z");
result.add("wynn's", "w I n z");
result.add("wyss", "w I s");
result.add("x", "e k s");
result.add("x-\ters", "e k\ts e@ z");
result.add("x-\tray", "e k\ts r eI");
result.add("x-\trays", "e k\ts r eI z");
result.add("x'-\ts", "e k\ts V z");
result.add("xa-\tnax", "z {\tn { k s");
result.add("xa-\tvi-\te-\tra", "I g\tz eI v\tj e@\tV");
result.add("xa-\tvier", "z eI v\tj @r");
result.add("xan-\ttippe", "z { n\tt I p");
result.add("xanthe", "z { n D");
result.add("xe-\tbec", "z e\tb V k");
result.add("xe-\tna", "z i:\tn V");
result.add("xe-\tni-\ta", "z i:\tn i:\tV");
result.add("xe-\tno-\tpho-\tbi-\ta", "z e\tn V\tf @U\tb i:\tV");
result.add("xe-\tno-\tpho-\tbic", "z e\tn V\tf Q\tb I k");
result.add("xe-\tno-\tphon", "z e\tn V\tf V n");
result.add("xe-\tnon", "z i:\tn Q n");
result.add("xe-\tnos", "z i:\tn @U z");
result.add("xe-\tri-\tscape", "z e@\tI s\tk eI p");
result.add("xe-\tro-\txes", "z I@\tQ k\ts V z");
result.add("xe-\tro-\txing", "z I@\tQ k\ts I N");
result.add("xe-\tro-\tx's", "z I@\tQ k\ts V z");
result.add("xe-\trox", "z I@\tQ k s");
result.add("xe-\troxed", "z I@\tQ k s t");
result.add("xer-\txes", "z @r k\ts i: z");
result.add("xi", "S i:");
result.add("xi-\ta-\tmen", "z i:\teI\tm V n");
result.add("xian", "z j Q n");
result.add("xiao-\tping", "Z aU\tp I N");
result.add("xiao-\tping's", "Z aU\tp I N z");
result.add("xie", "z i:");
result.add("xin-\thu-\ta", "z I n\th j u:\tV");
result.add("xing", "S I N");
result.add("xu", "z u:");
result.add("xy-\tli-\ta", "z aI\tl i:\tV");
result.add("xy-\tli-\tna", "z aI\tl I\tn V");
result.add("xy-\tlo-\tphone", "z aI\tl V\tf @U n");
result.add("xy-\tlon", "z aI\tl V n");
result.add("y", "w aI");
result.add("y-\tvette", "I\tv e t");
result.add("y-\tvonne", "I\tv Q n");
result.add("y-\tvonne's", "I\tv Q n z");
result.add("y.", "w aI");
result.add("ya", "j Q");
result.add("ya-\tger", "j eI\tdZ @r");
result.add("ya-\tgi", "j Q\tg i:");
result.add("ya-\thi", "j Q\th i:");
result.add("ya-\thoo", "j Q\th u:");
result.add("ya-\thoos", "j Q\th u: z");
result.add("ya-\tki-\tma", "j {\tk I\tm V");
result.add("ya-\tma-\tga-\tta", "j Q\tm Q\tg Q\tt V");
result.add("ya-\tma-\tha", "j Q\tm Q\th Q");
result.add("ya-\tma-\tni", "j Q\tm Q\tn i:");
result.add("ya-\tma-\tshi-\tta", "j Q\tm Q\tS i:\tt V");
result.add("ya-\tma-\tto", "j Q\tm Q\tt @U");
result.add("ya-\tma-\tu-\tchi", "j Q\tm Q\tu:\ttS i:");
result.add("ya-\tma-\tu-\tchi's", "j Q\tm Q\tu:\ttS i: z");
result.add("ya-\tno-\tma-\tmi", "j {\tn @U\tm {\tm i:");
result.add("ya-\tron", "j e@\tV n");
result.add("ya-\tsu-\to", "j Q\ts u:\t@U");
result.add("yab-\tlon", "j { b\tl V n");
result.add("yach-\tter", "j Q\tt @r");
result.add("yach-\tters", "j Q\tt @r z");
result.add("yach-\tting", "j Q\tt I N");
result.add("yach-\tting's", "j Q\tt I N z");
result.add("yacht", "j Q t");
result.add("yachts", "j Q t s");
result.add("yachts-\tman", "j Q t\ts m V n");
result.add("yack", "j { k");
result.add("yae-\tger", "j i:\tdZ @r");
result.add("yah", "j Q");
result.add("yah-\tweh", "j Q\tw e");
result.add("yak", "j { k");
result.add("yal-\tta", "j O: l\tt V");
result.add("yale", "j eI l");
result.add("yale's", "j eI l z");
result.add("y'all", "j O: l");
result.add("yam", "j { m");
result.add("yams", "j { m z");
result.add("yan", "j { n");
result.add("yan-\tcey", "j { n\ts i:");
result.add("yan-\tcy", "j { n\ts i:");
result.add("yan-\tkee", "j { N\tk i:");
result.add("yan-\tkees", "j { N\tk i: z");
result.add("yan-\tkee's", "j { N\tk i: z");
result.add("yan-\tking", "j { N\tk I N");
result.add("yan-\ttis", "j { n\tt I s");
result.add("yang", "j { N");
result.add("yangt-\tze", "j { N\tk t s i:");
result.add("yank", "j { N k");
result.add("yanked", "j { N k t");
result.add("yanks", "j { N k s");
result.add("yao", "j aU");
result.add("yao-\tbang", "j aU\tb { N");
result.add("yap", "j { p");
result.add("yapp", "j { p");
result.add("yaps", "j { p s");
result.add("yar-\tbo-\trough", "j Q@\tb @r\t@U");
result.add("yar-\tdage", "j Q@\td I dZ");
result.add("yar-\tder", "j Q@\td @r");
result.add("yar-\tmul-\tke", "j Q@\tm V l\tk V");
result.add("yar-\tmul-\tkes", "j Q@\tm V l\tk V s");
result.add("yar-\tnell", "j Q@\tn V l");
result.add("yar-\trow", "j e@\t@U");
result.add("yar-\twood", "j Q@\tw U d");
result.add("yard", "j Q@ d");
result.add("yard-\tley", "j Q@ d\tl i:");
result.add("yard-\tstick", "j Q@ d\ts t I k");
result.add("yard-\tsticks", "j Q@ d\ts t I k s");
result.add("yards", "j Q@ d z");
result.add("yard's", "j Q@ d z");
result.add("yarn", "j Q@ n");
result.add("yarns", "j Q@ n z");
result.add("yas-\tmin", "j { z\tm I n");
result.add("yas-\tmine", "j { z\tm I n");
result.add("yates", "j eI t s");
result.add("yau-\tpon", "j O:\tp V n");
result.add("yau-\tpons", "j O:\tp V n z");
result.add("yaw", "j O:");
result.add("yaw-\tner", "j O:\tn @r");
result.add("yaw-\tning", "j O:\tn I N");
result.add("yawn", "j O: n");
result.add("yawned", "j O: n d");
result.add("yawns", "j O: n z");
result.add("yay", "j eI");
result.add("ye", "j i:");
result.add("ye-\thu-\tdi", "j eI\th u:\td i:");
result.add("ye-\tka-\tte-\trin-\tburg", "j e\tk {\tt @r\ti: n\tb V r g");
result.add("ye-\tle-\tna", "j e\tl I\tn V");
result.add("ye-\tme-\tni", "j e\tm V\tn i:");
result.add("ye-\tmen", "j e\tm V n");
result.add("ye-\tmen's", "j e\tm V n z");
result.add("ye-\to", "j i:\t@U");
result.add("ye-\tre-\tvan", "j e@\tV\tv V n");
result.add("ye-\tses", "j e\ts V z");
result.add("ye-\tshi-\tva", "j I\tS i:\tv V");
result.add("ye-\tvette", "j I\tv e t");
result.add("yea", "j eI");
result.add("yea-\tger", "j eI\tg @r");
result.add("yea-\trend", "j I@\te n d");
result.add("yea-\tton", "j i:\tt V n");
result.add("yeah", "j {");
result.add("year", "j I@");
result.add("year-\tbook", "j I@\tb U k");
result.add("year-\tbooks", "j I@\tb U k s");
result.add("year-\tend", "j I@\te n d");
result.add("year-\tgain", "j I\tg eI n");
result.add("year-\tling", "j I\tl I N");
result.add("year-\tlings", "j I\tl I N z");
result.add("year-\tlong", "j I@\tl O: N");
result.add("year-\tly", "j I@\tl i:");
result.add("year-\tning", "j @r\tn I N");
result.add("year-\tnings", "j @r\tn I N z");
result.add("year-\twood", "j I@\tw U d");
result.add("yearn", "j @r n");
result.add("yearned", "j @r n d");
result.add("yearns", "j @r n z");
result.add("years", "j I@ z");
result.add("year's", "j I@ z");
result.add("years'", "j I@ z");
result.add("yeas", "j eI z");
result.add("yeast", "j i: s t");
result.add("yeasts", "j i: s t s");
result.add("yeats", "j eI t s");
result.add("yee", "j i:");
result.add("yeh", "j e");
result.add("yel-\tling", "j e\tl I N");
result.add("yel-\tlo-\twer", "j e\tl @U\t@r");
result.add("yel-\tlo-\twest", "j e\tl @U\tV s t");
result.add("yel-\tlo-\twing", "j e\tl @U\tI N");
result.add("yel-\tlo-\twish", "j e\tl @U\tI S");
result.add("yel-\tlow", "j e\tl @U");
result.add("yel-\tlow-\tknife", "j e\tl @U\tn aI f");
result.add("yel-\tlow-\tstone", "j e\tl @U s\tt @U n");
result.add("yel-\tlow-\tstone's", "j e\tl @U s\tt @U n z");
result.add("yel-\tlows", "j e\tl @U z");
result.add("yell", "j e l");
result.add("yelled", "j e l d");
result.add("yells", "j e l z");
result.add("yelt-\tsin", "j e l\tt s I n");
result.add("yen", "j e n");
result.add("yen-\tder", "j e n\td @r");
result.add("yen-\ttl", "j e n\tt V l");
result.add("yen's", "j e n z");
result.add("yeo-\tman", "j @U\tm V n");
result.add("yep", "j e p");
result.add("yer-\tkes", "j @r\tk i: z");
result.add("yer-\txa", "j @r k\ts V");
result.add("yes", "j e s");
result.add("yes-\tter-\tday", "j e s\tt @r\td eI");
result.add("yes-\tter-\tdays", "j e s\tt @r\td eI z");
result.add("yes-\tter-\tday's", "j e s\tt @r\td eI z");
result.add("yes-\tter-\tyear", "j e s\tt @r\tj I@");
result.add("yet", "j e t");
result.add("yet-\tta", "j e\tt V");
result.add("yet-\tter", "j e\tt @r");
result.add("yett", "j e t");
result.add("yeung", "j u: N");
result.add("yev-\ttu-\tshen-\tko", "j e v\tt I\tS e N\tk @U");
result.add("yew", "j u:");
result.add("yew's", "j u: z");
result.add("yi", "j i:");
result.add("yid-\tdish", "j I\td I S");
result.add("yiel-\tded", "j i: l\td V d");
result.add("yiel-\tding", "j i: l\td I N");
result.add("yield", "j i: l d");
result.add("yields", "j i: l d z");
result.add("yim", "j I m");
result.add("yin", "j I n");
result.add("yip", "j I p");
result.add("yip-\tpee", "j I\tp i:");
result.add("ynez", "j n e z");
result.add("yo", "j @U");
result.add("yo-\tde-\tling", "j @U\td V\tl I N");
result.add("yo-\tdel", "j @U\td V l");
result.add("yo-\tder", "j @U\td @r");
result.add("yo-\tga", "j @U\tg V");
result.add("yo-\tgi", "j @U\tg i:");
result.add("yo-\tgurt", "j @U\tg @r t");
result.add("yo-\tho", "j @U\th @U");
result.add("yo-\tkel", "j @U\tk e l");
result.add("yo-\tko", "j @U\tk @U");
result.add("yo-\tko-\tha-\tma", "j @U\tk V\th Q\tm V");
result.add("yo-\tko-\tya-\tma", "j @U\tk @U\tj Q\tm V");
result.add("yo-\tkum", "j @U\tk V m");
result.add("yo-\tla", "j @U\tl V");
result.add("yo-\tlan-\tda", "j @U\tl Q n\td V");
result.add("yo-\tlande", "j @U\tl V n d");
result.add("yo-\tna", "j @U\tn V");
result.add("yo-\tse-\tmi-\tte", "j @U\ts e\tm I\tt i:");
result.add("yo-\tshi", "j @U\tS i:");
result.add("yo-\tshi-\to", "j @U\tS i:\t@U");
result.add("yo-\tyo", "j @U\tj @U");
result.add("yo-\tyos", "j @U\tj @U z");
result.add("yoa-\tkum", "j @U\tk V m");
result.add("yoe", "j @U");
result.add("yoke", "j @U k");
result.add("yoked", "j @U k t");
result.add("yokes", "j @U k s");
result.add("yolk", "j @U k");
result.add("yolks", "j @U k s");
result.add("yom", "j Q m");
result.add("yon", "j Q n");
result.add("yon-\tder", "j Q n\td @r");
result.add("yon-\tker", "j Q N\tk @r");
result.add("yon-\tkers", "j Q N\tk @r z");
result.add("yong", "j O: N");
result.add("yoo", "j u:");
result.add("yor-\tker", "j O@\tk @r");
result.add("yor-\tkers", "j O@\tk @r z");
result.add("yor-\tker's", "j O@\tk @r z");
result.add("yore", "j O@");
result.add("york", "j O@ k");
result.add("york-\tshire", "j O@ k\tS @r");
result.add("york-\ttown", "j O@ k\tt aU n");
result.add("york-\ttown's", "j O@ k\tt aU n z");
result.add("yorke", "j O@ k");
result.add("yorks", "j O@ k s");
result.add("york's", "j O@ k s");
result.add("yost", "j @U s t");
result.add("you", "j u:");
result.add("you'd", "j u: d");
result.add("you'll", "j u: l");
result.add("youn-\tger", "j V N\tg @r");
result.add("youn-\tgers", "j V N\tg @r z");
result.add("youn-\tgest", "j V N\tg V s t");
result.add("youn-\tker", "j V N\tk @r");
result.add("youn-\tkers", "j V N\tk @r z");
result.add("young", "j V N");
result.add("young-\tlove", "j V N\tl V v");
result.add("young-\tman", "j V N\tm { n");
result.add("young-\tster", "j V N\ts t @r");
result.add("young-\tsters", "j V N\ts t @r z");
result.add("young-\tster's", "j V N\ts t @r z");
result.add("youngs", "j V N z");
result.add("young's", "j V N z");
result.add("youngs-\ttown", "j V N\tz t aU n");
result.add("your", "j O@");
result.add("your-\tself", "j @r\ts e l f");
result.add("your-\tselves", "j U@\ts e l v z");
result.add("you're", "j U@");
result.add("yours", "j U@ z");
result.add("youse", "j aU s");
result.add("youth", "j u: T");
result.add("youth-\tful", "j u: T\tf V l");
result.add("youths", "j u: D z");
result.add("youth's", "j u: T s");
result.add("you've", "j u: v");
result.add("yow", "j aU");
result.add("yoy", "j OI");
result.add("yp-\tsi-\tlan-\tti", "I p\ts I\tl { n\tt i:");
result.add("yq-\tuem", "i: k\tw V m");
result.add("y's", "w aI z");
result.add("ytt-\tri-\tum", "I t\tr i:\tV m");
result.add("yu", "j u:");
result.add("yu-\tan", "j u:\tQ n");
result.add("yu-\tan's", "j u:\tQ n z");
result.add("yu-\tba", "j u:\tb V");
result.add("yu-\tca-\ttan", "j u:\tk V\tt { n");
result.add("yu-\tcai-\tpa", "j u:\tk aI\tp V");
result.add("yu-\tgo", "j u:\tg @U");
result.add("yu-\tgo's", "j u:\tg @U z");
result.add("yu-\tgos-\tla-\tvi-\ta", "j u:\tg @U s\tl Q\tv i:\tV");
result.add("yu-\tgos-\tla-\tvi-\tan", "j u:\tg @U s\tl Q\tv i:\tV n");
result.add("yu-\tgos-\tla-\tvi-\ta's", "j u:\tg @U s\tl Q\tv i:\tV z");
result.add("yu-\tgos-\tlav", "j u:\tg @U s\tl Q v");
result.add("yu-\tgos-\tlavs", "j u:\tg @U s\tl { v z");
result.add("yu-\thas", "j u:\th V z");
result.add("yu-\tki-\to", "j u:\tk i:\t@U");
result.add("yu-\tko", "j u:\tk @U");
result.add("yu-\tkon", "j u:\tk Q n");
result.add("yu-\tma", "j u:\tm V");
result.add("yu-\tri", "j U@\ti:");
result.add("yuc-\tca", "j V\tk V");
result.add("yuc-\tky", "j V\tk i:");
result.add("yuck", "j V k");
result.add("yue", "j u:");
result.add("yuille", "j u: l");
result.add("yuk", "j V k");
result.add("yuks", "j V k s");
result.add("yul", "j V l");
result.add("yule", "j u: l");
result.add("yule-\ttide", "j u: l\tt aI d");
result.add("yum", "j V m");
result.add("yum-\tmies", "j V\tm i: z");
result.add("yum-\tmy", "j V\tm i:");
result.add("yun", "j V n");
result.add("yun-\tker", "j V N\tk @r");
result.add("yung", "j V N");
result.add("yup", "j V p");
result.add("yup-\tpi-\tfied", "j V\tp I\tf aI d");
result.add("yup-\tpi-\tfy", "j V\tp I\tf aI");
result.add("yup-\tpie", "j V\tp i:");
result.add("yup-\tpies", "j V\tp i: z");
result.add("yurt", "j U@ t");
result.add("yu's", "j u: z");
result.add("yves", "i: v");
result.add("z", "z i:");
result.add("za-\tca-\tri-\tas", "z Q\tk Q@\ti:\tV z");
result.add("za-\tcek", "z Q\ttS e k");
result.add("za-\tcha-\tri-\tah", "z {\tk @r\taI\tV");
result.add("za-\tcha-\tri-\tas", "z {\tk @r\taI\tV s");
result.add("za-\tcha-\try", "z {\tk @r\ti:");
result.add("za-\tchar", "z V\tk Q@");
result.add("za-\tche-\try", "z {\tk @r\ti:");
result.add("za-\tchow", "z Q\tk @U");
result.add("za-\tdar", "z eI\td Q@");
result.add("za-\tdoc", "z Q\td V k");
result.add("za-\tdok", "z Q\td V k");
result.add("za-\tgreb", "z Q g\tr e b");
result.add("za-\tgreb's", "z Q g\tr e b z");
result.add("za-\thir", "z V\th I@");
result.add("za-\ti-\tri-\tan", "z aI\tI@\ti:\tV n");
result.add("za-\ti-\tri-\tans", "z aI\tI@\ti:\tV n z");
result.add("za-\tle-\tski", "z V\tl e s\tk i:");
result.add("za-\tman", "z eI\tm V n");
result.add("za-\tmo-\tra", "z V\tm O@\tV");
result.add("za-\tne-\tta", "z Q\tn e\tt V");
result.add("za-\tnel-\tla", "z V\tn e\tl V");
result.add("za-\tni-\test", "z eI\tn i:\tV s t");
result.add("za-\tno-\tni", "z Q\tn @U\tn i:");
result.add("za-\tnu", "z Q\tn u:");
result.add("za-\tnuck", "z {\tn V k");
result.add("za-\tny", "z eI\tn i:");
result.add("za-\tpa-\tta", "z Q\tp Q\tt V");
result.add("za-\tra", "z {\tr V");
result.add("za-\tra-\tgo-\tza", "z Q@\tQ\tg @U\tz V");
result.add("za-\trah", "z {\tr V");
result.add("za-\trem-\tski", "z @r\te s\tk i:");
result.add("za-\tri-\ta", "z Q@\ti:\tV");
result.add("za-\tva-\tla", "z Q\tv Q\tl V");
result.add("zac-\tca-\tri-\ta", "z Q\tk Q@\ti:\tV");
result.add("zach", "z { k");
result.add("zack", "z { k");
result.add("zacks", "z { k s");
result.add("zack's", "z { k s");
result.add("zaf-\ttig", "z { f\tt I g");
result.add("zag", "z { g");
result.add("zagged", "z { g d");
result.add("zags", "z { g z");
result.add("zai-\tba-\ttsu", "z eI\tb { t\ts u:");
result.add("zai-\tre", "z aI\tI@");
result.add("zai-\tre-\tan", "z aI\tI@\tV n");
result.add("zai-\tre-\tans", "z aI\tI@\tV n z");
result.add("zai-\tre-\tan's", "z aI\tI@\tV n z");
result.add("zai-\tre's", "z aI\tI@ z");
result.add("zai-\ttech", "z eI\tt e k");
result.add("zaid", "z eI d");
result.add("zak", "z { k");
result.add("zal-\tman", "z Q l\tm V n");
result.add("zam-\tbi-\ta", "z { m\tb i:\tV");
result.add("zam-\tbi-\tan", "z { m\tb i:\tV n");
result.add("zam-\tbi-\ta's", "z { m\tb i:\tV z");
result.add("zam-\tbo", "z { m\tb @U");
result.add("zam-\tboan-\tga", "z { m\tb @U N\tg V");
result.add("zam-\tpi-\tno", "z Q m\tp i:\tn @U");
result.add("zan-\tder", "z { n\td @r");
result.add("zan-\tders", "z { n\td @r z");
result.add("zan-\tdra", "z { n\td r V");
result.add("zan-\ttac", "z { n\tt { k");
result.add("zan-\tzi-\tbar", "z { n\tz I\tb Q@");
result.add("zandt", "z { n t");
result.add("zane", "z eI n");
result.add("zant", "z { n t");
result.add("zap", "z { p");
result.add("zap-\tpa", "z {\tp V");
result.add("zap-\tpa's", "z {\tp V z");
result.add("zap-\tping", "z {\tp I N");
result.add("zapped", "z { p t");
result.add("zaps", "z { p s");
result.add("zared", "z e@ d");
result.add("zas-\tlow", "z Q s\tl @U");
result.add("ze", "z i:");
result.add("ze-\tbu-\tlon", "z i:\tb V\tl V n");
result.add("ze-\tde-\tki-\tah", "z e\td V\tk aI\tV");
result.add("ze-\tdong", "z eI\td O: N");
result.add("ze-\tlaz-\tny", "z V\tl Q z\tn i:");
result.add("ze-\tlos", "z i:\tl @U z");
result.add("ze-\tlotes", "z e\tl V t s");
result.add("ze-\tna", "z i:\tn V");
result.add("ze-\tnai-\tda", "z V\tn eI\td V");
result.add("ze-\tnas", "z i:\tn V z");
result.add("ze-\tni-\ta", "z eI\tn i:\tV");
result.add("ze-\tnith", "z i:\tn I T");
result.add("ze-\tnith's", "z i:\tn I T s");
result.add("ze-\tno", "z eI\tn @U");
result.add("ze-\tno-\tbi-\ta", "z V\tn @U\tb i:\tV");
result.add("ze-\tro", "z I@\t@U");
result.add("ze-\tro-\ting", "z i:\tr @U\tI N");
result.add("ze-\troed", "z I@\t@U d");
result.add("ze-\troes", "z I@\t@U z");
result.add("ze-\tros", "z I@\t@U z");
result.add("ze-\tro's", "z I@\t@U z");
result.add("ze-\tta", "z eI\tt V");
result.add("zea", "z i:");
result.add("zea-\tlan-\tder", "z i:\tl V n\td @r");
result.add("zea-\tlan-\tders", "z i:\tl V n\td @r z");
result.add("zea-\tland", "z i:\tl V n d");
result.add("zea-\tland's", "z i:\tl V n d z");
result.add("zea-\tlot", "z e\tl V t");
result.add("zea-\tlot-\try", "z e\tl V t\tr i:");
result.add("zea-\tlots", "z e\tl V t s");
result.add("zea-\tlous", "z e\tl V s");
result.add("zea-\tlous-\tly", "z i:\tl V s\tl i:");
result.add("zeal", "z i: l");
result.add("zeb-\tra", "z i: b\tr V");
result.add("zeb-\tras", "z i: b\tr V z");
result.add("zech", "z e k");
result.add("zed", "z e d");
result.add("zee", "z i:");
result.add("zee-\tbrug-\tge", "z i: b\tr u:\tg i:");
result.add("zee-\tland", "z i:\tl V n d");
result.add("zee-\tman", "z i:\tm V n");
result.add("zef-\tfi-\trel-\tli", "z e\tf I\tr e\tl i:");
result.add("zeh-\tner", "z e\tn @r");
result.add("zei-\tg-\tler", "z aI\tg V\tl @r");
result.add("zei-\tger", "z aI\tg @r");
result.add("zei-\tler", "z aI\tl @r");
result.add("zei-\tt-\tler", "z aI\tt V\tl @r");
result.add("zeid-\tman", "z aI d\tm V n");
result.add("zeiss", "z aI s");
result.add("zeit-\tgeist", "th s aI t\tg aI s t");
result.add("zeke", "z i: k");
result.add("zel", "z e l");
result.add("zel-\tda", "z e l\td V");
result.add("zel-\tler-\tbach", "z e\tl @r\tb Q k");
result.add("zel-\tma", "z e l\tm V");
result.add("zell", "z e l");
result.add("zell-\tner", "z e l\tn @r");
result.add("zelle", "z e l");
result.add("zen", "z e n");
result.add("zen-\tda", "z e n\td V");
result.add("zen-\tger", "z i: n\tdZ @r");
result.add("zens", "z e n z");
result.add("zent-\tner", "z e n\tt n @r");
result.add("zep-\tpe-\tlin", "z e\tp V\tl V n");
result.add("zer-\tli-\tna", "z @r\tl i:\tn V");
result.add("zest", "z e s t");
result.add("zest-\tful", "z e s\tt f V l");
result.add("zeus", "z u: s");
result.add("zhang", "Z { N");
result.add("zhi-\tva-\tgo", "Z I\tv Q\tg @U");
result.add("zhiv-\tkov", "Z I v\tk Q v");
result.add("zhou", "z u:");
result.add("zi-\ta", "z i:\tV");
result.add("zi-\ta's", "z i:\tV z");
result.add("zi-\tma", "z i:\tm V");
result.add("zi-\to-\tni-\tsm", "z aI\tV\tn I\tz V m");
result.add("zi-\to-\tnist", "z aI\tV\tn I s t");
result.add("zi-\to-\tnists", "z aI\tV\tn I s t s");
result.add("zi-\ton", "z aI\tV n");
result.add("zi-\tons", "z aI\tV n z");
result.add("zi-\tta", "z i:\tt V");
result.add("zi-\tther", "z I\tD @r");
result.add("zi-\tthers", "z I\tD @r z");
result.add("zie-\tger", "z i:\tg @r");
result.add("zieg-\tler", "z i: g\tl @r");
result.add("ziff", "z I f");
result.add("ziff's", "z I f s");
result.add("zig", "z I g");
result.add("zig-\tgu-\trat", "z I\tg @r\t{ t");
result.add("zig-\tgu-\trats", "z I\tg @r\t{ t s");
result.add("zig-\tzag", "z I g\tz { g");
result.add("zig-\tzag-\tging", "z I g\tz {\tg I N");
result.add("zig-\tzagged", "z I g\tz { g d");
result.add("zig-\tzags", "z I g\tz { g z");
result.add("zil-\tber", "z I l\tb @r");
result.add("zil-\tla", "z I\tl V");
result.add("zil-\tlah", "z I\tl V");
result.add("zil-\tlio-\tnaire", "z I l\tj V\tn e@");
result.add("zil-\tlion", "z I l\tj V n");
result.add("zil-\tlions", "z I l\tj V n z");
result.add("zil-\tvi-\ta", "z I l\tv i:\tV");
result.add("zilch", "z I l tS");
result.add("zill", "z I l");
result.add("zim", "z I m");
result.add("zim-\tba-\tlist", "z I m\tb V\tl I s t");
result.add("zim-\tbab-\twe", "z I m\tb Q b\tw eI");
result.add("zim-\tbab-\twe-\tan", "z I m\tb Q b\tw i:\tV n");
result.add("zim-\tbab-\twe's", "z I m\tb Q b\tw eI z");
result.add("zim-\tmer", "z I\tm @r");
result.add("zim-\tmer-\tman", "z I\tm @r\tm V n");
result.add("zim-\tmer-\tmann", "z I\tm @r\tm V n");
result.add("zim-\tmers", "z I\tm @r z");
result.add("zin-\tder", "z I n\td @r");
result.add("zin-\tfan-\tdel", "z I n\tf V n\td e l");
result.add("zin-\tga-\tle", "z I N\tg Q\tl i:");
result.add("zin-\tga-\tro", "z I N\tg Q@\t@U");
result.add("zin-\tger", "z I\tN @r");
result.add("zin-\tman", "z I n\tm V n");
result.add("zin-\tni-\ta", "z I\tn i:\tV");
result.add("zin-\tni-\tas", "z I\tn i:\tV z");
result.add("zinc", "z I N k");
result.add("zinck", "z I N k");
result.add("zine", "z aI n");
result.add("zines", "z aI n z");
result.add("zing", "z I N");
result.add("zingg", "z I N g");
result.add("zink", "z I N k");
result.add("zinke", "z I N k");
result.add("zinn", "z I n");
result.add("zins", "z I n z");
result.add("zip", "z I p");
result.add("zip-\tless", "z I p\tl V s");
result.add("zip-\tpe-\tring", "z I\tp @r\tI N");
result.add("zip-\tper", "z I\tp @r");
result.add("zip-\tpered", "z I\tp @r d");
result.add("zip-\tpers", "z I\tp @r z");
result.add("zip-\tping", "z I\tp I N");
result.add("zip-\tpo", "z I\tp @U");
result.add("zip-\tpo-\tra", "z i:\tp O@\tV");
result.add("zip-\tpy", "z I\tp i:");
result.add("zipped", "z I p t");
result.add("zips", "z I p s");
result.add("zir-\tco-\tni-\tum", "z @r\tk @U\tn i:\tV m");
result.add("zir-\tco-\tni-\tums", "z @r\tk @U\tn i:\tV m z");
result.add("zir-\tcon", "z @r\tk V n");
result.add("zir-\tcons", "z @r\tk Q n z");
result.add("zir-\tkle", "z @r\tk V l");
result.add("zis-\tka", "z I s\tk V");
result.add("ziv", "z I v");
result.add("zlo-\tty", "z l O:\tt i:");
result.add("zlo-\ttys", "z l O:\tt i: z");
result.add("zo-\tcor", "z @U\tk @r");
result.add("zo-\tdi-\tac", "z @U\td i:\t{ k");
result.add("zo-\te", "z @U\ti:");
result.add("zo-\tla", "z @U\tl V");
result.add("zo-\tloft", "z Q\tl Q f t");
result.add("zo-\tna", "z @U\tn V");
result.add("zo-\tning", "z @U\tn I N");
result.add("zo-\to-\tlo-\tgist", "z @U\tQ\tl V\tdZ V s t");
result.add("zo-\to-\tlo-\tgy", "z @U\tQ\tl V\tdZ i:");
result.add("zo-\tra", "z O@\tV");
result.add("zo-\tra-\tna", "z O@\t{\tn V");
result.add("zo-\trah", "z O@\tV");
result.add("zo-\tri-\tna", "z O@\ti:\tn V");
result.add("zo-\tri-\tne", "z O@\ti:\tn i:");
result.add("zo-\tvi-\trax", "z @U\tv I@\t{ k s");
result.add("zob-\trist", "z Q b\tr I s t");
result.add("zoel-\tler", "z @U\tl @r");
result.add("zoel-\tlick", "z @U\tl I k");
result.add("zol-\tler", "z Q\tl @r");
result.add("zoll", "z Q l");
result.add("zoll-\tner", "z Q l\tn @r");
result.add("zom-\tbie", "z Q m\tb i:");
result.add("zom-\tbies", "z Q m\tb i: z");
result.add("zone", "z @U n");
result.add("zoned", "z @U n d");
result.add("zones", "z @U n z");
result.add("zoo", "z u:");
result.add("zoo-\tlo-\tgi-\tcal", "z u:\tl Q\tdZ I\tk V l");
result.add("zoo-\tming", "z u:\tm I N");
result.add("zoom", "z u: m");
result.add("zoomed", "z u: m d");
result.add("zooms", "z u: m z");
result.add("zoos", "z u: z");
result.add("zoo's", "z u: z");
result.add("zor-\tro", "z O@\t@U");
result.add("zorn", "z O@ n");
result.add("zort-\tman", "z O@ t\tm V n");
result.add("zos-\tter", "z Q s\tt @r");
result.add("z's", "z i: z");
result.add("zsa", "Z Q");
result.add("zsa-\tzsa", "Z Q\tZ Q");
result.add("zu-\tker-\tman", "z u:\tk @r\tm V n");
result.add("zu-\tlu", "z u:\tl u:");
result.add("zu-\tlus", "z u:\tl u: z");
result.add("zu-\tni", "z u:\tn i:");
result.add("zu-\tpan", "z u:\tp V n");
result.add("zu-\trek", "z U@\te k");
result.add("zu-\trich", "z U@\tI k");
result.add("zu-\trich's", "z U@\tI k s");
result.add("zu-\tza-\tna", "z u:\tz Q\tn V");
result.add("zuc-\tca-\tro", "z u:\tk Q@\t@U");
result.add("zuc-\tchi-\tni", "z u:\tk i:\tn i:");
result.add("zuc-\tco", "z u:\tk @U");
result.add("zuc-\tker", "z V\tk @r");
result.add("zuc-\tker-\tman", "z V\tk @r\tm V n");
result.add("zuc-\tker-\tman's", "z V\tk @r\tm V n z");
result.add("zuc-\tker's", "z V\tk @r z");
result.add("zug", "z V g");
result.add("zug's", "z V g z");
result.add("zul-\tlo", "z u:\tl @U");
result.add("zum-\tstein", "z V m\ts t i: n");
result.add("zum-\twalt", "z V m\tw V l t");
result.add("zurn", "z @r n");
result.add("zwart", "z w O@ t");
result.add("zweig", "z w aI g");
result.add("zwic-\tky", "z w I\tk i:");
result.add("zwick", "z w I k");
result.add("zwie-\tbel", "z w i:\tb V l");
result.add("zy-\tde-\tco", "z aI\td e\tk @U");
result.add("zy-\tgote", "z aI\tg @U t");
result.add("zysk", "z aI s k");
result.add("zyu-\tga-\tnov", "z j u:\tg Q\tn Q v");
result.add("zyu-\tga-\tnov's", "z j u:\tg Q\tn Q v z");
