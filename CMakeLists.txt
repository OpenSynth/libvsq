CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

PROJECT(libvsq)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY lib)
IF(MSVC)
  ADD_DEFINITIONS("/wd4018")
ELSE()
  IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    IF(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
      MESSAGE(FATAL_ERROR "GCC version must be at least 4.8!")
    ELSEIF(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.1)
      SET(CMAKE_CXX_FLAGS "-std=c++1y")
    ELSE()
      SET(CMAKE_CXX_FLAGS "-std=c++14")
    ENDIF()
  ELSE()
    SET(CMAKE_CXX_FLAGS "-std=c++14")
  ENDIF()
ENDIF()
SET(COVERAGE OFF CACHE BOOL "Enable gcov")

IF(COVERAGE)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -coverage")
ENDIF()

FILE(GLOB_RECURSE _libvsq_src
    include/*.hpp
    src/*.cpp)

ADD_LIBRARY(vsq STATIC
  ${_libvsq_src}
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/tinyxml2/tinyxml2.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/tinyxml2/tinyxml2.h)

IF (NOT CMAKE_VERSION VERSION_LESS 2.8.12)
  TARGET_INCLUDE_DIRECTORIES(vsq PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
  TARGET_INCLUDE_DIRECTORIES(vsq PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/ext/tinyxml2)
ELSE()
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/ext/tinyxml2)
ENDIF()

ADD_SUBDIRECTORY(tests)
